// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Cisco SIG Credentials feature template.
//   - Minimum SD-WAN Manager version: `15.0.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewCiscoSigCredentialsFeatureTemplate(ctx, "example", &sdwan.CiscoSigCredentialsFeatureTemplateArgs{
//				Name:        pulumi.String("Example"),
//				Description: pulumi.String("My Example"),
//				DeviceTypes: pulumi.StringArray{
//					pulumi.String("vedge-C8000V"),
//				},
//				ZscalerOrganization:    pulumi.String("org1"),
//				ZscalerPartnerBaseUri:  pulumi.String("abc"),
//				ZscalerUsername:        pulumi.String("user1"),
//				ZscalerPassword:        pulumi.String("password123"),
//				ZscalerCloudName:       pulumi.Int(1),
//				ZscalerPartnerUsername: pulumi.String("partner1"),
//				ZscalerPartnerPassword: pulumi.String("password123"),
//				ZscalerPartnerApiKey:   pulumi.String("key123"),
//				UmbrellaApiKey:         pulumi.String("key123"),
//				UmbrellaApiSecret:      pulumi.String("secret123"),
//				UmbrellaOrganizationId: pulumi.String("org1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/ciscoSigCredentialsFeatureTemplate:CiscoSigCredentialsFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type CiscoSigCredentialsFeatureTemplate struct {
	pulumi.CustomResourceState

	// The description of the feature template
	Description pulumi.StringOutput `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayOutput `pulumi:"deviceTypes"`
	// The name of the feature template
	Name pulumi.StringOutput `pulumi:"name"`
	// The template type
	TemplateType pulumi.StringOutput `pulumi:"templateType"`
	// API Key
	UmbrellaApiKey pulumi.StringPtrOutput `pulumi:"umbrellaApiKey"`
	// Variable name
	UmbrellaApiKeyVariable pulumi.StringPtrOutput `pulumi:"umbrellaApiKeyVariable"`
	// API Secret
	UmbrellaApiSecret pulumi.StringPtrOutput `pulumi:"umbrellaApiSecret"`
	// Variable name
	UmbrellaApiSecretVariable pulumi.StringPtrOutput `pulumi:"umbrellaApiSecretVariable"`
	// Ord ID
	UmbrellaOrganizationId pulumi.StringPtrOutput `pulumi:"umbrellaOrganizationId"`
	// Variable name
	UmbrellaOrganizationIdVariable pulumi.StringPtrOutput `pulumi:"umbrellaOrganizationIdVariable"`
	// The version of the feature template
	Version pulumi.IntOutput `pulumi:"version"`
	// Third Party Cloud Name - Range: `0`-`255`
	ZscalerCloudName pulumi.IntPtrOutput `pulumi:"zscalerCloudName"`
	// Variable name
	ZscalerCloudNameVariable pulumi.StringPtrOutput `pulumi:"zscalerCloudNameVariable"`
	// Organization Name
	ZscalerOrganization pulumi.StringPtrOutput `pulumi:"zscalerOrganization"`
	// Variable name
	ZscalerOrganizationVariable pulumi.StringPtrOutput `pulumi:"zscalerOrganizationVariable"`
	// Partner API Key
	ZscalerPartnerApiKey pulumi.StringPtrOutput `pulumi:"zscalerPartnerApiKey"`
	// Variable name
	ZscalerPartnerApiKeyVariable pulumi.StringPtrOutput `pulumi:"zscalerPartnerApiKeyVariable"`
	// Partner Base URI to be used in REST calls
	ZscalerPartnerBaseUri pulumi.StringPtrOutput `pulumi:"zscalerPartnerBaseUri"`
	// Variable name
	ZscalerPartnerBaseUriVariable pulumi.StringPtrOutput `pulumi:"zscalerPartnerBaseUriVariable"`
	// Partner Password
	ZscalerPartnerPassword pulumi.StringPtrOutput `pulumi:"zscalerPartnerPassword"`
	// Variable name
	ZscalerPartnerPasswordVariable pulumi.StringPtrOutput `pulumi:"zscalerPartnerPasswordVariable"`
	// Partner User Name
	ZscalerPartnerUsername pulumi.StringPtrOutput `pulumi:"zscalerPartnerUsername"`
	// Variable name
	ZscalerPartnerUsernameVariable pulumi.StringPtrOutput `pulumi:"zscalerPartnerUsernameVariable"`
	// Password of Zscaler partner account
	ZscalerPassword pulumi.StringPtrOutput `pulumi:"zscalerPassword"`
	// Variable name
	ZscalerPasswordVariable pulumi.StringPtrOutput `pulumi:"zscalerPasswordVariable"`
	// Username of Zscaler partner account
	ZscalerUsername pulumi.StringPtrOutput `pulumi:"zscalerUsername"`
	// Variable name
	ZscalerUsernameVariable pulumi.StringPtrOutput `pulumi:"zscalerUsernameVariable"`
}

// NewCiscoSigCredentialsFeatureTemplate registers a new resource with the given unique name, arguments, and options.
func NewCiscoSigCredentialsFeatureTemplate(ctx *pulumi.Context,
	name string, args *CiscoSigCredentialsFeatureTemplateArgs, opts ...pulumi.ResourceOption) (*CiscoSigCredentialsFeatureTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.DeviceTypes == nil {
		return nil, errors.New("invalid value for required argument 'DeviceTypes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CiscoSigCredentialsFeatureTemplate
	err := ctx.RegisterResource("sdwan:index/ciscoSigCredentialsFeatureTemplate:CiscoSigCredentialsFeatureTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCiscoSigCredentialsFeatureTemplate gets an existing CiscoSigCredentialsFeatureTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCiscoSigCredentialsFeatureTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CiscoSigCredentialsFeatureTemplateState, opts ...pulumi.ResourceOption) (*CiscoSigCredentialsFeatureTemplate, error) {
	var resource CiscoSigCredentialsFeatureTemplate
	err := ctx.ReadResource("sdwan:index/ciscoSigCredentialsFeatureTemplate:CiscoSigCredentialsFeatureTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CiscoSigCredentialsFeatureTemplate resources.
type ciscoSigCredentialsFeatureTemplateState struct {
	// The description of the feature template
	Description *string `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// The template type
	TemplateType *string `pulumi:"templateType"`
	// API Key
	UmbrellaApiKey *string `pulumi:"umbrellaApiKey"`
	// Variable name
	UmbrellaApiKeyVariable *string `pulumi:"umbrellaApiKeyVariable"`
	// API Secret
	UmbrellaApiSecret *string `pulumi:"umbrellaApiSecret"`
	// Variable name
	UmbrellaApiSecretVariable *string `pulumi:"umbrellaApiSecretVariable"`
	// Ord ID
	UmbrellaOrganizationId *string `pulumi:"umbrellaOrganizationId"`
	// Variable name
	UmbrellaOrganizationIdVariable *string `pulumi:"umbrellaOrganizationIdVariable"`
	// The version of the feature template
	Version *int `pulumi:"version"`
	// Third Party Cloud Name - Range: `0`-`255`
	ZscalerCloudName *int `pulumi:"zscalerCloudName"`
	// Variable name
	ZscalerCloudNameVariable *string `pulumi:"zscalerCloudNameVariable"`
	// Organization Name
	ZscalerOrganization *string `pulumi:"zscalerOrganization"`
	// Variable name
	ZscalerOrganizationVariable *string `pulumi:"zscalerOrganizationVariable"`
	// Partner API Key
	ZscalerPartnerApiKey *string `pulumi:"zscalerPartnerApiKey"`
	// Variable name
	ZscalerPartnerApiKeyVariable *string `pulumi:"zscalerPartnerApiKeyVariable"`
	// Partner Base URI to be used in REST calls
	ZscalerPartnerBaseUri *string `pulumi:"zscalerPartnerBaseUri"`
	// Variable name
	ZscalerPartnerBaseUriVariable *string `pulumi:"zscalerPartnerBaseUriVariable"`
	// Partner Password
	ZscalerPartnerPassword *string `pulumi:"zscalerPartnerPassword"`
	// Variable name
	ZscalerPartnerPasswordVariable *string `pulumi:"zscalerPartnerPasswordVariable"`
	// Partner User Name
	ZscalerPartnerUsername *string `pulumi:"zscalerPartnerUsername"`
	// Variable name
	ZscalerPartnerUsernameVariable *string `pulumi:"zscalerPartnerUsernameVariable"`
	// Password of Zscaler partner account
	ZscalerPassword *string `pulumi:"zscalerPassword"`
	// Variable name
	ZscalerPasswordVariable *string `pulumi:"zscalerPasswordVariable"`
	// Username of Zscaler partner account
	ZscalerUsername *string `pulumi:"zscalerUsername"`
	// Variable name
	ZscalerUsernameVariable *string `pulumi:"zscalerUsernameVariable"`
}

type CiscoSigCredentialsFeatureTemplateState struct {
	// The description of the feature template
	Description pulumi.StringPtrInput
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// The template type
	TemplateType pulumi.StringPtrInput
	// API Key
	UmbrellaApiKey pulumi.StringPtrInput
	// Variable name
	UmbrellaApiKeyVariable pulumi.StringPtrInput
	// API Secret
	UmbrellaApiSecret pulumi.StringPtrInput
	// Variable name
	UmbrellaApiSecretVariable pulumi.StringPtrInput
	// Ord ID
	UmbrellaOrganizationId pulumi.StringPtrInput
	// Variable name
	UmbrellaOrganizationIdVariable pulumi.StringPtrInput
	// The version of the feature template
	Version pulumi.IntPtrInput
	// Third Party Cloud Name - Range: `0`-`255`
	ZscalerCloudName pulumi.IntPtrInput
	// Variable name
	ZscalerCloudNameVariable pulumi.StringPtrInput
	// Organization Name
	ZscalerOrganization pulumi.StringPtrInput
	// Variable name
	ZscalerOrganizationVariable pulumi.StringPtrInput
	// Partner API Key
	ZscalerPartnerApiKey pulumi.StringPtrInput
	// Variable name
	ZscalerPartnerApiKeyVariable pulumi.StringPtrInput
	// Partner Base URI to be used in REST calls
	ZscalerPartnerBaseUri pulumi.StringPtrInput
	// Variable name
	ZscalerPartnerBaseUriVariable pulumi.StringPtrInput
	// Partner Password
	ZscalerPartnerPassword pulumi.StringPtrInput
	// Variable name
	ZscalerPartnerPasswordVariable pulumi.StringPtrInput
	// Partner User Name
	ZscalerPartnerUsername pulumi.StringPtrInput
	// Variable name
	ZscalerPartnerUsernameVariable pulumi.StringPtrInput
	// Password of Zscaler partner account
	ZscalerPassword pulumi.StringPtrInput
	// Variable name
	ZscalerPasswordVariable pulumi.StringPtrInput
	// Username of Zscaler partner account
	ZscalerUsername pulumi.StringPtrInput
	// Variable name
	ZscalerUsernameVariable pulumi.StringPtrInput
}

func (CiscoSigCredentialsFeatureTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*ciscoSigCredentialsFeatureTemplateState)(nil)).Elem()
}

type ciscoSigCredentialsFeatureTemplateArgs struct {
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// API Key
	UmbrellaApiKey *string `pulumi:"umbrellaApiKey"`
	// Variable name
	UmbrellaApiKeyVariable *string `pulumi:"umbrellaApiKeyVariable"`
	// API Secret
	UmbrellaApiSecret *string `pulumi:"umbrellaApiSecret"`
	// Variable name
	UmbrellaApiSecretVariable *string `pulumi:"umbrellaApiSecretVariable"`
	// Ord ID
	UmbrellaOrganizationId *string `pulumi:"umbrellaOrganizationId"`
	// Variable name
	UmbrellaOrganizationIdVariable *string `pulumi:"umbrellaOrganizationIdVariable"`
	// Third Party Cloud Name - Range: `0`-`255`
	ZscalerCloudName *int `pulumi:"zscalerCloudName"`
	// Variable name
	ZscalerCloudNameVariable *string `pulumi:"zscalerCloudNameVariable"`
	// Organization Name
	ZscalerOrganization *string `pulumi:"zscalerOrganization"`
	// Variable name
	ZscalerOrganizationVariable *string `pulumi:"zscalerOrganizationVariable"`
	// Partner API Key
	ZscalerPartnerApiKey *string `pulumi:"zscalerPartnerApiKey"`
	// Variable name
	ZscalerPartnerApiKeyVariable *string `pulumi:"zscalerPartnerApiKeyVariable"`
	// Partner Base URI to be used in REST calls
	ZscalerPartnerBaseUri *string `pulumi:"zscalerPartnerBaseUri"`
	// Variable name
	ZscalerPartnerBaseUriVariable *string `pulumi:"zscalerPartnerBaseUriVariable"`
	// Partner Password
	ZscalerPartnerPassword *string `pulumi:"zscalerPartnerPassword"`
	// Variable name
	ZscalerPartnerPasswordVariable *string `pulumi:"zscalerPartnerPasswordVariable"`
	// Partner User Name
	ZscalerPartnerUsername *string `pulumi:"zscalerPartnerUsername"`
	// Variable name
	ZscalerPartnerUsernameVariable *string `pulumi:"zscalerPartnerUsernameVariable"`
	// Password of Zscaler partner account
	ZscalerPassword *string `pulumi:"zscalerPassword"`
	// Variable name
	ZscalerPasswordVariable *string `pulumi:"zscalerPasswordVariable"`
	// Username of Zscaler partner account
	ZscalerUsername *string `pulumi:"zscalerUsername"`
	// Variable name
	ZscalerUsernameVariable *string `pulumi:"zscalerUsernameVariable"`
}

// The set of arguments for constructing a CiscoSigCredentialsFeatureTemplate resource.
type CiscoSigCredentialsFeatureTemplateArgs struct {
	// The description of the feature template
	Description pulumi.StringInput
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// API Key
	UmbrellaApiKey pulumi.StringPtrInput
	// Variable name
	UmbrellaApiKeyVariable pulumi.StringPtrInput
	// API Secret
	UmbrellaApiSecret pulumi.StringPtrInput
	// Variable name
	UmbrellaApiSecretVariable pulumi.StringPtrInput
	// Ord ID
	UmbrellaOrganizationId pulumi.StringPtrInput
	// Variable name
	UmbrellaOrganizationIdVariable pulumi.StringPtrInput
	// Third Party Cloud Name - Range: `0`-`255`
	ZscalerCloudName pulumi.IntPtrInput
	// Variable name
	ZscalerCloudNameVariable pulumi.StringPtrInput
	// Organization Name
	ZscalerOrganization pulumi.StringPtrInput
	// Variable name
	ZscalerOrganizationVariable pulumi.StringPtrInput
	// Partner API Key
	ZscalerPartnerApiKey pulumi.StringPtrInput
	// Variable name
	ZscalerPartnerApiKeyVariable pulumi.StringPtrInput
	// Partner Base URI to be used in REST calls
	ZscalerPartnerBaseUri pulumi.StringPtrInput
	// Variable name
	ZscalerPartnerBaseUriVariable pulumi.StringPtrInput
	// Partner Password
	ZscalerPartnerPassword pulumi.StringPtrInput
	// Variable name
	ZscalerPartnerPasswordVariable pulumi.StringPtrInput
	// Partner User Name
	ZscalerPartnerUsername pulumi.StringPtrInput
	// Variable name
	ZscalerPartnerUsernameVariable pulumi.StringPtrInput
	// Password of Zscaler partner account
	ZscalerPassword pulumi.StringPtrInput
	// Variable name
	ZscalerPasswordVariable pulumi.StringPtrInput
	// Username of Zscaler partner account
	ZscalerUsername pulumi.StringPtrInput
	// Variable name
	ZscalerUsernameVariable pulumi.StringPtrInput
}

func (CiscoSigCredentialsFeatureTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ciscoSigCredentialsFeatureTemplateArgs)(nil)).Elem()
}

type CiscoSigCredentialsFeatureTemplateInput interface {
	pulumi.Input

	ToCiscoSigCredentialsFeatureTemplateOutput() CiscoSigCredentialsFeatureTemplateOutput
	ToCiscoSigCredentialsFeatureTemplateOutputWithContext(ctx context.Context) CiscoSigCredentialsFeatureTemplateOutput
}

func (*CiscoSigCredentialsFeatureTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**CiscoSigCredentialsFeatureTemplate)(nil)).Elem()
}

func (i *CiscoSigCredentialsFeatureTemplate) ToCiscoSigCredentialsFeatureTemplateOutput() CiscoSigCredentialsFeatureTemplateOutput {
	return i.ToCiscoSigCredentialsFeatureTemplateOutputWithContext(context.Background())
}

func (i *CiscoSigCredentialsFeatureTemplate) ToCiscoSigCredentialsFeatureTemplateOutputWithContext(ctx context.Context) CiscoSigCredentialsFeatureTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CiscoSigCredentialsFeatureTemplateOutput)
}

// CiscoSigCredentialsFeatureTemplateArrayInput is an input type that accepts CiscoSigCredentialsFeatureTemplateArray and CiscoSigCredentialsFeatureTemplateArrayOutput values.
// You can construct a concrete instance of `CiscoSigCredentialsFeatureTemplateArrayInput` via:
//
//	CiscoSigCredentialsFeatureTemplateArray{ CiscoSigCredentialsFeatureTemplateArgs{...} }
type CiscoSigCredentialsFeatureTemplateArrayInput interface {
	pulumi.Input

	ToCiscoSigCredentialsFeatureTemplateArrayOutput() CiscoSigCredentialsFeatureTemplateArrayOutput
	ToCiscoSigCredentialsFeatureTemplateArrayOutputWithContext(context.Context) CiscoSigCredentialsFeatureTemplateArrayOutput
}

type CiscoSigCredentialsFeatureTemplateArray []CiscoSigCredentialsFeatureTemplateInput

func (CiscoSigCredentialsFeatureTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CiscoSigCredentialsFeatureTemplate)(nil)).Elem()
}

func (i CiscoSigCredentialsFeatureTemplateArray) ToCiscoSigCredentialsFeatureTemplateArrayOutput() CiscoSigCredentialsFeatureTemplateArrayOutput {
	return i.ToCiscoSigCredentialsFeatureTemplateArrayOutputWithContext(context.Background())
}

func (i CiscoSigCredentialsFeatureTemplateArray) ToCiscoSigCredentialsFeatureTemplateArrayOutputWithContext(ctx context.Context) CiscoSigCredentialsFeatureTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CiscoSigCredentialsFeatureTemplateArrayOutput)
}

// CiscoSigCredentialsFeatureTemplateMapInput is an input type that accepts CiscoSigCredentialsFeatureTemplateMap and CiscoSigCredentialsFeatureTemplateMapOutput values.
// You can construct a concrete instance of `CiscoSigCredentialsFeatureTemplateMapInput` via:
//
//	CiscoSigCredentialsFeatureTemplateMap{ "key": CiscoSigCredentialsFeatureTemplateArgs{...} }
type CiscoSigCredentialsFeatureTemplateMapInput interface {
	pulumi.Input

	ToCiscoSigCredentialsFeatureTemplateMapOutput() CiscoSigCredentialsFeatureTemplateMapOutput
	ToCiscoSigCredentialsFeatureTemplateMapOutputWithContext(context.Context) CiscoSigCredentialsFeatureTemplateMapOutput
}

type CiscoSigCredentialsFeatureTemplateMap map[string]CiscoSigCredentialsFeatureTemplateInput

func (CiscoSigCredentialsFeatureTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CiscoSigCredentialsFeatureTemplate)(nil)).Elem()
}

func (i CiscoSigCredentialsFeatureTemplateMap) ToCiscoSigCredentialsFeatureTemplateMapOutput() CiscoSigCredentialsFeatureTemplateMapOutput {
	return i.ToCiscoSigCredentialsFeatureTemplateMapOutputWithContext(context.Background())
}

func (i CiscoSigCredentialsFeatureTemplateMap) ToCiscoSigCredentialsFeatureTemplateMapOutputWithContext(ctx context.Context) CiscoSigCredentialsFeatureTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CiscoSigCredentialsFeatureTemplateMapOutput)
}

type CiscoSigCredentialsFeatureTemplateOutput struct{ *pulumi.OutputState }

func (CiscoSigCredentialsFeatureTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CiscoSigCredentialsFeatureTemplate)(nil)).Elem()
}

func (o CiscoSigCredentialsFeatureTemplateOutput) ToCiscoSigCredentialsFeatureTemplateOutput() CiscoSigCredentialsFeatureTemplateOutput {
	return o
}

func (o CiscoSigCredentialsFeatureTemplateOutput) ToCiscoSigCredentialsFeatureTemplateOutputWithContext(ctx context.Context) CiscoSigCredentialsFeatureTemplateOutput {
	return o
}

// The description of the feature template
func (o CiscoSigCredentialsFeatureTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
func (o CiscoSigCredentialsFeatureTemplateOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringArrayOutput { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// The name of the feature template
func (o CiscoSigCredentialsFeatureTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The template type
func (o CiscoSigCredentialsFeatureTemplateOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringOutput { return v.TemplateType }).(pulumi.StringOutput)
}

// API Key
func (o CiscoSigCredentialsFeatureTemplateOutput) UmbrellaApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput { return v.UmbrellaApiKey }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoSigCredentialsFeatureTemplateOutput) UmbrellaApiKeyVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput { return v.UmbrellaApiKeyVariable }).(pulumi.StringPtrOutput)
}

// API Secret
func (o CiscoSigCredentialsFeatureTemplateOutput) UmbrellaApiSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput { return v.UmbrellaApiSecret }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoSigCredentialsFeatureTemplateOutput) UmbrellaApiSecretVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput { return v.UmbrellaApiSecretVariable }).(pulumi.StringPtrOutput)
}

// Ord ID
func (o CiscoSigCredentialsFeatureTemplateOutput) UmbrellaOrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput { return v.UmbrellaOrganizationId }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoSigCredentialsFeatureTemplateOutput) UmbrellaOrganizationIdVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput {
		return v.UmbrellaOrganizationIdVariable
	}).(pulumi.StringPtrOutput)
}

// The version of the feature template
func (o CiscoSigCredentialsFeatureTemplateOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

// Third Party Cloud Name - Range: `0`-`255`
func (o CiscoSigCredentialsFeatureTemplateOutput) ZscalerCloudName() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.IntPtrOutput { return v.ZscalerCloudName }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoSigCredentialsFeatureTemplateOutput) ZscalerCloudNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput { return v.ZscalerCloudNameVariable }).(pulumi.StringPtrOutput)
}

// Organization Name
func (o CiscoSigCredentialsFeatureTemplateOutput) ZscalerOrganization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput { return v.ZscalerOrganization }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoSigCredentialsFeatureTemplateOutput) ZscalerOrganizationVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput {
		return v.ZscalerOrganizationVariable
	}).(pulumi.StringPtrOutput)
}

// Partner API Key
func (o CiscoSigCredentialsFeatureTemplateOutput) ZscalerPartnerApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput { return v.ZscalerPartnerApiKey }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoSigCredentialsFeatureTemplateOutput) ZscalerPartnerApiKeyVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput {
		return v.ZscalerPartnerApiKeyVariable
	}).(pulumi.StringPtrOutput)
}

// Partner Base URI to be used in REST calls
func (o CiscoSigCredentialsFeatureTemplateOutput) ZscalerPartnerBaseUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput { return v.ZscalerPartnerBaseUri }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoSigCredentialsFeatureTemplateOutput) ZscalerPartnerBaseUriVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput {
		return v.ZscalerPartnerBaseUriVariable
	}).(pulumi.StringPtrOutput)
}

// Partner Password
func (o CiscoSigCredentialsFeatureTemplateOutput) ZscalerPartnerPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput { return v.ZscalerPartnerPassword }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoSigCredentialsFeatureTemplateOutput) ZscalerPartnerPasswordVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput {
		return v.ZscalerPartnerPasswordVariable
	}).(pulumi.StringPtrOutput)
}

// Partner User Name
func (o CiscoSigCredentialsFeatureTemplateOutput) ZscalerPartnerUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput { return v.ZscalerPartnerUsername }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoSigCredentialsFeatureTemplateOutput) ZscalerPartnerUsernameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput {
		return v.ZscalerPartnerUsernameVariable
	}).(pulumi.StringPtrOutput)
}

// Password of Zscaler partner account
func (o CiscoSigCredentialsFeatureTemplateOutput) ZscalerPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput { return v.ZscalerPassword }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoSigCredentialsFeatureTemplateOutput) ZscalerPasswordVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput { return v.ZscalerPasswordVariable }).(pulumi.StringPtrOutput)
}

// Username of Zscaler partner account
func (o CiscoSigCredentialsFeatureTemplateOutput) ZscalerUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput { return v.ZscalerUsername }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoSigCredentialsFeatureTemplateOutput) ZscalerUsernameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSigCredentialsFeatureTemplate) pulumi.StringPtrOutput { return v.ZscalerUsernameVariable }).(pulumi.StringPtrOutput)
}

type CiscoSigCredentialsFeatureTemplateArrayOutput struct{ *pulumi.OutputState }

func (CiscoSigCredentialsFeatureTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CiscoSigCredentialsFeatureTemplate)(nil)).Elem()
}

func (o CiscoSigCredentialsFeatureTemplateArrayOutput) ToCiscoSigCredentialsFeatureTemplateArrayOutput() CiscoSigCredentialsFeatureTemplateArrayOutput {
	return o
}

func (o CiscoSigCredentialsFeatureTemplateArrayOutput) ToCiscoSigCredentialsFeatureTemplateArrayOutputWithContext(ctx context.Context) CiscoSigCredentialsFeatureTemplateArrayOutput {
	return o
}

func (o CiscoSigCredentialsFeatureTemplateArrayOutput) Index(i pulumi.IntInput) CiscoSigCredentialsFeatureTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CiscoSigCredentialsFeatureTemplate {
		return vs[0].([]*CiscoSigCredentialsFeatureTemplate)[vs[1].(int)]
	}).(CiscoSigCredentialsFeatureTemplateOutput)
}

type CiscoSigCredentialsFeatureTemplateMapOutput struct{ *pulumi.OutputState }

func (CiscoSigCredentialsFeatureTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CiscoSigCredentialsFeatureTemplate)(nil)).Elem()
}

func (o CiscoSigCredentialsFeatureTemplateMapOutput) ToCiscoSigCredentialsFeatureTemplateMapOutput() CiscoSigCredentialsFeatureTemplateMapOutput {
	return o
}

func (o CiscoSigCredentialsFeatureTemplateMapOutput) ToCiscoSigCredentialsFeatureTemplateMapOutputWithContext(ctx context.Context) CiscoSigCredentialsFeatureTemplateMapOutput {
	return o
}

func (o CiscoSigCredentialsFeatureTemplateMapOutput) MapIndex(k pulumi.StringInput) CiscoSigCredentialsFeatureTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CiscoSigCredentialsFeatureTemplate {
		return vs[0].(map[string]*CiscoSigCredentialsFeatureTemplate)[vs[1].(string)]
	}).(CiscoSigCredentialsFeatureTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CiscoSigCredentialsFeatureTemplateInput)(nil)).Elem(), &CiscoSigCredentialsFeatureTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*CiscoSigCredentialsFeatureTemplateArrayInput)(nil)).Elem(), CiscoSigCredentialsFeatureTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CiscoSigCredentialsFeatureTemplateMapInput)(nil)).Elem(), CiscoSigCredentialsFeatureTemplateMap{})
	pulumi.RegisterOutputType(CiscoSigCredentialsFeatureTemplateOutput{})
	pulumi.RegisterOutputType(CiscoSigCredentialsFeatureTemplateArrayOutput{})
	pulumi.RegisterOutputType(CiscoSigCredentialsFeatureTemplateMapOutput{})
}
