// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the System MRF Feature.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupSystemMrfFeature(ctx, &sdwan.LookupSystemMrfFeatureArgs{
//				Id:               "f6b2c44c-693c-4763-b010-895aa3d236bd",
//				FeatureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSystemMrfFeature(ctx *pulumi.Context, args *LookupSystemMrfFeatureArgs, opts ...pulumi.InvokeOption) (*LookupSystemMrfFeatureResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSystemMrfFeatureResult
	err := ctx.Invoke("sdwan:index/getSystemMrfFeature:getSystemMrfFeature", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSystemMrfFeature.
type LookupSystemMrfFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
}

// A collection of values returned by getSystemMrfFeature.
type LookupSystemMrfFeatureResult struct {
	// The description of the Feature
	Description string `pulumi:"description"`
	// Enable migration mode to Multi-Region Fabric
	EnableMigrationToMrf string `pulumi:"enableMigrationToMrf"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
	// Set BGP community during migration from BGP-core based network
	MigrationBgpCommunity int `pulumi:"migrationBgpCommunity"`
	// The name of the Feature
	Name string `pulumi:"name"`
	// Set region ID
	RegionId int `pulumi:"regionId"`
	// Set the role for router
	Role string `pulumi:"role"`
	// Variable name
	RoleVariable string `pulumi:"roleVariable"`
	// Set secondary region ID
	SecondaryRegionId int `pulumi:"secondaryRegionId"`
	// Variable name
	SecondaryRegionIdVariable string `pulumi:"secondaryRegionIdVariable"`
	// The version of the Feature
	Version int `pulumi:"version"`
}

func LookupSystemMrfFeatureOutput(ctx *pulumi.Context, args LookupSystemMrfFeatureOutputArgs, opts ...pulumi.InvokeOption) LookupSystemMrfFeatureResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSystemMrfFeatureResultOutput, error) {
			args := v.(LookupSystemMrfFeatureArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupSystemMrfFeatureResult
			secret, err := ctx.InvokePackageRaw("sdwan:index/getSystemMrfFeature:getSystemMrfFeature", args, &rv, "", opts...)
			if err != nil {
				return LookupSystemMrfFeatureResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupSystemMrfFeatureResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupSystemMrfFeatureResultOutput), nil
			}
			return output, nil
		}).(LookupSystemMrfFeatureResultOutput)
}

// A collection of arguments for invoking getSystemMrfFeature.
type LookupSystemMrfFeatureOutputArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput `pulumi:"featureProfileId"`
	// The id of the Feature
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupSystemMrfFeatureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemMrfFeatureArgs)(nil)).Elem()
}

// A collection of values returned by getSystemMrfFeature.
type LookupSystemMrfFeatureResultOutput struct{ *pulumi.OutputState }

func (LookupSystemMrfFeatureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemMrfFeatureResult)(nil)).Elem()
}

func (o LookupSystemMrfFeatureResultOutput) ToLookupSystemMrfFeatureResultOutput() LookupSystemMrfFeatureResultOutput {
	return o
}

func (o LookupSystemMrfFeatureResultOutput) ToLookupSystemMrfFeatureResultOutputWithContext(ctx context.Context) LookupSystemMrfFeatureResultOutput {
	return o
}

// The description of the Feature
func (o LookupSystemMrfFeatureResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemMrfFeatureResult) string { return v.Description }).(pulumi.StringOutput)
}

// Enable migration mode to Multi-Region Fabric
func (o LookupSystemMrfFeatureResultOutput) EnableMigrationToMrf() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemMrfFeatureResult) string { return v.EnableMigrationToMrf }).(pulumi.StringOutput)
}

// Feature Profile ID
func (o LookupSystemMrfFeatureResultOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemMrfFeatureResult) string { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The id of the Feature
func (o LookupSystemMrfFeatureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemMrfFeatureResult) string { return v.Id }).(pulumi.StringOutput)
}

// Set BGP community during migration from BGP-core based network
func (o LookupSystemMrfFeatureResultOutput) MigrationBgpCommunity() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemMrfFeatureResult) int { return v.MigrationBgpCommunity }).(pulumi.IntOutput)
}

// The name of the Feature
func (o LookupSystemMrfFeatureResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemMrfFeatureResult) string { return v.Name }).(pulumi.StringOutput)
}

// Set region ID
func (o LookupSystemMrfFeatureResultOutput) RegionId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemMrfFeatureResult) int { return v.RegionId }).(pulumi.IntOutput)
}

// Set the role for router
func (o LookupSystemMrfFeatureResultOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemMrfFeatureResult) string { return v.Role }).(pulumi.StringOutput)
}

// Variable name
func (o LookupSystemMrfFeatureResultOutput) RoleVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemMrfFeatureResult) string { return v.RoleVariable }).(pulumi.StringOutput)
}

// Set secondary region ID
func (o LookupSystemMrfFeatureResultOutput) SecondaryRegionId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemMrfFeatureResult) int { return v.SecondaryRegionId }).(pulumi.IntOutput)
}

// Variable name
func (o LookupSystemMrfFeatureResultOutput) SecondaryRegionIdVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemMrfFeatureResult) string { return v.SecondaryRegionIdVariable }).(pulumi.StringOutput)
}

// The version of the Feature
func (o LookupSystemMrfFeatureResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemMrfFeatureResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSystemMrfFeatureResultOutput{})
}
