// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Policy Object Preferred Color Group Policy_object.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewPolicyObjectPreferredColorGroup(ctx, "example", &sdwan.PolicyObjectPreferredColorGroupArgs{
//				Name:             pulumi.String("Example"),
//				Description:      pulumi.String("My Example"),
//				FeatureProfileId: pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				Entries: sdwan.PolicyObjectPreferredColorGroupEntryArray{
//					&sdwan.PolicyObjectPreferredColorGroupEntryArgs{
//						Primary_color_preference: []string{
//							"default",
//						},
//						Primary_path_preference: "direct-path",
//						Secondary_color_preference: []string{
//							"bronze",
//						},
//						Secondary_path_preference: "all-paths",
//						Tertiary_color_preference: []string{
//							"blue",
//						},
//						Tertiary_path_preference: "all-paths",
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "policy_object_preferred_color_group_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/policyObjectPreferredColorGroup:PolicyObjectPreferredColorGroup example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type PolicyObjectPreferredColorGroup struct {
	pulumi.CustomResourceState

	// The description of the Policy_object
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Preferred Color Group List
	Entries PolicyObjectPreferredColorGroupEntryArrayOutput `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the Policy_object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewPolicyObjectPreferredColorGroup registers a new resource with the given unique name, arguments, and options.
func NewPolicyObjectPreferredColorGroup(ctx *pulumi.Context,
	name string, args *PolicyObjectPreferredColorGroupArgs, opts ...pulumi.ResourceOption) (*PolicyObjectPreferredColorGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyObjectPreferredColorGroup
	err := ctx.RegisterResource("sdwan:index/policyObjectPreferredColorGroup:PolicyObjectPreferredColorGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyObjectPreferredColorGroup gets an existing PolicyObjectPreferredColorGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyObjectPreferredColorGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyObjectPreferredColorGroupState, opts ...pulumi.ResourceOption) (*PolicyObjectPreferredColorGroup, error) {
	var resource PolicyObjectPreferredColorGroup
	err := ctx.ReadResource("sdwan:index/policyObjectPreferredColorGroup:PolicyObjectPreferredColorGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyObjectPreferredColorGroup resources.
type policyObjectPreferredColorGroupState struct {
	// The description of the Policy_object
	Description *string `pulumi:"description"`
	// Preferred Color Group List
	Entries []PolicyObjectPreferredColorGroupEntry `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name *string `pulumi:"name"`
	// The version of the Policy_object
	Version *int `pulumi:"version"`
}

type PolicyObjectPreferredColorGroupState struct {
	// The description of the Policy_object
	Description pulumi.StringPtrInput
	// Preferred Color Group List
	Entries PolicyObjectPreferredColorGroupEntryArrayInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Policy_object
	Name pulumi.StringPtrInput
	// The version of the Policy_object
	Version pulumi.IntPtrInput
}

func (PolicyObjectPreferredColorGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyObjectPreferredColorGroupState)(nil)).Elem()
}

type policyObjectPreferredColorGroupArgs struct {
	// The description of the Policy_object
	Description *string `pulumi:"description"`
	// Preferred Color Group List
	Entries []PolicyObjectPreferredColorGroupEntry `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a PolicyObjectPreferredColorGroup resource.
type PolicyObjectPreferredColorGroupArgs struct {
	// The description of the Policy_object
	Description pulumi.StringPtrInput
	// Preferred Color Group List
	Entries PolicyObjectPreferredColorGroupEntryArrayInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// The name of the Policy_object
	Name pulumi.StringPtrInput
}

func (PolicyObjectPreferredColorGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyObjectPreferredColorGroupArgs)(nil)).Elem()
}

type PolicyObjectPreferredColorGroupInput interface {
	pulumi.Input

	ToPolicyObjectPreferredColorGroupOutput() PolicyObjectPreferredColorGroupOutput
	ToPolicyObjectPreferredColorGroupOutputWithContext(ctx context.Context) PolicyObjectPreferredColorGroupOutput
}

func (*PolicyObjectPreferredColorGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyObjectPreferredColorGroup)(nil)).Elem()
}

func (i *PolicyObjectPreferredColorGroup) ToPolicyObjectPreferredColorGroupOutput() PolicyObjectPreferredColorGroupOutput {
	return i.ToPolicyObjectPreferredColorGroupOutputWithContext(context.Background())
}

func (i *PolicyObjectPreferredColorGroup) ToPolicyObjectPreferredColorGroupOutputWithContext(ctx context.Context) PolicyObjectPreferredColorGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectPreferredColorGroupOutput)
}

// PolicyObjectPreferredColorGroupArrayInput is an input type that accepts PolicyObjectPreferredColorGroupArray and PolicyObjectPreferredColorGroupArrayOutput values.
// You can construct a concrete instance of `PolicyObjectPreferredColorGroupArrayInput` via:
//
//	PolicyObjectPreferredColorGroupArray{ PolicyObjectPreferredColorGroupArgs{...} }
type PolicyObjectPreferredColorGroupArrayInput interface {
	pulumi.Input

	ToPolicyObjectPreferredColorGroupArrayOutput() PolicyObjectPreferredColorGroupArrayOutput
	ToPolicyObjectPreferredColorGroupArrayOutputWithContext(context.Context) PolicyObjectPreferredColorGroupArrayOutput
}

type PolicyObjectPreferredColorGroupArray []PolicyObjectPreferredColorGroupInput

func (PolicyObjectPreferredColorGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyObjectPreferredColorGroup)(nil)).Elem()
}

func (i PolicyObjectPreferredColorGroupArray) ToPolicyObjectPreferredColorGroupArrayOutput() PolicyObjectPreferredColorGroupArrayOutput {
	return i.ToPolicyObjectPreferredColorGroupArrayOutputWithContext(context.Background())
}

func (i PolicyObjectPreferredColorGroupArray) ToPolicyObjectPreferredColorGroupArrayOutputWithContext(ctx context.Context) PolicyObjectPreferredColorGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectPreferredColorGroupArrayOutput)
}

// PolicyObjectPreferredColorGroupMapInput is an input type that accepts PolicyObjectPreferredColorGroupMap and PolicyObjectPreferredColorGroupMapOutput values.
// You can construct a concrete instance of `PolicyObjectPreferredColorGroupMapInput` via:
//
//	PolicyObjectPreferredColorGroupMap{ "key": PolicyObjectPreferredColorGroupArgs{...} }
type PolicyObjectPreferredColorGroupMapInput interface {
	pulumi.Input

	ToPolicyObjectPreferredColorGroupMapOutput() PolicyObjectPreferredColorGroupMapOutput
	ToPolicyObjectPreferredColorGroupMapOutputWithContext(context.Context) PolicyObjectPreferredColorGroupMapOutput
}

type PolicyObjectPreferredColorGroupMap map[string]PolicyObjectPreferredColorGroupInput

func (PolicyObjectPreferredColorGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyObjectPreferredColorGroup)(nil)).Elem()
}

func (i PolicyObjectPreferredColorGroupMap) ToPolicyObjectPreferredColorGroupMapOutput() PolicyObjectPreferredColorGroupMapOutput {
	return i.ToPolicyObjectPreferredColorGroupMapOutputWithContext(context.Background())
}

func (i PolicyObjectPreferredColorGroupMap) ToPolicyObjectPreferredColorGroupMapOutputWithContext(ctx context.Context) PolicyObjectPreferredColorGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectPreferredColorGroupMapOutput)
}

type PolicyObjectPreferredColorGroupOutput struct{ *pulumi.OutputState }

func (PolicyObjectPreferredColorGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyObjectPreferredColorGroup)(nil)).Elem()
}

func (o PolicyObjectPreferredColorGroupOutput) ToPolicyObjectPreferredColorGroupOutput() PolicyObjectPreferredColorGroupOutput {
	return o
}

func (o PolicyObjectPreferredColorGroupOutput) ToPolicyObjectPreferredColorGroupOutputWithContext(ctx context.Context) PolicyObjectPreferredColorGroupOutput {
	return o
}

// The description of the Policy_object
func (o PolicyObjectPreferredColorGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyObjectPreferredColorGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Preferred Color Group List
func (o PolicyObjectPreferredColorGroupOutput) Entries() PolicyObjectPreferredColorGroupEntryArrayOutput {
	return o.ApplyT(func(v *PolicyObjectPreferredColorGroup) PolicyObjectPreferredColorGroupEntryArrayOutput {
		return v.Entries
	}).(PolicyObjectPreferredColorGroupEntryArrayOutput)
}

// Feature Profile ID
func (o PolicyObjectPreferredColorGroupOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectPreferredColorGroup) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The name of the Policy_object
func (o PolicyObjectPreferredColorGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectPreferredColorGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the Policy_object
func (o PolicyObjectPreferredColorGroupOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *PolicyObjectPreferredColorGroup) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type PolicyObjectPreferredColorGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyObjectPreferredColorGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyObjectPreferredColorGroup)(nil)).Elem()
}

func (o PolicyObjectPreferredColorGroupArrayOutput) ToPolicyObjectPreferredColorGroupArrayOutput() PolicyObjectPreferredColorGroupArrayOutput {
	return o
}

func (o PolicyObjectPreferredColorGroupArrayOutput) ToPolicyObjectPreferredColorGroupArrayOutputWithContext(ctx context.Context) PolicyObjectPreferredColorGroupArrayOutput {
	return o
}

func (o PolicyObjectPreferredColorGroupArrayOutput) Index(i pulumi.IntInput) PolicyObjectPreferredColorGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyObjectPreferredColorGroup {
		return vs[0].([]*PolicyObjectPreferredColorGroup)[vs[1].(int)]
	}).(PolicyObjectPreferredColorGroupOutput)
}

type PolicyObjectPreferredColorGroupMapOutput struct{ *pulumi.OutputState }

func (PolicyObjectPreferredColorGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyObjectPreferredColorGroup)(nil)).Elem()
}

func (o PolicyObjectPreferredColorGroupMapOutput) ToPolicyObjectPreferredColorGroupMapOutput() PolicyObjectPreferredColorGroupMapOutput {
	return o
}

func (o PolicyObjectPreferredColorGroupMapOutput) ToPolicyObjectPreferredColorGroupMapOutputWithContext(ctx context.Context) PolicyObjectPreferredColorGroupMapOutput {
	return o
}

func (o PolicyObjectPreferredColorGroupMapOutput) MapIndex(k pulumi.StringInput) PolicyObjectPreferredColorGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyObjectPreferredColorGroup {
		return vs[0].(map[string]*PolicyObjectPreferredColorGroup)[vs[1].(string)]
	}).(PolicyObjectPreferredColorGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectPreferredColorGroupInput)(nil)).Elem(), &PolicyObjectPreferredColorGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectPreferredColorGroupArrayInput)(nil)).Elem(), PolicyObjectPreferredColorGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectPreferredColorGroupMapInput)(nil)).Elem(), PolicyObjectPreferredColorGroupMap{})
	pulumi.RegisterOutputType(PolicyObjectPreferredColorGroupOutput{})
	pulumi.RegisterOutputType(PolicyObjectPreferredColorGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyObjectPreferredColorGroupMapOutput{})
}
