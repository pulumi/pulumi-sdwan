// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the System SNMP profile parcel.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupSystemSnmpProfileParcel(ctx, &sdwan.LookupSystemSnmpProfileParcelArgs{
//				Id:               "f6b2c44c-693c-4763-b010-895aa3d236bd",
//				FeatureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSystemSnmpProfileParcel(ctx *pulumi.Context, args *LookupSystemSnmpProfileParcelArgs, opts ...pulumi.InvokeOption) (*LookupSystemSnmpProfileParcelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSystemSnmpProfileParcelResult
	err := ctx.Invoke("sdwan:index/getSystemSnmpProfileParcel:getSystemSnmpProfileParcel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSystemSnmpProfileParcel.
type LookupSystemSnmpProfileParcelArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the profile parcel
	Id string `pulumi:"id"`
}

// A collection of values returned by getSystemSnmpProfileParcel.
type LookupSystemSnmpProfileParcelResult struct {
	// Configure SNMP community
	Communities []GetSystemSnmpProfileParcelCommunity `pulumi:"communities"`
	// Set the contact for this managed node
	ContactPerson string `pulumi:"contactPerson"`
	// Variable name
	ContactPersonVariable string `pulumi:"contactPersonVariable"`
	// The description of the profile parcel
	Description string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// Configure an SNMP group
	Groups []GetSystemSnmpProfileParcelGroup `pulumi:"groups"`
	// The id of the profile parcel
	Id string `pulumi:"id"`
	// Set the physical location of this managed node
	LocationOfDevice string `pulumi:"locationOfDevice"`
	// Variable name
	LocationOfDeviceVariable string `pulumi:"locationOfDeviceVariable"`
	// The name of the profile parcel
	Name string `pulumi:"name"`
	// Enable or disable SNMP
	Shutdown bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable string `pulumi:"shutdownVariable"`
	// Configure SNMP server to receive SNMP traps
	TrapTargetServers []GetSystemSnmpProfileParcelTrapTargetServer `pulumi:"trapTargetServers"`
	// Configure an SNMP user
	Users []GetSystemSnmpProfileParcelUser `pulumi:"users"`
	// The version of the profile parcel
	Version int `pulumi:"version"`
	// Configure a view record
	Views []GetSystemSnmpProfileParcelView `pulumi:"views"`
}

func LookupSystemSnmpProfileParcelOutput(ctx *pulumi.Context, args LookupSystemSnmpProfileParcelOutputArgs, opts ...pulumi.InvokeOption) LookupSystemSnmpProfileParcelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSystemSnmpProfileParcelResult, error) {
			args := v.(LookupSystemSnmpProfileParcelArgs)
			r, err := LookupSystemSnmpProfileParcel(ctx, &args, opts...)
			var s LookupSystemSnmpProfileParcelResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSystemSnmpProfileParcelResultOutput)
}

// A collection of arguments for invoking getSystemSnmpProfileParcel.
type LookupSystemSnmpProfileParcelOutputArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput `pulumi:"featureProfileId"`
	// The id of the profile parcel
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupSystemSnmpProfileParcelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemSnmpProfileParcelArgs)(nil)).Elem()
}

// A collection of values returned by getSystemSnmpProfileParcel.
type LookupSystemSnmpProfileParcelResultOutput struct{ *pulumi.OutputState }

func (LookupSystemSnmpProfileParcelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemSnmpProfileParcelResult)(nil)).Elem()
}

func (o LookupSystemSnmpProfileParcelResultOutput) ToLookupSystemSnmpProfileParcelResultOutput() LookupSystemSnmpProfileParcelResultOutput {
	return o
}

func (o LookupSystemSnmpProfileParcelResultOutput) ToLookupSystemSnmpProfileParcelResultOutputWithContext(ctx context.Context) LookupSystemSnmpProfileParcelResultOutput {
	return o
}

// Configure SNMP community
func (o LookupSystemSnmpProfileParcelResultOutput) Communities() GetSystemSnmpProfileParcelCommunityArrayOutput {
	return o.ApplyT(func(v LookupSystemSnmpProfileParcelResult) []GetSystemSnmpProfileParcelCommunity {
		return v.Communities
	}).(GetSystemSnmpProfileParcelCommunityArrayOutput)
}

// Set the contact for this managed node
func (o LookupSystemSnmpProfileParcelResultOutput) ContactPerson() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemSnmpProfileParcelResult) string { return v.ContactPerson }).(pulumi.StringOutput)
}

// Variable name
func (o LookupSystemSnmpProfileParcelResultOutput) ContactPersonVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemSnmpProfileParcelResult) string { return v.ContactPersonVariable }).(pulumi.StringOutput)
}

// The description of the profile parcel
func (o LookupSystemSnmpProfileParcelResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemSnmpProfileParcelResult) string { return v.Description }).(pulumi.StringOutput)
}

// Feature Profile ID
func (o LookupSystemSnmpProfileParcelResultOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemSnmpProfileParcelResult) string { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// Configure an SNMP group
func (o LookupSystemSnmpProfileParcelResultOutput) Groups() GetSystemSnmpProfileParcelGroupArrayOutput {
	return o.ApplyT(func(v LookupSystemSnmpProfileParcelResult) []GetSystemSnmpProfileParcelGroup { return v.Groups }).(GetSystemSnmpProfileParcelGroupArrayOutput)
}

// The id of the profile parcel
func (o LookupSystemSnmpProfileParcelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemSnmpProfileParcelResult) string { return v.Id }).(pulumi.StringOutput)
}

// Set the physical location of this managed node
func (o LookupSystemSnmpProfileParcelResultOutput) LocationOfDevice() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemSnmpProfileParcelResult) string { return v.LocationOfDevice }).(pulumi.StringOutput)
}

// Variable name
func (o LookupSystemSnmpProfileParcelResultOutput) LocationOfDeviceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemSnmpProfileParcelResult) string { return v.LocationOfDeviceVariable }).(pulumi.StringOutput)
}

// The name of the profile parcel
func (o LookupSystemSnmpProfileParcelResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemSnmpProfileParcelResult) string { return v.Name }).(pulumi.StringOutput)
}

// Enable or disable SNMP
func (o LookupSystemSnmpProfileParcelResultOutput) Shutdown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSystemSnmpProfileParcelResult) bool { return v.Shutdown }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupSystemSnmpProfileParcelResultOutput) ShutdownVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemSnmpProfileParcelResult) string { return v.ShutdownVariable }).(pulumi.StringOutput)
}

// Configure SNMP server to receive SNMP traps
func (o LookupSystemSnmpProfileParcelResultOutput) TrapTargetServers() GetSystemSnmpProfileParcelTrapTargetServerArrayOutput {
	return o.ApplyT(func(v LookupSystemSnmpProfileParcelResult) []GetSystemSnmpProfileParcelTrapTargetServer {
		return v.TrapTargetServers
	}).(GetSystemSnmpProfileParcelTrapTargetServerArrayOutput)
}

// Configure an SNMP user
func (o LookupSystemSnmpProfileParcelResultOutput) Users() GetSystemSnmpProfileParcelUserArrayOutput {
	return o.ApplyT(func(v LookupSystemSnmpProfileParcelResult) []GetSystemSnmpProfileParcelUser { return v.Users }).(GetSystemSnmpProfileParcelUserArrayOutput)
}

// The version of the profile parcel
func (o LookupSystemSnmpProfileParcelResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemSnmpProfileParcelResult) int { return v.Version }).(pulumi.IntOutput)
}

// Configure a view record
func (o LookupSystemSnmpProfileParcelResultOutput) Views() GetSystemSnmpProfileParcelViewArrayOutput {
	return o.ApplyT(func(v LookupSystemSnmpProfileParcelResult) []GetSystemSnmpProfileParcelView { return v.Views }).(GetSystemSnmpProfileParcelViewArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSystemSnmpProfileParcelResultOutput{})
}
