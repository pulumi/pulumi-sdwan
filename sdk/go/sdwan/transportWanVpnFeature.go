// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Transport WAN VPN Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "transport_wan_vpn_feature_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/transportWanVpnFeature:TransportWanVpnFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type TransportWanVpnFeature struct {
	pulumi.CustomResourceState

	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Enhance ECMP Keying
	//   - Default value: `false`
	EnhanceEcmpKeying pulumi.BoolPtrOutput `pulumi:"enhanceEcmpKeying"`
	// Variable name
	EnhanceEcmpKeyingVariable pulumi.StringPtrOutput `pulumi:"enhanceEcmpKeyingVariable"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// IPv4 Static Route
	Ipv4StaticRoutes TransportWanVpnFeatureIpv4StaticRouteArrayOutput `pulumi:"ipv4StaticRoutes"`
	// IPv6 Static Route
	Ipv6StaticRoutes TransportWanVpnFeatureIpv6StaticRouteArrayOutput `pulumi:"ipv6StaticRoutes"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// NAT64 V4 Pool
	Nat64V4Pools    TransportWanVpnFeatureNat64V4PoolArrayOutput    `pulumi:"nat64V4Pools"`
	NewHostMappings TransportWanVpnFeatureNewHostMappingArrayOutput `pulumi:"newHostMappings"`
	// Primary DNS Address (IPv4)
	PrimaryDnsAddressIpv4 pulumi.StringPtrOutput `pulumi:"primaryDnsAddressIpv4"`
	// Variable name
	PrimaryDnsAddressIpv4Variable pulumi.StringPtrOutput `pulumi:"primaryDnsAddressIpv4Variable"`
	// Primary DNS Address (IPv6)
	PrimaryDnsAddressIpv6 pulumi.StringPtrOutput `pulumi:"primaryDnsAddressIpv6"`
	// Variable name
	PrimaryDnsAddressIpv6Variable pulumi.StringPtrOutput `pulumi:"primaryDnsAddressIpv6Variable"`
	// Secondary DNS Address (IPv4)
	SecondaryDnsAddressIpv4 pulumi.StringPtrOutput `pulumi:"secondaryDnsAddressIpv4"`
	// Variable name
	SecondaryDnsAddressIpv4Variable pulumi.StringPtrOutput `pulumi:"secondaryDnsAddressIpv4Variable"`
	// Secondary DNS Address (IPv6)
	SecondaryDnsAddressIpv6 pulumi.StringPtrOutput `pulumi:"secondaryDnsAddressIpv6"`
	// Variable name
	SecondaryDnsAddressIpv6Variable pulumi.StringPtrOutput `pulumi:"secondaryDnsAddressIpv6Variable"`
	// Service
	Services TransportWanVpnFeatureServiceArrayOutput `pulumi:"services"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
	// VPN
	//   - Default value: `0`
	Vpn pulumi.IntPtrOutput `pulumi:"vpn"`
}

// NewTransportWanVpnFeature registers a new resource with the given unique name, arguments, and options.
func NewTransportWanVpnFeature(ctx *pulumi.Context,
	name string, args *TransportWanVpnFeatureArgs, opts ...pulumi.ResourceOption) (*TransportWanVpnFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransportWanVpnFeature
	err := ctx.RegisterResource("sdwan:index/transportWanVpnFeature:TransportWanVpnFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransportWanVpnFeature gets an existing TransportWanVpnFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransportWanVpnFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransportWanVpnFeatureState, opts ...pulumi.ResourceOption) (*TransportWanVpnFeature, error) {
	var resource TransportWanVpnFeature
	err := ctx.ReadResource("sdwan:index/transportWanVpnFeature:TransportWanVpnFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransportWanVpnFeature resources.
type transportWanVpnFeatureState struct {
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Enhance ECMP Keying
	//   - Default value: `false`
	EnhanceEcmpKeying *bool `pulumi:"enhanceEcmpKeying"`
	// Variable name
	EnhanceEcmpKeyingVariable *string `pulumi:"enhanceEcmpKeyingVariable"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// IPv4 Static Route
	Ipv4StaticRoutes []TransportWanVpnFeatureIpv4StaticRoute `pulumi:"ipv4StaticRoutes"`
	// IPv6 Static Route
	Ipv6StaticRoutes []TransportWanVpnFeatureIpv6StaticRoute `pulumi:"ipv6StaticRoutes"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// NAT64 V4 Pool
	Nat64V4Pools    []TransportWanVpnFeatureNat64V4Pool    `pulumi:"nat64V4Pools"`
	NewHostMappings []TransportWanVpnFeatureNewHostMapping `pulumi:"newHostMappings"`
	// Primary DNS Address (IPv4)
	PrimaryDnsAddressIpv4 *string `pulumi:"primaryDnsAddressIpv4"`
	// Variable name
	PrimaryDnsAddressIpv4Variable *string `pulumi:"primaryDnsAddressIpv4Variable"`
	// Primary DNS Address (IPv6)
	PrimaryDnsAddressIpv6 *string `pulumi:"primaryDnsAddressIpv6"`
	// Variable name
	PrimaryDnsAddressIpv6Variable *string `pulumi:"primaryDnsAddressIpv6Variable"`
	// Secondary DNS Address (IPv4)
	SecondaryDnsAddressIpv4 *string `pulumi:"secondaryDnsAddressIpv4"`
	// Variable name
	SecondaryDnsAddressIpv4Variable *string `pulumi:"secondaryDnsAddressIpv4Variable"`
	// Secondary DNS Address (IPv6)
	SecondaryDnsAddressIpv6 *string `pulumi:"secondaryDnsAddressIpv6"`
	// Variable name
	SecondaryDnsAddressIpv6Variable *string `pulumi:"secondaryDnsAddressIpv6Variable"`
	// Service
	Services []TransportWanVpnFeatureService `pulumi:"services"`
	// The version of the Feature
	Version *int `pulumi:"version"`
	// VPN
	//   - Default value: `0`
	Vpn *int `pulumi:"vpn"`
}

type TransportWanVpnFeatureState struct {
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Enhance ECMP Keying
	//   - Default value: `false`
	EnhanceEcmpKeying pulumi.BoolPtrInput
	// Variable name
	EnhanceEcmpKeyingVariable pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// IPv4 Static Route
	Ipv4StaticRoutes TransportWanVpnFeatureIpv4StaticRouteArrayInput
	// IPv6 Static Route
	Ipv6StaticRoutes TransportWanVpnFeatureIpv6StaticRouteArrayInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// NAT64 V4 Pool
	Nat64V4Pools    TransportWanVpnFeatureNat64V4PoolArrayInput
	NewHostMappings TransportWanVpnFeatureNewHostMappingArrayInput
	// Primary DNS Address (IPv4)
	PrimaryDnsAddressIpv4 pulumi.StringPtrInput
	// Variable name
	PrimaryDnsAddressIpv4Variable pulumi.StringPtrInput
	// Primary DNS Address (IPv6)
	PrimaryDnsAddressIpv6 pulumi.StringPtrInput
	// Variable name
	PrimaryDnsAddressIpv6Variable pulumi.StringPtrInput
	// Secondary DNS Address (IPv4)
	SecondaryDnsAddressIpv4 pulumi.StringPtrInput
	// Variable name
	SecondaryDnsAddressIpv4Variable pulumi.StringPtrInput
	// Secondary DNS Address (IPv6)
	SecondaryDnsAddressIpv6 pulumi.StringPtrInput
	// Variable name
	SecondaryDnsAddressIpv6Variable pulumi.StringPtrInput
	// Service
	Services TransportWanVpnFeatureServiceArrayInput
	// The version of the Feature
	Version pulumi.IntPtrInput
	// VPN
	//   - Default value: `0`
	Vpn pulumi.IntPtrInput
}

func (TransportWanVpnFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*transportWanVpnFeatureState)(nil)).Elem()
}

type transportWanVpnFeatureArgs struct {
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Enhance ECMP Keying
	//   - Default value: `false`
	EnhanceEcmpKeying *bool `pulumi:"enhanceEcmpKeying"`
	// Variable name
	EnhanceEcmpKeyingVariable *string `pulumi:"enhanceEcmpKeyingVariable"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// IPv4 Static Route
	Ipv4StaticRoutes []TransportWanVpnFeatureIpv4StaticRoute `pulumi:"ipv4StaticRoutes"`
	// IPv6 Static Route
	Ipv6StaticRoutes []TransportWanVpnFeatureIpv6StaticRoute `pulumi:"ipv6StaticRoutes"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// NAT64 V4 Pool
	Nat64V4Pools    []TransportWanVpnFeatureNat64V4Pool    `pulumi:"nat64V4Pools"`
	NewHostMappings []TransportWanVpnFeatureNewHostMapping `pulumi:"newHostMappings"`
	// Primary DNS Address (IPv4)
	PrimaryDnsAddressIpv4 *string `pulumi:"primaryDnsAddressIpv4"`
	// Variable name
	PrimaryDnsAddressIpv4Variable *string `pulumi:"primaryDnsAddressIpv4Variable"`
	// Primary DNS Address (IPv6)
	PrimaryDnsAddressIpv6 *string `pulumi:"primaryDnsAddressIpv6"`
	// Variable name
	PrimaryDnsAddressIpv6Variable *string `pulumi:"primaryDnsAddressIpv6Variable"`
	// Secondary DNS Address (IPv4)
	SecondaryDnsAddressIpv4 *string `pulumi:"secondaryDnsAddressIpv4"`
	// Variable name
	SecondaryDnsAddressIpv4Variable *string `pulumi:"secondaryDnsAddressIpv4Variable"`
	// Secondary DNS Address (IPv6)
	SecondaryDnsAddressIpv6 *string `pulumi:"secondaryDnsAddressIpv6"`
	// Variable name
	SecondaryDnsAddressIpv6Variable *string `pulumi:"secondaryDnsAddressIpv6Variable"`
	// Service
	Services []TransportWanVpnFeatureService `pulumi:"services"`
	// VPN
	//   - Default value: `0`
	Vpn *int `pulumi:"vpn"`
}

// The set of arguments for constructing a TransportWanVpnFeature resource.
type TransportWanVpnFeatureArgs struct {
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Enhance ECMP Keying
	//   - Default value: `false`
	EnhanceEcmpKeying pulumi.BoolPtrInput
	// Variable name
	EnhanceEcmpKeyingVariable pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// IPv4 Static Route
	Ipv4StaticRoutes TransportWanVpnFeatureIpv4StaticRouteArrayInput
	// IPv6 Static Route
	Ipv6StaticRoutes TransportWanVpnFeatureIpv6StaticRouteArrayInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// NAT64 V4 Pool
	Nat64V4Pools    TransportWanVpnFeatureNat64V4PoolArrayInput
	NewHostMappings TransportWanVpnFeatureNewHostMappingArrayInput
	// Primary DNS Address (IPv4)
	PrimaryDnsAddressIpv4 pulumi.StringPtrInput
	// Variable name
	PrimaryDnsAddressIpv4Variable pulumi.StringPtrInput
	// Primary DNS Address (IPv6)
	PrimaryDnsAddressIpv6 pulumi.StringPtrInput
	// Variable name
	PrimaryDnsAddressIpv6Variable pulumi.StringPtrInput
	// Secondary DNS Address (IPv4)
	SecondaryDnsAddressIpv4 pulumi.StringPtrInput
	// Variable name
	SecondaryDnsAddressIpv4Variable pulumi.StringPtrInput
	// Secondary DNS Address (IPv6)
	SecondaryDnsAddressIpv6 pulumi.StringPtrInput
	// Variable name
	SecondaryDnsAddressIpv6Variable pulumi.StringPtrInput
	// Service
	Services TransportWanVpnFeatureServiceArrayInput
	// VPN
	//   - Default value: `0`
	Vpn pulumi.IntPtrInput
}

func (TransportWanVpnFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transportWanVpnFeatureArgs)(nil)).Elem()
}

type TransportWanVpnFeatureInput interface {
	pulumi.Input

	ToTransportWanVpnFeatureOutput() TransportWanVpnFeatureOutput
	ToTransportWanVpnFeatureOutputWithContext(ctx context.Context) TransportWanVpnFeatureOutput
}

func (*TransportWanVpnFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportWanVpnFeature)(nil)).Elem()
}

func (i *TransportWanVpnFeature) ToTransportWanVpnFeatureOutput() TransportWanVpnFeatureOutput {
	return i.ToTransportWanVpnFeatureOutputWithContext(context.Background())
}

func (i *TransportWanVpnFeature) ToTransportWanVpnFeatureOutputWithContext(ctx context.Context) TransportWanVpnFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnFeatureOutput)
}

// TransportWanVpnFeatureArrayInput is an input type that accepts TransportWanVpnFeatureArray and TransportWanVpnFeatureArrayOutput values.
// You can construct a concrete instance of `TransportWanVpnFeatureArrayInput` via:
//
//	TransportWanVpnFeatureArray{ TransportWanVpnFeatureArgs{...} }
type TransportWanVpnFeatureArrayInput interface {
	pulumi.Input

	ToTransportWanVpnFeatureArrayOutput() TransportWanVpnFeatureArrayOutput
	ToTransportWanVpnFeatureArrayOutputWithContext(context.Context) TransportWanVpnFeatureArrayOutput
}

type TransportWanVpnFeatureArray []TransportWanVpnFeatureInput

func (TransportWanVpnFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportWanVpnFeature)(nil)).Elem()
}

func (i TransportWanVpnFeatureArray) ToTransportWanVpnFeatureArrayOutput() TransportWanVpnFeatureArrayOutput {
	return i.ToTransportWanVpnFeatureArrayOutputWithContext(context.Background())
}

func (i TransportWanVpnFeatureArray) ToTransportWanVpnFeatureArrayOutputWithContext(ctx context.Context) TransportWanVpnFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnFeatureArrayOutput)
}

// TransportWanVpnFeatureMapInput is an input type that accepts TransportWanVpnFeatureMap and TransportWanVpnFeatureMapOutput values.
// You can construct a concrete instance of `TransportWanVpnFeatureMapInput` via:
//
//	TransportWanVpnFeatureMap{ "key": TransportWanVpnFeatureArgs{...} }
type TransportWanVpnFeatureMapInput interface {
	pulumi.Input

	ToTransportWanVpnFeatureMapOutput() TransportWanVpnFeatureMapOutput
	ToTransportWanVpnFeatureMapOutputWithContext(context.Context) TransportWanVpnFeatureMapOutput
}

type TransportWanVpnFeatureMap map[string]TransportWanVpnFeatureInput

func (TransportWanVpnFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportWanVpnFeature)(nil)).Elem()
}

func (i TransportWanVpnFeatureMap) ToTransportWanVpnFeatureMapOutput() TransportWanVpnFeatureMapOutput {
	return i.ToTransportWanVpnFeatureMapOutputWithContext(context.Background())
}

func (i TransportWanVpnFeatureMap) ToTransportWanVpnFeatureMapOutputWithContext(ctx context.Context) TransportWanVpnFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnFeatureMapOutput)
}

type TransportWanVpnFeatureOutput struct{ *pulumi.OutputState }

func (TransportWanVpnFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportWanVpnFeature)(nil)).Elem()
}

func (o TransportWanVpnFeatureOutput) ToTransportWanVpnFeatureOutput() TransportWanVpnFeatureOutput {
	return o
}

func (o TransportWanVpnFeatureOutput) ToTransportWanVpnFeatureOutputWithContext(ctx context.Context) TransportWanVpnFeatureOutput {
	return o
}

// The description of the Feature
func (o TransportWanVpnFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Enhance ECMP Keying
//   - Default value: `false`
func (o TransportWanVpnFeatureOutput) EnhanceEcmpKeying() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) pulumi.BoolPtrOutput { return v.EnhanceEcmpKeying }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnFeatureOutput) EnhanceEcmpKeyingVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) pulumi.StringPtrOutput { return v.EnhanceEcmpKeyingVariable }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o TransportWanVpnFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// IPv4 Static Route
func (o TransportWanVpnFeatureOutput) Ipv4StaticRoutes() TransportWanVpnFeatureIpv4StaticRouteArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) TransportWanVpnFeatureIpv4StaticRouteArrayOutput {
		return v.Ipv4StaticRoutes
	}).(TransportWanVpnFeatureIpv4StaticRouteArrayOutput)
}

// IPv6 Static Route
func (o TransportWanVpnFeatureOutput) Ipv6StaticRoutes() TransportWanVpnFeatureIpv6StaticRouteArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) TransportWanVpnFeatureIpv6StaticRouteArrayOutput {
		return v.Ipv6StaticRoutes
	}).(TransportWanVpnFeatureIpv6StaticRouteArrayOutput)
}

// The name of the Feature
func (o TransportWanVpnFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// NAT64 V4 Pool
func (o TransportWanVpnFeatureOutput) Nat64V4Pools() TransportWanVpnFeatureNat64V4PoolArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) TransportWanVpnFeatureNat64V4PoolArrayOutput { return v.Nat64V4Pools }).(TransportWanVpnFeatureNat64V4PoolArrayOutput)
}

func (o TransportWanVpnFeatureOutput) NewHostMappings() TransportWanVpnFeatureNewHostMappingArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) TransportWanVpnFeatureNewHostMappingArrayOutput {
		return v.NewHostMappings
	}).(TransportWanVpnFeatureNewHostMappingArrayOutput)
}

// Primary DNS Address (IPv4)
func (o TransportWanVpnFeatureOutput) PrimaryDnsAddressIpv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) pulumi.StringPtrOutput { return v.PrimaryDnsAddressIpv4 }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnFeatureOutput) PrimaryDnsAddressIpv4Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) pulumi.StringPtrOutput { return v.PrimaryDnsAddressIpv4Variable }).(pulumi.StringPtrOutput)
}

// Primary DNS Address (IPv6)
func (o TransportWanVpnFeatureOutput) PrimaryDnsAddressIpv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) pulumi.StringPtrOutput { return v.PrimaryDnsAddressIpv6 }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnFeatureOutput) PrimaryDnsAddressIpv6Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) pulumi.StringPtrOutput { return v.PrimaryDnsAddressIpv6Variable }).(pulumi.StringPtrOutput)
}

// Secondary DNS Address (IPv4)
func (o TransportWanVpnFeatureOutput) SecondaryDnsAddressIpv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) pulumi.StringPtrOutput { return v.SecondaryDnsAddressIpv4 }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnFeatureOutput) SecondaryDnsAddressIpv4Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) pulumi.StringPtrOutput { return v.SecondaryDnsAddressIpv4Variable }).(pulumi.StringPtrOutput)
}

// Secondary DNS Address (IPv6)
func (o TransportWanVpnFeatureOutput) SecondaryDnsAddressIpv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) pulumi.StringPtrOutput { return v.SecondaryDnsAddressIpv6 }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnFeatureOutput) SecondaryDnsAddressIpv6Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) pulumi.StringPtrOutput { return v.SecondaryDnsAddressIpv6Variable }).(pulumi.StringPtrOutput)
}

// Service
func (o TransportWanVpnFeatureOutput) Services() TransportWanVpnFeatureServiceArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) TransportWanVpnFeatureServiceArrayOutput { return v.Services }).(TransportWanVpnFeatureServiceArrayOutput)
}

// The version of the Feature
func (o TransportWanVpnFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

// VPN
//   - Default value: `0`
func (o TransportWanVpnFeatureOutput) Vpn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnFeature) pulumi.IntPtrOutput { return v.Vpn }).(pulumi.IntPtrOutput)
}

type TransportWanVpnFeatureArrayOutput struct{ *pulumi.OutputState }

func (TransportWanVpnFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportWanVpnFeature)(nil)).Elem()
}

func (o TransportWanVpnFeatureArrayOutput) ToTransportWanVpnFeatureArrayOutput() TransportWanVpnFeatureArrayOutput {
	return o
}

func (o TransportWanVpnFeatureArrayOutput) ToTransportWanVpnFeatureArrayOutputWithContext(ctx context.Context) TransportWanVpnFeatureArrayOutput {
	return o
}

func (o TransportWanVpnFeatureArrayOutput) Index(i pulumi.IntInput) TransportWanVpnFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransportWanVpnFeature {
		return vs[0].([]*TransportWanVpnFeature)[vs[1].(int)]
	}).(TransportWanVpnFeatureOutput)
}

type TransportWanVpnFeatureMapOutput struct{ *pulumi.OutputState }

func (TransportWanVpnFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportWanVpnFeature)(nil)).Elem()
}

func (o TransportWanVpnFeatureMapOutput) ToTransportWanVpnFeatureMapOutput() TransportWanVpnFeatureMapOutput {
	return o
}

func (o TransportWanVpnFeatureMapOutput) ToTransportWanVpnFeatureMapOutputWithContext(ctx context.Context) TransportWanVpnFeatureMapOutput {
	return o
}

func (o TransportWanVpnFeatureMapOutput) MapIndex(k pulumi.StringInput) TransportWanVpnFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransportWanVpnFeature {
		return vs[0].(map[string]*TransportWanVpnFeature)[vs[1].(string)]
	}).(TransportWanVpnFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnFeatureInput)(nil)).Elem(), &TransportWanVpnFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnFeatureArrayInput)(nil)).Elem(), TransportWanVpnFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnFeatureMapInput)(nil)).Elem(), TransportWanVpnFeatureMap{})
	pulumi.RegisterOutputType(TransportWanVpnFeatureOutput{})
	pulumi.RegisterOutputType(TransportWanVpnFeatureArrayOutput{})
	pulumi.RegisterOutputType(TransportWanVpnFeatureMapOutput{})
}
