// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a System Performance Monitoring Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewSystemPerformanceMonitoringFeature(ctx, "example", &sdwan.SystemPerformanceMonitoringFeatureArgs{
//				Name:                  pulumi.String("Example"),
//				Description:           pulumi.String("My Example"),
//				FeatureProfileId:      pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				AppPerfMonitorEnabled: pulumi.Bool(true),
//				AppPerfMonitorAppGroups: pulumi.StringArray{
//					pulumi.String("amazon-group"),
//				},
//				MonitoringConfigEnabled:  pulumi.Bool(true),
//				MonitoringConfigInterval: pulumi.String("30"),
//				EventDrivenConfigEnabled: pulumi.Bool(true),
//				EventDrivenEvents: pulumi.StringArray{
//					pulumi.String("SLA_CHANGE"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Expected import identifier with the format: "system_performance_monitoring_feature_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/systemPerformanceMonitoringFeature:SystemPerformanceMonitoringFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type SystemPerformanceMonitoringFeature struct {
	pulumi.CustomResourceState

	// Application groups to be monitored
	AppPerfMonitorAppGroups pulumi.StringArrayOutput `pulumi:"appPerfMonitorAppGroups"`
	// Application performance monitoring enable or disable - Default value: `false`
	AppPerfMonitorEnabled pulumi.BoolPtrOutput `pulumi:"appPerfMonitorEnabled"`
	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// UMTS event driven monitoring enable or disable - Default value: `false`
	EventDrivenConfigEnabled pulumi.BoolPtrOutput `pulumi:"eventDrivenConfigEnabled"`
	// UMTS events
	EventDrivenEvents pulumi.StringArrayOutput `pulumi:"eventDrivenEvents"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrOutput `pulumi:"featureProfileId"`
	// UMTS monitoring enable or disable - Default value: `false`
	MonitoringConfigEnabled pulumi.BoolPtrOutput `pulumi:"monitoringConfigEnabled"`
	// UMTS monitoring interval(Minutes) - Choices: `30`, `60`
	MonitoringConfigInterval pulumi.StringPtrOutput `pulumi:"monitoringConfigInterval"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewSystemPerformanceMonitoringFeature registers a new resource with the given unique name, arguments, and options.
func NewSystemPerformanceMonitoringFeature(ctx *pulumi.Context,
	name string, args *SystemPerformanceMonitoringFeatureArgs, opts ...pulumi.ResourceOption) (*SystemPerformanceMonitoringFeature, error) {
	if args == nil {
		args = &SystemPerformanceMonitoringFeatureArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemPerformanceMonitoringFeature
	err := ctx.RegisterResource("sdwan:index/systemPerformanceMonitoringFeature:SystemPerformanceMonitoringFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemPerformanceMonitoringFeature gets an existing SystemPerformanceMonitoringFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemPerformanceMonitoringFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemPerformanceMonitoringFeatureState, opts ...pulumi.ResourceOption) (*SystemPerformanceMonitoringFeature, error) {
	var resource SystemPerformanceMonitoringFeature
	err := ctx.ReadResource("sdwan:index/systemPerformanceMonitoringFeature:SystemPerformanceMonitoringFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemPerformanceMonitoringFeature resources.
type systemPerformanceMonitoringFeatureState struct {
	// Application groups to be monitored
	AppPerfMonitorAppGroups []string `pulumi:"appPerfMonitorAppGroups"`
	// Application performance monitoring enable or disable - Default value: `false`
	AppPerfMonitorEnabled *bool `pulumi:"appPerfMonitorEnabled"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// UMTS event driven monitoring enable or disable - Default value: `false`
	EventDrivenConfigEnabled *bool `pulumi:"eventDrivenConfigEnabled"`
	// UMTS events
	EventDrivenEvents []string `pulumi:"eventDrivenEvents"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// UMTS monitoring enable or disable - Default value: `false`
	MonitoringConfigEnabled *bool `pulumi:"monitoringConfigEnabled"`
	// UMTS monitoring interval(Minutes) - Choices: `30`, `60`
	MonitoringConfigInterval *string `pulumi:"monitoringConfigInterval"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type SystemPerformanceMonitoringFeatureState struct {
	// Application groups to be monitored
	AppPerfMonitorAppGroups pulumi.StringArrayInput
	// Application performance monitoring enable or disable - Default value: `false`
	AppPerfMonitorEnabled pulumi.BoolPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// UMTS event driven monitoring enable or disable - Default value: `false`
	EventDrivenConfigEnabled pulumi.BoolPtrInput
	// UMTS events
	EventDrivenEvents pulumi.StringArrayInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// UMTS monitoring enable or disable - Default value: `false`
	MonitoringConfigEnabled pulumi.BoolPtrInput
	// UMTS monitoring interval(Minutes) - Choices: `30`, `60`
	MonitoringConfigInterval pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (SystemPerformanceMonitoringFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemPerformanceMonitoringFeatureState)(nil)).Elem()
}

type systemPerformanceMonitoringFeatureArgs struct {
	// Application groups to be monitored
	AppPerfMonitorAppGroups []string `pulumi:"appPerfMonitorAppGroups"`
	// Application performance monitoring enable or disable - Default value: `false`
	AppPerfMonitorEnabled *bool `pulumi:"appPerfMonitorEnabled"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// UMTS event driven monitoring enable or disable - Default value: `false`
	EventDrivenConfigEnabled *bool `pulumi:"eventDrivenConfigEnabled"`
	// UMTS events
	EventDrivenEvents []string `pulumi:"eventDrivenEvents"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// UMTS monitoring enable or disable - Default value: `false`
	MonitoringConfigEnabled *bool `pulumi:"monitoringConfigEnabled"`
	// UMTS monitoring interval(Minutes) - Choices: `30`, `60`
	MonitoringConfigInterval *string `pulumi:"monitoringConfigInterval"`
	// The name of the Feature
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a SystemPerformanceMonitoringFeature resource.
type SystemPerformanceMonitoringFeatureArgs struct {
	// Application groups to be monitored
	AppPerfMonitorAppGroups pulumi.StringArrayInput
	// Application performance monitoring enable or disable - Default value: `false`
	AppPerfMonitorEnabled pulumi.BoolPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// UMTS event driven monitoring enable or disable - Default value: `false`
	EventDrivenConfigEnabled pulumi.BoolPtrInput
	// UMTS events
	EventDrivenEvents pulumi.StringArrayInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// UMTS monitoring enable or disable - Default value: `false`
	MonitoringConfigEnabled pulumi.BoolPtrInput
	// UMTS monitoring interval(Minutes) - Choices: `30`, `60`
	MonitoringConfigInterval pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
}

func (SystemPerformanceMonitoringFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemPerformanceMonitoringFeatureArgs)(nil)).Elem()
}

type SystemPerformanceMonitoringFeatureInput interface {
	pulumi.Input

	ToSystemPerformanceMonitoringFeatureOutput() SystemPerformanceMonitoringFeatureOutput
	ToSystemPerformanceMonitoringFeatureOutputWithContext(ctx context.Context) SystemPerformanceMonitoringFeatureOutput
}

func (*SystemPerformanceMonitoringFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemPerformanceMonitoringFeature)(nil)).Elem()
}

func (i *SystemPerformanceMonitoringFeature) ToSystemPerformanceMonitoringFeatureOutput() SystemPerformanceMonitoringFeatureOutput {
	return i.ToSystemPerformanceMonitoringFeatureOutputWithContext(context.Background())
}

func (i *SystemPerformanceMonitoringFeature) ToSystemPerformanceMonitoringFeatureOutputWithContext(ctx context.Context) SystemPerformanceMonitoringFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPerformanceMonitoringFeatureOutput)
}

// SystemPerformanceMonitoringFeatureArrayInput is an input type that accepts SystemPerformanceMonitoringFeatureArray and SystemPerformanceMonitoringFeatureArrayOutput values.
// You can construct a concrete instance of `SystemPerformanceMonitoringFeatureArrayInput` via:
//
//	SystemPerformanceMonitoringFeatureArray{ SystemPerformanceMonitoringFeatureArgs{...} }
type SystemPerformanceMonitoringFeatureArrayInput interface {
	pulumi.Input

	ToSystemPerformanceMonitoringFeatureArrayOutput() SystemPerformanceMonitoringFeatureArrayOutput
	ToSystemPerformanceMonitoringFeatureArrayOutputWithContext(context.Context) SystemPerformanceMonitoringFeatureArrayOutput
}

type SystemPerformanceMonitoringFeatureArray []SystemPerformanceMonitoringFeatureInput

func (SystemPerformanceMonitoringFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemPerformanceMonitoringFeature)(nil)).Elem()
}

func (i SystemPerformanceMonitoringFeatureArray) ToSystemPerformanceMonitoringFeatureArrayOutput() SystemPerformanceMonitoringFeatureArrayOutput {
	return i.ToSystemPerformanceMonitoringFeatureArrayOutputWithContext(context.Background())
}

func (i SystemPerformanceMonitoringFeatureArray) ToSystemPerformanceMonitoringFeatureArrayOutputWithContext(ctx context.Context) SystemPerformanceMonitoringFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPerformanceMonitoringFeatureArrayOutput)
}

// SystemPerformanceMonitoringFeatureMapInput is an input type that accepts SystemPerformanceMonitoringFeatureMap and SystemPerformanceMonitoringFeatureMapOutput values.
// You can construct a concrete instance of `SystemPerformanceMonitoringFeatureMapInput` via:
//
//	SystemPerformanceMonitoringFeatureMap{ "key": SystemPerformanceMonitoringFeatureArgs{...} }
type SystemPerformanceMonitoringFeatureMapInput interface {
	pulumi.Input

	ToSystemPerformanceMonitoringFeatureMapOutput() SystemPerformanceMonitoringFeatureMapOutput
	ToSystemPerformanceMonitoringFeatureMapOutputWithContext(context.Context) SystemPerformanceMonitoringFeatureMapOutput
}

type SystemPerformanceMonitoringFeatureMap map[string]SystemPerformanceMonitoringFeatureInput

func (SystemPerformanceMonitoringFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemPerformanceMonitoringFeature)(nil)).Elem()
}

func (i SystemPerformanceMonitoringFeatureMap) ToSystemPerformanceMonitoringFeatureMapOutput() SystemPerformanceMonitoringFeatureMapOutput {
	return i.ToSystemPerformanceMonitoringFeatureMapOutputWithContext(context.Background())
}

func (i SystemPerformanceMonitoringFeatureMap) ToSystemPerformanceMonitoringFeatureMapOutputWithContext(ctx context.Context) SystemPerformanceMonitoringFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemPerformanceMonitoringFeatureMapOutput)
}

type SystemPerformanceMonitoringFeatureOutput struct{ *pulumi.OutputState }

func (SystemPerformanceMonitoringFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemPerformanceMonitoringFeature)(nil)).Elem()
}

func (o SystemPerformanceMonitoringFeatureOutput) ToSystemPerformanceMonitoringFeatureOutput() SystemPerformanceMonitoringFeatureOutput {
	return o
}

func (o SystemPerformanceMonitoringFeatureOutput) ToSystemPerformanceMonitoringFeatureOutputWithContext(ctx context.Context) SystemPerformanceMonitoringFeatureOutput {
	return o
}

// Application groups to be monitored
func (o SystemPerformanceMonitoringFeatureOutput) AppPerfMonitorAppGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SystemPerformanceMonitoringFeature) pulumi.StringArrayOutput { return v.AppPerfMonitorAppGroups }).(pulumi.StringArrayOutput)
}

// Application performance monitoring enable or disable - Default value: `false`
func (o SystemPerformanceMonitoringFeatureOutput) AppPerfMonitorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SystemPerformanceMonitoringFeature) pulumi.BoolPtrOutput { return v.AppPerfMonitorEnabled }).(pulumi.BoolPtrOutput)
}

// The description of the Feature
func (o SystemPerformanceMonitoringFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemPerformanceMonitoringFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// UMTS event driven monitoring enable or disable - Default value: `false`
func (o SystemPerformanceMonitoringFeatureOutput) EventDrivenConfigEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SystemPerformanceMonitoringFeature) pulumi.BoolPtrOutput { return v.EventDrivenConfigEnabled }).(pulumi.BoolPtrOutput)
}

// UMTS events
func (o SystemPerformanceMonitoringFeatureOutput) EventDrivenEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SystemPerformanceMonitoringFeature) pulumi.StringArrayOutput { return v.EventDrivenEvents }).(pulumi.StringArrayOutput)
}

// Feature Profile ID
func (o SystemPerformanceMonitoringFeatureOutput) FeatureProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemPerformanceMonitoringFeature) pulumi.StringPtrOutput { return v.FeatureProfileId }).(pulumi.StringPtrOutput)
}

// UMTS monitoring enable or disable - Default value: `false`
func (o SystemPerformanceMonitoringFeatureOutput) MonitoringConfigEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SystemPerformanceMonitoringFeature) pulumi.BoolPtrOutput { return v.MonitoringConfigEnabled }).(pulumi.BoolPtrOutput)
}

// UMTS monitoring interval(Minutes) - Choices: `30`, `60`
func (o SystemPerformanceMonitoringFeatureOutput) MonitoringConfigInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemPerformanceMonitoringFeature) pulumi.StringPtrOutput { return v.MonitoringConfigInterval }).(pulumi.StringPtrOutput)
}

// The name of the Feature
func (o SystemPerformanceMonitoringFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemPerformanceMonitoringFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the Feature
func (o SystemPerformanceMonitoringFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemPerformanceMonitoringFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type SystemPerformanceMonitoringFeatureArrayOutput struct{ *pulumi.OutputState }

func (SystemPerformanceMonitoringFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemPerformanceMonitoringFeature)(nil)).Elem()
}

func (o SystemPerformanceMonitoringFeatureArrayOutput) ToSystemPerformanceMonitoringFeatureArrayOutput() SystemPerformanceMonitoringFeatureArrayOutput {
	return o
}

func (o SystemPerformanceMonitoringFeatureArrayOutput) ToSystemPerformanceMonitoringFeatureArrayOutputWithContext(ctx context.Context) SystemPerformanceMonitoringFeatureArrayOutput {
	return o
}

func (o SystemPerformanceMonitoringFeatureArrayOutput) Index(i pulumi.IntInput) SystemPerformanceMonitoringFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemPerformanceMonitoringFeature {
		return vs[0].([]*SystemPerformanceMonitoringFeature)[vs[1].(int)]
	}).(SystemPerformanceMonitoringFeatureOutput)
}

type SystemPerformanceMonitoringFeatureMapOutput struct{ *pulumi.OutputState }

func (SystemPerformanceMonitoringFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemPerformanceMonitoringFeature)(nil)).Elem()
}

func (o SystemPerformanceMonitoringFeatureMapOutput) ToSystemPerformanceMonitoringFeatureMapOutput() SystemPerformanceMonitoringFeatureMapOutput {
	return o
}

func (o SystemPerformanceMonitoringFeatureMapOutput) ToSystemPerformanceMonitoringFeatureMapOutputWithContext(ctx context.Context) SystemPerformanceMonitoringFeatureMapOutput {
	return o
}

func (o SystemPerformanceMonitoringFeatureMapOutput) MapIndex(k pulumi.StringInput) SystemPerformanceMonitoringFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemPerformanceMonitoringFeature {
		return vs[0].(map[string]*SystemPerformanceMonitoringFeature)[vs[1].(string)]
	}).(SystemPerformanceMonitoringFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPerformanceMonitoringFeatureInput)(nil)).Elem(), &SystemPerformanceMonitoringFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPerformanceMonitoringFeatureArrayInput)(nil)).Elem(), SystemPerformanceMonitoringFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemPerformanceMonitoringFeatureMapInput)(nil)).Elem(), SystemPerformanceMonitoringFeatureMap{})
	pulumi.RegisterOutputType(SystemPerformanceMonitoringFeatureOutput{})
	pulumi.RegisterOutputType(SystemPerformanceMonitoringFeatureArrayOutput{})
	pulumi.RegisterOutputType(SystemPerformanceMonitoringFeatureMapOutput{})
}
