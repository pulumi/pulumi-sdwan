// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the System SNMP Feature.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupSystemSnmpFeature(ctx, &sdwan.LookupSystemSnmpFeatureArgs{
//				Id:               "f6b2c44c-693c-4763-b010-895aa3d236bd",
//				FeatureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSystemSnmpFeature(ctx *pulumi.Context, args *LookupSystemSnmpFeatureArgs, opts ...pulumi.InvokeOption) (*LookupSystemSnmpFeatureResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSystemSnmpFeatureResult
	err := ctx.Invoke("sdwan:index/getSystemSnmpFeature:getSystemSnmpFeature", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSystemSnmpFeature.
type LookupSystemSnmpFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
}

// A collection of values returned by getSystemSnmpFeature.
type LookupSystemSnmpFeatureResult struct {
	// Configure SNMP community
	Communities []GetSystemSnmpFeatureCommunity `pulumi:"communities"`
	// Set the contact for this managed node
	ContactPerson string `pulumi:"contactPerson"`
	// Variable name
	ContactPersonVariable string `pulumi:"contactPersonVariable"`
	// The description of the Feature
	Description string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// Configure an SNMP group
	Groups []GetSystemSnmpFeatureGroup `pulumi:"groups"`
	// The id of the Feature
	Id string `pulumi:"id"`
	// Set the physical location of this managed node
	LocationOfDevice string `pulumi:"locationOfDevice"`
	// Variable name
	LocationOfDeviceVariable string `pulumi:"locationOfDeviceVariable"`
	// The name of the Feature
	Name string `pulumi:"name"`
	// Enable or disable SNMP
	Shutdown bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable string `pulumi:"shutdownVariable"`
	// Configure SNMP server to receive SNMP traps
	TrapTargetServers []GetSystemSnmpFeatureTrapTargetServer `pulumi:"trapTargetServers"`
	// Configure an SNMP user
	Users []GetSystemSnmpFeatureUser `pulumi:"users"`
	// The version of the Feature
	Version int `pulumi:"version"`
	// Configure a view record
	Views []GetSystemSnmpFeatureView `pulumi:"views"`
}

func LookupSystemSnmpFeatureOutput(ctx *pulumi.Context, args LookupSystemSnmpFeatureOutputArgs, opts ...pulumi.InvokeOption) LookupSystemSnmpFeatureResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSystemSnmpFeatureResultOutput, error) {
			args := v.(LookupSystemSnmpFeatureArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sdwan:index/getSystemSnmpFeature:getSystemSnmpFeature", args, LookupSystemSnmpFeatureResultOutput{}, options).(LookupSystemSnmpFeatureResultOutput), nil
		}).(LookupSystemSnmpFeatureResultOutput)
}

// A collection of arguments for invoking getSystemSnmpFeature.
type LookupSystemSnmpFeatureOutputArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput `pulumi:"featureProfileId"`
	// The id of the Feature
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupSystemSnmpFeatureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemSnmpFeatureArgs)(nil)).Elem()
}

// A collection of values returned by getSystemSnmpFeature.
type LookupSystemSnmpFeatureResultOutput struct{ *pulumi.OutputState }

func (LookupSystemSnmpFeatureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemSnmpFeatureResult)(nil)).Elem()
}

func (o LookupSystemSnmpFeatureResultOutput) ToLookupSystemSnmpFeatureResultOutput() LookupSystemSnmpFeatureResultOutput {
	return o
}

func (o LookupSystemSnmpFeatureResultOutput) ToLookupSystemSnmpFeatureResultOutputWithContext(ctx context.Context) LookupSystemSnmpFeatureResultOutput {
	return o
}

// Configure SNMP community
func (o LookupSystemSnmpFeatureResultOutput) Communities() GetSystemSnmpFeatureCommunityArrayOutput {
	return o.ApplyT(func(v LookupSystemSnmpFeatureResult) []GetSystemSnmpFeatureCommunity { return v.Communities }).(GetSystemSnmpFeatureCommunityArrayOutput)
}

// Set the contact for this managed node
func (o LookupSystemSnmpFeatureResultOutput) ContactPerson() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemSnmpFeatureResult) string { return v.ContactPerson }).(pulumi.StringOutput)
}

// Variable name
func (o LookupSystemSnmpFeatureResultOutput) ContactPersonVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemSnmpFeatureResult) string { return v.ContactPersonVariable }).(pulumi.StringOutput)
}

// The description of the Feature
func (o LookupSystemSnmpFeatureResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemSnmpFeatureResult) string { return v.Description }).(pulumi.StringOutput)
}

// Feature Profile ID
func (o LookupSystemSnmpFeatureResultOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemSnmpFeatureResult) string { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// Configure an SNMP group
func (o LookupSystemSnmpFeatureResultOutput) Groups() GetSystemSnmpFeatureGroupArrayOutput {
	return o.ApplyT(func(v LookupSystemSnmpFeatureResult) []GetSystemSnmpFeatureGroup { return v.Groups }).(GetSystemSnmpFeatureGroupArrayOutput)
}

// The id of the Feature
func (o LookupSystemSnmpFeatureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemSnmpFeatureResult) string { return v.Id }).(pulumi.StringOutput)
}

// Set the physical location of this managed node
func (o LookupSystemSnmpFeatureResultOutput) LocationOfDevice() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemSnmpFeatureResult) string { return v.LocationOfDevice }).(pulumi.StringOutput)
}

// Variable name
func (o LookupSystemSnmpFeatureResultOutput) LocationOfDeviceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemSnmpFeatureResult) string { return v.LocationOfDeviceVariable }).(pulumi.StringOutput)
}

// The name of the Feature
func (o LookupSystemSnmpFeatureResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemSnmpFeatureResult) string { return v.Name }).(pulumi.StringOutput)
}

// Enable or disable SNMP
func (o LookupSystemSnmpFeatureResultOutput) Shutdown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSystemSnmpFeatureResult) bool { return v.Shutdown }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupSystemSnmpFeatureResultOutput) ShutdownVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemSnmpFeatureResult) string { return v.ShutdownVariable }).(pulumi.StringOutput)
}

// Configure SNMP server to receive SNMP traps
func (o LookupSystemSnmpFeatureResultOutput) TrapTargetServers() GetSystemSnmpFeatureTrapTargetServerArrayOutput {
	return o.ApplyT(func(v LookupSystemSnmpFeatureResult) []GetSystemSnmpFeatureTrapTargetServer {
		return v.TrapTargetServers
	}).(GetSystemSnmpFeatureTrapTargetServerArrayOutput)
}

// Configure an SNMP user
func (o LookupSystemSnmpFeatureResultOutput) Users() GetSystemSnmpFeatureUserArrayOutput {
	return o.ApplyT(func(v LookupSystemSnmpFeatureResult) []GetSystemSnmpFeatureUser { return v.Users }).(GetSystemSnmpFeatureUserArrayOutput)
}

// The version of the Feature
func (o LookupSystemSnmpFeatureResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemSnmpFeatureResult) int { return v.Version }).(pulumi.IntOutput)
}

// Configure a view record
func (o LookupSystemSnmpFeatureResultOutput) Views() GetSystemSnmpFeatureViewArrayOutput {
	return o.ApplyT(func(v LookupSystemSnmpFeatureResult) []GetSystemSnmpFeatureView { return v.Views }).(GetSystemSnmpFeatureViewArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSystemSnmpFeatureResultOutput{})
}
