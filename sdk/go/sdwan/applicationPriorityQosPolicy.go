// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Application Priority QoS Policy.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "application_priority_qos_policy_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/applicationPriorityQosPolicy:ApplicationPriorityQosPolicy example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type ApplicationPriorityQosPolicy struct {
	pulumi.CustomResourceState

	// The description of the Policy
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// The name of the Policy
	Name pulumi.StringOutput `pulumi:"name"`
	// qosSchedulers
	QosSchedulers ApplicationPriorityQosPolicyQosSchedulerArrayOutput `pulumi:"qosSchedulers"`
	// Variable name
	TargetInterfaceVariable pulumi.StringPtrOutput `pulumi:"targetInterfaceVariable"`
	// interfaces
	TargetInterfaces pulumi.StringArrayOutput `pulumi:"targetInterfaces"`
	// The version of the Policy
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewApplicationPriorityQosPolicy registers a new resource with the given unique name, arguments, and options.
func NewApplicationPriorityQosPolicy(ctx *pulumi.Context,
	name string, args *ApplicationPriorityQosPolicyArgs, opts ...pulumi.ResourceOption) (*ApplicationPriorityQosPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplicationPriorityQosPolicy
	err := ctx.RegisterResource("sdwan:index/applicationPriorityQosPolicy:ApplicationPriorityQosPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationPriorityQosPolicy gets an existing ApplicationPriorityQosPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationPriorityQosPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationPriorityQosPolicyState, opts ...pulumi.ResourceOption) (*ApplicationPriorityQosPolicy, error) {
	var resource ApplicationPriorityQosPolicy
	err := ctx.ReadResource("sdwan:index/applicationPriorityQosPolicy:ApplicationPriorityQosPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationPriorityQosPolicy resources.
type applicationPriorityQosPolicyState struct {
	// The description of the Policy
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Policy
	Name *string `pulumi:"name"`
	// qosSchedulers
	QosSchedulers []ApplicationPriorityQosPolicyQosScheduler `pulumi:"qosSchedulers"`
	// Variable name
	TargetInterfaceVariable *string `pulumi:"targetInterfaceVariable"`
	// interfaces
	TargetInterfaces []string `pulumi:"targetInterfaces"`
	// The version of the Policy
	Version *int `pulumi:"version"`
}

type ApplicationPriorityQosPolicyState struct {
	// The description of the Policy
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Policy
	Name pulumi.StringPtrInput
	// qosSchedulers
	QosSchedulers ApplicationPriorityQosPolicyQosSchedulerArrayInput
	// Variable name
	TargetInterfaceVariable pulumi.StringPtrInput
	// interfaces
	TargetInterfaces pulumi.StringArrayInput
	// The version of the Policy
	Version pulumi.IntPtrInput
}

func (ApplicationPriorityQosPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationPriorityQosPolicyState)(nil)).Elem()
}

type applicationPriorityQosPolicyArgs struct {
	// The description of the Policy
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The name of the Policy
	Name *string `pulumi:"name"`
	// qosSchedulers
	QosSchedulers []ApplicationPriorityQosPolicyQosScheduler `pulumi:"qosSchedulers"`
	// Variable name
	TargetInterfaceVariable *string `pulumi:"targetInterfaceVariable"`
	// interfaces
	TargetInterfaces []string `pulumi:"targetInterfaces"`
}

// The set of arguments for constructing a ApplicationPriorityQosPolicy resource.
type ApplicationPriorityQosPolicyArgs struct {
	// The description of the Policy
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// The name of the Policy
	Name pulumi.StringPtrInput
	// qosSchedulers
	QosSchedulers ApplicationPriorityQosPolicyQosSchedulerArrayInput
	// Variable name
	TargetInterfaceVariable pulumi.StringPtrInput
	// interfaces
	TargetInterfaces pulumi.StringArrayInput
}

func (ApplicationPriorityQosPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationPriorityQosPolicyArgs)(nil)).Elem()
}

type ApplicationPriorityQosPolicyInput interface {
	pulumi.Input

	ToApplicationPriorityQosPolicyOutput() ApplicationPriorityQosPolicyOutput
	ToApplicationPriorityQosPolicyOutputWithContext(ctx context.Context) ApplicationPriorityQosPolicyOutput
}

func (*ApplicationPriorityQosPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationPriorityQosPolicy)(nil)).Elem()
}

func (i *ApplicationPriorityQosPolicy) ToApplicationPriorityQosPolicyOutput() ApplicationPriorityQosPolicyOutput {
	return i.ToApplicationPriorityQosPolicyOutputWithContext(context.Background())
}

func (i *ApplicationPriorityQosPolicy) ToApplicationPriorityQosPolicyOutputWithContext(ctx context.Context) ApplicationPriorityQosPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPriorityQosPolicyOutput)
}

// ApplicationPriorityQosPolicyArrayInput is an input type that accepts ApplicationPriorityQosPolicyArray and ApplicationPriorityQosPolicyArrayOutput values.
// You can construct a concrete instance of `ApplicationPriorityQosPolicyArrayInput` via:
//
//	ApplicationPriorityQosPolicyArray{ ApplicationPriorityQosPolicyArgs{...} }
type ApplicationPriorityQosPolicyArrayInput interface {
	pulumi.Input

	ToApplicationPriorityQosPolicyArrayOutput() ApplicationPriorityQosPolicyArrayOutput
	ToApplicationPriorityQosPolicyArrayOutputWithContext(context.Context) ApplicationPriorityQosPolicyArrayOutput
}

type ApplicationPriorityQosPolicyArray []ApplicationPriorityQosPolicyInput

func (ApplicationPriorityQosPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationPriorityQosPolicy)(nil)).Elem()
}

func (i ApplicationPriorityQosPolicyArray) ToApplicationPriorityQosPolicyArrayOutput() ApplicationPriorityQosPolicyArrayOutput {
	return i.ToApplicationPriorityQosPolicyArrayOutputWithContext(context.Background())
}

func (i ApplicationPriorityQosPolicyArray) ToApplicationPriorityQosPolicyArrayOutputWithContext(ctx context.Context) ApplicationPriorityQosPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPriorityQosPolicyArrayOutput)
}

// ApplicationPriorityQosPolicyMapInput is an input type that accepts ApplicationPriorityQosPolicyMap and ApplicationPriorityQosPolicyMapOutput values.
// You can construct a concrete instance of `ApplicationPriorityQosPolicyMapInput` via:
//
//	ApplicationPriorityQosPolicyMap{ "key": ApplicationPriorityQosPolicyArgs{...} }
type ApplicationPriorityQosPolicyMapInput interface {
	pulumi.Input

	ToApplicationPriorityQosPolicyMapOutput() ApplicationPriorityQosPolicyMapOutput
	ToApplicationPriorityQosPolicyMapOutputWithContext(context.Context) ApplicationPriorityQosPolicyMapOutput
}

type ApplicationPriorityQosPolicyMap map[string]ApplicationPriorityQosPolicyInput

func (ApplicationPriorityQosPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationPriorityQosPolicy)(nil)).Elem()
}

func (i ApplicationPriorityQosPolicyMap) ToApplicationPriorityQosPolicyMapOutput() ApplicationPriorityQosPolicyMapOutput {
	return i.ToApplicationPriorityQosPolicyMapOutputWithContext(context.Background())
}

func (i ApplicationPriorityQosPolicyMap) ToApplicationPriorityQosPolicyMapOutputWithContext(ctx context.Context) ApplicationPriorityQosPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPriorityQosPolicyMapOutput)
}

type ApplicationPriorityQosPolicyOutput struct{ *pulumi.OutputState }

func (ApplicationPriorityQosPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationPriorityQosPolicy)(nil)).Elem()
}

func (o ApplicationPriorityQosPolicyOutput) ToApplicationPriorityQosPolicyOutput() ApplicationPriorityQosPolicyOutput {
	return o
}

func (o ApplicationPriorityQosPolicyOutput) ToApplicationPriorityQosPolicyOutputWithContext(ctx context.Context) ApplicationPriorityQosPolicyOutput {
	return o
}

// The description of the Policy
func (o ApplicationPriorityQosPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationPriorityQosPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o ApplicationPriorityQosPolicyOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationPriorityQosPolicy) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The name of the Policy
func (o ApplicationPriorityQosPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationPriorityQosPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// qosSchedulers
func (o ApplicationPriorityQosPolicyOutput) QosSchedulers() ApplicationPriorityQosPolicyQosSchedulerArrayOutput {
	return o.ApplyT(func(v *ApplicationPriorityQosPolicy) ApplicationPriorityQosPolicyQosSchedulerArrayOutput {
		return v.QosSchedulers
	}).(ApplicationPriorityQosPolicyQosSchedulerArrayOutput)
}

// Variable name
func (o ApplicationPriorityQosPolicyOutput) TargetInterfaceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationPriorityQosPolicy) pulumi.StringPtrOutput { return v.TargetInterfaceVariable }).(pulumi.StringPtrOutput)
}

// interfaces
func (o ApplicationPriorityQosPolicyOutput) TargetInterfaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationPriorityQosPolicy) pulumi.StringArrayOutput { return v.TargetInterfaces }).(pulumi.StringArrayOutput)
}

// The version of the Policy
func (o ApplicationPriorityQosPolicyOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ApplicationPriorityQosPolicy) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ApplicationPriorityQosPolicyArrayOutput struct{ *pulumi.OutputState }

func (ApplicationPriorityQosPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationPriorityQosPolicy)(nil)).Elem()
}

func (o ApplicationPriorityQosPolicyArrayOutput) ToApplicationPriorityQosPolicyArrayOutput() ApplicationPriorityQosPolicyArrayOutput {
	return o
}

func (o ApplicationPriorityQosPolicyArrayOutput) ToApplicationPriorityQosPolicyArrayOutputWithContext(ctx context.Context) ApplicationPriorityQosPolicyArrayOutput {
	return o
}

func (o ApplicationPriorityQosPolicyArrayOutput) Index(i pulumi.IntInput) ApplicationPriorityQosPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplicationPriorityQosPolicy {
		return vs[0].([]*ApplicationPriorityQosPolicy)[vs[1].(int)]
	}).(ApplicationPriorityQosPolicyOutput)
}

type ApplicationPriorityQosPolicyMapOutput struct{ *pulumi.OutputState }

func (ApplicationPriorityQosPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationPriorityQosPolicy)(nil)).Elem()
}

func (o ApplicationPriorityQosPolicyMapOutput) ToApplicationPriorityQosPolicyMapOutput() ApplicationPriorityQosPolicyMapOutput {
	return o
}

func (o ApplicationPriorityQosPolicyMapOutput) ToApplicationPriorityQosPolicyMapOutputWithContext(ctx context.Context) ApplicationPriorityQosPolicyMapOutput {
	return o
}

func (o ApplicationPriorityQosPolicyMapOutput) MapIndex(k pulumi.StringInput) ApplicationPriorityQosPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplicationPriorityQosPolicy {
		return vs[0].(map[string]*ApplicationPriorityQosPolicy)[vs[1].(string)]
	}).(ApplicationPriorityQosPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationPriorityQosPolicyInput)(nil)).Elem(), &ApplicationPriorityQosPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationPriorityQosPolicyArrayInput)(nil)).Elem(), ApplicationPriorityQosPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationPriorityQosPolicyMapInput)(nil)).Elem(), ApplicationPriorityQosPolicyMap{})
	pulumi.RegisterOutputType(ApplicationPriorityQosPolicyOutput{})
	pulumi.RegisterOutputType(ApplicationPriorityQosPolicyArrayOutput{})
	pulumi.RegisterOutputType(ApplicationPriorityQosPolicyMapOutput{})
}
