// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a System BFD profile parcel.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/systemBfdProfileParcel:SystemBfdProfileParcel example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type SystemBfdProfileParcel struct {
	pulumi.CustomResourceState

	// Set color that identifies the WAN transport tunnel
	Colors SystemBfdProfileParcelColorArrayOutput `pulumi:"colors"`
	// - Range: `0`-`63` - Default value: `48`
	DefaultDscp pulumi.IntPtrOutput `pulumi:"defaultDscp"`
	// Variable name
	DefaultDscpVariable pulumi.StringPtrOutput `pulumi:"defaultDscpVariable"`
	// The description of the profile parcel
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// - Range: `1`-`6` - Default value: `6`
	Multiplier pulumi.IntPtrOutput `pulumi:"multiplier"`
	// Variable name
	MultiplierVariable pulumi.StringPtrOutput `pulumi:"multiplierVariable"`
	// The name of the profile parcel
	Name pulumi.StringOutput `pulumi:"name"`
	// - Range: `1`-`4294967295` - Default value: `600000`
	PollInterval pulumi.IntPtrOutput `pulumi:"pollInterval"`
	// Variable name
	PollIntervalVariable pulumi.StringPtrOutput `pulumi:"pollIntervalVariable"`
	// The version of the profile parcel
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewSystemBfdProfileParcel registers a new resource with the given unique name, arguments, and options.
func NewSystemBfdProfileParcel(ctx *pulumi.Context,
	name string, args *SystemBfdProfileParcelArgs, opts ...pulumi.ResourceOption) (*SystemBfdProfileParcel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemBfdProfileParcel
	err := ctx.RegisterResource("sdwan:index/systemBfdProfileParcel:SystemBfdProfileParcel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemBfdProfileParcel gets an existing SystemBfdProfileParcel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemBfdProfileParcel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemBfdProfileParcelState, opts ...pulumi.ResourceOption) (*SystemBfdProfileParcel, error) {
	var resource SystemBfdProfileParcel
	err := ctx.ReadResource("sdwan:index/systemBfdProfileParcel:SystemBfdProfileParcel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemBfdProfileParcel resources.
type systemBfdProfileParcelState struct {
	// Set color that identifies the WAN transport tunnel
	Colors []SystemBfdProfileParcelColor `pulumi:"colors"`
	// - Range: `0`-`63` - Default value: `48`
	DefaultDscp *int `pulumi:"defaultDscp"`
	// Variable name
	DefaultDscpVariable *string `pulumi:"defaultDscpVariable"`
	// The description of the profile parcel
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// - Range: `1`-`6` - Default value: `6`
	Multiplier *int `pulumi:"multiplier"`
	// Variable name
	MultiplierVariable *string `pulumi:"multiplierVariable"`
	// The name of the profile parcel
	Name *string `pulumi:"name"`
	// - Range: `1`-`4294967295` - Default value: `600000`
	PollInterval *int `pulumi:"pollInterval"`
	// Variable name
	PollIntervalVariable *string `pulumi:"pollIntervalVariable"`
	// The version of the profile parcel
	Version *int `pulumi:"version"`
}

type SystemBfdProfileParcelState struct {
	// Set color that identifies the WAN transport tunnel
	Colors SystemBfdProfileParcelColorArrayInput
	// - Range: `0`-`63` - Default value: `48`
	DefaultDscp pulumi.IntPtrInput
	// Variable name
	DefaultDscpVariable pulumi.StringPtrInput
	// The description of the profile parcel
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// - Range: `1`-`6` - Default value: `6`
	Multiplier pulumi.IntPtrInput
	// Variable name
	MultiplierVariable pulumi.StringPtrInput
	// The name of the profile parcel
	Name pulumi.StringPtrInput
	// - Range: `1`-`4294967295` - Default value: `600000`
	PollInterval pulumi.IntPtrInput
	// Variable name
	PollIntervalVariable pulumi.StringPtrInput
	// The version of the profile parcel
	Version pulumi.IntPtrInput
}

func (SystemBfdProfileParcelState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemBfdProfileParcelState)(nil)).Elem()
}

type systemBfdProfileParcelArgs struct {
	// Set color that identifies the WAN transport tunnel
	Colors []SystemBfdProfileParcelColor `pulumi:"colors"`
	// - Range: `0`-`63` - Default value: `48`
	DefaultDscp *int `pulumi:"defaultDscp"`
	// Variable name
	DefaultDscpVariable *string `pulumi:"defaultDscpVariable"`
	// The description of the profile parcel
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// - Range: `1`-`6` - Default value: `6`
	Multiplier *int `pulumi:"multiplier"`
	// Variable name
	MultiplierVariable *string `pulumi:"multiplierVariable"`
	// The name of the profile parcel
	Name *string `pulumi:"name"`
	// - Range: `1`-`4294967295` - Default value: `600000`
	PollInterval *int `pulumi:"pollInterval"`
	// Variable name
	PollIntervalVariable *string `pulumi:"pollIntervalVariable"`
}

// The set of arguments for constructing a SystemBfdProfileParcel resource.
type SystemBfdProfileParcelArgs struct {
	// Set color that identifies the WAN transport tunnel
	Colors SystemBfdProfileParcelColorArrayInput
	// - Range: `0`-`63` - Default value: `48`
	DefaultDscp pulumi.IntPtrInput
	// Variable name
	DefaultDscpVariable pulumi.StringPtrInput
	// The description of the profile parcel
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// - Range: `1`-`6` - Default value: `6`
	Multiplier pulumi.IntPtrInput
	// Variable name
	MultiplierVariable pulumi.StringPtrInput
	// The name of the profile parcel
	Name pulumi.StringPtrInput
	// - Range: `1`-`4294967295` - Default value: `600000`
	PollInterval pulumi.IntPtrInput
	// Variable name
	PollIntervalVariable pulumi.StringPtrInput
}

func (SystemBfdProfileParcelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemBfdProfileParcelArgs)(nil)).Elem()
}

type SystemBfdProfileParcelInput interface {
	pulumi.Input

	ToSystemBfdProfileParcelOutput() SystemBfdProfileParcelOutput
	ToSystemBfdProfileParcelOutputWithContext(ctx context.Context) SystemBfdProfileParcelOutput
}

func (*SystemBfdProfileParcel) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemBfdProfileParcel)(nil)).Elem()
}

func (i *SystemBfdProfileParcel) ToSystemBfdProfileParcelOutput() SystemBfdProfileParcelOutput {
	return i.ToSystemBfdProfileParcelOutputWithContext(context.Background())
}

func (i *SystemBfdProfileParcel) ToSystemBfdProfileParcelOutputWithContext(ctx context.Context) SystemBfdProfileParcelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemBfdProfileParcelOutput)
}

// SystemBfdProfileParcelArrayInput is an input type that accepts SystemBfdProfileParcelArray and SystemBfdProfileParcelArrayOutput values.
// You can construct a concrete instance of `SystemBfdProfileParcelArrayInput` via:
//
//	SystemBfdProfileParcelArray{ SystemBfdProfileParcelArgs{...} }
type SystemBfdProfileParcelArrayInput interface {
	pulumi.Input

	ToSystemBfdProfileParcelArrayOutput() SystemBfdProfileParcelArrayOutput
	ToSystemBfdProfileParcelArrayOutputWithContext(context.Context) SystemBfdProfileParcelArrayOutput
}

type SystemBfdProfileParcelArray []SystemBfdProfileParcelInput

func (SystemBfdProfileParcelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemBfdProfileParcel)(nil)).Elem()
}

func (i SystemBfdProfileParcelArray) ToSystemBfdProfileParcelArrayOutput() SystemBfdProfileParcelArrayOutput {
	return i.ToSystemBfdProfileParcelArrayOutputWithContext(context.Background())
}

func (i SystemBfdProfileParcelArray) ToSystemBfdProfileParcelArrayOutputWithContext(ctx context.Context) SystemBfdProfileParcelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemBfdProfileParcelArrayOutput)
}

// SystemBfdProfileParcelMapInput is an input type that accepts SystemBfdProfileParcelMap and SystemBfdProfileParcelMapOutput values.
// You can construct a concrete instance of `SystemBfdProfileParcelMapInput` via:
//
//	SystemBfdProfileParcelMap{ "key": SystemBfdProfileParcelArgs{...} }
type SystemBfdProfileParcelMapInput interface {
	pulumi.Input

	ToSystemBfdProfileParcelMapOutput() SystemBfdProfileParcelMapOutput
	ToSystemBfdProfileParcelMapOutputWithContext(context.Context) SystemBfdProfileParcelMapOutput
}

type SystemBfdProfileParcelMap map[string]SystemBfdProfileParcelInput

func (SystemBfdProfileParcelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemBfdProfileParcel)(nil)).Elem()
}

func (i SystemBfdProfileParcelMap) ToSystemBfdProfileParcelMapOutput() SystemBfdProfileParcelMapOutput {
	return i.ToSystemBfdProfileParcelMapOutputWithContext(context.Background())
}

func (i SystemBfdProfileParcelMap) ToSystemBfdProfileParcelMapOutputWithContext(ctx context.Context) SystemBfdProfileParcelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemBfdProfileParcelMapOutput)
}

type SystemBfdProfileParcelOutput struct{ *pulumi.OutputState }

func (SystemBfdProfileParcelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemBfdProfileParcel)(nil)).Elem()
}

func (o SystemBfdProfileParcelOutput) ToSystemBfdProfileParcelOutput() SystemBfdProfileParcelOutput {
	return o
}

func (o SystemBfdProfileParcelOutput) ToSystemBfdProfileParcelOutputWithContext(ctx context.Context) SystemBfdProfileParcelOutput {
	return o
}

// Set color that identifies the WAN transport tunnel
func (o SystemBfdProfileParcelOutput) Colors() SystemBfdProfileParcelColorArrayOutput {
	return o.ApplyT(func(v *SystemBfdProfileParcel) SystemBfdProfileParcelColorArrayOutput { return v.Colors }).(SystemBfdProfileParcelColorArrayOutput)
}

// - Range: `0`-`63` - Default value: `48`
func (o SystemBfdProfileParcelOutput) DefaultDscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemBfdProfileParcel) pulumi.IntPtrOutput { return v.DefaultDscp }).(pulumi.IntPtrOutput)
}

// Variable name
func (o SystemBfdProfileParcelOutput) DefaultDscpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemBfdProfileParcel) pulumi.StringPtrOutput { return v.DefaultDscpVariable }).(pulumi.StringPtrOutput)
}

// The description of the profile parcel
func (o SystemBfdProfileParcelOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemBfdProfileParcel) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o SystemBfdProfileParcelOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemBfdProfileParcel) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// - Range: `1`-`6` - Default value: `6`
func (o SystemBfdProfileParcelOutput) Multiplier() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemBfdProfileParcel) pulumi.IntPtrOutput { return v.Multiplier }).(pulumi.IntPtrOutput)
}

// Variable name
func (o SystemBfdProfileParcelOutput) MultiplierVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemBfdProfileParcel) pulumi.StringPtrOutput { return v.MultiplierVariable }).(pulumi.StringPtrOutput)
}

// The name of the profile parcel
func (o SystemBfdProfileParcelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemBfdProfileParcel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// - Range: `1`-`4294967295` - Default value: `600000`
func (o SystemBfdProfileParcelOutput) PollInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemBfdProfileParcel) pulumi.IntPtrOutput { return v.PollInterval }).(pulumi.IntPtrOutput)
}

// Variable name
func (o SystemBfdProfileParcelOutput) PollIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemBfdProfileParcel) pulumi.StringPtrOutput { return v.PollIntervalVariable }).(pulumi.StringPtrOutput)
}

// The version of the profile parcel
func (o SystemBfdProfileParcelOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemBfdProfileParcel) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type SystemBfdProfileParcelArrayOutput struct{ *pulumi.OutputState }

func (SystemBfdProfileParcelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemBfdProfileParcel)(nil)).Elem()
}

func (o SystemBfdProfileParcelArrayOutput) ToSystemBfdProfileParcelArrayOutput() SystemBfdProfileParcelArrayOutput {
	return o
}

func (o SystemBfdProfileParcelArrayOutput) ToSystemBfdProfileParcelArrayOutputWithContext(ctx context.Context) SystemBfdProfileParcelArrayOutput {
	return o
}

func (o SystemBfdProfileParcelArrayOutput) Index(i pulumi.IntInput) SystemBfdProfileParcelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemBfdProfileParcel {
		return vs[0].([]*SystemBfdProfileParcel)[vs[1].(int)]
	}).(SystemBfdProfileParcelOutput)
}

type SystemBfdProfileParcelMapOutput struct{ *pulumi.OutputState }

func (SystemBfdProfileParcelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemBfdProfileParcel)(nil)).Elem()
}

func (o SystemBfdProfileParcelMapOutput) ToSystemBfdProfileParcelMapOutput() SystemBfdProfileParcelMapOutput {
	return o
}

func (o SystemBfdProfileParcelMapOutput) ToSystemBfdProfileParcelMapOutputWithContext(ctx context.Context) SystemBfdProfileParcelMapOutput {
	return o
}

func (o SystemBfdProfileParcelMapOutput) MapIndex(k pulumi.StringInput) SystemBfdProfileParcelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemBfdProfileParcel {
		return vs[0].(map[string]*SystemBfdProfileParcel)[vs[1].(string)]
	}).(SystemBfdProfileParcelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemBfdProfileParcelInput)(nil)).Elem(), &SystemBfdProfileParcel{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemBfdProfileParcelArrayInput)(nil)).Elem(), SystemBfdProfileParcelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemBfdProfileParcelMapInput)(nil)).Elem(), SystemBfdProfileParcelMap{})
	pulumi.RegisterOutputType(SystemBfdProfileParcelOutput{})
	pulumi.RegisterOutputType(SystemBfdProfileParcelArrayOutput{})
	pulumi.RegisterOutputType(SystemBfdProfileParcelMapOutput{})
}
