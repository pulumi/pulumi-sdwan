// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Policy Object IPv6 Prefix List Policy_object.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "policy_object_ipv6_prefix_list_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/policyObjectIpv6PrefixList:PolicyObjectIpv6PrefixList example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type PolicyObjectIpv6PrefixList struct {
	pulumi.CustomResourceState

	// The description of the Policy_object
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// IPv6 Prefix List
	Entries PolicyObjectIpv6PrefixListEntryArrayOutput `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the Policy_object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewPolicyObjectIpv6PrefixList registers a new resource with the given unique name, arguments, and options.
func NewPolicyObjectIpv6PrefixList(ctx *pulumi.Context,
	name string, args *PolicyObjectIpv6PrefixListArgs, opts ...pulumi.ResourceOption) (*PolicyObjectIpv6PrefixList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyObjectIpv6PrefixList
	err := ctx.RegisterResource("sdwan:index/policyObjectIpv6PrefixList:PolicyObjectIpv6PrefixList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyObjectIpv6PrefixList gets an existing PolicyObjectIpv6PrefixList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyObjectIpv6PrefixList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyObjectIpv6PrefixListState, opts ...pulumi.ResourceOption) (*PolicyObjectIpv6PrefixList, error) {
	var resource PolicyObjectIpv6PrefixList
	err := ctx.ReadResource("sdwan:index/policyObjectIpv6PrefixList:PolicyObjectIpv6PrefixList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyObjectIpv6PrefixList resources.
type policyObjectIpv6PrefixListState struct {
	// The description of the Policy_object
	Description *string `pulumi:"description"`
	// IPv6 Prefix List
	Entries []PolicyObjectIpv6PrefixListEntry `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name *string `pulumi:"name"`
	// The version of the Policy_object
	Version *int `pulumi:"version"`
}

type PolicyObjectIpv6PrefixListState struct {
	// The description of the Policy_object
	Description pulumi.StringPtrInput
	// IPv6 Prefix List
	Entries PolicyObjectIpv6PrefixListEntryArrayInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Policy_object
	Name pulumi.StringPtrInput
	// The version of the Policy_object
	Version pulumi.IntPtrInput
}

func (PolicyObjectIpv6PrefixListState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyObjectIpv6PrefixListState)(nil)).Elem()
}

type policyObjectIpv6PrefixListArgs struct {
	// The description of the Policy_object
	Description *string `pulumi:"description"`
	// IPv6 Prefix List
	Entries []PolicyObjectIpv6PrefixListEntry `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a PolicyObjectIpv6PrefixList resource.
type PolicyObjectIpv6PrefixListArgs struct {
	// The description of the Policy_object
	Description pulumi.StringPtrInput
	// IPv6 Prefix List
	Entries PolicyObjectIpv6PrefixListEntryArrayInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// The name of the Policy_object
	Name pulumi.StringPtrInput
}

func (PolicyObjectIpv6PrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyObjectIpv6PrefixListArgs)(nil)).Elem()
}

type PolicyObjectIpv6PrefixListInput interface {
	pulumi.Input

	ToPolicyObjectIpv6PrefixListOutput() PolicyObjectIpv6PrefixListOutput
	ToPolicyObjectIpv6PrefixListOutputWithContext(ctx context.Context) PolicyObjectIpv6PrefixListOutput
}

func (*PolicyObjectIpv6PrefixList) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyObjectIpv6PrefixList)(nil)).Elem()
}

func (i *PolicyObjectIpv6PrefixList) ToPolicyObjectIpv6PrefixListOutput() PolicyObjectIpv6PrefixListOutput {
	return i.ToPolicyObjectIpv6PrefixListOutputWithContext(context.Background())
}

func (i *PolicyObjectIpv6PrefixList) ToPolicyObjectIpv6PrefixListOutputWithContext(ctx context.Context) PolicyObjectIpv6PrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectIpv6PrefixListOutput)
}

// PolicyObjectIpv6PrefixListArrayInput is an input type that accepts PolicyObjectIpv6PrefixListArray and PolicyObjectIpv6PrefixListArrayOutput values.
// You can construct a concrete instance of `PolicyObjectIpv6PrefixListArrayInput` via:
//
//	PolicyObjectIpv6PrefixListArray{ PolicyObjectIpv6PrefixListArgs{...} }
type PolicyObjectIpv6PrefixListArrayInput interface {
	pulumi.Input

	ToPolicyObjectIpv6PrefixListArrayOutput() PolicyObjectIpv6PrefixListArrayOutput
	ToPolicyObjectIpv6PrefixListArrayOutputWithContext(context.Context) PolicyObjectIpv6PrefixListArrayOutput
}

type PolicyObjectIpv6PrefixListArray []PolicyObjectIpv6PrefixListInput

func (PolicyObjectIpv6PrefixListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyObjectIpv6PrefixList)(nil)).Elem()
}

func (i PolicyObjectIpv6PrefixListArray) ToPolicyObjectIpv6PrefixListArrayOutput() PolicyObjectIpv6PrefixListArrayOutput {
	return i.ToPolicyObjectIpv6PrefixListArrayOutputWithContext(context.Background())
}

func (i PolicyObjectIpv6PrefixListArray) ToPolicyObjectIpv6PrefixListArrayOutputWithContext(ctx context.Context) PolicyObjectIpv6PrefixListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectIpv6PrefixListArrayOutput)
}

// PolicyObjectIpv6PrefixListMapInput is an input type that accepts PolicyObjectIpv6PrefixListMap and PolicyObjectIpv6PrefixListMapOutput values.
// You can construct a concrete instance of `PolicyObjectIpv6PrefixListMapInput` via:
//
//	PolicyObjectIpv6PrefixListMap{ "key": PolicyObjectIpv6PrefixListArgs{...} }
type PolicyObjectIpv6PrefixListMapInput interface {
	pulumi.Input

	ToPolicyObjectIpv6PrefixListMapOutput() PolicyObjectIpv6PrefixListMapOutput
	ToPolicyObjectIpv6PrefixListMapOutputWithContext(context.Context) PolicyObjectIpv6PrefixListMapOutput
}

type PolicyObjectIpv6PrefixListMap map[string]PolicyObjectIpv6PrefixListInput

func (PolicyObjectIpv6PrefixListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyObjectIpv6PrefixList)(nil)).Elem()
}

func (i PolicyObjectIpv6PrefixListMap) ToPolicyObjectIpv6PrefixListMapOutput() PolicyObjectIpv6PrefixListMapOutput {
	return i.ToPolicyObjectIpv6PrefixListMapOutputWithContext(context.Background())
}

func (i PolicyObjectIpv6PrefixListMap) ToPolicyObjectIpv6PrefixListMapOutputWithContext(ctx context.Context) PolicyObjectIpv6PrefixListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectIpv6PrefixListMapOutput)
}

type PolicyObjectIpv6PrefixListOutput struct{ *pulumi.OutputState }

func (PolicyObjectIpv6PrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyObjectIpv6PrefixList)(nil)).Elem()
}

func (o PolicyObjectIpv6PrefixListOutput) ToPolicyObjectIpv6PrefixListOutput() PolicyObjectIpv6PrefixListOutput {
	return o
}

func (o PolicyObjectIpv6PrefixListOutput) ToPolicyObjectIpv6PrefixListOutputWithContext(ctx context.Context) PolicyObjectIpv6PrefixListOutput {
	return o
}

// The description of the Policy_object
func (o PolicyObjectIpv6PrefixListOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyObjectIpv6PrefixList) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// IPv6 Prefix List
func (o PolicyObjectIpv6PrefixListOutput) Entries() PolicyObjectIpv6PrefixListEntryArrayOutput {
	return o.ApplyT(func(v *PolicyObjectIpv6PrefixList) PolicyObjectIpv6PrefixListEntryArrayOutput { return v.Entries }).(PolicyObjectIpv6PrefixListEntryArrayOutput)
}

// Feature Profile ID
func (o PolicyObjectIpv6PrefixListOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectIpv6PrefixList) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The name of the Policy_object
func (o PolicyObjectIpv6PrefixListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectIpv6PrefixList) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the Policy_object
func (o PolicyObjectIpv6PrefixListOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *PolicyObjectIpv6PrefixList) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type PolicyObjectIpv6PrefixListArrayOutput struct{ *pulumi.OutputState }

func (PolicyObjectIpv6PrefixListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyObjectIpv6PrefixList)(nil)).Elem()
}

func (o PolicyObjectIpv6PrefixListArrayOutput) ToPolicyObjectIpv6PrefixListArrayOutput() PolicyObjectIpv6PrefixListArrayOutput {
	return o
}

func (o PolicyObjectIpv6PrefixListArrayOutput) ToPolicyObjectIpv6PrefixListArrayOutputWithContext(ctx context.Context) PolicyObjectIpv6PrefixListArrayOutput {
	return o
}

func (o PolicyObjectIpv6PrefixListArrayOutput) Index(i pulumi.IntInput) PolicyObjectIpv6PrefixListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyObjectIpv6PrefixList {
		return vs[0].([]*PolicyObjectIpv6PrefixList)[vs[1].(int)]
	}).(PolicyObjectIpv6PrefixListOutput)
}

type PolicyObjectIpv6PrefixListMapOutput struct{ *pulumi.OutputState }

func (PolicyObjectIpv6PrefixListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyObjectIpv6PrefixList)(nil)).Elem()
}

func (o PolicyObjectIpv6PrefixListMapOutput) ToPolicyObjectIpv6PrefixListMapOutput() PolicyObjectIpv6PrefixListMapOutput {
	return o
}

func (o PolicyObjectIpv6PrefixListMapOutput) ToPolicyObjectIpv6PrefixListMapOutputWithContext(ctx context.Context) PolicyObjectIpv6PrefixListMapOutput {
	return o
}

func (o PolicyObjectIpv6PrefixListMapOutput) MapIndex(k pulumi.StringInput) PolicyObjectIpv6PrefixListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyObjectIpv6PrefixList {
		return vs[0].(map[string]*PolicyObjectIpv6PrefixList)[vs[1].(string)]
	}).(PolicyObjectIpv6PrefixListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectIpv6PrefixListInput)(nil)).Elem(), &PolicyObjectIpv6PrefixList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectIpv6PrefixListArrayInput)(nil)).Elem(), PolicyObjectIpv6PrefixListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectIpv6PrefixListMapInput)(nil)).Elem(), PolicyObjectIpv6PrefixListMap{})
	pulumi.RegisterOutputType(PolicyObjectIpv6PrefixListOutput{})
	pulumi.RegisterOutputType(PolicyObjectIpv6PrefixListArrayOutput{})
	pulumi.RegisterOutputType(PolicyObjectIpv6PrefixListMapOutput{})
}
