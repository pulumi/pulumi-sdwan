// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a System SNMP profile parcel.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/systemSnmpProfileParcel:SystemSnmpProfileParcel example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type SystemSnmpProfileParcel struct {
	pulumi.CustomResourceState

	// Configure SNMP community
	Communities SystemSnmpProfileParcelCommunityArrayOutput `pulumi:"communities"`
	// Set the contact for this managed node
	ContactPerson pulumi.StringPtrOutput `pulumi:"contactPerson"`
	// Variable name
	ContactPersonVariable pulumi.StringPtrOutput `pulumi:"contactPersonVariable"`
	// The description of the profile parcel
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrOutput `pulumi:"featureProfileId"`
	// Configure an SNMP group
	Groups SystemSnmpProfileParcelGroupArrayOutput `pulumi:"groups"`
	// Set the physical location of this managed node
	LocationOfDevice pulumi.StringPtrOutput `pulumi:"locationOfDevice"`
	// Variable name
	LocationOfDeviceVariable pulumi.StringPtrOutput `pulumi:"locationOfDeviceVariable"`
	// The name of the profile parcel
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable or disable SNMP - Default value: `false`
	Shutdown pulumi.BoolPtrOutput `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable pulumi.StringPtrOutput `pulumi:"shutdownVariable"`
	// Configure SNMP server to receive SNMP traps
	TrapTargetServers SystemSnmpProfileParcelTrapTargetServerArrayOutput `pulumi:"trapTargetServers"`
	// Configure an SNMP user
	Users SystemSnmpProfileParcelUserArrayOutput `pulumi:"users"`
	// The version of the profile parcel
	Version pulumi.IntOutput `pulumi:"version"`
	// Configure a view record
	Views SystemSnmpProfileParcelViewArrayOutput `pulumi:"views"`
}

// NewSystemSnmpProfileParcel registers a new resource with the given unique name, arguments, and options.
func NewSystemSnmpProfileParcel(ctx *pulumi.Context,
	name string, args *SystemSnmpProfileParcelArgs, opts ...pulumi.ResourceOption) (*SystemSnmpProfileParcel, error) {
	if args == nil {
		args = &SystemSnmpProfileParcelArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemSnmpProfileParcel
	err := ctx.RegisterResource("sdwan:index/systemSnmpProfileParcel:SystemSnmpProfileParcel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemSnmpProfileParcel gets an existing SystemSnmpProfileParcel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemSnmpProfileParcel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemSnmpProfileParcelState, opts ...pulumi.ResourceOption) (*SystemSnmpProfileParcel, error) {
	var resource SystemSnmpProfileParcel
	err := ctx.ReadResource("sdwan:index/systemSnmpProfileParcel:SystemSnmpProfileParcel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemSnmpProfileParcel resources.
type systemSnmpProfileParcelState struct {
	// Configure SNMP community
	Communities []SystemSnmpProfileParcelCommunity `pulumi:"communities"`
	// Set the contact for this managed node
	ContactPerson *string `pulumi:"contactPerson"`
	// Variable name
	ContactPersonVariable *string `pulumi:"contactPersonVariable"`
	// The description of the profile parcel
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// Configure an SNMP group
	Groups []SystemSnmpProfileParcelGroup `pulumi:"groups"`
	// Set the physical location of this managed node
	LocationOfDevice *string `pulumi:"locationOfDevice"`
	// Variable name
	LocationOfDeviceVariable *string `pulumi:"locationOfDeviceVariable"`
	// The name of the profile parcel
	Name *string `pulumi:"name"`
	// Enable or disable SNMP - Default value: `false`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// Configure SNMP server to receive SNMP traps
	TrapTargetServers []SystemSnmpProfileParcelTrapTargetServer `pulumi:"trapTargetServers"`
	// Configure an SNMP user
	Users []SystemSnmpProfileParcelUser `pulumi:"users"`
	// The version of the profile parcel
	Version *int `pulumi:"version"`
	// Configure a view record
	Views []SystemSnmpProfileParcelView `pulumi:"views"`
}

type SystemSnmpProfileParcelState struct {
	// Configure SNMP community
	Communities SystemSnmpProfileParcelCommunityArrayInput
	// Set the contact for this managed node
	ContactPerson pulumi.StringPtrInput
	// Variable name
	ContactPersonVariable pulumi.StringPtrInput
	// The description of the profile parcel
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// Configure an SNMP group
	Groups SystemSnmpProfileParcelGroupArrayInput
	// Set the physical location of this managed node
	LocationOfDevice pulumi.StringPtrInput
	// Variable name
	LocationOfDeviceVariable pulumi.StringPtrInput
	// The name of the profile parcel
	Name pulumi.StringPtrInput
	// Enable or disable SNMP - Default value: `false`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// Configure SNMP server to receive SNMP traps
	TrapTargetServers SystemSnmpProfileParcelTrapTargetServerArrayInput
	// Configure an SNMP user
	Users SystemSnmpProfileParcelUserArrayInput
	// The version of the profile parcel
	Version pulumi.IntPtrInput
	// Configure a view record
	Views SystemSnmpProfileParcelViewArrayInput
}

func (SystemSnmpProfileParcelState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSnmpProfileParcelState)(nil)).Elem()
}

type systemSnmpProfileParcelArgs struct {
	// Configure SNMP community
	Communities []SystemSnmpProfileParcelCommunity `pulumi:"communities"`
	// Set the contact for this managed node
	ContactPerson *string `pulumi:"contactPerson"`
	// Variable name
	ContactPersonVariable *string `pulumi:"contactPersonVariable"`
	// The description of the profile parcel
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// Configure an SNMP group
	Groups []SystemSnmpProfileParcelGroup `pulumi:"groups"`
	// Set the physical location of this managed node
	LocationOfDevice *string `pulumi:"locationOfDevice"`
	// Variable name
	LocationOfDeviceVariable *string `pulumi:"locationOfDeviceVariable"`
	// The name of the profile parcel
	Name *string `pulumi:"name"`
	// Enable or disable SNMP - Default value: `false`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// Configure SNMP server to receive SNMP traps
	TrapTargetServers []SystemSnmpProfileParcelTrapTargetServer `pulumi:"trapTargetServers"`
	// Configure an SNMP user
	Users []SystemSnmpProfileParcelUser `pulumi:"users"`
	// Configure a view record
	Views []SystemSnmpProfileParcelView `pulumi:"views"`
}

// The set of arguments for constructing a SystemSnmpProfileParcel resource.
type SystemSnmpProfileParcelArgs struct {
	// Configure SNMP community
	Communities SystemSnmpProfileParcelCommunityArrayInput
	// Set the contact for this managed node
	ContactPerson pulumi.StringPtrInput
	// Variable name
	ContactPersonVariable pulumi.StringPtrInput
	// The description of the profile parcel
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// Configure an SNMP group
	Groups SystemSnmpProfileParcelGroupArrayInput
	// Set the physical location of this managed node
	LocationOfDevice pulumi.StringPtrInput
	// Variable name
	LocationOfDeviceVariable pulumi.StringPtrInput
	// The name of the profile parcel
	Name pulumi.StringPtrInput
	// Enable or disable SNMP - Default value: `false`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// Configure SNMP server to receive SNMP traps
	TrapTargetServers SystemSnmpProfileParcelTrapTargetServerArrayInput
	// Configure an SNMP user
	Users SystemSnmpProfileParcelUserArrayInput
	// Configure a view record
	Views SystemSnmpProfileParcelViewArrayInput
}

func (SystemSnmpProfileParcelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSnmpProfileParcelArgs)(nil)).Elem()
}

type SystemSnmpProfileParcelInput interface {
	pulumi.Input

	ToSystemSnmpProfileParcelOutput() SystemSnmpProfileParcelOutput
	ToSystemSnmpProfileParcelOutputWithContext(ctx context.Context) SystemSnmpProfileParcelOutput
}

func (*SystemSnmpProfileParcel) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSnmpProfileParcel)(nil)).Elem()
}

func (i *SystemSnmpProfileParcel) ToSystemSnmpProfileParcelOutput() SystemSnmpProfileParcelOutput {
	return i.ToSystemSnmpProfileParcelOutputWithContext(context.Background())
}

func (i *SystemSnmpProfileParcel) ToSystemSnmpProfileParcelOutputWithContext(ctx context.Context) SystemSnmpProfileParcelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpProfileParcelOutput)
}

// SystemSnmpProfileParcelArrayInput is an input type that accepts SystemSnmpProfileParcelArray and SystemSnmpProfileParcelArrayOutput values.
// You can construct a concrete instance of `SystemSnmpProfileParcelArrayInput` via:
//
//	SystemSnmpProfileParcelArray{ SystemSnmpProfileParcelArgs{...} }
type SystemSnmpProfileParcelArrayInput interface {
	pulumi.Input

	ToSystemSnmpProfileParcelArrayOutput() SystemSnmpProfileParcelArrayOutput
	ToSystemSnmpProfileParcelArrayOutputWithContext(context.Context) SystemSnmpProfileParcelArrayOutput
}

type SystemSnmpProfileParcelArray []SystemSnmpProfileParcelInput

func (SystemSnmpProfileParcelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSnmpProfileParcel)(nil)).Elem()
}

func (i SystemSnmpProfileParcelArray) ToSystemSnmpProfileParcelArrayOutput() SystemSnmpProfileParcelArrayOutput {
	return i.ToSystemSnmpProfileParcelArrayOutputWithContext(context.Background())
}

func (i SystemSnmpProfileParcelArray) ToSystemSnmpProfileParcelArrayOutputWithContext(ctx context.Context) SystemSnmpProfileParcelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpProfileParcelArrayOutput)
}

// SystemSnmpProfileParcelMapInput is an input type that accepts SystemSnmpProfileParcelMap and SystemSnmpProfileParcelMapOutput values.
// You can construct a concrete instance of `SystemSnmpProfileParcelMapInput` via:
//
//	SystemSnmpProfileParcelMap{ "key": SystemSnmpProfileParcelArgs{...} }
type SystemSnmpProfileParcelMapInput interface {
	pulumi.Input

	ToSystemSnmpProfileParcelMapOutput() SystemSnmpProfileParcelMapOutput
	ToSystemSnmpProfileParcelMapOutputWithContext(context.Context) SystemSnmpProfileParcelMapOutput
}

type SystemSnmpProfileParcelMap map[string]SystemSnmpProfileParcelInput

func (SystemSnmpProfileParcelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSnmpProfileParcel)(nil)).Elem()
}

func (i SystemSnmpProfileParcelMap) ToSystemSnmpProfileParcelMapOutput() SystemSnmpProfileParcelMapOutput {
	return i.ToSystemSnmpProfileParcelMapOutputWithContext(context.Background())
}

func (i SystemSnmpProfileParcelMap) ToSystemSnmpProfileParcelMapOutputWithContext(ctx context.Context) SystemSnmpProfileParcelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSnmpProfileParcelMapOutput)
}

type SystemSnmpProfileParcelOutput struct{ *pulumi.OutputState }

func (SystemSnmpProfileParcelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSnmpProfileParcel)(nil)).Elem()
}

func (o SystemSnmpProfileParcelOutput) ToSystemSnmpProfileParcelOutput() SystemSnmpProfileParcelOutput {
	return o
}

func (o SystemSnmpProfileParcelOutput) ToSystemSnmpProfileParcelOutputWithContext(ctx context.Context) SystemSnmpProfileParcelOutput {
	return o
}

// Configure SNMP community
func (o SystemSnmpProfileParcelOutput) Communities() SystemSnmpProfileParcelCommunityArrayOutput {
	return o.ApplyT(func(v *SystemSnmpProfileParcel) SystemSnmpProfileParcelCommunityArrayOutput { return v.Communities }).(SystemSnmpProfileParcelCommunityArrayOutput)
}

// Set the contact for this managed node
func (o SystemSnmpProfileParcelOutput) ContactPerson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSnmpProfileParcel) pulumi.StringPtrOutput { return v.ContactPerson }).(pulumi.StringPtrOutput)
}

// Variable name
func (o SystemSnmpProfileParcelOutput) ContactPersonVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSnmpProfileParcel) pulumi.StringPtrOutput { return v.ContactPersonVariable }).(pulumi.StringPtrOutput)
}

// The description of the profile parcel
func (o SystemSnmpProfileParcelOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSnmpProfileParcel) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o SystemSnmpProfileParcelOutput) FeatureProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSnmpProfileParcel) pulumi.StringPtrOutput { return v.FeatureProfileId }).(pulumi.StringPtrOutput)
}

// Configure an SNMP group
func (o SystemSnmpProfileParcelOutput) Groups() SystemSnmpProfileParcelGroupArrayOutput {
	return o.ApplyT(func(v *SystemSnmpProfileParcel) SystemSnmpProfileParcelGroupArrayOutput { return v.Groups }).(SystemSnmpProfileParcelGroupArrayOutput)
}

// Set the physical location of this managed node
func (o SystemSnmpProfileParcelOutput) LocationOfDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSnmpProfileParcel) pulumi.StringPtrOutput { return v.LocationOfDevice }).(pulumi.StringPtrOutput)
}

// Variable name
func (o SystemSnmpProfileParcelOutput) LocationOfDeviceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSnmpProfileParcel) pulumi.StringPtrOutput { return v.LocationOfDeviceVariable }).(pulumi.StringPtrOutput)
}

// The name of the profile parcel
func (o SystemSnmpProfileParcelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSnmpProfileParcel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable or disable SNMP - Default value: `false`
func (o SystemSnmpProfileParcelOutput) Shutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SystemSnmpProfileParcel) pulumi.BoolPtrOutput { return v.Shutdown }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o SystemSnmpProfileParcelOutput) ShutdownVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSnmpProfileParcel) pulumi.StringPtrOutput { return v.ShutdownVariable }).(pulumi.StringPtrOutput)
}

// Configure SNMP server to receive SNMP traps
func (o SystemSnmpProfileParcelOutput) TrapTargetServers() SystemSnmpProfileParcelTrapTargetServerArrayOutput {
	return o.ApplyT(func(v *SystemSnmpProfileParcel) SystemSnmpProfileParcelTrapTargetServerArrayOutput {
		return v.TrapTargetServers
	}).(SystemSnmpProfileParcelTrapTargetServerArrayOutput)
}

// Configure an SNMP user
func (o SystemSnmpProfileParcelOutput) Users() SystemSnmpProfileParcelUserArrayOutput {
	return o.ApplyT(func(v *SystemSnmpProfileParcel) SystemSnmpProfileParcelUserArrayOutput { return v.Users }).(SystemSnmpProfileParcelUserArrayOutput)
}

// The version of the profile parcel
func (o SystemSnmpProfileParcelOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSnmpProfileParcel) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

// Configure a view record
func (o SystemSnmpProfileParcelOutput) Views() SystemSnmpProfileParcelViewArrayOutput {
	return o.ApplyT(func(v *SystemSnmpProfileParcel) SystemSnmpProfileParcelViewArrayOutput { return v.Views }).(SystemSnmpProfileParcelViewArrayOutput)
}

type SystemSnmpProfileParcelArrayOutput struct{ *pulumi.OutputState }

func (SystemSnmpProfileParcelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSnmpProfileParcel)(nil)).Elem()
}

func (o SystemSnmpProfileParcelArrayOutput) ToSystemSnmpProfileParcelArrayOutput() SystemSnmpProfileParcelArrayOutput {
	return o
}

func (o SystemSnmpProfileParcelArrayOutput) ToSystemSnmpProfileParcelArrayOutputWithContext(ctx context.Context) SystemSnmpProfileParcelArrayOutput {
	return o
}

func (o SystemSnmpProfileParcelArrayOutput) Index(i pulumi.IntInput) SystemSnmpProfileParcelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemSnmpProfileParcel {
		return vs[0].([]*SystemSnmpProfileParcel)[vs[1].(int)]
	}).(SystemSnmpProfileParcelOutput)
}

type SystemSnmpProfileParcelMapOutput struct{ *pulumi.OutputState }

func (SystemSnmpProfileParcelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSnmpProfileParcel)(nil)).Elem()
}

func (o SystemSnmpProfileParcelMapOutput) ToSystemSnmpProfileParcelMapOutput() SystemSnmpProfileParcelMapOutput {
	return o
}

func (o SystemSnmpProfileParcelMapOutput) ToSystemSnmpProfileParcelMapOutputWithContext(ctx context.Context) SystemSnmpProfileParcelMapOutput {
	return o
}

func (o SystemSnmpProfileParcelMapOutput) MapIndex(k pulumi.StringInput) SystemSnmpProfileParcelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemSnmpProfileParcel {
		return vs[0].(map[string]*SystemSnmpProfileParcel)[vs[1].(string)]
	}).(SystemSnmpProfileParcelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpProfileParcelInput)(nil)).Elem(), &SystemSnmpProfileParcel{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpProfileParcelArrayInput)(nil)).Elem(), SystemSnmpProfileParcelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSnmpProfileParcelMapInput)(nil)).Elem(), SystemSnmpProfileParcelMap{})
	pulumi.RegisterOutputType(SystemSnmpProfileParcelOutput{})
	pulumi.RegisterOutputType(SystemSnmpProfileParcelArrayOutput{})
	pulumi.RegisterOutputType(SystemSnmpProfileParcelMapOutput{})
}
