// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Local Application List Policy Object .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewLocalApplicationListPolicyObject(ctx, "example", &sdwan.LocalApplicationListPolicyObjectArgs{
//				Name: pulumi.String("Example"),
//				Entries: sdwan.LocalApplicationListPolicyObjectEntryArray{
//					&sdwan.LocalApplicationListPolicyObjectEntryArgs{
//						Application: pulumi.String("cisco-collab-video"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/localApplicationListPolicyObject:LocalApplicationListPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type LocalApplicationListPolicyObject struct {
	pulumi.CustomResourceState

	// List of entries
	Entries LocalApplicationListPolicyObjectEntryArrayOutput `pulumi:"entries"`
	// The name of the policy object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewLocalApplicationListPolicyObject registers a new resource with the given unique name, arguments, and options.
func NewLocalApplicationListPolicyObject(ctx *pulumi.Context,
	name string, args *LocalApplicationListPolicyObjectArgs, opts ...pulumi.ResourceOption) (*LocalApplicationListPolicyObject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LocalApplicationListPolicyObject
	err := ctx.RegisterResource("sdwan:index/localApplicationListPolicyObject:LocalApplicationListPolicyObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocalApplicationListPolicyObject gets an existing LocalApplicationListPolicyObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocalApplicationListPolicyObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocalApplicationListPolicyObjectState, opts ...pulumi.ResourceOption) (*LocalApplicationListPolicyObject, error) {
	var resource LocalApplicationListPolicyObject
	err := ctx.ReadResource("sdwan:index/localApplicationListPolicyObject:LocalApplicationListPolicyObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocalApplicationListPolicyObject resources.
type localApplicationListPolicyObjectState struct {
	// List of entries
	Entries []LocalApplicationListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type LocalApplicationListPolicyObjectState struct {
	// List of entries
	Entries LocalApplicationListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (LocalApplicationListPolicyObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*localApplicationListPolicyObjectState)(nil)).Elem()
}

type localApplicationListPolicyObjectArgs struct {
	// List of entries
	Entries []LocalApplicationListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a LocalApplicationListPolicyObject resource.
type LocalApplicationListPolicyObjectArgs struct {
	// List of entries
	Entries LocalApplicationListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
}

func (LocalApplicationListPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*localApplicationListPolicyObjectArgs)(nil)).Elem()
}

type LocalApplicationListPolicyObjectInput interface {
	pulumi.Input

	ToLocalApplicationListPolicyObjectOutput() LocalApplicationListPolicyObjectOutput
	ToLocalApplicationListPolicyObjectOutputWithContext(ctx context.Context) LocalApplicationListPolicyObjectOutput
}

func (*LocalApplicationListPolicyObject) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalApplicationListPolicyObject)(nil)).Elem()
}

func (i *LocalApplicationListPolicyObject) ToLocalApplicationListPolicyObjectOutput() LocalApplicationListPolicyObjectOutput {
	return i.ToLocalApplicationListPolicyObjectOutputWithContext(context.Background())
}

func (i *LocalApplicationListPolicyObject) ToLocalApplicationListPolicyObjectOutputWithContext(ctx context.Context) LocalApplicationListPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalApplicationListPolicyObjectOutput)
}

// LocalApplicationListPolicyObjectArrayInput is an input type that accepts LocalApplicationListPolicyObjectArray and LocalApplicationListPolicyObjectArrayOutput values.
// You can construct a concrete instance of `LocalApplicationListPolicyObjectArrayInput` via:
//
//	LocalApplicationListPolicyObjectArray{ LocalApplicationListPolicyObjectArgs{...} }
type LocalApplicationListPolicyObjectArrayInput interface {
	pulumi.Input

	ToLocalApplicationListPolicyObjectArrayOutput() LocalApplicationListPolicyObjectArrayOutput
	ToLocalApplicationListPolicyObjectArrayOutputWithContext(context.Context) LocalApplicationListPolicyObjectArrayOutput
}

type LocalApplicationListPolicyObjectArray []LocalApplicationListPolicyObjectInput

func (LocalApplicationListPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocalApplicationListPolicyObject)(nil)).Elem()
}

func (i LocalApplicationListPolicyObjectArray) ToLocalApplicationListPolicyObjectArrayOutput() LocalApplicationListPolicyObjectArrayOutput {
	return i.ToLocalApplicationListPolicyObjectArrayOutputWithContext(context.Background())
}

func (i LocalApplicationListPolicyObjectArray) ToLocalApplicationListPolicyObjectArrayOutputWithContext(ctx context.Context) LocalApplicationListPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalApplicationListPolicyObjectArrayOutput)
}

// LocalApplicationListPolicyObjectMapInput is an input type that accepts LocalApplicationListPolicyObjectMap and LocalApplicationListPolicyObjectMapOutput values.
// You can construct a concrete instance of `LocalApplicationListPolicyObjectMapInput` via:
//
//	LocalApplicationListPolicyObjectMap{ "key": LocalApplicationListPolicyObjectArgs{...} }
type LocalApplicationListPolicyObjectMapInput interface {
	pulumi.Input

	ToLocalApplicationListPolicyObjectMapOutput() LocalApplicationListPolicyObjectMapOutput
	ToLocalApplicationListPolicyObjectMapOutputWithContext(context.Context) LocalApplicationListPolicyObjectMapOutput
}

type LocalApplicationListPolicyObjectMap map[string]LocalApplicationListPolicyObjectInput

func (LocalApplicationListPolicyObjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocalApplicationListPolicyObject)(nil)).Elem()
}

func (i LocalApplicationListPolicyObjectMap) ToLocalApplicationListPolicyObjectMapOutput() LocalApplicationListPolicyObjectMapOutput {
	return i.ToLocalApplicationListPolicyObjectMapOutputWithContext(context.Background())
}

func (i LocalApplicationListPolicyObjectMap) ToLocalApplicationListPolicyObjectMapOutputWithContext(ctx context.Context) LocalApplicationListPolicyObjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalApplicationListPolicyObjectMapOutput)
}

type LocalApplicationListPolicyObjectOutput struct{ *pulumi.OutputState }

func (LocalApplicationListPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalApplicationListPolicyObject)(nil)).Elem()
}

func (o LocalApplicationListPolicyObjectOutput) ToLocalApplicationListPolicyObjectOutput() LocalApplicationListPolicyObjectOutput {
	return o
}

func (o LocalApplicationListPolicyObjectOutput) ToLocalApplicationListPolicyObjectOutputWithContext(ctx context.Context) LocalApplicationListPolicyObjectOutput {
	return o
}

// List of entries
func (o LocalApplicationListPolicyObjectOutput) Entries() LocalApplicationListPolicyObjectEntryArrayOutput {
	return o.ApplyT(func(v *LocalApplicationListPolicyObject) LocalApplicationListPolicyObjectEntryArrayOutput {
		return v.Entries
	}).(LocalApplicationListPolicyObjectEntryArrayOutput)
}

// The name of the policy object
func (o LocalApplicationListPolicyObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalApplicationListPolicyObject) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the object
func (o LocalApplicationListPolicyObjectOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *LocalApplicationListPolicyObject) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type LocalApplicationListPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (LocalApplicationListPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocalApplicationListPolicyObject)(nil)).Elem()
}

func (o LocalApplicationListPolicyObjectArrayOutput) ToLocalApplicationListPolicyObjectArrayOutput() LocalApplicationListPolicyObjectArrayOutput {
	return o
}

func (o LocalApplicationListPolicyObjectArrayOutput) ToLocalApplicationListPolicyObjectArrayOutputWithContext(ctx context.Context) LocalApplicationListPolicyObjectArrayOutput {
	return o
}

func (o LocalApplicationListPolicyObjectArrayOutput) Index(i pulumi.IntInput) LocalApplicationListPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LocalApplicationListPolicyObject {
		return vs[0].([]*LocalApplicationListPolicyObject)[vs[1].(int)]
	}).(LocalApplicationListPolicyObjectOutput)
}

type LocalApplicationListPolicyObjectMapOutput struct{ *pulumi.OutputState }

func (LocalApplicationListPolicyObjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocalApplicationListPolicyObject)(nil)).Elem()
}

func (o LocalApplicationListPolicyObjectMapOutput) ToLocalApplicationListPolicyObjectMapOutput() LocalApplicationListPolicyObjectMapOutput {
	return o
}

func (o LocalApplicationListPolicyObjectMapOutput) ToLocalApplicationListPolicyObjectMapOutputWithContext(ctx context.Context) LocalApplicationListPolicyObjectMapOutput {
	return o
}

func (o LocalApplicationListPolicyObjectMapOutput) MapIndex(k pulumi.StringInput) LocalApplicationListPolicyObjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LocalApplicationListPolicyObject {
		return vs[0].(map[string]*LocalApplicationListPolicyObject)[vs[1].(string)]
	}).(LocalApplicationListPolicyObjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LocalApplicationListPolicyObjectInput)(nil)).Elem(), &LocalApplicationListPolicyObject{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalApplicationListPolicyObjectArrayInput)(nil)).Elem(), LocalApplicationListPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalApplicationListPolicyObjectMapInput)(nil)).Elem(), LocalApplicationListPolicyObjectMap{})
	pulumi.RegisterOutputType(LocalApplicationListPolicyObjectOutput{})
	pulumi.RegisterOutputType(LocalApplicationListPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(LocalApplicationListPolicyObjectMapOutput{})
}
