// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a cEdge Global feature template.
//   - Minimum SD-WAN Manager version: `15.0.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewCedgeGlobalFeatureTemplate(ctx, "example", &sdwan.CedgeGlobalFeatureTemplateArgs{
//				Name:        pulumi.String("Example"),
//				Description: pulumi.String("My Example"),
//				DeviceTypes: pulumi.StringArray{
//					pulumi.String("vedge-C8000V"),
//				},
//				Nat64UdpTimeout:    pulumi.Int(300),
//				Nat64TcpTimeout:    pulumi.Int(3600),
//				HttpAuthentication: pulumi.String("local"),
//				SshVersion:         pulumi.Int(2),
//				HttpServer:         pulumi.Bool(true),
//				HttpsServer:        pulumi.Bool(true),
//				SourceInterface:    pulumi.String("e1"),
//				IpSourceRouting:    pulumi.Bool(true),
//				ArpProxy:           pulumi.Bool(true),
//				FtpPassive:         pulumi.Bool(true),
//				RshRcp:             pulumi.Bool(true),
//				Bootp:              pulumi.Bool(true),
//				DomainLookup:       pulumi.Bool(true),
//				TcpKeepalivesOut:   pulumi.Bool(true),
//				TcpKeepalivesIn:    pulumi.Bool(true),
//				TcpSmallServers:    pulumi.Bool(true),
//				UdpSmallServers:    pulumi.Bool(true),
//				Lldp:               pulumi.Bool(true),
//				Cdp:                pulumi.Bool(true),
//				SnmpIfindexPersist: pulumi.Bool(true),
//				ConsoleLogging:     pulumi.Bool(true),
//				VtyLogging:         pulumi.Bool(true),
//				LineVty:            pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/cedgeGlobalFeatureTemplate:CedgeGlobalFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type CedgeGlobalFeatureTemplate struct {
	pulumi.CustomResourceState

	// Set ARP Proxy - Default value: `false`
	ArpProxy pulumi.BoolPtrOutput `pulumi:"arpProxy"`
	// Variable name
	ArpProxyVariable pulumi.StringPtrOutput `pulumi:"arpProxyVariable"`
	// Configure Ignore BOOTP - Default value: `true`
	Bootp pulumi.BoolPtrOutput `pulumi:"bootp"`
	// Variable name
	BootpVariable pulumi.StringPtrOutput `pulumi:"bootpVariable"`
	// Configure CDP - Default value: `true`
	Cdp pulumi.BoolPtrOutput `pulumi:"cdp"`
	// Variable name
	CdpVariable pulumi.StringPtrOutput `pulumi:"cdpVariable"`
	// Configure Console Logging - Default value: `true`
	ConsoleLogging pulumi.BoolPtrOutput `pulumi:"consoleLogging"`
	// Variable name
	ConsoleLoggingVariable pulumi.StringPtrOutput `pulumi:"consoleLoggingVariable"`
	// The description of the feature template
	Description pulumi.StringOutput `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayOutput `pulumi:"deviceTypes"`
	// Configure Domain-Lookup - Default value: `false`
	DomainLookup pulumi.BoolPtrOutput `pulumi:"domainLookup"`
	// Variable name
	DomainLookupVariable pulumi.StringPtrOutput `pulumi:"domainLookupVariable"`
	// Set Passive FTP - Default value: `false`
	FtpPassive pulumi.BoolPtrOutput `pulumi:"ftpPassive"`
	// Variable name
	FtpPassiveVariable pulumi.StringPtrOutput `pulumi:"ftpPassiveVariable"`
	// Set preference for HTTP Authentication - Choices: `local`, `aaa`
	HttpAuthentication pulumi.StringPtrOutput `pulumi:"httpAuthentication"`
	// Variable name
	HttpAuthenticationVariable pulumi.StringPtrOutput `pulumi:"httpAuthenticationVariable"`
	// Set HTTP Server - Default value: `false`
	HttpServer pulumi.BoolPtrOutput `pulumi:"httpServer"`
	// Variable name
	HttpServerVariable pulumi.StringPtrOutput `pulumi:"httpServerVariable"`
	// Set HTTPS Server - Default value: `false`
	HttpsServer pulumi.BoolPtrOutput `pulumi:"httpsServer"`
	// Variable name
	HttpsServerVariable pulumi.StringPtrOutput `pulumi:"httpsServerVariable"`
	// Set Source Route - Default value: `false`
	IpSourceRouting pulumi.BoolPtrOutput `pulumi:"ipSourceRouting"`
	// Variable name
	IpSourceRoutingVariable pulumi.StringPtrOutput `pulumi:"ipSourceRoutingVariable"`
	// Configure Telnet (Outbound) - Default value: `false`
	LineVty pulumi.BoolPtrOutput `pulumi:"lineVty"`
	// Variable name
	LineVtyVariable pulumi.StringPtrOutput `pulumi:"lineVtyVariable"`
	// Configure LLDP - Default value: `true`
	Lldp pulumi.BoolPtrOutput `pulumi:"lldp"`
	// Variable name
	LldpVariable pulumi.StringPtrOutput `pulumi:"lldpVariable"`
	// The name of the feature template
	Name pulumi.StringOutput `pulumi:"name"`
	// Set NAT64 TCP session timeout, in seconds - Range: `1`-`536870` - Default value: `3600`
	Nat64TcpTimeout pulumi.IntPtrOutput `pulumi:"nat64TcpTimeout"`
	// Variable name
	Nat64TcpTimeoutVariable pulumi.StringPtrOutput `pulumi:"nat64TcpTimeoutVariable"`
	// Set NAT64 UDP session timeout, in seconds - Range: `1`-`536870` - Default value: `300`
	Nat64UdpTimeout pulumi.IntPtrOutput `pulumi:"nat64UdpTimeout"`
	// Variable name
	Nat64UdpTimeoutVariable pulumi.StringPtrOutput `pulumi:"nat64UdpTimeoutVariable"`
	// Set RSH/RCP - Default value: `false`
	RshRcp pulumi.BoolPtrOutput `pulumi:"rshRcp"`
	// Variable name
	RshRcpVariable pulumi.StringPtrOutput `pulumi:"rshRcpVariable"`
	// Configure SNMP Ifindex Persist - Default value: `true`
	SnmpIfindexPersist pulumi.BoolPtrOutput `pulumi:"snmpIfindexPersist"`
	// Variable name
	SnmpIfindexPersistVariable pulumi.StringPtrOutput `pulumi:"snmpIfindexPersistVariable"`
	// Specify interface for source address in all HTTP(S) client connections
	SourceInterface pulumi.StringPtrOutput `pulumi:"sourceInterface"`
	// Variable name
	SourceInterfaceVariable pulumi.StringPtrOutput `pulumi:"sourceInterfaceVariable"`
	// Set SSH version - Range: `1`-`2`
	SshVersion pulumi.IntPtrOutput `pulumi:"sshVersion"`
	// Variable name
	SshVersionVariable pulumi.StringPtrOutput `pulumi:"sshVersionVariable"`
	// Configure tcp-keepalives-in - Default value: `true`
	TcpKeepalivesIn pulumi.BoolPtrOutput `pulumi:"tcpKeepalivesIn"`
	// Variable name
	TcpKeepalivesInVariable pulumi.StringPtrOutput `pulumi:"tcpKeepalivesInVariable"`
	// Configure tcp-keepalives-out - Default value: `true`
	TcpKeepalivesOut pulumi.BoolPtrOutput `pulumi:"tcpKeepalivesOut"`
	// Variable name
	TcpKeepalivesOutVariable pulumi.StringPtrOutput `pulumi:"tcpKeepalivesOutVariable"`
	// Configure tcp-small-servers - Default value: `false`
	TcpSmallServers pulumi.BoolPtrOutput `pulumi:"tcpSmallServers"`
	// Variable name
	TcpSmallServersVariable pulumi.StringPtrOutput `pulumi:"tcpSmallServersVariable"`
	// The template type
	TemplateType pulumi.StringOutput `pulumi:"templateType"`
	// Configure udp-small-servers - Default value: `false`
	UdpSmallServers pulumi.BoolPtrOutput `pulumi:"udpSmallServers"`
	// Variable name
	UdpSmallServersVariable pulumi.StringPtrOutput `pulumi:"udpSmallServersVariable"`
	// The version of the feature template
	Version pulumi.IntOutput `pulumi:"version"`
	// Configure VTY Line Logging - Default value: `false`
	VtyLogging pulumi.BoolPtrOutput `pulumi:"vtyLogging"`
	// Variable name
	VtyLoggingVariable pulumi.StringPtrOutput `pulumi:"vtyLoggingVariable"`
}

// NewCedgeGlobalFeatureTemplate registers a new resource with the given unique name, arguments, and options.
func NewCedgeGlobalFeatureTemplate(ctx *pulumi.Context,
	name string, args *CedgeGlobalFeatureTemplateArgs, opts ...pulumi.ResourceOption) (*CedgeGlobalFeatureTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.DeviceTypes == nil {
		return nil, errors.New("invalid value for required argument 'DeviceTypes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CedgeGlobalFeatureTemplate
	err := ctx.RegisterResource("sdwan:index/cedgeGlobalFeatureTemplate:CedgeGlobalFeatureTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCedgeGlobalFeatureTemplate gets an existing CedgeGlobalFeatureTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCedgeGlobalFeatureTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CedgeGlobalFeatureTemplateState, opts ...pulumi.ResourceOption) (*CedgeGlobalFeatureTemplate, error) {
	var resource CedgeGlobalFeatureTemplate
	err := ctx.ReadResource("sdwan:index/cedgeGlobalFeatureTemplate:CedgeGlobalFeatureTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CedgeGlobalFeatureTemplate resources.
type cedgeGlobalFeatureTemplateState struct {
	// Set ARP Proxy - Default value: `false`
	ArpProxy *bool `pulumi:"arpProxy"`
	// Variable name
	ArpProxyVariable *string `pulumi:"arpProxyVariable"`
	// Configure Ignore BOOTP - Default value: `true`
	Bootp *bool `pulumi:"bootp"`
	// Variable name
	BootpVariable *string `pulumi:"bootpVariable"`
	// Configure CDP - Default value: `true`
	Cdp *bool `pulumi:"cdp"`
	// Variable name
	CdpVariable *string `pulumi:"cdpVariable"`
	// Configure Console Logging - Default value: `true`
	ConsoleLogging *bool `pulumi:"consoleLogging"`
	// Variable name
	ConsoleLoggingVariable *string `pulumi:"consoleLoggingVariable"`
	// The description of the feature template
	Description *string `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Configure Domain-Lookup - Default value: `false`
	DomainLookup *bool `pulumi:"domainLookup"`
	// Variable name
	DomainLookupVariable *string `pulumi:"domainLookupVariable"`
	// Set Passive FTP - Default value: `false`
	FtpPassive *bool `pulumi:"ftpPassive"`
	// Variable name
	FtpPassiveVariable *string `pulumi:"ftpPassiveVariable"`
	// Set preference for HTTP Authentication - Choices: `local`, `aaa`
	HttpAuthentication *string `pulumi:"httpAuthentication"`
	// Variable name
	HttpAuthenticationVariable *string `pulumi:"httpAuthenticationVariable"`
	// Set HTTP Server - Default value: `false`
	HttpServer *bool `pulumi:"httpServer"`
	// Variable name
	HttpServerVariable *string `pulumi:"httpServerVariable"`
	// Set HTTPS Server - Default value: `false`
	HttpsServer *bool `pulumi:"httpsServer"`
	// Variable name
	HttpsServerVariable *string `pulumi:"httpsServerVariable"`
	// Set Source Route - Default value: `false`
	IpSourceRouting *bool `pulumi:"ipSourceRouting"`
	// Variable name
	IpSourceRoutingVariable *string `pulumi:"ipSourceRoutingVariable"`
	// Configure Telnet (Outbound) - Default value: `false`
	LineVty *bool `pulumi:"lineVty"`
	// Variable name
	LineVtyVariable *string `pulumi:"lineVtyVariable"`
	// Configure LLDP - Default value: `true`
	Lldp *bool `pulumi:"lldp"`
	// Variable name
	LldpVariable *string `pulumi:"lldpVariable"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Set NAT64 TCP session timeout, in seconds - Range: `1`-`536870` - Default value: `3600`
	Nat64TcpTimeout *int `pulumi:"nat64TcpTimeout"`
	// Variable name
	Nat64TcpTimeoutVariable *string `pulumi:"nat64TcpTimeoutVariable"`
	// Set NAT64 UDP session timeout, in seconds - Range: `1`-`536870` - Default value: `300`
	Nat64UdpTimeout *int `pulumi:"nat64UdpTimeout"`
	// Variable name
	Nat64UdpTimeoutVariable *string `pulumi:"nat64UdpTimeoutVariable"`
	// Set RSH/RCP - Default value: `false`
	RshRcp *bool `pulumi:"rshRcp"`
	// Variable name
	RshRcpVariable *string `pulumi:"rshRcpVariable"`
	// Configure SNMP Ifindex Persist - Default value: `true`
	SnmpIfindexPersist *bool `pulumi:"snmpIfindexPersist"`
	// Variable name
	SnmpIfindexPersistVariable *string `pulumi:"snmpIfindexPersistVariable"`
	// Specify interface for source address in all HTTP(S) client connections
	SourceInterface *string `pulumi:"sourceInterface"`
	// Variable name
	SourceInterfaceVariable *string `pulumi:"sourceInterfaceVariable"`
	// Set SSH version - Range: `1`-`2`
	SshVersion *int `pulumi:"sshVersion"`
	// Variable name
	SshVersionVariable *string `pulumi:"sshVersionVariable"`
	// Configure tcp-keepalives-in - Default value: `true`
	TcpKeepalivesIn *bool `pulumi:"tcpKeepalivesIn"`
	// Variable name
	TcpKeepalivesInVariable *string `pulumi:"tcpKeepalivesInVariable"`
	// Configure tcp-keepalives-out - Default value: `true`
	TcpKeepalivesOut *bool `pulumi:"tcpKeepalivesOut"`
	// Variable name
	TcpKeepalivesOutVariable *string `pulumi:"tcpKeepalivesOutVariable"`
	// Configure tcp-small-servers - Default value: `false`
	TcpSmallServers *bool `pulumi:"tcpSmallServers"`
	// Variable name
	TcpSmallServersVariable *string `pulumi:"tcpSmallServersVariable"`
	// The template type
	TemplateType *string `pulumi:"templateType"`
	// Configure udp-small-servers - Default value: `false`
	UdpSmallServers *bool `pulumi:"udpSmallServers"`
	// Variable name
	UdpSmallServersVariable *string `pulumi:"udpSmallServersVariable"`
	// The version of the feature template
	Version *int `pulumi:"version"`
	// Configure VTY Line Logging - Default value: `false`
	VtyLogging *bool `pulumi:"vtyLogging"`
	// Variable name
	VtyLoggingVariable *string `pulumi:"vtyLoggingVariable"`
}

type CedgeGlobalFeatureTemplateState struct {
	// Set ARP Proxy - Default value: `false`
	ArpProxy pulumi.BoolPtrInput
	// Variable name
	ArpProxyVariable pulumi.StringPtrInput
	// Configure Ignore BOOTP - Default value: `true`
	Bootp pulumi.BoolPtrInput
	// Variable name
	BootpVariable pulumi.StringPtrInput
	// Configure CDP - Default value: `true`
	Cdp pulumi.BoolPtrInput
	// Variable name
	CdpVariable pulumi.StringPtrInput
	// Configure Console Logging - Default value: `true`
	ConsoleLogging pulumi.BoolPtrInput
	// Variable name
	ConsoleLoggingVariable pulumi.StringPtrInput
	// The description of the feature template
	Description pulumi.StringPtrInput
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Configure Domain-Lookup - Default value: `false`
	DomainLookup pulumi.BoolPtrInput
	// Variable name
	DomainLookupVariable pulumi.StringPtrInput
	// Set Passive FTP - Default value: `false`
	FtpPassive pulumi.BoolPtrInput
	// Variable name
	FtpPassiveVariable pulumi.StringPtrInput
	// Set preference for HTTP Authentication - Choices: `local`, `aaa`
	HttpAuthentication pulumi.StringPtrInput
	// Variable name
	HttpAuthenticationVariable pulumi.StringPtrInput
	// Set HTTP Server - Default value: `false`
	HttpServer pulumi.BoolPtrInput
	// Variable name
	HttpServerVariable pulumi.StringPtrInput
	// Set HTTPS Server - Default value: `false`
	HttpsServer pulumi.BoolPtrInput
	// Variable name
	HttpsServerVariable pulumi.StringPtrInput
	// Set Source Route - Default value: `false`
	IpSourceRouting pulumi.BoolPtrInput
	// Variable name
	IpSourceRoutingVariable pulumi.StringPtrInput
	// Configure Telnet (Outbound) - Default value: `false`
	LineVty pulumi.BoolPtrInput
	// Variable name
	LineVtyVariable pulumi.StringPtrInput
	// Configure LLDP - Default value: `true`
	Lldp pulumi.BoolPtrInput
	// Variable name
	LldpVariable pulumi.StringPtrInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Set NAT64 TCP session timeout, in seconds - Range: `1`-`536870` - Default value: `3600`
	Nat64TcpTimeout pulumi.IntPtrInput
	// Variable name
	Nat64TcpTimeoutVariable pulumi.StringPtrInput
	// Set NAT64 UDP session timeout, in seconds - Range: `1`-`536870` - Default value: `300`
	Nat64UdpTimeout pulumi.IntPtrInput
	// Variable name
	Nat64UdpTimeoutVariable pulumi.StringPtrInput
	// Set RSH/RCP - Default value: `false`
	RshRcp pulumi.BoolPtrInput
	// Variable name
	RshRcpVariable pulumi.StringPtrInput
	// Configure SNMP Ifindex Persist - Default value: `true`
	SnmpIfindexPersist pulumi.BoolPtrInput
	// Variable name
	SnmpIfindexPersistVariable pulumi.StringPtrInput
	// Specify interface for source address in all HTTP(S) client connections
	SourceInterface pulumi.StringPtrInput
	// Variable name
	SourceInterfaceVariable pulumi.StringPtrInput
	// Set SSH version - Range: `1`-`2`
	SshVersion pulumi.IntPtrInput
	// Variable name
	SshVersionVariable pulumi.StringPtrInput
	// Configure tcp-keepalives-in - Default value: `true`
	TcpKeepalivesIn pulumi.BoolPtrInput
	// Variable name
	TcpKeepalivesInVariable pulumi.StringPtrInput
	// Configure tcp-keepalives-out - Default value: `true`
	TcpKeepalivesOut pulumi.BoolPtrInput
	// Variable name
	TcpKeepalivesOutVariable pulumi.StringPtrInput
	// Configure tcp-small-servers - Default value: `false`
	TcpSmallServers pulumi.BoolPtrInput
	// Variable name
	TcpSmallServersVariable pulumi.StringPtrInput
	// The template type
	TemplateType pulumi.StringPtrInput
	// Configure udp-small-servers - Default value: `false`
	UdpSmallServers pulumi.BoolPtrInput
	// Variable name
	UdpSmallServersVariable pulumi.StringPtrInput
	// The version of the feature template
	Version pulumi.IntPtrInput
	// Configure VTY Line Logging - Default value: `false`
	VtyLogging pulumi.BoolPtrInput
	// Variable name
	VtyLoggingVariable pulumi.StringPtrInput
}

func (CedgeGlobalFeatureTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*cedgeGlobalFeatureTemplateState)(nil)).Elem()
}

type cedgeGlobalFeatureTemplateArgs struct {
	// Set ARP Proxy - Default value: `false`
	ArpProxy *bool `pulumi:"arpProxy"`
	// Variable name
	ArpProxyVariable *string `pulumi:"arpProxyVariable"`
	// Configure Ignore BOOTP - Default value: `true`
	Bootp *bool `pulumi:"bootp"`
	// Variable name
	BootpVariable *string `pulumi:"bootpVariable"`
	// Configure CDP - Default value: `true`
	Cdp *bool `pulumi:"cdp"`
	// Variable name
	CdpVariable *string `pulumi:"cdpVariable"`
	// Configure Console Logging - Default value: `true`
	ConsoleLogging *bool `pulumi:"consoleLogging"`
	// Variable name
	ConsoleLoggingVariable *string `pulumi:"consoleLoggingVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Configure Domain-Lookup - Default value: `false`
	DomainLookup *bool `pulumi:"domainLookup"`
	// Variable name
	DomainLookupVariable *string `pulumi:"domainLookupVariable"`
	// Set Passive FTP - Default value: `false`
	FtpPassive *bool `pulumi:"ftpPassive"`
	// Variable name
	FtpPassiveVariable *string `pulumi:"ftpPassiveVariable"`
	// Set preference for HTTP Authentication - Choices: `local`, `aaa`
	HttpAuthentication *string `pulumi:"httpAuthentication"`
	// Variable name
	HttpAuthenticationVariable *string `pulumi:"httpAuthenticationVariable"`
	// Set HTTP Server - Default value: `false`
	HttpServer *bool `pulumi:"httpServer"`
	// Variable name
	HttpServerVariable *string `pulumi:"httpServerVariable"`
	// Set HTTPS Server - Default value: `false`
	HttpsServer *bool `pulumi:"httpsServer"`
	// Variable name
	HttpsServerVariable *string `pulumi:"httpsServerVariable"`
	// Set Source Route - Default value: `false`
	IpSourceRouting *bool `pulumi:"ipSourceRouting"`
	// Variable name
	IpSourceRoutingVariable *string `pulumi:"ipSourceRoutingVariable"`
	// Configure Telnet (Outbound) - Default value: `false`
	LineVty *bool `pulumi:"lineVty"`
	// Variable name
	LineVtyVariable *string `pulumi:"lineVtyVariable"`
	// Configure LLDP - Default value: `true`
	Lldp *bool `pulumi:"lldp"`
	// Variable name
	LldpVariable *string `pulumi:"lldpVariable"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Set NAT64 TCP session timeout, in seconds - Range: `1`-`536870` - Default value: `3600`
	Nat64TcpTimeout *int `pulumi:"nat64TcpTimeout"`
	// Variable name
	Nat64TcpTimeoutVariable *string `pulumi:"nat64TcpTimeoutVariable"`
	// Set NAT64 UDP session timeout, in seconds - Range: `1`-`536870` - Default value: `300`
	Nat64UdpTimeout *int `pulumi:"nat64UdpTimeout"`
	// Variable name
	Nat64UdpTimeoutVariable *string `pulumi:"nat64UdpTimeoutVariable"`
	// Set RSH/RCP - Default value: `false`
	RshRcp *bool `pulumi:"rshRcp"`
	// Variable name
	RshRcpVariable *string `pulumi:"rshRcpVariable"`
	// Configure SNMP Ifindex Persist - Default value: `true`
	SnmpIfindexPersist *bool `pulumi:"snmpIfindexPersist"`
	// Variable name
	SnmpIfindexPersistVariable *string `pulumi:"snmpIfindexPersistVariable"`
	// Specify interface for source address in all HTTP(S) client connections
	SourceInterface *string `pulumi:"sourceInterface"`
	// Variable name
	SourceInterfaceVariable *string `pulumi:"sourceInterfaceVariable"`
	// Set SSH version - Range: `1`-`2`
	SshVersion *int `pulumi:"sshVersion"`
	// Variable name
	SshVersionVariable *string `pulumi:"sshVersionVariable"`
	// Configure tcp-keepalives-in - Default value: `true`
	TcpKeepalivesIn *bool `pulumi:"tcpKeepalivesIn"`
	// Variable name
	TcpKeepalivesInVariable *string `pulumi:"tcpKeepalivesInVariable"`
	// Configure tcp-keepalives-out - Default value: `true`
	TcpKeepalivesOut *bool `pulumi:"tcpKeepalivesOut"`
	// Variable name
	TcpKeepalivesOutVariable *string `pulumi:"tcpKeepalivesOutVariable"`
	// Configure tcp-small-servers - Default value: `false`
	TcpSmallServers *bool `pulumi:"tcpSmallServers"`
	// Variable name
	TcpSmallServersVariable *string `pulumi:"tcpSmallServersVariable"`
	// Configure udp-small-servers - Default value: `false`
	UdpSmallServers *bool `pulumi:"udpSmallServers"`
	// Variable name
	UdpSmallServersVariable *string `pulumi:"udpSmallServersVariable"`
	// Configure VTY Line Logging - Default value: `false`
	VtyLogging *bool `pulumi:"vtyLogging"`
	// Variable name
	VtyLoggingVariable *string `pulumi:"vtyLoggingVariable"`
}

// The set of arguments for constructing a CedgeGlobalFeatureTemplate resource.
type CedgeGlobalFeatureTemplateArgs struct {
	// Set ARP Proxy - Default value: `false`
	ArpProxy pulumi.BoolPtrInput
	// Variable name
	ArpProxyVariable pulumi.StringPtrInput
	// Configure Ignore BOOTP - Default value: `true`
	Bootp pulumi.BoolPtrInput
	// Variable name
	BootpVariable pulumi.StringPtrInput
	// Configure CDP - Default value: `true`
	Cdp pulumi.BoolPtrInput
	// Variable name
	CdpVariable pulumi.StringPtrInput
	// Configure Console Logging - Default value: `true`
	ConsoleLogging pulumi.BoolPtrInput
	// Variable name
	ConsoleLoggingVariable pulumi.StringPtrInput
	// The description of the feature template
	Description pulumi.StringInput
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Configure Domain-Lookup - Default value: `false`
	DomainLookup pulumi.BoolPtrInput
	// Variable name
	DomainLookupVariable pulumi.StringPtrInput
	// Set Passive FTP - Default value: `false`
	FtpPassive pulumi.BoolPtrInput
	// Variable name
	FtpPassiveVariable pulumi.StringPtrInput
	// Set preference for HTTP Authentication - Choices: `local`, `aaa`
	HttpAuthentication pulumi.StringPtrInput
	// Variable name
	HttpAuthenticationVariable pulumi.StringPtrInput
	// Set HTTP Server - Default value: `false`
	HttpServer pulumi.BoolPtrInput
	// Variable name
	HttpServerVariable pulumi.StringPtrInput
	// Set HTTPS Server - Default value: `false`
	HttpsServer pulumi.BoolPtrInput
	// Variable name
	HttpsServerVariable pulumi.StringPtrInput
	// Set Source Route - Default value: `false`
	IpSourceRouting pulumi.BoolPtrInput
	// Variable name
	IpSourceRoutingVariable pulumi.StringPtrInput
	// Configure Telnet (Outbound) - Default value: `false`
	LineVty pulumi.BoolPtrInput
	// Variable name
	LineVtyVariable pulumi.StringPtrInput
	// Configure LLDP - Default value: `true`
	Lldp pulumi.BoolPtrInput
	// Variable name
	LldpVariable pulumi.StringPtrInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Set NAT64 TCP session timeout, in seconds - Range: `1`-`536870` - Default value: `3600`
	Nat64TcpTimeout pulumi.IntPtrInput
	// Variable name
	Nat64TcpTimeoutVariable pulumi.StringPtrInput
	// Set NAT64 UDP session timeout, in seconds - Range: `1`-`536870` - Default value: `300`
	Nat64UdpTimeout pulumi.IntPtrInput
	// Variable name
	Nat64UdpTimeoutVariable pulumi.StringPtrInput
	// Set RSH/RCP - Default value: `false`
	RshRcp pulumi.BoolPtrInput
	// Variable name
	RshRcpVariable pulumi.StringPtrInput
	// Configure SNMP Ifindex Persist - Default value: `true`
	SnmpIfindexPersist pulumi.BoolPtrInput
	// Variable name
	SnmpIfindexPersistVariable pulumi.StringPtrInput
	// Specify interface for source address in all HTTP(S) client connections
	SourceInterface pulumi.StringPtrInput
	// Variable name
	SourceInterfaceVariable pulumi.StringPtrInput
	// Set SSH version - Range: `1`-`2`
	SshVersion pulumi.IntPtrInput
	// Variable name
	SshVersionVariable pulumi.StringPtrInput
	// Configure tcp-keepalives-in - Default value: `true`
	TcpKeepalivesIn pulumi.BoolPtrInput
	// Variable name
	TcpKeepalivesInVariable pulumi.StringPtrInput
	// Configure tcp-keepalives-out - Default value: `true`
	TcpKeepalivesOut pulumi.BoolPtrInput
	// Variable name
	TcpKeepalivesOutVariable pulumi.StringPtrInput
	// Configure tcp-small-servers - Default value: `false`
	TcpSmallServers pulumi.BoolPtrInput
	// Variable name
	TcpSmallServersVariable pulumi.StringPtrInput
	// Configure udp-small-servers - Default value: `false`
	UdpSmallServers pulumi.BoolPtrInput
	// Variable name
	UdpSmallServersVariable pulumi.StringPtrInput
	// Configure VTY Line Logging - Default value: `false`
	VtyLogging pulumi.BoolPtrInput
	// Variable name
	VtyLoggingVariable pulumi.StringPtrInput
}

func (CedgeGlobalFeatureTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cedgeGlobalFeatureTemplateArgs)(nil)).Elem()
}

type CedgeGlobalFeatureTemplateInput interface {
	pulumi.Input

	ToCedgeGlobalFeatureTemplateOutput() CedgeGlobalFeatureTemplateOutput
	ToCedgeGlobalFeatureTemplateOutputWithContext(ctx context.Context) CedgeGlobalFeatureTemplateOutput
}

func (*CedgeGlobalFeatureTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**CedgeGlobalFeatureTemplate)(nil)).Elem()
}

func (i *CedgeGlobalFeatureTemplate) ToCedgeGlobalFeatureTemplateOutput() CedgeGlobalFeatureTemplateOutput {
	return i.ToCedgeGlobalFeatureTemplateOutputWithContext(context.Background())
}

func (i *CedgeGlobalFeatureTemplate) ToCedgeGlobalFeatureTemplateOutputWithContext(ctx context.Context) CedgeGlobalFeatureTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CedgeGlobalFeatureTemplateOutput)
}

// CedgeGlobalFeatureTemplateArrayInput is an input type that accepts CedgeGlobalFeatureTemplateArray and CedgeGlobalFeatureTemplateArrayOutput values.
// You can construct a concrete instance of `CedgeGlobalFeatureTemplateArrayInput` via:
//
//	CedgeGlobalFeatureTemplateArray{ CedgeGlobalFeatureTemplateArgs{...} }
type CedgeGlobalFeatureTemplateArrayInput interface {
	pulumi.Input

	ToCedgeGlobalFeatureTemplateArrayOutput() CedgeGlobalFeatureTemplateArrayOutput
	ToCedgeGlobalFeatureTemplateArrayOutputWithContext(context.Context) CedgeGlobalFeatureTemplateArrayOutput
}

type CedgeGlobalFeatureTemplateArray []CedgeGlobalFeatureTemplateInput

func (CedgeGlobalFeatureTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CedgeGlobalFeatureTemplate)(nil)).Elem()
}

func (i CedgeGlobalFeatureTemplateArray) ToCedgeGlobalFeatureTemplateArrayOutput() CedgeGlobalFeatureTemplateArrayOutput {
	return i.ToCedgeGlobalFeatureTemplateArrayOutputWithContext(context.Background())
}

func (i CedgeGlobalFeatureTemplateArray) ToCedgeGlobalFeatureTemplateArrayOutputWithContext(ctx context.Context) CedgeGlobalFeatureTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CedgeGlobalFeatureTemplateArrayOutput)
}

// CedgeGlobalFeatureTemplateMapInput is an input type that accepts CedgeGlobalFeatureTemplateMap and CedgeGlobalFeatureTemplateMapOutput values.
// You can construct a concrete instance of `CedgeGlobalFeatureTemplateMapInput` via:
//
//	CedgeGlobalFeatureTemplateMap{ "key": CedgeGlobalFeatureTemplateArgs{...} }
type CedgeGlobalFeatureTemplateMapInput interface {
	pulumi.Input

	ToCedgeGlobalFeatureTemplateMapOutput() CedgeGlobalFeatureTemplateMapOutput
	ToCedgeGlobalFeatureTemplateMapOutputWithContext(context.Context) CedgeGlobalFeatureTemplateMapOutput
}

type CedgeGlobalFeatureTemplateMap map[string]CedgeGlobalFeatureTemplateInput

func (CedgeGlobalFeatureTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CedgeGlobalFeatureTemplate)(nil)).Elem()
}

func (i CedgeGlobalFeatureTemplateMap) ToCedgeGlobalFeatureTemplateMapOutput() CedgeGlobalFeatureTemplateMapOutput {
	return i.ToCedgeGlobalFeatureTemplateMapOutputWithContext(context.Background())
}

func (i CedgeGlobalFeatureTemplateMap) ToCedgeGlobalFeatureTemplateMapOutputWithContext(ctx context.Context) CedgeGlobalFeatureTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CedgeGlobalFeatureTemplateMapOutput)
}

type CedgeGlobalFeatureTemplateOutput struct{ *pulumi.OutputState }

func (CedgeGlobalFeatureTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CedgeGlobalFeatureTemplate)(nil)).Elem()
}

func (o CedgeGlobalFeatureTemplateOutput) ToCedgeGlobalFeatureTemplateOutput() CedgeGlobalFeatureTemplateOutput {
	return o
}

func (o CedgeGlobalFeatureTemplateOutput) ToCedgeGlobalFeatureTemplateOutputWithContext(ctx context.Context) CedgeGlobalFeatureTemplateOutput {
	return o
}

// Set ARP Proxy - Default value: `false`
func (o CedgeGlobalFeatureTemplateOutput) ArpProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.BoolPtrOutput { return v.ArpProxy }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) ArpProxyVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.ArpProxyVariable }).(pulumi.StringPtrOutput)
}

// Configure Ignore BOOTP - Default value: `true`
func (o CedgeGlobalFeatureTemplateOutput) Bootp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.BoolPtrOutput { return v.Bootp }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) BootpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.BootpVariable }).(pulumi.StringPtrOutput)
}

// Configure CDP - Default value: `true`
func (o CedgeGlobalFeatureTemplateOutput) Cdp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.BoolPtrOutput { return v.Cdp }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) CdpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.CdpVariable }).(pulumi.StringPtrOutput)
}

// Configure Console Logging - Default value: `true`
func (o CedgeGlobalFeatureTemplateOutput) ConsoleLogging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.BoolPtrOutput { return v.ConsoleLogging }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) ConsoleLoggingVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.ConsoleLoggingVariable }).(pulumi.StringPtrOutput)
}

// The description of the feature template
func (o CedgeGlobalFeatureTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
func (o CedgeGlobalFeatureTemplateOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringArrayOutput { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Configure Domain-Lookup - Default value: `false`
func (o CedgeGlobalFeatureTemplateOutput) DomainLookup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.BoolPtrOutput { return v.DomainLookup }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) DomainLookupVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.DomainLookupVariable }).(pulumi.StringPtrOutput)
}

// Set Passive FTP - Default value: `false`
func (o CedgeGlobalFeatureTemplateOutput) FtpPassive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.BoolPtrOutput { return v.FtpPassive }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) FtpPassiveVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.FtpPassiveVariable }).(pulumi.StringPtrOutput)
}

// Set preference for HTTP Authentication - Choices: `local`, `aaa`
func (o CedgeGlobalFeatureTemplateOutput) HttpAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.HttpAuthentication }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) HttpAuthenticationVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.HttpAuthenticationVariable }).(pulumi.StringPtrOutput)
}

// Set HTTP Server - Default value: `false`
func (o CedgeGlobalFeatureTemplateOutput) HttpServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.BoolPtrOutput { return v.HttpServer }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) HttpServerVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.HttpServerVariable }).(pulumi.StringPtrOutput)
}

// Set HTTPS Server - Default value: `false`
func (o CedgeGlobalFeatureTemplateOutput) HttpsServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.BoolPtrOutput { return v.HttpsServer }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) HttpsServerVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.HttpsServerVariable }).(pulumi.StringPtrOutput)
}

// Set Source Route - Default value: `false`
func (o CedgeGlobalFeatureTemplateOutput) IpSourceRouting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.BoolPtrOutput { return v.IpSourceRouting }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) IpSourceRoutingVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.IpSourceRoutingVariable }).(pulumi.StringPtrOutput)
}

// Configure Telnet (Outbound) - Default value: `false`
func (o CedgeGlobalFeatureTemplateOutput) LineVty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.BoolPtrOutput { return v.LineVty }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) LineVtyVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.LineVtyVariable }).(pulumi.StringPtrOutput)
}

// Configure LLDP - Default value: `true`
func (o CedgeGlobalFeatureTemplateOutput) Lldp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.BoolPtrOutput { return v.Lldp }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) LldpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.LldpVariable }).(pulumi.StringPtrOutput)
}

// The name of the feature template
func (o CedgeGlobalFeatureTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Set NAT64 TCP session timeout, in seconds - Range: `1`-`536870` - Default value: `3600`
func (o CedgeGlobalFeatureTemplateOutput) Nat64TcpTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.IntPtrOutput { return v.Nat64TcpTimeout }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) Nat64TcpTimeoutVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.Nat64TcpTimeoutVariable }).(pulumi.StringPtrOutput)
}

// Set NAT64 UDP session timeout, in seconds - Range: `1`-`536870` - Default value: `300`
func (o CedgeGlobalFeatureTemplateOutput) Nat64UdpTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.IntPtrOutput { return v.Nat64UdpTimeout }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) Nat64UdpTimeoutVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.Nat64UdpTimeoutVariable }).(pulumi.StringPtrOutput)
}

// Set RSH/RCP - Default value: `false`
func (o CedgeGlobalFeatureTemplateOutput) RshRcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.BoolPtrOutput { return v.RshRcp }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) RshRcpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.RshRcpVariable }).(pulumi.StringPtrOutput)
}

// Configure SNMP Ifindex Persist - Default value: `true`
func (o CedgeGlobalFeatureTemplateOutput) SnmpIfindexPersist() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.BoolPtrOutput { return v.SnmpIfindexPersist }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) SnmpIfindexPersistVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.SnmpIfindexPersistVariable }).(pulumi.StringPtrOutput)
}

// Specify interface for source address in all HTTP(S) client connections
func (o CedgeGlobalFeatureTemplateOutput) SourceInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.SourceInterface }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) SourceInterfaceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.SourceInterfaceVariable }).(pulumi.StringPtrOutput)
}

// Set SSH version - Range: `1`-`2`
func (o CedgeGlobalFeatureTemplateOutput) SshVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.IntPtrOutput { return v.SshVersion }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) SshVersionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.SshVersionVariable }).(pulumi.StringPtrOutput)
}

// Configure tcp-keepalives-in - Default value: `true`
func (o CedgeGlobalFeatureTemplateOutput) TcpKeepalivesIn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.BoolPtrOutput { return v.TcpKeepalivesIn }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) TcpKeepalivesInVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.TcpKeepalivesInVariable }).(pulumi.StringPtrOutput)
}

// Configure tcp-keepalives-out - Default value: `true`
func (o CedgeGlobalFeatureTemplateOutput) TcpKeepalivesOut() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.BoolPtrOutput { return v.TcpKeepalivesOut }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) TcpKeepalivesOutVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.TcpKeepalivesOutVariable }).(pulumi.StringPtrOutput)
}

// Configure tcp-small-servers - Default value: `false`
func (o CedgeGlobalFeatureTemplateOutput) TcpSmallServers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.BoolPtrOutput { return v.TcpSmallServers }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) TcpSmallServersVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.TcpSmallServersVariable }).(pulumi.StringPtrOutput)
}

// The template type
func (o CedgeGlobalFeatureTemplateOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringOutput { return v.TemplateType }).(pulumi.StringOutput)
}

// Configure udp-small-servers - Default value: `false`
func (o CedgeGlobalFeatureTemplateOutput) UdpSmallServers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.BoolPtrOutput { return v.UdpSmallServers }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) UdpSmallServersVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.UdpSmallServersVariable }).(pulumi.StringPtrOutput)
}

// The version of the feature template
func (o CedgeGlobalFeatureTemplateOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

// Configure VTY Line Logging - Default value: `false`
func (o CedgeGlobalFeatureTemplateOutput) VtyLogging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.BoolPtrOutput { return v.VtyLogging }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeGlobalFeatureTemplateOutput) VtyLoggingVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeGlobalFeatureTemplate) pulumi.StringPtrOutput { return v.VtyLoggingVariable }).(pulumi.StringPtrOutput)
}

type CedgeGlobalFeatureTemplateArrayOutput struct{ *pulumi.OutputState }

func (CedgeGlobalFeatureTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CedgeGlobalFeatureTemplate)(nil)).Elem()
}

func (o CedgeGlobalFeatureTemplateArrayOutput) ToCedgeGlobalFeatureTemplateArrayOutput() CedgeGlobalFeatureTemplateArrayOutput {
	return o
}

func (o CedgeGlobalFeatureTemplateArrayOutput) ToCedgeGlobalFeatureTemplateArrayOutputWithContext(ctx context.Context) CedgeGlobalFeatureTemplateArrayOutput {
	return o
}

func (o CedgeGlobalFeatureTemplateArrayOutput) Index(i pulumi.IntInput) CedgeGlobalFeatureTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CedgeGlobalFeatureTemplate {
		return vs[0].([]*CedgeGlobalFeatureTemplate)[vs[1].(int)]
	}).(CedgeGlobalFeatureTemplateOutput)
}

type CedgeGlobalFeatureTemplateMapOutput struct{ *pulumi.OutputState }

func (CedgeGlobalFeatureTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CedgeGlobalFeatureTemplate)(nil)).Elem()
}

func (o CedgeGlobalFeatureTemplateMapOutput) ToCedgeGlobalFeatureTemplateMapOutput() CedgeGlobalFeatureTemplateMapOutput {
	return o
}

func (o CedgeGlobalFeatureTemplateMapOutput) ToCedgeGlobalFeatureTemplateMapOutputWithContext(ctx context.Context) CedgeGlobalFeatureTemplateMapOutput {
	return o
}

func (o CedgeGlobalFeatureTemplateMapOutput) MapIndex(k pulumi.StringInput) CedgeGlobalFeatureTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CedgeGlobalFeatureTemplate {
		return vs[0].(map[string]*CedgeGlobalFeatureTemplate)[vs[1].(string)]
	}).(CedgeGlobalFeatureTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CedgeGlobalFeatureTemplateInput)(nil)).Elem(), &CedgeGlobalFeatureTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*CedgeGlobalFeatureTemplateArrayInput)(nil)).Elem(), CedgeGlobalFeatureTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CedgeGlobalFeatureTemplateMapInput)(nil)).Elem(), CedgeGlobalFeatureTemplateMap{})
	pulumi.RegisterOutputType(CedgeGlobalFeatureTemplateOutput{})
	pulumi.RegisterOutputType(CedgeGlobalFeatureTemplateArrayOutput{})
	pulumi.RegisterOutputType(CedgeGlobalFeatureTemplateMapOutput{})
}
