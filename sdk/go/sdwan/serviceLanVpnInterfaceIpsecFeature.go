// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Service LAN VPN Interface IPSec Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewServiceLanVpnInterfaceIpsecFeature(ctx, "example", &sdwan.ServiceLanVpnInterfaceIpsecFeatureArgs{
//				Name:                            pulumi.String("Example"),
//				Description:                     pulumi.String("My Example"),
//				FeatureProfileId:                pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				ServiceLanVpnFeatureId:          pulumi.String("140331f6-5418-4755-a059-13c77eb96037"),
//				InterfaceName:                   pulumi.String("ipsec987"),
//				Shutdown:                        pulumi.Bool(true),
//				InterfaceDescription:            pulumi.String("ipsec987"),
//				Ipv4Address:                     pulumi.String("9.7.5.4"),
//				Ipv4SubnetMask:                  pulumi.String("255.255.255.0"),
//				TunnelSourceIpv4Address:         pulumi.String("1.3.5.88"),
//				TunnelSourceIpv4SubnetMask:      pulumi.String("255.255.255.0"),
//				TunnelSourceInterface:           pulumi.String("GigabitEthernet8"),
//				TunnelDestinationIpv4Address:    pulumi.String("2.55.67.99"),
//				TunnelDestinationIpv4SubnetMask: pulumi.String("255.255.255.0"),
//				ApplicationTunnelType:           pulumi.String("none"),
//				TcpMss:                          pulumi.Int(1460),
//				ClearDontFragment:               pulumi.Bool(false),
//				IpMtu:                           pulumi.Int(1500),
//				DpdInterval:                     pulumi.Int(10),
//				DpdRetries:                      pulumi.Int(3),
//				IkePresharedKey:                 pulumi.String("123"),
//				IkeVersion:                      pulumi.Int(1),
//				IkeIntegrityProtocol:            pulumi.String("main"),
//				IkeRekeyInterval:                pulumi.Int(14400),
//				IkeCiphersuite:                  pulumi.String("aes256-cbc-sha1"),
//				IkeDiffieHellmanGroup:           pulumi.String("16"),
//				IkeIdLocalEndPoint:              pulumi.String("xxx"),
//				IkeIdRemoteEndPoint:             pulumi.String("xxx"),
//				IpsecRekeyInterval:              pulumi.Int(3600),
//				IpsecReplayWindow:               pulumi.Int(512),
//				IpsecCiphersuite:                pulumi.String("aes256-gcm"),
//				PerfectForwardSecrecy:           pulumi.String("group-16"),
//				TunnelRouteVia:                  pulumi.String("2222"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/serviceLanVpnInterfaceIpsecFeature:ServiceLanVpnInterfaceIpsecFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type ServiceLanVpnInterfaceIpsecFeature struct {
	pulumi.CustomResourceState

	// Enable Application Tunnel Type - Choices: `none`, `sig`
	ApplicationTunnelType pulumi.StringOutput `pulumi:"applicationTunnelType"`
	// Variable name
	ApplicationTunnelTypeVariable pulumi.StringPtrOutput `pulumi:"applicationTunnelTypeVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	ClearDontFragment pulumi.BoolPtrOutput `pulumi:"clearDontFragment"`
	// Variable name
	ClearDontFragmentVariable pulumi.StringPtrOutput `pulumi:"clearDontFragmentVariable"`
	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// IKE keepalive interval (seconds) - Range: `10`-`3600` - Default value: `10`
	DpdInterval pulumi.IntPtrOutput `pulumi:"dpdInterval"`
	// Variable name
	DpdIntervalVariable pulumi.StringPtrOutput `pulumi:"dpdIntervalVariable"`
	// IKE keepalive retries - Range: `2`-`60` - Default value: `3`
	DpdRetries pulumi.IntPtrOutput `pulumi:"dpdRetries"`
	// Variable name
	DpdRetriesVariable pulumi.StringPtrOutput `pulumi:"dpdRetriesVariable"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// IKE identity the IKE preshared secret belongs to - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`,
	// `aes128-cbc-sha2` - Default value: `aes256-cbc-sha1`
	IkeCiphersuite pulumi.StringPtrOutput `pulumi:"ikeCiphersuite"`
	// Variable name
	IkeCiphersuiteVariable pulumi.StringPtrOutput `pulumi:"ikeCiphersuiteVariable"`
	// IKE Diffie Hellman Groups - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24` - Default value: `16`
	IkeDiffieHellmanGroup pulumi.StringPtrOutput `pulumi:"ikeDiffieHellmanGroup"`
	// Variable name
	IkeDiffieHellmanGroupVariable pulumi.StringPtrOutput `pulumi:"ikeDiffieHellmanGroupVariable"`
	// IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
	IkeIdLocalEndPoint pulumi.StringPtrOutput `pulumi:"ikeIdLocalEndPoint"`
	// Variable name
	IkeIdLocalEndPointVariable pulumi.StringPtrOutput `pulumi:"ikeIdLocalEndPointVariable"`
	// IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
	IkeIdRemoteEndPoint pulumi.StringPtrOutput `pulumi:"ikeIdRemoteEndPoint"`
	// Variable name
	IkeIdRemoteEndPointVariable pulumi.StringPtrOutput `pulumi:"ikeIdRemoteEndPointVariable"`
	// IKE integrity protocol - Choices: `main`, `aggressive` - Default value: `main`
	IkeIntegrityProtocol pulumi.StringPtrOutput `pulumi:"ikeIntegrityProtocol"`
	// Variable name
	IkeIntegrityProtocolVariable pulumi.StringPtrOutput `pulumi:"ikeIntegrityProtocolVariable"`
	// Use preshared key to authenticate IKE peer
	IkePresharedKey pulumi.StringOutput `pulumi:"ikePresharedKey"`
	// Variable name
	IkePresharedKeyVariable pulumi.StringPtrOutput `pulumi:"ikePresharedKeyVariable"`
	// IKE rekey interval <60..86400> seconds - Range: `60`-`86400` - Default value: `14400`
	IkeRekeyInterval pulumi.IntPtrOutput `pulumi:"ikeRekeyInterval"`
	// Variable name
	IkeRekeyIntervalVariable pulumi.StringPtrOutput `pulumi:"ikeRekeyIntervalVariable"`
	// IKE Version <1..2> - Range: `1`-`2` - Default value: `1`
	IkeVersion pulumi.IntPtrOutput `pulumi:"ikeVersion"`
	// Interface description
	InterfaceDescription pulumi.StringPtrOutput `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrOutput `pulumi:"interfaceDescriptionVariable"`
	// Interface name: IPsec when present
	InterfaceName pulumi.StringOutput `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable pulumi.StringPtrOutput `pulumi:"interfaceNameVariable"`
	// Interface MTU <68..9216>, in bytes - Range: `68`-`9216` - Default value: `1500`
	IpMtu pulumi.IntPtrOutput `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable pulumi.StringPtrOutput `pulumi:"ipMtuVariable"`
	// IPsec(ESP) encryption and integrity protocol - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`,
	// `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512` - Default value:
	// `aes256-gcm`
	IpsecCiphersuite pulumi.StringPtrOutput `pulumi:"ipsecCiphersuite"`
	// Variable name
	IpsecCiphersuiteVariable pulumi.StringPtrOutput `pulumi:"ipsecCiphersuiteVariable"`
	// IPsec rekey interval <300..1209600> seconds - Range: `120`-`2592000` - Default value: `3600`
	IpsecRekeyInterval pulumi.IntPtrOutput `pulumi:"ipsecRekeyInterval"`
	// Variable name
	IpsecRekeyIntervalVariable pulumi.StringPtrOutput `pulumi:"ipsecRekeyIntervalVariable"`
	// Replay window size 32..8192 (must be a power of 2) - Range: `64`-`4096` - Default value: `512`
	IpsecReplayWindow pulumi.IntPtrOutput `pulumi:"ipsecReplayWindow"`
	// Variable name
	IpsecReplayWindowVariable pulumi.StringPtrOutput `pulumi:"ipsecReplayWindowVariable"`
	Ipv4Address               pulumi.StringOutput    `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrOutput `pulumi:"ipv4AddressVariable"`
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringOutput `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable pulumi.StringPtrOutput `pulumi:"ipv4SubnetMaskVariable"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// IPsec perfect forward secrecy settings - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`,
	// `group-19`, `group-20`, `group-21`, `group-24`, `none` - Default value: `group-16`
	PerfectForwardSecrecy pulumi.StringPtrOutput `pulumi:"perfectForwardSecrecy"`
	// Variable name
	PerfectForwardSecrecyVariable pulumi.StringPtrOutput `pulumi:"perfectForwardSecrecyVariable"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringPtrOutput `pulumi:"serviceLanVpnFeatureId"`
	// Administrative state - Default value: `true`
	Shutdown pulumi.BoolPtrOutput `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable pulumi.StringPtrOutput `pulumi:"shutdownVariable"`
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss pulumi.IntPtrOutput `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable pulumi.StringPtrOutput `pulumi:"tcpMssVariable"`
	// Enable tracker for this interface
	TrackerId pulumi.StringPtrOutput `pulumi:"trackerId"`
	// Variable name
	TrackerIdVariable            pulumi.StringPtrOutput `pulumi:"trackerIdVariable"`
	TunnelDestinationIpv4Address pulumi.StringOutput    `pulumi:"tunnelDestinationIpv4Address"`
	// Variable name
	TunnelDestinationIpv4AddressVariable pulumi.StringPtrOutput `pulumi:"tunnelDestinationIpv4AddressVariable"`
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	TunnelDestinationIpv4SubnetMask pulumi.StringOutput `pulumi:"tunnelDestinationIpv4SubnetMask"`
	// Variable name
	TunnelDestinationIpv4SubnetMaskVariable pulumi.StringPtrOutput `pulumi:"tunnelDestinationIpv4SubnetMaskVariable"`
	// <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
	TunnelRouteVia pulumi.StringPtrOutput `pulumi:"tunnelRouteVia"`
	// Variable name
	TunnelRouteViaVariable pulumi.StringPtrOutput `pulumi:"tunnelRouteViaVariable"`
	// <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
	TunnelSourceInterface pulumi.StringOutput `pulumi:"tunnelSourceInterface"`
	// Variable name
	TunnelSourceInterfaceVariable pulumi.StringPtrOutput `pulumi:"tunnelSourceInterfaceVariable"`
	TunnelSourceIpv4Address       pulumi.StringOutput    `pulumi:"tunnelSourceIpv4Address"`
	// Variable name
	TunnelSourceIpv4AddressVariable pulumi.StringPtrOutput `pulumi:"tunnelSourceIpv4AddressVariable"`
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	TunnelSourceIpv4SubnetMask pulumi.StringOutput `pulumi:"tunnelSourceIpv4SubnetMask"`
	// Variable name
	TunnelSourceIpv4SubnetMaskVariable pulumi.StringPtrOutput `pulumi:"tunnelSourceIpv4SubnetMaskVariable"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewServiceLanVpnInterfaceIpsecFeature registers a new resource with the given unique name, arguments, and options.
func NewServiceLanVpnInterfaceIpsecFeature(ctx *pulumi.Context,
	name string, args *ServiceLanVpnInterfaceIpsecFeatureArgs, opts ...pulumi.ResourceOption) (*ServiceLanVpnInterfaceIpsecFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationTunnelType == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationTunnelType'")
	}
	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	if args.IkePresharedKey == nil {
		return nil, errors.New("invalid value for required argument 'IkePresharedKey'")
	}
	if args.InterfaceName == nil {
		return nil, errors.New("invalid value for required argument 'InterfaceName'")
	}
	if args.Ipv4Address == nil {
		return nil, errors.New("invalid value for required argument 'Ipv4Address'")
	}
	if args.Ipv4SubnetMask == nil {
		return nil, errors.New("invalid value for required argument 'Ipv4SubnetMask'")
	}
	if args.TunnelDestinationIpv4Address == nil {
		return nil, errors.New("invalid value for required argument 'TunnelDestinationIpv4Address'")
	}
	if args.TunnelDestinationIpv4SubnetMask == nil {
		return nil, errors.New("invalid value for required argument 'TunnelDestinationIpv4SubnetMask'")
	}
	if args.TunnelSourceInterface == nil {
		return nil, errors.New("invalid value for required argument 'TunnelSourceInterface'")
	}
	if args.TunnelSourceIpv4Address == nil {
		return nil, errors.New("invalid value for required argument 'TunnelSourceIpv4Address'")
	}
	if args.TunnelSourceIpv4SubnetMask == nil {
		return nil, errors.New("invalid value for required argument 'TunnelSourceIpv4SubnetMask'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceLanVpnInterfaceIpsecFeature
	err := ctx.RegisterResource("sdwan:index/serviceLanVpnInterfaceIpsecFeature:ServiceLanVpnInterfaceIpsecFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceLanVpnInterfaceIpsecFeature gets an existing ServiceLanVpnInterfaceIpsecFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceLanVpnInterfaceIpsecFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceLanVpnInterfaceIpsecFeatureState, opts ...pulumi.ResourceOption) (*ServiceLanVpnInterfaceIpsecFeature, error) {
	var resource ServiceLanVpnInterfaceIpsecFeature
	err := ctx.ReadResource("sdwan:index/serviceLanVpnInterfaceIpsecFeature:ServiceLanVpnInterfaceIpsecFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceLanVpnInterfaceIpsecFeature resources.
type serviceLanVpnInterfaceIpsecFeatureState struct {
	// Enable Application Tunnel Type - Choices: `none`, `sig`
	ApplicationTunnelType *string `pulumi:"applicationTunnelType"`
	// Variable name
	ApplicationTunnelTypeVariable *string `pulumi:"applicationTunnelTypeVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	ClearDontFragment *bool `pulumi:"clearDontFragment"`
	// Variable name
	ClearDontFragmentVariable *string `pulumi:"clearDontFragmentVariable"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// IKE keepalive interval (seconds) - Range: `10`-`3600` - Default value: `10`
	DpdInterval *int `pulumi:"dpdInterval"`
	// Variable name
	DpdIntervalVariable *string `pulumi:"dpdIntervalVariable"`
	// IKE keepalive retries - Range: `2`-`60` - Default value: `3`
	DpdRetries *int `pulumi:"dpdRetries"`
	// Variable name
	DpdRetriesVariable *string `pulumi:"dpdRetriesVariable"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// IKE identity the IKE preshared secret belongs to - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`,
	// `aes128-cbc-sha2` - Default value: `aes256-cbc-sha1`
	IkeCiphersuite *string `pulumi:"ikeCiphersuite"`
	// Variable name
	IkeCiphersuiteVariable *string `pulumi:"ikeCiphersuiteVariable"`
	// IKE Diffie Hellman Groups - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24` - Default value: `16`
	IkeDiffieHellmanGroup *string `pulumi:"ikeDiffieHellmanGroup"`
	// Variable name
	IkeDiffieHellmanGroupVariable *string `pulumi:"ikeDiffieHellmanGroupVariable"`
	// IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
	IkeIdLocalEndPoint *string `pulumi:"ikeIdLocalEndPoint"`
	// Variable name
	IkeIdLocalEndPointVariable *string `pulumi:"ikeIdLocalEndPointVariable"`
	// IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
	IkeIdRemoteEndPoint *string `pulumi:"ikeIdRemoteEndPoint"`
	// Variable name
	IkeIdRemoteEndPointVariable *string `pulumi:"ikeIdRemoteEndPointVariable"`
	// IKE integrity protocol - Choices: `main`, `aggressive` - Default value: `main`
	IkeIntegrityProtocol *string `pulumi:"ikeIntegrityProtocol"`
	// Variable name
	IkeIntegrityProtocolVariable *string `pulumi:"ikeIntegrityProtocolVariable"`
	// Use preshared key to authenticate IKE peer
	IkePresharedKey *string `pulumi:"ikePresharedKey"`
	// Variable name
	IkePresharedKeyVariable *string `pulumi:"ikePresharedKeyVariable"`
	// IKE rekey interval <60..86400> seconds - Range: `60`-`86400` - Default value: `14400`
	IkeRekeyInterval *int `pulumi:"ikeRekeyInterval"`
	// Variable name
	IkeRekeyIntervalVariable *string `pulumi:"ikeRekeyIntervalVariable"`
	// IKE Version <1..2> - Range: `1`-`2` - Default value: `1`
	IkeVersion *int `pulumi:"ikeVersion"`
	// Interface description
	InterfaceDescription *string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable *string `pulumi:"interfaceDescriptionVariable"`
	// Interface name: IPsec when present
	InterfaceName *string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable *string `pulumi:"interfaceNameVariable"`
	// Interface MTU <68..9216>, in bytes - Range: `68`-`9216` - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	// IPsec(ESP) encryption and integrity protocol - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`,
	// `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512` - Default value:
	// `aes256-gcm`
	IpsecCiphersuite *string `pulumi:"ipsecCiphersuite"`
	// Variable name
	IpsecCiphersuiteVariable *string `pulumi:"ipsecCiphersuiteVariable"`
	// IPsec rekey interval <300..1209600> seconds - Range: `120`-`2592000` - Default value: `3600`
	IpsecRekeyInterval *int `pulumi:"ipsecRekeyInterval"`
	// Variable name
	IpsecRekeyIntervalVariable *string `pulumi:"ipsecRekeyIntervalVariable"`
	// Replay window size 32..8192 (must be a power of 2) - Range: `64`-`4096` - Default value: `512`
	IpsecReplayWindow *int `pulumi:"ipsecReplayWindow"`
	// Variable name
	IpsecReplayWindowVariable *string `pulumi:"ipsecReplayWindowVariable"`
	Ipv4Address               *string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable *string `pulumi:"ipv4AddressVariable"`
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask *string `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable *string `pulumi:"ipv4SubnetMaskVariable"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// IPsec perfect forward secrecy settings - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`,
	// `group-19`, `group-20`, `group-21`, `group-24`, `none` - Default value: `group-16`
	PerfectForwardSecrecy *string `pulumi:"perfectForwardSecrecy"`
	// Variable name
	PerfectForwardSecrecyVariable *string `pulumi:"perfectForwardSecrecyVariable"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId *string `pulumi:"serviceLanVpnFeatureId"`
	// Administrative state - Default value: `true`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss *int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable *string `pulumi:"tcpMssVariable"`
	// Enable tracker for this interface
	TrackerId *string `pulumi:"trackerId"`
	// Variable name
	TrackerIdVariable            *string `pulumi:"trackerIdVariable"`
	TunnelDestinationIpv4Address *string `pulumi:"tunnelDestinationIpv4Address"`
	// Variable name
	TunnelDestinationIpv4AddressVariable *string `pulumi:"tunnelDestinationIpv4AddressVariable"`
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	TunnelDestinationIpv4SubnetMask *string `pulumi:"tunnelDestinationIpv4SubnetMask"`
	// Variable name
	TunnelDestinationIpv4SubnetMaskVariable *string `pulumi:"tunnelDestinationIpv4SubnetMaskVariable"`
	// <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
	TunnelRouteVia *string `pulumi:"tunnelRouteVia"`
	// Variable name
	TunnelRouteViaVariable *string `pulumi:"tunnelRouteViaVariable"`
	// <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
	TunnelSourceInterface *string `pulumi:"tunnelSourceInterface"`
	// Variable name
	TunnelSourceInterfaceVariable *string `pulumi:"tunnelSourceInterfaceVariable"`
	TunnelSourceIpv4Address       *string `pulumi:"tunnelSourceIpv4Address"`
	// Variable name
	TunnelSourceIpv4AddressVariable *string `pulumi:"tunnelSourceIpv4AddressVariable"`
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	TunnelSourceIpv4SubnetMask *string `pulumi:"tunnelSourceIpv4SubnetMask"`
	// Variable name
	TunnelSourceIpv4SubnetMaskVariable *string `pulumi:"tunnelSourceIpv4SubnetMaskVariable"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type ServiceLanVpnInterfaceIpsecFeatureState struct {
	// Enable Application Tunnel Type - Choices: `none`, `sig`
	ApplicationTunnelType pulumi.StringPtrInput
	// Variable name
	ApplicationTunnelTypeVariable pulumi.StringPtrInput
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	ClearDontFragment pulumi.BoolPtrInput
	// Variable name
	ClearDontFragmentVariable pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// IKE keepalive interval (seconds) - Range: `10`-`3600` - Default value: `10`
	DpdInterval pulumi.IntPtrInput
	// Variable name
	DpdIntervalVariable pulumi.StringPtrInput
	// IKE keepalive retries - Range: `2`-`60` - Default value: `3`
	DpdRetries pulumi.IntPtrInput
	// Variable name
	DpdRetriesVariable pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// IKE identity the IKE preshared secret belongs to - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`,
	// `aes128-cbc-sha2` - Default value: `aes256-cbc-sha1`
	IkeCiphersuite pulumi.StringPtrInput
	// Variable name
	IkeCiphersuiteVariable pulumi.StringPtrInput
	// IKE Diffie Hellman Groups - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24` - Default value: `16`
	IkeDiffieHellmanGroup pulumi.StringPtrInput
	// Variable name
	IkeDiffieHellmanGroupVariable pulumi.StringPtrInput
	// IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
	IkeIdLocalEndPoint pulumi.StringPtrInput
	// Variable name
	IkeIdLocalEndPointVariable pulumi.StringPtrInput
	// IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
	IkeIdRemoteEndPoint pulumi.StringPtrInput
	// Variable name
	IkeIdRemoteEndPointVariable pulumi.StringPtrInput
	// IKE integrity protocol - Choices: `main`, `aggressive` - Default value: `main`
	IkeIntegrityProtocol pulumi.StringPtrInput
	// Variable name
	IkeIntegrityProtocolVariable pulumi.StringPtrInput
	// Use preshared key to authenticate IKE peer
	IkePresharedKey pulumi.StringPtrInput
	// Variable name
	IkePresharedKeyVariable pulumi.StringPtrInput
	// IKE rekey interval <60..86400> seconds - Range: `60`-`86400` - Default value: `14400`
	IkeRekeyInterval pulumi.IntPtrInput
	// Variable name
	IkeRekeyIntervalVariable pulumi.StringPtrInput
	// IKE Version <1..2> - Range: `1`-`2` - Default value: `1`
	IkeVersion pulumi.IntPtrInput
	// Interface description
	InterfaceDescription pulumi.StringPtrInput
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrInput
	// Interface name: IPsec when present
	InterfaceName pulumi.StringPtrInput
	// Variable name
	InterfaceNameVariable pulumi.StringPtrInput
	// Interface MTU <68..9216>, in bytes - Range: `68`-`9216` - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	// IPsec(ESP) encryption and integrity protocol - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`,
	// `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512` - Default value:
	// `aes256-gcm`
	IpsecCiphersuite pulumi.StringPtrInput
	// Variable name
	IpsecCiphersuiteVariable pulumi.StringPtrInput
	// IPsec rekey interval <300..1209600> seconds - Range: `120`-`2592000` - Default value: `3600`
	IpsecRekeyInterval pulumi.IntPtrInput
	// Variable name
	IpsecRekeyIntervalVariable pulumi.StringPtrInput
	// Replay window size 32..8192 (must be a power of 2) - Range: `64`-`4096` - Default value: `512`
	IpsecReplayWindow pulumi.IntPtrInput
	// Variable name
	IpsecReplayWindowVariable pulumi.StringPtrInput
	Ipv4Address               pulumi.StringPtrInput
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrInput
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrInput
	// Variable name
	Ipv4SubnetMaskVariable pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// IPsec perfect forward secrecy settings - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`,
	// `group-19`, `group-20`, `group-21`, `group-24`, `none` - Default value: `group-16`
	PerfectForwardSecrecy pulumi.StringPtrInput
	// Variable name
	PerfectForwardSecrecyVariable pulumi.StringPtrInput
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringPtrInput
	// Administrative state - Default value: `true`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss pulumi.IntPtrInput
	// Variable name
	TcpMssVariable pulumi.StringPtrInput
	// Enable tracker for this interface
	TrackerId pulumi.StringPtrInput
	// Variable name
	TrackerIdVariable            pulumi.StringPtrInput
	TunnelDestinationIpv4Address pulumi.StringPtrInput
	// Variable name
	TunnelDestinationIpv4AddressVariable pulumi.StringPtrInput
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	TunnelDestinationIpv4SubnetMask pulumi.StringPtrInput
	// Variable name
	TunnelDestinationIpv4SubnetMaskVariable pulumi.StringPtrInput
	// <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
	TunnelRouteVia pulumi.StringPtrInput
	// Variable name
	TunnelRouteViaVariable pulumi.StringPtrInput
	// <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
	TunnelSourceInterface pulumi.StringPtrInput
	// Variable name
	TunnelSourceInterfaceVariable pulumi.StringPtrInput
	TunnelSourceIpv4Address       pulumi.StringPtrInput
	// Variable name
	TunnelSourceIpv4AddressVariable pulumi.StringPtrInput
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	TunnelSourceIpv4SubnetMask pulumi.StringPtrInput
	// Variable name
	TunnelSourceIpv4SubnetMaskVariable pulumi.StringPtrInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (ServiceLanVpnInterfaceIpsecFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceLanVpnInterfaceIpsecFeatureState)(nil)).Elem()
}

type serviceLanVpnInterfaceIpsecFeatureArgs struct {
	// Enable Application Tunnel Type - Choices: `none`, `sig`
	ApplicationTunnelType string `pulumi:"applicationTunnelType"`
	// Variable name
	ApplicationTunnelTypeVariable *string `pulumi:"applicationTunnelTypeVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	ClearDontFragment *bool `pulumi:"clearDontFragment"`
	// Variable name
	ClearDontFragmentVariable *string `pulumi:"clearDontFragmentVariable"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// IKE keepalive interval (seconds) - Range: `10`-`3600` - Default value: `10`
	DpdInterval *int `pulumi:"dpdInterval"`
	// Variable name
	DpdIntervalVariable *string `pulumi:"dpdIntervalVariable"`
	// IKE keepalive retries - Range: `2`-`60` - Default value: `3`
	DpdRetries *int `pulumi:"dpdRetries"`
	// Variable name
	DpdRetriesVariable *string `pulumi:"dpdRetriesVariable"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// IKE identity the IKE preshared secret belongs to - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`,
	// `aes128-cbc-sha2` - Default value: `aes256-cbc-sha1`
	IkeCiphersuite *string `pulumi:"ikeCiphersuite"`
	// Variable name
	IkeCiphersuiteVariable *string `pulumi:"ikeCiphersuiteVariable"`
	// IKE Diffie Hellman Groups - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24` - Default value: `16`
	IkeDiffieHellmanGroup *string `pulumi:"ikeDiffieHellmanGroup"`
	// Variable name
	IkeDiffieHellmanGroupVariable *string `pulumi:"ikeDiffieHellmanGroupVariable"`
	// IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
	IkeIdLocalEndPoint *string `pulumi:"ikeIdLocalEndPoint"`
	// Variable name
	IkeIdLocalEndPointVariable *string `pulumi:"ikeIdLocalEndPointVariable"`
	// IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
	IkeIdRemoteEndPoint *string `pulumi:"ikeIdRemoteEndPoint"`
	// Variable name
	IkeIdRemoteEndPointVariable *string `pulumi:"ikeIdRemoteEndPointVariable"`
	// IKE integrity protocol - Choices: `main`, `aggressive` - Default value: `main`
	IkeIntegrityProtocol *string `pulumi:"ikeIntegrityProtocol"`
	// Variable name
	IkeIntegrityProtocolVariable *string `pulumi:"ikeIntegrityProtocolVariable"`
	// Use preshared key to authenticate IKE peer
	IkePresharedKey string `pulumi:"ikePresharedKey"`
	// Variable name
	IkePresharedKeyVariable *string `pulumi:"ikePresharedKeyVariable"`
	// IKE rekey interval <60..86400> seconds - Range: `60`-`86400` - Default value: `14400`
	IkeRekeyInterval *int `pulumi:"ikeRekeyInterval"`
	// Variable name
	IkeRekeyIntervalVariable *string `pulumi:"ikeRekeyIntervalVariable"`
	// IKE Version <1..2> - Range: `1`-`2` - Default value: `1`
	IkeVersion *int `pulumi:"ikeVersion"`
	// Interface description
	InterfaceDescription *string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable *string `pulumi:"interfaceDescriptionVariable"`
	// Interface name: IPsec when present
	InterfaceName string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable *string `pulumi:"interfaceNameVariable"`
	// Interface MTU <68..9216>, in bytes - Range: `68`-`9216` - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	// IPsec(ESP) encryption and integrity protocol - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`,
	// `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512` - Default value:
	// `aes256-gcm`
	IpsecCiphersuite *string `pulumi:"ipsecCiphersuite"`
	// Variable name
	IpsecCiphersuiteVariable *string `pulumi:"ipsecCiphersuiteVariable"`
	// IPsec rekey interval <300..1209600> seconds - Range: `120`-`2592000` - Default value: `3600`
	IpsecRekeyInterval *int `pulumi:"ipsecRekeyInterval"`
	// Variable name
	IpsecRekeyIntervalVariable *string `pulumi:"ipsecRekeyIntervalVariable"`
	// Replay window size 32..8192 (must be a power of 2) - Range: `64`-`4096` - Default value: `512`
	IpsecReplayWindow *int `pulumi:"ipsecReplayWindow"`
	// Variable name
	IpsecReplayWindowVariable *string `pulumi:"ipsecReplayWindowVariable"`
	Ipv4Address               string  `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable *string `pulumi:"ipv4AddressVariable"`
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask string `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable *string `pulumi:"ipv4SubnetMaskVariable"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// IPsec perfect forward secrecy settings - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`,
	// `group-19`, `group-20`, `group-21`, `group-24`, `none` - Default value: `group-16`
	PerfectForwardSecrecy *string `pulumi:"perfectForwardSecrecy"`
	// Variable name
	PerfectForwardSecrecyVariable *string `pulumi:"perfectForwardSecrecyVariable"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId *string `pulumi:"serviceLanVpnFeatureId"`
	// Administrative state - Default value: `true`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss *int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable *string `pulumi:"tcpMssVariable"`
	// Enable tracker for this interface
	TrackerId *string `pulumi:"trackerId"`
	// Variable name
	TrackerIdVariable            *string `pulumi:"trackerIdVariable"`
	TunnelDestinationIpv4Address string  `pulumi:"tunnelDestinationIpv4Address"`
	// Variable name
	TunnelDestinationIpv4AddressVariable *string `pulumi:"tunnelDestinationIpv4AddressVariable"`
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	TunnelDestinationIpv4SubnetMask string `pulumi:"tunnelDestinationIpv4SubnetMask"`
	// Variable name
	TunnelDestinationIpv4SubnetMaskVariable *string `pulumi:"tunnelDestinationIpv4SubnetMaskVariable"`
	// <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
	TunnelRouteVia *string `pulumi:"tunnelRouteVia"`
	// Variable name
	TunnelRouteViaVariable *string `pulumi:"tunnelRouteViaVariable"`
	// <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
	TunnelSourceInterface string `pulumi:"tunnelSourceInterface"`
	// Variable name
	TunnelSourceInterfaceVariable *string `pulumi:"tunnelSourceInterfaceVariable"`
	TunnelSourceIpv4Address       string  `pulumi:"tunnelSourceIpv4Address"`
	// Variable name
	TunnelSourceIpv4AddressVariable *string `pulumi:"tunnelSourceIpv4AddressVariable"`
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	TunnelSourceIpv4SubnetMask string `pulumi:"tunnelSourceIpv4SubnetMask"`
	// Variable name
	TunnelSourceIpv4SubnetMaskVariable *string `pulumi:"tunnelSourceIpv4SubnetMaskVariable"`
}

// The set of arguments for constructing a ServiceLanVpnInterfaceIpsecFeature resource.
type ServiceLanVpnInterfaceIpsecFeatureArgs struct {
	// Enable Application Tunnel Type - Choices: `none`, `sig`
	ApplicationTunnelType pulumi.StringInput
	// Variable name
	ApplicationTunnelTypeVariable pulumi.StringPtrInput
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	ClearDontFragment pulumi.BoolPtrInput
	// Variable name
	ClearDontFragmentVariable pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// IKE keepalive interval (seconds) - Range: `10`-`3600` - Default value: `10`
	DpdInterval pulumi.IntPtrInput
	// Variable name
	DpdIntervalVariable pulumi.StringPtrInput
	// IKE keepalive retries - Range: `2`-`60` - Default value: `3`
	DpdRetries pulumi.IntPtrInput
	// Variable name
	DpdRetriesVariable pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// IKE identity the IKE preshared secret belongs to - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`,
	// `aes128-cbc-sha2` - Default value: `aes256-cbc-sha1`
	IkeCiphersuite pulumi.StringPtrInput
	// Variable name
	IkeCiphersuiteVariable pulumi.StringPtrInput
	// IKE Diffie Hellman Groups - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24` - Default value: `16`
	IkeDiffieHellmanGroup pulumi.StringPtrInput
	// Variable name
	IkeDiffieHellmanGroupVariable pulumi.StringPtrInput
	// IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
	IkeIdLocalEndPoint pulumi.StringPtrInput
	// Variable name
	IkeIdLocalEndPointVariable pulumi.StringPtrInput
	// IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
	IkeIdRemoteEndPoint pulumi.StringPtrInput
	// Variable name
	IkeIdRemoteEndPointVariable pulumi.StringPtrInput
	// IKE integrity protocol - Choices: `main`, `aggressive` - Default value: `main`
	IkeIntegrityProtocol pulumi.StringPtrInput
	// Variable name
	IkeIntegrityProtocolVariable pulumi.StringPtrInput
	// Use preshared key to authenticate IKE peer
	IkePresharedKey pulumi.StringInput
	// Variable name
	IkePresharedKeyVariable pulumi.StringPtrInput
	// IKE rekey interval <60..86400> seconds - Range: `60`-`86400` - Default value: `14400`
	IkeRekeyInterval pulumi.IntPtrInput
	// Variable name
	IkeRekeyIntervalVariable pulumi.StringPtrInput
	// IKE Version <1..2> - Range: `1`-`2` - Default value: `1`
	IkeVersion pulumi.IntPtrInput
	// Interface description
	InterfaceDescription pulumi.StringPtrInput
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrInput
	// Interface name: IPsec when present
	InterfaceName pulumi.StringInput
	// Variable name
	InterfaceNameVariable pulumi.StringPtrInput
	// Interface MTU <68..9216>, in bytes - Range: `68`-`9216` - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	// IPsec(ESP) encryption and integrity protocol - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`,
	// `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512` - Default value:
	// `aes256-gcm`
	IpsecCiphersuite pulumi.StringPtrInput
	// Variable name
	IpsecCiphersuiteVariable pulumi.StringPtrInput
	// IPsec rekey interval <300..1209600> seconds - Range: `120`-`2592000` - Default value: `3600`
	IpsecRekeyInterval pulumi.IntPtrInput
	// Variable name
	IpsecRekeyIntervalVariable pulumi.StringPtrInput
	// Replay window size 32..8192 (must be a power of 2) - Range: `64`-`4096` - Default value: `512`
	IpsecReplayWindow pulumi.IntPtrInput
	// Variable name
	IpsecReplayWindowVariable pulumi.StringPtrInput
	Ipv4Address               pulumi.StringInput
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrInput
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringInput
	// Variable name
	Ipv4SubnetMaskVariable pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// IPsec perfect forward secrecy settings - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`,
	// `group-19`, `group-20`, `group-21`, `group-24`, `none` - Default value: `group-16`
	PerfectForwardSecrecy pulumi.StringPtrInput
	// Variable name
	PerfectForwardSecrecyVariable pulumi.StringPtrInput
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringPtrInput
	// Administrative state - Default value: `true`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss pulumi.IntPtrInput
	// Variable name
	TcpMssVariable pulumi.StringPtrInput
	// Enable tracker for this interface
	TrackerId pulumi.StringPtrInput
	// Variable name
	TrackerIdVariable            pulumi.StringPtrInput
	TunnelDestinationIpv4Address pulumi.StringInput
	// Variable name
	TunnelDestinationIpv4AddressVariable pulumi.StringPtrInput
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	TunnelDestinationIpv4SubnetMask pulumi.StringInput
	// Variable name
	TunnelDestinationIpv4SubnetMaskVariable pulumi.StringPtrInput
	// <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
	TunnelRouteVia pulumi.StringPtrInput
	// Variable name
	TunnelRouteViaVariable pulumi.StringPtrInput
	// <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
	TunnelSourceInterface pulumi.StringInput
	// Variable name
	TunnelSourceInterfaceVariable pulumi.StringPtrInput
	TunnelSourceIpv4Address       pulumi.StringInput
	// Variable name
	TunnelSourceIpv4AddressVariable pulumi.StringPtrInput
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	TunnelSourceIpv4SubnetMask pulumi.StringInput
	// Variable name
	TunnelSourceIpv4SubnetMaskVariable pulumi.StringPtrInput
}

func (ServiceLanVpnInterfaceIpsecFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceLanVpnInterfaceIpsecFeatureArgs)(nil)).Elem()
}

type ServiceLanVpnInterfaceIpsecFeatureInput interface {
	pulumi.Input

	ToServiceLanVpnInterfaceIpsecFeatureOutput() ServiceLanVpnInterfaceIpsecFeatureOutput
	ToServiceLanVpnInterfaceIpsecFeatureOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceIpsecFeatureOutput
}

func (*ServiceLanVpnInterfaceIpsecFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLanVpnInterfaceIpsecFeature)(nil)).Elem()
}

func (i *ServiceLanVpnInterfaceIpsecFeature) ToServiceLanVpnInterfaceIpsecFeatureOutput() ServiceLanVpnInterfaceIpsecFeatureOutput {
	return i.ToServiceLanVpnInterfaceIpsecFeatureOutputWithContext(context.Background())
}

func (i *ServiceLanVpnInterfaceIpsecFeature) ToServiceLanVpnInterfaceIpsecFeatureOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceIpsecFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLanVpnInterfaceIpsecFeatureOutput)
}

// ServiceLanVpnInterfaceIpsecFeatureArrayInput is an input type that accepts ServiceLanVpnInterfaceIpsecFeatureArray and ServiceLanVpnInterfaceIpsecFeatureArrayOutput values.
// You can construct a concrete instance of `ServiceLanVpnInterfaceIpsecFeatureArrayInput` via:
//
//	ServiceLanVpnInterfaceIpsecFeatureArray{ ServiceLanVpnInterfaceIpsecFeatureArgs{...} }
type ServiceLanVpnInterfaceIpsecFeatureArrayInput interface {
	pulumi.Input

	ToServiceLanVpnInterfaceIpsecFeatureArrayOutput() ServiceLanVpnInterfaceIpsecFeatureArrayOutput
	ToServiceLanVpnInterfaceIpsecFeatureArrayOutputWithContext(context.Context) ServiceLanVpnInterfaceIpsecFeatureArrayOutput
}

type ServiceLanVpnInterfaceIpsecFeatureArray []ServiceLanVpnInterfaceIpsecFeatureInput

func (ServiceLanVpnInterfaceIpsecFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceLanVpnInterfaceIpsecFeature)(nil)).Elem()
}

func (i ServiceLanVpnInterfaceIpsecFeatureArray) ToServiceLanVpnInterfaceIpsecFeatureArrayOutput() ServiceLanVpnInterfaceIpsecFeatureArrayOutput {
	return i.ToServiceLanVpnInterfaceIpsecFeatureArrayOutputWithContext(context.Background())
}

func (i ServiceLanVpnInterfaceIpsecFeatureArray) ToServiceLanVpnInterfaceIpsecFeatureArrayOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceIpsecFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLanVpnInterfaceIpsecFeatureArrayOutput)
}

// ServiceLanVpnInterfaceIpsecFeatureMapInput is an input type that accepts ServiceLanVpnInterfaceIpsecFeatureMap and ServiceLanVpnInterfaceIpsecFeatureMapOutput values.
// You can construct a concrete instance of `ServiceLanVpnInterfaceIpsecFeatureMapInput` via:
//
//	ServiceLanVpnInterfaceIpsecFeatureMap{ "key": ServiceLanVpnInterfaceIpsecFeatureArgs{...} }
type ServiceLanVpnInterfaceIpsecFeatureMapInput interface {
	pulumi.Input

	ToServiceLanVpnInterfaceIpsecFeatureMapOutput() ServiceLanVpnInterfaceIpsecFeatureMapOutput
	ToServiceLanVpnInterfaceIpsecFeatureMapOutputWithContext(context.Context) ServiceLanVpnInterfaceIpsecFeatureMapOutput
}

type ServiceLanVpnInterfaceIpsecFeatureMap map[string]ServiceLanVpnInterfaceIpsecFeatureInput

func (ServiceLanVpnInterfaceIpsecFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceLanVpnInterfaceIpsecFeature)(nil)).Elem()
}

func (i ServiceLanVpnInterfaceIpsecFeatureMap) ToServiceLanVpnInterfaceIpsecFeatureMapOutput() ServiceLanVpnInterfaceIpsecFeatureMapOutput {
	return i.ToServiceLanVpnInterfaceIpsecFeatureMapOutputWithContext(context.Background())
}

func (i ServiceLanVpnInterfaceIpsecFeatureMap) ToServiceLanVpnInterfaceIpsecFeatureMapOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceIpsecFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLanVpnInterfaceIpsecFeatureMapOutput)
}

type ServiceLanVpnInterfaceIpsecFeatureOutput struct{ *pulumi.OutputState }

func (ServiceLanVpnInterfaceIpsecFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLanVpnInterfaceIpsecFeature)(nil)).Elem()
}

func (o ServiceLanVpnInterfaceIpsecFeatureOutput) ToServiceLanVpnInterfaceIpsecFeatureOutput() ServiceLanVpnInterfaceIpsecFeatureOutput {
	return o
}

func (o ServiceLanVpnInterfaceIpsecFeatureOutput) ToServiceLanVpnInterfaceIpsecFeatureOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceIpsecFeatureOutput {
	return o
}

// Enable Application Tunnel Type - Choices: `none`, `sig`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) ApplicationTunnelType() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringOutput { return v.ApplicationTunnelType }).(pulumi.StringOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) ApplicationTunnelTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput {
		return v.ApplicationTunnelTypeVariable
	}).(pulumi.StringPtrOutput)
}

// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) ClearDontFragment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.BoolPtrOutput { return v.ClearDontFragment }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) ClearDontFragmentVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.ClearDontFragmentVariable }).(pulumi.StringPtrOutput)
}

// The description of the Feature
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// IKE keepalive interval (seconds) - Range: `10`-`3600` - Default value: `10`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) DpdInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.IntPtrOutput { return v.DpdInterval }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) DpdIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.DpdIntervalVariable }).(pulumi.StringPtrOutput)
}

// IKE keepalive retries - Range: `2`-`60` - Default value: `3`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) DpdRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.IntPtrOutput { return v.DpdRetries }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) DpdRetriesVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.DpdRetriesVariable }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// IKE identity the IKE preshared secret belongs to - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`,
// `aes128-cbc-sha2` - Default value: `aes256-cbc-sha1`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IkeCiphersuite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.IkeCiphersuite }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IkeCiphersuiteVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.IkeCiphersuiteVariable }).(pulumi.StringPtrOutput)
}

// IKE Diffie Hellman Groups - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24` - Default value: `16`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IkeDiffieHellmanGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.IkeDiffieHellmanGroup }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IkeDiffieHellmanGroupVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput {
		return v.IkeDiffieHellmanGroupVariable
	}).(pulumi.StringPtrOutput)
}

// IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IkeIdLocalEndPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.IkeIdLocalEndPoint }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IkeIdLocalEndPointVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput {
		return v.IkeIdLocalEndPointVariable
	}).(pulumi.StringPtrOutput)
}

// IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IkeIdRemoteEndPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.IkeIdRemoteEndPoint }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IkeIdRemoteEndPointVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput {
		return v.IkeIdRemoteEndPointVariable
	}).(pulumi.StringPtrOutput)
}

// IKE integrity protocol - Choices: `main`, `aggressive` - Default value: `main`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IkeIntegrityProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.IkeIntegrityProtocol }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IkeIntegrityProtocolVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput {
		return v.IkeIntegrityProtocolVariable
	}).(pulumi.StringPtrOutput)
}

// Use preshared key to authenticate IKE peer
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IkePresharedKey() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringOutput { return v.IkePresharedKey }).(pulumi.StringOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IkePresharedKeyVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.IkePresharedKeyVariable }).(pulumi.StringPtrOutput)
}

// IKE rekey interval <60..86400> seconds - Range: `60`-`86400` - Default value: `14400`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IkeRekeyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.IntPtrOutput { return v.IkeRekeyInterval }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IkeRekeyIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.IkeRekeyIntervalVariable }).(pulumi.StringPtrOutput)
}

// IKE Version <1..2> - Range: `1`-`2` - Default value: `1`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IkeVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.IntPtrOutput { return v.IkeVersion }).(pulumi.IntPtrOutput)
}

// Interface description
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) InterfaceDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.InterfaceDescription }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) InterfaceDescriptionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput {
		return v.InterfaceDescriptionVariable
	}).(pulumi.StringPtrOutput)
}

// Interface name: IPsec when present
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringOutput { return v.InterfaceName }).(pulumi.StringOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) InterfaceNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.InterfaceNameVariable }).(pulumi.StringPtrOutput)
}

// Interface MTU <68..9216>, in bytes - Range: `68`-`9216` - Default value: `1500`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IpMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.IntPtrOutput { return v.IpMtu }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IpMtuVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.IpMtuVariable }).(pulumi.StringPtrOutput)
}

// IPsec(ESP) encryption and integrity protocol - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`,
// `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512` - Default value:
// `aes256-gcm`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IpsecCiphersuite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.IpsecCiphersuite }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IpsecCiphersuiteVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.IpsecCiphersuiteVariable }).(pulumi.StringPtrOutput)
}

// IPsec rekey interval <300..1209600> seconds - Range: `120`-`2592000` - Default value: `3600`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IpsecRekeyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.IntPtrOutput { return v.IpsecRekeyInterval }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IpsecRekeyIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput {
		return v.IpsecRekeyIntervalVariable
	}).(pulumi.StringPtrOutput)
}

// Replay window size 32..8192 (must be a power of 2) - Range: `64`-`4096` - Default value: `512`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IpsecReplayWindow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.IntPtrOutput { return v.IpsecReplayWindow }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) IpsecReplayWindowVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.IpsecReplayWindowVariable }).(pulumi.StringPtrOutput)
}

func (o ServiceLanVpnInterfaceIpsecFeatureOutput) Ipv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringOutput { return v.Ipv4Address }).(pulumi.StringOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) Ipv4AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.Ipv4AddressVariable }).(pulumi.StringPtrOutput)
}

//   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
//     `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
//     `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
//     `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
//     `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) Ipv4SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringOutput { return v.Ipv4SubnetMask }).(pulumi.StringOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) Ipv4SubnetMaskVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.Ipv4SubnetMaskVariable }).(pulumi.StringPtrOutput)
}

// The name of the Feature
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// IPsec perfect forward secrecy settings - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`,
// `group-19`, `group-20`, `group-21`, `group-24`, `none` - Default value: `group-16`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) PerfectForwardSecrecy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.PerfectForwardSecrecy }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) PerfectForwardSecrecyVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput {
		return v.PerfectForwardSecrecyVariable
	}).(pulumi.StringPtrOutput)
}

// Service LAN VPN Feature ID
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) ServiceLanVpnFeatureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.ServiceLanVpnFeatureId }).(pulumi.StringPtrOutput)
}

// Administrative state - Default value: `true`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) Shutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.BoolPtrOutput { return v.Shutdown }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) ShutdownVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.ShutdownVariable }).(pulumi.StringPtrOutput)
}

// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) TcpMss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.IntPtrOutput { return v.TcpMss }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) TcpMssVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.TcpMssVariable }).(pulumi.StringPtrOutput)
}

// Enable tracker for this interface
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) TrackerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.TrackerId }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) TrackerIdVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.TrackerIdVariable }).(pulumi.StringPtrOutput)
}

func (o ServiceLanVpnInterfaceIpsecFeatureOutput) TunnelDestinationIpv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringOutput { return v.TunnelDestinationIpv4Address }).(pulumi.StringOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) TunnelDestinationIpv4AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput {
		return v.TunnelDestinationIpv4AddressVariable
	}).(pulumi.StringPtrOutput)
}

//   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
//     `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
//     `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
//     `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
//     `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) TunnelDestinationIpv4SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringOutput {
		return v.TunnelDestinationIpv4SubnetMask
	}).(pulumi.StringOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) TunnelDestinationIpv4SubnetMaskVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput {
		return v.TunnelDestinationIpv4SubnetMaskVariable
	}).(pulumi.StringPtrOutput)
}

// <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) TunnelRouteVia() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.TunnelRouteVia }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) TunnelRouteViaVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput { return v.TunnelRouteViaVariable }).(pulumi.StringPtrOutput)
}

// <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) TunnelSourceInterface() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringOutput { return v.TunnelSourceInterface }).(pulumi.StringOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) TunnelSourceInterfaceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput {
		return v.TunnelSourceInterfaceVariable
	}).(pulumi.StringPtrOutput)
}

func (o ServiceLanVpnInterfaceIpsecFeatureOutput) TunnelSourceIpv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringOutput { return v.TunnelSourceIpv4Address }).(pulumi.StringOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) TunnelSourceIpv4AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput {
		return v.TunnelSourceIpv4AddressVariable
	}).(pulumi.StringPtrOutput)
}

//   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
//     `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
//     `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
//     `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
//     `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) TunnelSourceIpv4SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringOutput { return v.TunnelSourceIpv4SubnetMask }).(pulumi.StringOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) TunnelSourceIpv4SubnetMaskVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.StringPtrOutput {
		return v.TunnelSourceIpv4SubnetMaskVariable
	}).(pulumi.StringPtrOutput)
}

// The version of the Feature
func (o ServiceLanVpnInterfaceIpsecFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceIpsecFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ServiceLanVpnInterfaceIpsecFeatureArrayOutput struct{ *pulumi.OutputState }

func (ServiceLanVpnInterfaceIpsecFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceLanVpnInterfaceIpsecFeature)(nil)).Elem()
}

func (o ServiceLanVpnInterfaceIpsecFeatureArrayOutput) ToServiceLanVpnInterfaceIpsecFeatureArrayOutput() ServiceLanVpnInterfaceIpsecFeatureArrayOutput {
	return o
}

func (o ServiceLanVpnInterfaceIpsecFeatureArrayOutput) ToServiceLanVpnInterfaceIpsecFeatureArrayOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceIpsecFeatureArrayOutput {
	return o
}

func (o ServiceLanVpnInterfaceIpsecFeatureArrayOutput) Index(i pulumi.IntInput) ServiceLanVpnInterfaceIpsecFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceLanVpnInterfaceIpsecFeature {
		return vs[0].([]*ServiceLanVpnInterfaceIpsecFeature)[vs[1].(int)]
	}).(ServiceLanVpnInterfaceIpsecFeatureOutput)
}

type ServiceLanVpnInterfaceIpsecFeatureMapOutput struct{ *pulumi.OutputState }

func (ServiceLanVpnInterfaceIpsecFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceLanVpnInterfaceIpsecFeature)(nil)).Elem()
}

func (o ServiceLanVpnInterfaceIpsecFeatureMapOutput) ToServiceLanVpnInterfaceIpsecFeatureMapOutput() ServiceLanVpnInterfaceIpsecFeatureMapOutput {
	return o
}

func (o ServiceLanVpnInterfaceIpsecFeatureMapOutput) ToServiceLanVpnInterfaceIpsecFeatureMapOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceIpsecFeatureMapOutput {
	return o
}

func (o ServiceLanVpnInterfaceIpsecFeatureMapOutput) MapIndex(k pulumi.StringInput) ServiceLanVpnInterfaceIpsecFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceLanVpnInterfaceIpsecFeature {
		return vs[0].(map[string]*ServiceLanVpnInterfaceIpsecFeature)[vs[1].(string)]
	}).(ServiceLanVpnInterfaceIpsecFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLanVpnInterfaceIpsecFeatureInput)(nil)).Elem(), &ServiceLanVpnInterfaceIpsecFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLanVpnInterfaceIpsecFeatureArrayInput)(nil)).Elem(), ServiceLanVpnInterfaceIpsecFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLanVpnInterfaceIpsecFeatureMapInput)(nil)).Elem(), ServiceLanVpnInterfaceIpsecFeatureMap{})
	pulumi.RegisterOutputType(ServiceLanVpnInterfaceIpsecFeatureOutput{})
	pulumi.RegisterOutputType(ServiceLanVpnInterfaceIpsecFeatureArrayOutput{})
	pulumi.RegisterOutputType(ServiceLanVpnInterfaceIpsecFeatureMapOutput{})
}
