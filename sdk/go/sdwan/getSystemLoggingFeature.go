// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the System Logging Feature.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupSystemLoggingFeature(ctx, &sdwan.LookupSystemLoggingFeatureArgs{
//				Id:               "f6b2c44c-693c-4763-b010-895aa3d236bd",
//				FeatureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSystemLoggingFeature(ctx *pulumi.Context, args *LookupSystemLoggingFeatureArgs, opts ...pulumi.InvokeOption) (*LookupSystemLoggingFeatureResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSystemLoggingFeatureResult
	err := ctx.Invoke("sdwan:index/getSystemLoggingFeature:getSystemLoggingFeature", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSystemLoggingFeature.
type LookupSystemLoggingFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
}

// A collection of values returned by getSystemLoggingFeature.
type LookupSystemLoggingFeatureResult struct {
	// The description of the Feature
	Description string `pulumi:"description"`
	// Enable logging to local disk
	DiskEnable bool `pulumi:"diskEnable"`
	// Variable name
	DiskEnableVariable string `pulumi:"diskEnableVariable"`
	// Set number of syslog files to create before discarding oldest files
	DiskFileRotate int `pulumi:"diskFileRotate"`
	// Variable name
	DiskFileRotateVariable string `pulumi:"diskFileRotateVariable"`
	// Set maximum size of file before it is rotated
	DiskFileSize int `pulumi:"diskFileSize"`
	// Variable name
	DiskFileSizeVariable string `pulumi:"diskFileSizeVariable"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
	// Enable logging to remote server
	Ipv4Servers []GetSystemLoggingFeatureIpv4Server `pulumi:"ipv4Servers"`
	// Enable logging to remote ipv6 server
	Ipv6Servers []GetSystemLoggingFeatureIpv6Server `pulumi:"ipv6Servers"`
	// The name of the Feature
	Name string `pulumi:"name"`
	// Configure a TLS profile
	TlsProfiles []GetSystemLoggingFeatureTlsProfile `pulumi:"tlsProfiles"`
	// The version of the Feature
	Version int `pulumi:"version"`
}

func LookupSystemLoggingFeatureOutput(ctx *pulumi.Context, args LookupSystemLoggingFeatureOutputArgs, opts ...pulumi.InvokeOption) LookupSystemLoggingFeatureResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSystemLoggingFeatureResultOutput, error) {
			args := v.(LookupSystemLoggingFeatureArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sdwan:index/getSystemLoggingFeature:getSystemLoggingFeature", args, LookupSystemLoggingFeatureResultOutput{}, options).(LookupSystemLoggingFeatureResultOutput), nil
		}).(LookupSystemLoggingFeatureResultOutput)
}

// A collection of arguments for invoking getSystemLoggingFeature.
type LookupSystemLoggingFeatureOutputArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput `pulumi:"featureProfileId"`
	// The id of the Feature
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupSystemLoggingFeatureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemLoggingFeatureArgs)(nil)).Elem()
}

// A collection of values returned by getSystemLoggingFeature.
type LookupSystemLoggingFeatureResultOutput struct{ *pulumi.OutputState }

func (LookupSystemLoggingFeatureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemLoggingFeatureResult)(nil)).Elem()
}

func (o LookupSystemLoggingFeatureResultOutput) ToLookupSystemLoggingFeatureResultOutput() LookupSystemLoggingFeatureResultOutput {
	return o
}

func (o LookupSystemLoggingFeatureResultOutput) ToLookupSystemLoggingFeatureResultOutputWithContext(ctx context.Context) LookupSystemLoggingFeatureResultOutput {
	return o
}

// The description of the Feature
func (o LookupSystemLoggingFeatureResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemLoggingFeatureResult) string { return v.Description }).(pulumi.StringOutput)
}

// Enable logging to local disk
func (o LookupSystemLoggingFeatureResultOutput) DiskEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSystemLoggingFeatureResult) bool { return v.DiskEnable }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupSystemLoggingFeatureResultOutput) DiskEnableVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemLoggingFeatureResult) string { return v.DiskEnableVariable }).(pulumi.StringOutput)
}

// Set number of syslog files to create before discarding oldest files
func (o LookupSystemLoggingFeatureResultOutput) DiskFileRotate() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemLoggingFeatureResult) int { return v.DiskFileRotate }).(pulumi.IntOutput)
}

// Variable name
func (o LookupSystemLoggingFeatureResultOutput) DiskFileRotateVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemLoggingFeatureResult) string { return v.DiskFileRotateVariable }).(pulumi.StringOutput)
}

// Set maximum size of file before it is rotated
func (o LookupSystemLoggingFeatureResultOutput) DiskFileSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemLoggingFeatureResult) int { return v.DiskFileSize }).(pulumi.IntOutput)
}

// Variable name
func (o LookupSystemLoggingFeatureResultOutput) DiskFileSizeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemLoggingFeatureResult) string { return v.DiskFileSizeVariable }).(pulumi.StringOutput)
}

// Feature Profile ID
func (o LookupSystemLoggingFeatureResultOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemLoggingFeatureResult) string { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The id of the Feature
func (o LookupSystemLoggingFeatureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemLoggingFeatureResult) string { return v.Id }).(pulumi.StringOutput)
}

// Enable logging to remote server
func (o LookupSystemLoggingFeatureResultOutput) Ipv4Servers() GetSystemLoggingFeatureIpv4ServerArrayOutput {
	return o.ApplyT(func(v LookupSystemLoggingFeatureResult) []GetSystemLoggingFeatureIpv4Server { return v.Ipv4Servers }).(GetSystemLoggingFeatureIpv4ServerArrayOutput)
}

// Enable logging to remote ipv6 server
func (o LookupSystemLoggingFeatureResultOutput) Ipv6Servers() GetSystemLoggingFeatureIpv6ServerArrayOutput {
	return o.ApplyT(func(v LookupSystemLoggingFeatureResult) []GetSystemLoggingFeatureIpv6Server { return v.Ipv6Servers }).(GetSystemLoggingFeatureIpv6ServerArrayOutput)
}

// The name of the Feature
func (o LookupSystemLoggingFeatureResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemLoggingFeatureResult) string { return v.Name }).(pulumi.StringOutput)
}

// Configure a TLS profile
func (o LookupSystemLoggingFeatureResultOutput) TlsProfiles() GetSystemLoggingFeatureTlsProfileArrayOutput {
	return o.ApplyT(func(v LookupSystemLoggingFeatureResult) []GetSystemLoggingFeatureTlsProfile { return v.TlsProfiles }).(GetSystemLoggingFeatureTlsProfileArrayOutput)
}

// The version of the Feature
func (o LookupSystemLoggingFeatureResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemLoggingFeatureResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSystemLoggingFeatureResultOutput{})
}
