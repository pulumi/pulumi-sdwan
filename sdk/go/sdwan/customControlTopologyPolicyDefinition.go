// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Custom Control Topology Policy Definition .
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/customControlTopologyPolicyDefinition:CustomControlTopologyPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type CustomControlTopologyPolicyDefinition struct {
	pulumi.CustomResourceState

	// Default action, either `accept` or `reject` - Choices: `accept`, `reject`
	DefaultAction pulumi.StringPtrOutput `pulumi:"defaultAction"`
	// The description of the policy definition
	Description pulumi.StringOutput `pulumi:"description"`
	// The name of the policy definition
	Name pulumi.StringOutput `pulumi:"name"`
	// List of sequences
	Sequences CustomControlTopologyPolicyDefinitionSequenceArrayOutput `pulumi:"sequences"`
	// Type
	Type pulumi.StringOutput `pulumi:"type"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewCustomControlTopologyPolicyDefinition registers a new resource with the given unique name, arguments, and options.
func NewCustomControlTopologyPolicyDefinition(ctx *pulumi.Context,
	name string, args *CustomControlTopologyPolicyDefinitionArgs, opts ...pulumi.ResourceOption) (*CustomControlTopologyPolicyDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomControlTopologyPolicyDefinition
	err := ctx.RegisterResource("sdwan:index/customControlTopologyPolicyDefinition:CustomControlTopologyPolicyDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomControlTopologyPolicyDefinition gets an existing CustomControlTopologyPolicyDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomControlTopologyPolicyDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomControlTopologyPolicyDefinitionState, opts ...pulumi.ResourceOption) (*CustomControlTopologyPolicyDefinition, error) {
	var resource CustomControlTopologyPolicyDefinition
	err := ctx.ReadResource("sdwan:index/customControlTopologyPolicyDefinition:CustomControlTopologyPolicyDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomControlTopologyPolicyDefinition resources.
type customControlTopologyPolicyDefinitionState struct {
	// Default action, either `accept` or `reject` - Choices: `accept`, `reject`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the policy definition
	Description *string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of sequences
	Sequences []CustomControlTopologyPolicyDefinitionSequence `pulumi:"sequences"`
	// Type
	Type *string `pulumi:"type"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type CustomControlTopologyPolicyDefinitionState struct {
	// Default action, either `accept` or `reject` - Choices: `accept`, `reject`
	DefaultAction pulumi.StringPtrInput
	// The description of the policy definition
	Description pulumi.StringPtrInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of sequences
	Sequences CustomControlTopologyPolicyDefinitionSequenceArrayInput
	// Type
	Type pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (CustomControlTopologyPolicyDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*customControlTopologyPolicyDefinitionState)(nil)).Elem()
}

type customControlTopologyPolicyDefinitionArgs struct {
	// Default action, either `accept` or `reject` - Choices: `accept`, `reject`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the policy definition
	Description string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of sequences
	Sequences []CustomControlTopologyPolicyDefinitionSequence `pulumi:"sequences"`
}

// The set of arguments for constructing a CustomControlTopologyPolicyDefinition resource.
type CustomControlTopologyPolicyDefinitionArgs struct {
	// Default action, either `accept` or `reject` - Choices: `accept`, `reject`
	DefaultAction pulumi.StringPtrInput
	// The description of the policy definition
	Description pulumi.StringInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of sequences
	Sequences CustomControlTopologyPolicyDefinitionSequenceArrayInput
}

func (CustomControlTopologyPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customControlTopologyPolicyDefinitionArgs)(nil)).Elem()
}

type CustomControlTopologyPolicyDefinitionInput interface {
	pulumi.Input

	ToCustomControlTopologyPolicyDefinitionOutput() CustomControlTopologyPolicyDefinitionOutput
	ToCustomControlTopologyPolicyDefinitionOutputWithContext(ctx context.Context) CustomControlTopologyPolicyDefinitionOutput
}

func (*CustomControlTopologyPolicyDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomControlTopologyPolicyDefinition)(nil)).Elem()
}

func (i *CustomControlTopologyPolicyDefinition) ToCustomControlTopologyPolicyDefinitionOutput() CustomControlTopologyPolicyDefinitionOutput {
	return i.ToCustomControlTopologyPolicyDefinitionOutputWithContext(context.Background())
}

func (i *CustomControlTopologyPolicyDefinition) ToCustomControlTopologyPolicyDefinitionOutputWithContext(ctx context.Context) CustomControlTopologyPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomControlTopologyPolicyDefinitionOutput)
}

// CustomControlTopologyPolicyDefinitionArrayInput is an input type that accepts CustomControlTopologyPolicyDefinitionArray and CustomControlTopologyPolicyDefinitionArrayOutput values.
// You can construct a concrete instance of `CustomControlTopologyPolicyDefinitionArrayInput` via:
//
//	CustomControlTopologyPolicyDefinitionArray{ CustomControlTopologyPolicyDefinitionArgs{...} }
type CustomControlTopologyPolicyDefinitionArrayInput interface {
	pulumi.Input

	ToCustomControlTopologyPolicyDefinitionArrayOutput() CustomControlTopologyPolicyDefinitionArrayOutput
	ToCustomControlTopologyPolicyDefinitionArrayOutputWithContext(context.Context) CustomControlTopologyPolicyDefinitionArrayOutput
}

type CustomControlTopologyPolicyDefinitionArray []CustomControlTopologyPolicyDefinitionInput

func (CustomControlTopologyPolicyDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomControlTopologyPolicyDefinition)(nil)).Elem()
}

func (i CustomControlTopologyPolicyDefinitionArray) ToCustomControlTopologyPolicyDefinitionArrayOutput() CustomControlTopologyPolicyDefinitionArrayOutput {
	return i.ToCustomControlTopologyPolicyDefinitionArrayOutputWithContext(context.Background())
}

func (i CustomControlTopologyPolicyDefinitionArray) ToCustomControlTopologyPolicyDefinitionArrayOutputWithContext(ctx context.Context) CustomControlTopologyPolicyDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomControlTopologyPolicyDefinitionArrayOutput)
}

// CustomControlTopologyPolicyDefinitionMapInput is an input type that accepts CustomControlTopologyPolicyDefinitionMap and CustomControlTopologyPolicyDefinitionMapOutput values.
// You can construct a concrete instance of `CustomControlTopologyPolicyDefinitionMapInput` via:
//
//	CustomControlTopologyPolicyDefinitionMap{ "key": CustomControlTopologyPolicyDefinitionArgs{...} }
type CustomControlTopologyPolicyDefinitionMapInput interface {
	pulumi.Input

	ToCustomControlTopologyPolicyDefinitionMapOutput() CustomControlTopologyPolicyDefinitionMapOutput
	ToCustomControlTopologyPolicyDefinitionMapOutputWithContext(context.Context) CustomControlTopologyPolicyDefinitionMapOutput
}

type CustomControlTopologyPolicyDefinitionMap map[string]CustomControlTopologyPolicyDefinitionInput

func (CustomControlTopologyPolicyDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomControlTopologyPolicyDefinition)(nil)).Elem()
}

func (i CustomControlTopologyPolicyDefinitionMap) ToCustomControlTopologyPolicyDefinitionMapOutput() CustomControlTopologyPolicyDefinitionMapOutput {
	return i.ToCustomControlTopologyPolicyDefinitionMapOutputWithContext(context.Background())
}

func (i CustomControlTopologyPolicyDefinitionMap) ToCustomControlTopologyPolicyDefinitionMapOutputWithContext(ctx context.Context) CustomControlTopologyPolicyDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomControlTopologyPolicyDefinitionMapOutput)
}

type CustomControlTopologyPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (CustomControlTopologyPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomControlTopologyPolicyDefinition)(nil)).Elem()
}

func (o CustomControlTopologyPolicyDefinitionOutput) ToCustomControlTopologyPolicyDefinitionOutput() CustomControlTopologyPolicyDefinitionOutput {
	return o
}

func (o CustomControlTopologyPolicyDefinitionOutput) ToCustomControlTopologyPolicyDefinitionOutputWithContext(ctx context.Context) CustomControlTopologyPolicyDefinitionOutput {
	return o
}

// Default action, either `accept` or `reject` - Choices: `accept`, `reject`
func (o CustomControlTopologyPolicyDefinitionOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomControlTopologyPolicyDefinition) pulumi.StringPtrOutput { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// The description of the policy definition
func (o CustomControlTopologyPolicyDefinitionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomControlTopologyPolicyDefinition) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The name of the policy definition
func (o CustomControlTopologyPolicyDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomControlTopologyPolicyDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of sequences
func (o CustomControlTopologyPolicyDefinitionOutput) Sequences() CustomControlTopologyPolicyDefinitionSequenceArrayOutput {
	return o.ApplyT(func(v *CustomControlTopologyPolicyDefinition) CustomControlTopologyPolicyDefinitionSequenceArrayOutput {
		return v.Sequences
	}).(CustomControlTopologyPolicyDefinitionSequenceArrayOutput)
}

// Type
func (o CustomControlTopologyPolicyDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomControlTopologyPolicyDefinition) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The version of the object
func (o CustomControlTopologyPolicyDefinitionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *CustomControlTopologyPolicyDefinition) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type CustomControlTopologyPolicyDefinitionArrayOutput struct{ *pulumi.OutputState }

func (CustomControlTopologyPolicyDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomControlTopologyPolicyDefinition)(nil)).Elem()
}

func (o CustomControlTopologyPolicyDefinitionArrayOutput) ToCustomControlTopologyPolicyDefinitionArrayOutput() CustomControlTopologyPolicyDefinitionArrayOutput {
	return o
}

func (o CustomControlTopologyPolicyDefinitionArrayOutput) ToCustomControlTopologyPolicyDefinitionArrayOutputWithContext(ctx context.Context) CustomControlTopologyPolicyDefinitionArrayOutput {
	return o
}

func (o CustomControlTopologyPolicyDefinitionArrayOutput) Index(i pulumi.IntInput) CustomControlTopologyPolicyDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomControlTopologyPolicyDefinition {
		return vs[0].([]*CustomControlTopologyPolicyDefinition)[vs[1].(int)]
	}).(CustomControlTopologyPolicyDefinitionOutput)
}

type CustomControlTopologyPolicyDefinitionMapOutput struct{ *pulumi.OutputState }

func (CustomControlTopologyPolicyDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomControlTopologyPolicyDefinition)(nil)).Elem()
}

func (o CustomControlTopologyPolicyDefinitionMapOutput) ToCustomControlTopologyPolicyDefinitionMapOutput() CustomControlTopologyPolicyDefinitionMapOutput {
	return o
}

func (o CustomControlTopologyPolicyDefinitionMapOutput) ToCustomControlTopologyPolicyDefinitionMapOutputWithContext(ctx context.Context) CustomControlTopologyPolicyDefinitionMapOutput {
	return o
}

func (o CustomControlTopologyPolicyDefinitionMapOutput) MapIndex(k pulumi.StringInput) CustomControlTopologyPolicyDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomControlTopologyPolicyDefinition {
		return vs[0].(map[string]*CustomControlTopologyPolicyDefinition)[vs[1].(string)]
	}).(CustomControlTopologyPolicyDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomControlTopologyPolicyDefinitionInput)(nil)).Elem(), &CustomControlTopologyPolicyDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomControlTopologyPolicyDefinitionArrayInput)(nil)).Elem(), CustomControlTopologyPolicyDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomControlTopologyPolicyDefinitionMapInput)(nil)).Elem(), CustomControlTopologyPolicyDefinitionMap{})
	pulumi.RegisterOutputType(CustomControlTopologyPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(CustomControlTopologyPolicyDefinitionArrayOutput{})
	pulumi.RegisterOutputType(CustomControlTopologyPolicyDefinitionMapOutput{})
}
