// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Standard Community List Policy Object .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewStandardCommunityListPolicyObject(ctx, "example", &sdwan.StandardCommunityListPolicyObjectArgs{
//				Name: pulumi.String("Example"),
//				Entries: sdwan.StandardCommunityListPolicyObjectEntryArray{
//					&sdwan.StandardCommunityListPolicyObjectEntryArgs{
//						Community: pulumi.String("100:1000"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/standardCommunityListPolicyObject:StandardCommunityListPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type StandardCommunityListPolicyObject struct {
	pulumi.CustomResourceState

	// List of entries
	Entries StandardCommunityListPolicyObjectEntryArrayOutput `pulumi:"entries"`
	// The name of the policy object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewStandardCommunityListPolicyObject registers a new resource with the given unique name, arguments, and options.
func NewStandardCommunityListPolicyObject(ctx *pulumi.Context,
	name string, args *StandardCommunityListPolicyObjectArgs, opts ...pulumi.ResourceOption) (*StandardCommunityListPolicyObject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StandardCommunityListPolicyObject
	err := ctx.RegisterResource("sdwan:index/standardCommunityListPolicyObject:StandardCommunityListPolicyObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStandardCommunityListPolicyObject gets an existing StandardCommunityListPolicyObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStandardCommunityListPolicyObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StandardCommunityListPolicyObjectState, opts ...pulumi.ResourceOption) (*StandardCommunityListPolicyObject, error) {
	var resource StandardCommunityListPolicyObject
	err := ctx.ReadResource("sdwan:index/standardCommunityListPolicyObject:StandardCommunityListPolicyObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StandardCommunityListPolicyObject resources.
type standardCommunityListPolicyObjectState struct {
	// List of entries
	Entries []StandardCommunityListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type StandardCommunityListPolicyObjectState struct {
	// List of entries
	Entries StandardCommunityListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (StandardCommunityListPolicyObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*standardCommunityListPolicyObjectState)(nil)).Elem()
}

type standardCommunityListPolicyObjectArgs struct {
	// List of entries
	Entries []StandardCommunityListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a StandardCommunityListPolicyObject resource.
type StandardCommunityListPolicyObjectArgs struct {
	// List of entries
	Entries StandardCommunityListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
}

func (StandardCommunityListPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*standardCommunityListPolicyObjectArgs)(nil)).Elem()
}

type StandardCommunityListPolicyObjectInput interface {
	pulumi.Input

	ToStandardCommunityListPolicyObjectOutput() StandardCommunityListPolicyObjectOutput
	ToStandardCommunityListPolicyObjectOutputWithContext(ctx context.Context) StandardCommunityListPolicyObjectOutput
}

func (*StandardCommunityListPolicyObject) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardCommunityListPolicyObject)(nil)).Elem()
}

func (i *StandardCommunityListPolicyObject) ToStandardCommunityListPolicyObjectOutput() StandardCommunityListPolicyObjectOutput {
	return i.ToStandardCommunityListPolicyObjectOutputWithContext(context.Background())
}

func (i *StandardCommunityListPolicyObject) ToStandardCommunityListPolicyObjectOutputWithContext(ctx context.Context) StandardCommunityListPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardCommunityListPolicyObjectOutput)
}

// StandardCommunityListPolicyObjectArrayInput is an input type that accepts StandardCommunityListPolicyObjectArray and StandardCommunityListPolicyObjectArrayOutput values.
// You can construct a concrete instance of `StandardCommunityListPolicyObjectArrayInput` via:
//
//	StandardCommunityListPolicyObjectArray{ StandardCommunityListPolicyObjectArgs{...} }
type StandardCommunityListPolicyObjectArrayInput interface {
	pulumi.Input

	ToStandardCommunityListPolicyObjectArrayOutput() StandardCommunityListPolicyObjectArrayOutput
	ToStandardCommunityListPolicyObjectArrayOutputWithContext(context.Context) StandardCommunityListPolicyObjectArrayOutput
}

type StandardCommunityListPolicyObjectArray []StandardCommunityListPolicyObjectInput

func (StandardCommunityListPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StandardCommunityListPolicyObject)(nil)).Elem()
}

func (i StandardCommunityListPolicyObjectArray) ToStandardCommunityListPolicyObjectArrayOutput() StandardCommunityListPolicyObjectArrayOutput {
	return i.ToStandardCommunityListPolicyObjectArrayOutputWithContext(context.Background())
}

func (i StandardCommunityListPolicyObjectArray) ToStandardCommunityListPolicyObjectArrayOutputWithContext(ctx context.Context) StandardCommunityListPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardCommunityListPolicyObjectArrayOutput)
}

// StandardCommunityListPolicyObjectMapInput is an input type that accepts StandardCommunityListPolicyObjectMap and StandardCommunityListPolicyObjectMapOutput values.
// You can construct a concrete instance of `StandardCommunityListPolicyObjectMapInput` via:
//
//	StandardCommunityListPolicyObjectMap{ "key": StandardCommunityListPolicyObjectArgs{...} }
type StandardCommunityListPolicyObjectMapInput interface {
	pulumi.Input

	ToStandardCommunityListPolicyObjectMapOutput() StandardCommunityListPolicyObjectMapOutput
	ToStandardCommunityListPolicyObjectMapOutputWithContext(context.Context) StandardCommunityListPolicyObjectMapOutput
}

type StandardCommunityListPolicyObjectMap map[string]StandardCommunityListPolicyObjectInput

func (StandardCommunityListPolicyObjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StandardCommunityListPolicyObject)(nil)).Elem()
}

func (i StandardCommunityListPolicyObjectMap) ToStandardCommunityListPolicyObjectMapOutput() StandardCommunityListPolicyObjectMapOutput {
	return i.ToStandardCommunityListPolicyObjectMapOutputWithContext(context.Background())
}

func (i StandardCommunityListPolicyObjectMap) ToStandardCommunityListPolicyObjectMapOutputWithContext(ctx context.Context) StandardCommunityListPolicyObjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardCommunityListPolicyObjectMapOutput)
}

type StandardCommunityListPolicyObjectOutput struct{ *pulumi.OutputState }

func (StandardCommunityListPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardCommunityListPolicyObject)(nil)).Elem()
}

func (o StandardCommunityListPolicyObjectOutput) ToStandardCommunityListPolicyObjectOutput() StandardCommunityListPolicyObjectOutput {
	return o
}

func (o StandardCommunityListPolicyObjectOutput) ToStandardCommunityListPolicyObjectOutputWithContext(ctx context.Context) StandardCommunityListPolicyObjectOutput {
	return o
}

// List of entries
func (o StandardCommunityListPolicyObjectOutput) Entries() StandardCommunityListPolicyObjectEntryArrayOutput {
	return o.ApplyT(func(v *StandardCommunityListPolicyObject) StandardCommunityListPolicyObjectEntryArrayOutput {
		return v.Entries
	}).(StandardCommunityListPolicyObjectEntryArrayOutput)
}

// The name of the policy object
func (o StandardCommunityListPolicyObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StandardCommunityListPolicyObject) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the object
func (o StandardCommunityListPolicyObjectOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *StandardCommunityListPolicyObject) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type StandardCommunityListPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (StandardCommunityListPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StandardCommunityListPolicyObject)(nil)).Elem()
}

func (o StandardCommunityListPolicyObjectArrayOutput) ToStandardCommunityListPolicyObjectArrayOutput() StandardCommunityListPolicyObjectArrayOutput {
	return o
}

func (o StandardCommunityListPolicyObjectArrayOutput) ToStandardCommunityListPolicyObjectArrayOutputWithContext(ctx context.Context) StandardCommunityListPolicyObjectArrayOutput {
	return o
}

func (o StandardCommunityListPolicyObjectArrayOutput) Index(i pulumi.IntInput) StandardCommunityListPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StandardCommunityListPolicyObject {
		return vs[0].([]*StandardCommunityListPolicyObject)[vs[1].(int)]
	}).(StandardCommunityListPolicyObjectOutput)
}

type StandardCommunityListPolicyObjectMapOutput struct{ *pulumi.OutputState }

func (StandardCommunityListPolicyObjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StandardCommunityListPolicyObject)(nil)).Elem()
}

func (o StandardCommunityListPolicyObjectMapOutput) ToStandardCommunityListPolicyObjectMapOutput() StandardCommunityListPolicyObjectMapOutput {
	return o
}

func (o StandardCommunityListPolicyObjectMapOutput) ToStandardCommunityListPolicyObjectMapOutputWithContext(ctx context.Context) StandardCommunityListPolicyObjectMapOutput {
	return o
}

func (o StandardCommunityListPolicyObjectMapOutput) MapIndex(k pulumi.StringInput) StandardCommunityListPolicyObjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StandardCommunityListPolicyObject {
		return vs[0].(map[string]*StandardCommunityListPolicyObject)[vs[1].(string)]
	}).(StandardCommunityListPolicyObjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StandardCommunityListPolicyObjectInput)(nil)).Elem(), &StandardCommunityListPolicyObject{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardCommunityListPolicyObjectArrayInput)(nil)).Elem(), StandardCommunityListPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardCommunityListPolicyObjectMapInput)(nil)).Elem(), StandardCommunityListPolicyObjectMap{})
	pulumi.RegisterOutputType(StandardCommunityListPolicyObjectOutput{})
	pulumi.RegisterOutputType(StandardCommunityListPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(StandardCommunityListPolicyObjectMapOutput{})
}
