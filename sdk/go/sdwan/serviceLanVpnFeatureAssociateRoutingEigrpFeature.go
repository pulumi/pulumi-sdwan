// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Service LAN VPN Feature Associate Routing EIGRP Feature .
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewServiceLanVpnFeatureAssociateRoutingEigrpFeature(ctx, "example", &sdwan.ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArgs{
//				FeatureProfileId:             pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				ServiceLanVpnFeatureId:       pulumi.String("140331f6-5418-4755-a059-13c77eb96037"),
//				ServiceRoutingEigrpFeatureId: pulumi.String("140331f6-5418-4755-a059-13c77eb96037"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "service_lan_vpn_feature_associate_routing_eigrp_feature_id,feature_profile_id,service_lan_vpn_feature_id"
//
// ```sh
// $ pulumi import sdwan:index/serviceLanVpnFeatureAssociateRoutingEigrpFeature:ServiceLanVpnFeatureAssociateRoutingEigrpFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037"
// ```
type ServiceLanVpnFeatureAssociateRoutingEigrpFeature struct {
	pulumi.CustomResourceState

	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringOutput `pulumi:"serviceLanVpnFeatureId"`
	// Service Routing EIGRP Feature ID
	ServiceRoutingEigrpFeatureId pulumi.StringOutput `pulumi:"serviceRoutingEigrpFeatureId"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewServiceLanVpnFeatureAssociateRoutingEigrpFeature registers a new resource with the given unique name, arguments, and options.
func NewServiceLanVpnFeatureAssociateRoutingEigrpFeature(ctx *pulumi.Context,
	name string, args *ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArgs, opts ...pulumi.ResourceOption) (*ServiceLanVpnFeatureAssociateRoutingEigrpFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	if args.ServiceLanVpnFeatureId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceLanVpnFeatureId'")
	}
	if args.ServiceRoutingEigrpFeatureId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceRoutingEigrpFeatureId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceLanVpnFeatureAssociateRoutingEigrpFeature
	err := ctx.RegisterResource("sdwan:index/serviceLanVpnFeatureAssociateRoutingEigrpFeature:ServiceLanVpnFeatureAssociateRoutingEigrpFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceLanVpnFeatureAssociateRoutingEigrpFeature gets an existing ServiceLanVpnFeatureAssociateRoutingEigrpFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceLanVpnFeatureAssociateRoutingEigrpFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceLanVpnFeatureAssociateRoutingEigrpFeatureState, opts ...pulumi.ResourceOption) (*ServiceLanVpnFeatureAssociateRoutingEigrpFeature, error) {
	var resource ServiceLanVpnFeatureAssociateRoutingEigrpFeature
	err := ctx.ReadResource("sdwan:index/serviceLanVpnFeatureAssociateRoutingEigrpFeature:ServiceLanVpnFeatureAssociateRoutingEigrpFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceLanVpnFeatureAssociateRoutingEigrpFeature resources.
type serviceLanVpnFeatureAssociateRoutingEigrpFeatureState struct {
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId *string `pulumi:"serviceLanVpnFeatureId"`
	// Service Routing EIGRP Feature ID
	ServiceRoutingEigrpFeatureId *string `pulumi:"serviceRoutingEigrpFeatureId"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type ServiceLanVpnFeatureAssociateRoutingEigrpFeatureState struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringPtrInput
	// Service Routing EIGRP Feature ID
	ServiceRoutingEigrpFeatureId pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (ServiceLanVpnFeatureAssociateRoutingEigrpFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceLanVpnFeatureAssociateRoutingEigrpFeatureState)(nil)).Elem()
}

type serviceLanVpnFeatureAssociateRoutingEigrpFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId string `pulumi:"serviceLanVpnFeatureId"`
	// Service Routing EIGRP Feature ID
	ServiceRoutingEigrpFeatureId string `pulumi:"serviceRoutingEigrpFeatureId"`
}

// The set of arguments for constructing a ServiceLanVpnFeatureAssociateRoutingEigrpFeature resource.
type ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringInput
	// Service Routing EIGRP Feature ID
	ServiceRoutingEigrpFeatureId pulumi.StringInput
}

func (ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceLanVpnFeatureAssociateRoutingEigrpFeatureArgs)(nil)).Elem()
}

type ServiceLanVpnFeatureAssociateRoutingEigrpFeatureInput interface {
	pulumi.Input

	ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput() ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput
	ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutputWithContext(ctx context.Context) ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput
}

func (*ServiceLanVpnFeatureAssociateRoutingEigrpFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLanVpnFeatureAssociateRoutingEigrpFeature)(nil)).Elem()
}

func (i *ServiceLanVpnFeatureAssociateRoutingEigrpFeature) ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput() ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput {
	return i.ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutputWithContext(context.Background())
}

func (i *ServiceLanVpnFeatureAssociateRoutingEigrpFeature) ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutputWithContext(ctx context.Context) ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput)
}

// ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayInput is an input type that accepts ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArray and ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutput values.
// You can construct a concrete instance of `ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayInput` via:
//
//	ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArray{ ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArgs{...} }
type ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayInput interface {
	pulumi.Input

	ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutput() ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutput
	ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutputWithContext(context.Context) ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutput
}

type ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArray []ServiceLanVpnFeatureAssociateRoutingEigrpFeatureInput

func (ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceLanVpnFeatureAssociateRoutingEigrpFeature)(nil)).Elem()
}

func (i ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArray) ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutput() ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutput {
	return i.ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutputWithContext(context.Background())
}

func (i ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArray) ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutputWithContext(ctx context.Context) ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutput)
}

// ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapInput is an input type that accepts ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMap and ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutput values.
// You can construct a concrete instance of `ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapInput` via:
//
//	ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMap{ "key": ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArgs{...} }
type ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapInput interface {
	pulumi.Input

	ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutput() ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutput
	ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutputWithContext(context.Context) ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutput
}

type ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMap map[string]ServiceLanVpnFeatureAssociateRoutingEigrpFeatureInput

func (ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceLanVpnFeatureAssociateRoutingEigrpFeature)(nil)).Elem()
}

func (i ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMap) ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutput() ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutput {
	return i.ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutputWithContext(context.Background())
}

func (i ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMap) ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutputWithContext(ctx context.Context) ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutput)
}

type ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput struct{ *pulumi.OutputState }

func (ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLanVpnFeatureAssociateRoutingEigrpFeature)(nil)).Elem()
}

func (o ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput) ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput() ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput {
	return o
}

func (o ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput) ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutputWithContext(ctx context.Context) ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput {
	return o
}

// Feature Profile ID
func (o ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnFeatureAssociateRoutingEigrpFeature) pulumi.StringOutput {
		return v.FeatureProfileId
	}).(pulumi.StringOutput)
}

// Service LAN VPN Feature ID
func (o ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput) ServiceLanVpnFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnFeatureAssociateRoutingEigrpFeature) pulumi.StringOutput {
		return v.ServiceLanVpnFeatureId
	}).(pulumi.StringOutput)
}

// Service Routing EIGRP Feature ID
func (o ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput) ServiceRoutingEigrpFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnFeatureAssociateRoutingEigrpFeature) pulumi.StringOutput {
		return v.ServiceRoutingEigrpFeatureId
	}).(pulumi.StringOutput)
}

// The version of the object
func (o ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceLanVpnFeatureAssociateRoutingEigrpFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutput struct{ *pulumi.OutputState }

func (ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceLanVpnFeatureAssociateRoutingEigrpFeature)(nil)).Elem()
}

func (o ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutput) ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutput() ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutput {
	return o
}

func (o ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutput) ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutputWithContext(ctx context.Context) ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutput {
	return o
}

func (o ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutput) Index(i pulumi.IntInput) ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceLanVpnFeatureAssociateRoutingEigrpFeature {
		return vs[0].([]*ServiceLanVpnFeatureAssociateRoutingEigrpFeature)[vs[1].(int)]
	}).(ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput)
}

type ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutput struct{ *pulumi.OutputState }

func (ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceLanVpnFeatureAssociateRoutingEigrpFeature)(nil)).Elem()
}

func (o ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutput) ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutput() ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutput {
	return o
}

func (o ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutput) ToServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutputWithContext(ctx context.Context) ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutput {
	return o
}

func (o ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutput) MapIndex(k pulumi.StringInput) ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceLanVpnFeatureAssociateRoutingEigrpFeature {
		return vs[0].(map[string]*ServiceLanVpnFeatureAssociateRoutingEigrpFeature)[vs[1].(string)]
	}).(ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLanVpnFeatureAssociateRoutingEigrpFeatureInput)(nil)).Elem(), &ServiceLanVpnFeatureAssociateRoutingEigrpFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayInput)(nil)).Elem(), ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapInput)(nil)).Elem(), ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMap{})
	pulumi.RegisterOutputType(ServiceLanVpnFeatureAssociateRoutingEigrpFeatureOutput{})
	pulumi.RegisterOutputType(ServiceLanVpnFeatureAssociateRoutingEigrpFeatureArrayOutput{})
	pulumi.RegisterOutputType(ServiceLanVpnFeatureAssociateRoutingEigrpFeatureMapOutput{})
}
