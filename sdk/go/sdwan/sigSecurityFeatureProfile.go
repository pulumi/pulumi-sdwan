// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a SIG Security Feature Profile .
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewSigSecurityFeatureProfile(ctx, "example", &sdwan.SigSecurityFeatureProfileArgs{
//				Name:        pulumi.String("SIG_SECURITY_FP_1"),
//				Description: pulumi.String("My sig security feature profile 1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/sigSecurityFeatureProfile:SigSecurityFeatureProfile example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type SigSecurityFeatureProfile struct {
	pulumi.CustomResourceState

	// Description
	Description pulumi.StringOutput `pulumi:"description"`
	// The name of the sig security feature profile
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewSigSecurityFeatureProfile registers a new resource with the given unique name, arguments, and options.
func NewSigSecurityFeatureProfile(ctx *pulumi.Context,
	name string, args *SigSecurityFeatureProfileArgs, opts ...pulumi.ResourceOption) (*SigSecurityFeatureProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SigSecurityFeatureProfile
	err := ctx.RegisterResource("sdwan:index/sigSecurityFeatureProfile:SigSecurityFeatureProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSigSecurityFeatureProfile gets an existing SigSecurityFeatureProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSigSecurityFeatureProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SigSecurityFeatureProfileState, opts ...pulumi.ResourceOption) (*SigSecurityFeatureProfile, error) {
	var resource SigSecurityFeatureProfile
	err := ctx.ReadResource("sdwan:index/sigSecurityFeatureProfile:SigSecurityFeatureProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SigSecurityFeatureProfile resources.
type sigSecurityFeatureProfileState struct {
	// Description
	Description *string `pulumi:"description"`
	// The name of the sig security feature profile
	Name *string `pulumi:"name"`
}

type SigSecurityFeatureProfileState struct {
	// Description
	Description pulumi.StringPtrInput
	// The name of the sig security feature profile
	Name pulumi.StringPtrInput
}

func (SigSecurityFeatureProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*sigSecurityFeatureProfileState)(nil)).Elem()
}

type sigSecurityFeatureProfileArgs struct {
	// Description
	Description string `pulumi:"description"`
	// The name of the sig security feature profile
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a SigSecurityFeatureProfile resource.
type SigSecurityFeatureProfileArgs struct {
	// Description
	Description pulumi.StringInput
	// The name of the sig security feature profile
	Name pulumi.StringPtrInput
}

func (SigSecurityFeatureProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sigSecurityFeatureProfileArgs)(nil)).Elem()
}

type SigSecurityFeatureProfileInput interface {
	pulumi.Input

	ToSigSecurityFeatureProfileOutput() SigSecurityFeatureProfileOutput
	ToSigSecurityFeatureProfileOutputWithContext(ctx context.Context) SigSecurityFeatureProfileOutput
}

func (*SigSecurityFeatureProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**SigSecurityFeatureProfile)(nil)).Elem()
}

func (i *SigSecurityFeatureProfile) ToSigSecurityFeatureProfileOutput() SigSecurityFeatureProfileOutput {
	return i.ToSigSecurityFeatureProfileOutputWithContext(context.Background())
}

func (i *SigSecurityFeatureProfile) ToSigSecurityFeatureProfileOutputWithContext(ctx context.Context) SigSecurityFeatureProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SigSecurityFeatureProfileOutput)
}

// SigSecurityFeatureProfileArrayInput is an input type that accepts SigSecurityFeatureProfileArray and SigSecurityFeatureProfileArrayOutput values.
// You can construct a concrete instance of `SigSecurityFeatureProfileArrayInput` via:
//
//	SigSecurityFeatureProfileArray{ SigSecurityFeatureProfileArgs{...} }
type SigSecurityFeatureProfileArrayInput interface {
	pulumi.Input

	ToSigSecurityFeatureProfileArrayOutput() SigSecurityFeatureProfileArrayOutput
	ToSigSecurityFeatureProfileArrayOutputWithContext(context.Context) SigSecurityFeatureProfileArrayOutput
}

type SigSecurityFeatureProfileArray []SigSecurityFeatureProfileInput

func (SigSecurityFeatureProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SigSecurityFeatureProfile)(nil)).Elem()
}

func (i SigSecurityFeatureProfileArray) ToSigSecurityFeatureProfileArrayOutput() SigSecurityFeatureProfileArrayOutput {
	return i.ToSigSecurityFeatureProfileArrayOutputWithContext(context.Background())
}

func (i SigSecurityFeatureProfileArray) ToSigSecurityFeatureProfileArrayOutputWithContext(ctx context.Context) SigSecurityFeatureProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SigSecurityFeatureProfileArrayOutput)
}

// SigSecurityFeatureProfileMapInput is an input type that accepts SigSecurityFeatureProfileMap and SigSecurityFeatureProfileMapOutput values.
// You can construct a concrete instance of `SigSecurityFeatureProfileMapInput` via:
//
//	SigSecurityFeatureProfileMap{ "key": SigSecurityFeatureProfileArgs{...} }
type SigSecurityFeatureProfileMapInput interface {
	pulumi.Input

	ToSigSecurityFeatureProfileMapOutput() SigSecurityFeatureProfileMapOutput
	ToSigSecurityFeatureProfileMapOutputWithContext(context.Context) SigSecurityFeatureProfileMapOutput
}

type SigSecurityFeatureProfileMap map[string]SigSecurityFeatureProfileInput

func (SigSecurityFeatureProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SigSecurityFeatureProfile)(nil)).Elem()
}

func (i SigSecurityFeatureProfileMap) ToSigSecurityFeatureProfileMapOutput() SigSecurityFeatureProfileMapOutput {
	return i.ToSigSecurityFeatureProfileMapOutputWithContext(context.Background())
}

func (i SigSecurityFeatureProfileMap) ToSigSecurityFeatureProfileMapOutputWithContext(ctx context.Context) SigSecurityFeatureProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SigSecurityFeatureProfileMapOutput)
}

type SigSecurityFeatureProfileOutput struct{ *pulumi.OutputState }

func (SigSecurityFeatureProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SigSecurityFeatureProfile)(nil)).Elem()
}

func (o SigSecurityFeatureProfileOutput) ToSigSecurityFeatureProfileOutput() SigSecurityFeatureProfileOutput {
	return o
}

func (o SigSecurityFeatureProfileOutput) ToSigSecurityFeatureProfileOutputWithContext(ctx context.Context) SigSecurityFeatureProfileOutput {
	return o
}

// Description
func (o SigSecurityFeatureProfileOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SigSecurityFeatureProfile) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The name of the sig security feature profile
func (o SigSecurityFeatureProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SigSecurityFeatureProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type SigSecurityFeatureProfileArrayOutput struct{ *pulumi.OutputState }

func (SigSecurityFeatureProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SigSecurityFeatureProfile)(nil)).Elem()
}

func (o SigSecurityFeatureProfileArrayOutput) ToSigSecurityFeatureProfileArrayOutput() SigSecurityFeatureProfileArrayOutput {
	return o
}

func (o SigSecurityFeatureProfileArrayOutput) ToSigSecurityFeatureProfileArrayOutputWithContext(ctx context.Context) SigSecurityFeatureProfileArrayOutput {
	return o
}

func (o SigSecurityFeatureProfileArrayOutput) Index(i pulumi.IntInput) SigSecurityFeatureProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SigSecurityFeatureProfile {
		return vs[0].([]*SigSecurityFeatureProfile)[vs[1].(int)]
	}).(SigSecurityFeatureProfileOutput)
}

type SigSecurityFeatureProfileMapOutput struct{ *pulumi.OutputState }

func (SigSecurityFeatureProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SigSecurityFeatureProfile)(nil)).Elem()
}

func (o SigSecurityFeatureProfileMapOutput) ToSigSecurityFeatureProfileMapOutput() SigSecurityFeatureProfileMapOutput {
	return o
}

func (o SigSecurityFeatureProfileMapOutput) ToSigSecurityFeatureProfileMapOutputWithContext(ctx context.Context) SigSecurityFeatureProfileMapOutput {
	return o
}

func (o SigSecurityFeatureProfileMapOutput) MapIndex(k pulumi.StringInput) SigSecurityFeatureProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SigSecurityFeatureProfile {
		return vs[0].(map[string]*SigSecurityFeatureProfile)[vs[1].(string)]
	}).(SigSecurityFeatureProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SigSecurityFeatureProfileInput)(nil)).Elem(), &SigSecurityFeatureProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*SigSecurityFeatureProfileArrayInput)(nil)).Elem(), SigSecurityFeatureProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SigSecurityFeatureProfileMapInput)(nil)).Elem(), SigSecurityFeatureProfileMap{})
	pulumi.RegisterOutputType(SigSecurityFeatureProfileOutput{})
	pulumi.RegisterOutputType(SigSecurityFeatureProfileArrayOutput{})
	pulumi.RegisterOutputType(SigSecurityFeatureProfileMapOutput{})
}
