// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a VPN Interface SVI feature template.
//   - Minimum SD-WAN Manager version: `15.0.0`
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/vpnInterfaceSviFeatureTemplate:VpnInterfaceSviFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type VpnInterfaceSviFeatureTemplate struct {
	pulumi.CustomResourceState

	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds
	//   - Range: `0`-`2678400`
	//   - Default value: `1200`
	ArpTimeout pulumi.IntPtrOutput `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable pulumi.StringPtrOutput `pulumi:"arpTimeoutVariable"`
	// The description of the feature template
	Description pulumi.StringOutput `pulumi:"description"`
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayOutput `pulumi:"deviceTypes"`
	// Interface name: VLAN 1 - VLAN 4094 when present
	IfName pulumi.StringPtrOutput `pulumi:"ifName"`
	// Variable name
	IfNameVariable pulumi.StringPtrOutput `pulumi:"ifNameVariable"`
	// Interface description
	InterfaceDescription pulumi.StringPtrOutput `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrOutput `pulumi:"interfaceDescriptionVariable"`
	// IP Directed-Broadcast
	//   - Default value: `false`
	IpDirectedBroadcast pulumi.BoolPtrOutput `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable pulumi.StringPtrOutput `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU <576..Interface MTU>, in bytes
	//   - Range: `576`-`9216`
	//   - Default value: `1500`
	IpMtu pulumi.IntPtrOutput `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable pulumi.StringPtrOutput `pulumi:"ipMtuVariable"`
	// Apply ACL
	Ipv4AccessLists VpnInterfaceSviFeatureTemplateIpv4AccessListArrayOutput `pulumi:"ipv4AccessLists"`
	// Assign IPv4 address
	Ipv4Address pulumi.StringPtrOutput `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrOutput `pulumi:"ipv4AddressVariable"`
	// Variable name
	Ipv4DhcpHelperVariable pulumi.StringPtrOutput `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP helper addresses
	Ipv4DhcpHelpers pulumi.StringArrayOutput `pulumi:"ipv4DhcpHelpers"`
	// Assign secondary IP addresses
	Ipv4SecondaryAddresses VpnInterfaceSviFeatureTemplateIpv4SecondaryAddressArrayOutput `pulumi:"ipv4SecondaryAddresses"`
	// Enable VRRP
	Ipv4Vrrps VpnInterfaceSviFeatureTemplateIpv4VrrpArrayOutput `pulumi:"ipv4Vrrps"`
	// Apply ACL
	Ipv6AccessLists VpnInterfaceSviFeatureTemplateIpv6AccessListArrayOutput `pulumi:"ipv6AccessLists"`
	// Assign IPv6 address
	Ipv6Address pulumi.StringPtrOutput `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrOutput `pulumi:"ipv6AddressVariable"`
	// Enable DHCPv6
	//   - Default value: `false`
	Ipv6DhcpClient pulumi.BoolPtrOutput `pulumi:"ipv6DhcpClient"`
	// Variable name
	Ipv6DhcpClientVariable pulumi.StringPtrOutput `pulumi:"ipv6DhcpClientVariable"`
	// Set administrative distance for DHCP default route
	//   - Range: `1`-`65536`
	//   - Default value: `1`
	Ipv6DhcpDistance pulumi.IntPtrOutput `pulumi:"ipv6DhcpDistance"`
	// Variable name
	Ipv6DhcpDistanceVariable pulumi.StringPtrOutput `pulumi:"ipv6DhcpDistanceVariable"`
	// DHCPv6 Helper
	Ipv6DhcpHelpers VpnInterfaceSviFeatureTemplateIpv6DhcpHelperArrayOutput `pulumi:"ipv6DhcpHelpers"`
	// Enable DHCPv6 rapid commit
	//   - Default value: `false`
	Ipv6DhcpRapidCommit pulumi.BoolPtrOutput `pulumi:"ipv6DhcpRapidCommit"`
	// Variable name
	Ipv6DhcpRapidCommitVariable pulumi.StringPtrOutput `pulumi:"ipv6DhcpRapidCommitVariable"`
	// Assign secondary IPv6 addresses
	Ipv6SecondaryAddresses VpnInterfaceSviFeatureTemplateIpv6SecondaryAddressArrayOutput `pulumi:"ipv6SecondaryAddresses"`
	// Enable VRRP
	Ipv6Vrrps VpnInterfaceSviFeatureTemplateIpv6VrrpArrayOutput `pulumi:"ipv6Vrrps"`
	// Interface MTU <1500..9216> in bytes
	//   - Range: `1500`-`9216`
	//   - Default value: `1500`
	Mtu pulumi.IntPtrOutput `pulumi:"mtu"`
	// Variable name
	MtuVariable pulumi.StringPtrOutput `pulumi:"mtuVariable"`
	// The name of the feature template
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable policer
	Policers VpnInterfaceSviFeatureTemplatePolicerArrayOutput `pulumi:"policers"`
	// Administrative state
	//   - Default value: `true`
	Shutdown pulumi.BoolPtrOutput `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable pulumi.StringPtrOutput `pulumi:"shutdownVariable"`
	// Configure static ARP entries
	StaticArpEntries VpnInterfaceSviFeatureTemplateStaticArpEntryArrayOutput `pulumi:"staticArpEntries"`
	// TCP MSS on SYN packets, in bytes
	//   - Range: `552`-`1960`
	TcpMssAdjust pulumi.IntPtrOutput `pulumi:"tcpMssAdjust"`
	// Variable name
	TcpMssAdjustVariable pulumi.StringPtrOutput `pulumi:"tcpMssAdjustVariable"`
	// The template type
	TemplateType pulumi.StringOutput `pulumi:"templateType"`
	// The version of the feature template
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewVpnInterfaceSviFeatureTemplate registers a new resource with the given unique name, arguments, and options.
func NewVpnInterfaceSviFeatureTemplate(ctx *pulumi.Context,
	name string, args *VpnInterfaceSviFeatureTemplateArgs, opts ...pulumi.ResourceOption) (*VpnInterfaceSviFeatureTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.DeviceTypes == nil {
		return nil, errors.New("invalid value for required argument 'DeviceTypes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpnInterfaceSviFeatureTemplate
	err := ctx.RegisterResource("sdwan:index/vpnInterfaceSviFeatureTemplate:VpnInterfaceSviFeatureTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnInterfaceSviFeatureTemplate gets an existing VpnInterfaceSviFeatureTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnInterfaceSviFeatureTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnInterfaceSviFeatureTemplateState, opts ...pulumi.ResourceOption) (*VpnInterfaceSviFeatureTemplate, error) {
	var resource VpnInterfaceSviFeatureTemplate
	err := ctx.ReadResource("sdwan:index/vpnInterfaceSviFeatureTemplate:VpnInterfaceSviFeatureTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnInterfaceSviFeatureTemplate resources.
type vpnInterfaceSviFeatureTemplateState struct {
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds
	//   - Range: `0`-`2678400`
	//   - Default value: `1200`
	ArpTimeout *int `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable *string `pulumi:"arpTimeoutVariable"`
	// The description of the feature template
	Description *string `pulumi:"description"`
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Interface name: VLAN 1 - VLAN 4094 when present
	IfName *string `pulumi:"ifName"`
	// Variable name
	IfNameVariable *string `pulumi:"ifNameVariable"`
	// Interface description
	InterfaceDescription *string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable *string `pulumi:"interfaceDescriptionVariable"`
	// IP Directed-Broadcast
	//   - Default value: `false`
	IpDirectedBroadcast *bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable *string `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU <576..Interface MTU>, in bytes
	//   - Range: `576`-`9216`
	//   - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	// Apply ACL
	Ipv4AccessLists []VpnInterfaceSviFeatureTemplateIpv4AccessList `pulumi:"ipv4AccessLists"`
	// Assign IPv4 address
	Ipv4Address *string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable *string `pulumi:"ipv4AddressVariable"`
	// Variable name
	Ipv4DhcpHelperVariable *string `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP helper addresses
	Ipv4DhcpHelpers []string `pulumi:"ipv4DhcpHelpers"`
	// Assign secondary IP addresses
	Ipv4SecondaryAddresses []VpnInterfaceSviFeatureTemplateIpv4SecondaryAddress `pulumi:"ipv4SecondaryAddresses"`
	// Enable VRRP
	Ipv4Vrrps []VpnInterfaceSviFeatureTemplateIpv4Vrrp `pulumi:"ipv4Vrrps"`
	// Apply ACL
	Ipv6AccessLists []VpnInterfaceSviFeatureTemplateIpv6AccessList `pulumi:"ipv6AccessLists"`
	// Assign IPv6 address
	Ipv6Address *string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable *string `pulumi:"ipv6AddressVariable"`
	// Enable DHCPv6
	//   - Default value: `false`
	Ipv6DhcpClient *bool `pulumi:"ipv6DhcpClient"`
	// Variable name
	Ipv6DhcpClientVariable *string `pulumi:"ipv6DhcpClientVariable"`
	// Set administrative distance for DHCP default route
	//   - Range: `1`-`65536`
	//   - Default value: `1`
	Ipv6DhcpDistance *int `pulumi:"ipv6DhcpDistance"`
	// Variable name
	Ipv6DhcpDistanceVariable *string `pulumi:"ipv6DhcpDistanceVariable"`
	// DHCPv6 Helper
	Ipv6DhcpHelpers []VpnInterfaceSviFeatureTemplateIpv6DhcpHelper `pulumi:"ipv6DhcpHelpers"`
	// Enable DHCPv6 rapid commit
	//   - Default value: `false`
	Ipv6DhcpRapidCommit *bool `pulumi:"ipv6DhcpRapidCommit"`
	// Variable name
	Ipv6DhcpRapidCommitVariable *string `pulumi:"ipv6DhcpRapidCommitVariable"`
	// Assign secondary IPv6 addresses
	Ipv6SecondaryAddresses []VpnInterfaceSviFeatureTemplateIpv6SecondaryAddress `pulumi:"ipv6SecondaryAddresses"`
	// Enable VRRP
	Ipv6Vrrps []VpnInterfaceSviFeatureTemplateIpv6Vrrp `pulumi:"ipv6Vrrps"`
	// Interface MTU <1500..9216> in bytes
	//   - Range: `1500`-`9216`
	//   - Default value: `1500`
	Mtu *int `pulumi:"mtu"`
	// Variable name
	MtuVariable *string `pulumi:"mtuVariable"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Enable policer
	Policers []VpnInterfaceSviFeatureTemplatePolicer `pulumi:"policers"`
	// Administrative state
	//   - Default value: `true`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// Configure static ARP entries
	StaticArpEntries []VpnInterfaceSviFeatureTemplateStaticArpEntry `pulumi:"staticArpEntries"`
	// TCP MSS on SYN packets, in bytes
	//   - Range: `552`-`1960`
	TcpMssAdjust *int `pulumi:"tcpMssAdjust"`
	// Variable name
	TcpMssAdjustVariable *string `pulumi:"tcpMssAdjustVariable"`
	// The template type
	TemplateType *string `pulumi:"templateType"`
	// The version of the feature template
	Version *int `pulumi:"version"`
}

type VpnInterfaceSviFeatureTemplateState struct {
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds
	//   - Range: `0`-`2678400`
	//   - Default value: `1200`
	ArpTimeout pulumi.IntPtrInput
	// Variable name
	ArpTimeoutVariable pulumi.StringPtrInput
	// The description of the feature template
	Description pulumi.StringPtrInput
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Interface name: VLAN 1 - VLAN 4094 when present
	IfName pulumi.StringPtrInput
	// Variable name
	IfNameVariable pulumi.StringPtrInput
	// Interface description
	InterfaceDescription pulumi.StringPtrInput
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrInput
	// IP Directed-Broadcast
	//   - Default value: `false`
	IpDirectedBroadcast pulumi.BoolPtrInput
	// Variable name
	IpDirectedBroadcastVariable pulumi.StringPtrInput
	// IP MTU <576..Interface MTU>, in bytes
	//   - Range: `576`-`9216`
	//   - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	// Apply ACL
	Ipv4AccessLists VpnInterfaceSviFeatureTemplateIpv4AccessListArrayInput
	// Assign IPv4 address
	Ipv4Address pulumi.StringPtrInput
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrInput
	// Variable name
	Ipv4DhcpHelperVariable pulumi.StringPtrInput
	// List of DHCP helper addresses
	Ipv4DhcpHelpers pulumi.StringArrayInput
	// Assign secondary IP addresses
	Ipv4SecondaryAddresses VpnInterfaceSviFeatureTemplateIpv4SecondaryAddressArrayInput
	// Enable VRRP
	Ipv4Vrrps VpnInterfaceSviFeatureTemplateIpv4VrrpArrayInput
	// Apply ACL
	Ipv6AccessLists VpnInterfaceSviFeatureTemplateIpv6AccessListArrayInput
	// Assign IPv6 address
	Ipv6Address pulumi.StringPtrInput
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrInput
	// Enable DHCPv6
	//   - Default value: `false`
	Ipv6DhcpClient pulumi.BoolPtrInput
	// Variable name
	Ipv6DhcpClientVariable pulumi.StringPtrInput
	// Set administrative distance for DHCP default route
	//   - Range: `1`-`65536`
	//   - Default value: `1`
	Ipv6DhcpDistance pulumi.IntPtrInput
	// Variable name
	Ipv6DhcpDistanceVariable pulumi.StringPtrInput
	// DHCPv6 Helper
	Ipv6DhcpHelpers VpnInterfaceSviFeatureTemplateIpv6DhcpHelperArrayInput
	// Enable DHCPv6 rapid commit
	//   - Default value: `false`
	Ipv6DhcpRapidCommit pulumi.BoolPtrInput
	// Variable name
	Ipv6DhcpRapidCommitVariable pulumi.StringPtrInput
	// Assign secondary IPv6 addresses
	Ipv6SecondaryAddresses VpnInterfaceSviFeatureTemplateIpv6SecondaryAddressArrayInput
	// Enable VRRP
	Ipv6Vrrps VpnInterfaceSviFeatureTemplateIpv6VrrpArrayInput
	// Interface MTU <1500..9216> in bytes
	//   - Range: `1500`-`9216`
	//   - Default value: `1500`
	Mtu pulumi.IntPtrInput
	// Variable name
	MtuVariable pulumi.StringPtrInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Enable policer
	Policers VpnInterfaceSviFeatureTemplatePolicerArrayInput
	// Administrative state
	//   - Default value: `true`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// Configure static ARP entries
	StaticArpEntries VpnInterfaceSviFeatureTemplateStaticArpEntryArrayInput
	// TCP MSS on SYN packets, in bytes
	//   - Range: `552`-`1960`
	TcpMssAdjust pulumi.IntPtrInput
	// Variable name
	TcpMssAdjustVariable pulumi.StringPtrInput
	// The template type
	TemplateType pulumi.StringPtrInput
	// The version of the feature template
	Version pulumi.IntPtrInput
}

func (VpnInterfaceSviFeatureTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnInterfaceSviFeatureTemplateState)(nil)).Elem()
}

type vpnInterfaceSviFeatureTemplateArgs struct {
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds
	//   - Range: `0`-`2678400`
	//   - Default value: `1200`
	ArpTimeout *int `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable *string `pulumi:"arpTimeoutVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Interface name: VLAN 1 - VLAN 4094 when present
	IfName *string `pulumi:"ifName"`
	// Variable name
	IfNameVariable *string `pulumi:"ifNameVariable"`
	// Interface description
	InterfaceDescription *string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable *string `pulumi:"interfaceDescriptionVariable"`
	// IP Directed-Broadcast
	//   - Default value: `false`
	IpDirectedBroadcast *bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable *string `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU <576..Interface MTU>, in bytes
	//   - Range: `576`-`9216`
	//   - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	// Apply ACL
	Ipv4AccessLists []VpnInterfaceSviFeatureTemplateIpv4AccessList `pulumi:"ipv4AccessLists"`
	// Assign IPv4 address
	Ipv4Address *string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable *string `pulumi:"ipv4AddressVariable"`
	// Variable name
	Ipv4DhcpHelperVariable *string `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP helper addresses
	Ipv4DhcpHelpers []string `pulumi:"ipv4DhcpHelpers"`
	// Assign secondary IP addresses
	Ipv4SecondaryAddresses []VpnInterfaceSviFeatureTemplateIpv4SecondaryAddress `pulumi:"ipv4SecondaryAddresses"`
	// Enable VRRP
	Ipv4Vrrps []VpnInterfaceSviFeatureTemplateIpv4Vrrp `pulumi:"ipv4Vrrps"`
	// Apply ACL
	Ipv6AccessLists []VpnInterfaceSviFeatureTemplateIpv6AccessList `pulumi:"ipv6AccessLists"`
	// Assign IPv6 address
	Ipv6Address *string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable *string `pulumi:"ipv6AddressVariable"`
	// Enable DHCPv6
	//   - Default value: `false`
	Ipv6DhcpClient *bool `pulumi:"ipv6DhcpClient"`
	// Variable name
	Ipv6DhcpClientVariable *string `pulumi:"ipv6DhcpClientVariable"`
	// Set administrative distance for DHCP default route
	//   - Range: `1`-`65536`
	//   - Default value: `1`
	Ipv6DhcpDistance *int `pulumi:"ipv6DhcpDistance"`
	// Variable name
	Ipv6DhcpDistanceVariable *string `pulumi:"ipv6DhcpDistanceVariable"`
	// DHCPv6 Helper
	Ipv6DhcpHelpers []VpnInterfaceSviFeatureTemplateIpv6DhcpHelper `pulumi:"ipv6DhcpHelpers"`
	// Enable DHCPv6 rapid commit
	//   - Default value: `false`
	Ipv6DhcpRapidCommit *bool `pulumi:"ipv6DhcpRapidCommit"`
	// Variable name
	Ipv6DhcpRapidCommitVariable *string `pulumi:"ipv6DhcpRapidCommitVariable"`
	// Assign secondary IPv6 addresses
	Ipv6SecondaryAddresses []VpnInterfaceSviFeatureTemplateIpv6SecondaryAddress `pulumi:"ipv6SecondaryAddresses"`
	// Enable VRRP
	Ipv6Vrrps []VpnInterfaceSviFeatureTemplateIpv6Vrrp `pulumi:"ipv6Vrrps"`
	// Interface MTU <1500..9216> in bytes
	//   - Range: `1500`-`9216`
	//   - Default value: `1500`
	Mtu *int `pulumi:"mtu"`
	// Variable name
	MtuVariable *string `pulumi:"mtuVariable"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Enable policer
	Policers []VpnInterfaceSviFeatureTemplatePolicer `pulumi:"policers"`
	// Administrative state
	//   - Default value: `true`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// Configure static ARP entries
	StaticArpEntries []VpnInterfaceSviFeatureTemplateStaticArpEntry `pulumi:"staticArpEntries"`
	// TCP MSS on SYN packets, in bytes
	//   - Range: `552`-`1960`
	TcpMssAdjust *int `pulumi:"tcpMssAdjust"`
	// Variable name
	TcpMssAdjustVariable *string `pulumi:"tcpMssAdjustVariable"`
}

// The set of arguments for constructing a VpnInterfaceSviFeatureTemplate resource.
type VpnInterfaceSviFeatureTemplateArgs struct {
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds
	//   - Range: `0`-`2678400`
	//   - Default value: `1200`
	ArpTimeout pulumi.IntPtrInput
	// Variable name
	ArpTimeoutVariable pulumi.StringPtrInput
	// The description of the feature template
	Description pulumi.StringInput
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Interface name: VLAN 1 - VLAN 4094 when present
	IfName pulumi.StringPtrInput
	// Variable name
	IfNameVariable pulumi.StringPtrInput
	// Interface description
	InterfaceDescription pulumi.StringPtrInput
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrInput
	// IP Directed-Broadcast
	//   - Default value: `false`
	IpDirectedBroadcast pulumi.BoolPtrInput
	// Variable name
	IpDirectedBroadcastVariable pulumi.StringPtrInput
	// IP MTU <576..Interface MTU>, in bytes
	//   - Range: `576`-`9216`
	//   - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	// Apply ACL
	Ipv4AccessLists VpnInterfaceSviFeatureTemplateIpv4AccessListArrayInput
	// Assign IPv4 address
	Ipv4Address pulumi.StringPtrInput
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrInput
	// Variable name
	Ipv4DhcpHelperVariable pulumi.StringPtrInput
	// List of DHCP helper addresses
	Ipv4DhcpHelpers pulumi.StringArrayInput
	// Assign secondary IP addresses
	Ipv4SecondaryAddresses VpnInterfaceSviFeatureTemplateIpv4SecondaryAddressArrayInput
	// Enable VRRP
	Ipv4Vrrps VpnInterfaceSviFeatureTemplateIpv4VrrpArrayInput
	// Apply ACL
	Ipv6AccessLists VpnInterfaceSviFeatureTemplateIpv6AccessListArrayInput
	// Assign IPv6 address
	Ipv6Address pulumi.StringPtrInput
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrInput
	// Enable DHCPv6
	//   - Default value: `false`
	Ipv6DhcpClient pulumi.BoolPtrInput
	// Variable name
	Ipv6DhcpClientVariable pulumi.StringPtrInput
	// Set administrative distance for DHCP default route
	//   - Range: `1`-`65536`
	//   - Default value: `1`
	Ipv6DhcpDistance pulumi.IntPtrInput
	// Variable name
	Ipv6DhcpDistanceVariable pulumi.StringPtrInput
	// DHCPv6 Helper
	Ipv6DhcpHelpers VpnInterfaceSviFeatureTemplateIpv6DhcpHelperArrayInput
	// Enable DHCPv6 rapid commit
	//   - Default value: `false`
	Ipv6DhcpRapidCommit pulumi.BoolPtrInput
	// Variable name
	Ipv6DhcpRapidCommitVariable pulumi.StringPtrInput
	// Assign secondary IPv6 addresses
	Ipv6SecondaryAddresses VpnInterfaceSviFeatureTemplateIpv6SecondaryAddressArrayInput
	// Enable VRRP
	Ipv6Vrrps VpnInterfaceSviFeatureTemplateIpv6VrrpArrayInput
	// Interface MTU <1500..9216> in bytes
	//   - Range: `1500`-`9216`
	//   - Default value: `1500`
	Mtu pulumi.IntPtrInput
	// Variable name
	MtuVariable pulumi.StringPtrInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Enable policer
	Policers VpnInterfaceSviFeatureTemplatePolicerArrayInput
	// Administrative state
	//   - Default value: `true`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// Configure static ARP entries
	StaticArpEntries VpnInterfaceSviFeatureTemplateStaticArpEntryArrayInput
	// TCP MSS on SYN packets, in bytes
	//   - Range: `552`-`1960`
	TcpMssAdjust pulumi.IntPtrInput
	// Variable name
	TcpMssAdjustVariable pulumi.StringPtrInput
}

func (VpnInterfaceSviFeatureTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnInterfaceSviFeatureTemplateArgs)(nil)).Elem()
}

type VpnInterfaceSviFeatureTemplateInput interface {
	pulumi.Input

	ToVpnInterfaceSviFeatureTemplateOutput() VpnInterfaceSviFeatureTemplateOutput
	ToVpnInterfaceSviFeatureTemplateOutputWithContext(ctx context.Context) VpnInterfaceSviFeatureTemplateOutput
}

func (*VpnInterfaceSviFeatureTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnInterfaceSviFeatureTemplate)(nil)).Elem()
}

func (i *VpnInterfaceSviFeatureTemplate) ToVpnInterfaceSviFeatureTemplateOutput() VpnInterfaceSviFeatureTemplateOutput {
	return i.ToVpnInterfaceSviFeatureTemplateOutputWithContext(context.Background())
}

func (i *VpnInterfaceSviFeatureTemplate) ToVpnInterfaceSviFeatureTemplateOutputWithContext(ctx context.Context) VpnInterfaceSviFeatureTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnInterfaceSviFeatureTemplateOutput)
}

// VpnInterfaceSviFeatureTemplateArrayInput is an input type that accepts VpnInterfaceSviFeatureTemplateArray and VpnInterfaceSviFeatureTemplateArrayOutput values.
// You can construct a concrete instance of `VpnInterfaceSviFeatureTemplateArrayInput` via:
//
//	VpnInterfaceSviFeatureTemplateArray{ VpnInterfaceSviFeatureTemplateArgs{...} }
type VpnInterfaceSviFeatureTemplateArrayInput interface {
	pulumi.Input

	ToVpnInterfaceSviFeatureTemplateArrayOutput() VpnInterfaceSviFeatureTemplateArrayOutput
	ToVpnInterfaceSviFeatureTemplateArrayOutputWithContext(context.Context) VpnInterfaceSviFeatureTemplateArrayOutput
}

type VpnInterfaceSviFeatureTemplateArray []VpnInterfaceSviFeatureTemplateInput

func (VpnInterfaceSviFeatureTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnInterfaceSviFeatureTemplate)(nil)).Elem()
}

func (i VpnInterfaceSviFeatureTemplateArray) ToVpnInterfaceSviFeatureTemplateArrayOutput() VpnInterfaceSviFeatureTemplateArrayOutput {
	return i.ToVpnInterfaceSviFeatureTemplateArrayOutputWithContext(context.Background())
}

func (i VpnInterfaceSviFeatureTemplateArray) ToVpnInterfaceSviFeatureTemplateArrayOutputWithContext(ctx context.Context) VpnInterfaceSviFeatureTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnInterfaceSviFeatureTemplateArrayOutput)
}

// VpnInterfaceSviFeatureTemplateMapInput is an input type that accepts VpnInterfaceSviFeatureTemplateMap and VpnInterfaceSviFeatureTemplateMapOutput values.
// You can construct a concrete instance of `VpnInterfaceSviFeatureTemplateMapInput` via:
//
//	VpnInterfaceSviFeatureTemplateMap{ "key": VpnInterfaceSviFeatureTemplateArgs{...} }
type VpnInterfaceSviFeatureTemplateMapInput interface {
	pulumi.Input

	ToVpnInterfaceSviFeatureTemplateMapOutput() VpnInterfaceSviFeatureTemplateMapOutput
	ToVpnInterfaceSviFeatureTemplateMapOutputWithContext(context.Context) VpnInterfaceSviFeatureTemplateMapOutput
}

type VpnInterfaceSviFeatureTemplateMap map[string]VpnInterfaceSviFeatureTemplateInput

func (VpnInterfaceSviFeatureTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnInterfaceSviFeatureTemplate)(nil)).Elem()
}

func (i VpnInterfaceSviFeatureTemplateMap) ToVpnInterfaceSviFeatureTemplateMapOutput() VpnInterfaceSviFeatureTemplateMapOutput {
	return i.ToVpnInterfaceSviFeatureTemplateMapOutputWithContext(context.Background())
}

func (i VpnInterfaceSviFeatureTemplateMap) ToVpnInterfaceSviFeatureTemplateMapOutputWithContext(ctx context.Context) VpnInterfaceSviFeatureTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnInterfaceSviFeatureTemplateMapOutput)
}

type VpnInterfaceSviFeatureTemplateOutput struct{ *pulumi.OutputState }

func (VpnInterfaceSviFeatureTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnInterfaceSviFeatureTemplate)(nil)).Elem()
}

func (o VpnInterfaceSviFeatureTemplateOutput) ToVpnInterfaceSviFeatureTemplateOutput() VpnInterfaceSviFeatureTemplateOutput {
	return o
}

func (o VpnInterfaceSviFeatureTemplateOutput) ToVpnInterfaceSviFeatureTemplateOutputWithContext(ctx context.Context) VpnInterfaceSviFeatureTemplateOutput {
	return o
}

// Timeout value for dynamically learned ARP entries, <0..2678400> seconds
//   - Range: `0`-`2678400`
//   - Default value: `1200`
func (o VpnInterfaceSviFeatureTemplateOutput) ArpTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.IntPtrOutput { return v.ArpTimeout }).(pulumi.IntPtrOutput)
}

// Variable name
func (o VpnInterfaceSviFeatureTemplateOutput) ArpTimeoutVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringPtrOutput { return v.ArpTimeoutVariable }).(pulumi.StringPtrOutput)
}

// The description of the feature template
func (o VpnInterfaceSviFeatureTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
func (o VpnInterfaceSviFeatureTemplateOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringArrayOutput { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Interface name: VLAN 1 - VLAN 4094 when present
func (o VpnInterfaceSviFeatureTemplateOutput) IfName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringPtrOutput { return v.IfName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceSviFeatureTemplateOutput) IfNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringPtrOutput { return v.IfNameVariable }).(pulumi.StringPtrOutput)
}

// Interface description
func (o VpnInterfaceSviFeatureTemplateOutput) InterfaceDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringPtrOutput { return v.InterfaceDescription }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceSviFeatureTemplateOutput) InterfaceDescriptionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringPtrOutput { return v.InterfaceDescriptionVariable }).(pulumi.StringPtrOutput)
}

// IP Directed-Broadcast
//   - Default value: `false`
func (o VpnInterfaceSviFeatureTemplateOutput) IpDirectedBroadcast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.BoolPtrOutput { return v.IpDirectedBroadcast }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceSviFeatureTemplateOutput) IpDirectedBroadcastVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringPtrOutput { return v.IpDirectedBroadcastVariable }).(pulumi.StringPtrOutput)
}

// IP MTU <576..Interface MTU>, in bytes
//   - Range: `576`-`9216`
//   - Default value: `1500`
func (o VpnInterfaceSviFeatureTemplateOutput) IpMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.IntPtrOutput { return v.IpMtu }).(pulumi.IntPtrOutput)
}

// Variable name
func (o VpnInterfaceSviFeatureTemplateOutput) IpMtuVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringPtrOutput { return v.IpMtuVariable }).(pulumi.StringPtrOutput)
}

// Apply ACL
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv4AccessLists() VpnInterfaceSviFeatureTemplateIpv4AccessListArrayOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) VpnInterfaceSviFeatureTemplateIpv4AccessListArrayOutput {
		return v.Ipv4AccessLists
	}).(VpnInterfaceSviFeatureTemplateIpv4AccessListArrayOutput)
}

// Assign IPv4 address
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringPtrOutput { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv4AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringPtrOutput { return v.Ipv4AddressVariable }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv4DhcpHelperVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringPtrOutput { return v.Ipv4DhcpHelperVariable }).(pulumi.StringPtrOutput)
}

// List of DHCP helper addresses
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv4DhcpHelpers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringArrayOutput { return v.Ipv4DhcpHelpers }).(pulumi.StringArrayOutput)
}

// Assign secondary IP addresses
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv4SecondaryAddresses() VpnInterfaceSviFeatureTemplateIpv4SecondaryAddressArrayOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) VpnInterfaceSviFeatureTemplateIpv4SecondaryAddressArrayOutput {
		return v.Ipv4SecondaryAddresses
	}).(VpnInterfaceSviFeatureTemplateIpv4SecondaryAddressArrayOutput)
}

// Enable VRRP
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv4Vrrps() VpnInterfaceSviFeatureTemplateIpv4VrrpArrayOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) VpnInterfaceSviFeatureTemplateIpv4VrrpArrayOutput {
		return v.Ipv4Vrrps
	}).(VpnInterfaceSviFeatureTemplateIpv4VrrpArrayOutput)
}

// Apply ACL
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv6AccessLists() VpnInterfaceSviFeatureTemplateIpv6AccessListArrayOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) VpnInterfaceSviFeatureTemplateIpv6AccessListArrayOutput {
		return v.Ipv6AccessLists
	}).(VpnInterfaceSviFeatureTemplateIpv6AccessListArrayOutput)
}

// Assign IPv6 address
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringPtrOutput { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv6AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringPtrOutput { return v.Ipv6AddressVariable }).(pulumi.StringPtrOutput)
}

// Enable DHCPv6
//   - Default value: `false`
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv6DhcpClient() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.BoolPtrOutput { return v.Ipv6DhcpClient }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv6DhcpClientVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringPtrOutput { return v.Ipv6DhcpClientVariable }).(pulumi.StringPtrOutput)
}

// Set administrative distance for DHCP default route
//   - Range: `1`-`65536`
//   - Default value: `1`
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv6DhcpDistance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.IntPtrOutput { return v.Ipv6DhcpDistance }).(pulumi.IntPtrOutput)
}

// Variable name
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv6DhcpDistanceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringPtrOutput { return v.Ipv6DhcpDistanceVariable }).(pulumi.StringPtrOutput)
}

// DHCPv6 Helper
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv6DhcpHelpers() VpnInterfaceSviFeatureTemplateIpv6DhcpHelperArrayOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) VpnInterfaceSviFeatureTemplateIpv6DhcpHelperArrayOutput {
		return v.Ipv6DhcpHelpers
	}).(VpnInterfaceSviFeatureTemplateIpv6DhcpHelperArrayOutput)
}

// Enable DHCPv6 rapid commit
//   - Default value: `false`
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv6DhcpRapidCommit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.BoolPtrOutput { return v.Ipv6DhcpRapidCommit }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv6DhcpRapidCommitVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringPtrOutput { return v.Ipv6DhcpRapidCommitVariable }).(pulumi.StringPtrOutput)
}

// Assign secondary IPv6 addresses
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv6SecondaryAddresses() VpnInterfaceSviFeatureTemplateIpv6SecondaryAddressArrayOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) VpnInterfaceSviFeatureTemplateIpv6SecondaryAddressArrayOutput {
		return v.Ipv6SecondaryAddresses
	}).(VpnInterfaceSviFeatureTemplateIpv6SecondaryAddressArrayOutput)
}

// Enable VRRP
func (o VpnInterfaceSviFeatureTemplateOutput) Ipv6Vrrps() VpnInterfaceSviFeatureTemplateIpv6VrrpArrayOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) VpnInterfaceSviFeatureTemplateIpv6VrrpArrayOutput {
		return v.Ipv6Vrrps
	}).(VpnInterfaceSviFeatureTemplateIpv6VrrpArrayOutput)
}

// Interface MTU <1500..9216> in bytes
//   - Range: `1500`-`9216`
//   - Default value: `1500`
func (o VpnInterfaceSviFeatureTemplateOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.IntPtrOutput { return v.Mtu }).(pulumi.IntPtrOutput)
}

// Variable name
func (o VpnInterfaceSviFeatureTemplateOutput) MtuVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringPtrOutput { return v.MtuVariable }).(pulumi.StringPtrOutput)
}

// The name of the feature template
func (o VpnInterfaceSviFeatureTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable policer
func (o VpnInterfaceSviFeatureTemplateOutput) Policers() VpnInterfaceSviFeatureTemplatePolicerArrayOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) VpnInterfaceSviFeatureTemplatePolicerArrayOutput {
		return v.Policers
	}).(VpnInterfaceSviFeatureTemplatePolicerArrayOutput)
}

// Administrative state
//   - Default value: `true`
func (o VpnInterfaceSviFeatureTemplateOutput) Shutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.BoolPtrOutput { return v.Shutdown }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceSviFeatureTemplateOutput) ShutdownVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringPtrOutput { return v.ShutdownVariable }).(pulumi.StringPtrOutput)
}

// Configure static ARP entries
func (o VpnInterfaceSviFeatureTemplateOutput) StaticArpEntries() VpnInterfaceSviFeatureTemplateStaticArpEntryArrayOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) VpnInterfaceSviFeatureTemplateStaticArpEntryArrayOutput {
		return v.StaticArpEntries
	}).(VpnInterfaceSviFeatureTemplateStaticArpEntryArrayOutput)
}

// TCP MSS on SYN packets, in bytes
//   - Range: `552`-`1960`
func (o VpnInterfaceSviFeatureTemplateOutput) TcpMssAdjust() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.IntPtrOutput { return v.TcpMssAdjust }).(pulumi.IntPtrOutput)
}

// Variable name
func (o VpnInterfaceSviFeatureTemplateOutput) TcpMssAdjustVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringPtrOutput { return v.TcpMssAdjustVariable }).(pulumi.StringPtrOutput)
}

// The template type
func (o VpnInterfaceSviFeatureTemplateOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.StringOutput { return v.TemplateType }).(pulumi.StringOutput)
}

// The version of the feature template
func (o VpnInterfaceSviFeatureTemplateOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnInterfaceSviFeatureTemplate) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type VpnInterfaceSviFeatureTemplateArrayOutput struct{ *pulumi.OutputState }

func (VpnInterfaceSviFeatureTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnInterfaceSviFeatureTemplate)(nil)).Elem()
}

func (o VpnInterfaceSviFeatureTemplateArrayOutput) ToVpnInterfaceSviFeatureTemplateArrayOutput() VpnInterfaceSviFeatureTemplateArrayOutput {
	return o
}

func (o VpnInterfaceSviFeatureTemplateArrayOutput) ToVpnInterfaceSviFeatureTemplateArrayOutputWithContext(ctx context.Context) VpnInterfaceSviFeatureTemplateArrayOutput {
	return o
}

func (o VpnInterfaceSviFeatureTemplateArrayOutput) Index(i pulumi.IntInput) VpnInterfaceSviFeatureTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpnInterfaceSviFeatureTemplate {
		return vs[0].([]*VpnInterfaceSviFeatureTemplate)[vs[1].(int)]
	}).(VpnInterfaceSviFeatureTemplateOutput)
}

type VpnInterfaceSviFeatureTemplateMapOutput struct{ *pulumi.OutputState }

func (VpnInterfaceSviFeatureTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnInterfaceSviFeatureTemplate)(nil)).Elem()
}

func (o VpnInterfaceSviFeatureTemplateMapOutput) ToVpnInterfaceSviFeatureTemplateMapOutput() VpnInterfaceSviFeatureTemplateMapOutput {
	return o
}

func (o VpnInterfaceSviFeatureTemplateMapOutput) ToVpnInterfaceSviFeatureTemplateMapOutputWithContext(ctx context.Context) VpnInterfaceSviFeatureTemplateMapOutput {
	return o
}

func (o VpnInterfaceSviFeatureTemplateMapOutput) MapIndex(k pulumi.StringInput) VpnInterfaceSviFeatureTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpnInterfaceSviFeatureTemplate {
		return vs[0].(map[string]*VpnInterfaceSviFeatureTemplate)[vs[1].(string)]
	}).(VpnInterfaceSviFeatureTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpnInterfaceSviFeatureTemplateInput)(nil)).Elem(), &VpnInterfaceSviFeatureTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnInterfaceSviFeatureTemplateArrayInput)(nil)).Elem(), VpnInterfaceSviFeatureTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnInterfaceSviFeatureTemplateMapInput)(nil)).Elem(), VpnInterfaceSviFeatureTemplateMap{})
	pulumi.RegisterOutputType(VpnInterfaceSviFeatureTemplateOutput{})
	pulumi.RegisterOutputType(VpnInterfaceSviFeatureTemplateArrayOutput{})
	pulumi.RegisterOutputType(VpnInterfaceSviFeatureTemplateMapOutput{})
}
