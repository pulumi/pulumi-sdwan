// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Service IPv6 ACL Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "service_ipv6_acl_feature_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/serviceIpv6AclFeature:ServiceIpv6AclFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type ServiceIpv6AclFeature struct {
	pulumi.CustomResourceState

	// Default Action
	//   - Choices: `drop`, `accept`
	//   - Default value: `drop`
	DefaultAction pulumi.StringPtrOutput `pulumi:"defaultAction"`
	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// Access Control List
	Sequences ServiceIpv6AclFeatureSequenceArrayOutput `pulumi:"sequences"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewServiceIpv6AclFeature registers a new resource with the given unique name, arguments, and options.
func NewServiceIpv6AclFeature(ctx *pulumi.Context,
	name string, args *ServiceIpv6AclFeatureArgs, opts ...pulumi.ResourceOption) (*ServiceIpv6AclFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceIpv6AclFeature
	err := ctx.RegisterResource("sdwan:index/serviceIpv6AclFeature:ServiceIpv6AclFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceIpv6AclFeature gets an existing ServiceIpv6AclFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceIpv6AclFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceIpv6AclFeatureState, opts ...pulumi.ResourceOption) (*ServiceIpv6AclFeature, error) {
	var resource ServiceIpv6AclFeature
	err := ctx.ReadResource("sdwan:index/serviceIpv6AclFeature:ServiceIpv6AclFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceIpv6AclFeature resources.
type serviceIpv6AclFeatureState struct {
	// Default Action
	//   - Choices: `drop`, `accept`
	//   - Default value: `drop`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Access Control List
	Sequences []ServiceIpv6AclFeatureSequence `pulumi:"sequences"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type ServiceIpv6AclFeatureState struct {
	// Default Action
	//   - Choices: `drop`, `accept`
	//   - Default value: `drop`
	DefaultAction pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Access Control List
	Sequences ServiceIpv6AclFeatureSequenceArrayInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (ServiceIpv6AclFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceIpv6AclFeatureState)(nil)).Elem()
}

type serviceIpv6AclFeatureArgs struct {
	// Default Action
	//   - Choices: `drop`, `accept`
	//   - Default value: `drop`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Access Control List
	Sequences []ServiceIpv6AclFeatureSequence `pulumi:"sequences"`
}

// The set of arguments for constructing a ServiceIpv6AclFeature resource.
type ServiceIpv6AclFeatureArgs struct {
	// Default Action
	//   - Choices: `drop`, `accept`
	//   - Default value: `drop`
	DefaultAction pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Access Control List
	Sequences ServiceIpv6AclFeatureSequenceArrayInput
}

func (ServiceIpv6AclFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceIpv6AclFeatureArgs)(nil)).Elem()
}

type ServiceIpv6AclFeatureInput interface {
	pulumi.Input

	ToServiceIpv6AclFeatureOutput() ServiceIpv6AclFeatureOutput
	ToServiceIpv6AclFeatureOutputWithContext(ctx context.Context) ServiceIpv6AclFeatureOutput
}

func (*ServiceIpv6AclFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIpv6AclFeature)(nil)).Elem()
}

func (i *ServiceIpv6AclFeature) ToServiceIpv6AclFeatureOutput() ServiceIpv6AclFeatureOutput {
	return i.ToServiceIpv6AclFeatureOutputWithContext(context.Background())
}

func (i *ServiceIpv6AclFeature) ToServiceIpv6AclFeatureOutputWithContext(ctx context.Context) ServiceIpv6AclFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIpv6AclFeatureOutput)
}

// ServiceIpv6AclFeatureArrayInput is an input type that accepts ServiceIpv6AclFeatureArray and ServiceIpv6AclFeatureArrayOutput values.
// You can construct a concrete instance of `ServiceIpv6AclFeatureArrayInput` via:
//
//	ServiceIpv6AclFeatureArray{ ServiceIpv6AclFeatureArgs{...} }
type ServiceIpv6AclFeatureArrayInput interface {
	pulumi.Input

	ToServiceIpv6AclFeatureArrayOutput() ServiceIpv6AclFeatureArrayOutput
	ToServiceIpv6AclFeatureArrayOutputWithContext(context.Context) ServiceIpv6AclFeatureArrayOutput
}

type ServiceIpv6AclFeatureArray []ServiceIpv6AclFeatureInput

func (ServiceIpv6AclFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceIpv6AclFeature)(nil)).Elem()
}

func (i ServiceIpv6AclFeatureArray) ToServiceIpv6AclFeatureArrayOutput() ServiceIpv6AclFeatureArrayOutput {
	return i.ToServiceIpv6AclFeatureArrayOutputWithContext(context.Background())
}

func (i ServiceIpv6AclFeatureArray) ToServiceIpv6AclFeatureArrayOutputWithContext(ctx context.Context) ServiceIpv6AclFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIpv6AclFeatureArrayOutput)
}

// ServiceIpv6AclFeatureMapInput is an input type that accepts ServiceIpv6AclFeatureMap and ServiceIpv6AclFeatureMapOutput values.
// You can construct a concrete instance of `ServiceIpv6AclFeatureMapInput` via:
//
//	ServiceIpv6AclFeatureMap{ "key": ServiceIpv6AclFeatureArgs{...} }
type ServiceIpv6AclFeatureMapInput interface {
	pulumi.Input

	ToServiceIpv6AclFeatureMapOutput() ServiceIpv6AclFeatureMapOutput
	ToServiceIpv6AclFeatureMapOutputWithContext(context.Context) ServiceIpv6AclFeatureMapOutput
}

type ServiceIpv6AclFeatureMap map[string]ServiceIpv6AclFeatureInput

func (ServiceIpv6AclFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceIpv6AclFeature)(nil)).Elem()
}

func (i ServiceIpv6AclFeatureMap) ToServiceIpv6AclFeatureMapOutput() ServiceIpv6AclFeatureMapOutput {
	return i.ToServiceIpv6AclFeatureMapOutputWithContext(context.Background())
}

func (i ServiceIpv6AclFeatureMap) ToServiceIpv6AclFeatureMapOutputWithContext(ctx context.Context) ServiceIpv6AclFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIpv6AclFeatureMapOutput)
}

type ServiceIpv6AclFeatureOutput struct{ *pulumi.OutputState }

func (ServiceIpv6AclFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIpv6AclFeature)(nil)).Elem()
}

func (o ServiceIpv6AclFeatureOutput) ToServiceIpv6AclFeatureOutput() ServiceIpv6AclFeatureOutput {
	return o
}

func (o ServiceIpv6AclFeatureOutput) ToServiceIpv6AclFeatureOutputWithContext(ctx context.Context) ServiceIpv6AclFeatureOutput {
	return o
}

// Default Action
//   - Choices: `drop`, `accept`
//   - Default value: `drop`
func (o ServiceIpv6AclFeatureOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIpv6AclFeature) pulumi.StringPtrOutput { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// The description of the Feature
func (o ServiceIpv6AclFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIpv6AclFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o ServiceIpv6AclFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceIpv6AclFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The name of the Feature
func (o ServiceIpv6AclFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceIpv6AclFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Access Control List
func (o ServiceIpv6AclFeatureOutput) Sequences() ServiceIpv6AclFeatureSequenceArrayOutput {
	return o.ApplyT(func(v *ServiceIpv6AclFeature) ServiceIpv6AclFeatureSequenceArrayOutput { return v.Sequences }).(ServiceIpv6AclFeatureSequenceArrayOutput)
}

// The version of the Feature
func (o ServiceIpv6AclFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceIpv6AclFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ServiceIpv6AclFeatureArrayOutput struct{ *pulumi.OutputState }

func (ServiceIpv6AclFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceIpv6AclFeature)(nil)).Elem()
}

func (o ServiceIpv6AclFeatureArrayOutput) ToServiceIpv6AclFeatureArrayOutput() ServiceIpv6AclFeatureArrayOutput {
	return o
}

func (o ServiceIpv6AclFeatureArrayOutput) ToServiceIpv6AclFeatureArrayOutputWithContext(ctx context.Context) ServiceIpv6AclFeatureArrayOutput {
	return o
}

func (o ServiceIpv6AclFeatureArrayOutput) Index(i pulumi.IntInput) ServiceIpv6AclFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceIpv6AclFeature {
		return vs[0].([]*ServiceIpv6AclFeature)[vs[1].(int)]
	}).(ServiceIpv6AclFeatureOutput)
}

type ServiceIpv6AclFeatureMapOutput struct{ *pulumi.OutputState }

func (ServiceIpv6AclFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceIpv6AclFeature)(nil)).Elem()
}

func (o ServiceIpv6AclFeatureMapOutput) ToServiceIpv6AclFeatureMapOutput() ServiceIpv6AclFeatureMapOutput {
	return o
}

func (o ServiceIpv6AclFeatureMapOutput) ToServiceIpv6AclFeatureMapOutputWithContext(ctx context.Context) ServiceIpv6AclFeatureMapOutput {
	return o
}

func (o ServiceIpv6AclFeatureMapOutput) MapIndex(k pulumi.StringInput) ServiceIpv6AclFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceIpv6AclFeature {
		return vs[0].(map[string]*ServiceIpv6AclFeature)[vs[1].(string)]
	}).(ServiceIpv6AclFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceIpv6AclFeatureInput)(nil)).Elem(), &ServiceIpv6AclFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceIpv6AclFeatureArrayInput)(nil)).Elem(), ServiceIpv6AclFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceIpv6AclFeatureMapInput)(nil)).Elem(), ServiceIpv6AclFeatureMap{})
	pulumi.RegisterOutputType(ServiceIpv6AclFeatureOutput{})
	pulumi.RegisterOutputType(ServiceIpv6AclFeatureArrayOutput{})
	pulumi.RegisterOutputType(ServiceIpv6AclFeatureMapOutput{})
}
