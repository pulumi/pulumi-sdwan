// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Policy Object Class Map Policy_object.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewPolicyObjectClassMap(ctx, "example", &sdwan.PolicyObjectClassMapArgs{
//				Name:             pulumi.String("Example"),
//				Description:      pulumi.String("My Example"),
//				FeatureProfileId: pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				Entries: sdwan.PolicyObjectClassMapEntryArray{
//					&sdwan.PolicyObjectClassMapEntryArgs{
//						Queue: pulumi.String("0"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "policy_object_class_map_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/policyObjectClassMap:PolicyObjectClassMap example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type PolicyObjectClassMap struct {
	pulumi.CustomResourceState

	// The description of the Policy_object
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// class map List
	Entries PolicyObjectClassMapEntryArrayOutput `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the Policy_object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewPolicyObjectClassMap registers a new resource with the given unique name, arguments, and options.
func NewPolicyObjectClassMap(ctx *pulumi.Context,
	name string, args *PolicyObjectClassMapArgs, opts ...pulumi.ResourceOption) (*PolicyObjectClassMap, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyObjectClassMap
	err := ctx.RegisterResource("sdwan:index/policyObjectClassMap:PolicyObjectClassMap", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyObjectClassMap gets an existing PolicyObjectClassMap resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyObjectClassMap(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyObjectClassMapState, opts ...pulumi.ResourceOption) (*PolicyObjectClassMap, error) {
	var resource PolicyObjectClassMap
	err := ctx.ReadResource("sdwan:index/policyObjectClassMap:PolicyObjectClassMap", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyObjectClassMap resources.
type policyObjectClassMapState struct {
	// The description of the Policy_object
	Description *string `pulumi:"description"`
	// class map List
	Entries []PolicyObjectClassMapEntry `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name *string `pulumi:"name"`
	// The version of the Policy_object
	Version *int `pulumi:"version"`
}

type PolicyObjectClassMapState struct {
	// The description of the Policy_object
	Description pulumi.StringPtrInput
	// class map List
	Entries PolicyObjectClassMapEntryArrayInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Policy_object
	Name pulumi.StringPtrInput
	// The version of the Policy_object
	Version pulumi.IntPtrInput
}

func (PolicyObjectClassMapState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyObjectClassMapState)(nil)).Elem()
}

type policyObjectClassMapArgs struct {
	// The description of the Policy_object
	Description *string `pulumi:"description"`
	// class map List
	Entries []PolicyObjectClassMapEntry `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a PolicyObjectClassMap resource.
type PolicyObjectClassMapArgs struct {
	// The description of the Policy_object
	Description pulumi.StringPtrInput
	// class map List
	Entries PolicyObjectClassMapEntryArrayInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// The name of the Policy_object
	Name pulumi.StringPtrInput
}

func (PolicyObjectClassMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyObjectClassMapArgs)(nil)).Elem()
}

type PolicyObjectClassMapInput interface {
	pulumi.Input

	ToPolicyObjectClassMapOutput() PolicyObjectClassMapOutput
	ToPolicyObjectClassMapOutputWithContext(ctx context.Context) PolicyObjectClassMapOutput
}

func (*PolicyObjectClassMap) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyObjectClassMap)(nil)).Elem()
}

func (i *PolicyObjectClassMap) ToPolicyObjectClassMapOutput() PolicyObjectClassMapOutput {
	return i.ToPolicyObjectClassMapOutputWithContext(context.Background())
}

func (i *PolicyObjectClassMap) ToPolicyObjectClassMapOutputWithContext(ctx context.Context) PolicyObjectClassMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectClassMapOutput)
}

// PolicyObjectClassMapArrayInput is an input type that accepts PolicyObjectClassMapArray and PolicyObjectClassMapArrayOutput values.
// You can construct a concrete instance of `PolicyObjectClassMapArrayInput` via:
//
//	PolicyObjectClassMapArray{ PolicyObjectClassMapArgs{...} }
type PolicyObjectClassMapArrayInput interface {
	pulumi.Input

	ToPolicyObjectClassMapArrayOutput() PolicyObjectClassMapArrayOutput
	ToPolicyObjectClassMapArrayOutputWithContext(context.Context) PolicyObjectClassMapArrayOutput
}

type PolicyObjectClassMapArray []PolicyObjectClassMapInput

func (PolicyObjectClassMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyObjectClassMap)(nil)).Elem()
}

func (i PolicyObjectClassMapArray) ToPolicyObjectClassMapArrayOutput() PolicyObjectClassMapArrayOutput {
	return i.ToPolicyObjectClassMapArrayOutputWithContext(context.Background())
}

func (i PolicyObjectClassMapArray) ToPolicyObjectClassMapArrayOutputWithContext(ctx context.Context) PolicyObjectClassMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectClassMapArrayOutput)
}

// PolicyObjectClassMapMapInput is an input type that accepts PolicyObjectClassMapMap and PolicyObjectClassMapMapOutput values.
// You can construct a concrete instance of `PolicyObjectClassMapMapInput` via:
//
//	PolicyObjectClassMapMap{ "key": PolicyObjectClassMapArgs{...} }
type PolicyObjectClassMapMapInput interface {
	pulumi.Input

	ToPolicyObjectClassMapMapOutput() PolicyObjectClassMapMapOutput
	ToPolicyObjectClassMapMapOutputWithContext(context.Context) PolicyObjectClassMapMapOutput
}

type PolicyObjectClassMapMap map[string]PolicyObjectClassMapInput

func (PolicyObjectClassMapMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyObjectClassMap)(nil)).Elem()
}

func (i PolicyObjectClassMapMap) ToPolicyObjectClassMapMapOutput() PolicyObjectClassMapMapOutput {
	return i.ToPolicyObjectClassMapMapOutputWithContext(context.Background())
}

func (i PolicyObjectClassMapMap) ToPolicyObjectClassMapMapOutputWithContext(ctx context.Context) PolicyObjectClassMapMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectClassMapMapOutput)
}

type PolicyObjectClassMapOutput struct{ *pulumi.OutputState }

func (PolicyObjectClassMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyObjectClassMap)(nil)).Elem()
}

func (o PolicyObjectClassMapOutput) ToPolicyObjectClassMapOutput() PolicyObjectClassMapOutput {
	return o
}

func (o PolicyObjectClassMapOutput) ToPolicyObjectClassMapOutputWithContext(ctx context.Context) PolicyObjectClassMapOutput {
	return o
}

// The description of the Policy_object
func (o PolicyObjectClassMapOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyObjectClassMap) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// class map List
func (o PolicyObjectClassMapOutput) Entries() PolicyObjectClassMapEntryArrayOutput {
	return o.ApplyT(func(v *PolicyObjectClassMap) PolicyObjectClassMapEntryArrayOutput { return v.Entries }).(PolicyObjectClassMapEntryArrayOutput)
}

// Feature Profile ID
func (o PolicyObjectClassMapOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectClassMap) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The name of the Policy_object
func (o PolicyObjectClassMapOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectClassMap) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the Policy_object
func (o PolicyObjectClassMapOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *PolicyObjectClassMap) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type PolicyObjectClassMapArrayOutput struct{ *pulumi.OutputState }

func (PolicyObjectClassMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyObjectClassMap)(nil)).Elem()
}

func (o PolicyObjectClassMapArrayOutput) ToPolicyObjectClassMapArrayOutput() PolicyObjectClassMapArrayOutput {
	return o
}

func (o PolicyObjectClassMapArrayOutput) ToPolicyObjectClassMapArrayOutputWithContext(ctx context.Context) PolicyObjectClassMapArrayOutput {
	return o
}

func (o PolicyObjectClassMapArrayOutput) Index(i pulumi.IntInput) PolicyObjectClassMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyObjectClassMap {
		return vs[0].([]*PolicyObjectClassMap)[vs[1].(int)]
	}).(PolicyObjectClassMapOutput)
}

type PolicyObjectClassMapMapOutput struct{ *pulumi.OutputState }

func (PolicyObjectClassMapMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyObjectClassMap)(nil)).Elem()
}

func (o PolicyObjectClassMapMapOutput) ToPolicyObjectClassMapMapOutput() PolicyObjectClassMapMapOutput {
	return o
}

func (o PolicyObjectClassMapMapOutput) ToPolicyObjectClassMapMapOutputWithContext(ctx context.Context) PolicyObjectClassMapMapOutput {
	return o
}

func (o PolicyObjectClassMapMapOutput) MapIndex(k pulumi.StringInput) PolicyObjectClassMapOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyObjectClassMap {
		return vs[0].(map[string]*PolicyObjectClassMap)[vs[1].(string)]
	}).(PolicyObjectClassMapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectClassMapInput)(nil)).Elem(), &PolicyObjectClassMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectClassMapArrayInput)(nil)).Elem(), PolicyObjectClassMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectClassMapMapInput)(nil)).Elem(), PolicyObjectClassMapMap{})
	pulumi.RegisterOutputType(PolicyObjectClassMapOutput{})
	pulumi.RegisterOutputType(PolicyObjectClassMapArrayOutput{})
	pulumi.RegisterOutputType(PolicyObjectClassMapMapOutput{})
}
