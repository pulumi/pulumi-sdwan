// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a System BFD Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewSystemBfdFeature(ctx, "example", &sdwan.SystemBfdFeatureArgs{
//				Name:             pulumi.String("Example"),
//				Description:      pulumi.String("My Example"),
//				FeatureProfileId: pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				Multiplier:       pulumi.Int(3),
//				PollInterval:     pulumi.Int(100),
//				DefaultDscp:      pulumi.Int(8),
//				Colors: sdwan.SystemBfdFeatureColorArray{
//					&sdwan.SystemBfdFeatureColorArgs{
//						Color:          pulumi.String("3g"),
//						Hello_interval: 200,
//						Multiplier:     pulumi.Int(3),
//						Pmtu_discovery: true,
//						Dscp:           pulumi.Int(16),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "system_bfd_feature_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/systemBfdFeature:SystemBfdFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type SystemBfdFeature struct {
	pulumi.CustomResourceState

	// Set color that identifies the WAN transport tunnel
	Colors SystemBfdFeatureColorArrayOutput `pulumi:"colors"`
	// - Range: `0`-`63`
	//   - Default value: `48`
	DefaultDscp pulumi.IntPtrOutput `pulumi:"defaultDscp"`
	// Variable name
	DefaultDscpVariable pulumi.StringPtrOutput `pulumi:"defaultDscpVariable"`
	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// - Range: `1`-`6`
	//   - Default value: `6`
	Multiplier pulumi.IntPtrOutput `pulumi:"multiplier"`
	// Variable name
	MultiplierVariable pulumi.StringPtrOutput `pulumi:"multiplierVariable"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// - Range: `1`-`4294967295`
	//   - Default value: `600000`
	PollInterval pulumi.IntPtrOutput `pulumi:"pollInterval"`
	// Variable name
	PollIntervalVariable pulumi.StringPtrOutput `pulumi:"pollIntervalVariable"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewSystemBfdFeature registers a new resource with the given unique name, arguments, and options.
func NewSystemBfdFeature(ctx *pulumi.Context,
	name string, args *SystemBfdFeatureArgs, opts ...pulumi.ResourceOption) (*SystemBfdFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemBfdFeature
	err := ctx.RegisterResource("sdwan:index/systemBfdFeature:SystemBfdFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemBfdFeature gets an existing SystemBfdFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemBfdFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemBfdFeatureState, opts ...pulumi.ResourceOption) (*SystemBfdFeature, error) {
	var resource SystemBfdFeature
	err := ctx.ReadResource("sdwan:index/systemBfdFeature:SystemBfdFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemBfdFeature resources.
type systemBfdFeatureState struct {
	// Set color that identifies the WAN transport tunnel
	Colors []SystemBfdFeatureColor `pulumi:"colors"`
	// - Range: `0`-`63`
	//   - Default value: `48`
	DefaultDscp *int `pulumi:"defaultDscp"`
	// Variable name
	DefaultDscpVariable *string `pulumi:"defaultDscpVariable"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// - Range: `1`-`6`
	//   - Default value: `6`
	Multiplier *int `pulumi:"multiplier"`
	// Variable name
	MultiplierVariable *string `pulumi:"multiplierVariable"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// - Range: `1`-`4294967295`
	//   - Default value: `600000`
	PollInterval *int `pulumi:"pollInterval"`
	// Variable name
	PollIntervalVariable *string `pulumi:"pollIntervalVariable"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type SystemBfdFeatureState struct {
	// Set color that identifies the WAN transport tunnel
	Colors SystemBfdFeatureColorArrayInput
	// - Range: `0`-`63`
	//   - Default value: `48`
	DefaultDscp pulumi.IntPtrInput
	// Variable name
	DefaultDscpVariable pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// - Range: `1`-`6`
	//   - Default value: `6`
	Multiplier pulumi.IntPtrInput
	// Variable name
	MultiplierVariable pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// - Range: `1`-`4294967295`
	//   - Default value: `600000`
	PollInterval pulumi.IntPtrInput
	// Variable name
	PollIntervalVariable pulumi.StringPtrInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (SystemBfdFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemBfdFeatureState)(nil)).Elem()
}

type systemBfdFeatureArgs struct {
	// Set color that identifies the WAN transport tunnel
	Colors []SystemBfdFeatureColor `pulumi:"colors"`
	// - Range: `0`-`63`
	//   - Default value: `48`
	DefaultDscp *int `pulumi:"defaultDscp"`
	// Variable name
	DefaultDscpVariable *string `pulumi:"defaultDscpVariable"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// - Range: `1`-`6`
	//   - Default value: `6`
	Multiplier *int `pulumi:"multiplier"`
	// Variable name
	MultiplierVariable *string `pulumi:"multiplierVariable"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// - Range: `1`-`4294967295`
	//   - Default value: `600000`
	PollInterval *int `pulumi:"pollInterval"`
	// Variable name
	PollIntervalVariable *string `pulumi:"pollIntervalVariable"`
}

// The set of arguments for constructing a SystemBfdFeature resource.
type SystemBfdFeatureArgs struct {
	// Set color that identifies the WAN transport tunnel
	Colors SystemBfdFeatureColorArrayInput
	// - Range: `0`-`63`
	//   - Default value: `48`
	DefaultDscp pulumi.IntPtrInput
	// Variable name
	DefaultDscpVariable pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// - Range: `1`-`6`
	//   - Default value: `6`
	Multiplier pulumi.IntPtrInput
	// Variable name
	MultiplierVariable pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// - Range: `1`-`4294967295`
	//   - Default value: `600000`
	PollInterval pulumi.IntPtrInput
	// Variable name
	PollIntervalVariable pulumi.StringPtrInput
}

func (SystemBfdFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemBfdFeatureArgs)(nil)).Elem()
}

type SystemBfdFeatureInput interface {
	pulumi.Input

	ToSystemBfdFeatureOutput() SystemBfdFeatureOutput
	ToSystemBfdFeatureOutputWithContext(ctx context.Context) SystemBfdFeatureOutput
}

func (*SystemBfdFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemBfdFeature)(nil)).Elem()
}

func (i *SystemBfdFeature) ToSystemBfdFeatureOutput() SystemBfdFeatureOutput {
	return i.ToSystemBfdFeatureOutputWithContext(context.Background())
}

func (i *SystemBfdFeature) ToSystemBfdFeatureOutputWithContext(ctx context.Context) SystemBfdFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemBfdFeatureOutput)
}

// SystemBfdFeatureArrayInput is an input type that accepts SystemBfdFeatureArray and SystemBfdFeatureArrayOutput values.
// You can construct a concrete instance of `SystemBfdFeatureArrayInput` via:
//
//	SystemBfdFeatureArray{ SystemBfdFeatureArgs{...} }
type SystemBfdFeatureArrayInput interface {
	pulumi.Input

	ToSystemBfdFeatureArrayOutput() SystemBfdFeatureArrayOutput
	ToSystemBfdFeatureArrayOutputWithContext(context.Context) SystemBfdFeatureArrayOutput
}

type SystemBfdFeatureArray []SystemBfdFeatureInput

func (SystemBfdFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemBfdFeature)(nil)).Elem()
}

func (i SystemBfdFeatureArray) ToSystemBfdFeatureArrayOutput() SystemBfdFeatureArrayOutput {
	return i.ToSystemBfdFeatureArrayOutputWithContext(context.Background())
}

func (i SystemBfdFeatureArray) ToSystemBfdFeatureArrayOutputWithContext(ctx context.Context) SystemBfdFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemBfdFeatureArrayOutput)
}

// SystemBfdFeatureMapInput is an input type that accepts SystemBfdFeatureMap and SystemBfdFeatureMapOutput values.
// You can construct a concrete instance of `SystemBfdFeatureMapInput` via:
//
//	SystemBfdFeatureMap{ "key": SystemBfdFeatureArgs{...} }
type SystemBfdFeatureMapInput interface {
	pulumi.Input

	ToSystemBfdFeatureMapOutput() SystemBfdFeatureMapOutput
	ToSystemBfdFeatureMapOutputWithContext(context.Context) SystemBfdFeatureMapOutput
}

type SystemBfdFeatureMap map[string]SystemBfdFeatureInput

func (SystemBfdFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemBfdFeature)(nil)).Elem()
}

func (i SystemBfdFeatureMap) ToSystemBfdFeatureMapOutput() SystemBfdFeatureMapOutput {
	return i.ToSystemBfdFeatureMapOutputWithContext(context.Background())
}

func (i SystemBfdFeatureMap) ToSystemBfdFeatureMapOutputWithContext(ctx context.Context) SystemBfdFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemBfdFeatureMapOutput)
}

type SystemBfdFeatureOutput struct{ *pulumi.OutputState }

func (SystemBfdFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemBfdFeature)(nil)).Elem()
}

func (o SystemBfdFeatureOutput) ToSystemBfdFeatureOutput() SystemBfdFeatureOutput {
	return o
}

func (o SystemBfdFeatureOutput) ToSystemBfdFeatureOutputWithContext(ctx context.Context) SystemBfdFeatureOutput {
	return o
}

// Set color that identifies the WAN transport tunnel
func (o SystemBfdFeatureOutput) Colors() SystemBfdFeatureColorArrayOutput {
	return o.ApplyT(func(v *SystemBfdFeature) SystemBfdFeatureColorArrayOutput { return v.Colors }).(SystemBfdFeatureColorArrayOutput)
}

// - Range: `0`-`63`
//   - Default value: `48`
func (o SystemBfdFeatureOutput) DefaultDscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemBfdFeature) pulumi.IntPtrOutput { return v.DefaultDscp }).(pulumi.IntPtrOutput)
}

// Variable name
func (o SystemBfdFeatureOutput) DefaultDscpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemBfdFeature) pulumi.StringPtrOutput { return v.DefaultDscpVariable }).(pulumi.StringPtrOutput)
}

// The description of the Feature
func (o SystemBfdFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemBfdFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o SystemBfdFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemBfdFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// - Range: `1`-`6`
//   - Default value: `6`
func (o SystemBfdFeatureOutput) Multiplier() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemBfdFeature) pulumi.IntPtrOutput { return v.Multiplier }).(pulumi.IntPtrOutput)
}

// Variable name
func (o SystemBfdFeatureOutput) MultiplierVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemBfdFeature) pulumi.StringPtrOutput { return v.MultiplierVariable }).(pulumi.StringPtrOutput)
}

// The name of the Feature
func (o SystemBfdFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemBfdFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// - Range: `1`-`4294967295`
//   - Default value: `600000`
func (o SystemBfdFeatureOutput) PollInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemBfdFeature) pulumi.IntPtrOutput { return v.PollInterval }).(pulumi.IntPtrOutput)
}

// Variable name
func (o SystemBfdFeatureOutput) PollIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemBfdFeature) pulumi.StringPtrOutput { return v.PollIntervalVariable }).(pulumi.StringPtrOutput)
}

// The version of the Feature
func (o SystemBfdFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemBfdFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type SystemBfdFeatureArrayOutput struct{ *pulumi.OutputState }

func (SystemBfdFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemBfdFeature)(nil)).Elem()
}

func (o SystemBfdFeatureArrayOutput) ToSystemBfdFeatureArrayOutput() SystemBfdFeatureArrayOutput {
	return o
}

func (o SystemBfdFeatureArrayOutput) ToSystemBfdFeatureArrayOutputWithContext(ctx context.Context) SystemBfdFeatureArrayOutput {
	return o
}

func (o SystemBfdFeatureArrayOutput) Index(i pulumi.IntInput) SystemBfdFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemBfdFeature {
		return vs[0].([]*SystemBfdFeature)[vs[1].(int)]
	}).(SystemBfdFeatureOutput)
}

type SystemBfdFeatureMapOutput struct{ *pulumi.OutputState }

func (SystemBfdFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemBfdFeature)(nil)).Elem()
}

func (o SystemBfdFeatureMapOutput) ToSystemBfdFeatureMapOutput() SystemBfdFeatureMapOutput {
	return o
}

func (o SystemBfdFeatureMapOutput) ToSystemBfdFeatureMapOutputWithContext(ctx context.Context) SystemBfdFeatureMapOutput {
	return o
}

func (o SystemBfdFeatureMapOutput) MapIndex(k pulumi.StringInput) SystemBfdFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemBfdFeature {
		return vs[0].(map[string]*SystemBfdFeature)[vs[1].(string)]
	}).(SystemBfdFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemBfdFeatureInput)(nil)).Elem(), &SystemBfdFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemBfdFeatureArrayInput)(nil)).Elem(), SystemBfdFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemBfdFeatureMapInput)(nil)).Elem(), SystemBfdFeatureMap{})
	pulumi.RegisterOutputType(SystemBfdFeatureOutput{})
	pulumi.RegisterOutputType(SystemBfdFeatureArrayOutput{})
	pulumi.RegisterOutputType(SystemBfdFeatureMapOutput{})
}
