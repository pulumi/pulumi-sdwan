// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the VPN Interface DSL PPPoA feature template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupVpnInterfaceDslPppoaFeatureTemplate(ctx, &sdwan.LookupVpnInterfaceDslPppoaFeatureTemplateArgs{
//				Id: pulumi.StringRef("f6b2c44c-693c-4763-b010-895aa3d236bd"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVpnInterfaceDslPppoaFeatureTemplate(ctx *pulumi.Context, args *LookupVpnInterfaceDslPppoaFeatureTemplateArgs, opts ...pulumi.InvokeOption) (*LookupVpnInterfaceDslPppoaFeatureTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpnInterfaceDslPppoaFeatureTemplateResult
	err := ctx.Invoke("sdwan:index/getVpnInterfaceDslPppoaFeatureTemplate:getVpnInterfaceDslPppoaFeatureTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpnInterfaceDslPppoaFeatureTemplate.
type LookupVpnInterfaceDslPppoaFeatureTemplateArgs struct {
	// The id of the feature template
	Id *string `pulumi:"id"`
	// The name of the feature template
	Name *string `pulumi:"name"`
}

// A collection of values returned by getVpnInterfaceDslPppoaFeatureTemplate.
type LookupVpnInterfaceDslPppoaFeatureTemplateResult struct {
	// Apply ACL
	AccessLists []GetVpnInterfaceDslPppoaFeatureTemplateAccessList `pulumi:"accessLists"`
	// Interface description
	AtmDescription string `pulumi:"atmDescription"`
	// Variable name
	AtmDescriptionVariable string `pulumi:"atmDescriptionVariable"`
	// ATM Sub interface Name
	AtmSubInterfaceName string `pulumi:"atmSubInterfaceName"`
	// Variable name
	AtmSubInterfaceNameVariable string `pulumi:"atmSubInterfaceNameVariable"`
	// Interface downstream bandwidth capacity, in kbps
	BandwidthDownstream int `pulumi:"bandwidthDownstream"`
	// Variable name
	BandwidthDownstreamVariable string `pulumi:"bandwidthDownstreamVariable"`
	// Interface upstream bandwidth capacity, in kbps
	BandwidthUpstream int `pulumi:"bandwidthUpstream"`
	// Variable name
	BandwidthUpstreamVariable string `pulumi:"bandwidthUpstreamVariable"`
	// CHAP Hostname
	ChapHostname string `pulumi:"chapHostname"`
	// Variable name
	ChapHostnameVariable string `pulumi:"chapHostnameVariable"`
	// Specify ppp authentication Password
	ChapPppAuthPassword string `pulumi:"chapPppAuthPassword"`
	// Variable name
	ChapPppAuthPasswordVariable string `pulumi:"chapPppAuthPasswordVariable"`
	// Enable core region
	CoreRegion string `pulumi:"coreRegion"`
	// Variable name
	CoreRegionVariable string `pulumi:"coreRegionVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Enable core region
	EnableCoreRegion bool `pulumi:"enableCoreRegion"`
	// Variable name
	EnableCoreRegionVariable string `pulumi:"enableCoreRegionVariable"`
	// The id of the feature template
	Id string `pulumi:"id"`
	// IP Directed-Broadcast
	IpDirectedBroadcast bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable string `pulumi:"ipDirectedBroadcastVariable"`
	// Interface MTU \n\n, in bytes
	IpMtu int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable string `pulumi:"ipMtuVariable"`
	// The name of the feature template
	Name string `pulumi:"name"`
	// Network Address Translation on this interface
	Nat bool `pulumi:"nat"`
	// Block inbound ICMP error messages
	NatBlockIcmpError bool `pulumi:"natBlockIcmpError"`
	// Variable name
	NatBlockIcmpErrorVariable string `pulumi:"natBlockIcmpErrorVariable"`
	// Set port-forwarding rules for NAT on this interface
	NatPortForwards []GetVpnInterfaceDslPppoaFeatureTemplateNatPortForward `pulumi:"natPortForwards"`
	// Set NAT refresh mode
	NatRefreshMode string `pulumi:"natRefreshMode"`
	// Variable name
	NatRefreshModeVariable string `pulumi:"natRefreshModeVariable"`
	// Respond to ping requests to NAT interface ip address from the public side
	NatResponseToPing bool `pulumi:"natResponseToPing"`
	// Variable name
	NatResponseToPingVariable string `pulumi:"natResponseToPingVariable"`
	// Set NAT TCP session timeout, in minutes
	NatTcpTimeout int `pulumi:"natTcpTimeout"`
	// Variable name
	NatTcpTimeoutVariable string `pulumi:"natTcpTimeoutVariable"`
	// Set NAT UDP session timeout, in minutes
	NatUdpTimeout int `pulumi:"natUdpTimeout"`
	// Variable name
	NatUdpTimeoutVariable string `pulumi:"natUdpTimeoutVariable"`
	// PAP outbound Password
	PapPassword bool `pulumi:"papPassword"`
	// Specify ppp authentication Password
	PapPppAuthPassword string `pulumi:"papPppAuthPassword"`
	// Variable name
	PapPppAuthPasswordVariable string `pulumi:"papPppAuthPasswordVariable"`
	// PAP outbound Sent Username
	PapUsername string `pulumi:"papUsername"`
	// Variable name
	PapUsernameVariable string `pulumi:"papUsernameVariable"`
	// Per-tunnel Qos
	PerTunnelQos bool `pulumi:"perTunnelQos"`
	// Per-tunnel QoS Aggregator
	PerTunnelQosAggregator bool `pulumi:"perTunnelQosAggregator"`
	// Variable name
	PerTunnelQosAggregatorVariable string `pulumi:"perTunnelQosAggregatorVariable"`
	// Variable name
	PerTunnelQosVariable string `pulumi:"perTunnelQosVariable"`
	// Enable policer
	Policers []GetVpnInterfaceDslPppoaFeatureTemplatePolicer `pulumi:"policers"`
	// PPP Link Authentication Protocol
	PppAuthenticationProtocol string `pulumi:"pppAuthenticationProtocol"`
	// PPP Authentication Protocol PAP
	PppAuthenticationProtocolPap bool `pulumi:"pppAuthenticationProtocolPap"`
	// Variable name
	PppAuthenticationProtocolVariable string `pulumi:"pppAuthenticationProtocolVariable"`
	// Authenticate remote on incoming call only
	PppAuthenticationType string `pulumi:"pppAuthenticationType"`
	// pvc
	Pvcs []GetVpnInterfaceDslPppoaFeatureTemplatePvc `pulumi:"pvcs"`
	// Adaptive QoS default downstream bandwidth
	QosAdaptiveBandwidthDownstream int `pulumi:"qosAdaptiveBandwidthDownstream"`
	// Variable name
	QosAdaptiveBandwidthDownstreamVariable string `pulumi:"qosAdaptiveBandwidthDownstreamVariable"`
	// Adaptive QoS default upstream bandwidth
	QosAdaptiveBandwidthUpstream int `pulumi:"qosAdaptiveBandwidthUpstream"`
	// Variable name
	QosAdaptiveBandwidthUpstreamVariable string `pulumi:"qosAdaptiveBandwidthUpstreamVariable"`
	// Downstream max bandwidth limit
	QosAdaptiveMaxDownstream int `pulumi:"qosAdaptiveMaxDownstream"`
	// Variable name
	QosAdaptiveMaxDownstreamVariable string `pulumi:"qosAdaptiveMaxDownstreamVariable"`
	// Upstream max bandwidth limit
	QosAdaptiveMaxUpstream int `pulumi:"qosAdaptiveMaxUpstream"`
	// Variable name
	QosAdaptiveMaxUpstreamVariable string `pulumi:"qosAdaptiveMaxUpstreamVariable"`
	// Downstream min bandwidth limit
	QosAdaptiveMinDownstream int `pulumi:"qosAdaptiveMinDownstream"`
	// Variable name
	QosAdaptiveMinDownstreamVariable string `pulumi:"qosAdaptiveMinDownstreamVariable"`
	// Upstream min bandwidth limit
	QosAdaptiveMinUpstream int `pulumi:"qosAdaptiveMinUpstream"`
	// Variable name
	QosAdaptiveMinUpstreamVariable string `pulumi:"qosAdaptiveMinUpstreamVariable"`
	// Periodic timer for adaptive QoS in minutes
	QosAdaptivePeriod int `pulumi:"qosAdaptivePeriod"`
	// Variable name
	QosAdaptivePeriodVariable string `pulumi:"qosAdaptivePeriodVariable"`
	// Name of QoS map
	QosMap string `pulumi:"qosMap"`
	// Variable name
	QosMapVariable string `pulumi:"qosMapVariable"`
	// Name of VPN QoS map
	QosMapVpn string `pulumi:"qosMapVpn"`
	// Variable name
	QosMapVpnVariable string `pulumi:"qosMapVpnVariable"`
	// Enable secondary region
	SecondaryRegion string `pulumi:"secondaryRegion"`
	// Variable name
	SecondaryRegionVariable string `pulumi:"secondaryRegionVariable"`
	// 1ge  interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps
	ShapingRate int `pulumi:"shapingRate"`
	// Variable name
	ShapingRateVariable string `pulumi:"shapingRateVariable"`
	// Administrative state
	Shutdown bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable string `pulumi:"shutdownVariable"`
	// TCP MSS on SYN packets, in bytes
	TcpMss int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable string `pulumi:"tcpMssVariable"`
	// The template type
	TemplateType string `pulumi:"templateType"`
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension string `pulumi:"tlocExtension"`
	// Variable name
	TlocExtensionVariable string `pulumi:"tlocExtensionVariable"`
	// Variable name
	TrackerVariable string `pulumi:"trackerVariable"`
	// Enable tracker for this interface
	Trackers []string `pulumi:"trackers"`
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set
	TunnelInterfaceAllowAll bool `pulumi:"tunnelInterfaceAllowAll"`
	// Variable name
	TunnelInterfaceAllowAllVariable string `pulumi:"tunnelInterfaceAllowAllVariable"`
	// Allow/deny BGP
	TunnelInterfaceAllowBgp bool `pulumi:"tunnelInterfaceAllowBgp"`
	// Variable name
	TunnelInterfaceAllowBgpVariable string `pulumi:"tunnelInterfaceAllowBgpVariable"`
	// Allow/Deny DHCP
	TunnelInterfaceAllowDhcp bool `pulumi:"tunnelInterfaceAllowDhcp"`
	// Variable name
	TunnelInterfaceAllowDhcpVariable string `pulumi:"tunnelInterfaceAllowDhcpVariable"`
	// Allow/Deny DNS
	TunnelInterfaceAllowDns bool `pulumi:"tunnelInterfaceAllowDns"`
	// Variable name
	TunnelInterfaceAllowDnsVariable string `pulumi:"tunnelInterfaceAllowDnsVariable"`
	// Allow/Deny Https
	TunnelInterfaceAllowHttps bool `pulumi:"tunnelInterfaceAllowHttps"`
	// Variable name
	TunnelInterfaceAllowHttpsVariable string `pulumi:"tunnelInterfaceAllowHttpsVariable"`
	// Allow/Deny ICMP
	TunnelInterfaceAllowIcmp bool `pulumi:"tunnelInterfaceAllowIcmp"`
	// Variable name
	TunnelInterfaceAllowIcmpVariable string `pulumi:"tunnelInterfaceAllowIcmpVariable"`
	// Allow/Deny NETCONF
	TunnelInterfaceAllowNetconf bool `pulumi:"tunnelInterfaceAllowNetconf"`
	// Variable name
	TunnelInterfaceAllowNetconfVariable string `pulumi:"tunnelInterfaceAllowNetconfVariable"`
	// Allow/Deny NTP
	TunnelInterfaceAllowNtp bool `pulumi:"tunnelInterfaceAllowNtp"`
	// Variable name
	TunnelInterfaceAllowNtpVariable string `pulumi:"tunnelInterfaceAllowNtpVariable"`
	// Allow/Deny OSPF
	TunnelInterfaceAllowOspf bool `pulumi:"tunnelInterfaceAllowOspf"`
	// Variable name
	TunnelInterfaceAllowOspfVariable string `pulumi:"tunnelInterfaceAllowOspfVariable"`
	// Allow/Deny SNMP
	TunnelInterfaceAllowSnmp bool `pulumi:"tunnelInterfaceAllowSnmp"`
	// Variable name
	TunnelInterfaceAllowSnmpVariable string `pulumi:"tunnelInterfaceAllowSnmpVariable"`
	// Allow/Deny SSH
	TunnelInterfaceAllowSsh bool `pulumi:"tunnelInterfaceAllowSsh"`
	// Variable name
	TunnelInterfaceAllowSshVariable string `pulumi:"tunnelInterfaceAllowSshVariable"`
	// Allow/Deny STUN
	TunnelInterfaceAllowStun bool `pulumi:"tunnelInterfaceAllowStun"`
	// Variable name
	TunnelInterfaceAllowStunVariable string `pulumi:"tunnelInterfaceAllowStunVariable"`
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel string `pulumi:"tunnelInterfaceBindLoopbackTunnel"`
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable string `pulumi:"tunnelInterfaceBindLoopbackTunnelVariable"`
	// Set TLOC as border TLOC
	TunnelInterfaceBorder bool `pulumi:"tunnelInterfaceBorder"`
	// Variable name
	TunnelInterfaceBorderVariable string `pulumi:"tunnelInterfaceBorderVariable"`
	// Set carrier for TLOC
	TunnelInterfaceCarrier string `pulumi:"tunnelInterfaceCarrier"`
	// Variable name
	TunnelInterfaceCarrierVariable string `pulumi:"tunnelInterfaceCarrierVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
	TunnelInterfaceClearDontFragment bool `pulumi:"tunnelInterfaceClearDontFragment"`
	// Variable name
	TunnelInterfaceClearDontFragmentVariable string `pulumi:"tunnelInterfaceClearDontFragmentVariable"`
	// Set color for TLOC
	TunnelInterfaceColor string `pulumi:"tunnelInterfaceColor"`
	// Restrict this TLOC behavior
	TunnelInterfaceColorRestrict bool `pulumi:"tunnelInterfaceColorRestrict"`
	// Variable name
	TunnelInterfaceColorVariable string `pulumi:"tunnelInterfaceColorVariable"`
	// Allow Control Connection
	TunnelInterfaceControlConnections bool `pulumi:"tunnelInterfaceControlConnections"`
	// Variable name
	TunnelInterfaceControlConnectionsVariable string `pulumi:"tunnelInterfaceControlConnectionsVariable"`
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations []GetVpnInterfaceDslPppoaFeatureTemplateTunnelInterfaceEncapsulation `pulumi:"tunnelInterfaceEncapsulations"`
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable string `pulumi:"tunnelInterfaceExcludeControllerGroupListVariable"`
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists []int `pulumi:"tunnelInterfaceExcludeControllerGroupLists"`
	// List of groups
	TunnelInterfaceGroups []int `pulumi:"tunnelInterfaceGroups"`
	// Variable name
	TunnelInterfaceGroupsVariable string `pulumi:"tunnelInterfaceGroupsVariable"`
	// Set time period of control hello packets \n\n milli seconds
	TunnelInterfaceHelloInterval int `pulumi:"tunnelInterfaceHelloInterval"`
	// Variable name
	TunnelInterfaceHelloIntervalVariable string `pulumi:"tunnelInterfaceHelloIntervalVariable"`
	// Set tolerance of control hello packets \n\n seconds
	TunnelInterfaceHelloTolerance int `pulumi:"tunnelInterfaceHelloTolerance"`
	// Variable name
	TunnelInterfaceHelloToleranceVariable string `pulumi:"tunnelInterfaceHelloToleranceVariable"`
	// Set TLOC as last resort
	TunnelInterfaceLastResortCircuit bool `pulumi:"tunnelInterfaceLastResortCircuit"`
	// Variable name
	TunnelInterfaceLastResortCircuitVariable string `pulumi:"tunnelInterfaceLastResortCircuitVariable"`
	// Set the interface as a low-bandwidth circuit
	TunnelInterfaceLowBandwidthLink bool `pulumi:"tunnelInterfaceLowBandwidthLink"`
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable string `pulumi:"tunnelInterfaceLowBandwidthLinkVariable"`
	// Set the maximum number of control connections for this TLOC
	TunnelInterfaceMaxControlConnections int `pulumi:"tunnelInterfaceMaxControlConnections"`
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable string `pulumi:"tunnelInterfaceMaxControlConnectionsVariable"`
	// Set time period of nat refresh packets \n\n seconds
	TunnelInterfaceNatRefreshInterval int `pulumi:"tunnelInterfaceNatRefreshInterval"`
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable string `pulumi:"tunnelInterfaceNatRefreshIntervalVariable"`
	// Accept and respond to network-prefix-directed broadcasts)
	TunnelInterfaceNetworkBroadcast bool `pulumi:"tunnelInterfaceNetworkBroadcast"`
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable string `pulumi:"tunnelInterfaceNetworkBroadcastVariable"`
	// Disallow port hopping on the tunnel interface
	TunnelInterfacePortHop bool `pulumi:"tunnelInterfacePortHop"`
	// Variable name
	TunnelInterfacePortHopVariable string `pulumi:"tunnelInterfacePortHopVariable"`
	// Tunnel TCP MSS on SYN packets, in bytes
	TunnelInterfaceTunnelTcpMss int `pulumi:"tunnelInterfaceTunnelTcpMss"`
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable string `pulumi:"tunnelInterfaceTunnelTcpMssVariable"`
	// Put this wan interface in STUN mode only
	TunnelInterfaceVbondAsStunServer bool `pulumi:"tunnelInterfaceVbondAsStunServer"`
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable string `pulumi:"tunnelInterfaceVbondAsStunServerVariable"`
	// Set interface preference for control connection to vManage \n\n
	TunnelInterfaceVmanageConnectionPreference int `pulumi:"tunnelInterfaceVmanageConnectionPreference"`
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable string `pulumi:"tunnelInterfaceVmanageConnectionPreferenceVariable"`
	// Set tunnel QoS mode
	TunnelQosMode string `pulumi:"tunnelQosMode"`
	// Variable name
	TunnelQosModeVariable string `pulumi:"tunnelQosModeVariable"`
	// vdsl
	VdslConfigurations []GetVpnInterfaceDslPppoaFeatureTemplateVdslConfiguration `pulumi:"vdslConfigurations"`
	// The version of the feature template
	Version int `pulumi:"version"`
	// Name of rewrite rule
	WriteRule string `pulumi:"writeRule"`
	// Variable name
	WriteRuleVariable string `pulumi:"writeRuleVariable"`
}

func LookupVpnInterfaceDslPppoaFeatureTemplateOutput(ctx *pulumi.Context, args LookupVpnInterfaceDslPppoaFeatureTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput, error) {
			args := v.(LookupVpnInterfaceDslPppoaFeatureTemplateArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sdwan:index/getVpnInterfaceDslPppoaFeatureTemplate:getVpnInterfaceDslPppoaFeatureTemplate", args, LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput{}, options).(LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput), nil
		}).(LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput)
}

// A collection of arguments for invoking getVpnInterfaceDslPppoaFeatureTemplate.
type LookupVpnInterfaceDslPppoaFeatureTemplateOutputArgs struct {
	// The id of the feature template
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the feature template
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupVpnInterfaceDslPppoaFeatureTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnInterfaceDslPppoaFeatureTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getVpnInterfaceDslPppoaFeatureTemplate.
type LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnInterfaceDslPppoaFeatureTemplateResult)(nil)).Elem()
}

func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) ToLookupVpnInterfaceDslPppoaFeatureTemplateResultOutput() LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput {
	return o
}

func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) ToLookupVpnInterfaceDslPppoaFeatureTemplateResultOutputWithContext(ctx context.Context) LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput {
	return o
}

// Apply ACL
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) AccessLists() GetVpnInterfaceDslPppoaFeatureTemplateAccessListArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) []GetVpnInterfaceDslPppoaFeatureTemplateAccessList {
		return v.AccessLists
	}).(GetVpnInterfaceDslPppoaFeatureTemplateAccessListArrayOutput)
}

// Interface description
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) AtmDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.AtmDescription }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) AtmDescriptionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.AtmDescriptionVariable }).(pulumi.StringOutput)
}

// ATM Sub interface Name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) AtmSubInterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.AtmSubInterfaceName }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) AtmSubInterfaceNameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.AtmSubInterfaceNameVariable }).(pulumi.StringOutput)
}

// Interface downstream bandwidth capacity, in kbps
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) BandwidthDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int { return v.BandwidthDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) BandwidthDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.BandwidthDownstreamVariable }).(pulumi.StringOutput)
}

// Interface upstream bandwidth capacity, in kbps
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) BandwidthUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int { return v.BandwidthUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) BandwidthUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.BandwidthUpstreamVariable }).(pulumi.StringOutput)
}

// CHAP Hostname
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) ChapHostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.ChapHostname }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) ChapHostnameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.ChapHostnameVariable }).(pulumi.StringOutput)
}

// Specify ppp authentication Password
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) ChapPppAuthPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.ChapPppAuthPassword }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) ChapPppAuthPasswordVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.ChapPppAuthPasswordVariable }).(pulumi.StringOutput)
}

// Enable core region
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) CoreRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.CoreRegion }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) CoreRegionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.CoreRegionVariable }).(pulumi.StringOutput)
}

// The description of the feature template
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) []string { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Enable core region
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) EnableCoreRegion() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.EnableCoreRegion }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) EnableCoreRegionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.EnableCoreRegionVariable }).(pulumi.StringOutput)
}

// The id of the feature template
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// IP Directed-Broadcast
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) IpDirectedBroadcast() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.IpDirectedBroadcast }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) IpDirectedBroadcastVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.IpDirectedBroadcastVariable }).(pulumi.StringOutput)
}

// Interface MTU \n\n, in bytes
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) IpMtu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int { return v.IpMtu }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) IpMtuVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.IpMtuVariable }).(pulumi.StringOutput)
}

// The name of the feature template
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// Network Address Translation on this interface
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) Nat() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.Nat }).(pulumi.BoolOutput)
}

// Block inbound ICMP error messages
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) NatBlockIcmpError() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.NatBlockIcmpError }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) NatBlockIcmpErrorVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.NatBlockIcmpErrorVariable }).(pulumi.StringOutput)
}

// Set port-forwarding rules for NAT on this interface
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) NatPortForwards() GetVpnInterfaceDslPppoaFeatureTemplateNatPortForwardArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) []GetVpnInterfaceDslPppoaFeatureTemplateNatPortForward {
		return v.NatPortForwards
	}).(GetVpnInterfaceDslPppoaFeatureTemplateNatPortForwardArrayOutput)
}

// Set NAT refresh mode
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) NatRefreshMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.NatRefreshMode }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) NatRefreshModeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.NatRefreshModeVariable }).(pulumi.StringOutput)
}

// Respond to ping requests to NAT interface ip address from the public side
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) NatResponseToPing() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.NatResponseToPing }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) NatResponseToPingVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.NatResponseToPingVariable }).(pulumi.StringOutput)
}

// Set NAT TCP session timeout, in minutes
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) NatTcpTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int { return v.NatTcpTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) NatTcpTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.NatTcpTimeoutVariable }).(pulumi.StringOutput)
}

// Set NAT UDP session timeout, in minutes
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) NatUdpTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int { return v.NatUdpTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) NatUdpTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.NatUdpTimeoutVariable }).(pulumi.StringOutput)
}

// PAP outbound Password
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) PapPassword() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.PapPassword }).(pulumi.BoolOutput)
}

// Specify ppp authentication Password
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) PapPppAuthPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.PapPppAuthPassword }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) PapPppAuthPasswordVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.PapPppAuthPasswordVariable }).(pulumi.StringOutput)
}

// PAP outbound Sent Username
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) PapUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.PapUsername }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) PapUsernameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.PapUsernameVariable }).(pulumi.StringOutput)
}

// Per-tunnel Qos
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) PerTunnelQos() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.PerTunnelQos }).(pulumi.BoolOutput)
}

// Per-tunnel QoS Aggregator
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) PerTunnelQosAggregator() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.PerTunnelQosAggregator }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) PerTunnelQosAggregatorVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.PerTunnelQosAggregatorVariable
	}).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) PerTunnelQosVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.PerTunnelQosVariable }).(pulumi.StringOutput)
}

// Enable policer
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) Policers() GetVpnInterfaceDslPppoaFeatureTemplatePolicerArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) []GetVpnInterfaceDslPppoaFeatureTemplatePolicer {
		return v.Policers
	}).(GetVpnInterfaceDslPppoaFeatureTemplatePolicerArrayOutput)
}

// PPP Link Authentication Protocol
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) PppAuthenticationProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.PppAuthenticationProtocol }).(pulumi.StringOutput)
}

// PPP Authentication Protocol PAP
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) PppAuthenticationProtocolPap() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.PppAuthenticationProtocolPap }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) PppAuthenticationProtocolVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.PppAuthenticationProtocolVariable
	}).(pulumi.StringOutput)
}

// Authenticate remote on incoming call only
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) PppAuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.PppAuthenticationType }).(pulumi.StringOutput)
}

// pvc
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) Pvcs() GetVpnInterfaceDslPppoaFeatureTemplatePvcArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) []GetVpnInterfaceDslPppoaFeatureTemplatePvc {
		return v.Pvcs
	}).(GetVpnInterfaceDslPppoaFeatureTemplatePvcArrayOutput)
}

// Adaptive QoS default downstream bandwidth
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) QosAdaptiveBandwidthDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int { return v.QosAdaptiveBandwidthDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) QosAdaptiveBandwidthDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.QosAdaptiveBandwidthDownstreamVariable
	}).(pulumi.StringOutput)
}

// Adaptive QoS default upstream bandwidth
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) QosAdaptiveBandwidthUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int { return v.QosAdaptiveBandwidthUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) QosAdaptiveBandwidthUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.QosAdaptiveBandwidthUpstreamVariable
	}).(pulumi.StringOutput)
}

// Downstream max bandwidth limit
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) QosAdaptiveMaxDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int { return v.QosAdaptiveMaxDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) QosAdaptiveMaxDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.QosAdaptiveMaxDownstreamVariable
	}).(pulumi.StringOutput)
}

// Upstream max bandwidth limit
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) QosAdaptiveMaxUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int { return v.QosAdaptiveMaxUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) QosAdaptiveMaxUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.QosAdaptiveMaxUpstreamVariable
	}).(pulumi.StringOutput)
}

// Downstream min bandwidth limit
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) QosAdaptiveMinDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int { return v.QosAdaptiveMinDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) QosAdaptiveMinDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.QosAdaptiveMinDownstreamVariable
	}).(pulumi.StringOutput)
}

// Upstream min bandwidth limit
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) QosAdaptiveMinUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int { return v.QosAdaptiveMinUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) QosAdaptiveMinUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.QosAdaptiveMinUpstreamVariable
	}).(pulumi.StringOutput)
}

// Periodic timer for adaptive QoS in minutes
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) QosAdaptivePeriod() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int { return v.QosAdaptivePeriod }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) QosAdaptivePeriodVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.QosAdaptivePeriodVariable }).(pulumi.StringOutput)
}

// Name of QoS map
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) QosMap() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.QosMap }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) QosMapVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.QosMapVariable }).(pulumi.StringOutput)
}

// Name of VPN QoS map
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) QosMapVpn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.QosMapVpn }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) QosMapVpnVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.QosMapVpnVariable }).(pulumi.StringOutput)
}

// Enable secondary region
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) SecondaryRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.SecondaryRegion }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) SecondaryRegionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.SecondaryRegionVariable }).(pulumi.StringOutput)
}

// 1ge  interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) ShapingRate() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int { return v.ShapingRate }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) ShapingRateVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.ShapingRateVariable }).(pulumi.StringOutput)
}

// Administrative state
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) Shutdown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.Shutdown }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) ShutdownVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.ShutdownVariable }).(pulumi.StringOutput)
}

// TCP MSS on SYN packets, in bytes
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TcpMss() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int { return v.TcpMss }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TcpMssVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.TcpMssVariable }).(pulumi.StringOutput)
}

// The template type
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.TemplateType }).(pulumi.StringOutput)
}

// Extends a local TLOC to a remote node only for vpn 0
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TlocExtension() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.TlocExtension }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TlocExtensionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.TlocExtensionVariable }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TrackerVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.TrackerVariable }).(pulumi.StringOutput)
}

// Enable tracker for this interface
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) Trackers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) []string { return v.Trackers }).(pulumi.StringArrayOutput)
}

// Allow all traffic. Overrides all other allow-service options if allow-service all is set
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowAll() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.TunnelInterfaceAllowAll }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowAllVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowAllVariable
	}).(pulumi.StringOutput)
}

// Allow/deny BGP
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowBgp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.TunnelInterfaceAllowBgp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowBgpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowBgpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny DHCP
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowDhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.TunnelInterfaceAllowDhcp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowDhcpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowDhcpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny DNS
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowDns() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.TunnelInterfaceAllowDns }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowDnsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowDnsVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny Https
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowHttps() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.TunnelInterfaceAllowHttps }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowHttpsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowHttpsVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny ICMP
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowIcmp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.TunnelInterfaceAllowIcmp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowIcmpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowIcmpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny NETCONF
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowNetconf() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.TunnelInterfaceAllowNetconf }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowNetconfVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowNetconfVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny NTP
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowNtp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.TunnelInterfaceAllowNtp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowNtpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowNtpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny OSPF
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowOspf() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.TunnelInterfaceAllowOspf }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowOspfVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowOspfVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny SNMP
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowSnmp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.TunnelInterfaceAllowSnmp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowSnmpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowSnmpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny SSH
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowSsh() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.TunnelInterfaceAllowSsh }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowSshVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowSshVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny STUN
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowStun() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.TunnelInterfaceAllowStun }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceAllowStunVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowStunVariable
	}).(pulumi.StringOutput)
}

// Bind loopback tunnel interface to a physical interface
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceBindLoopbackTunnel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceBindLoopbackTunnel
	}).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceBindLoopbackTunnelVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceBindLoopbackTunnelVariable
	}).(pulumi.StringOutput)
}

// Set TLOC as border TLOC
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceBorder() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.TunnelInterfaceBorder }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceBorderVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.TunnelInterfaceBorderVariable }).(pulumi.StringOutput)
}

// Set carrier for TLOC
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceCarrier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.TunnelInterfaceCarrier }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceCarrierVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceCarrierVariable
	}).(pulumi.StringOutput)
}

// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceClearDontFragment() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool {
		return v.TunnelInterfaceClearDontFragment
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceClearDontFragmentVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceClearDontFragmentVariable
	}).(pulumi.StringOutput)
}

// Set color for TLOC
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceColor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.TunnelInterfaceColor }).(pulumi.StringOutput)
}

// Restrict this TLOC behavior
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceColorRestrict() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.TunnelInterfaceColorRestrict }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceColorVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.TunnelInterfaceColorVariable }).(pulumi.StringOutput)
}

// Allow Control Connection
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceControlConnections() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool {
		return v.TunnelInterfaceControlConnections
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceControlConnectionsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceControlConnectionsVariable
	}).(pulumi.StringOutput)
}

// Encapsulation for TLOC
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceEncapsulations() GetVpnInterfaceDslPppoaFeatureTemplateTunnelInterfaceEncapsulationArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) []GetVpnInterfaceDslPppoaFeatureTemplateTunnelInterfaceEncapsulation {
		return v.TunnelInterfaceEncapsulations
	}).(GetVpnInterfaceDslPppoaFeatureTemplateTunnelInterfaceEncapsulationArrayOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceExcludeControllerGroupListVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceExcludeControllerGroupListVariable
	}).(pulumi.StringOutput)
}

// Exclude the following controller groups defined in this list
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceExcludeControllerGroupLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) []int {
		return v.TunnelInterfaceExcludeControllerGroupLists
	}).(pulumi.IntArrayOutput)
}

// List of groups
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceGroups() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) []int { return v.TunnelInterfaceGroups }).(pulumi.IntArrayOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceGroupsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.TunnelInterfaceGroupsVariable }).(pulumi.StringOutput)
}

// Set time period of control hello packets \n\n milli seconds
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceHelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int { return v.TunnelInterfaceHelloInterval }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceHelloIntervalVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceHelloIntervalVariable
	}).(pulumi.StringOutput)
}

// Set tolerance of control hello packets \n\n seconds
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceHelloTolerance() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int { return v.TunnelInterfaceHelloTolerance }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceHelloToleranceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceHelloToleranceVariable
	}).(pulumi.StringOutput)
}

// Set TLOC as last resort
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceLastResortCircuit() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool {
		return v.TunnelInterfaceLastResortCircuit
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceLastResortCircuitVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceLastResortCircuitVariable
	}).(pulumi.StringOutput)
}

// Set the interface as a low-bandwidth circuit
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceLowBandwidthLink() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.TunnelInterfaceLowBandwidthLink }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceLowBandwidthLinkVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceLowBandwidthLinkVariable
	}).(pulumi.StringOutput)
}

// Set the maximum number of control connections for this TLOC
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceMaxControlConnections() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int {
		return v.TunnelInterfaceMaxControlConnections
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceMaxControlConnectionsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceMaxControlConnectionsVariable
	}).(pulumi.StringOutput)
}

// Set time period of nat refresh packets \n\n seconds
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceNatRefreshInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int {
		return v.TunnelInterfaceNatRefreshInterval
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceNatRefreshIntervalVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceNatRefreshIntervalVariable
	}).(pulumi.StringOutput)
}

// Accept and respond to network-prefix-directed broadcasts)
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceNetworkBroadcast() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.TunnelInterfaceNetworkBroadcast }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceNetworkBroadcastVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceNetworkBroadcastVariable
	}).(pulumi.StringOutput)
}

// Disallow port hopping on the tunnel interface
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfacePortHop() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool { return v.TunnelInterfacePortHop }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfacePortHopVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfacePortHopVariable
	}).(pulumi.StringOutput)
}

// Tunnel TCP MSS on SYN packets, in bytes
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceTunnelTcpMss() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int { return v.TunnelInterfaceTunnelTcpMss }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceTunnelTcpMssVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceTunnelTcpMssVariable
	}).(pulumi.StringOutput)
}

// Put this wan interface in STUN mode only
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceVbondAsStunServer() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) bool {
		return v.TunnelInterfaceVbondAsStunServer
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceVbondAsStunServerVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceVbondAsStunServerVariable
	}).(pulumi.StringOutput)
}

// Set interface preference for control connection to vManage \n\n
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceVmanageConnectionPreference() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int {
		return v.TunnelInterfaceVmanageConnectionPreference
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelInterfaceVmanageConnectionPreferenceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string {
		return v.TunnelInterfaceVmanageConnectionPreferenceVariable
	}).(pulumi.StringOutput)
}

// Set tunnel QoS mode
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelQosMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.TunnelQosMode }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) TunnelQosModeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.TunnelQosModeVariable }).(pulumi.StringOutput)
}

// vdsl
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) VdslConfigurations() GetVpnInterfaceDslPppoaFeatureTemplateVdslConfigurationArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) []GetVpnInterfaceDslPppoaFeatureTemplateVdslConfiguration {
		return v.VdslConfigurations
	}).(GetVpnInterfaceDslPppoaFeatureTemplateVdslConfigurationArrayOutput)
}

// The version of the feature template
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) int { return v.Version }).(pulumi.IntOutput)
}

// Name of rewrite rule
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) WriteRule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.WriteRule }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput) WriteRuleVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoaFeatureTemplateResult) string { return v.WriteRuleVariable }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpnInterfaceDslPppoaFeatureTemplateResultOutput{})
}
