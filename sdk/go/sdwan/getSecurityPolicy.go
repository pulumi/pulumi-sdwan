// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Security Policy .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupSecurityPolicy(ctx, &sdwan.LookupSecurityPolicyArgs{
//				Id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSecurityPolicy(ctx *pulumi.Context, args *LookupSecurityPolicyArgs, opts ...pulumi.InvokeOption) (*LookupSecurityPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSecurityPolicyResult
	err := ctx.Invoke("sdwan:index/getSecurityPolicy:getSecurityPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityPolicy.
type LookupSecurityPolicyArgs struct {
	// The id of the object
	Id string `pulumi:"id"`
}

// A collection of values returned by getSecurityPolicy.
type LookupSecurityPolicyResult struct {
	// Audit trail
	AuditTrail string `pulumi:"auditTrail"`
	// List of policy definitions
	Definitions []GetSecurityPolicyDefinition `pulumi:"definitions"`
	// The description of the security policy
	Description string `pulumi:"description"`
	// Bypass firewall policy and allow all Internet traffic to/from VPN 0
	DirectInternetApplications string `pulumi:"directInternetApplications"`
	// Failure mode
	FailureMode string `pulumi:"failureMode"`
	// High Speed Logging Server IP
	HighSpeedLoggingServerIp string `pulumi:"highSpeedLoggingServerIp"`
	// High Speed Logging Port
	HighSpeedLoggingServerPort string `pulumi:"highSpeedLoggingServerPort"`
	// High Speed Logging VPN
	HighSpeedLoggingVpn string `pulumi:"highSpeedLoggingVpn"`
	// The id of the object
	Id       string                     `pulumi:"id"`
	Loggings []GetSecurityPolicyLogging `pulumi:"loggings"`
	// Match Statistics per-filter
	MatchStatisticsPerFilter string `pulumi:"matchStatisticsPerFilter"`
	// The policy mode
	Mode string `pulumi:"mode"`
	// The name of the security policy
	Name string `pulumi:"name"`
	// TCP SYN Flood Limit, value from 1 to 4294967295
	TcpSynFloodLimit string `pulumi:"tcpSynFloodLimit"`
	// The use case of the security policy
	UseCase string `pulumi:"useCase"`
	// The version of the object
	Version int `pulumi:"version"`
}

func LookupSecurityPolicyOutput(ctx *pulumi.Context, args LookupSecurityPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupSecurityPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSecurityPolicyResult, error) {
			args := v.(LookupSecurityPolicyArgs)
			r, err := LookupSecurityPolicy(ctx, &args, opts...)
			var s LookupSecurityPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSecurityPolicyResultOutput)
}

// A collection of arguments for invoking getSecurityPolicy.
type LookupSecurityPolicyOutputArgs struct {
	// The id of the object
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupSecurityPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityPolicy.
type LookupSecurityPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupSecurityPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityPolicyResult)(nil)).Elem()
}

func (o LookupSecurityPolicyResultOutput) ToLookupSecurityPolicyResultOutput() LookupSecurityPolicyResultOutput {
	return o
}

func (o LookupSecurityPolicyResultOutput) ToLookupSecurityPolicyResultOutputWithContext(ctx context.Context) LookupSecurityPolicyResultOutput {
	return o
}

// Audit trail
func (o LookupSecurityPolicyResultOutput) AuditTrail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityPolicyResult) string { return v.AuditTrail }).(pulumi.StringOutput)
}

// List of policy definitions
func (o LookupSecurityPolicyResultOutput) Definitions() GetSecurityPolicyDefinitionArrayOutput {
	return o.ApplyT(func(v LookupSecurityPolicyResult) []GetSecurityPolicyDefinition { return v.Definitions }).(GetSecurityPolicyDefinitionArrayOutput)
}

// The description of the security policy
func (o LookupSecurityPolicyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityPolicyResult) string { return v.Description }).(pulumi.StringOutput)
}

// Bypass firewall policy and allow all Internet traffic to/from VPN 0
func (o LookupSecurityPolicyResultOutput) DirectInternetApplications() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityPolicyResult) string { return v.DirectInternetApplications }).(pulumi.StringOutput)
}

// Failure mode
func (o LookupSecurityPolicyResultOutput) FailureMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityPolicyResult) string { return v.FailureMode }).(pulumi.StringOutput)
}

// High Speed Logging Server IP
func (o LookupSecurityPolicyResultOutput) HighSpeedLoggingServerIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityPolicyResult) string { return v.HighSpeedLoggingServerIp }).(pulumi.StringOutput)
}

// High Speed Logging Port
func (o LookupSecurityPolicyResultOutput) HighSpeedLoggingServerPort() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityPolicyResult) string { return v.HighSpeedLoggingServerPort }).(pulumi.StringOutput)
}

// High Speed Logging VPN
func (o LookupSecurityPolicyResultOutput) HighSpeedLoggingVpn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityPolicyResult) string { return v.HighSpeedLoggingVpn }).(pulumi.StringOutput)
}

// The id of the object
func (o LookupSecurityPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSecurityPolicyResultOutput) Loggings() GetSecurityPolicyLoggingArrayOutput {
	return o.ApplyT(func(v LookupSecurityPolicyResult) []GetSecurityPolicyLogging { return v.Loggings }).(GetSecurityPolicyLoggingArrayOutput)
}

// Match Statistics per-filter
func (o LookupSecurityPolicyResultOutput) MatchStatisticsPerFilter() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityPolicyResult) string { return v.MatchStatisticsPerFilter }).(pulumi.StringOutput)
}

// The policy mode
func (o LookupSecurityPolicyResultOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityPolicyResult) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the security policy
func (o LookupSecurityPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// TCP SYN Flood Limit, value from 1 to 4294967295
func (o LookupSecurityPolicyResultOutput) TcpSynFloodLimit() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityPolicyResult) string { return v.TcpSynFloodLimit }).(pulumi.StringOutput)
}

// The use case of the security policy
func (o LookupSecurityPolicyResultOutput) UseCase() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityPolicyResult) string { return v.UseCase }).(pulumi.StringOutput)
}

// The version of the object
func (o LookupSecurityPolicyResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSecurityPolicyResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSecurityPolicyResultOutput{})
}
