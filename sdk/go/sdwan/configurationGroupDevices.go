// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Configuration Group Devices .
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewConfigurationGroupDevices(ctx, "example", &sdwan.ConfigurationGroupDevicesArgs{
//				ConfigurationGroupId: pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				Devices: sdwan.ConfigurationGroupDevicesDeviceArray{
//					&sdwan.ConfigurationGroupDevicesDeviceArgs{
//						Id: pulumi.String("C8K-15411CCC-D476-0B3B-21F2-5D6AC387EE7B"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/configurationGroupDevices:ConfigurationGroupDevices example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type ConfigurationGroupDevices struct {
	pulumi.CustomResourceState

	// Configuration Group ID
	ConfigurationGroupId pulumi.StringOutput `pulumi:"configurationGroupId"`
	// List of devices
	Devices ConfigurationGroupDevicesDeviceArrayOutput `pulumi:"devices"`
}

// NewConfigurationGroupDevices registers a new resource with the given unique name, arguments, and options.
func NewConfigurationGroupDevices(ctx *pulumi.Context,
	name string, args *ConfigurationGroupDevicesArgs, opts ...pulumi.ResourceOption) (*ConfigurationGroupDevices, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigurationGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationGroupId'")
	}
	if args.Devices == nil {
		return nil, errors.New("invalid value for required argument 'Devices'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConfigurationGroupDevices
	err := ctx.RegisterResource("sdwan:index/configurationGroupDevices:ConfigurationGroupDevices", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigurationGroupDevices gets an existing ConfigurationGroupDevices resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigurationGroupDevices(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigurationGroupDevicesState, opts ...pulumi.ResourceOption) (*ConfigurationGroupDevices, error) {
	var resource ConfigurationGroupDevices
	err := ctx.ReadResource("sdwan:index/configurationGroupDevices:ConfigurationGroupDevices", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigurationGroupDevices resources.
type configurationGroupDevicesState struct {
	// Configuration Group ID
	ConfigurationGroupId *string `pulumi:"configurationGroupId"`
	// List of devices
	Devices []ConfigurationGroupDevicesDevice `pulumi:"devices"`
}

type ConfigurationGroupDevicesState struct {
	// Configuration Group ID
	ConfigurationGroupId pulumi.StringPtrInput
	// List of devices
	Devices ConfigurationGroupDevicesDeviceArrayInput
}

func (ConfigurationGroupDevicesState) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationGroupDevicesState)(nil)).Elem()
}

type configurationGroupDevicesArgs struct {
	// Configuration Group ID
	ConfigurationGroupId string `pulumi:"configurationGroupId"`
	// List of devices
	Devices []ConfigurationGroupDevicesDevice `pulumi:"devices"`
}

// The set of arguments for constructing a ConfigurationGroupDevices resource.
type ConfigurationGroupDevicesArgs struct {
	// Configuration Group ID
	ConfigurationGroupId pulumi.StringInput
	// List of devices
	Devices ConfigurationGroupDevicesDeviceArrayInput
}

func (ConfigurationGroupDevicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationGroupDevicesArgs)(nil)).Elem()
}

type ConfigurationGroupDevicesInput interface {
	pulumi.Input

	ToConfigurationGroupDevicesOutput() ConfigurationGroupDevicesOutput
	ToConfigurationGroupDevicesOutputWithContext(ctx context.Context) ConfigurationGroupDevicesOutput
}

func (*ConfigurationGroupDevices) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationGroupDevices)(nil)).Elem()
}

func (i *ConfigurationGroupDevices) ToConfigurationGroupDevicesOutput() ConfigurationGroupDevicesOutput {
	return i.ToConfigurationGroupDevicesOutputWithContext(context.Background())
}

func (i *ConfigurationGroupDevices) ToConfigurationGroupDevicesOutputWithContext(ctx context.Context) ConfigurationGroupDevicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationGroupDevicesOutput)
}

// ConfigurationGroupDevicesArrayInput is an input type that accepts ConfigurationGroupDevicesArray and ConfigurationGroupDevicesArrayOutput values.
// You can construct a concrete instance of `ConfigurationGroupDevicesArrayInput` via:
//
//	ConfigurationGroupDevicesArray{ ConfigurationGroupDevicesArgs{...} }
type ConfigurationGroupDevicesArrayInput interface {
	pulumi.Input

	ToConfigurationGroupDevicesArrayOutput() ConfigurationGroupDevicesArrayOutput
	ToConfigurationGroupDevicesArrayOutputWithContext(context.Context) ConfigurationGroupDevicesArrayOutput
}

type ConfigurationGroupDevicesArray []ConfigurationGroupDevicesInput

func (ConfigurationGroupDevicesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigurationGroupDevices)(nil)).Elem()
}

func (i ConfigurationGroupDevicesArray) ToConfigurationGroupDevicesArrayOutput() ConfigurationGroupDevicesArrayOutput {
	return i.ToConfigurationGroupDevicesArrayOutputWithContext(context.Background())
}

func (i ConfigurationGroupDevicesArray) ToConfigurationGroupDevicesArrayOutputWithContext(ctx context.Context) ConfigurationGroupDevicesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationGroupDevicesArrayOutput)
}

// ConfigurationGroupDevicesMapInput is an input type that accepts ConfigurationGroupDevicesMap and ConfigurationGroupDevicesMapOutput values.
// You can construct a concrete instance of `ConfigurationGroupDevicesMapInput` via:
//
//	ConfigurationGroupDevicesMap{ "key": ConfigurationGroupDevicesArgs{...} }
type ConfigurationGroupDevicesMapInput interface {
	pulumi.Input

	ToConfigurationGroupDevicesMapOutput() ConfigurationGroupDevicesMapOutput
	ToConfigurationGroupDevicesMapOutputWithContext(context.Context) ConfigurationGroupDevicesMapOutput
}

type ConfigurationGroupDevicesMap map[string]ConfigurationGroupDevicesInput

func (ConfigurationGroupDevicesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigurationGroupDevices)(nil)).Elem()
}

func (i ConfigurationGroupDevicesMap) ToConfigurationGroupDevicesMapOutput() ConfigurationGroupDevicesMapOutput {
	return i.ToConfigurationGroupDevicesMapOutputWithContext(context.Background())
}

func (i ConfigurationGroupDevicesMap) ToConfigurationGroupDevicesMapOutputWithContext(ctx context.Context) ConfigurationGroupDevicesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationGroupDevicesMapOutput)
}

type ConfigurationGroupDevicesOutput struct{ *pulumi.OutputState }

func (ConfigurationGroupDevicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationGroupDevices)(nil)).Elem()
}

func (o ConfigurationGroupDevicesOutput) ToConfigurationGroupDevicesOutput() ConfigurationGroupDevicesOutput {
	return o
}

func (o ConfigurationGroupDevicesOutput) ToConfigurationGroupDevicesOutputWithContext(ctx context.Context) ConfigurationGroupDevicesOutput {
	return o
}

// Configuration Group ID
func (o ConfigurationGroupDevicesOutput) ConfigurationGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationGroupDevices) pulumi.StringOutput { return v.ConfigurationGroupId }).(pulumi.StringOutput)
}

// List of devices
func (o ConfigurationGroupDevicesOutput) Devices() ConfigurationGroupDevicesDeviceArrayOutput {
	return o.ApplyT(func(v *ConfigurationGroupDevices) ConfigurationGroupDevicesDeviceArrayOutput { return v.Devices }).(ConfigurationGroupDevicesDeviceArrayOutput)
}

type ConfigurationGroupDevicesArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationGroupDevicesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigurationGroupDevices)(nil)).Elem()
}

func (o ConfigurationGroupDevicesArrayOutput) ToConfigurationGroupDevicesArrayOutput() ConfigurationGroupDevicesArrayOutput {
	return o
}

func (o ConfigurationGroupDevicesArrayOutput) ToConfigurationGroupDevicesArrayOutputWithContext(ctx context.Context) ConfigurationGroupDevicesArrayOutput {
	return o
}

func (o ConfigurationGroupDevicesArrayOutput) Index(i pulumi.IntInput) ConfigurationGroupDevicesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConfigurationGroupDevices {
		return vs[0].([]*ConfigurationGroupDevices)[vs[1].(int)]
	}).(ConfigurationGroupDevicesOutput)
}

type ConfigurationGroupDevicesMapOutput struct{ *pulumi.OutputState }

func (ConfigurationGroupDevicesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigurationGroupDevices)(nil)).Elem()
}

func (o ConfigurationGroupDevicesMapOutput) ToConfigurationGroupDevicesMapOutput() ConfigurationGroupDevicesMapOutput {
	return o
}

func (o ConfigurationGroupDevicesMapOutput) ToConfigurationGroupDevicesMapOutputWithContext(ctx context.Context) ConfigurationGroupDevicesMapOutput {
	return o
}

func (o ConfigurationGroupDevicesMapOutput) MapIndex(k pulumi.StringInput) ConfigurationGroupDevicesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConfigurationGroupDevices {
		return vs[0].(map[string]*ConfigurationGroupDevices)[vs[1].(string)]
	}).(ConfigurationGroupDevicesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationGroupDevicesInput)(nil)).Elem(), &ConfigurationGroupDevices{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationGroupDevicesArrayInput)(nil)).Elem(), ConfigurationGroupDevicesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationGroupDevicesMapInput)(nil)).Elem(), ConfigurationGroupDevicesMap{})
	pulumi.RegisterOutputType(ConfigurationGroupDevicesOutput{})
	pulumi.RegisterOutputType(ConfigurationGroupDevicesArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationGroupDevicesMapOutput{})
}
