// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a IPv4 Prefix List Policy Object .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewIpv4PrefixListPolicyObject(ctx, "example", &sdwan.Ipv4PrefixListPolicyObjectArgs{
//				Name: pulumi.String("Example"),
//				Entries: sdwan.Ipv4PrefixListPolicyObjectEntryArray{
//					&sdwan.Ipv4PrefixListPolicyObjectEntryArgs{
//						Prefix: pulumi.String("10.0.0.0/12"),
//						Le:     pulumi.Int(32),
//						Ge:     pulumi.Int(24),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/ipv4PrefixListPolicyObject:Ipv4PrefixListPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type Ipv4PrefixListPolicyObject struct {
	pulumi.CustomResourceState

	// List of entries
	Entries Ipv4PrefixListPolicyObjectEntryArrayOutput `pulumi:"entries"`
	// The name of the policy object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewIpv4PrefixListPolicyObject registers a new resource with the given unique name, arguments, and options.
func NewIpv4PrefixListPolicyObject(ctx *pulumi.Context,
	name string, args *Ipv4PrefixListPolicyObjectArgs, opts ...pulumi.ResourceOption) (*Ipv4PrefixListPolicyObject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ipv4PrefixListPolicyObject
	err := ctx.RegisterResource("sdwan:index/ipv4PrefixListPolicyObject:Ipv4PrefixListPolicyObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpv4PrefixListPolicyObject gets an existing Ipv4PrefixListPolicyObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpv4PrefixListPolicyObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Ipv4PrefixListPolicyObjectState, opts ...pulumi.ResourceOption) (*Ipv4PrefixListPolicyObject, error) {
	var resource Ipv4PrefixListPolicyObject
	err := ctx.ReadResource("sdwan:index/ipv4PrefixListPolicyObject:Ipv4PrefixListPolicyObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ipv4PrefixListPolicyObject resources.
type ipv4PrefixListPolicyObjectState struct {
	// List of entries
	Entries []Ipv4PrefixListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type Ipv4PrefixListPolicyObjectState struct {
	// List of entries
	Entries Ipv4PrefixListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (Ipv4PrefixListPolicyObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipv4PrefixListPolicyObjectState)(nil)).Elem()
}

type ipv4PrefixListPolicyObjectArgs struct {
	// List of entries
	Entries []Ipv4PrefixListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a Ipv4PrefixListPolicyObject resource.
type Ipv4PrefixListPolicyObjectArgs struct {
	// List of entries
	Entries Ipv4PrefixListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
}

func (Ipv4PrefixListPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipv4PrefixListPolicyObjectArgs)(nil)).Elem()
}

type Ipv4PrefixListPolicyObjectInput interface {
	pulumi.Input

	ToIpv4PrefixListPolicyObjectOutput() Ipv4PrefixListPolicyObjectOutput
	ToIpv4PrefixListPolicyObjectOutputWithContext(ctx context.Context) Ipv4PrefixListPolicyObjectOutput
}

func (*Ipv4PrefixListPolicyObject) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv4PrefixListPolicyObject)(nil)).Elem()
}

func (i *Ipv4PrefixListPolicyObject) ToIpv4PrefixListPolicyObjectOutput() Ipv4PrefixListPolicyObjectOutput {
	return i.ToIpv4PrefixListPolicyObjectOutputWithContext(context.Background())
}

func (i *Ipv4PrefixListPolicyObject) ToIpv4PrefixListPolicyObjectOutputWithContext(ctx context.Context) Ipv4PrefixListPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv4PrefixListPolicyObjectOutput)
}

// Ipv4PrefixListPolicyObjectArrayInput is an input type that accepts Ipv4PrefixListPolicyObjectArray and Ipv4PrefixListPolicyObjectArrayOutput values.
// You can construct a concrete instance of `Ipv4PrefixListPolicyObjectArrayInput` via:
//
//	Ipv4PrefixListPolicyObjectArray{ Ipv4PrefixListPolicyObjectArgs{...} }
type Ipv4PrefixListPolicyObjectArrayInput interface {
	pulumi.Input

	ToIpv4PrefixListPolicyObjectArrayOutput() Ipv4PrefixListPolicyObjectArrayOutput
	ToIpv4PrefixListPolicyObjectArrayOutputWithContext(context.Context) Ipv4PrefixListPolicyObjectArrayOutput
}

type Ipv4PrefixListPolicyObjectArray []Ipv4PrefixListPolicyObjectInput

func (Ipv4PrefixListPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ipv4PrefixListPolicyObject)(nil)).Elem()
}

func (i Ipv4PrefixListPolicyObjectArray) ToIpv4PrefixListPolicyObjectArrayOutput() Ipv4PrefixListPolicyObjectArrayOutput {
	return i.ToIpv4PrefixListPolicyObjectArrayOutputWithContext(context.Background())
}

func (i Ipv4PrefixListPolicyObjectArray) ToIpv4PrefixListPolicyObjectArrayOutputWithContext(ctx context.Context) Ipv4PrefixListPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv4PrefixListPolicyObjectArrayOutput)
}

// Ipv4PrefixListPolicyObjectMapInput is an input type that accepts Ipv4PrefixListPolicyObjectMap and Ipv4PrefixListPolicyObjectMapOutput values.
// You can construct a concrete instance of `Ipv4PrefixListPolicyObjectMapInput` via:
//
//	Ipv4PrefixListPolicyObjectMap{ "key": Ipv4PrefixListPolicyObjectArgs{...} }
type Ipv4PrefixListPolicyObjectMapInput interface {
	pulumi.Input

	ToIpv4PrefixListPolicyObjectMapOutput() Ipv4PrefixListPolicyObjectMapOutput
	ToIpv4PrefixListPolicyObjectMapOutputWithContext(context.Context) Ipv4PrefixListPolicyObjectMapOutput
}

type Ipv4PrefixListPolicyObjectMap map[string]Ipv4PrefixListPolicyObjectInput

func (Ipv4PrefixListPolicyObjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ipv4PrefixListPolicyObject)(nil)).Elem()
}

func (i Ipv4PrefixListPolicyObjectMap) ToIpv4PrefixListPolicyObjectMapOutput() Ipv4PrefixListPolicyObjectMapOutput {
	return i.ToIpv4PrefixListPolicyObjectMapOutputWithContext(context.Background())
}

func (i Ipv4PrefixListPolicyObjectMap) ToIpv4PrefixListPolicyObjectMapOutputWithContext(ctx context.Context) Ipv4PrefixListPolicyObjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv4PrefixListPolicyObjectMapOutput)
}

type Ipv4PrefixListPolicyObjectOutput struct{ *pulumi.OutputState }

func (Ipv4PrefixListPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv4PrefixListPolicyObject)(nil)).Elem()
}

func (o Ipv4PrefixListPolicyObjectOutput) ToIpv4PrefixListPolicyObjectOutput() Ipv4PrefixListPolicyObjectOutput {
	return o
}

func (o Ipv4PrefixListPolicyObjectOutput) ToIpv4PrefixListPolicyObjectOutputWithContext(ctx context.Context) Ipv4PrefixListPolicyObjectOutput {
	return o
}

// List of entries
func (o Ipv4PrefixListPolicyObjectOutput) Entries() Ipv4PrefixListPolicyObjectEntryArrayOutput {
	return o.ApplyT(func(v *Ipv4PrefixListPolicyObject) Ipv4PrefixListPolicyObjectEntryArrayOutput { return v.Entries }).(Ipv4PrefixListPolicyObjectEntryArrayOutput)
}

// The name of the policy object
func (o Ipv4PrefixListPolicyObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv4PrefixListPolicyObject) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the object
func (o Ipv4PrefixListPolicyObjectOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *Ipv4PrefixListPolicyObject) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type Ipv4PrefixListPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (Ipv4PrefixListPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ipv4PrefixListPolicyObject)(nil)).Elem()
}

func (o Ipv4PrefixListPolicyObjectArrayOutput) ToIpv4PrefixListPolicyObjectArrayOutput() Ipv4PrefixListPolicyObjectArrayOutput {
	return o
}

func (o Ipv4PrefixListPolicyObjectArrayOutput) ToIpv4PrefixListPolicyObjectArrayOutputWithContext(ctx context.Context) Ipv4PrefixListPolicyObjectArrayOutput {
	return o
}

func (o Ipv4PrefixListPolicyObjectArrayOutput) Index(i pulumi.IntInput) Ipv4PrefixListPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ipv4PrefixListPolicyObject {
		return vs[0].([]*Ipv4PrefixListPolicyObject)[vs[1].(int)]
	}).(Ipv4PrefixListPolicyObjectOutput)
}

type Ipv4PrefixListPolicyObjectMapOutput struct{ *pulumi.OutputState }

func (Ipv4PrefixListPolicyObjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ipv4PrefixListPolicyObject)(nil)).Elem()
}

func (o Ipv4PrefixListPolicyObjectMapOutput) ToIpv4PrefixListPolicyObjectMapOutput() Ipv4PrefixListPolicyObjectMapOutput {
	return o
}

func (o Ipv4PrefixListPolicyObjectMapOutput) ToIpv4PrefixListPolicyObjectMapOutputWithContext(ctx context.Context) Ipv4PrefixListPolicyObjectMapOutput {
	return o
}

func (o Ipv4PrefixListPolicyObjectMapOutput) MapIndex(k pulumi.StringInput) Ipv4PrefixListPolicyObjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ipv4PrefixListPolicyObject {
		return vs[0].(map[string]*Ipv4PrefixListPolicyObject)[vs[1].(string)]
	}).(Ipv4PrefixListPolicyObjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv4PrefixListPolicyObjectInput)(nil)).Elem(), &Ipv4PrefixListPolicyObject{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv4PrefixListPolicyObjectArrayInput)(nil)).Elem(), Ipv4PrefixListPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv4PrefixListPolicyObjectMapInput)(nil)).Elem(), Ipv4PrefixListPolicyObjectMap{})
	pulumi.RegisterOutputType(Ipv4PrefixListPolicyObjectOutput{})
	pulumi.RegisterOutputType(Ipv4PrefixListPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(Ipv4PrefixListPolicyObjectMapOutput{})
}
