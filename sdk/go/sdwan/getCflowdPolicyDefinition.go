// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Cflowd Policy Definition .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupCflowdPolicyDefinition(ctx, &sdwan.LookupCflowdPolicyDefinitionArgs{
//				Id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCflowdPolicyDefinition(ctx *pulumi.Context, args *LookupCflowdPolicyDefinitionArgs, opts ...pulumi.InvokeOption) (*LookupCflowdPolicyDefinitionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCflowdPolicyDefinitionResult
	err := ctx.Invoke("sdwan:index/getCflowdPolicyDefinition:getCflowdPolicyDefinition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCflowdPolicyDefinition.
type LookupCflowdPolicyDefinitionArgs struct {
	// The id of the object
	Id string `pulumi:"id"`
}

// A collection of values returned by getCflowdPolicyDefinition.
type LookupCflowdPolicyDefinitionResult struct {
	// Active flow timeout in seconds
	ActiveFlowTimeout int `pulumi:"activeFlowTimeout"`
	// List of collectors
	Collectors []GetCflowdPolicyDefinitionCollector `pulumi:"collectors"`
	// The description of the policy definition
	Description string `pulumi:"description"`
	// Flow refresh in seconds
	FlowRefresh int `pulumi:"flowRefresh"`
	// The id of the object
	Id string `pulumi:"id"`
	// Inactive flow timeout in seconds
	InactiveFlowTimeout int `pulumi:"inactiveFlowTimeout"`
	// The name of the policy definition
	Name string `pulumi:"name"`
	// Protocol, either `ipv4`, `ipv6` or `all`
	Protocol string `pulumi:"protocol"`
	// Collect remarked DSCP
	RemarkedDscp bool `pulumi:"remarkedDscp"`
	// Flow sampling interval
	SamplingInterval int `pulumi:"samplingInterval"`
	// Collect TOS record field
	Tos bool `pulumi:"tos"`
	// Type
	Type string `pulumi:"type"`
	// The version of the object
	Version int `pulumi:"version"`
}

func LookupCflowdPolicyDefinitionOutput(ctx *pulumi.Context, args LookupCflowdPolicyDefinitionOutputArgs, opts ...pulumi.InvokeOption) LookupCflowdPolicyDefinitionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCflowdPolicyDefinitionResultOutput, error) {
			args := v.(LookupCflowdPolicyDefinitionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sdwan:index/getCflowdPolicyDefinition:getCflowdPolicyDefinition", args, LookupCflowdPolicyDefinitionResultOutput{}, options).(LookupCflowdPolicyDefinitionResultOutput), nil
		}).(LookupCflowdPolicyDefinitionResultOutput)
}

// A collection of arguments for invoking getCflowdPolicyDefinition.
type LookupCflowdPolicyDefinitionOutputArgs struct {
	// The id of the object
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupCflowdPolicyDefinitionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCflowdPolicyDefinitionArgs)(nil)).Elem()
}

// A collection of values returned by getCflowdPolicyDefinition.
type LookupCflowdPolicyDefinitionResultOutput struct{ *pulumi.OutputState }

func (LookupCflowdPolicyDefinitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCflowdPolicyDefinitionResult)(nil)).Elem()
}

func (o LookupCflowdPolicyDefinitionResultOutput) ToLookupCflowdPolicyDefinitionResultOutput() LookupCflowdPolicyDefinitionResultOutput {
	return o
}

func (o LookupCflowdPolicyDefinitionResultOutput) ToLookupCflowdPolicyDefinitionResultOutputWithContext(ctx context.Context) LookupCflowdPolicyDefinitionResultOutput {
	return o
}

// Active flow timeout in seconds
func (o LookupCflowdPolicyDefinitionResultOutput) ActiveFlowTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCflowdPolicyDefinitionResult) int { return v.ActiveFlowTimeout }).(pulumi.IntOutput)
}

// List of collectors
func (o LookupCflowdPolicyDefinitionResultOutput) Collectors() GetCflowdPolicyDefinitionCollectorArrayOutput {
	return o.ApplyT(func(v LookupCflowdPolicyDefinitionResult) []GetCflowdPolicyDefinitionCollector { return v.Collectors }).(GetCflowdPolicyDefinitionCollectorArrayOutput)
}

// The description of the policy definition
func (o LookupCflowdPolicyDefinitionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCflowdPolicyDefinitionResult) string { return v.Description }).(pulumi.StringOutput)
}

// Flow refresh in seconds
func (o LookupCflowdPolicyDefinitionResultOutput) FlowRefresh() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCflowdPolicyDefinitionResult) int { return v.FlowRefresh }).(pulumi.IntOutput)
}

// The id of the object
func (o LookupCflowdPolicyDefinitionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCflowdPolicyDefinitionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Inactive flow timeout in seconds
func (o LookupCflowdPolicyDefinitionResultOutput) InactiveFlowTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCflowdPolicyDefinitionResult) int { return v.InactiveFlowTimeout }).(pulumi.IntOutput)
}

// The name of the policy definition
func (o LookupCflowdPolicyDefinitionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCflowdPolicyDefinitionResult) string { return v.Name }).(pulumi.StringOutput)
}

// Protocol, either `ipv4`, `ipv6` or `all`
func (o LookupCflowdPolicyDefinitionResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCflowdPolicyDefinitionResult) string { return v.Protocol }).(pulumi.StringOutput)
}

// Collect remarked DSCP
func (o LookupCflowdPolicyDefinitionResultOutput) RemarkedDscp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCflowdPolicyDefinitionResult) bool { return v.RemarkedDscp }).(pulumi.BoolOutput)
}

// Flow sampling interval
func (o LookupCflowdPolicyDefinitionResultOutput) SamplingInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCflowdPolicyDefinitionResult) int { return v.SamplingInterval }).(pulumi.IntOutput)
}

// Collect TOS record field
func (o LookupCflowdPolicyDefinitionResultOutput) Tos() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCflowdPolicyDefinitionResult) bool { return v.Tos }).(pulumi.BoolOutput)
}

// Type
func (o LookupCflowdPolicyDefinitionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCflowdPolicyDefinitionResult) string { return v.Type }).(pulumi.StringOutput)
}

// The version of the object
func (o LookupCflowdPolicyDefinitionResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCflowdPolicyDefinitionResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCflowdPolicyDefinitionResultOutput{})
}
