// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Transport WAN VPN Interface Ethernet Feature Associate IPv6 Tracker Feature .
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature(ctx, "example", &sdwan.TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArgs{
//				FeatureProfileId:                          pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				TransportWanVpnFeatureId:                  pulumi.String("140331f6-5418-4755-a059-13c77eb96037"),
//				TransportWanVpnInterfaceEthernetFeatureId: pulumi.String("140331f6-5418-4755-a059-13c77eb96037"),
//				TransportIpv6TrackerFeatureId:             pulumi.String("140331f6-5418-4755-a059-13c77eb96037"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Expected import identifier with the format: "transport_wan_vpn_interface_ethernet_feature_associate_ipv6_tracker_feature_id,feature_profile_id,transport_wan_vpn_feature_id,transport_wan_vpn_interface_ethernet_feature_id"
//
// ```sh
// $ pulumi import sdwan:index/transportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature:TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037,140331f6-5418-4755-a059-13c77eb96037"
// ```
type TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature struct {
	pulumi.CustomResourceState

	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// Transport IPv6 Tracker Feature ID
	TransportIpv6TrackerFeatureId pulumi.StringOutput `pulumi:"transportIpv6TrackerFeatureId"`
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId pulumi.StringOutput `pulumi:"transportWanVpnFeatureId"`
	// Transport WAN VPN Interface Ethernet Feature ID
	TransportWanVpnInterfaceEthernetFeatureId pulumi.StringOutput `pulumi:"transportWanVpnInterfaceEthernetFeatureId"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature registers a new resource with the given unique name, arguments, and options.
func NewTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature(ctx *pulumi.Context,
	name string, args *TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArgs, opts ...pulumi.ResourceOption) (*TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	if args.TransportIpv6TrackerFeatureId == nil {
		return nil, errors.New("invalid value for required argument 'TransportIpv6TrackerFeatureId'")
	}
	if args.TransportWanVpnFeatureId == nil {
		return nil, errors.New("invalid value for required argument 'TransportWanVpnFeatureId'")
	}
	if args.TransportWanVpnInterfaceEthernetFeatureId == nil {
		return nil, errors.New("invalid value for required argument 'TransportWanVpnInterfaceEthernetFeatureId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature
	err := ctx.RegisterResource("sdwan:index/transportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature:TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature gets an existing TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureState, opts ...pulumi.ResourceOption) (*TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature, error) {
	var resource TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature
	err := ctx.ReadResource("sdwan:index/transportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature:TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature resources.
type transportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureState struct {
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// Transport IPv6 Tracker Feature ID
	TransportIpv6TrackerFeatureId *string `pulumi:"transportIpv6TrackerFeatureId"`
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId *string `pulumi:"transportWanVpnFeatureId"`
	// Transport WAN VPN Interface Ethernet Feature ID
	TransportWanVpnInterfaceEthernetFeatureId *string `pulumi:"transportWanVpnInterfaceEthernetFeatureId"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureState struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// Transport IPv6 Tracker Feature ID
	TransportIpv6TrackerFeatureId pulumi.StringPtrInput
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId pulumi.StringPtrInput
	// Transport WAN VPN Interface Ethernet Feature ID
	TransportWanVpnInterfaceEthernetFeatureId pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*transportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureState)(nil)).Elem()
}

type transportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// Transport IPv6 Tracker Feature ID
	TransportIpv6TrackerFeatureId string `pulumi:"transportIpv6TrackerFeatureId"`
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId string `pulumi:"transportWanVpnFeatureId"`
	// Transport WAN VPN Interface Ethernet Feature ID
	TransportWanVpnInterfaceEthernetFeatureId string `pulumi:"transportWanVpnInterfaceEthernetFeatureId"`
}

// The set of arguments for constructing a TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature resource.
type TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// Transport IPv6 Tracker Feature ID
	TransportIpv6TrackerFeatureId pulumi.StringInput
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId pulumi.StringInput
	// Transport WAN VPN Interface Ethernet Feature ID
	TransportWanVpnInterfaceEthernetFeatureId pulumi.StringInput
}

func (TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArgs)(nil)).Elem()
}

type TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureInput interface {
	pulumi.Input

	ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput() TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput
	ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput
}

func (*TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature)(nil)).Elem()
}

func (i *TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature) ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput() TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput {
	return i.ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutputWithContext(context.Background())
}

func (i *TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature) ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput)
}

// TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayInput is an input type that accepts TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArray and TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutput values.
// You can construct a concrete instance of `TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayInput` via:
//
//	TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArray{ TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArgs{...} }
type TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayInput interface {
	pulumi.Input

	ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutput() TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutput
	ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutputWithContext(context.Context) TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutput
}

type TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArray []TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureInput

func (TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature)(nil)).Elem()
}

func (i TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArray) ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutput() TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutput {
	return i.ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutputWithContext(context.Background())
}

func (i TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArray) ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutput)
}

// TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapInput is an input type that accepts TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMap and TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutput values.
// You can construct a concrete instance of `TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapInput` via:
//
//	TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMap{ "key": TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArgs{...} }
type TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapInput interface {
	pulumi.Input

	ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutput() TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutput
	ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutputWithContext(context.Context) TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutput
}

type TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMap map[string]TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureInput

func (TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature)(nil)).Elem()
}

func (i TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMap) ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutput() TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutput {
	return i.ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutputWithContext(context.Background())
}

func (i TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMap) ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutput)
}

type TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput struct{ *pulumi.OutputState }

func (TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature)(nil)).Elem()
}

func (o TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput) ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput() TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput {
	return o
}

func (o TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput) ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput {
	return o
}

// Feature Profile ID
func (o TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature) pulumi.StringOutput {
		return v.FeatureProfileId
	}).(pulumi.StringOutput)
}

// Transport IPv6 Tracker Feature ID
func (o TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput) TransportIpv6TrackerFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature) pulumi.StringOutput {
		return v.TransportIpv6TrackerFeatureId
	}).(pulumi.StringOutput)
}

// Transport WAN VPN Feature ID
func (o TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput) TransportWanVpnFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature) pulumi.StringOutput {
		return v.TransportWanVpnFeatureId
	}).(pulumi.StringOutput)
}

// Transport WAN VPN Interface Ethernet Feature ID
func (o TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput) TransportWanVpnInterfaceEthernetFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature) pulumi.StringOutput {
		return v.TransportWanVpnInterfaceEthernetFeatureId
	}).(pulumi.StringOutput)
}

// The version of the object
func (o TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature) pulumi.IntOutput {
		return v.Version
	}).(pulumi.IntOutput)
}

type TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutput struct{ *pulumi.OutputState }

func (TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature)(nil)).Elem()
}

func (o TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutput) ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutput() TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutput {
	return o
}

func (o TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutput) ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutput {
	return o
}

func (o TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutput) Index(i pulumi.IntInput) TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature {
		return vs[0].([]*TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature)[vs[1].(int)]
	}).(TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput)
}

type TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutput struct{ *pulumi.OutputState }

func (TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature)(nil)).Elem()
}

func (o TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutput) ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutput() TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutput {
	return o
}

func (o TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutput) ToTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutput {
	return o
}

func (o TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutput) MapIndex(k pulumi.StringInput) TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature {
		return vs[0].(map[string]*TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature)[vs[1].(string)]
	}).(TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureInput)(nil)).Elem(), &TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayInput)(nil)).Elem(), TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapInput)(nil)).Elem(), TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMap{})
	pulumi.RegisterOutputType(TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureOutput{})
	pulumi.RegisterOutputType(TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureArrayOutput{})
	pulumi.RegisterOutputType(TransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerFeatureMapOutput{})
}
