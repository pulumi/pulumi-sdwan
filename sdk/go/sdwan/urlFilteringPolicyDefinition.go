// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a URL Filtering Policy Definition .
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/urlFilteringPolicyDefinition:UrlFilteringPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type UrlFilteringPolicyDefinition struct {
	pulumi.CustomResourceState

	// List of alerts options that will be exported as syslog messages
	Alerts pulumi.StringArrayOutput `pulumi:"alerts"`
	// Allow URL list ID
	AllowUrlListId pulumi.StringPtrOutput `pulumi:"allowUrlListId"`
	// Allow URL list version
	AllowUrlListVersion pulumi.IntPtrOutput `pulumi:"allowUrlListVersion"`
	// Redirect to a URL or display a message when a blocked page is accessed. - Choices: `text`, `redirectUrl`
	BlockPageAction pulumi.StringPtrOutput `pulumi:"blockPageAction"`
	// The message displayed or URL redirected to when a blocked page is accessed.
	BlockPageContents pulumi.StringPtrOutput `pulumi:"blockPageContents"`
	// Block URL list ID
	BlockUrlListId pulumi.StringPtrOutput `pulumi:"blockUrlListId"`
	// Block URL list version
	BlockUrlListVersion pulumi.IntPtrOutput `pulumi:"blockUrlListVersion"`
	// The description of the policy definition.
	Description pulumi.StringOutput                            `pulumi:"description"`
	Loggings    UrlFilteringPolicyDefinitionLoggingArrayOutput `pulumi:"loggings"`
	// The policy mode - Choices: `security`, `unified`
	Mode pulumi.StringPtrOutput `pulumi:"mode"`
	// The name of the policy definition.
	Name pulumi.StringOutput `pulumi:"name"`
	// List of VPN IDs
	TargetVpns pulumi.StringArrayOutput `pulumi:"targetVpns"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
	// List of categories to block or allow
	WebCategories pulumi.StringArrayOutput `pulumi:"webCategories"`
	// whether the selected web categories should be blocked or allowed. - Choices: `block`, `allow`
	WebCategoriesAction pulumi.StringPtrOutput `pulumi:"webCategoriesAction"`
	// The web reputation of the policy definition - Choices: `high-risk`, `suspicious`, `moderate-risk`, `low-risk`,
	// `trustworthy`
	WebReputation pulumi.StringPtrOutput `pulumi:"webReputation"`
}

// NewUrlFilteringPolicyDefinition registers a new resource with the given unique name, arguments, and options.
func NewUrlFilteringPolicyDefinition(ctx *pulumi.Context,
	name string, args *UrlFilteringPolicyDefinitionArgs, opts ...pulumi.ResourceOption) (*UrlFilteringPolicyDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UrlFilteringPolicyDefinition
	err := ctx.RegisterResource("sdwan:index/urlFilteringPolicyDefinition:UrlFilteringPolicyDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUrlFilteringPolicyDefinition gets an existing UrlFilteringPolicyDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUrlFilteringPolicyDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UrlFilteringPolicyDefinitionState, opts ...pulumi.ResourceOption) (*UrlFilteringPolicyDefinition, error) {
	var resource UrlFilteringPolicyDefinition
	err := ctx.ReadResource("sdwan:index/urlFilteringPolicyDefinition:UrlFilteringPolicyDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UrlFilteringPolicyDefinition resources.
type urlFilteringPolicyDefinitionState struct {
	// List of alerts options that will be exported as syslog messages
	Alerts []string `pulumi:"alerts"`
	// Allow URL list ID
	AllowUrlListId *string `pulumi:"allowUrlListId"`
	// Allow URL list version
	AllowUrlListVersion *int `pulumi:"allowUrlListVersion"`
	// Redirect to a URL or display a message when a blocked page is accessed. - Choices: `text`, `redirectUrl`
	BlockPageAction *string `pulumi:"blockPageAction"`
	// The message displayed or URL redirected to when a blocked page is accessed.
	BlockPageContents *string `pulumi:"blockPageContents"`
	// Block URL list ID
	BlockUrlListId *string `pulumi:"blockUrlListId"`
	// Block URL list version
	BlockUrlListVersion *int `pulumi:"blockUrlListVersion"`
	// The description of the policy definition.
	Description *string                               `pulumi:"description"`
	Loggings    []UrlFilteringPolicyDefinitionLogging `pulumi:"loggings"`
	// The policy mode - Choices: `security`, `unified`
	Mode *string `pulumi:"mode"`
	// The name of the policy definition.
	Name *string `pulumi:"name"`
	// List of VPN IDs
	TargetVpns []string `pulumi:"targetVpns"`
	// The version of the object
	Version *int `pulumi:"version"`
	// List of categories to block or allow
	WebCategories []string `pulumi:"webCategories"`
	// whether the selected web categories should be blocked or allowed. - Choices: `block`, `allow`
	WebCategoriesAction *string `pulumi:"webCategoriesAction"`
	// The web reputation of the policy definition - Choices: `high-risk`, `suspicious`, `moderate-risk`, `low-risk`,
	// `trustworthy`
	WebReputation *string `pulumi:"webReputation"`
}

type UrlFilteringPolicyDefinitionState struct {
	// List of alerts options that will be exported as syslog messages
	Alerts pulumi.StringArrayInput
	// Allow URL list ID
	AllowUrlListId pulumi.StringPtrInput
	// Allow URL list version
	AllowUrlListVersion pulumi.IntPtrInput
	// Redirect to a URL or display a message when a blocked page is accessed. - Choices: `text`, `redirectUrl`
	BlockPageAction pulumi.StringPtrInput
	// The message displayed or URL redirected to when a blocked page is accessed.
	BlockPageContents pulumi.StringPtrInput
	// Block URL list ID
	BlockUrlListId pulumi.StringPtrInput
	// Block URL list version
	BlockUrlListVersion pulumi.IntPtrInput
	// The description of the policy definition.
	Description pulumi.StringPtrInput
	Loggings    UrlFilteringPolicyDefinitionLoggingArrayInput
	// The policy mode - Choices: `security`, `unified`
	Mode pulumi.StringPtrInput
	// The name of the policy definition.
	Name pulumi.StringPtrInput
	// List of VPN IDs
	TargetVpns pulumi.StringArrayInput
	// The version of the object
	Version pulumi.IntPtrInput
	// List of categories to block or allow
	WebCategories pulumi.StringArrayInput
	// whether the selected web categories should be blocked or allowed. - Choices: `block`, `allow`
	WebCategoriesAction pulumi.StringPtrInput
	// The web reputation of the policy definition - Choices: `high-risk`, `suspicious`, `moderate-risk`, `low-risk`,
	// `trustworthy`
	WebReputation pulumi.StringPtrInput
}

func (UrlFilteringPolicyDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*urlFilteringPolicyDefinitionState)(nil)).Elem()
}

type urlFilteringPolicyDefinitionArgs struct {
	// List of alerts options that will be exported as syslog messages
	Alerts []string `pulumi:"alerts"`
	// Allow URL list ID
	AllowUrlListId *string `pulumi:"allowUrlListId"`
	// Allow URL list version
	AllowUrlListVersion *int `pulumi:"allowUrlListVersion"`
	// Redirect to a URL or display a message when a blocked page is accessed. - Choices: `text`, `redirectUrl`
	BlockPageAction *string `pulumi:"blockPageAction"`
	// The message displayed or URL redirected to when a blocked page is accessed.
	BlockPageContents *string `pulumi:"blockPageContents"`
	// Block URL list ID
	BlockUrlListId *string `pulumi:"blockUrlListId"`
	// Block URL list version
	BlockUrlListVersion *int `pulumi:"blockUrlListVersion"`
	// The description of the policy definition.
	Description string                                `pulumi:"description"`
	Loggings    []UrlFilteringPolicyDefinitionLogging `pulumi:"loggings"`
	// The policy mode - Choices: `security`, `unified`
	Mode *string `pulumi:"mode"`
	// The name of the policy definition.
	Name *string `pulumi:"name"`
	// List of VPN IDs
	TargetVpns []string `pulumi:"targetVpns"`
	// List of categories to block or allow
	WebCategories []string `pulumi:"webCategories"`
	// whether the selected web categories should be blocked or allowed. - Choices: `block`, `allow`
	WebCategoriesAction *string `pulumi:"webCategoriesAction"`
	// The web reputation of the policy definition - Choices: `high-risk`, `suspicious`, `moderate-risk`, `low-risk`,
	// `trustworthy`
	WebReputation *string `pulumi:"webReputation"`
}

// The set of arguments for constructing a UrlFilteringPolicyDefinition resource.
type UrlFilteringPolicyDefinitionArgs struct {
	// List of alerts options that will be exported as syslog messages
	Alerts pulumi.StringArrayInput
	// Allow URL list ID
	AllowUrlListId pulumi.StringPtrInput
	// Allow URL list version
	AllowUrlListVersion pulumi.IntPtrInput
	// Redirect to a URL or display a message when a blocked page is accessed. - Choices: `text`, `redirectUrl`
	BlockPageAction pulumi.StringPtrInput
	// The message displayed or URL redirected to when a blocked page is accessed.
	BlockPageContents pulumi.StringPtrInput
	// Block URL list ID
	BlockUrlListId pulumi.StringPtrInput
	// Block URL list version
	BlockUrlListVersion pulumi.IntPtrInput
	// The description of the policy definition.
	Description pulumi.StringInput
	Loggings    UrlFilteringPolicyDefinitionLoggingArrayInput
	// The policy mode - Choices: `security`, `unified`
	Mode pulumi.StringPtrInput
	// The name of the policy definition.
	Name pulumi.StringPtrInput
	// List of VPN IDs
	TargetVpns pulumi.StringArrayInput
	// List of categories to block or allow
	WebCategories pulumi.StringArrayInput
	// whether the selected web categories should be blocked or allowed. - Choices: `block`, `allow`
	WebCategoriesAction pulumi.StringPtrInput
	// The web reputation of the policy definition - Choices: `high-risk`, `suspicious`, `moderate-risk`, `low-risk`,
	// `trustworthy`
	WebReputation pulumi.StringPtrInput
}

func (UrlFilteringPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*urlFilteringPolicyDefinitionArgs)(nil)).Elem()
}

type UrlFilteringPolicyDefinitionInput interface {
	pulumi.Input

	ToUrlFilteringPolicyDefinitionOutput() UrlFilteringPolicyDefinitionOutput
	ToUrlFilteringPolicyDefinitionOutputWithContext(ctx context.Context) UrlFilteringPolicyDefinitionOutput
}

func (*UrlFilteringPolicyDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**UrlFilteringPolicyDefinition)(nil)).Elem()
}

func (i *UrlFilteringPolicyDefinition) ToUrlFilteringPolicyDefinitionOutput() UrlFilteringPolicyDefinitionOutput {
	return i.ToUrlFilteringPolicyDefinitionOutputWithContext(context.Background())
}

func (i *UrlFilteringPolicyDefinition) ToUrlFilteringPolicyDefinitionOutputWithContext(ctx context.Context) UrlFilteringPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlFilteringPolicyDefinitionOutput)
}

// UrlFilteringPolicyDefinitionArrayInput is an input type that accepts UrlFilteringPolicyDefinitionArray and UrlFilteringPolicyDefinitionArrayOutput values.
// You can construct a concrete instance of `UrlFilteringPolicyDefinitionArrayInput` via:
//
//	UrlFilteringPolicyDefinitionArray{ UrlFilteringPolicyDefinitionArgs{...} }
type UrlFilteringPolicyDefinitionArrayInput interface {
	pulumi.Input

	ToUrlFilteringPolicyDefinitionArrayOutput() UrlFilteringPolicyDefinitionArrayOutput
	ToUrlFilteringPolicyDefinitionArrayOutputWithContext(context.Context) UrlFilteringPolicyDefinitionArrayOutput
}

type UrlFilteringPolicyDefinitionArray []UrlFilteringPolicyDefinitionInput

func (UrlFilteringPolicyDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UrlFilteringPolicyDefinition)(nil)).Elem()
}

func (i UrlFilteringPolicyDefinitionArray) ToUrlFilteringPolicyDefinitionArrayOutput() UrlFilteringPolicyDefinitionArrayOutput {
	return i.ToUrlFilteringPolicyDefinitionArrayOutputWithContext(context.Background())
}

func (i UrlFilteringPolicyDefinitionArray) ToUrlFilteringPolicyDefinitionArrayOutputWithContext(ctx context.Context) UrlFilteringPolicyDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlFilteringPolicyDefinitionArrayOutput)
}

// UrlFilteringPolicyDefinitionMapInput is an input type that accepts UrlFilteringPolicyDefinitionMap and UrlFilteringPolicyDefinitionMapOutput values.
// You can construct a concrete instance of `UrlFilteringPolicyDefinitionMapInput` via:
//
//	UrlFilteringPolicyDefinitionMap{ "key": UrlFilteringPolicyDefinitionArgs{...} }
type UrlFilteringPolicyDefinitionMapInput interface {
	pulumi.Input

	ToUrlFilteringPolicyDefinitionMapOutput() UrlFilteringPolicyDefinitionMapOutput
	ToUrlFilteringPolicyDefinitionMapOutputWithContext(context.Context) UrlFilteringPolicyDefinitionMapOutput
}

type UrlFilteringPolicyDefinitionMap map[string]UrlFilteringPolicyDefinitionInput

func (UrlFilteringPolicyDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UrlFilteringPolicyDefinition)(nil)).Elem()
}

func (i UrlFilteringPolicyDefinitionMap) ToUrlFilteringPolicyDefinitionMapOutput() UrlFilteringPolicyDefinitionMapOutput {
	return i.ToUrlFilteringPolicyDefinitionMapOutputWithContext(context.Background())
}

func (i UrlFilteringPolicyDefinitionMap) ToUrlFilteringPolicyDefinitionMapOutputWithContext(ctx context.Context) UrlFilteringPolicyDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlFilteringPolicyDefinitionMapOutput)
}

type UrlFilteringPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (UrlFilteringPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UrlFilteringPolicyDefinition)(nil)).Elem()
}

func (o UrlFilteringPolicyDefinitionOutput) ToUrlFilteringPolicyDefinitionOutput() UrlFilteringPolicyDefinitionOutput {
	return o
}

func (o UrlFilteringPolicyDefinitionOutput) ToUrlFilteringPolicyDefinitionOutputWithContext(ctx context.Context) UrlFilteringPolicyDefinitionOutput {
	return o
}

// List of alerts options that will be exported as syslog messages
func (o UrlFilteringPolicyDefinitionOutput) Alerts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UrlFilteringPolicyDefinition) pulumi.StringArrayOutput { return v.Alerts }).(pulumi.StringArrayOutput)
}

// Allow URL list ID
func (o UrlFilteringPolicyDefinitionOutput) AllowUrlListId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UrlFilteringPolicyDefinition) pulumi.StringPtrOutput { return v.AllowUrlListId }).(pulumi.StringPtrOutput)
}

// Allow URL list version
func (o UrlFilteringPolicyDefinitionOutput) AllowUrlListVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UrlFilteringPolicyDefinition) pulumi.IntPtrOutput { return v.AllowUrlListVersion }).(pulumi.IntPtrOutput)
}

// Redirect to a URL or display a message when a blocked page is accessed. - Choices: `text`, `redirectUrl`
func (o UrlFilteringPolicyDefinitionOutput) BlockPageAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UrlFilteringPolicyDefinition) pulumi.StringPtrOutput { return v.BlockPageAction }).(pulumi.StringPtrOutput)
}

// The message displayed or URL redirected to when a blocked page is accessed.
func (o UrlFilteringPolicyDefinitionOutput) BlockPageContents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UrlFilteringPolicyDefinition) pulumi.StringPtrOutput { return v.BlockPageContents }).(pulumi.StringPtrOutput)
}

// Block URL list ID
func (o UrlFilteringPolicyDefinitionOutput) BlockUrlListId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UrlFilteringPolicyDefinition) pulumi.StringPtrOutput { return v.BlockUrlListId }).(pulumi.StringPtrOutput)
}

// Block URL list version
func (o UrlFilteringPolicyDefinitionOutput) BlockUrlListVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UrlFilteringPolicyDefinition) pulumi.IntPtrOutput { return v.BlockUrlListVersion }).(pulumi.IntPtrOutput)
}

// The description of the policy definition.
func (o UrlFilteringPolicyDefinitionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *UrlFilteringPolicyDefinition) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o UrlFilteringPolicyDefinitionOutput) Loggings() UrlFilteringPolicyDefinitionLoggingArrayOutput {
	return o.ApplyT(func(v *UrlFilteringPolicyDefinition) UrlFilteringPolicyDefinitionLoggingArrayOutput {
		return v.Loggings
	}).(UrlFilteringPolicyDefinitionLoggingArrayOutput)
}

// The policy mode - Choices: `security`, `unified`
func (o UrlFilteringPolicyDefinitionOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UrlFilteringPolicyDefinition) pulumi.StringPtrOutput { return v.Mode }).(pulumi.StringPtrOutput)
}

// The name of the policy definition.
func (o UrlFilteringPolicyDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *UrlFilteringPolicyDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of VPN IDs
func (o UrlFilteringPolicyDefinitionOutput) TargetVpns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UrlFilteringPolicyDefinition) pulumi.StringArrayOutput { return v.TargetVpns }).(pulumi.StringArrayOutput)
}

// The version of the object
func (o UrlFilteringPolicyDefinitionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *UrlFilteringPolicyDefinition) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

// List of categories to block or allow
func (o UrlFilteringPolicyDefinitionOutput) WebCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UrlFilteringPolicyDefinition) pulumi.StringArrayOutput { return v.WebCategories }).(pulumi.StringArrayOutput)
}

// whether the selected web categories should be blocked or allowed. - Choices: `block`, `allow`
func (o UrlFilteringPolicyDefinitionOutput) WebCategoriesAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UrlFilteringPolicyDefinition) pulumi.StringPtrOutput { return v.WebCategoriesAction }).(pulumi.StringPtrOutput)
}

// The web reputation of the policy definition - Choices: `high-risk`, `suspicious`, `moderate-risk`, `low-risk`,
// `trustworthy`
func (o UrlFilteringPolicyDefinitionOutput) WebReputation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UrlFilteringPolicyDefinition) pulumi.StringPtrOutput { return v.WebReputation }).(pulumi.StringPtrOutput)
}

type UrlFilteringPolicyDefinitionArrayOutput struct{ *pulumi.OutputState }

func (UrlFilteringPolicyDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UrlFilteringPolicyDefinition)(nil)).Elem()
}

func (o UrlFilteringPolicyDefinitionArrayOutput) ToUrlFilteringPolicyDefinitionArrayOutput() UrlFilteringPolicyDefinitionArrayOutput {
	return o
}

func (o UrlFilteringPolicyDefinitionArrayOutput) ToUrlFilteringPolicyDefinitionArrayOutputWithContext(ctx context.Context) UrlFilteringPolicyDefinitionArrayOutput {
	return o
}

func (o UrlFilteringPolicyDefinitionArrayOutput) Index(i pulumi.IntInput) UrlFilteringPolicyDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UrlFilteringPolicyDefinition {
		return vs[0].([]*UrlFilteringPolicyDefinition)[vs[1].(int)]
	}).(UrlFilteringPolicyDefinitionOutput)
}

type UrlFilteringPolicyDefinitionMapOutput struct{ *pulumi.OutputState }

func (UrlFilteringPolicyDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UrlFilteringPolicyDefinition)(nil)).Elem()
}

func (o UrlFilteringPolicyDefinitionMapOutput) ToUrlFilteringPolicyDefinitionMapOutput() UrlFilteringPolicyDefinitionMapOutput {
	return o
}

func (o UrlFilteringPolicyDefinitionMapOutput) ToUrlFilteringPolicyDefinitionMapOutputWithContext(ctx context.Context) UrlFilteringPolicyDefinitionMapOutput {
	return o
}

func (o UrlFilteringPolicyDefinitionMapOutput) MapIndex(k pulumi.StringInput) UrlFilteringPolicyDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UrlFilteringPolicyDefinition {
		return vs[0].(map[string]*UrlFilteringPolicyDefinition)[vs[1].(string)]
	}).(UrlFilteringPolicyDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UrlFilteringPolicyDefinitionInput)(nil)).Elem(), &UrlFilteringPolicyDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlFilteringPolicyDefinitionArrayInput)(nil)).Elem(), UrlFilteringPolicyDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlFilteringPolicyDefinitionMapInput)(nil)).Elem(), UrlFilteringPolicyDefinitionMap{})
	pulumi.RegisterOutputType(UrlFilteringPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(UrlFilteringPolicyDefinitionArrayOutput{})
	pulumi.RegisterOutputType(UrlFilteringPolicyDefinitionMapOutput{})
}
