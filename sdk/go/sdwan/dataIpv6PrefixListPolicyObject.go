// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Data IPv6 Prefix List Policy Object .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewDataIpv6PrefixListPolicyObject(ctx, "example", &sdwan.DataIpv6PrefixListPolicyObjectArgs{
//				Name: pulumi.String("Example"),
//				Entries: sdwan.DataIpv6PrefixListPolicyObjectEntryArray{
//					&sdwan.DataIpv6PrefixListPolicyObjectEntryArgs{
//						Prefix: pulumi.String("2001:0:0:1::/64"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/dataIpv6PrefixListPolicyObject:DataIpv6PrefixListPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type DataIpv6PrefixListPolicyObject struct {
	pulumi.CustomResourceState

	// List of entries
	Entries DataIpv6PrefixListPolicyObjectEntryArrayOutput `pulumi:"entries"`
	// The name of the policy object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewDataIpv6PrefixListPolicyObject registers a new resource with the given unique name, arguments, and options.
func NewDataIpv6PrefixListPolicyObject(ctx *pulumi.Context,
	name string, args *DataIpv6PrefixListPolicyObjectArgs, opts ...pulumi.ResourceOption) (*DataIpv6PrefixListPolicyObject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DataIpv6PrefixListPolicyObject
	err := ctx.RegisterResource("sdwan:index/dataIpv6PrefixListPolicyObject:DataIpv6PrefixListPolicyObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataIpv6PrefixListPolicyObject gets an existing DataIpv6PrefixListPolicyObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataIpv6PrefixListPolicyObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataIpv6PrefixListPolicyObjectState, opts ...pulumi.ResourceOption) (*DataIpv6PrefixListPolicyObject, error) {
	var resource DataIpv6PrefixListPolicyObject
	err := ctx.ReadResource("sdwan:index/dataIpv6PrefixListPolicyObject:DataIpv6PrefixListPolicyObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataIpv6PrefixListPolicyObject resources.
type dataIpv6PrefixListPolicyObjectState struct {
	// List of entries
	Entries []DataIpv6PrefixListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type DataIpv6PrefixListPolicyObjectState struct {
	// List of entries
	Entries DataIpv6PrefixListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (DataIpv6PrefixListPolicyObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataIpv6PrefixListPolicyObjectState)(nil)).Elem()
}

type dataIpv6PrefixListPolicyObjectArgs struct {
	// List of entries
	Entries []DataIpv6PrefixListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a DataIpv6PrefixListPolicyObject resource.
type DataIpv6PrefixListPolicyObjectArgs struct {
	// List of entries
	Entries DataIpv6PrefixListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
}

func (DataIpv6PrefixListPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataIpv6PrefixListPolicyObjectArgs)(nil)).Elem()
}

type DataIpv6PrefixListPolicyObjectInput interface {
	pulumi.Input

	ToDataIpv6PrefixListPolicyObjectOutput() DataIpv6PrefixListPolicyObjectOutput
	ToDataIpv6PrefixListPolicyObjectOutputWithContext(ctx context.Context) DataIpv6PrefixListPolicyObjectOutput
}

func (*DataIpv6PrefixListPolicyObject) ElementType() reflect.Type {
	return reflect.TypeOf((**DataIpv6PrefixListPolicyObject)(nil)).Elem()
}

func (i *DataIpv6PrefixListPolicyObject) ToDataIpv6PrefixListPolicyObjectOutput() DataIpv6PrefixListPolicyObjectOutput {
	return i.ToDataIpv6PrefixListPolicyObjectOutputWithContext(context.Background())
}

func (i *DataIpv6PrefixListPolicyObject) ToDataIpv6PrefixListPolicyObjectOutputWithContext(ctx context.Context) DataIpv6PrefixListPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataIpv6PrefixListPolicyObjectOutput)
}

// DataIpv6PrefixListPolicyObjectArrayInput is an input type that accepts DataIpv6PrefixListPolicyObjectArray and DataIpv6PrefixListPolicyObjectArrayOutput values.
// You can construct a concrete instance of `DataIpv6PrefixListPolicyObjectArrayInput` via:
//
//	DataIpv6PrefixListPolicyObjectArray{ DataIpv6PrefixListPolicyObjectArgs{...} }
type DataIpv6PrefixListPolicyObjectArrayInput interface {
	pulumi.Input

	ToDataIpv6PrefixListPolicyObjectArrayOutput() DataIpv6PrefixListPolicyObjectArrayOutput
	ToDataIpv6PrefixListPolicyObjectArrayOutputWithContext(context.Context) DataIpv6PrefixListPolicyObjectArrayOutput
}

type DataIpv6PrefixListPolicyObjectArray []DataIpv6PrefixListPolicyObjectInput

func (DataIpv6PrefixListPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataIpv6PrefixListPolicyObject)(nil)).Elem()
}

func (i DataIpv6PrefixListPolicyObjectArray) ToDataIpv6PrefixListPolicyObjectArrayOutput() DataIpv6PrefixListPolicyObjectArrayOutput {
	return i.ToDataIpv6PrefixListPolicyObjectArrayOutputWithContext(context.Background())
}

func (i DataIpv6PrefixListPolicyObjectArray) ToDataIpv6PrefixListPolicyObjectArrayOutputWithContext(ctx context.Context) DataIpv6PrefixListPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataIpv6PrefixListPolicyObjectArrayOutput)
}

// DataIpv6PrefixListPolicyObjectMapInput is an input type that accepts DataIpv6PrefixListPolicyObjectMap and DataIpv6PrefixListPolicyObjectMapOutput values.
// You can construct a concrete instance of `DataIpv6PrefixListPolicyObjectMapInput` via:
//
//	DataIpv6PrefixListPolicyObjectMap{ "key": DataIpv6PrefixListPolicyObjectArgs{...} }
type DataIpv6PrefixListPolicyObjectMapInput interface {
	pulumi.Input

	ToDataIpv6PrefixListPolicyObjectMapOutput() DataIpv6PrefixListPolicyObjectMapOutput
	ToDataIpv6PrefixListPolicyObjectMapOutputWithContext(context.Context) DataIpv6PrefixListPolicyObjectMapOutput
}

type DataIpv6PrefixListPolicyObjectMap map[string]DataIpv6PrefixListPolicyObjectInput

func (DataIpv6PrefixListPolicyObjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataIpv6PrefixListPolicyObject)(nil)).Elem()
}

func (i DataIpv6PrefixListPolicyObjectMap) ToDataIpv6PrefixListPolicyObjectMapOutput() DataIpv6PrefixListPolicyObjectMapOutput {
	return i.ToDataIpv6PrefixListPolicyObjectMapOutputWithContext(context.Background())
}

func (i DataIpv6PrefixListPolicyObjectMap) ToDataIpv6PrefixListPolicyObjectMapOutputWithContext(ctx context.Context) DataIpv6PrefixListPolicyObjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataIpv6PrefixListPolicyObjectMapOutput)
}

type DataIpv6PrefixListPolicyObjectOutput struct{ *pulumi.OutputState }

func (DataIpv6PrefixListPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataIpv6PrefixListPolicyObject)(nil)).Elem()
}

func (o DataIpv6PrefixListPolicyObjectOutput) ToDataIpv6PrefixListPolicyObjectOutput() DataIpv6PrefixListPolicyObjectOutput {
	return o
}

func (o DataIpv6PrefixListPolicyObjectOutput) ToDataIpv6PrefixListPolicyObjectOutputWithContext(ctx context.Context) DataIpv6PrefixListPolicyObjectOutput {
	return o
}

// List of entries
func (o DataIpv6PrefixListPolicyObjectOutput) Entries() DataIpv6PrefixListPolicyObjectEntryArrayOutput {
	return o.ApplyT(func(v *DataIpv6PrefixListPolicyObject) DataIpv6PrefixListPolicyObjectEntryArrayOutput {
		return v.Entries
	}).(DataIpv6PrefixListPolicyObjectEntryArrayOutput)
}

// The name of the policy object
func (o DataIpv6PrefixListPolicyObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataIpv6PrefixListPolicyObject) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the object
func (o DataIpv6PrefixListPolicyObjectOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *DataIpv6PrefixListPolicyObject) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type DataIpv6PrefixListPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (DataIpv6PrefixListPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataIpv6PrefixListPolicyObject)(nil)).Elem()
}

func (o DataIpv6PrefixListPolicyObjectArrayOutput) ToDataIpv6PrefixListPolicyObjectArrayOutput() DataIpv6PrefixListPolicyObjectArrayOutput {
	return o
}

func (o DataIpv6PrefixListPolicyObjectArrayOutput) ToDataIpv6PrefixListPolicyObjectArrayOutputWithContext(ctx context.Context) DataIpv6PrefixListPolicyObjectArrayOutput {
	return o
}

func (o DataIpv6PrefixListPolicyObjectArrayOutput) Index(i pulumi.IntInput) DataIpv6PrefixListPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DataIpv6PrefixListPolicyObject {
		return vs[0].([]*DataIpv6PrefixListPolicyObject)[vs[1].(int)]
	}).(DataIpv6PrefixListPolicyObjectOutput)
}

type DataIpv6PrefixListPolicyObjectMapOutput struct{ *pulumi.OutputState }

func (DataIpv6PrefixListPolicyObjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataIpv6PrefixListPolicyObject)(nil)).Elem()
}

func (o DataIpv6PrefixListPolicyObjectMapOutput) ToDataIpv6PrefixListPolicyObjectMapOutput() DataIpv6PrefixListPolicyObjectMapOutput {
	return o
}

func (o DataIpv6PrefixListPolicyObjectMapOutput) ToDataIpv6PrefixListPolicyObjectMapOutputWithContext(ctx context.Context) DataIpv6PrefixListPolicyObjectMapOutput {
	return o
}

func (o DataIpv6PrefixListPolicyObjectMapOutput) MapIndex(k pulumi.StringInput) DataIpv6PrefixListPolicyObjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DataIpv6PrefixListPolicyObject {
		return vs[0].(map[string]*DataIpv6PrefixListPolicyObject)[vs[1].(string)]
	}).(DataIpv6PrefixListPolicyObjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataIpv6PrefixListPolicyObjectInput)(nil)).Elem(), &DataIpv6PrefixListPolicyObject{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataIpv6PrefixListPolicyObjectArrayInput)(nil)).Elem(), DataIpv6PrefixListPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataIpv6PrefixListPolicyObjectMapInput)(nil)).Elem(), DataIpv6PrefixListPolicyObjectMap{})
	pulumi.RegisterOutputType(DataIpv6PrefixListPolicyObjectOutput{})
	pulumi.RegisterOutputType(DataIpv6PrefixListPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(DataIpv6PrefixListPolicyObjectMapOutput{})
}
