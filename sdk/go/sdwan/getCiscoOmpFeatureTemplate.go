// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Cisco OMP feature template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupCiscoOmpFeatureTemplate(ctx, &sdwan.LookupCiscoOmpFeatureTemplateArgs{
//				Id: pulumi.StringRef("f6b2c44c-693c-4763-b010-895aa3d236bd"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCiscoOmpFeatureTemplate(ctx *pulumi.Context, args *LookupCiscoOmpFeatureTemplateArgs, opts ...pulumi.InvokeOption) (*LookupCiscoOmpFeatureTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCiscoOmpFeatureTemplateResult
	err := ctx.Invoke("sdwan:index/getCiscoOmpFeatureTemplate:getCiscoOmpFeatureTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCiscoOmpFeatureTemplate.
type LookupCiscoOmpFeatureTemplateArgs struct {
	// The id of the feature template
	Id *string `pulumi:"id"`
	// The name of the feature template
	Name *string `pulumi:"name"`
}

// A collection of values returned by getCiscoOmpFeatureTemplate.
type LookupCiscoOmpFeatureTemplateResult struct {
	// Advertise locally learned routes to OMP
	AdvertiseIpv4Routes []GetCiscoOmpFeatureTemplateAdvertiseIpv4Route `pulumi:"advertiseIpv4Routes"`
	// Advertise locally learned routes to OMP
	AdvertiseIpv6Routes []GetCiscoOmpFeatureTemplateAdvertiseIpv6Route `pulumi:"advertiseIpv6Routes"`
	// Set the time between OMP Update packets
	AdvertisementInterval int `pulumi:"advertisementInterval"`
	// Variable name
	AdvertisementIntervalVariable string `pulumi:"advertisementIntervalVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Set maximum number of OMP paths to install in vEdge route table
	EcmpLimit int `pulumi:"ecmpLimit"`
	// Variable name
	EcmpLimitVariable string `pulumi:"ecmpLimitVariable"`
	// End of RIB timer \n\n seconds
	EorTimer int `pulumi:"eorTimer"`
	// Variable name
	EorTimerVariable string `pulumi:"eorTimerVariable"`
	// Enable or disable OMP graceful restart
	GracefulRestart bool `pulumi:"gracefulRestart"`
	// Set the OMP graceful restart timer
	GracefulRestartTimer int `pulumi:"gracefulRestartTimer"`
	// Variable name
	GracefulRestartTimerVariable string `pulumi:"gracefulRestartTimerVariable"`
	// Variable name
	GracefulRestartVariable string `pulumi:"gracefulRestartVariable"`
	// Set how long to wait before closing OMP peer connection
	Holdtime int `pulumi:"holdtime"`
	// Variable name
	HoldtimeVariable string `pulumi:"holdtimeVariable"`
	// The id of the feature template
	Id string `pulumi:"id"`
	// Ignore Region-Path Length During Best-Path Algorithm
	IgnoreRegionPathLength bool `pulumi:"ignoreRegionPathLength"`
	// Variable name
	IgnoreRegionPathLengthVariable string `pulumi:"ignoreRegionPathLengthVariable"`
	// The name of the feature template
	Name string `pulumi:"name"`
	// omp-admin-distance-ipv4
	OmpAdminDistanceIpv4 int `pulumi:"ompAdminDistanceIpv4"`
	// Variable name
	OmpAdminDistanceIpv4Variable string `pulumi:"ompAdminDistanceIpv4Variable"`
	// omp-admin-distance-ipv6
	OmpAdminDistanceIpv6 int `pulumi:"ompAdminDistanceIpv6"`
	// Variable name
	OmpAdminDistanceIpv6Variable string `pulumi:"ompAdminDistanceIpv6Variable"`
	// Set Overlay AS number \n\n or \n\n
	OverlayAs int `pulumi:"overlayAs"`
	// Variable name
	OverlayAsVariable string `pulumi:"overlayAsVariable"`
	// Set number of TLOC routes advertised between vSmart and vEdge
	SendPathLimit int `pulumi:"sendPathLimit"`
	// Variable name
	SendPathLimitVariable string `pulumi:"sendPathLimitVariable"`
	// Enable or disable OMP
	Shutdown bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable string `pulumi:"shutdownVariable"`
	// The template type
	TemplateType string `pulumi:"templateType"`
	// Transport gateway path computation
	TransportGateway string `pulumi:"transportGateway"`
	// Variable name
	TransportGatewayVariable string `pulumi:"transportGatewayVariable"`
	// The version of the feature template
	Version int `pulumi:"version"`
}

func LookupCiscoOmpFeatureTemplateOutput(ctx *pulumi.Context, args LookupCiscoOmpFeatureTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupCiscoOmpFeatureTemplateResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCiscoOmpFeatureTemplateResultOutput, error) {
			args := v.(LookupCiscoOmpFeatureTemplateArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sdwan:index/getCiscoOmpFeatureTemplate:getCiscoOmpFeatureTemplate", args, LookupCiscoOmpFeatureTemplateResultOutput{}, options).(LookupCiscoOmpFeatureTemplateResultOutput), nil
		}).(LookupCiscoOmpFeatureTemplateResultOutput)
}

// A collection of arguments for invoking getCiscoOmpFeatureTemplate.
type LookupCiscoOmpFeatureTemplateOutputArgs struct {
	// The id of the feature template
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the feature template
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupCiscoOmpFeatureTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCiscoOmpFeatureTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getCiscoOmpFeatureTemplate.
type LookupCiscoOmpFeatureTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupCiscoOmpFeatureTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCiscoOmpFeatureTemplateResult)(nil)).Elem()
}

func (o LookupCiscoOmpFeatureTemplateResultOutput) ToLookupCiscoOmpFeatureTemplateResultOutput() LookupCiscoOmpFeatureTemplateResultOutput {
	return o
}

func (o LookupCiscoOmpFeatureTemplateResultOutput) ToLookupCiscoOmpFeatureTemplateResultOutputWithContext(ctx context.Context) LookupCiscoOmpFeatureTemplateResultOutput {
	return o
}

// Advertise locally learned routes to OMP
func (o LookupCiscoOmpFeatureTemplateResultOutput) AdvertiseIpv4Routes() GetCiscoOmpFeatureTemplateAdvertiseIpv4RouteArrayOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) []GetCiscoOmpFeatureTemplateAdvertiseIpv4Route {
		return v.AdvertiseIpv4Routes
	}).(GetCiscoOmpFeatureTemplateAdvertiseIpv4RouteArrayOutput)
}

// Advertise locally learned routes to OMP
func (o LookupCiscoOmpFeatureTemplateResultOutput) AdvertiseIpv6Routes() GetCiscoOmpFeatureTemplateAdvertiseIpv6RouteArrayOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) []GetCiscoOmpFeatureTemplateAdvertiseIpv6Route {
		return v.AdvertiseIpv6Routes
	}).(GetCiscoOmpFeatureTemplateAdvertiseIpv6RouteArrayOutput)
}

// Set the time between OMP Update packets
func (o LookupCiscoOmpFeatureTemplateResultOutput) AdvertisementInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) int { return v.AdvertisementInterval }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoOmpFeatureTemplateResultOutput) AdvertisementIntervalVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) string { return v.AdvertisementIntervalVariable }).(pulumi.StringOutput)
}

// The description of the feature template
func (o LookupCiscoOmpFeatureTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
func (o LookupCiscoOmpFeatureTemplateResultOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) []string { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Set maximum number of OMP paths to install in vEdge route table
func (o LookupCiscoOmpFeatureTemplateResultOutput) EcmpLimit() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) int { return v.EcmpLimit }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoOmpFeatureTemplateResultOutput) EcmpLimitVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) string { return v.EcmpLimitVariable }).(pulumi.StringOutput)
}

// End of RIB timer \n\n seconds
func (o LookupCiscoOmpFeatureTemplateResultOutput) EorTimer() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) int { return v.EorTimer }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoOmpFeatureTemplateResultOutput) EorTimerVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) string { return v.EorTimerVariable }).(pulumi.StringOutput)
}

// Enable or disable OMP graceful restart
func (o LookupCiscoOmpFeatureTemplateResultOutput) GracefulRestart() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) bool { return v.GracefulRestart }).(pulumi.BoolOutput)
}

// Set the OMP graceful restart timer
func (o LookupCiscoOmpFeatureTemplateResultOutput) GracefulRestartTimer() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) int { return v.GracefulRestartTimer }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoOmpFeatureTemplateResultOutput) GracefulRestartTimerVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) string { return v.GracefulRestartTimerVariable }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoOmpFeatureTemplateResultOutput) GracefulRestartVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) string { return v.GracefulRestartVariable }).(pulumi.StringOutput)
}

// Set how long to wait before closing OMP peer connection
func (o LookupCiscoOmpFeatureTemplateResultOutput) Holdtime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) int { return v.Holdtime }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoOmpFeatureTemplateResultOutput) HoldtimeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) string { return v.HoldtimeVariable }).(pulumi.StringOutput)
}

// The id of the feature template
func (o LookupCiscoOmpFeatureTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// Ignore Region-Path Length During Best-Path Algorithm
func (o LookupCiscoOmpFeatureTemplateResultOutput) IgnoreRegionPathLength() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) bool { return v.IgnoreRegionPathLength }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupCiscoOmpFeatureTemplateResultOutput) IgnoreRegionPathLengthVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) string { return v.IgnoreRegionPathLengthVariable }).(pulumi.StringOutput)
}

// The name of the feature template
func (o LookupCiscoOmpFeatureTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// omp-admin-distance-ipv4
func (o LookupCiscoOmpFeatureTemplateResultOutput) OmpAdminDistanceIpv4() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) int { return v.OmpAdminDistanceIpv4 }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoOmpFeatureTemplateResultOutput) OmpAdminDistanceIpv4Variable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) string { return v.OmpAdminDistanceIpv4Variable }).(pulumi.StringOutput)
}

// omp-admin-distance-ipv6
func (o LookupCiscoOmpFeatureTemplateResultOutput) OmpAdminDistanceIpv6() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) int { return v.OmpAdminDistanceIpv6 }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoOmpFeatureTemplateResultOutput) OmpAdminDistanceIpv6Variable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) string { return v.OmpAdminDistanceIpv6Variable }).(pulumi.StringOutput)
}

// Set Overlay AS number \n\n or \n\n
func (o LookupCiscoOmpFeatureTemplateResultOutput) OverlayAs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) int { return v.OverlayAs }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoOmpFeatureTemplateResultOutput) OverlayAsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) string { return v.OverlayAsVariable }).(pulumi.StringOutput)
}

// Set number of TLOC routes advertised between vSmart and vEdge
func (o LookupCiscoOmpFeatureTemplateResultOutput) SendPathLimit() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) int { return v.SendPathLimit }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoOmpFeatureTemplateResultOutput) SendPathLimitVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) string { return v.SendPathLimitVariable }).(pulumi.StringOutput)
}

// Enable or disable OMP
func (o LookupCiscoOmpFeatureTemplateResultOutput) Shutdown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) bool { return v.Shutdown }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupCiscoOmpFeatureTemplateResultOutput) ShutdownVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) string { return v.ShutdownVariable }).(pulumi.StringOutput)
}

// The template type
func (o LookupCiscoOmpFeatureTemplateResultOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) string { return v.TemplateType }).(pulumi.StringOutput)
}

// Transport gateway path computation
func (o LookupCiscoOmpFeatureTemplateResultOutput) TransportGateway() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) string { return v.TransportGateway }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoOmpFeatureTemplateResultOutput) TransportGatewayVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) string { return v.TransportGatewayVariable }).(pulumi.StringOutput)
}

// The version of the feature template
func (o LookupCiscoOmpFeatureTemplateResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoOmpFeatureTemplateResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCiscoOmpFeatureTemplateResultOutput{})
}
