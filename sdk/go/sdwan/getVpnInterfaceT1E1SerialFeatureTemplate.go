// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the VPN Interface T1 E1 Serial feature template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupVpnInterfaceT1E1SerialFeatureTemplate(ctx, &sdwan.LookupVpnInterfaceT1E1SerialFeatureTemplateArgs{
//				Id: pulumi.StringRef("f6b2c44c-693c-4763-b010-895aa3d236bd"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVpnInterfaceT1E1SerialFeatureTemplate(ctx *pulumi.Context, args *LookupVpnInterfaceT1E1SerialFeatureTemplateArgs, opts ...pulumi.InvokeOption) (*LookupVpnInterfaceT1E1SerialFeatureTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpnInterfaceT1E1SerialFeatureTemplateResult
	err := ctx.Invoke("sdwan:index/getVpnInterfaceT1E1SerialFeatureTemplate:getVpnInterfaceT1E1SerialFeatureTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpnInterfaceT1E1SerialFeatureTemplate.
type LookupVpnInterfaceT1E1SerialFeatureTemplateArgs struct {
	// The id of the feature template
	Id *string `pulumi:"id"`
	// The name of the feature template
	Name *string `pulumi:"name"`
}

// A collection of values returned by getVpnInterfaceT1E1SerialFeatureTemplate.
type LookupVpnInterfaceT1E1SerialFeatureTemplateResult struct {
	// Link autonegotiation
	Autonegotiate bool `pulumi:"autonegotiate"`
	// Variable name
	AutonegotiateVariable string `pulumi:"autonegotiateVariable"`
	// Clear don't fragment bit
	ClearDontFragmentBit bool `pulumi:"clearDontFragmentBit"`
	// Variable name
	ClearDontFragmentBitVariable string `pulumi:"clearDontFragmentBitVariable"`
	// Set preference for interface Clock speed
	ClockRate string `pulumi:"clockRate"`
	// Variable name
	ClockRateVariable string `pulumi:"clockRateVariable"`
	// Enable core region
	CoreRegion string `pulumi:"coreRegion"`
	// Variable name
	CoreRegionVariable string `pulumi:"coreRegionVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Enable core region
	EnableCoreRegion bool `pulumi:"enableCoreRegion"`
	// Variable name
	EnableCoreRegionVariable string `pulumi:"enableCoreRegionVariable"`
	// Configure Encapsulation for interface
	Encapsulation string `pulumi:"encapsulation"`
	// Variable name
	EncapsulationVariable string `pulumi:"encapsulationVariable"`
	// The id of the feature template
	Id string `pulumi:"id"`
	// Interface bandwidth capacity, in kbps
	InterfaceBandwidthCapacity int `pulumi:"interfaceBandwidthCapacity"`
	// Variable name
	InterfaceBandwidthCapacityVariable string `pulumi:"interfaceBandwidthCapacityVariable"`
	// Interface description
	InterfaceDescription string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable string `pulumi:"interfaceDescriptionVariable"`
	// Interface downstream bandwidth capacity, in kbps
	InterfaceDownstreamBandwidthCapacity int `pulumi:"interfaceDownstreamBandwidthCapacity"`
	// Variable name
	InterfaceDownstreamBandwidthCapacityVariable string `pulumi:"interfaceDownstreamBandwidthCapacityVariable"`
	// Interface MTU \n\n, in bytes
	IpMtu int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable string `pulumi:"ipMtuVariable"`
	// Apply ACL
	Ipv4AccessLists []GetVpnInterfaceT1E1SerialFeatureTemplateIpv4AccessList `pulumi:"ipv4AccessLists"`
	// Assign IPv4 address
	Ipv4Address string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable string `pulumi:"ipv4AddressVariable"`
	// Apply IPv6 access list
	Ipv6AccessLists []GetVpnInterfaceT1E1SerialFeatureTemplateIpv6AccessList `pulumi:"ipv6AccessLists"`
	// Assign IPv6 address
	Ipv6Address string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable string `pulumi:"ipv6AddressVariable"`
	// The name of the feature template
	Name string `pulumi:"name"`
	// Per-tunnel Qos
	PerTunnelQos bool `pulumi:"perTunnelQos"`
	// Per-tunnel QoS Aggregator
	PerTunnelQosAggregator bool `pulumi:"perTunnelQosAggregator"`
	// Variable name
	PerTunnelQosAggregatorVariable string `pulumi:"perTunnelQosAggregatorVariable"`
	// Variable name
	PerTunnelQosVariable string `pulumi:"perTunnelQosVariable"`
	// Path MTU Discovery
	PmtuDiscovery bool `pulumi:"pmtuDiscovery"`
	// Variable name
	PmtuDiscoveryVariable string `pulumi:"pmtuDiscoveryVariable"`
	// Name of QoS map
	QosMap string `pulumi:"qosMap"`
	// Variable name
	QosMapVariable string `pulumi:"qosMapVariable"`
	// Name of VPN QoS map
	QosMapVpn string `pulumi:"qosMapVpn"`
	// Variable name
	QosMapVpnVariable string `pulumi:"qosMapVpnVariable"`
	// Enable secondary region
	SecondaryRegion string `pulumi:"secondaryRegion"`
	// Variable name
	SecondaryRegionVariable string `pulumi:"secondaryRegionVariable"`
	// Serial Interface Name - slot/subslot/port:channel-group for T1/E1, slot/subslot/port for NIM-1T
	SerialInterfaceName string `pulumi:"serialInterfaceName"`
	// Variable name
	SerialInterfaceNameVariable string `pulumi:"serialInterfaceNameVariable"`
	// 1ge  interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps
	ShapingRate int `pulumi:"shapingRate"`
	// Variable name
	ShapingRateVariable string `pulumi:"shapingRateVariable"`
	// Administrative state
	Shutdown bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable string `pulumi:"shutdownVariable"`
	// Static ingress QoS for the port
	StaticIngressQos int `pulumi:"staticIngressQos"`
	// Variable name
	StaticIngressQosVariable string `pulumi:"staticIngressQosVariable"`
	// TCP MSS on SYN packets, in bytes
	TcpMss int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable string `pulumi:"tcpMssVariable"`
	// The template type
	TemplateType string `pulumi:"templateType"`
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension string `pulumi:"tlocExtension"`
	// Variable name
	TlocExtensionVariable string `pulumi:"tlocExtensionVariable"`
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set
	TunnelInterfaceAllowAll bool `pulumi:"tunnelInterfaceAllowAll"`
	// Variable name
	TunnelInterfaceAllowAllVariable string `pulumi:"tunnelInterfaceAllowAllVariable"`
	// Allow/deny BGP
	TunnelInterfaceAllowBgp bool `pulumi:"tunnelInterfaceAllowBgp"`
	// Variable name
	TunnelInterfaceAllowBgpVariable string `pulumi:"tunnelInterfaceAllowBgpVariable"`
	// Allow/Deny DHCP
	TunnelInterfaceAllowDhcp bool `pulumi:"tunnelInterfaceAllowDhcp"`
	// Variable name
	TunnelInterfaceAllowDhcpVariable string `pulumi:"tunnelInterfaceAllowDhcpVariable"`
	// Allow/Deny DNS
	TunnelInterfaceAllowDns bool `pulumi:"tunnelInterfaceAllowDns"`
	// Variable name
	TunnelInterfaceAllowDnsVariable string `pulumi:"tunnelInterfaceAllowDnsVariable"`
	// Allow/Deny Https
	TunnelInterfaceAllowHttps bool `pulumi:"tunnelInterfaceAllowHttps"`
	// Variable name
	TunnelInterfaceAllowHttpsVariable string `pulumi:"tunnelInterfaceAllowHttpsVariable"`
	// Allow/Deny ICMP
	TunnelInterfaceAllowIcmp bool `pulumi:"tunnelInterfaceAllowIcmp"`
	// Variable name
	TunnelInterfaceAllowIcmpVariable string `pulumi:"tunnelInterfaceAllowIcmpVariable"`
	// Allow/Deny NETCONF
	TunnelInterfaceAllowNetconf bool `pulumi:"tunnelInterfaceAllowNetconf"`
	// Variable name
	TunnelInterfaceAllowNetconfVariable string `pulumi:"tunnelInterfaceAllowNetconfVariable"`
	// Allow/Deny NTP
	TunnelInterfaceAllowNtp bool `pulumi:"tunnelInterfaceAllowNtp"`
	// Variable name
	TunnelInterfaceAllowNtpVariable string `pulumi:"tunnelInterfaceAllowNtpVariable"`
	// Allow/Deny OSPF
	TunnelInterfaceAllowOspf bool `pulumi:"tunnelInterfaceAllowOspf"`
	// Variable name
	TunnelInterfaceAllowOspfVariable string `pulumi:"tunnelInterfaceAllowOspfVariable"`
	// Allow/Deny SNMP
	TunnelInterfaceAllowSnmp bool `pulumi:"tunnelInterfaceAllowSnmp"`
	// Variable name
	TunnelInterfaceAllowSnmpVariable string `pulumi:"tunnelInterfaceAllowSnmpVariable"`
	// Allow/Deny SSH
	TunnelInterfaceAllowSsh bool `pulumi:"tunnelInterfaceAllowSsh"`
	// Variable name
	TunnelInterfaceAllowSshVariable string `pulumi:"tunnelInterfaceAllowSshVariable"`
	// Allow/Deny STUN
	TunnelInterfaceAllowStun bool `pulumi:"tunnelInterfaceAllowStun"`
	// Variable name
	TunnelInterfaceAllowStunVariable string `pulumi:"tunnelInterfaceAllowStunVariable"`
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel string `pulumi:"tunnelInterfaceBindLoopbackTunnel"`
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable string `pulumi:"tunnelInterfaceBindLoopbackTunnelVariable"`
	// Set TLOC as border TLOC
	TunnelInterfaceBorder bool `pulumi:"tunnelInterfaceBorder"`
	// Variable name
	TunnelInterfaceBorderVariable string `pulumi:"tunnelInterfaceBorderVariable"`
	// Set carrier for TLOC
	TunnelInterfaceCarrier string `pulumi:"tunnelInterfaceCarrier"`
	// Variable name
	TunnelInterfaceCarrierVariable string `pulumi:"tunnelInterfaceCarrierVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
	TunnelInterfaceClearDontFragment bool `pulumi:"tunnelInterfaceClearDontFragment"`
	// Variable name
	TunnelInterfaceClearDontFragmentVariable string `pulumi:"tunnelInterfaceClearDontFragmentVariable"`
	// Set color for TLOC
	TunnelInterfaceColor string `pulumi:"tunnelInterfaceColor"`
	// Variable name
	TunnelInterfaceColorVariable string `pulumi:"tunnelInterfaceColorVariable"`
	// Set the maximum number of control connections for this TLOC
	TunnelInterfaceControlConnections int `pulumi:"tunnelInterfaceControlConnections"`
	// Variable name
	TunnelInterfaceControlConnectionsVariable string `pulumi:"tunnelInterfaceControlConnectionsVariable"`
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations []GetVpnInterfaceT1E1SerialFeatureTemplateTunnelInterfaceEncapsulation `pulumi:"tunnelInterfaceEncapsulations"`
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable string `pulumi:"tunnelInterfaceExcludeControllerGroupListVariable"`
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists []int `pulumi:"tunnelInterfaceExcludeControllerGroupLists"`
	// List of groups
	TunnelInterfaceGroups []int `pulumi:"tunnelInterfaceGroups"`
	// Variable name
	TunnelInterfaceGroupsVariable string `pulumi:"tunnelInterfaceGroupsVariable"`
	// Set time period of control hello packets \n\n milli seconds
	TunnelInterfaceHelloInterval int `pulumi:"tunnelInterfaceHelloInterval"`
	// Variable name
	TunnelInterfaceHelloIntervalVariable string `pulumi:"tunnelInterfaceHelloIntervalVariable"`
	// Set tolerance of control hello packets \n\n seconds
	TunnelInterfaceHelloTolerance int `pulumi:"tunnelInterfaceHelloTolerance"`
	// Variable name
	TunnelInterfaceHelloToleranceVariable string `pulumi:"tunnelInterfaceHelloToleranceVariable"`
	// Set TLOC as last resort
	TunnelInterfaceLastResortCircuit bool `pulumi:"tunnelInterfaceLastResortCircuit"`
	// Variable name
	TunnelInterfaceLastResortCircuitVariable string `pulumi:"tunnelInterfaceLastResortCircuitVariable"`
	// Set the interface as a low-bandwidth circuit
	TunnelInterfaceLowBandwidthLink bool `pulumi:"tunnelInterfaceLowBandwidthLink"`
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable string `pulumi:"tunnelInterfaceLowBandwidthLinkVariable"`
	// Set time period of nat refresh packets \n\n seconds
	TunnelInterfaceNatRefreshInterval int `pulumi:"tunnelInterfaceNatRefreshInterval"`
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable string `pulumi:"tunnelInterfaceNatRefreshIntervalVariable"`
	// Accept and respond to network-prefix-directed broadcasts)
	TunnelInterfaceNetworkBroadcast bool `pulumi:"tunnelInterfaceNetworkBroadcast"`
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable string `pulumi:"tunnelInterfaceNetworkBroadcastVariable"`
	// Disallow port hopping on the tunnel interface
	TunnelInterfacePortHop bool `pulumi:"tunnelInterfacePortHop"`
	// Variable name
	TunnelInterfacePortHopVariable string `pulumi:"tunnelInterfacePortHopVariable"`
	// Restrict this TLOC behavior
	TunnelInterfaceRestrict bool `pulumi:"tunnelInterfaceRestrict"`
	// Variable name
	TunnelInterfaceRestrictVariable string `pulumi:"tunnelInterfaceRestrictVariable"`
	// Tunnel TCP MSS on SYN packets, in bytes
	TunnelInterfaceTunnelTcpMss int `pulumi:"tunnelInterfaceTunnelTcpMss"`
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable string `pulumi:"tunnelInterfaceTunnelTcpMssVariable"`
	// Put this wan interface in STUN mode only
	TunnelInterfaceVbondAsStunServer bool `pulumi:"tunnelInterfaceVbondAsStunServer"`
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable string `pulumi:"tunnelInterfaceVbondAsStunServerVariable"`
	// Set interface preference for control connection to vManage \n\n
	TunnelInterfaceVmanageConnectionPreference int `pulumi:"tunnelInterfaceVmanageConnectionPreference"`
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable string `pulumi:"tunnelInterfaceVmanageConnectionPreferenceVariable"`
	// Set tunnel QoS mode
	TunnelQosMode string `pulumi:"tunnelQosMode"`
	// Variable name
	TunnelQosModeVariable string `pulumi:"tunnelQosModeVariable"`
	// The version of the feature template
	Version int `pulumi:"version"`
	// Name of rewrite rule
	WriteRule string `pulumi:"writeRule"`
	// Variable name
	WriteRuleVariable string `pulumi:"writeRuleVariable"`
}

func LookupVpnInterfaceT1E1SerialFeatureTemplateOutput(ctx *pulumi.Context, args LookupVpnInterfaceT1E1SerialFeatureTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVpnInterfaceT1E1SerialFeatureTemplateResult, error) {
			args := v.(LookupVpnInterfaceT1E1SerialFeatureTemplateArgs)
			r, err := LookupVpnInterfaceT1E1SerialFeatureTemplate(ctx, &args, opts...)
			var s LookupVpnInterfaceT1E1SerialFeatureTemplateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput)
}

// A collection of arguments for invoking getVpnInterfaceT1E1SerialFeatureTemplate.
type LookupVpnInterfaceT1E1SerialFeatureTemplateOutputArgs struct {
	// The id of the feature template
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the feature template
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupVpnInterfaceT1E1SerialFeatureTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnInterfaceT1E1SerialFeatureTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getVpnInterfaceT1E1SerialFeatureTemplate.
type LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnInterfaceT1E1SerialFeatureTemplateResult)(nil)).Elem()
}

func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) ToLookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput() LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput {
	return o
}

func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) ToLookupVpnInterfaceT1E1SerialFeatureTemplateResultOutputWithContext(ctx context.Context) LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput {
	return o
}

// Link autonegotiation
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) Autonegotiate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.Autonegotiate }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) AutonegotiateVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.AutonegotiateVariable }).(pulumi.StringOutput)
}

// Clear don't fragment bit
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) ClearDontFragmentBit() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.ClearDontFragmentBit }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) ClearDontFragmentBitVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.ClearDontFragmentBitVariable
	}).(pulumi.StringOutput)
}

// Set preference for interface Clock speed
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) ClockRate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.ClockRate }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) ClockRateVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.ClockRateVariable }).(pulumi.StringOutput)
}

// Enable core region
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) CoreRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.CoreRegion }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) CoreRegionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.CoreRegionVariable }).(pulumi.StringOutput)
}

// The description of the feature template
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) []string { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Enable core region
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) EnableCoreRegion() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.EnableCoreRegion }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) EnableCoreRegionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.EnableCoreRegionVariable }).(pulumi.StringOutput)
}

// Configure Encapsulation for interface
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) Encapsulation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.Encapsulation }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) EncapsulationVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.EncapsulationVariable }).(pulumi.StringOutput)
}

// The id of the feature template
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// Interface bandwidth capacity, in kbps
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) InterfaceBandwidthCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) int { return v.InterfaceBandwidthCapacity }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) InterfaceBandwidthCapacityVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.InterfaceBandwidthCapacityVariable
	}).(pulumi.StringOutput)
}

// Interface description
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) InterfaceDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.InterfaceDescription }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) InterfaceDescriptionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.InterfaceDescriptionVariable
	}).(pulumi.StringOutput)
}

// Interface downstream bandwidth capacity, in kbps
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) InterfaceDownstreamBandwidthCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) int {
		return v.InterfaceDownstreamBandwidthCapacity
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) InterfaceDownstreamBandwidthCapacityVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.InterfaceDownstreamBandwidthCapacityVariable
	}).(pulumi.StringOutput)
}

// Interface MTU \n\n, in bytes
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) IpMtu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) int { return v.IpMtu }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) IpMtuVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.IpMtuVariable }).(pulumi.StringOutput)
}

// Apply ACL
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) Ipv4AccessLists() GetVpnInterfaceT1E1SerialFeatureTemplateIpv4AccessListArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) []GetVpnInterfaceT1E1SerialFeatureTemplateIpv4AccessList {
		return v.Ipv4AccessLists
	}).(GetVpnInterfaceT1E1SerialFeatureTemplateIpv4AccessListArrayOutput)
}

// Assign IPv4 address
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) Ipv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.Ipv4Address }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) Ipv4AddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.Ipv4AddressVariable }).(pulumi.StringOutput)
}

// Apply IPv6 access list
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) Ipv6AccessLists() GetVpnInterfaceT1E1SerialFeatureTemplateIpv6AccessListArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) []GetVpnInterfaceT1E1SerialFeatureTemplateIpv6AccessList {
		return v.Ipv6AccessLists
	}).(GetVpnInterfaceT1E1SerialFeatureTemplateIpv6AccessListArrayOutput)
}

// Assign IPv6 address
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) Ipv6AddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.Ipv6AddressVariable }).(pulumi.StringOutput)
}

// The name of the feature template
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// Per-tunnel Qos
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) PerTunnelQos() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.PerTunnelQos }).(pulumi.BoolOutput)
}

// Per-tunnel QoS Aggregator
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) PerTunnelQosAggregator() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.PerTunnelQosAggregator }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) PerTunnelQosAggregatorVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.PerTunnelQosAggregatorVariable
	}).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) PerTunnelQosVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.PerTunnelQosVariable }).(pulumi.StringOutput)
}

// Path MTU Discovery
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) PmtuDiscovery() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.PmtuDiscovery }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) PmtuDiscoveryVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.PmtuDiscoveryVariable }).(pulumi.StringOutput)
}

// Name of QoS map
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) QosMap() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.QosMap }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) QosMapVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.QosMapVariable }).(pulumi.StringOutput)
}

// Name of VPN QoS map
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) QosMapVpn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.QosMapVpn }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) QosMapVpnVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.QosMapVpnVariable }).(pulumi.StringOutput)
}

// Enable secondary region
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) SecondaryRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.SecondaryRegion }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) SecondaryRegionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.SecondaryRegionVariable }).(pulumi.StringOutput)
}

// Serial Interface Name - slot/subslot/port:channel-group for T1/E1, slot/subslot/port for NIM-1T
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) SerialInterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.SerialInterfaceName }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) SerialInterfaceNameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.SerialInterfaceNameVariable }).(pulumi.StringOutput)
}

// 1ge  interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) ShapingRate() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) int { return v.ShapingRate }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) ShapingRateVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.ShapingRateVariable }).(pulumi.StringOutput)
}

// Administrative state
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) Shutdown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.Shutdown }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) ShutdownVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.ShutdownVariable }).(pulumi.StringOutput)
}

// Static ingress QoS for the port
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) StaticIngressQos() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) int { return v.StaticIngressQos }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) StaticIngressQosVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.StaticIngressQosVariable }).(pulumi.StringOutput)
}

// TCP MSS on SYN packets, in bytes
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TcpMss() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) int { return v.TcpMss }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TcpMssVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.TcpMssVariable }).(pulumi.StringOutput)
}

// The template type
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.TemplateType }).(pulumi.StringOutput)
}

// Extends a local TLOC to a remote node only for vpn 0
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TlocExtension() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.TlocExtension }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TlocExtensionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.TlocExtensionVariable }).(pulumi.StringOutput)
}

// Allow all traffic. Overrides all other allow-service options if allow-service all is set
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowAll() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.TunnelInterfaceAllowAll }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowAllVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowAllVariable
	}).(pulumi.StringOutput)
}

// Allow/deny BGP
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowBgp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.TunnelInterfaceAllowBgp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowBgpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowBgpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny DHCP
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowDhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.TunnelInterfaceAllowDhcp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowDhcpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowDhcpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny DNS
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowDns() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.TunnelInterfaceAllowDns }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowDnsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowDnsVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny Https
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowHttps() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.TunnelInterfaceAllowHttps }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowHttpsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowHttpsVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny ICMP
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowIcmp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.TunnelInterfaceAllowIcmp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowIcmpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowIcmpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny NETCONF
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowNetconf() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.TunnelInterfaceAllowNetconf }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowNetconfVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowNetconfVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny NTP
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowNtp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.TunnelInterfaceAllowNtp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowNtpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowNtpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny OSPF
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowOspf() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.TunnelInterfaceAllowOspf }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowOspfVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowOspfVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny SNMP
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowSnmp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.TunnelInterfaceAllowSnmp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowSnmpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowSnmpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny SSH
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowSsh() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.TunnelInterfaceAllowSsh }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowSshVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowSshVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny STUN
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowStun() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.TunnelInterfaceAllowStun }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceAllowStunVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowStunVariable
	}).(pulumi.StringOutput)
}

// Bind loopback tunnel interface to a physical interface
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceBindLoopbackTunnel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceBindLoopbackTunnel
	}).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceBindLoopbackTunnelVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceBindLoopbackTunnelVariable
	}).(pulumi.StringOutput)
}

// Set TLOC as border TLOC
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceBorder() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.TunnelInterfaceBorder }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceBorderVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceBorderVariable
	}).(pulumi.StringOutput)
}

// Set carrier for TLOC
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceCarrier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.TunnelInterfaceCarrier }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceCarrierVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceCarrierVariable
	}).(pulumi.StringOutput)
}

// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceClearDontFragment() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool {
		return v.TunnelInterfaceClearDontFragment
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceClearDontFragmentVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceClearDontFragmentVariable
	}).(pulumi.StringOutput)
}

// Set color for TLOC
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceColor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.TunnelInterfaceColor }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceColorVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceColorVariable
	}).(pulumi.StringOutput)
}

// Set the maximum number of control connections for this TLOC
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceControlConnections() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) int {
		return v.TunnelInterfaceControlConnections
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceControlConnectionsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceControlConnectionsVariable
	}).(pulumi.StringOutput)
}

// Encapsulation for TLOC
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceEncapsulations() GetVpnInterfaceT1E1SerialFeatureTemplateTunnelInterfaceEncapsulationArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) []GetVpnInterfaceT1E1SerialFeatureTemplateTunnelInterfaceEncapsulation {
		return v.TunnelInterfaceEncapsulations
	}).(GetVpnInterfaceT1E1SerialFeatureTemplateTunnelInterfaceEncapsulationArrayOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceExcludeControllerGroupListVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceExcludeControllerGroupListVariable
	}).(pulumi.StringOutput)
}

// Exclude the following controller groups defined in this list
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceExcludeControllerGroupLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) []int {
		return v.TunnelInterfaceExcludeControllerGroupLists
	}).(pulumi.IntArrayOutput)
}

// List of groups
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceGroups() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) []int { return v.TunnelInterfaceGroups }).(pulumi.IntArrayOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceGroupsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceGroupsVariable
	}).(pulumi.StringOutput)
}

// Set time period of control hello packets \n\n milli seconds
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceHelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) int { return v.TunnelInterfaceHelloInterval }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceHelloIntervalVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceHelloIntervalVariable
	}).(pulumi.StringOutput)
}

// Set tolerance of control hello packets \n\n seconds
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceHelloTolerance() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) int { return v.TunnelInterfaceHelloTolerance }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceHelloToleranceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceHelloToleranceVariable
	}).(pulumi.StringOutput)
}

// Set TLOC as last resort
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceLastResortCircuit() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool {
		return v.TunnelInterfaceLastResortCircuit
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceLastResortCircuitVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceLastResortCircuitVariable
	}).(pulumi.StringOutput)
}

// Set the interface as a low-bandwidth circuit
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceLowBandwidthLink() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool {
		return v.TunnelInterfaceLowBandwidthLink
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceLowBandwidthLinkVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceLowBandwidthLinkVariable
	}).(pulumi.StringOutput)
}

// Set time period of nat refresh packets \n\n seconds
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceNatRefreshInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) int {
		return v.TunnelInterfaceNatRefreshInterval
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceNatRefreshIntervalVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceNatRefreshIntervalVariable
	}).(pulumi.StringOutput)
}

// Accept and respond to network-prefix-directed broadcasts)
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceNetworkBroadcast() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool {
		return v.TunnelInterfaceNetworkBroadcast
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceNetworkBroadcastVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceNetworkBroadcastVariable
	}).(pulumi.StringOutput)
}

// Disallow port hopping on the tunnel interface
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfacePortHop() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.TunnelInterfacePortHop }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfacePortHopVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfacePortHopVariable
	}).(pulumi.StringOutput)
}

// Restrict this TLOC behavior
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceRestrict() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool { return v.TunnelInterfaceRestrict }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceRestrictVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceRestrictVariable
	}).(pulumi.StringOutput)
}

// Tunnel TCP MSS on SYN packets, in bytes
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceTunnelTcpMss() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) int { return v.TunnelInterfaceTunnelTcpMss }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceTunnelTcpMssVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceTunnelTcpMssVariable
	}).(pulumi.StringOutput)
}

// Put this wan interface in STUN mode only
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceVbondAsStunServer() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) bool {
		return v.TunnelInterfaceVbondAsStunServer
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceVbondAsStunServerVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceVbondAsStunServerVariable
	}).(pulumi.StringOutput)
}

// Set interface preference for control connection to vManage \n\n
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceVmanageConnectionPreference() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) int {
		return v.TunnelInterfaceVmanageConnectionPreference
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelInterfaceVmanageConnectionPreferenceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string {
		return v.TunnelInterfaceVmanageConnectionPreferenceVariable
	}).(pulumi.StringOutput)
}

// Set tunnel QoS mode
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelQosMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.TunnelQosMode }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) TunnelQosModeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.TunnelQosModeVariable }).(pulumi.StringOutput)
}

// The version of the feature template
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) int { return v.Version }).(pulumi.IntOutput)
}

// Name of rewrite rule
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) WriteRule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.WriteRule }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput) WriteRuleVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceT1E1SerialFeatureTemplateResult) string { return v.WriteRuleVariable }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpnInterfaceT1E1SerialFeatureTemplateResultOutput{})
}
