// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Transport Route Policy Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "transport_route_policy_feature_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/transportRoutePolicyFeature:TransportRoutePolicyFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type TransportRoutePolicyFeature struct {
	pulumi.CustomResourceState

	// Default Action - Choices: `reject`, `accept` - Default value: `reject`
	DefaultAction pulumi.StringPtrOutput `pulumi:"defaultAction"`
	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// Route Policy List
	Sequences TransportRoutePolicyFeatureSequenceArrayOutput `pulumi:"sequences"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewTransportRoutePolicyFeature registers a new resource with the given unique name, arguments, and options.
func NewTransportRoutePolicyFeature(ctx *pulumi.Context,
	name string, args *TransportRoutePolicyFeatureArgs, opts ...pulumi.ResourceOption) (*TransportRoutePolicyFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransportRoutePolicyFeature
	err := ctx.RegisterResource("sdwan:index/transportRoutePolicyFeature:TransportRoutePolicyFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransportRoutePolicyFeature gets an existing TransportRoutePolicyFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransportRoutePolicyFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransportRoutePolicyFeatureState, opts ...pulumi.ResourceOption) (*TransportRoutePolicyFeature, error) {
	var resource TransportRoutePolicyFeature
	err := ctx.ReadResource("sdwan:index/transportRoutePolicyFeature:TransportRoutePolicyFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransportRoutePolicyFeature resources.
type transportRoutePolicyFeatureState struct {
	// Default Action - Choices: `reject`, `accept` - Default value: `reject`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Route Policy List
	Sequences []TransportRoutePolicyFeatureSequence `pulumi:"sequences"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type TransportRoutePolicyFeatureState struct {
	// Default Action - Choices: `reject`, `accept` - Default value: `reject`
	DefaultAction pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Route Policy List
	Sequences TransportRoutePolicyFeatureSequenceArrayInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (TransportRoutePolicyFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*transportRoutePolicyFeatureState)(nil)).Elem()
}

type transportRoutePolicyFeatureArgs struct {
	// Default Action - Choices: `reject`, `accept` - Default value: `reject`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Route Policy List
	Sequences []TransportRoutePolicyFeatureSequence `pulumi:"sequences"`
}

// The set of arguments for constructing a TransportRoutePolicyFeature resource.
type TransportRoutePolicyFeatureArgs struct {
	// Default Action - Choices: `reject`, `accept` - Default value: `reject`
	DefaultAction pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Route Policy List
	Sequences TransportRoutePolicyFeatureSequenceArrayInput
}

func (TransportRoutePolicyFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transportRoutePolicyFeatureArgs)(nil)).Elem()
}

type TransportRoutePolicyFeatureInput interface {
	pulumi.Input

	ToTransportRoutePolicyFeatureOutput() TransportRoutePolicyFeatureOutput
	ToTransportRoutePolicyFeatureOutputWithContext(ctx context.Context) TransportRoutePolicyFeatureOutput
}

func (*TransportRoutePolicyFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportRoutePolicyFeature)(nil)).Elem()
}

func (i *TransportRoutePolicyFeature) ToTransportRoutePolicyFeatureOutput() TransportRoutePolicyFeatureOutput {
	return i.ToTransportRoutePolicyFeatureOutputWithContext(context.Background())
}

func (i *TransportRoutePolicyFeature) ToTransportRoutePolicyFeatureOutputWithContext(ctx context.Context) TransportRoutePolicyFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportRoutePolicyFeatureOutput)
}

// TransportRoutePolicyFeatureArrayInput is an input type that accepts TransportRoutePolicyFeatureArray and TransportRoutePolicyFeatureArrayOutput values.
// You can construct a concrete instance of `TransportRoutePolicyFeatureArrayInput` via:
//
//	TransportRoutePolicyFeatureArray{ TransportRoutePolicyFeatureArgs{...} }
type TransportRoutePolicyFeatureArrayInput interface {
	pulumi.Input

	ToTransportRoutePolicyFeatureArrayOutput() TransportRoutePolicyFeatureArrayOutput
	ToTransportRoutePolicyFeatureArrayOutputWithContext(context.Context) TransportRoutePolicyFeatureArrayOutput
}

type TransportRoutePolicyFeatureArray []TransportRoutePolicyFeatureInput

func (TransportRoutePolicyFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportRoutePolicyFeature)(nil)).Elem()
}

func (i TransportRoutePolicyFeatureArray) ToTransportRoutePolicyFeatureArrayOutput() TransportRoutePolicyFeatureArrayOutput {
	return i.ToTransportRoutePolicyFeatureArrayOutputWithContext(context.Background())
}

func (i TransportRoutePolicyFeatureArray) ToTransportRoutePolicyFeatureArrayOutputWithContext(ctx context.Context) TransportRoutePolicyFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportRoutePolicyFeatureArrayOutput)
}

// TransportRoutePolicyFeatureMapInput is an input type that accepts TransportRoutePolicyFeatureMap and TransportRoutePolicyFeatureMapOutput values.
// You can construct a concrete instance of `TransportRoutePolicyFeatureMapInput` via:
//
//	TransportRoutePolicyFeatureMap{ "key": TransportRoutePolicyFeatureArgs{...} }
type TransportRoutePolicyFeatureMapInput interface {
	pulumi.Input

	ToTransportRoutePolicyFeatureMapOutput() TransportRoutePolicyFeatureMapOutput
	ToTransportRoutePolicyFeatureMapOutputWithContext(context.Context) TransportRoutePolicyFeatureMapOutput
}

type TransportRoutePolicyFeatureMap map[string]TransportRoutePolicyFeatureInput

func (TransportRoutePolicyFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportRoutePolicyFeature)(nil)).Elem()
}

func (i TransportRoutePolicyFeatureMap) ToTransportRoutePolicyFeatureMapOutput() TransportRoutePolicyFeatureMapOutput {
	return i.ToTransportRoutePolicyFeatureMapOutputWithContext(context.Background())
}

func (i TransportRoutePolicyFeatureMap) ToTransportRoutePolicyFeatureMapOutputWithContext(ctx context.Context) TransportRoutePolicyFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportRoutePolicyFeatureMapOutput)
}

type TransportRoutePolicyFeatureOutput struct{ *pulumi.OutputState }

func (TransportRoutePolicyFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportRoutePolicyFeature)(nil)).Elem()
}

func (o TransportRoutePolicyFeatureOutput) ToTransportRoutePolicyFeatureOutput() TransportRoutePolicyFeatureOutput {
	return o
}

func (o TransportRoutePolicyFeatureOutput) ToTransportRoutePolicyFeatureOutputWithContext(ctx context.Context) TransportRoutePolicyFeatureOutput {
	return o
}

// Default Action - Choices: `reject`, `accept` - Default value: `reject`
func (o TransportRoutePolicyFeatureOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportRoutePolicyFeature) pulumi.StringPtrOutput { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// The description of the Feature
func (o TransportRoutePolicyFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportRoutePolicyFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o TransportRoutePolicyFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportRoutePolicyFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The name of the Feature
func (o TransportRoutePolicyFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportRoutePolicyFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Route Policy List
func (o TransportRoutePolicyFeatureOutput) Sequences() TransportRoutePolicyFeatureSequenceArrayOutput {
	return o.ApplyT(func(v *TransportRoutePolicyFeature) TransportRoutePolicyFeatureSequenceArrayOutput {
		return v.Sequences
	}).(TransportRoutePolicyFeatureSequenceArrayOutput)
}

// The version of the Feature
func (o TransportRoutePolicyFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *TransportRoutePolicyFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type TransportRoutePolicyFeatureArrayOutput struct{ *pulumi.OutputState }

func (TransportRoutePolicyFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportRoutePolicyFeature)(nil)).Elem()
}

func (o TransportRoutePolicyFeatureArrayOutput) ToTransportRoutePolicyFeatureArrayOutput() TransportRoutePolicyFeatureArrayOutput {
	return o
}

func (o TransportRoutePolicyFeatureArrayOutput) ToTransportRoutePolicyFeatureArrayOutputWithContext(ctx context.Context) TransportRoutePolicyFeatureArrayOutput {
	return o
}

func (o TransportRoutePolicyFeatureArrayOutput) Index(i pulumi.IntInput) TransportRoutePolicyFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransportRoutePolicyFeature {
		return vs[0].([]*TransportRoutePolicyFeature)[vs[1].(int)]
	}).(TransportRoutePolicyFeatureOutput)
}

type TransportRoutePolicyFeatureMapOutput struct{ *pulumi.OutputState }

func (TransportRoutePolicyFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportRoutePolicyFeature)(nil)).Elem()
}

func (o TransportRoutePolicyFeatureMapOutput) ToTransportRoutePolicyFeatureMapOutput() TransportRoutePolicyFeatureMapOutput {
	return o
}

func (o TransportRoutePolicyFeatureMapOutput) ToTransportRoutePolicyFeatureMapOutputWithContext(ctx context.Context) TransportRoutePolicyFeatureMapOutput {
	return o
}

func (o TransportRoutePolicyFeatureMapOutput) MapIndex(k pulumi.StringInput) TransportRoutePolicyFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransportRoutePolicyFeature {
		return vs[0].(map[string]*TransportRoutePolicyFeature)[vs[1].(string)]
	}).(TransportRoutePolicyFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransportRoutePolicyFeatureInput)(nil)).Elem(), &TransportRoutePolicyFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportRoutePolicyFeatureArrayInput)(nil)).Elem(), TransportRoutePolicyFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportRoutePolicyFeatureMapInput)(nil)).Elem(), TransportRoutePolicyFeatureMap{})
	pulumi.RegisterOutputType(TransportRoutePolicyFeatureOutput{})
	pulumi.RegisterOutputType(TransportRoutePolicyFeatureArrayOutput{})
	pulumi.RegisterOutputType(TransportRoutePolicyFeatureMapOutput{})
}
