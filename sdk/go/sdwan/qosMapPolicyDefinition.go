// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a QoS Map Policy Definition .
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/qosMapPolicyDefinition:QosMapPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type QosMapPolicyDefinition struct {
	pulumi.CustomResourceState

	// The description of the policy definition
	Description pulumi.StringOutput `pulumi:"description"`
	// The name of the policy definition
	Name pulumi.StringOutput `pulumi:"name"`
	// List of QoS schedulers
	QosSchedulers QosMapPolicyDefinitionQosSchedulerArrayOutput `pulumi:"qosSchedulers"`
	// Type
	Type pulumi.StringOutput `pulumi:"type"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewQosMapPolicyDefinition registers a new resource with the given unique name, arguments, and options.
func NewQosMapPolicyDefinition(ctx *pulumi.Context,
	name string, args *QosMapPolicyDefinitionArgs, opts ...pulumi.ResourceOption) (*QosMapPolicyDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.QosSchedulers == nil {
		return nil, errors.New("invalid value for required argument 'QosSchedulers'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource QosMapPolicyDefinition
	err := ctx.RegisterResource("sdwan:index/qosMapPolicyDefinition:QosMapPolicyDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQosMapPolicyDefinition gets an existing QosMapPolicyDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQosMapPolicyDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QosMapPolicyDefinitionState, opts ...pulumi.ResourceOption) (*QosMapPolicyDefinition, error) {
	var resource QosMapPolicyDefinition
	err := ctx.ReadResource("sdwan:index/qosMapPolicyDefinition:QosMapPolicyDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering QosMapPolicyDefinition resources.
type qosMapPolicyDefinitionState struct {
	// The description of the policy definition
	Description *string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of QoS schedulers
	QosSchedulers []QosMapPolicyDefinitionQosScheduler `pulumi:"qosSchedulers"`
	// Type
	Type *string `pulumi:"type"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type QosMapPolicyDefinitionState struct {
	// The description of the policy definition
	Description pulumi.StringPtrInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of QoS schedulers
	QosSchedulers QosMapPolicyDefinitionQosSchedulerArrayInput
	// Type
	Type pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (QosMapPolicyDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*qosMapPolicyDefinitionState)(nil)).Elem()
}

type qosMapPolicyDefinitionArgs struct {
	// The description of the policy definition
	Description string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of QoS schedulers
	QosSchedulers []QosMapPolicyDefinitionQosScheduler `pulumi:"qosSchedulers"`
}

// The set of arguments for constructing a QosMapPolicyDefinition resource.
type QosMapPolicyDefinitionArgs struct {
	// The description of the policy definition
	Description pulumi.StringInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of QoS schedulers
	QosSchedulers QosMapPolicyDefinitionQosSchedulerArrayInput
}

func (QosMapPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*qosMapPolicyDefinitionArgs)(nil)).Elem()
}

type QosMapPolicyDefinitionInput interface {
	pulumi.Input

	ToQosMapPolicyDefinitionOutput() QosMapPolicyDefinitionOutput
	ToQosMapPolicyDefinitionOutputWithContext(ctx context.Context) QosMapPolicyDefinitionOutput
}

func (*QosMapPolicyDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**QosMapPolicyDefinition)(nil)).Elem()
}

func (i *QosMapPolicyDefinition) ToQosMapPolicyDefinitionOutput() QosMapPolicyDefinitionOutput {
	return i.ToQosMapPolicyDefinitionOutputWithContext(context.Background())
}

func (i *QosMapPolicyDefinition) ToQosMapPolicyDefinitionOutputWithContext(ctx context.Context) QosMapPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosMapPolicyDefinitionOutput)
}

// QosMapPolicyDefinitionArrayInput is an input type that accepts QosMapPolicyDefinitionArray and QosMapPolicyDefinitionArrayOutput values.
// You can construct a concrete instance of `QosMapPolicyDefinitionArrayInput` via:
//
//	QosMapPolicyDefinitionArray{ QosMapPolicyDefinitionArgs{...} }
type QosMapPolicyDefinitionArrayInput interface {
	pulumi.Input

	ToQosMapPolicyDefinitionArrayOutput() QosMapPolicyDefinitionArrayOutput
	ToQosMapPolicyDefinitionArrayOutputWithContext(context.Context) QosMapPolicyDefinitionArrayOutput
}

type QosMapPolicyDefinitionArray []QosMapPolicyDefinitionInput

func (QosMapPolicyDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QosMapPolicyDefinition)(nil)).Elem()
}

func (i QosMapPolicyDefinitionArray) ToQosMapPolicyDefinitionArrayOutput() QosMapPolicyDefinitionArrayOutput {
	return i.ToQosMapPolicyDefinitionArrayOutputWithContext(context.Background())
}

func (i QosMapPolicyDefinitionArray) ToQosMapPolicyDefinitionArrayOutputWithContext(ctx context.Context) QosMapPolicyDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosMapPolicyDefinitionArrayOutput)
}

// QosMapPolicyDefinitionMapInput is an input type that accepts QosMapPolicyDefinitionMap and QosMapPolicyDefinitionMapOutput values.
// You can construct a concrete instance of `QosMapPolicyDefinitionMapInput` via:
//
//	QosMapPolicyDefinitionMap{ "key": QosMapPolicyDefinitionArgs{...} }
type QosMapPolicyDefinitionMapInput interface {
	pulumi.Input

	ToQosMapPolicyDefinitionMapOutput() QosMapPolicyDefinitionMapOutput
	ToQosMapPolicyDefinitionMapOutputWithContext(context.Context) QosMapPolicyDefinitionMapOutput
}

type QosMapPolicyDefinitionMap map[string]QosMapPolicyDefinitionInput

func (QosMapPolicyDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QosMapPolicyDefinition)(nil)).Elem()
}

func (i QosMapPolicyDefinitionMap) ToQosMapPolicyDefinitionMapOutput() QosMapPolicyDefinitionMapOutput {
	return i.ToQosMapPolicyDefinitionMapOutputWithContext(context.Background())
}

func (i QosMapPolicyDefinitionMap) ToQosMapPolicyDefinitionMapOutputWithContext(ctx context.Context) QosMapPolicyDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosMapPolicyDefinitionMapOutput)
}

type QosMapPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (QosMapPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QosMapPolicyDefinition)(nil)).Elem()
}

func (o QosMapPolicyDefinitionOutput) ToQosMapPolicyDefinitionOutput() QosMapPolicyDefinitionOutput {
	return o
}

func (o QosMapPolicyDefinitionOutput) ToQosMapPolicyDefinitionOutputWithContext(ctx context.Context) QosMapPolicyDefinitionOutput {
	return o
}

// The description of the policy definition
func (o QosMapPolicyDefinitionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *QosMapPolicyDefinition) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The name of the policy definition
func (o QosMapPolicyDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *QosMapPolicyDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of QoS schedulers
func (o QosMapPolicyDefinitionOutput) QosSchedulers() QosMapPolicyDefinitionQosSchedulerArrayOutput {
	return o.ApplyT(func(v *QosMapPolicyDefinition) QosMapPolicyDefinitionQosSchedulerArrayOutput { return v.QosSchedulers }).(QosMapPolicyDefinitionQosSchedulerArrayOutput)
}

// Type
func (o QosMapPolicyDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *QosMapPolicyDefinition) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The version of the object
func (o QosMapPolicyDefinitionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *QosMapPolicyDefinition) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type QosMapPolicyDefinitionArrayOutput struct{ *pulumi.OutputState }

func (QosMapPolicyDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QosMapPolicyDefinition)(nil)).Elem()
}

func (o QosMapPolicyDefinitionArrayOutput) ToQosMapPolicyDefinitionArrayOutput() QosMapPolicyDefinitionArrayOutput {
	return o
}

func (o QosMapPolicyDefinitionArrayOutput) ToQosMapPolicyDefinitionArrayOutputWithContext(ctx context.Context) QosMapPolicyDefinitionArrayOutput {
	return o
}

func (o QosMapPolicyDefinitionArrayOutput) Index(i pulumi.IntInput) QosMapPolicyDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *QosMapPolicyDefinition {
		return vs[0].([]*QosMapPolicyDefinition)[vs[1].(int)]
	}).(QosMapPolicyDefinitionOutput)
}

type QosMapPolicyDefinitionMapOutput struct{ *pulumi.OutputState }

func (QosMapPolicyDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QosMapPolicyDefinition)(nil)).Elem()
}

func (o QosMapPolicyDefinitionMapOutput) ToQosMapPolicyDefinitionMapOutput() QosMapPolicyDefinitionMapOutput {
	return o
}

func (o QosMapPolicyDefinitionMapOutput) ToQosMapPolicyDefinitionMapOutputWithContext(ctx context.Context) QosMapPolicyDefinitionMapOutput {
	return o
}

func (o QosMapPolicyDefinitionMapOutput) MapIndex(k pulumi.StringInput) QosMapPolicyDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *QosMapPolicyDefinition {
		return vs[0].(map[string]*QosMapPolicyDefinition)[vs[1].(string)]
	}).(QosMapPolicyDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*QosMapPolicyDefinitionInput)(nil)).Elem(), &QosMapPolicyDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*QosMapPolicyDefinitionArrayInput)(nil)).Elem(), QosMapPolicyDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QosMapPolicyDefinitionMapInput)(nil)).Elem(), QosMapPolicyDefinitionMap{})
	pulumi.RegisterOutputType(QosMapPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(QosMapPolicyDefinitionArrayOutput{})
	pulumi.RegisterOutputType(QosMapPolicyDefinitionMapOutput{})
}
