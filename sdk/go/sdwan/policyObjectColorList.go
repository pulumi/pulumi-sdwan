// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Policy Object Color List Policy_object.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewPolicyObjectColorList(ctx, "example", &sdwan.PolicyObjectColorListArgs{
//				Name:             pulumi.String("Example"),
//				Description:      pulumi.String("My Example"),
//				FeatureProfileId: pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				Entries: sdwan.PolicyObjectColorListEntryArray{
//					&sdwan.PolicyObjectColorListEntryArgs{
//						Color: pulumi.String("blue"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Expected import identifier with the format: "policy_object_color_list_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/policyObjectColorList:PolicyObjectColorList example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type PolicyObjectColorList struct {
	pulumi.CustomResourceState

	// The description of the Policy_object
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Color List
	Entries PolicyObjectColorListEntryArrayOutput `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the Policy_object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewPolicyObjectColorList registers a new resource with the given unique name, arguments, and options.
func NewPolicyObjectColorList(ctx *pulumi.Context,
	name string, args *PolicyObjectColorListArgs, opts ...pulumi.ResourceOption) (*PolicyObjectColorList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyObjectColorList
	err := ctx.RegisterResource("sdwan:index/policyObjectColorList:PolicyObjectColorList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyObjectColorList gets an existing PolicyObjectColorList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyObjectColorList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyObjectColorListState, opts ...pulumi.ResourceOption) (*PolicyObjectColorList, error) {
	var resource PolicyObjectColorList
	err := ctx.ReadResource("sdwan:index/policyObjectColorList:PolicyObjectColorList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyObjectColorList resources.
type policyObjectColorListState struct {
	// The description of the Policy_object
	Description *string `pulumi:"description"`
	// Color List
	Entries []PolicyObjectColorListEntry `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name *string `pulumi:"name"`
	// The version of the Policy_object
	Version *int `pulumi:"version"`
}

type PolicyObjectColorListState struct {
	// The description of the Policy_object
	Description pulumi.StringPtrInput
	// Color List
	Entries PolicyObjectColorListEntryArrayInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Policy_object
	Name pulumi.StringPtrInput
	// The version of the Policy_object
	Version pulumi.IntPtrInput
}

func (PolicyObjectColorListState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyObjectColorListState)(nil)).Elem()
}

type policyObjectColorListArgs struct {
	// The description of the Policy_object
	Description *string `pulumi:"description"`
	// Color List
	Entries []PolicyObjectColorListEntry `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a PolicyObjectColorList resource.
type PolicyObjectColorListArgs struct {
	// The description of the Policy_object
	Description pulumi.StringPtrInput
	// Color List
	Entries PolicyObjectColorListEntryArrayInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// The name of the Policy_object
	Name pulumi.StringPtrInput
}

func (PolicyObjectColorListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyObjectColorListArgs)(nil)).Elem()
}

type PolicyObjectColorListInput interface {
	pulumi.Input

	ToPolicyObjectColorListOutput() PolicyObjectColorListOutput
	ToPolicyObjectColorListOutputWithContext(ctx context.Context) PolicyObjectColorListOutput
}

func (*PolicyObjectColorList) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyObjectColorList)(nil)).Elem()
}

func (i *PolicyObjectColorList) ToPolicyObjectColorListOutput() PolicyObjectColorListOutput {
	return i.ToPolicyObjectColorListOutputWithContext(context.Background())
}

func (i *PolicyObjectColorList) ToPolicyObjectColorListOutputWithContext(ctx context.Context) PolicyObjectColorListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectColorListOutput)
}

// PolicyObjectColorListArrayInput is an input type that accepts PolicyObjectColorListArray and PolicyObjectColorListArrayOutput values.
// You can construct a concrete instance of `PolicyObjectColorListArrayInput` via:
//
//	PolicyObjectColorListArray{ PolicyObjectColorListArgs{...} }
type PolicyObjectColorListArrayInput interface {
	pulumi.Input

	ToPolicyObjectColorListArrayOutput() PolicyObjectColorListArrayOutput
	ToPolicyObjectColorListArrayOutputWithContext(context.Context) PolicyObjectColorListArrayOutput
}

type PolicyObjectColorListArray []PolicyObjectColorListInput

func (PolicyObjectColorListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyObjectColorList)(nil)).Elem()
}

func (i PolicyObjectColorListArray) ToPolicyObjectColorListArrayOutput() PolicyObjectColorListArrayOutput {
	return i.ToPolicyObjectColorListArrayOutputWithContext(context.Background())
}

func (i PolicyObjectColorListArray) ToPolicyObjectColorListArrayOutputWithContext(ctx context.Context) PolicyObjectColorListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectColorListArrayOutput)
}

// PolicyObjectColorListMapInput is an input type that accepts PolicyObjectColorListMap and PolicyObjectColorListMapOutput values.
// You can construct a concrete instance of `PolicyObjectColorListMapInput` via:
//
//	PolicyObjectColorListMap{ "key": PolicyObjectColorListArgs{...} }
type PolicyObjectColorListMapInput interface {
	pulumi.Input

	ToPolicyObjectColorListMapOutput() PolicyObjectColorListMapOutput
	ToPolicyObjectColorListMapOutputWithContext(context.Context) PolicyObjectColorListMapOutput
}

type PolicyObjectColorListMap map[string]PolicyObjectColorListInput

func (PolicyObjectColorListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyObjectColorList)(nil)).Elem()
}

func (i PolicyObjectColorListMap) ToPolicyObjectColorListMapOutput() PolicyObjectColorListMapOutput {
	return i.ToPolicyObjectColorListMapOutputWithContext(context.Background())
}

func (i PolicyObjectColorListMap) ToPolicyObjectColorListMapOutputWithContext(ctx context.Context) PolicyObjectColorListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectColorListMapOutput)
}

type PolicyObjectColorListOutput struct{ *pulumi.OutputState }

func (PolicyObjectColorListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyObjectColorList)(nil)).Elem()
}

func (o PolicyObjectColorListOutput) ToPolicyObjectColorListOutput() PolicyObjectColorListOutput {
	return o
}

func (o PolicyObjectColorListOutput) ToPolicyObjectColorListOutputWithContext(ctx context.Context) PolicyObjectColorListOutput {
	return o
}

// The description of the Policy_object
func (o PolicyObjectColorListOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyObjectColorList) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Color List
func (o PolicyObjectColorListOutput) Entries() PolicyObjectColorListEntryArrayOutput {
	return o.ApplyT(func(v *PolicyObjectColorList) PolicyObjectColorListEntryArrayOutput { return v.Entries }).(PolicyObjectColorListEntryArrayOutput)
}

// Feature Profile ID
func (o PolicyObjectColorListOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectColorList) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The name of the Policy_object
func (o PolicyObjectColorListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectColorList) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the Policy_object
func (o PolicyObjectColorListOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *PolicyObjectColorList) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type PolicyObjectColorListArrayOutput struct{ *pulumi.OutputState }

func (PolicyObjectColorListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyObjectColorList)(nil)).Elem()
}

func (o PolicyObjectColorListArrayOutput) ToPolicyObjectColorListArrayOutput() PolicyObjectColorListArrayOutput {
	return o
}

func (o PolicyObjectColorListArrayOutput) ToPolicyObjectColorListArrayOutputWithContext(ctx context.Context) PolicyObjectColorListArrayOutput {
	return o
}

func (o PolicyObjectColorListArrayOutput) Index(i pulumi.IntInput) PolicyObjectColorListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyObjectColorList {
		return vs[0].([]*PolicyObjectColorList)[vs[1].(int)]
	}).(PolicyObjectColorListOutput)
}

type PolicyObjectColorListMapOutput struct{ *pulumi.OutputState }

func (PolicyObjectColorListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyObjectColorList)(nil)).Elem()
}

func (o PolicyObjectColorListMapOutput) ToPolicyObjectColorListMapOutput() PolicyObjectColorListMapOutput {
	return o
}

func (o PolicyObjectColorListMapOutput) ToPolicyObjectColorListMapOutputWithContext(ctx context.Context) PolicyObjectColorListMapOutput {
	return o
}

func (o PolicyObjectColorListMapOutput) MapIndex(k pulumi.StringInput) PolicyObjectColorListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyObjectColorList {
		return vs[0].(map[string]*PolicyObjectColorList)[vs[1].(string)]
	}).(PolicyObjectColorListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectColorListInput)(nil)).Elem(), &PolicyObjectColorList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectColorListArrayInput)(nil)).Elem(), PolicyObjectColorListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectColorListMapInput)(nil)).Elem(), PolicyObjectColorListMap{})
	pulumi.RegisterOutputType(PolicyObjectColorListOutput{})
	pulumi.RegisterOutputType(PolicyObjectColorListArrayOutput{})
	pulumi.RegisterOutputType(PolicyObjectColorListMapOutput{})
}
