// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Cisco Banner feature template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupCiscoBannerFeatureTemplate(ctx, &sdwan.LookupCiscoBannerFeatureTemplateArgs{
//				Id: pulumi.StringRef("f6b2c44c-693c-4763-b010-895aa3d236bd"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCiscoBannerFeatureTemplate(ctx *pulumi.Context, args *LookupCiscoBannerFeatureTemplateArgs, opts ...pulumi.InvokeOption) (*LookupCiscoBannerFeatureTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCiscoBannerFeatureTemplateResult
	err := ctx.Invoke("sdwan:index/getCiscoBannerFeatureTemplate:getCiscoBannerFeatureTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCiscoBannerFeatureTemplate.
type LookupCiscoBannerFeatureTemplateArgs struct {
	// The id of the feature template
	Id *string `pulumi:"id"`
	// The name of the feature template
	Name *string `pulumi:"name"`
}

// A collection of values returned by getCiscoBannerFeatureTemplate.
type LookupCiscoBannerFeatureTemplateResult struct {
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	DeviceTypes []string `pulumi:"deviceTypes"`
	// The id of the feature template
	Id string `pulumi:"id"`
	// Set message to display before login prompt
	Login string `pulumi:"login"`
	// Variable name
	LoginVariable string `pulumi:"loginVariable"`
	// Set message to display after a user logs in
	Motd string `pulumi:"motd"`
	// Variable name
	MotdVariable string `pulumi:"motdVariable"`
	// The name of the feature template
	Name string `pulumi:"name"`
	// The template type
	TemplateType string `pulumi:"templateType"`
	// The version of the feature template
	Version int `pulumi:"version"`
}

func LookupCiscoBannerFeatureTemplateOutput(ctx *pulumi.Context, args LookupCiscoBannerFeatureTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupCiscoBannerFeatureTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCiscoBannerFeatureTemplateResultOutput, error) {
			args := v.(LookupCiscoBannerFeatureTemplateArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupCiscoBannerFeatureTemplateResult
			secret, err := ctx.InvokePackageRaw("sdwan:index/getCiscoBannerFeatureTemplate:getCiscoBannerFeatureTemplate", args, &rv, "", opts...)
			if err != nil {
				return LookupCiscoBannerFeatureTemplateResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupCiscoBannerFeatureTemplateResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupCiscoBannerFeatureTemplateResultOutput), nil
			}
			return output, nil
		}).(LookupCiscoBannerFeatureTemplateResultOutput)
}

// A collection of arguments for invoking getCiscoBannerFeatureTemplate.
type LookupCiscoBannerFeatureTemplateOutputArgs struct {
	// The id of the feature template
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the feature template
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupCiscoBannerFeatureTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCiscoBannerFeatureTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getCiscoBannerFeatureTemplate.
type LookupCiscoBannerFeatureTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupCiscoBannerFeatureTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCiscoBannerFeatureTemplateResult)(nil)).Elem()
}

func (o LookupCiscoBannerFeatureTemplateResultOutput) ToLookupCiscoBannerFeatureTemplateResultOutput() LookupCiscoBannerFeatureTemplateResultOutput {
	return o
}

func (o LookupCiscoBannerFeatureTemplateResultOutput) ToLookupCiscoBannerFeatureTemplateResultOutputWithContext(ctx context.Context) LookupCiscoBannerFeatureTemplateResultOutput {
	return o
}

// The description of the feature template
func (o LookupCiscoBannerFeatureTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoBannerFeatureTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
func (o LookupCiscoBannerFeatureTemplateResultOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCiscoBannerFeatureTemplateResult) []string { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// The id of the feature template
func (o LookupCiscoBannerFeatureTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoBannerFeatureTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// Set message to display before login prompt
func (o LookupCiscoBannerFeatureTemplateResultOutput) Login() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoBannerFeatureTemplateResult) string { return v.Login }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoBannerFeatureTemplateResultOutput) LoginVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoBannerFeatureTemplateResult) string { return v.LoginVariable }).(pulumi.StringOutput)
}

// Set message to display after a user logs in
func (o LookupCiscoBannerFeatureTemplateResultOutput) Motd() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoBannerFeatureTemplateResult) string { return v.Motd }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoBannerFeatureTemplateResultOutput) MotdVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoBannerFeatureTemplateResult) string { return v.MotdVariable }).(pulumi.StringOutput)
}

// The name of the feature template
func (o LookupCiscoBannerFeatureTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoBannerFeatureTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// The template type
func (o LookupCiscoBannerFeatureTemplateResultOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoBannerFeatureTemplateResult) string { return v.TemplateType }).(pulumi.StringOutput)
}

// The version of the feature template
func (o LookupCiscoBannerFeatureTemplateResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoBannerFeatureTemplateResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCiscoBannerFeatureTemplateResultOutput{})
}
