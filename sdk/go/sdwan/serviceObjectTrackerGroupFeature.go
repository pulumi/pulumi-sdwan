// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Service Object Tracker Group Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/serviceObjectTrackerGroupFeature:ServiceObjectTrackerGroupFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type ServiceObjectTrackerGroupFeature struct {
	pulumi.CustomResourceState

	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// Object ID - Range: `1`-`1000`
	ObjectTrackerId pulumi.IntPtrOutput `pulumi:"objectTrackerId"`
	// Variable name
	ObjectTrackerIdVariable pulumi.StringPtrOutput `pulumi:"objectTrackerIdVariable"`
	// tracker ref list criteria boolean and or - Choices: `and`, `or` - Default value: `or`
	Reachable pulumi.StringPtrOutput `pulumi:"reachable"`
	// Variable name
	ReachableVariable pulumi.StringPtrOutput `pulumi:"reachableVariable"`
	// Group Tracks ID Refs
	TrackerElements ServiceObjectTrackerGroupFeatureTrackerElementArrayOutput `pulumi:"trackerElements"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewServiceObjectTrackerGroupFeature registers a new resource with the given unique name, arguments, and options.
func NewServiceObjectTrackerGroupFeature(ctx *pulumi.Context,
	name string, args *ServiceObjectTrackerGroupFeatureArgs, opts ...pulumi.ResourceOption) (*ServiceObjectTrackerGroupFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceObjectTrackerGroupFeature
	err := ctx.RegisterResource("sdwan:index/serviceObjectTrackerGroupFeature:ServiceObjectTrackerGroupFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceObjectTrackerGroupFeature gets an existing ServiceObjectTrackerGroupFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceObjectTrackerGroupFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceObjectTrackerGroupFeatureState, opts ...pulumi.ResourceOption) (*ServiceObjectTrackerGroupFeature, error) {
	var resource ServiceObjectTrackerGroupFeature
	err := ctx.ReadResource("sdwan:index/serviceObjectTrackerGroupFeature:ServiceObjectTrackerGroupFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceObjectTrackerGroupFeature resources.
type serviceObjectTrackerGroupFeatureState struct {
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Object ID - Range: `1`-`1000`
	ObjectTrackerId *int `pulumi:"objectTrackerId"`
	// Variable name
	ObjectTrackerIdVariable *string `pulumi:"objectTrackerIdVariable"`
	// tracker ref list criteria boolean and or - Choices: `and`, `or` - Default value: `or`
	Reachable *string `pulumi:"reachable"`
	// Variable name
	ReachableVariable *string `pulumi:"reachableVariable"`
	// Group Tracks ID Refs
	TrackerElements []ServiceObjectTrackerGroupFeatureTrackerElement `pulumi:"trackerElements"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type ServiceObjectTrackerGroupFeatureState struct {
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Object ID - Range: `1`-`1000`
	ObjectTrackerId pulumi.IntPtrInput
	// Variable name
	ObjectTrackerIdVariable pulumi.StringPtrInput
	// tracker ref list criteria boolean and or - Choices: `and`, `or` - Default value: `or`
	Reachable pulumi.StringPtrInput
	// Variable name
	ReachableVariable pulumi.StringPtrInput
	// Group Tracks ID Refs
	TrackerElements ServiceObjectTrackerGroupFeatureTrackerElementArrayInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (ServiceObjectTrackerGroupFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceObjectTrackerGroupFeatureState)(nil)).Elem()
}

type serviceObjectTrackerGroupFeatureArgs struct {
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Object ID - Range: `1`-`1000`
	ObjectTrackerId *int `pulumi:"objectTrackerId"`
	// Variable name
	ObjectTrackerIdVariable *string `pulumi:"objectTrackerIdVariable"`
	// tracker ref list criteria boolean and or - Choices: `and`, `or` - Default value: `or`
	Reachable *string `pulumi:"reachable"`
	// Variable name
	ReachableVariable *string `pulumi:"reachableVariable"`
	// Group Tracks ID Refs
	TrackerElements []ServiceObjectTrackerGroupFeatureTrackerElement `pulumi:"trackerElements"`
}

// The set of arguments for constructing a ServiceObjectTrackerGroupFeature resource.
type ServiceObjectTrackerGroupFeatureArgs struct {
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Object ID - Range: `1`-`1000`
	ObjectTrackerId pulumi.IntPtrInput
	// Variable name
	ObjectTrackerIdVariable pulumi.StringPtrInput
	// tracker ref list criteria boolean and or - Choices: `and`, `or` - Default value: `or`
	Reachable pulumi.StringPtrInput
	// Variable name
	ReachableVariable pulumi.StringPtrInput
	// Group Tracks ID Refs
	TrackerElements ServiceObjectTrackerGroupFeatureTrackerElementArrayInput
}

func (ServiceObjectTrackerGroupFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceObjectTrackerGroupFeatureArgs)(nil)).Elem()
}

type ServiceObjectTrackerGroupFeatureInput interface {
	pulumi.Input

	ToServiceObjectTrackerGroupFeatureOutput() ServiceObjectTrackerGroupFeatureOutput
	ToServiceObjectTrackerGroupFeatureOutputWithContext(ctx context.Context) ServiceObjectTrackerGroupFeatureOutput
}

func (*ServiceObjectTrackerGroupFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceObjectTrackerGroupFeature)(nil)).Elem()
}

func (i *ServiceObjectTrackerGroupFeature) ToServiceObjectTrackerGroupFeatureOutput() ServiceObjectTrackerGroupFeatureOutput {
	return i.ToServiceObjectTrackerGroupFeatureOutputWithContext(context.Background())
}

func (i *ServiceObjectTrackerGroupFeature) ToServiceObjectTrackerGroupFeatureOutputWithContext(ctx context.Context) ServiceObjectTrackerGroupFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceObjectTrackerGroupFeatureOutput)
}

// ServiceObjectTrackerGroupFeatureArrayInput is an input type that accepts ServiceObjectTrackerGroupFeatureArray and ServiceObjectTrackerGroupFeatureArrayOutput values.
// You can construct a concrete instance of `ServiceObjectTrackerGroupFeatureArrayInput` via:
//
//	ServiceObjectTrackerGroupFeatureArray{ ServiceObjectTrackerGroupFeatureArgs{...} }
type ServiceObjectTrackerGroupFeatureArrayInput interface {
	pulumi.Input

	ToServiceObjectTrackerGroupFeatureArrayOutput() ServiceObjectTrackerGroupFeatureArrayOutput
	ToServiceObjectTrackerGroupFeatureArrayOutputWithContext(context.Context) ServiceObjectTrackerGroupFeatureArrayOutput
}

type ServiceObjectTrackerGroupFeatureArray []ServiceObjectTrackerGroupFeatureInput

func (ServiceObjectTrackerGroupFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceObjectTrackerGroupFeature)(nil)).Elem()
}

func (i ServiceObjectTrackerGroupFeatureArray) ToServiceObjectTrackerGroupFeatureArrayOutput() ServiceObjectTrackerGroupFeatureArrayOutput {
	return i.ToServiceObjectTrackerGroupFeatureArrayOutputWithContext(context.Background())
}

func (i ServiceObjectTrackerGroupFeatureArray) ToServiceObjectTrackerGroupFeatureArrayOutputWithContext(ctx context.Context) ServiceObjectTrackerGroupFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceObjectTrackerGroupFeatureArrayOutput)
}

// ServiceObjectTrackerGroupFeatureMapInput is an input type that accepts ServiceObjectTrackerGroupFeatureMap and ServiceObjectTrackerGroupFeatureMapOutput values.
// You can construct a concrete instance of `ServiceObjectTrackerGroupFeatureMapInput` via:
//
//	ServiceObjectTrackerGroupFeatureMap{ "key": ServiceObjectTrackerGroupFeatureArgs{...} }
type ServiceObjectTrackerGroupFeatureMapInput interface {
	pulumi.Input

	ToServiceObjectTrackerGroupFeatureMapOutput() ServiceObjectTrackerGroupFeatureMapOutput
	ToServiceObjectTrackerGroupFeatureMapOutputWithContext(context.Context) ServiceObjectTrackerGroupFeatureMapOutput
}

type ServiceObjectTrackerGroupFeatureMap map[string]ServiceObjectTrackerGroupFeatureInput

func (ServiceObjectTrackerGroupFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceObjectTrackerGroupFeature)(nil)).Elem()
}

func (i ServiceObjectTrackerGroupFeatureMap) ToServiceObjectTrackerGroupFeatureMapOutput() ServiceObjectTrackerGroupFeatureMapOutput {
	return i.ToServiceObjectTrackerGroupFeatureMapOutputWithContext(context.Background())
}

func (i ServiceObjectTrackerGroupFeatureMap) ToServiceObjectTrackerGroupFeatureMapOutputWithContext(ctx context.Context) ServiceObjectTrackerGroupFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceObjectTrackerGroupFeatureMapOutput)
}

type ServiceObjectTrackerGroupFeatureOutput struct{ *pulumi.OutputState }

func (ServiceObjectTrackerGroupFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceObjectTrackerGroupFeature)(nil)).Elem()
}

func (o ServiceObjectTrackerGroupFeatureOutput) ToServiceObjectTrackerGroupFeatureOutput() ServiceObjectTrackerGroupFeatureOutput {
	return o
}

func (o ServiceObjectTrackerGroupFeatureOutput) ToServiceObjectTrackerGroupFeatureOutputWithContext(ctx context.Context) ServiceObjectTrackerGroupFeatureOutput {
	return o
}

// The description of the Feature
func (o ServiceObjectTrackerGroupFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceObjectTrackerGroupFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o ServiceObjectTrackerGroupFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceObjectTrackerGroupFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The name of the Feature
func (o ServiceObjectTrackerGroupFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceObjectTrackerGroupFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Object ID - Range: `1`-`1000`
func (o ServiceObjectTrackerGroupFeatureOutput) ObjectTrackerId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceObjectTrackerGroupFeature) pulumi.IntPtrOutput { return v.ObjectTrackerId }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceObjectTrackerGroupFeatureOutput) ObjectTrackerIdVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceObjectTrackerGroupFeature) pulumi.StringPtrOutput { return v.ObjectTrackerIdVariable }).(pulumi.StringPtrOutput)
}

// tracker ref list criteria boolean and or - Choices: `and`, `or` - Default value: `or`
func (o ServiceObjectTrackerGroupFeatureOutput) Reachable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceObjectTrackerGroupFeature) pulumi.StringPtrOutput { return v.Reachable }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceObjectTrackerGroupFeatureOutput) ReachableVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceObjectTrackerGroupFeature) pulumi.StringPtrOutput { return v.ReachableVariable }).(pulumi.StringPtrOutput)
}

// Group Tracks ID Refs
func (o ServiceObjectTrackerGroupFeatureOutput) TrackerElements() ServiceObjectTrackerGroupFeatureTrackerElementArrayOutput {
	return o.ApplyT(func(v *ServiceObjectTrackerGroupFeature) ServiceObjectTrackerGroupFeatureTrackerElementArrayOutput {
		return v.TrackerElements
	}).(ServiceObjectTrackerGroupFeatureTrackerElementArrayOutput)
}

// The version of the Feature
func (o ServiceObjectTrackerGroupFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceObjectTrackerGroupFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ServiceObjectTrackerGroupFeatureArrayOutput struct{ *pulumi.OutputState }

func (ServiceObjectTrackerGroupFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceObjectTrackerGroupFeature)(nil)).Elem()
}

func (o ServiceObjectTrackerGroupFeatureArrayOutput) ToServiceObjectTrackerGroupFeatureArrayOutput() ServiceObjectTrackerGroupFeatureArrayOutput {
	return o
}

func (o ServiceObjectTrackerGroupFeatureArrayOutput) ToServiceObjectTrackerGroupFeatureArrayOutputWithContext(ctx context.Context) ServiceObjectTrackerGroupFeatureArrayOutput {
	return o
}

func (o ServiceObjectTrackerGroupFeatureArrayOutput) Index(i pulumi.IntInput) ServiceObjectTrackerGroupFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceObjectTrackerGroupFeature {
		return vs[0].([]*ServiceObjectTrackerGroupFeature)[vs[1].(int)]
	}).(ServiceObjectTrackerGroupFeatureOutput)
}

type ServiceObjectTrackerGroupFeatureMapOutput struct{ *pulumi.OutputState }

func (ServiceObjectTrackerGroupFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceObjectTrackerGroupFeature)(nil)).Elem()
}

func (o ServiceObjectTrackerGroupFeatureMapOutput) ToServiceObjectTrackerGroupFeatureMapOutput() ServiceObjectTrackerGroupFeatureMapOutput {
	return o
}

func (o ServiceObjectTrackerGroupFeatureMapOutput) ToServiceObjectTrackerGroupFeatureMapOutputWithContext(ctx context.Context) ServiceObjectTrackerGroupFeatureMapOutput {
	return o
}

func (o ServiceObjectTrackerGroupFeatureMapOutput) MapIndex(k pulumi.StringInput) ServiceObjectTrackerGroupFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceObjectTrackerGroupFeature {
		return vs[0].(map[string]*ServiceObjectTrackerGroupFeature)[vs[1].(string)]
	}).(ServiceObjectTrackerGroupFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceObjectTrackerGroupFeatureInput)(nil)).Elem(), &ServiceObjectTrackerGroupFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceObjectTrackerGroupFeatureArrayInput)(nil)).Elem(), ServiceObjectTrackerGroupFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceObjectTrackerGroupFeatureMapInput)(nil)).Elem(), ServiceObjectTrackerGroupFeatureMap{})
	pulumi.RegisterOutputType(ServiceObjectTrackerGroupFeatureOutput{})
	pulumi.RegisterOutputType(ServiceObjectTrackerGroupFeatureArrayOutput{})
	pulumi.RegisterOutputType(ServiceObjectTrackerGroupFeatureMapOutput{})
}
