// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Application List Policy Object .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewApplicationListPolicyObject(ctx, "example", &sdwan.ApplicationListPolicyObjectArgs{
//				Name: pulumi.String("Example"),
//				Entries: sdwan.ApplicationListPolicyObjectEntryArray{
//					&sdwan.ApplicationListPolicyObjectEntryArgs{
//						Application: pulumi.String("netflix"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/applicationListPolicyObject:ApplicationListPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type ApplicationListPolicyObject struct {
	pulumi.CustomResourceState

	// List of entries
	Entries ApplicationListPolicyObjectEntryArrayOutput `pulumi:"entries"`
	// The name of the policy object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewApplicationListPolicyObject registers a new resource with the given unique name, arguments, and options.
func NewApplicationListPolicyObject(ctx *pulumi.Context,
	name string, args *ApplicationListPolicyObjectArgs, opts ...pulumi.ResourceOption) (*ApplicationListPolicyObject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplicationListPolicyObject
	err := ctx.RegisterResource("sdwan:index/applicationListPolicyObject:ApplicationListPolicyObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationListPolicyObject gets an existing ApplicationListPolicyObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationListPolicyObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationListPolicyObjectState, opts ...pulumi.ResourceOption) (*ApplicationListPolicyObject, error) {
	var resource ApplicationListPolicyObject
	err := ctx.ReadResource("sdwan:index/applicationListPolicyObject:ApplicationListPolicyObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationListPolicyObject resources.
type applicationListPolicyObjectState struct {
	// List of entries
	Entries []ApplicationListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type ApplicationListPolicyObjectState struct {
	// List of entries
	Entries ApplicationListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (ApplicationListPolicyObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationListPolicyObjectState)(nil)).Elem()
}

type applicationListPolicyObjectArgs struct {
	// List of entries
	Entries []ApplicationListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ApplicationListPolicyObject resource.
type ApplicationListPolicyObjectArgs struct {
	// List of entries
	Entries ApplicationListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
}

func (ApplicationListPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationListPolicyObjectArgs)(nil)).Elem()
}

type ApplicationListPolicyObjectInput interface {
	pulumi.Input

	ToApplicationListPolicyObjectOutput() ApplicationListPolicyObjectOutput
	ToApplicationListPolicyObjectOutputWithContext(ctx context.Context) ApplicationListPolicyObjectOutput
}

func (*ApplicationListPolicyObject) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationListPolicyObject)(nil)).Elem()
}

func (i *ApplicationListPolicyObject) ToApplicationListPolicyObjectOutput() ApplicationListPolicyObjectOutput {
	return i.ToApplicationListPolicyObjectOutputWithContext(context.Background())
}

func (i *ApplicationListPolicyObject) ToApplicationListPolicyObjectOutputWithContext(ctx context.Context) ApplicationListPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListPolicyObjectOutput)
}

// ApplicationListPolicyObjectArrayInput is an input type that accepts ApplicationListPolicyObjectArray and ApplicationListPolicyObjectArrayOutput values.
// You can construct a concrete instance of `ApplicationListPolicyObjectArrayInput` via:
//
//	ApplicationListPolicyObjectArray{ ApplicationListPolicyObjectArgs{...} }
type ApplicationListPolicyObjectArrayInput interface {
	pulumi.Input

	ToApplicationListPolicyObjectArrayOutput() ApplicationListPolicyObjectArrayOutput
	ToApplicationListPolicyObjectArrayOutputWithContext(context.Context) ApplicationListPolicyObjectArrayOutput
}

type ApplicationListPolicyObjectArray []ApplicationListPolicyObjectInput

func (ApplicationListPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationListPolicyObject)(nil)).Elem()
}

func (i ApplicationListPolicyObjectArray) ToApplicationListPolicyObjectArrayOutput() ApplicationListPolicyObjectArrayOutput {
	return i.ToApplicationListPolicyObjectArrayOutputWithContext(context.Background())
}

func (i ApplicationListPolicyObjectArray) ToApplicationListPolicyObjectArrayOutputWithContext(ctx context.Context) ApplicationListPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListPolicyObjectArrayOutput)
}

// ApplicationListPolicyObjectMapInput is an input type that accepts ApplicationListPolicyObjectMap and ApplicationListPolicyObjectMapOutput values.
// You can construct a concrete instance of `ApplicationListPolicyObjectMapInput` via:
//
//	ApplicationListPolicyObjectMap{ "key": ApplicationListPolicyObjectArgs{...} }
type ApplicationListPolicyObjectMapInput interface {
	pulumi.Input

	ToApplicationListPolicyObjectMapOutput() ApplicationListPolicyObjectMapOutput
	ToApplicationListPolicyObjectMapOutputWithContext(context.Context) ApplicationListPolicyObjectMapOutput
}

type ApplicationListPolicyObjectMap map[string]ApplicationListPolicyObjectInput

func (ApplicationListPolicyObjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationListPolicyObject)(nil)).Elem()
}

func (i ApplicationListPolicyObjectMap) ToApplicationListPolicyObjectMapOutput() ApplicationListPolicyObjectMapOutput {
	return i.ToApplicationListPolicyObjectMapOutputWithContext(context.Background())
}

func (i ApplicationListPolicyObjectMap) ToApplicationListPolicyObjectMapOutputWithContext(ctx context.Context) ApplicationListPolicyObjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationListPolicyObjectMapOutput)
}

type ApplicationListPolicyObjectOutput struct{ *pulumi.OutputState }

func (ApplicationListPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationListPolicyObject)(nil)).Elem()
}

func (o ApplicationListPolicyObjectOutput) ToApplicationListPolicyObjectOutput() ApplicationListPolicyObjectOutput {
	return o
}

func (o ApplicationListPolicyObjectOutput) ToApplicationListPolicyObjectOutputWithContext(ctx context.Context) ApplicationListPolicyObjectOutput {
	return o
}

// List of entries
func (o ApplicationListPolicyObjectOutput) Entries() ApplicationListPolicyObjectEntryArrayOutput {
	return o.ApplyT(func(v *ApplicationListPolicyObject) ApplicationListPolicyObjectEntryArrayOutput { return v.Entries }).(ApplicationListPolicyObjectEntryArrayOutput)
}

// The name of the policy object
func (o ApplicationListPolicyObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationListPolicyObject) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the object
func (o ApplicationListPolicyObjectOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ApplicationListPolicyObject) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ApplicationListPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (ApplicationListPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationListPolicyObject)(nil)).Elem()
}

func (o ApplicationListPolicyObjectArrayOutput) ToApplicationListPolicyObjectArrayOutput() ApplicationListPolicyObjectArrayOutput {
	return o
}

func (o ApplicationListPolicyObjectArrayOutput) ToApplicationListPolicyObjectArrayOutputWithContext(ctx context.Context) ApplicationListPolicyObjectArrayOutput {
	return o
}

func (o ApplicationListPolicyObjectArrayOutput) Index(i pulumi.IntInput) ApplicationListPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplicationListPolicyObject {
		return vs[0].([]*ApplicationListPolicyObject)[vs[1].(int)]
	}).(ApplicationListPolicyObjectOutput)
}

type ApplicationListPolicyObjectMapOutput struct{ *pulumi.OutputState }

func (ApplicationListPolicyObjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationListPolicyObject)(nil)).Elem()
}

func (o ApplicationListPolicyObjectMapOutput) ToApplicationListPolicyObjectMapOutput() ApplicationListPolicyObjectMapOutput {
	return o
}

func (o ApplicationListPolicyObjectMapOutput) ToApplicationListPolicyObjectMapOutputWithContext(ctx context.Context) ApplicationListPolicyObjectMapOutput {
	return o
}

func (o ApplicationListPolicyObjectMapOutput) MapIndex(k pulumi.StringInput) ApplicationListPolicyObjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplicationListPolicyObject {
		return vs[0].(map[string]*ApplicationListPolicyObject)[vs[1].(string)]
	}).(ApplicationListPolicyObjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListPolicyObjectInput)(nil)).Elem(), &ApplicationListPolicyObject{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListPolicyObjectArrayInput)(nil)).Elem(), ApplicationListPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationListPolicyObjectMapInput)(nil)).Elem(), ApplicationListPolicyObjectMap{})
	pulumi.RegisterOutputType(ApplicationListPolicyObjectOutput{})
	pulumi.RegisterOutputType(ApplicationListPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(ApplicationListPolicyObjectMapOutput{})
}
