// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a IPv6 ACL Policy Definition .
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/ipv6AclPolicyDefinition:Ipv6AclPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type Ipv6AclPolicyDefinition struct {
	pulumi.CustomResourceState

	// Default action, either `accept` or `drop` - Choices: `accept`, `drop`
	DefaultAction pulumi.StringPtrOutput `pulumi:"defaultAction"`
	// The description of the policy definition
	Description pulumi.StringOutput `pulumi:"description"`
	// The name of the policy definition
	Name pulumi.StringOutput `pulumi:"name"`
	// List of ACL sequences
	Sequences Ipv6AclPolicyDefinitionSequenceArrayOutput `pulumi:"sequences"`
	// Type
	Type pulumi.StringOutput `pulumi:"type"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewIpv6AclPolicyDefinition registers a new resource with the given unique name, arguments, and options.
func NewIpv6AclPolicyDefinition(ctx *pulumi.Context,
	name string, args *Ipv6AclPolicyDefinitionArgs, opts ...pulumi.ResourceOption) (*Ipv6AclPolicyDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Sequences == nil {
		return nil, errors.New("invalid value for required argument 'Sequences'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ipv6AclPolicyDefinition
	err := ctx.RegisterResource("sdwan:index/ipv6AclPolicyDefinition:Ipv6AclPolicyDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpv6AclPolicyDefinition gets an existing Ipv6AclPolicyDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpv6AclPolicyDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Ipv6AclPolicyDefinitionState, opts ...pulumi.ResourceOption) (*Ipv6AclPolicyDefinition, error) {
	var resource Ipv6AclPolicyDefinition
	err := ctx.ReadResource("sdwan:index/ipv6AclPolicyDefinition:Ipv6AclPolicyDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ipv6AclPolicyDefinition resources.
type ipv6AclPolicyDefinitionState struct {
	// Default action, either `accept` or `drop` - Choices: `accept`, `drop`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the policy definition
	Description *string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of ACL sequences
	Sequences []Ipv6AclPolicyDefinitionSequence `pulumi:"sequences"`
	// Type
	Type *string `pulumi:"type"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type Ipv6AclPolicyDefinitionState struct {
	// Default action, either `accept` or `drop` - Choices: `accept`, `drop`
	DefaultAction pulumi.StringPtrInput
	// The description of the policy definition
	Description pulumi.StringPtrInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of ACL sequences
	Sequences Ipv6AclPolicyDefinitionSequenceArrayInput
	// Type
	Type pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (Ipv6AclPolicyDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipv6AclPolicyDefinitionState)(nil)).Elem()
}

type ipv6AclPolicyDefinitionArgs struct {
	// Default action, either `accept` or `drop` - Choices: `accept`, `drop`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the policy definition
	Description string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of ACL sequences
	Sequences []Ipv6AclPolicyDefinitionSequence `pulumi:"sequences"`
}

// The set of arguments for constructing a Ipv6AclPolicyDefinition resource.
type Ipv6AclPolicyDefinitionArgs struct {
	// Default action, either `accept` or `drop` - Choices: `accept`, `drop`
	DefaultAction pulumi.StringPtrInput
	// The description of the policy definition
	Description pulumi.StringInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of ACL sequences
	Sequences Ipv6AclPolicyDefinitionSequenceArrayInput
}

func (Ipv6AclPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipv6AclPolicyDefinitionArgs)(nil)).Elem()
}

type Ipv6AclPolicyDefinitionInput interface {
	pulumi.Input

	ToIpv6AclPolicyDefinitionOutput() Ipv6AclPolicyDefinitionOutput
	ToIpv6AclPolicyDefinitionOutputWithContext(ctx context.Context) Ipv6AclPolicyDefinitionOutput
}

func (*Ipv6AclPolicyDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6AclPolicyDefinition)(nil)).Elem()
}

func (i *Ipv6AclPolicyDefinition) ToIpv6AclPolicyDefinitionOutput() Ipv6AclPolicyDefinitionOutput {
	return i.ToIpv6AclPolicyDefinitionOutputWithContext(context.Background())
}

func (i *Ipv6AclPolicyDefinition) ToIpv6AclPolicyDefinitionOutputWithContext(ctx context.Context) Ipv6AclPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6AclPolicyDefinitionOutput)
}

// Ipv6AclPolicyDefinitionArrayInput is an input type that accepts Ipv6AclPolicyDefinitionArray and Ipv6AclPolicyDefinitionArrayOutput values.
// You can construct a concrete instance of `Ipv6AclPolicyDefinitionArrayInput` via:
//
//	Ipv6AclPolicyDefinitionArray{ Ipv6AclPolicyDefinitionArgs{...} }
type Ipv6AclPolicyDefinitionArrayInput interface {
	pulumi.Input

	ToIpv6AclPolicyDefinitionArrayOutput() Ipv6AclPolicyDefinitionArrayOutput
	ToIpv6AclPolicyDefinitionArrayOutputWithContext(context.Context) Ipv6AclPolicyDefinitionArrayOutput
}

type Ipv6AclPolicyDefinitionArray []Ipv6AclPolicyDefinitionInput

func (Ipv6AclPolicyDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ipv6AclPolicyDefinition)(nil)).Elem()
}

func (i Ipv6AclPolicyDefinitionArray) ToIpv6AclPolicyDefinitionArrayOutput() Ipv6AclPolicyDefinitionArrayOutput {
	return i.ToIpv6AclPolicyDefinitionArrayOutputWithContext(context.Background())
}

func (i Ipv6AclPolicyDefinitionArray) ToIpv6AclPolicyDefinitionArrayOutputWithContext(ctx context.Context) Ipv6AclPolicyDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6AclPolicyDefinitionArrayOutput)
}

// Ipv6AclPolicyDefinitionMapInput is an input type that accepts Ipv6AclPolicyDefinitionMap and Ipv6AclPolicyDefinitionMapOutput values.
// You can construct a concrete instance of `Ipv6AclPolicyDefinitionMapInput` via:
//
//	Ipv6AclPolicyDefinitionMap{ "key": Ipv6AclPolicyDefinitionArgs{...} }
type Ipv6AclPolicyDefinitionMapInput interface {
	pulumi.Input

	ToIpv6AclPolicyDefinitionMapOutput() Ipv6AclPolicyDefinitionMapOutput
	ToIpv6AclPolicyDefinitionMapOutputWithContext(context.Context) Ipv6AclPolicyDefinitionMapOutput
}

type Ipv6AclPolicyDefinitionMap map[string]Ipv6AclPolicyDefinitionInput

func (Ipv6AclPolicyDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ipv6AclPolicyDefinition)(nil)).Elem()
}

func (i Ipv6AclPolicyDefinitionMap) ToIpv6AclPolicyDefinitionMapOutput() Ipv6AclPolicyDefinitionMapOutput {
	return i.ToIpv6AclPolicyDefinitionMapOutputWithContext(context.Background())
}

func (i Ipv6AclPolicyDefinitionMap) ToIpv6AclPolicyDefinitionMapOutputWithContext(ctx context.Context) Ipv6AclPolicyDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6AclPolicyDefinitionMapOutput)
}

type Ipv6AclPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (Ipv6AclPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6AclPolicyDefinition)(nil)).Elem()
}

func (o Ipv6AclPolicyDefinitionOutput) ToIpv6AclPolicyDefinitionOutput() Ipv6AclPolicyDefinitionOutput {
	return o
}

func (o Ipv6AclPolicyDefinitionOutput) ToIpv6AclPolicyDefinitionOutputWithContext(ctx context.Context) Ipv6AclPolicyDefinitionOutput {
	return o
}

// Default action, either `accept` or `drop` - Choices: `accept`, `drop`
func (o Ipv6AclPolicyDefinitionOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6AclPolicyDefinition) pulumi.StringPtrOutput { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// The description of the policy definition
func (o Ipv6AclPolicyDefinitionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv6AclPolicyDefinition) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The name of the policy definition
func (o Ipv6AclPolicyDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv6AclPolicyDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of ACL sequences
func (o Ipv6AclPolicyDefinitionOutput) Sequences() Ipv6AclPolicyDefinitionSequenceArrayOutput {
	return o.ApplyT(func(v *Ipv6AclPolicyDefinition) Ipv6AclPolicyDefinitionSequenceArrayOutput { return v.Sequences }).(Ipv6AclPolicyDefinitionSequenceArrayOutput)
}

// Type
func (o Ipv6AclPolicyDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv6AclPolicyDefinition) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The version of the object
func (o Ipv6AclPolicyDefinitionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *Ipv6AclPolicyDefinition) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type Ipv6AclPolicyDefinitionArrayOutput struct{ *pulumi.OutputState }

func (Ipv6AclPolicyDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ipv6AclPolicyDefinition)(nil)).Elem()
}

func (o Ipv6AclPolicyDefinitionArrayOutput) ToIpv6AclPolicyDefinitionArrayOutput() Ipv6AclPolicyDefinitionArrayOutput {
	return o
}

func (o Ipv6AclPolicyDefinitionArrayOutput) ToIpv6AclPolicyDefinitionArrayOutputWithContext(ctx context.Context) Ipv6AclPolicyDefinitionArrayOutput {
	return o
}

func (o Ipv6AclPolicyDefinitionArrayOutput) Index(i pulumi.IntInput) Ipv6AclPolicyDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ipv6AclPolicyDefinition {
		return vs[0].([]*Ipv6AclPolicyDefinition)[vs[1].(int)]
	}).(Ipv6AclPolicyDefinitionOutput)
}

type Ipv6AclPolicyDefinitionMapOutput struct{ *pulumi.OutputState }

func (Ipv6AclPolicyDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ipv6AclPolicyDefinition)(nil)).Elem()
}

func (o Ipv6AclPolicyDefinitionMapOutput) ToIpv6AclPolicyDefinitionMapOutput() Ipv6AclPolicyDefinitionMapOutput {
	return o
}

func (o Ipv6AclPolicyDefinitionMapOutput) ToIpv6AclPolicyDefinitionMapOutputWithContext(ctx context.Context) Ipv6AclPolicyDefinitionMapOutput {
	return o
}

func (o Ipv6AclPolicyDefinitionMapOutput) MapIndex(k pulumi.StringInput) Ipv6AclPolicyDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ipv6AclPolicyDefinition {
		return vs[0].(map[string]*Ipv6AclPolicyDefinition)[vs[1].(string)]
	}).(Ipv6AclPolicyDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6AclPolicyDefinitionInput)(nil)).Elem(), &Ipv6AclPolicyDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6AclPolicyDefinitionArrayInput)(nil)).Elem(), Ipv6AclPolicyDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6AclPolicyDefinitionMapInput)(nil)).Elem(), Ipv6AclPolicyDefinitionMap{})
	pulumi.RegisterOutputType(Ipv6AclPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(Ipv6AclPolicyDefinitionArrayOutput{})
	pulumi.RegisterOutputType(Ipv6AclPolicyDefinitionMapOutput{})
}
