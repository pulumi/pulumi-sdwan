// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Service LAN VPN Interface SVI Feature Associate DHCP Server Feature .
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature(ctx, "example", &sdwan.ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs{
//				FeatureProfileId:                   pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				ServiceLanVpnFeatureId:             pulumi.String("140331f6-5418-4755-a059-13c77eb96037"),
//				ServiceLanVpnInterfaceSviFeatureId: pulumi.String("140331f6-5418-4755-a059-13c77eb96037"),
//				ServiceDhcpServerFeatureId:         pulumi.String("140331f6-5418-4755-a059-13c77eb96037"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/serviceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature:ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature struct {
	pulumi.CustomResourceState

	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// Service DHCP Server Feature ID
	ServiceDhcpServerFeatureId pulumi.StringOutput `pulumi:"serviceDhcpServerFeatureId"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringOutput `pulumi:"serviceLanVpnFeatureId"`
	// Service LAN VPN Interface SVI Feature ID
	ServiceLanVpnInterfaceSviFeatureId pulumi.StringOutput `pulumi:"serviceLanVpnInterfaceSviFeatureId"`
}

// NewServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature registers a new resource with the given unique name, arguments, and options.
func NewServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature(ctx *pulumi.Context,
	name string, args *ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs, opts ...pulumi.ResourceOption) (*ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	if args.ServiceDhcpServerFeatureId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceDhcpServerFeatureId'")
	}
	if args.ServiceLanVpnFeatureId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceLanVpnFeatureId'")
	}
	if args.ServiceLanVpnInterfaceSviFeatureId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceLanVpnInterfaceSviFeatureId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature
	err := ctx.RegisterResource("sdwan:index/serviceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature:ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature gets an existing ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureState, opts ...pulumi.ResourceOption) (*ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature, error) {
	var resource ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature
	err := ctx.ReadResource("sdwan:index/serviceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature:ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature resources.
type serviceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureState struct {
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// Service DHCP Server Feature ID
	ServiceDhcpServerFeatureId *string `pulumi:"serviceDhcpServerFeatureId"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId *string `pulumi:"serviceLanVpnFeatureId"`
	// Service LAN VPN Interface SVI Feature ID
	ServiceLanVpnInterfaceSviFeatureId *string `pulumi:"serviceLanVpnInterfaceSviFeatureId"`
}

type ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureState struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// Service DHCP Server Feature ID
	ServiceDhcpServerFeatureId pulumi.StringPtrInput
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringPtrInput
	// Service LAN VPN Interface SVI Feature ID
	ServiceLanVpnInterfaceSviFeatureId pulumi.StringPtrInput
}

func (ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureState)(nil)).Elem()
}

type serviceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// Service DHCP Server Feature ID
	ServiceDhcpServerFeatureId string `pulumi:"serviceDhcpServerFeatureId"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId string `pulumi:"serviceLanVpnFeatureId"`
	// Service LAN VPN Interface SVI Feature ID
	ServiceLanVpnInterfaceSviFeatureId string `pulumi:"serviceLanVpnInterfaceSviFeatureId"`
}

// The set of arguments for constructing a ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature resource.
type ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// Service DHCP Server Feature ID
	ServiceDhcpServerFeatureId pulumi.StringInput
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringInput
	// Service LAN VPN Interface SVI Feature ID
	ServiceLanVpnInterfaceSviFeatureId pulumi.StringInput
}

func (ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs)(nil)).Elem()
}

type ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureInput interface {
	pulumi.Input

	ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput() ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput
	ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput
}

func (*ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature)(nil)).Elem()
}

func (i *ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature) ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput() ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput {
	return i.ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutputWithContext(context.Background())
}

func (i *ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature) ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput)
}

// ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayInput is an input type that accepts ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArray and ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutput values.
// You can construct a concrete instance of `ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayInput` via:
//
//	ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArray{ ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs{...} }
type ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayInput interface {
	pulumi.Input

	ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutput() ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutput
	ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutputWithContext(context.Context) ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutput
}

type ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArray []ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureInput

func (ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature)(nil)).Elem()
}

func (i ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArray) ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutput() ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutput {
	return i.ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutputWithContext(context.Background())
}

func (i ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArray) ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutput)
}

// ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapInput is an input type that accepts ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMap and ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutput values.
// You can construct a concrete instance of `ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapInput` via:
//
//	ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMap{ "key": ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs{...} }
type ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapInput interface {
	pulumi.Input

	ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutput() ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutput
	ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutputWithContext(context.Context) ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutput
}

type ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMap map[string]ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureInput

func (ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature)(nil)).Elem()
}

func (i ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMap) ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutput() ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutput {
	return i.ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutputWithContext(context.Background())
}

func (i ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMap) ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutput)
}

type ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput struct{ *pulumi.OutputState }

func (ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature)(nil)).Elem()
}

func (o ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput) ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput() ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput {
	return o
}

func (o ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput) ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput {
	return o
}

// Feature Profile ID
func (o ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature) pulumi.StringOutput {
		return v.FeatureProfileId
	}).(pulumi.StringOutput)
}

// Service DHCP Server Feature ID
func (o ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput) ServiceDhcpServerFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature) pulumi.StringOutput {
		return v.ServiceDhcpServerFeatureId
	}).(pulumi.StringOutput)
}

// Service LAN VPN Feature ID
func (o ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput) ServiceLanVpnFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature) pulumi.StringOutput {
		return v.ServiceLanVpnFeatureId
	}).(pulumi.StringOutput)
}

// Service LAN VPN Interface SVI Feature ID
func (o ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput) ServiceLanVpnInterfaceSviFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature) pulumi.StringOutput {
		return v.ServiceLanVpnInterfaceSviFeatureId
	}).(pulumi.StringOutput)
}

type ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutput struct{ *pulumi.OutputState }

func (ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature)(nil)).Elem()
}

func (o ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutput) ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutput() ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutput {
	return o
}

func (o ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutput) ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutput {
	return o
}

func (o ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutput) Index(i pulumi.IntInput) ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature {
		return vs[0].([]*ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature)[vs[1].(int)]
	}).(ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput)
}

type ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutput struct{ *pulumi.OutputState }

func (ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature)(nil)).Elem()
}

func (o ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutput) ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutput() ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutput {
	return o
}

func (o ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutput) ToServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutput {
	return o
}

func (o ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutput) MapIndex(k pulumi.StringInput) ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature {
		return vs[0].(map[string]*ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature)[vs[1].(string)]
	}).(ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureInput)(nil)).Elem(), &ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayInput)(nil)).Elem(), ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapInput)(nil)).Elem(), ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMap{})
	pulumi.RegisterOutputType(ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureOutput{})
	pulumi.RegisterOutputType(ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArrayOutput{})
	pulumi.RegisterOutputType(ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureMapOutput{})
}
