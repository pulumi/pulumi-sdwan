// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Transport WAN VPN profile parcel.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/transportWanVpnProfileParcel:TransportWanVpnProfileParcel example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type TransportWanVpnProfileParcel struct {
	pulumi.CustomResourceState

	// The description of the profile parcel
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Enhance ECMP Keying - Default value: `false`
	EnhanceEcmpKeying pulumi.BoolPtrOutput `pulumi:"enhanceEcmpKeying"`
	// Variable name
	EnhanceEcmpKeyingVariable pulumi.StringPtrOutput `pulumi:"enhanceEcmpKeyingVariable"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrOutput `pulumi:"featureProfileId"`
	// IPv4 Static Route
	Ipv4StaticRoutes TransportWanVpnProfileParcelIpv4StaticRouteArrayOutput `pulumi:"ipv4StaticRoutes"`
	// IPv6 Static Route
	Ipv6StaticRoutes TransportWanVpnProfileParcelIpv6StaticRouteArrayOutput `pulumi:"ipv6StaticRoutes"`
	// The name of the profile parcel
	Name pulumi.StringOutput `pulumi:"name"`
	// NAT64 V4 Pool
	Nat64V4Pools    TransportWanVpnProfileParcelNat64V4PoolArrayOutput    `pulumi:"nat64V4Pools"`
	NewHostMappings TransportWanVpnProfileParcelNewHostMappingArrayOutput `pulumi:"newHostMappings"`
	// Primary DNS Address (IPv4)
	PrimaryDnsAddressIpv4 pulumi.StringPtrOutput `pulumi:"primaryDnsAddressIpv4"`
	// Variable name
	PrimaryDnsAddressIpv4Variable pulumi.StringPtrOutput `pulumi:"primaryDnsAddressIpv4Variable"`
	// Primary DNS Address (IPv6)
	PrimaryDnsAddressIpv6 pulumi.StringPtrOutput `pulumi:"primaryDnsAddressIpv6"`
	// Variable name
	PrimaryDnsAddressIpv6Variable pulumi.StringPtrOutput `pulumi:"primaryDnsAddressIpv6Variable"`
	// Secondary DNS Address (IPv4)
	SecondaryDnsAddressIpv4 pulumi.StringPtrOutput `pulumi:"secondaryDnsAddressIpv4"`
	// Variable name
	SecondaryDnsAddressIpv4Variable pulumi.StringPtrOutput `pulumi:"secondaryDnsAddressIpv4Variable"`
	// Secondary DNS Address (IPv6)
	SecondaryDnsAddressIpv6 pulumi.StringPtrOutput `pulumi:"secondaryDnsAddressIpv6"`
	// Variable name
	SecondaryDnsAddressIpv6Variable pulumi.StringPtrOutput `pulumi:"secondaryDnsAddressIpv6Variable"`
	// Service
	Services TransportWanVpnProfileParcelServiceArrayOutput `pulumi:"services"`
	// The version of the profile parcel
	Version pulumi.IntOutput `pulumi:"version"`
	// VPN - Default value: `0`
	Vpn pulumi.IntPtrOutput `pulumi:"vpn"`
}

// NewTransportWanVpnProfileParcel registers a new resource with the given unique name, arguments, and options.
func NewTransportWanVpnProfileParcel(ctx *pulumi.Context,
	name string, args *TransportWanVpnProfileParcelArgs, opts ...pulumi.ResourceOption) (*TransportWanVpnProfileParcel, error) {
	if args == nil {
		args = &TransportWanVpnProfileParcelArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransportWanVpnProfileParcel
	err := ctx.RegisterResource("sdwan:index/transportWanVpnProfileParcel:TransportWanVpnProfileParcel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransportWanVpnProfileParcel gets an existing TransportWanVpnProfileParcel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransportWanVpnProfileParcel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransportWanVpnProfileParcelState, opts ...pulumi.ResourceOption) (*TransportWanVpnProfileParcel, error) {
	var resource TransportWanVpnProfileParcel
	err := ctx.ReadResource("sdwan:index/transportWanVpnProfileParcel:TransportWanVpnProfileParcel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransportWanVpnProfileParcel resources.
type transportWanVpnProfileParcelState struct {
	// The description of the profile parcel
	Description *string `pulumi:"description"`
	// Enhance ECMP Keying - Default value: `false`
	EnhanceEcmpKeying *bool `pulumi:"enhanceEcmpKeying"`
	// Variable name
	EnhanceEcmpKeyingVariable *string `pulumi:"enhanceEcmpKeyingVariable"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// IPv4 Static Route
	Ipv4StaticRoutes []TransportWanVpnProfileParcelIpv4StaticRoute `pulumi:"ipv4StaticRoutes"`
	// IPv6 Static Route
	Ipv6StaticRoutes []TransportWanVpnProfileParcelIpv6StaticRoute `pulumi:"ipv6StaticRoutes"`
	// The name of the profile parcel
	Name *string `pulumi:"name"`
	// NAT64 V4 Pool
	Nat64V4Pools    []TransportWanVpnProfileParcelNat64V4Pool    `pulumi:"nat64V4Pools"`
	NewHostMappings []TransportWanVpnProfileParcelNewHostMapping `pulumi:"newHostMappings"`
	// Primary DNS Address (IPv4)
	PrimaryDnsAddressIpv4 *string `pulumi:"primaryDnsAddressIpv4"`
	// Variable name
	PrimaryDnsAddressIpv4Variable *string `pulumi:"primaryDnsAddressIpv4Variable"`
	// Primary DNS Address (IPv6)
	PrimaryDnsAddressIpv6 *string `pulumi:"primaryDnsAddressIpv6"`
	// Variable name
	PrimaryDnsAddressIpv6Variable *string `pulumi:"primaryDnsAddressIpv6Variable"`
	// Secondary DNS Address (IPv4)
	SecondaryDnsAddressIpv4 *string `pulumi:"secondaryDnsAddressIpv4"`
	// Variable name
	SecondaryDnsAddressIpv4Variable *string `pulumi:"secondaryDnsAddressIpv4Variable"`
	// Secondary DNS Address (IPv6)
	SecondaryDnsAddressIpv6 *string `pulumi:"secondaryDnsAddressIpv6"`
	// Variable name
	SecondaryDnsAddressIpv6Variable *string `pulumi:"secondaryDnsAddressIpv6Variable"`
	// Service
	Services []TransportWanVpnProfileParcelService `pulumi:"services"`
	// The version of the profile parcel
	Version *int `pulumi:"version"`
	// VPN - Default value: `0`
	Vpn *int `pulumi:"vpn"`
}

type TransportWanVpnProfileParcelState struct {
	// The description of the profile parcel
	Description pulumi.StringPtrInput
	// Enhance ECMP Keying - Default value: `false`
	EnhanceEcmpKeying pulumi.BoolPtrInput
	// Variable name
	EnhanceEcmpKeyingVariable pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// IPv4 Static Route
	Ipv4StaticRoutes TransportWanVpnProfileParcelIpv4StaticRouteArrayInput
	// IPv6 Static Route
	Ipv6StaticRoutes TransportWanVpnProfileParcelIpv6StaticRouteArrayInput
	// The name of the profile parcel
	Name pulumi.StringPtrInput
	// NAT64 V4 Pool
	Nat64V4Pools    TransportWanVpnProfileParcelNat64V4PoolArrayInput
	NewHostMappings TransportWanVpnProfileParcelNewHostMappingArrayInput
	// Primary DNS Address (IPv4)
	PrimaryDnsAddressIpv4 pulumi.StringPtrInput
	// Variable name
	PrimaryDnsAddressIpv4Variable pulumi.StringPtrInput
	// Primary DNS Address (IPv6)
	PrimaryDnsAddressIpv6 pulumi.StringPtrInput
	// Variable name
	PrimaryDnsAddressIpv6Variable pulumi.StringPtrInput
	// Secondary DNS Address (IPv4)
	SecondaryDnsAddressIpv4 pulumi.StringPtrInput
	// Variable name
	SecondaryDnsAddressIpv4Variable pulumi.StringPtrInput
	// Secondary DNS Address (IPv6)
	SecondaryDnsAddressIpv6 pulumi.StringPtrInput
	// Variable name
	SecondaryDnsAddressIpv6Variable pulumi.StringPtrInput
	// Service
	Services TransportWanVpnProfileParcelServiceArrayInput
	// The version of the profile parcel
	Version pulumi.IntPtrInput
	// VPN - Default value: `0`
	Vpn pulumi.IntPtrInput
}

func (TransportWanVpnProfileParcelState) ElementType() reflect.Type {
	return reflect.TypeOf((*transportWanVpnProfileParcelState)(nil)).Elem()
}

type transportWanVpnProfileParcelArgs struct {
	// The description of the profile parcel
	Description *string `pulumi:"description"`
	// Enhance ECMP Keying - Default value: `false`
	EnhanceEcmpKeying *bool `pulumi:"enhanceEcmpKeying"`
	// Variable name
	EnhanceEcmpKeyingVariable *string `pulumi:"enhanceEcmpKeyingVariable"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// IPv4 Static Route
	Ipv4StaticRoutes []TransportWanVpnProfileParcelIpv4StaticRoute `pulumi:"ipv4StaticRoutes"`
	// IPv6 Static Route
	Ipv6StaticRoutes []TransportWanVpnProfileParcelIpv6StaticRoute `pulumi:"ipv6StaticRoutes"`
	// The name of the profile parcel
	Name *string `pulumi:"name"`
	// NAT64 V4 Pool
	Nat64V4Pools    []TransportWanVpnProfileParcelNat64V4Pool    `pulumi:"nat64V4Pools"`
	NewHostMappings []TransportWanVpnProfileParcelNewHostMapping `pulumi:"newHostMappings"`
	// Primary DNS Address (IPv4)
	PrimaryDnsAddressIpv4 *string `pulumi:"primaryDnsAddressIpv4"`
	// Variable name
	PrimaryDnsAddressIpv4Variable *string `pulumi:"primaryDnsAddressIpv4Variable"`
	// Primary DNS Address (IPv6)
	PrimaryDnsAddressIpv6 *string `pulumi:"primaryDnsAddressIpv6"`
	// Variable name
	PrimaryDnsAddressIpv6Variable *string `pulumi:"primaryDnsAddressIpv6Variable"`
	// Secondary DNS Address (IPv4)
	SecondaryDnsAddressIpv4 *string `pulumi:"secondaryDnsAddressIpv4"`
	// Variable name
	SecondaryDnsAddressIpv4Variable *string `pulumi:"secondaryDnsAddressIpv4Variable"`
	// Secondary DNS Address (IPv6)
	SecondaryDnsAddressIpv6 *string `pulumi:"secondaryDnsAddressIpv6"`
	// Variable name
	SecondaryDnsAddressIpv6Variable *string `pulumi:"secondaryDnsAddressIpv6Variable"`
	// Service
	Services []TransportWanVpnProfileParcelService `pulumi:"services"`
	// VPN - Default value: `0`
	Vpn *int `pulumi:"vpn"`
}

// The set of arguments for constructing a TransportWanVpnProfileParcel resource.
type TransportWanVpnProfileParcelArgs struct {
	// The description of the profile parcel
	Description pulumi.StringPtrInput
	// Enhance ECMP Keying - Default value: `false`
	EnhanceEcmpKeying pulumi.BoolPtrInput
	// Variable name
	EnhanceEcmpKeyingVariable pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// IPv4 Static Route
	Ipv4StaticRoutes TransportWanVpnProfileParcelIpv4StaticRouteArrayInput
	// IPv6 Static Route
	Ipv6StaticRoutes TransportWanVpnProfileParcelIpv6StaticRouteArrayInput
	// The name of the profile parcel
	Name pulumi.StringPtrInput
	// NAT64 V4 Pool
	Nat64V4Pools    TransportWanVpnProfileParcelNat64V4PoolArrayInput
	NewHostMappings TransportWanVpnProfileParcelNewHostMappingArrayInput
	// Primary DNS Address (IPv4)
	PrimaryDnsAddressIpv4 pulumi.StringPtrInput
	// Variable name
	PrimaryDnsAddressIpv4Variable pulumi.StringPtrInput
	// Primary DNS Address (IPv6)
	PrimaryDnsAddressIpv6 pulumi.StringPtrInput
	// Variable name
	PrimaryDnsAddressIpv6Variable pulumi.StringPtrInput
	// Secondary DNS Address (IPv4)
	SecondaryDnsAddressIpv4 pulumi.StringPtrInput
	// Variable name
	SecondaryDnsAddressIpv4Variable pulumi.StringPtrInput
	// Secondary DNS Address (IPv6)
	SecondaryDnsAddressIpv6 pulumi.StringPtrInput
	// Variable name
	SecondaryDnsAddressIpv6Variable pulumi.StringPtrInput
	// Service
	Services TransportWanVpnProfileParcelServiceArrayInput
	// VPN - Default value: `0`
	Vpn pulumi.IntPtrInput
}

func (TransportWanVpnProfileParcelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transportWanVpnProfileParcelArgs)(nil)).Elem()
}

type TransportWanVpnProfileParcelInput interface {
	pulumi.Input

	ToTransportWanVpnProfileParcelOutput() TransportWanVpnProfileParcelOutput
	ToTransportWanVpnProfileParcelOutputWithContext(ctx context.Context) TransportWanVpnProfileParcelOutput
}

func (*TransportWanVpnProfileParcel) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportWanVpnProfileParcel)(nil)).Elem()
}

func (i *TransportWanVpnProfileParcel) ToTransportWanVpnProfileParcelOutput() TransportWanVpnProfileParcelOutput {
	return i.ToTransportWanVpnProfileParcelOutputWithContext(context.Background())
}

func (i *TransportWanVpnProfileParcel) ToTransportWanVpnProfileParcelOutputWithContext(ctx context.Context) TransportWanVpnProfileParcelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnProfileParcelOutput)
}

// TransportWanVpnProfileParcelArrayInput is an input type that accepts TransportWanVpnProfileParcelArray and TransportWanVpnProfileParcelArrayOutput values.
// You can construct a concrete instance of `TransportWanVpnProfileParcelArrayInput` via:
//
//	TransportWanVpnProfileParcelArray{ TransportWanVpnProfileParcelArgs{...} }
type TransportWanVpnProfileParcelArrayInput interface {
	pulumi.Input

	ToTransportWanVpnProfileParcelArrayOutput() TransportWanVpnProfileParcelArrayOutput
	ToTransportWanVpnProfileParcelArrayOutputWithContext(context.Context) TransportWanVpnProfileParcelArrayOutput
}

type TransportWanVpnProfileParcelArray []TransportWanVpnProfileParcelInput

func (TransportWanVpnProfileParcelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportWanVpnProfileParcel)(nil)).Elem()
}

func (i TransportWanVpnProfileParcelArray) ToTransportWanVpnProfileParcelArrayOutput() TransportWanVpnProfileParcelArrayOutput {
	return i.ToTransportWanVpnProfileParcelArrayOutputWithContext(context.Background())
}

func (i TransportWanVpnProfileParcelArray) ToTransportWanVpnProfileParcelArrayOutputWithContext(ctx context.Context) TransportWanVpnProfileParcelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnProfileParcelArrayOutput)
}

// TransportWanVpnProfileParcelMapInput is an input type that accepts TransportWanVpnProfileParcelMap and TransportWanVpnProfileParcelMapOutput values.
// You can construct a concrete instance of `TransportWanVpnProfileParcelMapInput` via:
//
//	TransportWanVpnProfileParcelMap{ "key": TransportWanVpnProfileParcelArgs{...} }
type TransportWanVpnProfileParcelMapInput interface {
	pulumi.Input

	ToTransportWanVpnProfileParcelMapOutput() TransportWanVpnProfileParcelMapOutput
	ToTransportWanVpnProfileParcelMapOutputWithContext(context.Context) TransportWanVpnProfileParcelMapOutput
}

type TransportWanVpnProfileParcelMap map[string]TransportWanVpnProfileParcelInput

func (TransportWanVpnProfileParcelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportWanVpnProfileParcel)(nil)).Elem()
}

func (i TransportWanVpnProfileParcelMap) ToTransportWanVpnProfileParcelMapOutput() TransportWanVpnProfileParcelMapOutput {
	return i.ToTransportWanVpnProfileParcelMapOutputWithContext(context.Background())
}

func (i TransportWanVpnProfileParcelMap) ToTransportWanVpnProfileParcelMapOutputWithContext(ctx context.Context) TransportWanVpnProfileParcelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnProfileParcelMapOutput)
}

type TransportWanVpnProfileParcelOutput struct{ *pulumi.OutputState }

func (TransportWanVpnProfileParcelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportWanVpnProfileParcel)(nil)).Elem()
}

func (o TransportWanVpnProfileParcelOutput) ToTransportWanVpnProfileParcelOutput() TransportWanVpnProfileParcelOutput {
	return o
}

func (o TransportWanVpnProfileParcelOutput) ToTransportWanVpnProfileParcelOutputWithContext(ctx context.Context) TransportWanVpnProfileParcelOutput {
	return o
}

// The description of the profile parcel
func (o TransportWanVpnProfileParcelOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Enhance ECMP Keying - Default value: `false`
func (o TransportWanVpnProfileParcelOutput) EnhanceEcmpKeying() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) pulumi.BoolPtrOutput { return v.EnhanceEcmpKeying }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnProfileParcelOutput) EnhanceEcmpKeyingVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) pulumi.StringPtrOutput { return v.EnhanceEcmpKeyingVariable }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o TransportWanVpnProfileParcelOutput) FeatureProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) pulumi.StringPtrOutput { return v.FeatureProfileId }).(pulumi.StringPtrOutput)
}

// IPv4 Static Route
func (o TransportWanVpnProfileParcelOutput) Ipv4StaticRoutes() TransportWanVpnProfileParcelIpv4StaticRouteArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) TransportWanVpnProfileParcelIpv4StaticRouteArrayOutput {
		return v.Ipv4StaticRoutes
	}).(TransportWanVpnProfileParcelIpv4StaticRouteArrayOutput)
}

// IPv6 Static Route
func (o TransportWanVpnProfileParcelOutput) Ipv6StaticRoutes() TransportWanVpnProfileParcelIpv6StaticRouteArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) TransportWanVpnProfileParcelIpv6StaticRouteArrayOutput {
		return v.Ipv6StaticRoutes
	}).(TransportWanVpnProfileParcelIpv6StaticRouteArrayOutput)
}

// The name of the profile parcel
func (o TransportWanVpnProfileParcelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// NAT64 V4 Pool
func (o TransportWanVpnProfileParcelOutput) Nat64V4Pools() TransportWanVpnProfileParcelNat64V4PoolArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) TransportWanVpnProfileParcelNat64V4PoolArrayOutput {
		return v.Nat64V4Pools
	}).(TransportWanVpnProfileParcelNat64V4PoolArrayOutput)
}

func (o TransportWanVpnProfileParcelOutput) NewHostMappings() TransportWanVpnProfileParcelNewHostMappingArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) TransportWanVpnProfileParcelNewHostMappingArrayOutput {
		return v.NewHostMappings
	}).(TransportWanVpnProfileParcelNewHostMappingArrayOutput)
}

// Primary DNS Address (IPv4)
func (o TransportWanVpnProfileParcelOutput) PrimaryDnsAddressIpv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) pulumi.StringPtrOutput { return v.PrimaryDnsAddressIpv4 }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnProfileParcelOutput) PrimaryDnsAddressIpv4Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) pulumi.StringPtrOutput { return v.PrimaryDnsAddressIpv4Variable }).(pulumi.StringPtrOutput)
}

// Primary DNS Address (IPv6)
func (o TransportWanVpnProfileParcelOutput) PrimaryDnsAddressIpv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) pulumi.StringPtrOutput { return v.PrimaryDnsAddressIpv6 }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnProfileParcelOutput) PrimaryDnsAddressIpv6Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) pulumi.StringPtrOutput { return v.PrimaryDnsAddressIpv6Variable }).(pulumi.StringPtrOutput)
}

// Secondary DNS Address (IPv4)
func (o TransportWanVpnProfileParcelOutput) SecondaryDnsAddressIpv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) pulumi.StringPtrOutput { return v.SecondaryDnsAddressIpv4 }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnProfileParcelOutput) SecondaryDnsAddressIpv4Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) pulumi.StringPtrOutput { return v.SecondaryDnsAddressIpv4Variable }).(pulumi.StringPtrOutput)
}

// Secondary DNS Address (IPv6)
func (o TransportWanVpnProfileParcelOutput) SecondaryDnsAddressIpv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) pulumi.StringPtrOutput { return v.SecondaryDnsAddressIpv6 }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnProfileParcelOutput) SecondaryDnsAddressIpv6Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) pulumi.StringPtrOutput { return v.SecondaryDnsAddressIpv6Variable }).(pulumi.StringPtrOutput)
}

// Service
func (o TransportWanVpnProfileParcelOutput) Services() TransportWanVpnProfileParcelServiceArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) TransportWanVpnProfileParcelServiceArrayOutput {
		return v.Services
	}).(TransportWanVpnProfileParcelServiceArrayOutput)
}

// The version of the profile parcel
func (o TransportWanVpnProfileParcelOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

// VPN - Default value: `0`
func (o TransportWanVpnProfileParcelOutput) Vpn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnProfileParcel) pulumi.IntPtrOutput { return v.Vpn }).(pulumi.IntPtrOutput)
}

type TransportWanVpnProfileParcelArrayOutput struct{ *pulumi.OutputState }

func (TransportWanVpnProfileParcelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportWanVpnProfileParcel)(nil)).Elem()
}

func (o TransportWanVpnProfileParcelArrayOutput) ToTransportWanVpnProfileParcelArrayOutput() TransportWanVpnProfileParcelArrayOutput {
	return o
}

func (o TransportWanVpnProfileParcelArrayOutput) ToTransportWanVpnProfileParcelArrayOutputWithContext(ctx context.Context) TransportWanVpnProfileParcelArrayOutput {
	return o
}

func (o TransportWanVpnProfileParcelArrayOutput) Index(i pulumi.IntInput) TransportWanVpnProfileParcelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransportWanVpnProfileParcel {
		return vs[0].([]*TransportWanVpnProfileParcel)[vs[1].(int)]
	}).(TransportWanVpnProfileParcelOutput)
}

type TransportWanVpnProfileParcelMapOutput struct{ *pulumi.OutputState }

func (TransportWanVpnProfileParcelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportWanVpnProfileParcel)(nil)).Elem()
}

func (o TransportWanVpnProfileParcelMapOutput) ToTransportWanVpnProfileParcelMapOutput() TransportWanVpnProfileParcelMapOutput {
	return o
}

func (o TransportWanVpnProfileParcelMapOutput) ToTransportWanVpnProfileParcelMapOutputWithContext(ctx context.Context) TransportWanVpnProfileParcelMapOutput {
	return o
}

func (o TransportWanVpnProfileParcelMapOutput) MapIndex(k pulumi.StringInput) TransportWanVpnProfileParcelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransportWanVpnProfileParcel {
		return vs[0].(map[string]*TransportWanVpnProfileParcel)[vs[1].(string)]
	}).(TransportWanVpnProfileParcelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnProfileParcelInput)(nil)).Elem(), &TransportWanVpnProfileParcel{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnProfileParcelArrayInput)(nil)).Elem(), TransportWanVpnProfileParcelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnProfileParcelMapInput)(nil)).Elem(), TransportWanVpnProfileParcelMap{})
	pulumi.RegisterOutputType(TransportWanVpnProfileParcelOutput{})
	pulumi.RegisterOutputType(TransportWanVpnProfileParcelArrayOutput{})
	pulumi.RegisterOutputType(TransportWanVpnProfileParcelMapOutput{})
}
