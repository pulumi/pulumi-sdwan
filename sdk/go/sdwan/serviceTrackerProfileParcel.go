// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Service Tracker profile parcel.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewServiceTrackerProfileParcel(ctx, "example", &sdwan.ServiceTrackerProfileParcelArgs{
//				Name:                pulumi.String("Example"),
//				Description:         pulumi.String("My Example"),
//				FeatureProfileId:    pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				TrackerName:         pulumi.String("TRACKER_2"),
//				EndpointApiUrl:      pulumi.String("google.com"),
//				EndpointDnsName:     pulumi.String("google.com"),
//				EndpointIp:          pulumi.String("1.2.3.4"),
//				Protocol:            pulumi.String("tcp"),
//				Port:                pulumi.Int(123),
//				Interval:            pulumi.Int(30),
//				Multiplier:          pulumi.Int(3),
//				Threshold:           pulumi.Int(300),
//				EndpointTrackerType: pulumi.String("static-route"),
//				TrackerType:         pulumi.String("endpoint"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/serviceTrackerProfileParcel:ServiceTrackerProfileParcel example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type ServiceTrackerProfileParcel struct {
	pulumi.CustomResourceState

	// The description of the profile parcel
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// API url of endpoint
	EndpointApiUrl pulumi.StringPtrOutput `pulumi:"endpointApiUrl"`
	// Variable name
	EndpointApiUrlVariable pulumi.StringPtrOutput `pulumi:"endpointApiUrlVariable"`
	// Endpoint DNS Name
	EndpointDnsName pulumi.StringPtrOutput `pulumi:"endpointDnsName"`
	// Variable name
	EndpointDnsNameVariable pulumi.StringPtrOutput `pulumi:"endpointDnsNameVariable"`
	// Endpoint IP
	EndpointIp pulumi.StringPtrOutput `pulumi:"endpointIp"`
	// Variable name
	EndpointIpVariable pulumi.StringPtrOutput `pulumi:"endpointIpVariable"`
	// Endpoint Tracker Type - Choices: `static-route` - Default value: `static-route`
	EndpointTrackerType pulumi.StringPtrOutput `pulumi:"endpointTrackerType"`
	// Variable name
	EndpointTrackerTypeVariable pulumi.StringPtrOutput `pulumi:"endpointTrackerTypeVariable"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// Interval - Range: `20`-`600` - Default value: `60`
	Interval pulumi.IntPtrOutput `pulumi:"interval"`
	// Variable name
	IntervalVariable pulumi.StringPtrOutput `pulumi:"intervalVariable"`
	// Multiplier - Range: `1`-`10` - Default value: `3`
	Multiplier pulumi.IntPtrOutput `pulumi:"multiplier"`
	// Variable name
	MultiplierVariable pulumi.StringPtrOutput `pulumi:"multiplierVariable"`
	// The name of the profile parcel
	Name pulumi.StringOutput `pulumi:"name"`
	// - Range: `1`-`65535`
	Port pulumi.IntPtrOutput `pulumi:"port"`
	// Variable name
	PortVariable pulumi.StringPtrOutput `pulumi:"portVariable"`
	// - Choices: `tcp`, `udp`
	Protocol pulumi.StringPtrOutput `pulumi:"protocol"`
	// Variable name
	ProtocolVariable pulumi.StringPtrOutput `pulumi:"protocolVariable"`
	// Threshold - Range: `100`-`1000` - Default value: `300`
	Threshold pulumi.IntPtrOutput `pulumi:"threshold"`
	// Variable name
	ThresholdVariable pulumi.StringPtrOutput `pulumi:"thresholdVariable"`
	// Tracker Name
	TrackerName pulumi.StringOutput `pulumi:"trackerName"`
	// Variable name
	TrackerNameVariable pulumi.StringPtrOutput `pulumi:"trackerNameVariable"`
	// Tracker Type - Choices: `endpoint` - Default value: `endpoint`
	TrackerType pulumi.StringPtrOutput `pulumi:"trackerType"`
	// Variable name
	TrackerTypeVariable pulumi.StringPtrOutput `pulumi:"trackerTypeVariable"`
	// The version of the profile parcel
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewServiceTrackerProfileParcel registers a new resource with the given unique name, arguments, and options.
func NewServiceTrackerProfileParcel(ctx *pulumi.Context,
	name string, args *ServiceTrackerProfileParcelArgs, opts ...pulumi.ResourceOption) (*ServiceTrackerProfileParcel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	if args.TrackerName == nil {
		return nil, errors.New("invalid value for required argument 'TrackerName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceTrackerProfileParcel
	err := ctx.RegisterResource("sdwan:index/serviceTrackerProfileParcel:ServiceTrackerProfileParcel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceTrackerProfileParcel gets an existing ServiceTrackerProfileParcel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceTrackerProfileParcel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceTrackerProfileParcelState, opts ...pulumi.ResourceOption) (*ServiceTrackerProfileParcel, error) {
	var resource ServiceTrackerProfileParcel
	err := ctx.ReadResource("sdwan:index/serviceTrackerProfileParcel:ServiceTrackerProfileParcel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceTrackerProfileParcel resources.
type serviceTrackerProfileParcelState struct {
	// The description of the profile parcel
	Description *string `pulumi:"description"`
	// API url of endpoint
	EndpointApiUrl *string `pulumi:"endpointApiUrl"`
	// Variable name
	EndpointApiUrlVariable *string `pulumi:"endpointApiUrlVariable"`
	// Endpoint DNS Name
	EndpointDnsName *string `pulumi:"endpointDnsName"`
	// Variable name
	EndpointDnsNameVariable *string `pulumi:"endpointDnsNameVariable"`
	// Endpoint IP
	EndpointIp *string `pulumi:"endpointIp"`
	// Variable name
	EndpointIpVariable *string `pulumi:"endpointIpVariable"`
	// Endpoint Tracker Type - Choices: `static-route` - Default value: `static-route`
	EndpointTrackerType *string `pulumi:"endpointTrackerType"`
	// Variable name
	EndpointTrackerTypeVariable *string `pulumi:"endpointTrackerTypeVariable"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// Interval - Range: `20`-`600` - Default value: `60`
	Interval *int `pulumi:"interval"`
	// Variable name
	IntervalVariable *string `pulumi:"intervalVariable"`
	// Multiplier - Range: `1`-`10` - Default value: `3`
	Multiplier *int `pulumi:"multiplier"`
	// Variable name
	MultiplierVariable *string `pulumi:"multiplierVariable"`
	// The name of the profile parcel
	Name *string `pulumi:"name"`
	// - Range: `1`-`65535`
	Port *int `pulumi:"port"`
	// Variable name
	PortVariable *string `pulumi:"portVariable"`
	// - Choices: `tcp`, `udp`
	Protocol *string `pulumi:"protocol"`
	// Variable name
	ProtocolVariable *string `pulumi:"protocolVariable"`
	// Threshold - Range: `100`-`1000` - Default value: `300`
	Threshold *int `pulumi:"threshold"`
	// Variable name
	ThresholdVariable *string `pulumi:"thresholdVariable"`
	// Tracker Name
	TrackerName *string `pulumi:"trackerName"`
	// Variable name
	TrackerNameVariable *string `pulumi:"trackerNameVariable"`
	// Tracker Type - Choices: `endpoint` - Default value: `endpoint`
	TrackerType *string `pulumi:"trackerType"`
	// Variable name
	TrackerTypeVariable *string `pulumi:"trackerTypeVariable"`
	// The version of the profile parcel
	Version *int `pulumi:"version"`
}

type ServiceTrackerProfileParcelState struct {
	// The description of the profile parcel
	Description pulumi.StringPtrInput
	// API url of endpoint
	EndpointApiUrl pulumi.StringPtrInput
	// Variable name
	EndpointApiUrlVariable pulumi.StringPtrInput
	// Endpoint DNS Name
	EndpointDnsName pulumi.StringPtrInput
	// Variable name
	EndpointDnsNameVariable pulumi.StringPtrInput
	// Endpoint IP
	EndpointIp pulumi.StringPtrInput
	// Variable name
	EndpointIpVariable pulumi.StringPtrInput
	// Endpoint Tracker Type - Choices: `static-route` - Default value: `static-route`
	EndpointTrackerType pulumi.StringPtrInput
	// Variable name
	EndpointTrackerTypeVariable pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// Interval - Range: `20`-`600` - Default value: `60`
	Interval pulumi.IntPtrInput
	// Variable name
	IntervalVariable pulumi.StringPtrInput
	// Multiplier - Range: `1`-`10` - Default value: `3`
	Multiplier pulumi.IntPtrInput
	// Variable name
	MultiplierVariable pulumi.StringPtrInput
	// The name of the profile parcel
	Name pulumi.StringPtrInput
	// - Range: `1`-`65535`
	Port pulumi.IntPtrInput
	// Variable name
	PortVariable pulumi.StringPtrInput
	// - Choices: `tcp`, `udp`
	Protocol pulumi.StringPtrInput
	// Variable name
	ProtocolVariable pulumi.StringPtrInput
	// Threshold - Range: `100`-`1000` - Default value: `300`
	Threshold pulumi.IntPtrInput
	// Variable name
	ThresholdVariable pulumi.StringPtrInput
	// Tracker Name
	TrackerName pulumi.StringPtrInput
	// Variable name
	TrackerNameVariable pulumi.StringPtrInput
	// Tracker Type - Choices: `endpoint` - Default value: `endpoint`
	TrackerType pulumi.StringPtrInput
	// Variable name
	TrackerTypeVariable pulumi.StringPtrInput
	// The version of the profile parcel
	Version pulumi.IntPtrInput
}

func (ServiceTrackerProfileParcelState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceTrackerProfileParcelState)(nil)).Elem()
}

type serviceTrackerProfileParcelArgs struct {
	// The description of the profile parcel
	Description *string `pulumi:"description"`
	// API url of endpoint
	EndpointApiUrl *string `pulumi:"endpointApiUrl"`
	// Variable name
	EndpointApiUrlVariable *string `pulumi:"endpointApiUrlVariable"`
	// Endpoint DNS Name
	EndpointDnsName *string `pulumi:"endpointDnsName"`
	// Variable name
	EndpointDnsNameVariable *string `pulumi:"endpointDnsNameVariable"`
	// Endpoint IP
	EndpointIp *string `pulumi:"endpointIp"`
	// Variable name
	EndpointIpVariable *string `pulumi:"endpointIpVariable"`
	// Endpoint Tracker Type - Choices: `static-route` - Default value: `static-route`
	EndpointTrackerType *string `pulumi:"endpointTrackerType"`
	// Variable name
	EndpointTrackerTypeVariable *string `pulumi:"endpointTrackerTypeVariable"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// Interval - Range: `20`-`600` - Default value: `60`
	Interval *int `pulumi:"interval"`
	// Variable name
	IntervalVariable *string `pulumi:"intervalVariable"`
	// Multiplier - Range: `1`-`10` - Default value: `3`
	Multiplier *int `pulumi:"multiplier"`
	// Variable name
	MultiplierVariable *string `pulumi:"multiplierVariable"`
	// The name of the profile parcel
	Name *string `pulumi:"name"`
	// - Range: `1`-`65535`
	Port *int `pulumi:"port"`
	// Variable name
	PortVariable *string `pulumi:"portVariable"`
	// - Choices: `tcp`, `udp`
	Protocol *string `pulumi:"protocol"`
	// Variable name
	ProtocolVariable *string `pulumi:"protocolVariable"`
	// Threshold - Range: `100`-`1000` - Default value: `300`
	Threshold *int `pulumi:"threshold"`
	// Variable name
	ThresholdVariable *string `pulumi:"thresholdVariable"`
	// Tracker Name
	TrackerName string `pulumi:"trackerName"`
	// Variable name
	TrackerNameVariable *string `pulumi:"trackerNameVariable"`
	// Tracker Type - Choices: `endpoint` - Default value: `endpoint`
	TrackerType *string `pulumi:"trackerType"`
	// Variable name
	TrackerTypeVariable *string `pulumi:"trackerTypeVariable"`
}

// The set of arguments for constructing a ServiceTrackerProfileParcel resource.
type ServiceTrackerProfileParcelArgs struct {
	// The description of the profile parcel
	Description pulumi.StringPtrInput
	// API url of endpoint
	EndpointApiUrl pulumi.StringPtrInput
	// Variable name
	EndpointApiUrlVariable pulumi.StringPtrInput
	// Endpoint DNS Name
	EndpointDnsName pulumi.StringPtrInput
	// Variable name
	EndpointDnsNameVariable pulumi.StringPtrInput
	// Endpoint IP
	EndpointIp pulumi.StringPtrInput
	// Variable name
	EndpointIpVariable pulumi.StringPtrInput
	// Endpoint Tracker Type - Choices: `static-route` - Default value: `static-route`
	EndpointTrackerType pulumi.StringPtrInput
	// Variable name
	EndpointTrackerTypeVariable pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// Interval - Range: `20`-`600` - Default value: `60`
	Interval pulumi.IntPtrInput
	// Variable name
	IntervalVariable pulumi.StringPtrInput
	// Multiplier - Range: `1`-`10` - Default value: `3`
	Multiplier pulumi.IntPtrInput
	// Variable name
	MultiplierVariable pulumi.StringPtrInput
	// The name of the profile parcel
	Name pulumi.StringPtrInput
	// - Range: `1`-`65535`
	Port pulumi.IntPtrInput
	// Variable name
	PortVariable pulumi.StringPtrInput
	// - Choices: `tcp`, `udp`
	Protocol pulumi.StringPtrInput
	// Variable name
	ProtocolVariable pulumi.StringPtrInput
	// Threshold - Range: `100`-`1000` - Default value: `300`
	Threshold pulumi.IntPtrInput
	// Variable name
	ThresholdVariable pulumi.StringPtrInput
	// Tracker Name
	TrackerName pulumi.StringInput
	// Variable name
	TrackerNameVariable pulumi.StringPtrInput
	// Tracker Type - Choices: `endpoint` - Default value: `endpoint`
	TrackerType pulumi.StringPtrInput
	// Variable name
	TrackerTypeVariable pulumi.StringPtrInput
}

func (ServiceTrackerProfileParcelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceTrackerProfileParcelArgs)(nil)).Elem()
}

type ServiceTrackerProfileParcelInput interface {
	pulumi.Input

	ToServiceTrackerProfileParcelOutput() ServiceTrackerProfileParcelOutput
	ToServiceTrackerProfileParcelOutputWithContext(ctx context.Context) ServiceTrackerProfileParcelOutput
}

func (*ServiceTrackerProfileParcel) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTrackerProfileParcel)(nil)).Elem()
}

func (i *ServiceTrackerProfileParcel) ToServiceTrackerProfileParcelOutput() ServiceTrackerProfileParcelOutput {
	return i.ToServiceTrackerProfileParcelOutputWithContext(context.Background())
}

func (i *ServiceTrackerProfileParcel) ToServiceTrackerProfileParcelOutputWithContext(ctx context.Context) ServiceTrackerProfileParcelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTrackerProfileParcelOutput)
}

// ServiceTrackerProfileParcelArrayInput is an input type that accepts ServiceTrackerProfileParcelArray and ServiceTrackerProfileParcelArrayOutput values.
// You can construct a concrete instance of `ServiceTrackerProfileParcelArrayInput` via:
//
//	ServiceTrackerProfileParcelArray{ ServiceTrackerProfileParcelArgs{...} }
type ServiceTrackerProfileParcelArrayInput interface {
	pulumi.Input

	ToServiceTrackerProfileParcelArrayOutput() ServiceTrackerProfileParcelArrayOutput
	ToServiceTrackerProfileParcelArrayOutputWithContext(context.Context) ServiceTrackerProfileParcelArrayOutput
}

type ServiceTrackerProfileParcelArray []ServiceTrackerProfileParcelInput

func (ServiceTrackerProfileParcelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceTrackerProfileParcel)(nil)).Elem()
}

func (i ServiceTrackerProfileParcelArray) ToServiceTrackerProfileParcelArrayOutput() ServiceTrackerProfileParcelArrayOutput {
	return i.ToServiceTrackerProfileParcelArrayOutputWithContext(context.Background())
}

func (i ServiceTrackerProfileParcelArray) ToServiceTrackerProfileParcelArrayOutputWithContext(ctx context.Context) ServiceTrackerProfileParcelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTrackerProfileParcelArrayOutput)
}

// ServiceTrackerProfileParcelMapInput is an input type that accepts ServiceTrackerProfileParcelMap and ServiceTrackerProfileParcelMapOutput values.
// You can construct a concrete instance of `ServiceTrackerProfileParcelMapInput` via:
//
//	ServiceTrackerProfileParcelMap{ "key": ServiceTrackerProfileParcelArgs{...} }
type ServiceTrackerProfileParcelMapInput interface {
	pulumi.Input

	ToServiceTrackerProfileParcelMapOutput() ServiceTrackerProfileParcelMapOutput
	ToServiceTrackerProfileParcelMapOutputWithContext(context.Context) ServiceTrackerProfileParcelMapOutput
}

type ServiceTrackerProfileParcelMap map[string]ServiceTrackerProfileParcelInput

func (ServiceTrackerProfileParcelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceTrackerProfileParcel)(nil)).Elem()
}

func (i ServiceTrackerProfileParcelMap) ToServiceTrackerProfileParcelMapOutput() ServiceTrackerProfileParcelMapOutput {
	return i.ToServiceTrackerProfileParcelMapOutputWithContext(context.Background())
}

func (i ServiceTrackerProfileParcelMap) ToServiceTrackerProfileParcelMapOutputWithContext(ctx context.Context) ServiceTrackerProfileParcelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTrackerProfileParcelMapOutput)
}

type ServiceTrackerProfileParcelOutput struct{ *pulumi.OutputState }

func (ServiceTrackerProfileParcelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTrackerProfileParcel)(nil)).Elem()
}

func (o ServiceTrackerProfileParcelOutput) ToServiceTrackerProfileParcelOutput() ServiceTrackerProfileParcelOutput {
	return o
}

func (o ServiceTrackerProfileParcelOutput) ToServiceTrackerProfileParcelOutputWithContext(ctx context.Context) ServiceTrackerProfileParcelOutput {
	return o
}

// The description of the profile parcel
func (o ServiceTrackerProfileParcelOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// API url of endpoint
func (o ServiceTrackerProfileParcelOutput) EndpointApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringPtrOutput { return v.EndpointApiUrl }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceTrackerProfileParcelOutput) EndpointApiUrlVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringPtrOutput { return v.EndpointApiUrlVariable }).(pulumi.StringPtrOutput)
}

// Endpoint DNS Name
func (o ServiceTrackerProfileParcelOutput) EndpointDnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringPtrOutput { return v.EndpointDnsName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceTrackerProfileParcelOutput) EndpointDnsNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringPtrOutput { return v.EndpointDnsNameVariable }).(pulumi.StringPtrOutput)
}

// Endpoint IP
func (o ServiceTrackerProfileParcelOutput) EndpointIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringPtrOutput { return v.EndpointIp }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceTrackerProfileParcelOutput) EndpointIpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringPtrOutput { return v.EndpointIpVariable }).(pulumi.StringPtrOutput)
}

// Endpoint Tracker Type - Choices: `static-route` - Default value: `static-route`
func (o ServiceTrackerProfileParcelOutput) EndpointTrackerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringPtrOutput { return v.EndpointTrackerType }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceTrackerProfileParcelOutput) EndpointTrackerTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringPtrOutput { return v.EndpointTrackerTypeVariable }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o ServiceTrackerProfileParcelOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// Interval - Range: `20`-`600` - Default value: `60`
func (o ServiceTrackerProfileParcelOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.IntPtrOutput { return v.Interval }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceTrackerProfileParcelOutput) IntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringPtrOutput { return v.IntervalVariable }).(pulumi.StringPtrOutput)
}

// Multiplier - Range: `1`-`10` - Default value: `3`
func (o ServiceTrackerProfileParcelOutput) Multiplier() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.IntPtrOutput { return v.Multiplier }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceTrackerProfileParcelOutput) MultiplierVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringPtrOutput { return v.MultiplierVariable }).(pulumi.StringPtrOutput)
}

// The name of the profile parcel
func (o ServiceTrackerProfileParcelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// - Range: `1`-`65535`
func (o ServiceTrackerProfileParcelOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.IntPtrOutput { return v.Port }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceTrackerProfileParcelOutput) PortVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringPtrOutput { return v.PortVariable }).(pulumi.StringPtrOutput)
}

// - Choices: `tcp`, `udp`
func (o ServiceTrackerProfileParcelOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringPtrOutput { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceTrackerProfileParcelOutput) ProtocolVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringPtrOutput { return v.ProtocolVariable }).(pulumi.StringPtrOutput)
}

// Threshold - Range: `100`-`1000` - Default value: `300`
func (o ServiceTrackerProfileParcelOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.IntPtrOutput { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceTrackerProfileParcelOutput) ThresholdVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringPtrOutput { return v.ThresholdVariable }).(pulumi.StringPtrOutput)
}

// Tracker Name
func (o ServiceTrackerProfileParcelOutput) TrackerName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringOutput { return v.TrackerName }).(pulumi.StringOutput)
}

// Variable name
func (o ServiceTrackerProfileParcelOutput) TrackerNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringPtrOutput { return v.TrackerNameVariable }).(pulumi.StringPtrOutput)
}

// Tracker Type - Choices: `endpoint` - Default value: `endpoint`
func (o ServiceTrackerProfileParcelOutput) TrackerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringPtrOutput { return v.TrackerType }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceTrackerProfileParcelOutput) TrackerTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.StringPtrOutput { return v.TrackerTypeVariable }).(pulumi.StringPtrOutput)
}

// The version of the profile parcel
func (o ServiceTrackerProfileParcelOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceTrackerProfileParcel) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ServiceTrackerProfileParcelArrayOutput struct{ *pulumi.OutputState }

func (ServiceTrackerProfileParcelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceTrackerProfileParcel)(nil)).Elem()
}

func (o ServiceTrackerProfileParcelArrayOutput) ToServiceTrackerProfileParcelArrayOutput() ServiceTrackerProfileParcelArrayOutput {
	return o
}

func (o ServiceTrackerProfileParcelArrayOutput) ToServiceTrackerProfileParcelArrayOutputWithContext(ctx context.Context) ServiceTrackerProfileParcelArrayOutput {
	return o
}

func (o ServiceTrackerProfileParcelArrayOutput) Index(i pulumi.IntInput) ServiceTrackerProfileParcelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceTrackerProfileParcel {
		return vs[0].([]*ServiceTrackerProfileParcel)[vs[1].(int)]
	}).(ServiceTrackerProfileParcelOutput)
}

type ServiceTrackerProfileParcelMapOutput struct{ *pulumi.OutputState }

func (ServiceTrackerProfileParcelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceTrackerProfileParcel)(nil)).Elem()
}

func (o ServiceTrackerProfileParcelMapOutput) ToServiceTrackerProfileParcelMapOutput() ServiceTrackerProfileParcelMapOutput {
	return o
}

func (o ServiceTrackerProfileParcelMapOutput) ToServiceTrackerProfileParcelMapOutputWithContext(ctx context.Context) ServiceTrackerProfileParcelMapOutput {
	return o
}

func (o ServiceTrackerProfileParcelMapOutput) MapIndex(k pulumi.StringInput) ServiceTrackerProfileParcelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceTrackerProfileParcel {
		return vs[0].(map[string]*ServiceTrackerProfileParcel)[vs[1].(string)]
	}).(ServiceTrackerProfileParcelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTrackerProfileParcelInput)(nil)).Elem(), &ServiceTrackerProfileParcel{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTrackerProfileParcelArrayInput)(nil)).Elem(), ServiceTrackerProfileParcelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTrackerProfileParcelMapInput)(nil)).Elem(), ServiceTrackerProfileParcelMap{})
	pulumi.RegisterOutputType(ServiceTrackerProfileParcelOutput{})
	pulumi.RegisterOutputType(ServiceTrackerProfileParcelArrayOutput{})
	pulumi.RegisterOutputType(ServiceTrackerProfileParcelMapOutput{})
}
