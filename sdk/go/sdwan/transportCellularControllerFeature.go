// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Transport Cellular Controller Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewTransportCellularControllerFeature(ctx, "example", &sdwan.TransportCellularControllerFeatureArgs{
//				Name:               pulumi.String("Example"),
//				Description:        pulumi.String("My Example"),
//				FeatureProfileId:   pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				CellularId:         pulumi.String("0/3/0"),
//				PrimarySimSlot:     pulumi.Int(0),
//				SimFailoverRetries: pulumi.Int(5),
//				SimFailoverTimeout: pulumi.Int(3),
//				FirmwareAutoSim:    pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Expected import identifier with the format: "transport_cellular_controller_feature_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/transportCellularControllerFeature:TransportCellularControllerFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type TransportCellularControllerFeature struct {
	pulumi.CustomResourceState

	// Cellular ID
	CellularId pulumi.StringOutput `pulumi:"cellularId"`
	// Variable name
	CellularIdVariable pulumi.StringPtrOutput `pulumi:"cellularIdVariable"`
	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// Enable/Disable Firmware Auto Sim - Default value: `true`
	FirmwareAutoSim pulumi.BoolPtrOutput `pulumi:"firmwareAutoSim"`
	// Variable name
	FirmwareAutoSimVariable pulumi.StringPtrOutput `pulumi:"firmwareAutoSimVariable"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// Set primary SIM slot - Range: `0`-`1`
	PrimarySimSlot pulumi.IntPtrOutput `pulumi:"primarySimSlot"`
	// Variable name
	PrimarySimSlotVariable pulumi.StringPtrOutput `pulumi:"primarySimSlotVariable"`
	// Set SIM failover retries - Range: `0`-`65535`
	SimFailoverRetries pulumi.IntPtrOutput `pulumi:"simFailoverRetries"`
	// Variable name
	SimFailoverRetriesVariable pulumi.StringPtrOutput `pulumi:"simFailoverRetriesVariable"`
	// Set SIM failover timeout in minutes - Range: `3`-`7`
	SimFailoverTimeout pulumi.IntPtrOutput `pulumi:"simFailoverTimeout"`
	// Variable name
	SimFailoverTimeoutVariable pulumi.StringPtrOutput `pulumi:"simFailoverTimeoutVariable"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewTransportCellularControllerFeature registers a new resource with the given unique name, arguments, and options.
func NewTransportCellularControllerFeature(ctx *pulumi.Context,
	name string, args *TransportCellularControllerFeatureArgs, opts ...pulumi.ResourceOption) (*TransportCellularControllerFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CellularId == nil {
		return nil, errors.New("invalid value for required argument 'CellularId'")
	}
	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransportCellularControllerFeature
	err := ctx.RegisterResource("sdwan:index/transportCellularControllerFeature:TransportCellularControllerFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransportCellularControllerFeature gets an existing TransportCellularControllerFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransportCellularControllerFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransportCellularControllerFeatureState, opts ...pulumi.ResourceOption) (*TransportCellularControllerFeature, error) {
	var resource TransportCellularControllerFeature
	err := ctx.ReadResource("sdwan:index/transportCellularControllerFeature:TransportCellularControllerFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransportCellularControllerFeature resources.
type transportCellularControllerFeatureState struct {
	// Cellular ID
	CellularId *string `pulumi:"cellularId"`
	// Variable name
	CellularIdVariable *string `pulumi:"cellularIdVariable"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// Enable/Disable Firmware Auto Sim - Default value: `true`
	FirmwareAutoSim *bool `pulumi:"firmwareAutoSim"`
	// Variable name
	FirmwareAutoSimVariable *string `pulumi:"firmwareAutoSimVariable"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Set primary SIM slot - Range: `0`-`1`
	PrimarySimSlot *int `pulumi:"primarySimSlot"`
	// Variable name
	PrimarySimSlotVariable *string `pulumi:"primarySimSlotVariable"`
	// Set SIM failover retries - Range: `0`-`65535`
	SimFailoverRetries *int `pulumi:"simFailoverRetries"`
	// Variable name
	SimFailoverRetriesVariable *string `pulumi:"simFailoverRetriesVariable"`
	// Set SIM failover timeout in minutes - Range: `3`-`7`
	SimFailoverTimeout *int `pulumi:"simFailoverTimeout"`
	// Variable name
	SimFailoverTimeoutVariable *string `pulumi:"simFailoverTimeoutVariable"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type TransportCellularControllerFeatureState struct {
	// Cellular ID
	CellularId pulumi.StringPtrInput
	// Variable name
	CellularIdVariable pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// Enable/Disable Firmware Auto Sim - Default value: `true`
	FirmwareAutoSim pulumi.BoolPtrInput
	// Variable name
	FirmwareAutoSimVariable pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Set primary SIM slot - Range: `0`-`1`
	PrimarySimSlot pulumi.IntPtrInput
	// Variable name
	PrimarySimSlotVariable pulumi.StringPtrInput
	// Set SIM failover retries - Range: `0`-`65535`
	SimFailoverRetries pulumi.IntPtrInput
	// Variable name
	SimFailoverRetriesVariable pulumi.StringPtrInput
	// Set SIM failover timeout in minutes - Range: `3`-`7`
	SimFailoverTimeout pulumi.IntPtrInput
	// Variable name
	SimFailoverTimeoutVariable pulumi.StringPtrInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (TransportCellularControllerFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*transportCellularControllerFeatureState)(nil)).Elem()
}

type transportCellularControllerFeatureArgs struct {
	// Cellular ID
	CellularId string `pulumi:"cellularId"`
	// Variable name
	CellularIdVariable *string `pulumi:"cellularIdVariable"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// Enable/Disable Firmware Auto Sim - Default value: `true`
	FirmwareAutoSim *bool `pulumi:"firmwareAutoSim"`
	// Variable name
	FirmwareAutoSimVariable *string `pulumi:"firmwareAutoSimVariable"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Set primary SIM slot - Range: `0`-`1`
	PrimarySimSlot *int `pulumi:"primarySimSlot"`
	// Variable name
	PrimarySimSlotVariable *string `pulumi:"primarySimSlotVariable"`
	// Set SIM failover retries - Range: `0`-`65535`
	SimFailoverRetries *int `pulumi:"simFailoverRetries"`
	// Variable name
	SimFailoverRetriesVariable *string `pulumi:"simFailoverRetriesVariable"`
	// Set SIM failover timeout in minutes - Range: `3`-`7`
	SimFailoverTimeout *int `pulumi:"simFailoverTimeout"`
	// Variable name
	SimFailoverTimeoutVariable *string `pulumi:"simFailoverTimeoutVariable"`
}

// The set of arguments for constructing a TransportCellularControllerFeature resource.
type TransportCellularControllerFeatureArgs struct {
	// Cellular ID
	CellularId pulumi.StringInput
	// Variable name
	CellularIdVariable pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// Enable/Disable Firmware Auto Sim - Default value: `true`
	FirmwareAutoSim pulumi.BoolPtrInput
	// Variable name
	FirmwareAutoSimVariable pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Set primary SIM slot - Range: `0`-`1`
	PrimarySimSlot pulumi.IntPtrInput
	// Variable name
	PrimarySimSlotVariable pulumi.StringPtrInput
	// Set SIM failover retries - Range: `0`-`65535`
	SimFailoverRetries pulumi.IntPtrInput
	// Variable name
	SimFailoverRetriesVariable pulumi.StringPtrInput
	// Set SIM failover timeout in minutes - Range: `3`-`7`
	SimFailoverTimeout pulumi.IntPtrInput
	// Variable name
	SimFailoverTimeoutVariable pulumi.StringPtrInput
}

func (TransportCellularControllerFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transportCellularControllerFeatureArgs)(nil)).Elem()
}

type TransportCellularControllerFeatureInput interface {
	pulumi.Input

	ToTransportCellularControllerFeatureOutput() TransportCellularControllerFeatureOutput
	ToTransportCellularControllerFeatureOutputWithContext(ctx context.Context) TransportCellularControllerFeatureOutput
}

func (*TransportCellularControllerFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportCellularControllerFeature)(nil)).Elem()
}

func (i *TransportCellularControllerFeature) ToTransportCellularControllerFeatureOutput() TransportCellularControllerFeatureOutput {
	return i.ToTransportCellularControllerFeatureOutputWithContext(context.Background())
}

func (i *TransportCellularControllerFeature) ToTransportCellularControllerFeatureOutputWithContext(ctx context.Context) TransportCellularControllerFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportCellularControllerFeatureOutput)
}

// TransportCellularControllerFeatureArrayInput is an input type that accepts TransportCellularControllerFeatureArray and TransportCellularControllerFeatureArrayOutput values.
// You can construct a concrete instance of `TransportCellularControllerFeatureArrayInput` via:
//
//	TransportCellularControllerFeatureArray{ TransportCellularControllerFeatureArgs{...} }
type TransportCellularControllerFeatureArrayInput interface {
	pulumi.Input

	ToTransportCellularControllerFeatureArrayOutput() TransportCellularControllerFeatureArrayOutput
	ToTransportCellularControllerFeatureArrayOutputWithContext(context.Context) TransportCellularControllerFeatureArrayOutput
}

type TransportCellularControllerFeatureArray []TransportCellularControllerFeatureInput

func (TransportCellularControllerFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportCellularControllerFeature)(nil)).Elem()
}

func (i TransportCellularControllerFeatureArray) ToTransportCellularControllerFeatureArrayOutput() TransportCellularControllerFeatureArrayOutput {
	return i.ToTransportCellularControllerFeatureArrayOutputWithContext(context.Background())
}

func (i TransportCellularControllerFeatureArray) ToTransportCellularControllerFeatureArrayOutputWithContext(ctx context.Context) TransportCellularControllerFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportCellularControllerFeatureArrayOutput)
}

// TransportCellularControllerFeatureMapInput is an input type that accepts TransportCellularControllerFeatureMap and TransportCellularControllerFeatureMapOutput values.
// You can construct a concrete instance of `TransportCellularControllerFeatureMapInput` via:
//
//	TransportCellularControllerFeatureMap{ "key": TransportCellularControllerFeatureArgs{...} }
type TransportCellularControllerFeatureMapInput interface {
	pulumi.Input

	ToTransportCellularControllerFeatureMapOutput() TransportCellularControllerFeatureMapOutput
	ToTransportCellularControllerFeatureMapOutputWithContext(context.Context) TransportCellularControllerFeatureMapOutput
}

type TransportCellularControllerFeatureMap map[string]TransportCellularControllerFeatureInput

func (TransportCellularControllerFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportCellularControllerFeature)(nil)).Elem()
}

func (i TransportCellularControllerFeatureMap) ToTransportCellularControllerFeatureMapOutput() TransportCellularControllerFeatureMapOutput {
	return i.ToTransportCellularControllerFeatureMapOutputWithContext(context.Background())
}

func (i TransportCellularControllerFeatureMap) ToTransportCellularControllerFeatureMapOutputWithContext(ctx context.Context) TransportCellularControllerFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportCellularControllerFeatureMapOutput)
}

type TransportCellularControllerFeatureOutput struct{ *pulumi.OutputState }

func (TransportCellularControllerFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportCellularControllerFeature)(nil)).Elem()
}

func (o TransportCellularControllerFeatureOutput) ToTransportCellularControllerFeatureOutput() TransportCellularControllerFeatureOutput {
	return o
}

func (o TransportCellularControllerFeatureOutput) ToTransportCellularControllerFeatureOutputWithContext(ctx context.Context) TransportCellularControllerFeatureOutput {
	return o
}

// Cellular ID
func (o TransportCellularControllerFeatureOutput) CellularId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportCellularControllerFeature) pulumi.StringOutput { return v.CellularId }).(pulumi.StringOutput)
}

// Variable name
func (o TransportCellularControllerFeatureOutput) CellularIdVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularControllerFeature) pulumi.StringPtrOutput { return v.CellularIdVariable }).(pulumi.StringPtrOutput)
}

// The description of the Feature
func (o TransportCellularControllerFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularControllerFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o TransportCellularControllerFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportCellularControllerFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// Enable/Disable Firmware Auto Sim - Default value: `true`
func (o TransportCellularControllerFeatureOutput) FirmwareAutoSim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportCellularControllerFeature) pulumi.BoolPtrOutput { return v.FirmwareAutoSim }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportCellularControllerFeatureOutput) FirmwareAutoSimVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularControllerFeature) pulumi.StringPtrOutput { return v.FirmwareAutoSimVariable }).(pulumi.StringPtrOutput)
}

// The name of the Feature
func (o TransportCellularControllerFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportCellularControllerFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Set primary SIM slot - Range: `0`-`1`
func (o TransportCellularControllerFeatureOutput) PrimarySimSlot() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportCellularControllerFeature) pulumi.IntPtrOutput { return v.PrimarySimSlot }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportCellularControllerFeatureOutput) PrimarySimSlotVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularControllerFeature) pulumi.StringPtrOutput { return v.PrimarySimSlotVariable }).(pulumi.StringPtrOutput)
}

// Set SIM failover retries - Range: `0`-`65535`
func (o TransportCellularControllerFeatureOutput) SimFailoverRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportCellularControllerFeature) pulumi.IntPtrOutput { return v.SimFailoverRetries }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportCellularControllerFeatureOutput) SimFailoverRetriesVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularControllerFeature) pulumi.StringPtrOutput {
		return v.SimFailoverRetriesVariable
	}).(pulumi.StringPtrOutput)
}

// Set SIM failover timeout in minutes - Range: `3`-`7`
func (o TransportCellularControllerFeatureOutput) SimFailoverTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportCellularControllerFeature) pulumi.IntPtrOutput { return v.SimFailoverTimeout }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportCellularControllerFeatureOutput) SimFailoverTimeoutVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularControllerFeature) pulumi.StringPtrOutput {
		return v.SimFailoverTimeoutVariable
	}).(pulumi.StringPtrOutput)
}

// The version of the Feature
func (o TransportCellularControllerFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *TransportCellularControllerFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type TransportCellularControllerFeatureArrayOutput struct{ *pulumi.OutputState }

func (TransportCellularControllerFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportCellularControllerFeature)(nil)).Elem()
}

func (o TransportCellularControllerFeatureArrayOutput) ToTransportCellularControllerFeatureArrayOutput() TransportCellularControllerFeatureArrayOutput {
	return o
}

func (o TransportCellularControllerFeatureArrayOutput) ToTransportCellularControllerFeatureArrayOutputWithContext(ctx context.Context) TransportCellularControllerFeatureArrayOutput {
	return o
}

func (o TransportCellularControllerFeatureArrayOutput) Index(i pulumi.IntInput) TransportCellularControllerFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransportCellularControllerFeature {
		return vs[0].([]*TransportCellularControllerFeature)[vs[1].(int)]
	}).(TransportCellularControllerFeatureOutput)
}

type TransportCellularControllerFeatureMapOutput struct{ *pulumi.OutputState }

func (TransportCellularControllerFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportCellularControllerFeature)(nil)).Elem()
}

func (o TransportCellularControllerFeatureMapOutput) ToTransportCellularControllerFeatureMapOutput() TransportCellularControllerFeatureMapOutput {
	return o
}

func (o TransportCellularControllerFeatureMapOutput) ToTransportCellularControllerFeatureMapOutputWithContext(ctx context.Context) TransportCellularControllerFeatureMapOutput {
	return o
}

func (o TransportCellularControllerFeatureMapOutput) MapIndex(k pulumi.StringInput) TransportCellularControllerFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransportCellularControllerFeature {
		return vs[0].(map[string]*TransportCellularControllerFeature)[vs[1].(string)]
	}).(TransportCellularControllerFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransportCellularControllerFeatureInput)(nil)).Elem(), &TransportCellularControllerFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportCellularControllerFeatureArrayInput)(nil)).Elem(), TransportCellularControllerFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportCellularControllerFeatureMapInput)(nil)).Elem(), TransportCellularControllerFeatureMap{})
	pulumi.RegisterOutputType(TransportCellularControllerFeatureOutput{})
	pulumi.RegisterOutputType(TransportCellularControllerFeatureArrayOutput{})
	pulumi.RegisterOutputType(TransportCellularControllerFeatureMapOutput{})
}
