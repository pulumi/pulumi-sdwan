// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a System Feature Profile .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewSystemFeatureProfile(ctx, "example", &sdwan.SystemFeatureProfileArgs{
//				Name:        pulumi.String("SYSTEM_FP_1"),
//				Description: pulumi.String("My system feature profile 1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/systemFeatureProfile:SystemFeatureProfile example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type SystemFeatureProfile struct {
	pulumi.CustomResourceState

	// Description
	Description pulumi.StringOutput `pulumi:"description"`
	// The name of the system feature profile
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewSystemFeatureProfile registers a new resource with the given unique name, arguments, and options.
func NewSystemFeatureProfile(ctx *pulumi.Context,
	name string, args *SystemFeatureProfileArgs, opts ...pulumi.ResourceOption) (*SystemFeatureProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemFeatureProfile
	err := ctx.RegisterResource("sdwan:index/systemFeatureProfile:SystemFeatureProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemFeatureProfile gets an existing SystemFeatureProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemFeatureProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemFeatureProfileState, opts ...pulumi.ResourceOption) (*SystemFeatureProfile, error) {
	var resource SystemFeatureProfile
	err := ctx.ReadResource("sdwan:index/systemFeatureProfile:SystemFeatureProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemFeatureProfile resources.
type systemFeatureProfileState struct {
	// Description
	Description *string `pulumi:"description"`
	// The name of the system feature profile
	Name *string `pulumi:"name"`
}

type SystemFeatureProfileState struct {
	// Description
	Description pulumi.StringPtrInput
	// The name of the system feature profile
	Name pulumi.StringPtrInput
}

func (SystemFeatureProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemFeatureProfileState)(nil)).Elem()
}

type systemFeatureProfileArgs struct {
	// Description
	Description string `pulumi:"description"`
	// The name of the system feature profile
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a SystemFeatureProfile resource.
type SystemFeatureProfileArgs struct {
	// Description
	Description pulumi.StringInput
	// The name of the system feature profile
	Name pulumi.StringPtrInput
}

func (SystemFeatureProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemFeatureProfileArgs)(nil)).Elem()
}

type SystemFeatureProfileInput interface {
	pulumi.Input

	ToSystemFeatureProfileOutput() SystemFeatureProfileOutput
	ToSystemFeatureProfileOutputWithContext(ctx context.Context) SystemFeatureProfileOutput
}

func (*SystemFeatureProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemFeatureProfile)(nil)).Elem()
}

func (i *SystemFeatureProfile) ToSystemFeatureProfileOutput() SystemFeatureProfileOutput {
	return i.ToSystemFeatureProfileOutputWithContext(context.Background())
}

func (i *SystemFeatureProfile) ToSystemFeatureProfileOutputWithContext(ctx context.Context) SystemFeatureProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFeatureProfileOutput)
}

// SystemFeatureProfileArrayInput is an input type that accepts SystemFeatureProfileArray and SystemFeatureProfileArrayOutput values.
// You can construct a concrete instance of `SystemFeatureProfileArrayInput` via:
//
//	SystemFeatureProfileArray{ SystemFeatureProfileArgs{...} }
type SystemFeatureProfileArrayInput interface {
	pulumi.Input

	ToSystemFeatureProfileArrayOutput() SystemFeatureProfileArrayOutput
	ToSystemFeatureProfileArrayOutputWithContext(context.Context) SystemFeatureProfileArrayOutput
}

type SystemFeatureProfileArray []SystemFeatureProfileInput

func (SystemFeatureProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemFeatureProfile)(nil)).Elem()
}

func (i SystemFeatureProfileArray) ToSystemFeatureProfileArrayOutput() SystemFeatureProfileArrayOutput {
	return i.ToSystemFeatureProfileArrayOutputWithContext(context.Background())
}

func (i SystemFeatureProfileArray) ToSystemFeatureProfileArrayOutputWithContext(ctx context.Context) SystemFeatureProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFeatureProfileArrayOutput)
}

// SystemFeatureProfileMapInput is an input type that accepts SystemFeatureProfileMap and SystemFeatureProfileMapOutput values.
// You can construct a concrete instance of `SystemFeatureProfileMapInput` via:
//
//	SystemFeatureProfileMap{ "key": SystemFeatureProfileArgs{...} }
type SystemFeatureProfileMapInput interface {
	pulumi.Input

	ToSystemFeatureProfileMapOutput() SystemFeatureProfileMapOutput
	ToSystemFeatureProfileMapOutputWithContext(context.Context) SystemFeatureProfileMapOutput
}

type SystemFeatureProfileMap map[string]SystemFeatureProfileInput

func (SystemFeatureProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemFeatureProfile)(nil)).Elem()
}

func (i SystemFeatureProfileMap) ToSystemFeatureProfileMapOutput() SystemFeatureProfileMapOutput {
	return i.ToSystemFeatureProfileMapOutputWithContext(context.Background())
}

func (i SystemFeatureProfileMap) ToSystemFeatureProfileMapOutputWithContext(ctx context.Context) SystemFeatureProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemFeatureProfileMapOutput)
}

type SystemFeatureProfileOutput struct{ *pulumi.OutputState }

func (SystemFeatureProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemFeatureProfile)(nil)).Elem()
}

func (o SystemFeatureProfileOutput) ToSystemFeatureProfileOutput() SystemFeatureProfileOutput {
	return o
}

func (o SystemFeatureProfileOutput) ToSystemFeatureProfileOutputWithContext(ctx context.Context) SystemFeatureProfileOutput {
	return o
}

// Description
func (o SystemFeatureProfileOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFeatureProfile) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The name of the system feature profile
func (o SystemFeatureProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemFeatureProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type SystemFeatureProfileArrayOutput struct{ *pulumi.OutputState }

func (SystemFeatureProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemFeatureProfile)(nil)).Elem()
}

func (o SystemFeatureProfileArrayOutput) ToSystemFeatureProfileArrayOutput() SystemFeatureProfileArrayOutput {
	return o
}

func (o SystemFeatureProfileArrayOutput) ToSystemFeatureProfileArrayOutputWithContext(ctx context.Context) SystemFeatureProfileArrayOutput {
	return o
}

func (o SystemFeatureProfileArrayOutput) Index(i pulumi.IntInput) SystemFeatureProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemFeatureProfile {
		return vs[0].([]*SystemFeatureProfile)[vs[1].(int)]
	}).(SystemFeatureProfileOutput)
}

type SystemFeatureProfileMapOutput struct{ *pulumi.OutputState }

func (SystemFeatureProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemFeatureProfile)(nil)).Elem()
}

func (o SystemFeatureProfileMapOutput) ToSystemFeatureProfileMapOutput() SystemFeatureProfileMapOutput {
	return o
}

func (o SystemFeatureProfileMapOutput) ToSystemFeatureProfileMapOutputWithContext(ctx context.Context) SystemFeatureProfileMapOutput {
	return o
}

func (o SystemFeatureProfileMapOutput) MapIndex(k pulumi.StringInput) SystemFeatureProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemFeatureProfile {
		return vs[0].(map[string]*SystemFeatureProfile)[vs[1].(string)]
	}).(SystemFeatureProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFeatureProfileInput)(nil)).Elem(), &SystemFeatureProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFeatureProfileArrayInput)(nil)).Elem(), SystemFeatureProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemFeatureProfileMapInput)(nil)).Elem(), SystemFeatureProfileMap{})
	pulumi.RegisterOutputType(SystemFeatureProfileOutput{})
	pulumi.RegisterOutputType(SystemFeatureProfileArrayOutput{})
	pulumi.RegisterOutputType(SystemFeatureProfileMapOutput{})
}
