// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Transport WAN VPN Feature Associate Routing OSPF Feature .
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewTransportWanVpnFeatureAssociateRoutingOspfFeature(ctx, "example", &sdwan.TransportWanVpnFeatureAssociateRoutingOspfFeatureArgs{
//				FeatureProfileId:              pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				TransportWanVpnFeatureId:      pulumi.String("140331f6-5418-4755-a059-13c77eb96037"),
//				TransportRoutingOspfFeatureId: pulumi.String("140331f6-5418-4755-a059-13c77eb96037"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "transport_wan_vpn_feature_associate_routing_ospf_feature_id,feature_profile_id,transport_wan_vpn_feature_id"
//
// ```sh
// $ pulumi import sdwan:index/transportWanVpnFeatureAssociateRoutingOspfFeature:TransportWanVpnFeatureAssociateRoutingOspfFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037"
// ```
type TransportWanVpnFeatureAssociateRoutingOspfFeature struct {
	pulumi.CustomResourceState

	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// Transport Routing OSPF Feature ID
	TransportRoutingOspfFeatureId pulumi.StringOutput `pulumi:"transportRoutingOspfFeatureId"`
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId pulumi.StringOutput `pulumi:"transportWanVpnFeatureId"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewTransportWanVpnFeatureAssociateRoutingOspfFeature registers a new resource with the given unique name, arguments, and options.
func NewTransportWanVpnFeatureAssociateRoutingOspfFeature(ctx *pulumi.Context,
	name string, args *TransportWanVpnFeatureAssociateRoutingOspfFeatureArgs, opts ...pulumi.ResourceOption) (*TransportWanVpnFeatureAssociateRoutingOspfFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	if args.TransportRoutingOspfFeatureId == nil {
		return nil, errors.New("invalid value for required argument 'TransportRoutingOspfFeatureId'")
	}
	if args.TransportWanVpnFeatureId == nil {
		return nil, errors.New("invalid value for required argument 'TransportWanVpnFeatureId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransportWanVpnFeatureAssociateRoutingOspfFeature
	err := ctx.RegisterResource("sdwan:index/transportWanVpnFeatureAssociateRoutingOspfFeature:TransportWanVpnFeatureAssociateRoutingOspfFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransportWanVpnFeatureAssociateRoutingOspfFeature gets an existing TransportWanVpnFeatureAssociateRoutingOspfFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransportWanVpnFeatureAssociateRoutingOspfFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransportWanVpnFeatureAssociateRoutingOspfFeatureState, opts ...pulumi.ResourceOption) (*TransportWanVpnFeatureAssociateRoutingOspfFeature, error) {
	var resource TransportWanVpnFeatureAssociateRoutingOspfFeature
	err := ctx.ReadResource("sdwan:index/transportWanVpnFeatureAssociateRoutingOspfFeature:TransportWanVpnFeatureAssociateRoutingOspfFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransportWanVpnFeatureAssociateRoutingOspfFeature resources.
type transportWanVpnFeatureAssociateRoutingOspfFeatureState struct {
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// Transport Routing OSPF Feature ID
	TransportRoutingOspfFeatureId *string `pulumi:"transportRoutingOspfFeatureId"`
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId *string `pulumi:"transportWanVpnFeatureId"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type TransportWanVpnFeatureAssociateRoutingOspfFeatureState struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// Transport Routing OSPF Feature ID
	TransportRoutingOspfFeatureId pulumi.StringPtrInput
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (TransportWanVpnFeatureAssociateRoutingOspfFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*transportWanVpnFeatureAssociateRoutingOspfFeatureState)(nil)).Elem()
}

type transportWanVpnFeatureAssociateRoutingOspfFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// Transport Routing OSPF Feature ID
	TransportRoutingOspfFeatureId string `pulumi:"transportRoutingOspfFeatureId"`
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId string `pulumi:"transportWanVpnFeatureId"`
}

// The set of arguments for constructing a TransportWanVpnFeatureAssociateRoutingOspfFeature resource.
type TransportWanVpnFeatureAssociateRoutingOspfFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// Transport Routing OSPF Feature ID
	TransportRoutingOspfFeatureId pulumi.StringInput
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId pulumi.StringInput
}

func (TransportWanVpnFeatureAssociateRoutingOspfFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transportWanVpnFeatureAssociateRoutingOspfFeatureArgs)(nil)).Elem()
}

type TransportWanVpnFeatureAssociateRoutingOspfFeatureInput interface {
	pulumi.Input

	ToTransportWanVpnFeatureAssociateRoutingOspfFeatureOutput() TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput
	ToTransportWanVpnFeatureAssociateRoutingOspfFeatureOutputWithContext(ctx context.Context) TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput
}

func (*TransportWanVpnFeatureAssociateRoutingOspfFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportWanVpnFeatureAssociateRoutingOspfFeature)(nil)).Elem()
}

func (i *TransportWanVpnFeatureAssociateRoutingOspfFeature) ToTransportWanVpnFeatureAssociateRoutingOspfFeatureOutput() TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput {
	return i.ToTransportWanVpnFeatureAssociateRoutingOspfFeatureOutputWithContext(context.Background())
}

func (i *TransportWanVpnFeatureAssociateRoutingOspfFeature) ToTransportWanVpnFeatureAssociateRoutingOspfFeatureOutputWithContext(ctx context.Context) TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput)
}

// TransportWanVpnFeatureAssociateRoutingOspfFeatureArrayInput is an input type that accepts TransportWanVpnFeatureAssociateRoutingOspfFeatureArray and TransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutput values.
// You can construct a concrete instance of `TransportWanVpnFeatureAssociateRoutingOspfFeatureArrayInput` via:
//
//	TransportWanVpnFeatureAssociateRoutingOspfFeatureArray{ TransportWanVpnFeatureAssociateRoutingOspfFeatureArgs{...} }
type TransportWanVpnFeatureAssociateRoutingOspfFeatureArrayInput interface {
	pulumi.Input

	ToTransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutput() TransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutput
	ToTransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutputWithContext(context.Context) TransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutput
}

type TransportWanVpnFeatureAssociateRoutingOspfFeatureArray []TransportWanVpnFeatureAssociateRoutingOspfFeatureInput

func (TransportWanVpnFeatureAssociateRoutingOspfFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportWanVpnFeatureAssociateRoutingOspfFeature)(nil)).Elem()
}

func (i TransportWanVpnFeatureAssociateRoutingOspfFeatureArray) ToTransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutput() TransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutput {
	return i.ToTransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutputWithContext(context.Background())
}

func (i TransportWanVpnFeatureAssociateRoutingOspfFeatureArray) ToTransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutputWithContext(ctx context.Context) TransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutput)
}

// TransportWanVpnFeatureAssociateRoutingOspfFeatureMapInput is an input type that accepts TransportWanVpnFeatureAssociateRoutingOspfFeatureMap and TransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutput values.
// You can construct a concrete instance of `TransportWanVpnFeatureAssociateRoutingOspfFeatureMapInput` via:
//
//	TransportWanVpnFeatureAssociateRoutingOspfFeatureMap{ "key": TransportWanVpnFeatureAssociateRoutingOspfFeatureArgs{...} }
type TransportWanVpnFeatureAssociateRoutingOspfFeatureMapInput interface {
	pulumi.Input

	ToTransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutput() TransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutput
	ToTransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutputWithContext(context.Context) TransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutput
}

type TransportWanVpnFeatureAssociateRoutingOspfFeatureMap map[string]TransportWanVpnFeatureAssociateRoutingOspfFeatureInput

func (TransportWanVpnFeatureAssociateRoutingOspfFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportWanVpnFeatureAssociateRoutingOspfFeature)(nil)).Elem()
}

func (i TransportWanVpnFeatureAssociateRoutingOspfFeatureMap) ToTransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutput() TransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutput {
	return i.ToTransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutputWithContext(context.Background())
}

func (i TransportWanVpnFeatureAssociateRoutingOspfFeatureMap) ToTransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutputWithContext(ctx context.Context) TransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutput)
}

type TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput struct{ *pulumi.OutputState }

func (TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportWanVpnFeatureAssociateRoutingOspfFeature)(nil)).Elem()
}

func (o TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput) ToTransportWanVpnFeatureAssociateRoutingOspfFeatureOutput() TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput {
	return o
}

func (o TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput) ToTransportWanVpnFeatureAssociateRoutingOspfFeatureOutputWithContext(ctx context.Context) TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput {
	return o
}

// Feature Profile ID
func (o TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportWanVpnFeatureAssociateRoutingOspfFeature) pulumi.StringOutput {
		return v.FeatureProfileId
	}).(pulumi.StringOutput)
}

// Transport Routing OSPF Feature ID
func (o TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput) TransportRoutingOspfFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportWanVpnFeatureAssociateRoutingOspfFeature) pulumi.StringOutput {
		return v.TransportRoutingOspfFeatureId
	}).(pulumi.StringOutput)
}

// Transport WAN VPN Feature ID
func (o TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput) TransportWanVpnFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportWanVpnFeatureAssociateRoutingOspfFeature) pulumi.StringOutput {
		return v.TransportWanVpnFeatureId
	}).(pulumi.StringOutput)
}

// The version of the object
func (o TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *TransportWanVpnFeatureAssociateRoutingOspfFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type TransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutput struct{ *pulumi.OutputState }

func (TransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportWanVpnFeatureAssociateRoutingOspfFeature)(nil)).Elem()
}

func (o TransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutput) ToTransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutput() TransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutput {
	return o
}

func (o TransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutput) ToTransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutputWithContext(ctx context.Context) TransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutput {
	return o
}

func (o TransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutput) Index(i pulumi.IntInput) TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransportWanVpnFeatureAssociateRoutingOspfFeature {
		return vs[0].([]*TransportWanVpnFeatureAssociateRoutingOspfFeature)[vs[1].(int)]
	}).(TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput)
}

type TransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutput struct{ *pulumi.OutputState }

func (TransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportWanVpnFeatureAssociateRoutingOspfFeature)(nil)).Elem()
}

func (o TransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutput) ToTransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutput() TransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutput {
	return o
}

func (o TransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutput) ToTransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutputWithContext(ctx context.Context) TransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutput {
	return o
}

func (o TransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutput) MapIndex(k pulumi.StringInput) TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransportWanVpnFeatureAssociateRoutingOspfFeature {
		return vs[0].(map[string]*TransportWanVpnFeatureAssociateRoutingOspfFeature)[vs[1].(string)]
	}).(TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnFeatureAssociateRoutingOspfFeatureInput)(nil)).Elem(), &TransportWanVpnFeatureAssociateRoutingOspfFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnFeatureAssociateRoutingOspfFeatureArrayInput)(nil)).Elem(), TransportWanVpnFeatureAssociateRoutingOspfFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnFeatureAssociateRoutingOspfFeatureMapInput)(nil)).Elem(), TransportWanVpnFeatureAssociateRoutingOspfFeatureMap{})
	pulumi.RegisterOutputType(TransportWanVpnFeatureAssociateRoutingOspfFeatureOutput{})
	pulumi.RegisterOutputType(TransportWanVpnFeatureAssociateRoutingOspfFeatureArrayOutput{})
	pulumi.RegisterOutputType(TransportWanVpnFeatureAssociateRoutingOspfFeatureMapOutput{})
}
