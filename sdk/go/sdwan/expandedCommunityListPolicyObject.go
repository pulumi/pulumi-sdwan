// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Expanded Community List Policy Object .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewExpandedCommunityListPolicyObject(ctx, "example", &sdwan.ExpandedCommunityListPolicyObjectArgs{
//				Name: pulumi.String("Example"),
//				Entries: sdwan.ExpandedCommunityListPolicyObjectEntryArray{
//					&sdwan.ExpandedCommunityListPolicyObjectEntryArgs{
//						Community: pulumi.String("100:1000"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/expandedCommunityListPolicyObject:ExpandedCommunityListPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type ExpandedCommunityListPolicyObject struct {
	pulumi.CustomResourceState

	// List of entries
	Entries ExpandedCommunityListPolicyObjectEntryArrayOutput `pulumi:"entries"`
	// The name of the policy object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewExpandedCommunityListPolicyObject registers a new resource with the given unique name, arguments, and options.
func NewExpandedCommunityListPolicyObject(ctx *pulumi.Context,
	name string, args *ExpandedCommunityListPolicyObjectArgs, opts ...pulumi.ResourceOption) (*ExpandedCommunityListPolicyObject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExpandedCommunityListPolicyObject
	err := ctx.RegisterResource("sdwan:index/expandedCommunityListPolicyObject:ExpandedCommunityListPolicyObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExpandedCommunityListPolicyObject gets an existing ExpandedCommunityListPolicyObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExpandedCommunityListPolicyObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExpandedCommunityListPolicyObjectState, opts ...pulumi.ResourceOption) (*ExpandedCommunityListPolicyObject, error) {
	var resource ExpandedCommunityListPolicyObject
	err := ctx.ReadResource("sdwan:index/expandedCommunityListPolicyObject:ExpandedCommunityListPolicyObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExpandedCommunityListPolicyObject resources.
type expandedCommunityListPolicyObjectState struct {
	// List of entries
	Entries []ExpandedCommunityListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type ExpandedCommunityListPolicyObjectState struct {
	// List of entries
	Entries ExpandedCommunityListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (ExpandedCommunityListPolicyObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*expandedCommunityListPolicyObjectState)(nil)).Elem()
}

type expandedCommunityListPolicyObjectArgs struct {
	// List of entries
	Entries []ExpandedCommunityListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ExpandedCommunityListPolicyObject resource.
type ExpandedCommunityListPolicyObjectArgs struct {
	// List of entries
	Entries ExpandedCommunityListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
}

func (ExpandedCommunityListPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*expandedCommunityListPolicyObjectArgs)(nil)).Elem()
}

type ExpandedCommunityListPolicyObjectInput interface {
	pulumi.Input

	ToExpandedCommunityListPolicyObjectOutput() ExpandedCommunityListPolicyObjectOutput
	ToExpandedCommunityListPolicyObjectOutputWithContext(ctx context.Context) ExpandedCommunityListPolicyObjectOutput
}

func (*ExpandedCommunityListPolicyObject) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpandedCommunityListPolicyObject)(nil)).Elem()
}

func (i *ExpandedCommunityListPolicyObject) ToExpandedCommunityListPolicyObjectOutput() ExpandedCommunityListPolicyObjectOutput {
	return i.ToExpandedCommunityListPolicyObjectOutputWithContext(context.Background())
}

func (i *ExpandedCommunityListPolicyObject) ToExpandedCommunityListPolicyObjectOutputWithContext(ctx context.Context) ExpandedCommunityListPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpandedCommunityListPolicyObjectOutput)
}

// ExpandedCommunityListPolicyObjectArrayInput is an input type that accepts ExpandedCommunityListPolicyObjectArray and ExpandedCommunityListPolicyObjectArrayOutput values.
// You can construct a concrete instance of `ExpandedCommunityListPolicyObjectArrayInput` via:
//
//	ExpandedCommunityListPolicyObjectArray{ ExpandedCommunityListPolicyObjectArgs{...} }
type ExpandedCommunityListPolicyObjectArrayInput interface {
	pulumi.Input

	ToExpandedCommunityListPolicyObjectArrayOutput() ExpandedCommunityListPolicyObjectArrayOutput
	ToExpandedCommunityListPolicyObjectArrayOutputWithContext(context.Context) ExpandedCommunityListPolicyObjectArrayOutput
}

type ExpandedCommunityListPolicyObjectArray []ExpandedCommunityListPolicyObjectInput

func (ExpandedCommunityListPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExpandedCommunityListPolicyObject)(nil)).Elem()
}

func (i ExpandedCommunityListPolicyObjectArray) ToExpandedCommunityListPolicyObjectArrayOutput() ExpandedCommunityListPolicyObjectArrayOutput {
	return i.ToExpandedCommunityListPolicyObjectArrayOutputWithContext(context.Background())
}

func (i ExpandedCommunityListPolicyObjectArray) ToExpandedCommunityListPolicyObjectArrayOutputWithContext(ctx context.Context) ExpandedCommunityListPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpandedCommunityListPolicyObjectArrayOutput)
}

// ExpandedCommunityListPolicyObjectMapInput is an input type that accepts ExpandedCommunityListPolicyObjectMap and ExpandedCommunityListPolicyObjectMapOutput values.
// You can construct a concrete instance of `ExpandedCommunityListPolicyObjectMapInput` via:
//
//	ExpandedCommunityListPolicyObjectMap{ "key": ExpandedCommunityListPolicyObjectArgs{...} }
type ExpandedCommunityListPolicyObjectMapInput interface {
	pulumi.Input

	ToExpandedCommunityListPolicyObjectMapOutput() ExpandedCommunityListPolicyObjectMapOutput
	ToExpandedCommunityListPolicyObjectMapOutputWithContext(context.Context) ExpandedCommunityListPolicyObjectMapOutput
}

type ExpandedCommunityListPolicyObjectMap map[string]ExpandedCommunityListPolicyObjectInput

func (ExpandedCommunityListPolicyObjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExpandedCommunityListPolicyObject)(nil)).Elem()
}

func (i ExpandedCommunityListPolicyObjectMap) ToExpandedCommunityListPolicyObjectMapOutput() ExpandedCommunityListPolicyObjectMapOutput {
	return i.ToExpandedCommunityListPolicyObjectMapOutputWithContext(context.Background())
}

func (i ExpandedCommunityListPolicyObjectMap) ToExpandedCommunityListPolicyObjectMapOutputWithContext(ctx context.Context) ExpandedCommunityListPolicyObjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpandedCommunityListPolicyObjectMapOutput)
}

type ExpandedCommunityListPolicyObjectOutput struct{ *pulumi.OutputState }

func (ExpandedCommunityListPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpandedCommunityListPolicyObject)(nil)).Elem()
}

func (o ExpandedCommunityListPolicyObjectOutput) ToExpandedCommunityListPolicyObjectOutput() ExpandedCommunityListPolicyObjectOutput {
	return o
}

func (o ExpandedCommunityListPolicyObjectOutput) ToExpandedCommunityListPolicyObjectOutputWithContext(ctx context.Context) ExpandedCommunityListPolicyObjectOutput {
	return o
}

// List of entries
func (o ExpandedCommunityListPolicyObjectOutput) Entries() ExpandedCommunityListPolicyObjectEntryArrayOutput {
	return o.ApplyT(func(v *ExpandedCommunityListPolicyObject) ExpandedCommunityListPolicyObjectEntryArrayOutput {
		return v.Entries
	}).(ExpandedCommunityListPolicyObjectEntryArrayOutput)
}

// The name of the policy object
func (o ExpandedCommunityListPolicyObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ExpandedCommunityListPolicyObject) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the object
func (o ExpandedCommunityListPolicyObjectOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ExpandedCommunityListPolicyObject) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ExpandedCommunityListPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (ExpandedCommunityListPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExpandedCommunityListPolicyObject)(nil)).Elem()
}

func (o ExpandedCommunityListPolicyObjectArrayOutput) ToExpandedCommunityListPolicyObjectArrayOutput() ExpandedCommunityListPolicyObjectArrayOutput {
	return o
}

func (o ExpandedCommunityListPolicyObjectArrayOutput) ToExpandedCommunityListPolicyObjectArrayOutputWithContext(ctx context.Context) ExpandedCommunityListPolicyObjectArrayOutput {
	return o
}

func (o ExpandedCommunityListPolicyObjectArrayOutput) Index(i pulumi.IntInput) ExpandedCommunityListPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExpandedCommunityListPolicyObject {
		return vs[0].([]*ExpandedCommunityListPolicyObject)[vs[1].(int)]
	}).(ExpandedCommunityListPolicyObjectOutput)
}

type ExpandedCommunityListPolicyObjectMapOutput struct{ *pulumi.OutputState }

func (ExpandedCommunityListPolicyObjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExpandedCommunityListPolicyObject)(nil)).Elem()
}

func (o ExpandedCommunityListPolicyObjectMapOutput) ToExpandedCommunityListPolicyObjectMapOutput() ExpandedCommunityListPolicyObjectMapOutput {
	return o
}

func (o ExpandedCommunityListPolicyObjectMapOutput) ToExpandedCommunityListPolicyObjectMapOutputWithContext(ctx context.Context) ExpandedCommunityListPolicyObjectMapOutput {
	return o
}

func (o ExpandedCommunityListPolicyObjectMapOutput) MapIndex(k pulumi.StringInput) ExpandedCommunityListPolicyObjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExpandedCommunityListPolicyObject {
		return vs[0].(map[string]*ExpandedCommunityListPolicyObject)[vs[1].(string)]
	}).(ExpandedCommunityListPolicyObjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExpandedCommunityListPolicyObjectInput)(nil)).Elem(), &ExpandedCommunityListPolicyObject{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpandedCommunityListPolicyObjectArrayInput)(nil)).Elem(), ExpandedCommunityListPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpandedCommunityListPolicyObjectMapInput)(nil)).Elem(), ExpandedCommunityListPolicyObjectMap{})
	pulumi.RegisterOutputType(ExpandedCommunityListPolicyObjectOutput{})
	pulumi.RegisterOutputType(ExpandedCommunityListPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(ExpandedCommunityListPolicyObjectMapOutput{})
}
