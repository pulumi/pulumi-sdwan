// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Transport Tracker Group Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/transportTrackerGroupFeature:TransportTrackerGroupFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type TransportTrackerGroupFeature struct {
	pulumi.CustomResourceState

	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// tracker ref list combine boolean and or - Choices: `and`, `or` - Default value: `or`
	TrackerBoolean pulumi.StringPtrOutput `pulumi:"trackerBoolean"`
	// Variable name
	TrackerBooleanVariable pulumi.StringPtrOutput `pulumi:"trackerBooleanVariable"`
	// tracker parcel ref list
	TrackerElements TransportTrackerGroupFeatureTrackerElementArrayOutput `pulumi:"trackerElements"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewTransportTrackerGroupFeature registers a new resource with the given unique name, arguments, and options.
func NewTransportTrackerGroupFeature(ctx *pulumi.Context,
	name string, args *TransportTrackerGroupFeatureArgs, opts ...pulumi.ResourceOption) (*TransportTrackerGroupFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransportTrackerGroupFeature
	err := ctx.RegisterResource("sdwan:index/transportTrackerGroupFeature:TransportTrackerGroupFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransportTrackerGroupFeature gets an existing TransportTrackerGroupFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransportTrackerGroupFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransportTrackerGroupFeatureState, opts ...pulumi.ResourceOption) (*TransportTrackerGroupFeature, error) {
	var resource TransportTrackerGroupFeature
	err := ctx.ReadResource("sdwan:index/transportTrackerGroupFeature:TransportTrackerGroupFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransportTrackerGroupFeature resources.
type transportTrackerGroupFeatureState struct {
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// tracker ref list combine boolean and or - Choices: `and`, `or` - Default value: `or`
	TrackerBoolean *string `pulumi:"trackerBoolean"`
	// Variable name
	TrackerBooleanVariable *string `pulumi:"trackerBooleanVariable"`
	// tracker parcel ref list
	TrackerElements []TransportTrackerGroupFeatureTrackerElement `pulumi:"trackerElements"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type TransportTrackerGroupFeatureState struct {
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// tracker ref list combine boolean and or - Choices: `and`, `or` - Default value: `or`
	TrackerBoolean pulumi.StringPtrInput
	// Variable name
	TrackerBooleanVariable pulumi.StringPtrInput
	// tracker parcel ref list
	TrackerElements TransportTrackerGroupFeatureTrackerElementArrayInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (TransportTrackerGroupFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*transportTrackerGroupFeatureState)(nil)).Elem()
}

type transportTrackerGroupFeatureArgs struct {
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// tracker ref list combine boolean and or - Choices: `and`, `or` - Default value: `or`
	TrackerBoolean *string `pulumi:"trackerBoolean"`
	// Variable name
	TrackerBooleanVariable *string `pulumi:"trackerBooleanVariable"`
	// tracker parcel ref list
	TrackerElements []TransportTrackerGroupFeatureTrackerElement `pulumi:"trackerElements"`
}

// The set of arguments for constructing a TransportTrackerGroupFeature resource.
type TransportTrackerGroupFeatureArgs struct {
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// tracker ref list combine boolean and or - Choices: `and`, `or` - Default value: `or`
	TrackerBoolean pulumi.StringPtrInput
	// Variable name
	TrackerBooleanVariable pulumi.StringPtrInput
	// tracker parcel ref list
	TrackerElements TransportTrackerGroupFeatureTrackerElementArrayInput
}

func (TransportTrackerGroupFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transportTrackerGroupFeatureArgs)(nil)).Elem()
}

type TransportTrackerGroupFeatureInput interface {
	pulumi.Input

	ToTransportTrackerGroupFeatureOutput() TransportTrackerGroupFeatureOutput
	ToTransportTrackerGroupFeatureOutputWithContext(ctx context.Context) TransportTrackerGroupFeatureOutput
}

func (*TransportTrackerGroupFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportTrackerGroupFeature)(nil)).Elem()
}

func (i *TransportTrackerGroupFeature) ToTransportTrackerGroupFeatureOutput() TransportTrackerGroupFeatureOutput {
	return i.ToTransportTrackerGroupFeatureOutputWithContext(context.Background())
}

func (i *TransportTrackerGroupFeature) ToTransportTrackerGroupFeatureOutputWithContext(ctx context.Context) TransportTrackerGroupFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportTrackerGroupFeatureOutput)
}

// TransportTrackerGroupFeatureArrayInput is an input type that accepts TransportTrackerGroupFeatureArray and TransportTrackerGroupFeatureArrayOutput values.
// You can construct a concrete instance of `TransportTrackerGroupFeatureArrayInput` via:
//
//	TransportTrackerGroupFeatureArray{ TransportTrackerGroupFeatureArgs{...} }
type TransportTrackerGroupFeatureArrayInput interface {
	pulumi.Input

	ToTransportTrackerGroupFeatureArrayOutput() TransportTrackerGroupFeatureArrayOutput
	ToTransportTrackerGroupFeatureArrayOutputWithContext(context.Context) TransportTrackerGroupFeatureArrayOutput
}

type TransportTrackerGroupFeatureArray []TransportTrackerGroupFeatureInput

func (TransportTrackerGroupFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportTrackerGroupFeature)(nil)).Elem()
}

func (i TransportTrackerGroupFeatureArray) ToTransportTrackerGroupFeatureArrayOutput() TransportTrackerGroupFeatureArrayOutput {
	return i.ToTransportTrackerGroupFeatureArrayOutputWithContext(context.Background())
}

func (i TransportTrackerGroupFeatureArray) ToTransportTrackerGroupFeatureArrayOutputWithContext(ctx context.Context) TransportTrackerGroupFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportTrackerGroupFeatureArrayOutput)
}

// TransportTrackerGroupFeatureMapInput is an input type that accepts TransportTrackerGroupFeatureMap and TransportTrackerGroupFeatureMapOutput values.
// You can construct a concrete instance of `TransportTrackerGroupFeatureMapInput` via:
//
//	TransportTrackerGroupFeatureMap{ "key": TransportTrackerGroupFeatureArgs{...} }
type TransportTrackerGroupFeatureMapInput interface {
	pulumi.Input

	ToTransportTrackerGroupFeatureMapOutput() TransportTrackerGroupFeatureMapOutput
	ToTransportTrackerGroupFeatureMapOutputWithContext(context.Context) TransportTrackerGroupFeatureMapOutput
}

type TransportTrackerGroupFeatureMap map[string]TransportTrackerGroupFeatureInput

func (TransportTrackerGroupFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportTrackerGroupFeature)(nil)).Elem()
}

func (i TransportTrackerGroupFeatureMap) ToTransportTrackerGroupFeatureMapOutput() TransportTrackerGroupFeatureMapOutput {
	return i.ToTransportTrackerGroupFeatureMapOutputWithContext(context.Background())
}

func (i TransportTrackerGroupFeatureMap) ToTransportTrackerGroupFeatureMapOutputWithContext(ctx context.Context) TransportTrackerGroupFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportTrackerGroupFeatureMapOutput)
}

type TransportTrackerGroupFeatureOutput struct{ *pulumi.OutputState }

func (TransportTrackerGroupFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportTrackerGroupFeature)(nil)).Elem()
}

func (o TransportTrackerGroupFeatureOutput) ToTransportTrackerGroupFeatureOutput() TransportTrackerGroupFeatureOutput {
	return o
}

func (o TransportTrackerGroupFeatureOutput) ToTransportTrackerGroupFeatureOutputWithContext(ctx context.Context) TransportTrackerGroupFeatureOutput {
	return o
}

// The description of the Feature
func (o TransportTrackerGroupFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportTrackerGroupFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o TransportTrackerGroupFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportTrackerGroupFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The name of the Feature
func (o TransportTrackerGroupFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportTrackerGroupFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// tracker ref list combine boolean and or - Choices: `and`, `or` - Default value: `or`
func (o TransportTrackerGroupFeatureOutput) TrackerBoolean() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportTrackerGroupFeature) pulumi.StringPtrOutput { return v.TrackerBoolean }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportTrackerGroupFeatureOutput) TrackerBooleanVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportTrackerGroupFeature) pulumi.StringPtrOutput { return v.TrackerBooleanVariable }).(pulumi.StringPtrOutput)
}

// tracker parcel ref list
func (o TransportTrackerGroupFeatureOutput) TrackerElements() TransportTrackerGroupFeatureTrackerElementArrayOutput {
	return o.ApplyT(func(v *TransportTrackerGroupFeature) TransportTrackerGroupFeatureTrackerElementArrayOutput {
		return v.TrackerElements
	}).(TransportTrackerGroupFeatureTrackerElementArrayOutput)
}

// The version of the Feature
func (o TransportTrackerGroupFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *TransportTrackerGroupFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type TransportTrackerGroupFeatureArrayOutput struct{ *pulumi.OutputState }

func (TransportTrackerGroupFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportTrackerGroupFeature)(nil)).Elem()
}

func (o TransportTrackerGroupFeatureArrayOutput) ToTransportTrackerGroupFeatureArrayOutput() TransportTrackerGroupFeatureArrayOutput {
	return o
}

func (o TransportTrackerGroupFeatureArrayOutput) ToTransportTrackerGroupFeatureArrayOutputWithContext(ctx context.Context) TransportTrackerGroupFeatureArrayOutput {
	return o
}

func (o TransportTrackerGroupFeatureArrayOutput) Index(i pulumi.IntInput) TransportTrackerGroupFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransportTrackerGroupFeature {
		return vs[0].([]*TransportTrackerGroupFeature)[vs[1].(int)]
	}).(TransportTrackerGroupFeatureOutput)
}

type TransportTrackerGroupFeatureMapOutput struct{ *pulumi.OutputState }

func (TransportTrackerGroupFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportTrackerGroupFeature)(nil)).Elem()
}

func (o TransportTrackerGroupFeatureMapOutput) ToTransportTrackerGroupFeatureMapOutput() TransportTrackerGroupFeatureMapOutput {
	return o
}

func (o TransportTrackerGroupFeatureMapOutput) ToTransportTrackerGroupFeatureMapOutputWithContext(ctx context.Context) TransportTrackerGroupFeatureMapOutput {
	return o
}

func (o TransportTrackerGroupFeatureMapOutput) MapIndex(k pulumi.StringInput) TransportTrackerGroupFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransportTrackerGroupFeature {
		return vs[0].(map[string]*TransportTrackerGroupFeature)[vs[1].(string)]
	}).(TransportTrackerGroupFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransportTrackerGroupFeatureInput)(nil)).Elem(), &TransportTrackerGroupFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportTrackerGroupFeatureArrayInput)(nil)).Elem(), TransportTrackerGroupFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportTrackerGroupFeatureMapInput)(nil)).Elem(), TransportTrackerGroupFeatureMap{})
	pulumi.RegisterOutputType(TransportTrackerGroupFeatureOutput{})
	pulumi.RegisterOutputType(TransportTrackerGroupFeatureArrayOutput{})
	pulumi.RegisterOutputType(TransportTrackerGroupFeatureMapOutput{})
}
