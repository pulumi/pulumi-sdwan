// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a System Banner Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewSystemBannerFeature(ctx, "example", &sdwan.SystemBannerFeatureArgs{
//				Name:             pulumi.String("Example"),
//				Description:      pulumi.String("My Example"),
//				FeatureProfileId: pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				Login:            pulumi.String("My login banner"),
//				Motd:             pulumi.String("My motd banner"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/systemBannerFeature:SystemBannerFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type SystemBannerFeature struct {
	pulumi.CustomResourceState

	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput    `pulumi:"featureProfileId"`
	Login            pulumi.StringPtrOutput `pulumi:"login"`
	// Variable name
	LoginVariable pulumi.StringPtrOutput `pulumi:"loginVariable"`
	Motd          pulumi.StringPtrOutput `pulumi:"motd"`
	// Variable name
	MotdVariable pulumi.StringPtrOutput `pulumi:"motdVariable"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewSystemBannerFeature registers a new resource with the given unique name, arguments, and options.
func NewSystemBannerFeature(ctx *pulumi.Context,
	name string, args *SystemBannerFeatureArgs, opts ...pulumi.ResourceOption) (*SystemBannerFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemBannerFeature
	err := ctx.RegisterResource("sdwan:index/systemBannerFeature:SystemBannerFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemBannerFeature gets an existing SystemBannerFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemBannerFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemBannerFeatureState, opts ...pulumi.ResourceOption) (*SystemBannerFeature, error) {
	var resource SystemBannerFeature
	err := ctx.ReadResource("sdwan:index/systemBannerFeature:SystemBannerFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemBannerFeature resources.
type systemBannerFeatureState struct {
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	Login            *string `pulumi:"login"`
	// Variable name
	LoginVariable *string `pulumi:"loginVariable"`
	Motd          *string `pulumi:"motd"`
	// Variable name
	MotdVariable *string `pulumi:"motdVariable"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type SystemBannerFeatureState struct {
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	Login            pulumi.StringPtrInput
	// Variable name
	LoginVariable pulumi.StringPtrInput
	Motd          pulumi.StringPtrInput
	// Variable name
	MotdVariable pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (SystemBannerFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemBannerFeatureState)(nil)).Elem()
}

type systemBannerFeatureArgs struct {
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string  `pulumi:"featureProfileId"`
	Login            *string `pulumi:"login"`
	// Variable name
	LoginVariable *string `pulumi:"loginVariable"`
	Motd          *string `pulumi:"motd"`
	// Variable name
	MotdVariable *string `pulumi:"motdVariable"`
	// The name of the Feature
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a SystemBannerFeature resource.
type SystemBannerFeatureArgs struct {
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	Login            pulumi.StringPtrInput
	// Variable name
	LoginVariable pulumi.StringPtrInput
	Motd          pulumi.StringPtrInput
	// Variable name
	MotdVariable pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
}

func (SystemBannerFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemBannerFeatureArgs)(nil)).Elem()
}

type SystemBannerFeatureInput interface {
	pulumi.Input

	ToSystemBannerFeatureOutput() SystemBannerFeatureOutput
	ToSystemBannerFeatureOutputWithContext(ctx context.Context) SystemBannerFeatureOutput
}

func (*SystemBannerFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemBannerFeature)(nil)).Elem()
}

func (i *SystemBannerFeature) ToSystemBannerFeatureOutput() SystemBannerFeatureOutput {
	return i.ToSystemBannerFeatureOutputWithContext(context.Background())
}

func (i *SystemBannerFeature) ToSystemBannerFeatureOutputWithContext(ctx context.Context) SystemBannerFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemBannerFeatureOutput)
}

// SystemBannerFeatureArrayInput is an input type that accepts SystemBannerFeatureArray and SystemBannerFeatureArrayOutput values.
// You can construct a concrete instance of `SystemBannerFeatureArrayInput` via:
//
//	SystemBannerFeatureArray{ SystemBannerFeatureArgs{...} }
type SystemBannerFeatureArrayInput interface {
	pulumi.Input

	ToSystemBannerFeatureArrayOutput() SystemBannerFeatureArrayOutput
	ToSystemBannerFeatureArrayOutputWithContext(context.Context) SystemBannerFeatureArrayOutput
}

type SystemBannerFeatureArray []SystemBannerFeatureInput

func (SystemBannerFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemBannerFeature)(nil)).Elem()
}

func (i SystemBannerFeatureArray) ToSystemBannerFeatureArrayOutput() SystemBannerFeatureArrayOutput {
	return i.ToSystemBannerFeatureArrayOutputWithContext(context.Background())
}

func (i SystemBannerFeatureArray) ToSystemBannerFeatureArrayOutputWithContext(ctx context.Context) SystemBannerFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemBannerFeatureArrayOutput)
}

// SystemBannerFeatureMapInput is an input type that accepts SystemBannerFeatureMap and SystemBannerFeatureMapOutput values.
// You can construct a concrete instance of `SystemBannerFeatureMapInput` via:
//
//	SystemBannerFeatureMap{ "key": SystemBannerFeatureArgs{...} }
type SystemBannerFeatureMapInput interface {
	pulumi.Input

	ToSystemBannerFeatureMapOutput() SystemBannerFeatureMapOutput
	ToSystemBannerFeatureMapOutputWithContext(context.Context) SystemBannerFeatureMapOutput
}

type SystemBannerFeatureMap map[string]SystemBannerFeatureInput

func (SystemBannerFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemBannerFeature)(nil)).Elem()
}

func (i SystemBannerFeatureMap) ToSystemBannerFeatureMapOutput() SystemBannerFeatureMapOutput {
	return i.ToSystemBannerFeatureMapOutputWithContext(context.Background())
}

func (i SystemBannerFeatureMap) ToSystemBannerFeatureMapOutputWithContext(ctx context.Context) SystemBannerFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemBannerFeatureMapOutput)
}

type SystemBannerFeatureOutput struct{ *pulumi.OutputState }

func (SystemBannerFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemBannerFeature)(nil)).Elem()
}

func (o SystemBannerFeatureOutput) ToSystemBannerFeatureOutput() SystemBannerFeatureOutput {
	return o
}

func (o SystemBannerFeatureOutput) ToSystemBannerFeatureOutputWithContext(ctx context.Context) SystemBannerFeatureOutput {
	return o
}

// The description of the Feature
func (o SystemBannerFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemBannerFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o SystemBannerFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemBannerFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

func (o SystemBannerFeatureOutput) Login() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemBannerFeature) pulumi.StringPtrOutput { return v.Login }).(pulumi.StringPtrOutput)
}

// Variable name
func (o SystemBannerFeatureOutput) LoginVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemBannerFeature) pulumi.StringPtrOutput { return v.LoginVariable }).(pulumi.StringPtrOutput)
}

func (o SystemBannerFeatureOutput) Motd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemBannerFeature) pulumi.StringPtrOutput { return v.Motd }).(pulumi.StringPtrOutput)
}

// Variable name
func (o SystemBannerFeatureOutput) MotdVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemBannerFeature) pulumi.StringPtrOutput { return v.MotdVariable }).(pulumi.StringPtrOutput)
}

// The name of the Feature
func (o SystemBannerFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemBannerFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the Feature
func (o SystemBannerFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemBannerFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type SystemBannerFeatureArrayOutput struct{ *pulumi.OutputState }

func (SystemBannerFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemBannerFeature)(nil)).Elem()
}

func (o SystemBannerFeatureArrayOutput) ToSystemBannerFeatureArrayOutput() SystemBannerFeatureArrayOutput {
	return o
}

func (o SystemBannerFeatureArrayOutput) ToSystemBannerFeatureArrayOutputWithContext(ctx context.Context) SystemBannerFeatureArrayOutput {
	return o
}

func (o SystemBannerFeatureArrayOutput) Index(i pulumi.IntInput) SystemBannerFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemBannerFeature {
		return vs[0].([]*SystemBannerFeature)[vs[1].(int)]
	}).(SystemBannerFeatureOutput)
}

type SystemBannerFeatureMapOutput struct{ *pulumi.OutputState }

func (SystemBannerFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemBannerFeature)(nil)).Elem()
}

func (o SystemBannerFeatureMapOutput) ToSystemBannerFeatureMapOutput() SystemBannerFeatureMapOutput {
	return o
}

func (o SystemBannerFeatureMapOutput) ToSystemBannerFeatureMapOutputWithContext(ctx context.Context) SystemBannerFeatureMapOutput {
	return o
}

func (o SystemBannerFeatureMapOutput) MapIndex(k pulumi.StringInput) SystemBannerFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemBannerFeature {
		return vs[0].(map[string]*SystemBannerFeature)[vs[1].(string)]
	}).(SystemBannerFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemBannerFeatureInput)(nil)).Elem(), &SystemBannerFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemBannerFeatureArrayInput)(nil)).Elem(), SystemBannerFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemBannerFeatureMapInput)(nil)).Elem(), SystemBannerFeatureMap{})
	pulumi.RegisterOutputType(SystemBannerFeatureOutput{})
	pulumi.RegisterOutputType(SystemBannerFeatureArrayOutput{})
	pulumi.RegisterOutputType(SystemBannerFeatureMapOutput{})
}
