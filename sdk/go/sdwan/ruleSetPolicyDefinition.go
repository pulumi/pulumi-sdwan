// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Rule Set Policy Definition .
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/ruleSetPolicyDefinition:RuleSetPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type RuleSetPolicyDefinition struct {
	pulumi.CustomResourceState

	// The description of the policy definition
	Description pulumi.StringOutput `pulumi:"description"`
	// The name of the policy definition
	Name pulumi.StringOutput `pulumi:"name"`
	// List of rules
	Rules RuleSetPolicyDefinitionRuleArrayOutput `pulumi:"rules"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewRuleSetPolicyDefinition registers a new resource with the given unique name, arguments, and options.
func NewRuleSetPolicyDefinition(ctx *pulumi.Context,
	name string, args *RuleSetPolicyDefinitionArgs, opts ...pulumi.ResourceOption) (*RuleSetPolicyDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RuleSetPolicyDefinition
	err := ctx.RegisterResource("sdwan:index/ruleSetPolicyDefinition:RuleSetPolicyDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRuleSetPolicyDefinition gets an existing RuleSetPolicyDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRuleSetPolicyDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RuleSetPolicyDefinitionState, opts ...pulumi.ResourceOption) (*RuleSetPolicyDefinition, error) {
	var resource RuleSetPolicyDefinition
	err := ctx.ReadResource("sdwan:index/ruleSetPolicyDefinition:RuleSetPolicyDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RuleSetPolicyDefinition resources.
type ruleSetPolicyDefinitionState struct {
	// The description of the policy definition
	Description *string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of rules
	Rules []RuleSetPolicyDefinitionRule `pulumi:"rules"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type RuleSetPolicyDefinitionState struct {
	// The description of the policy definition
	Description pulumi.StringPtrInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of rules
	Rules RuleSetPolicyDefinitionRuleArrayInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (RuleSetPolicyDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleSetPolicyDefinitionState)(nil)).Elem()
}

type ruleSetPolicyDefinitionArgs struct {
	// The description of the policy definition
	Description string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of rules
	Rules []RuleSetPolicyDefinitionRule `pulumi:"rules"`
}

// The set of arguments for constructing a RuleSetPolicyDefinition resource.
type RuleSetPolicyDefinitionArgs struct {
	// The description of the policy definition
	Description pulumi.StringInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of rules
	Rules RuleSetPolicyDefinitionRuleArrayInput
}

func (RuleSetPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleSetPolicyDefinitionArgs)(nil)).Elem()
}

type RuleSetPolicyDefinitionInput interface {
	pulumi.Input

	ToRuleSetPolicyDefinitionOutput() RuleSetPolicyDefinitionOutput
	ToRuleSetPolicyDefinitionOutputWithContext(ctx context.Context) RuleSetPolicyDefinitionOutput
}

func (*RuleSetPolicyDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleSetPolicyDefinition)(nil)).Elem()
}

func (i *RuleSetPolicyDefinition) ToRuleSetPolicyDefinitionOutput() RuleSetPolicyDefinitionOutput {
	return i.ToRuleSetPolicyDefinitionOutputWithContext(context.Background())
}

func (i *RuleSetPolicyDefinition) ToRuleSetPolicyDefinitionOutputWithContext(ctx context.Context) RuleSetPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSetPolicyDefinitionOutput)
}

// RuleSetPolicyDefinitionArrayInput is an input type that accepts RuleSetPolicyDefinitionArray and RuleSetPolicyDefinitionArrayOutput values.
// You can construct a concrete instance of `RuleSetPolicyDefinitionArrayInput` via:
//
//	RuleSetPolicyDefinitionArray{ RuleSetPolicyDefinitionArgs{...} }
type RuleSetPolicyDefinitionArrayInput interface {
	pulumi.Input

	ToRuleSetPolicyDefinitionArrayOutput() RuleSetPolicyDefinitionArrayOutput
	ToRuleSetPolicyDefinitionArrayOutputWithContext(context.Context) RuleSetPolicyDefinitionArrayOutput
}

type RuleSetPolicyDefinitionArray []RuleSetPolicyDefinitionInput

func (RuleSetPolicyDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RuleSetPolicyDefinition)(nil)).Elem()
}

func (i RuleSetPolicyDefinitionArray) ToRuleSetPolicyDefinitionArrayOutput() RuleSetPolicyDefinitionArrayOutput {
	return i.ToRuleSetPolicyDefinitionArrayOutputWithContext(context.Background())
}

func (i RuleSetPolicyDefinitionArray) ToRuleSetPolicyDefinitionArrayOutputWithContext(ctx context.Context) RuleSetPolicyDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSetPolicyDefinitionArrayOutput)
}

// RuleSetPolicyDefinitionMapInput is an input type that accepts RuleSetPolicyDefinitionMap and RuleSetPolicyDefinitionMapOutput values.
// You can construct a concrete instance of `RuleSetPolicyDefinitionMapInput` via:
//
//	RuleSetPolicyDefinitionMap{ "key": RuleSetPolicyDefinitionArgs{...} }
type RuleSetPolicyDefinitionMapInput interface {
	pulumi.Input

	ToRuleSetPolicyDefinitionMapOutput() RuleSetPolicyDefinitionMapOutput
	ToRuleSetPolicyDefinitionMapOutputWithContext(context.Context) RuleSetPolicyDefinitionMapOutput
}

type RuleSetPolicyDefinitionMap map[string]RuleSetPolicyDefinitionInput

func (RuleSetPolicyDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RuleSetPolicyDefinition)(nil)).Elem()
}

func (i RuleSetPolicyDefinitionMap) ToRuleSetPolicyDefinitionMapOutput() RuleSetPolicyDefinitionMapOutput {
	return i.ToRuleSetPolicyDefinitionMapOutputWithContext(context.Background())
}

func (i RuleSetPolicyDefinitionMap) ToRuleSetPolicyDefinitionMapOutputWithContext(ctx context.Context) RuleSetPolicyDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSetPolicyDefinitionMapOutput)
}

type RuleSetPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (RuleSetPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleSetPolicyDefinition)(nil)).Elem()
}

func (o RuleSetPolicyDefinitionOutput) ToRuleSetPolicyDefinitionOutput() RuleSetPolicyDefinitionOutput {
	return o
}

func (o RuleSetPolicyDefinitionOutput) ToRuleSetPolicyDefinitionOutputWithContext(ctx context.Context) RuleSetPolicyDefinitionOutput {
	return o
}

// The description of the policy definition
func (o RuleSetPolicyDefinitionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleSetPolicyDefinition) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The name of the policy definition
func (o RuleSetPolicyDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleSetPolicyDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of rules
func (o RuleSetPolicyDefinitionOutput) Rules() RuleSetPolicyDefinitionRuleArrayOutput {
	return o.ApplyT(func(v *RuleSetPolicyDefinition) RuleSetPolicyDefinitionRuleArrayOutput { return v.Rules }).(RuleSetPolicyDefinitionRuleArrayOutput)
}

// The version of the object
func (o RuleSetPolicyDefinitionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *RuleSetPolicyDefinition) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type RuleSetPolicyDefinitionArrayOutput struct{ *pulumi.OutputState }

func (RuleSetPolicyDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RuleSetPolicyDefinition)(nil)).Elem()
}

func (o RuleSetPolicyDefinitionArrayOutput) ToRuleSetPolicyDefinitionArrayOutput() RuleSetPolicyDefinitionArrayOutput {
	return o
}

func (o RuleSetPolicyDefinitionArrayOutput) ToRuleSetPolicyDefinitionArrayOutputWithContext(ctx context.Context) RuleSetPolicyDefinitionArrayOutput {
	return o
}

func (o RuleSetPolicyDefinitionArrayOutput) Index(i pulumi.IntInput) RuleSetPolicyDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RuleSetPolicyDefinition {
		return vs[0].([]*RuleSetPolicyDefinition)[vs[1].(int)]
	}).(RuleSetPolicyDefinitionOutput)
}

type RuleSetPolicyDefinitionMapOutput struct{ *pulumi.OutputState }

func (RuleSetPolicyDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RuleSetPolicyDefinition)(nil)).Elem()
}

func (o RuleSetPolicyDefinitionMapOutput) ToRuleSetPolicyDefinitionMapOutput() RuleSetPolicyDefinitionMapOutput {
	return o
}

func (o RuleSetPolicyDefinitionMapOutput) ToRuleSetPolicyDefinitionMapOutputWithContext(ctx context.Context) RuleSetPolicyDefinitionMapOutput {
	return o
}

func (o RuleSetPolicyDefinitionMapOutput) MapIndex(k pulumi.StringInput) RuleSetPolicyDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RuleSetPolicyDefinition {
		return vs[0].(map[string]*RuleSetPolicyDefinition)[vs[1].(string)]
	}).(RuleSetPolicyDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSetPolicyDefinitionInput)(nil)).Elem(), &RuleSetPolicyDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSetPolicyDefinitionArrayInput)(nil)).Elem(), RuleSetPolicyDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSetPolicyDefinitionMapInput)(nil)).Elem(), RuleSetPolicyDefinitionMap{})
	pulumi.RegisterOutputType(RuleSetPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(RuleSetPolicyDefinitionArrayOutput{})
	pulumi.RegisterOutputType(RuleSetPolicyDefinitionMapOutput{})
}
