// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Policy Object Application List Policy_object.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewPolicyObjectApplicationList(ctx, "example", &sdwan.PolicyObjectApplicationListArgs{
//				Name:             pulumi.String("Example"),
//				Description:      pulumi.String("My Example"),
//				FeatureProfileId: pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				Entries: sdwan.PolicyObjectApplicationListEntryArray{
//					&sdwan.PolicyObjectApplicationListEntryArgs{
//						Application: pulumi.String("3com-amp3"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "policy_object_application_list_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/policyObjectApplicationList:PolicyObjectApplicationList example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type PolicyObjectApplicationList struct {
	pulumi.CustomResourceState

	// The description of the Policy_object
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Centralized Policy App List
	Entries PolicyObjectApplicationListEntryArrayOutput `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the Policy_object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewPolicyObjectApplicationList registers a new resource with the given unique name, arguments, and options.
func NewPolicyObjectApplicationList(ctx *pulumi.Context,
	name string, args *PolicyObjectApplicationListArgs, opts ...pulumi.ResourceOption) (*PolicyObjectApplicationList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyObjectApplicationList
	err := ctx.RegisterResource("sdwan:index/policyObjectApplicationList:PolicyObjectApplicationList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyObjectApplicationList gets an existing PolicyObjectApplicationList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyObjectApplicationList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyObjectApplicationListState, opts ...pulumi.ResourceOption) (*PolicyObjectApplicationList, error) {
	var resource PolicyObjectApplicationList
	err := ctx.ReadResource("sdwan:index/policyObjectApplicationList:PolicyObjectApplicationList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyObjectApplicationList resources.
type policyObjectApplicationListState struct {
	// The description of the Policy_object
	Description *string `pulumi:"description"`
	// Centralized Policy App List
	Entries []PolicyObjectApplicationListEntry `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name *string `pulumi:"name"`
	// The version of the Policy_object
	Version *int `pulumi:"version"`
}

type PolicyObjectApplicationListState struct {
	// The description of the Policy_object
	Description pulumi.StringPtrInput
	// Centralized Policy App List
	Entries PolicyObjectApplicationListEntryArrayInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Policy_object
	Name pulumi.StringPtrInput
	// The version of the Policy_object
	Version pulumi.IntPtrInput
}

func (PolicyObjectApplicationListState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyObjectApplicationListState)(nil)).Elem()
}

type policyObjectApplicationListArgs struct {
	// The description of the Policy_object
	Description *string `pulumi:"description"`
	// Centralized Policy App List
	Entries []PolicyObjectApplicationListEntry `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a PolicyObjectApplicationList resource.
type PolicyObjectApplicationListArgs struct {
	// The description of the Policy_object
	Description pulumi.StringPtrInput
	// Centralized Policy App List
	Entries PolicyObjectApplicationListEntryArrayInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// The name of the Policy_object
	Name pulumi.StringPtrInput
}

func (PolicyObjectApplicationListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyObjectApplicationListArgs)(nil)).Elem()
}

type PolicyObjectApplicationListInput interface {
	pulumi.Input

	ToPolicyObjectApplicationListOutput() PolicyObjectApplicationListOutput
	ToPolicyObjectApplicationListOutputWithContext(ctx context.Context) PolicyObjectApplicationListOutput
}

func (*PolicyObjectApplicationList) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyObjectApplicationList)(nil)).Elem()
}

func (i *PolicyObjectApplicationList) ToPolicyObjectApplicationListOutput() PolicyObjectApplicationListOutput {
	return i.ToPolicyObjectApplicationListOutputWithContext(context.Background())
}

func (i *PolicyObjectApplicationList) ToPolicyObjectApplicationListOutputWithContext(ctx context.Context) PolicyObjectApplicationListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectApplicationListOutput)
}

// PolicyObjectApplicationListArrayInput is an input type that accepts PolicyObjectApplicationListArray and PolicyObjectApplicationListArrayOutput values.
// You can construct a concrete instance of `PolicyObjectApplicationListArrayInput` via:
//
//	PolicyObjectApplicationListArray{ PolicyObjectApplicationListArgs{...} }
type PolicyObjectApplicationListArrayInput interface {
	pulumi.Input

	ToPolicyObjectApplicationListArrayOutput() PolicyObjectApplicationListArrayOutput
	ToPolicyObjectApplicationListArrayOutputWithContext(context.Context) PolicyObjectApplicationListArrayOutput
}

type PolicyObjectApplicationListArray []PolicyObjectApplicationListInput

func (PolicyObjectApplicationListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyObjectApplicationList)(nil)).Elem()
}

func (i PolicyObjectApplicationListArray) ToPolicyObjectApplicationListArrayOutput() PolicyObjectApplicationListArrayOutput {
	return i.ToPolicyObjectApplicationListArrayOutputWithContext(context.Background())
}

func (i PolicyObjectApplicationListArray) ToPolicyObjectApplicationListArrayOutputWithContext(ctx context.Context) PolicyObjectApplicationListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectApplicationListArrayOutput)
}

// PolicyObjectApplicationListMapInput is an input type that accepts PolicyObjectApplicationListMap and PolicyObjectApplicationListMapOutput values.
// You can construct a concrete instance of `PolicyObjectApplicationListMapInput` via:
//
//	PolicyObjectApplicationListMap{ "key": PolicyObjectApplicationListArgs{...} }
type PolicyObjectApplicationListMapInput interface {
	pulumi.Input

	ToPolicyObjectApplicationListMapOutput() PolicyObjectApplicationListMapOutput
	ToPolicyObjectApplicationListMapOutputWithContext(context.Context) PolicyObjectApplicationListMapOutput
}

type PolicyObjectApplicationListMap map[string]PolicyObjectApplicationListInput

func (PolicyObjectApplicationListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyObjectApplicationList)(nil)).Elem()
}

func (i PolicyObjectApplicationListMap) ToPolicyObjectApplicationListMapOutput() PolicyObjectApplicationListMapOutput {
	return i.ToPolicyObjectApplicationListMapOutputWithContext(context.Background())
}

func (i PolicyObjectApplicationListMap) ToPolicyObjectApplicationListMapOutputWithContext(ctx context.Context) PolicyObjectApplicationListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectApplicationListMapOutput)
}

type PolicyObjectApplicationListOutput struct{ *pulumi.OutputState }

func (PolicyObjectApplicationListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyObjectApplicationList)(nil)).Elem()
}

func (o PolicyObjectApplicationListOutput) ToPolicyObjectApplicationListOutput() PolicyObjectApplicationListOutput {
	return o
}

func (o PolicyObjectApplicationListOutput) ToPolicyObjectApplicationListOutputWithContext(ctx context.Context) PolicyObjectApplicationListOutput {
	return o
}

// The description of the Policy_object
func (o PolicyObjectApplicationListOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyObjectApplicationList) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Centralized Policy App List
func (o PolicyObjectApplicationListOutput) Entries() PolicyObjectApplicationListEntryArrayOutput {
	return o.ApplyT(func(v *PolicyObjectApplicationList) PolicyObjectApplicationListEntryArrayOutput { return v.Entries }).(PolicyObjectApplicationListEntryArrayOutput)
}

// Feature Profile ID
func (o PolicyObjectApplicationListOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectApplicationList) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The name of the Policy_object
func (o PolicyObjectApplicationListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectApplicationList) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the Policy_object
func (o PolicyObjectApplicationListOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *PolicyObjectApplicationList) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type PolicyObjectApplicationListArrayOutput struct{ *pulumi.OutputState }

func (PolicyObjectApplicationListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyObjectApplicationList)(nil)).Elem()
}

func (o PolicyObjectApplicationListArrayOutput) ToPolicyObjectApplicationListArrayOutput() PolicyObjectApplicationListArrayOutput {
	return o
}

func (o PolicyObjectApplicationListArrayOutput) ToPolicyObjectApplicationListArrayOutputWithContext(ctx context.Context) PolicyObjectApplicationListArrayOutput {
	return o
}

func (o PolicyObjectApplicationListArrayOutput) Index(i pulumi.IntInput) PolicyObjectApplicationListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyObjectApplicationList {
		return vs[0].([]*PolicyObjectApplicationList)[vs[1].(int)]
	}).(PolicyObjectApplicationListOutput)
}

type PolicyObjectApplicationListMapOutput struct{ *pulumi.OutputState }

func (PolicyObjectApplicationListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyObjectApplicationList)(nil)).Elem()
}

func (o PolicyObjectApplicationListMapOutput) ToPolicyObjectApplicationListMapOutput() PolicyObjectApplicationListMapOutput {
	return o
}

func (o PolicyObjectApplicationListMapOutput) ToPolicyObjectApplicationListMapOutputWithContext(ctx context.Context) PolicyObjectApplicationListMapOutput {
	return o
}

func (o PolicyObjectApplicationListMapOutput) MapIndex(k pulumi.StringInput) PolicyObjectApplicationListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyObjectApplicationList {
		return vs[0].(map[string]*PolicyObjectApplicationList)[vs[1].(string)]
	}).(PolicyObjectApplicationListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectApplicationListInput)(nil)).Elem(), &PolicyObjectApplicationList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectApplicationListArrayInput)(nil)).Elem(), PolicyObjectApplicationListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectApplicationListMapInput)(nil)).Elem(), PolicyObjectApplicationListMap{})
	pulumi.RegisterOutputType(PolicyObjectApplicationListOutput{})
	pulumi.RegisterOutputType(PolicyObjectApplicationListArrayOutput{})
	pulumi.RegisterOutputType(PolicyObjectApplicationListMapOutput{})
}
