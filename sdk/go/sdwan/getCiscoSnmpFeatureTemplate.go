// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Cisco SNMP feature template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupCiscoSnmpFeatureTemplate(ctx, &sdwan.LookupCiscoSnmpFeatureTemplateArgs{
//				Id: pulumi.StringRef("f6b2c44c-693c-4763-b010-895aa3d236bd"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCiscoSnmpFeatureTemplate(ctx *pulumi.Context, args *LookupCiscoSnmpFeatureTemplateArgs, opts ...pulumi.InvokeOption) (*LookupCiscoSnmpFeatureTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCiscoSnmpFeatureTemplateResult
	err := ctx.Invoke("sdwan:index/getCiscoSnmpFeatureTemplate:getCiscoSnmpFeatureTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCiscoSnmpFeatureTemplate.
type LookupCiscoSnmpFeatureTemplateArgs struct {
	// The id of the feature template
	Id *string `pulumi:"id"`
	// The name of the feature template
	Name *string `pulumi:"name"`
}

// A collection of values returned by getCiscoSnmpFeatureTemplate.
type LookupCiscoSnmpFeatureTemplateResult struct {
	// Configure SNMP community
	Communities []GetCiscoSnmpFeatureTemplateCommunity `pulumi:"communities"`
	// Set the contact for this managed node
	Contact string `pulumi:"contact"`
	// Variable name
	ContactVariable string `pulumi:"contactVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Configure an SNMP group
	Groups []GetCiscoSnmpFeatureTemplateGroup `pulumi:"groups"`
	// The id of the feature template
	Id string `pulumi:"id"`
	// Set the physical location of this managed node
	Location string `pulumi:"location"`
	// Variable name
	LocationVariable string `pulumi:"locationVariable"`
	// The name of the feature template
	Name string `pulumi:"name"`
	// Enable or disable SNMP
	Shutdown bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable string `pulumi:"shutdownVariable"`
	// The template type
	TemplateType string `pulumi:"templateType"`
	// Configure SNMP server to receive SNMP traps
	TrapTargets []GetCiscoSnmpFeatureTemplateTrapTarget `pulumi:"trapTargets"`
	// Configure an SNMP user
	Users []GetCiscoSnmpFeatureTemplateUser `pulumi:"users"`
	// The version of the feature template
	Version int `pulumi:"version"`
	// Configure a view record
	Views []GetCiscoSnmpFeatureTemplateView `pulumi:"views"`
}

func LookupCiscoSnmpFeatureTemplateOutput(ctx *pulumi.Context, args LookupCiscoSnmpFeatureTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupCiscoSnmpFeatureTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCiscoSnmpFeatureTemplateResult, error) {
			args := v.(LookupCiscoSnmpFeatureTemplateArgs)
			r, err := LookupCiscoSnmpFeatureTemplate(ctx, &args, opts...)
			var s LookupCiscoSnmpFeatureTemplateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCiscoSnmpFeatureTemplateResultOutput)
}

// A collection of arguments for invoking getCiscoSnmpFeatureTemplate.
type LookupCiscoSnmpFeatureTemplateOutputArgs struct {
	// The id of the feature template
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the feature template
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupCiscoSnmpFeatureTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCiscoSnmpFeatureTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getCiscoSnmpFeatureTemplate.
type LookupCiscoSnmpFeatureTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupCiscoSnmpFeatureTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCiscoSnmpFeatureTemplateResult)(nil)).Elem()
}

func (o LookupCiscoSnmpFeatureTemplateResultOutput) ToLookupCiscoSnmpFeatureTemplateResultOutput() LookupCiscoSnmpFeatureTemplateResultOutput {
	return o
}

func (o LookupCiscoSnmpFeatureTemplateResultOutput) ToLookupCiscoSnmpFeatureTemplateResultOutputWithContext(ctx context.Context) LookupCiscoSnmpFeatureTemplateResultOutput {
	return o
}

// Configure SNMP community
func (o LookupCiscoSnmpFeatureTemplateResultOutput) Communities() GetCiscoSnmpFeatureTemplateCommunityArrayOutput {
	return o.ApplyT(func(v LookupCiscoSnmpFeatureTemplateResult) []GetCiscoSnmpFeatureTemplateCommunity {
		return v.Communities
	}).(GetCiscoSnmpFeatureTemplateCommunityArrayOutput)
}

// Set the contact for this managed node
func (o LookupCiscoSnmpFeatureTemplateResultOutput) Contact() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSnmpFeatureTemplateResult) string { return v.Contact }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSnmpFeatureTemplateResultOutput) ContactVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSnmpFeatureTemplateResult) string { return v.ContactVariable }).(pulumi.StringOutput)
}

// The description of the feature template
func (o LookupCiscoSnmpFeatureTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSnmpFeatureTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
func (o LookupCiscoSnmpFeatureTemplateResultOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCiscoSnmpFeatureTemplateResult) []string { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Configure an SNMP group
func (o LookupCiscoSnmpFeatureTemplateResultOutput) Groups() GetCiscoSnmpFeatureTemplateGroupArrayOutput {
	return o.ApplyT(func(v LookupCiscoSnmpFeatureTemplateResult) []GetCiscoSnmpFeatureTemplateGroup { return v.Groups }).(GetCiscoSnmpFeatureTemplateGroupArrayOutput)
}

// The id of the feature template
func (o LookupCiscoSnmpFeatureTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSnmpFeatureTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// Set the physical location of this managed node
func (o LookupCiscoSnmpFeatureTemplateResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSnmpFeatureTemplateResult) string { return v.Location }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSnmpFeatureTemplateResultOutput) LocationVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSnmpFeatureTemplateResult) string { return v.LocationVariable }).(pulumi.StringOutput)
}

// The name of the feature template
func (o LookupCiscoSnmpFeatureTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSnmpFeatureTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// Enable or disable SNMP
func (o LookupCiscoSnmpFeatureTemplateResultOutput) Shutdown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCiscoSnmpFeatureTemplateResult) bool { return v.Shutdown }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupCiscoSnmpFeatureTemplateResultOutput) ShutdownVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSnmpFeatureTemplateResult) string { return v.ShutdownVariable }).(pulumi.StringOutput)
}

// The template type
func (o LookupCiscoSnmpFeatureTemplateResultOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSnmpFeatureTemplateResult) string { return v.TemplateType }).(pulumi.StringOutput)
}

// Configure SNMP server to receive SNMP traps
func (o LookupCiscoSnmpFeatureTemplateResultOutput) TrapTargets() GetCiscoSnmpFeatureTemplateTrapTargetArrayOutput {
	return o.ApplyT(func(v LookupCiscoSnmpFeatureTemplateResult) []GetCiscoSnmpFeatureTemplateTrapTarget {
		return v.TrapTargets
	}).(GetCiscoSnmpFeatureTemplateTrapTargetArrayOutput)
}

// Configure an SNMP user
func (o LookupCiscoSnmpFeatureTemplateResultOutput) Users() GetCiscoSnmpFeatureTemplateUserArrayOutput {
	return o.ApplyT(func(v LookupCiscoSnmpFeatureTemplateResult) []GetCiscoSnmpFeatureTemplateUser { return v.Users }).(GetCiscoSnmpFeatureTemplateUserArrayOutput)
}

// The version of the feature template
func (o LookupCiscoSnmpFeatureTemplateResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoSnmpFeatureTemplateResult) int { return v.Version }).(pulumi.IntOutput)
}

// Configure a view record
func (o LookupCiscoSnmpFeatureTemplateResultOutput) Views() GetCiscoSnmpFeatureTemplateViewArrayOutput {
	return o.ApplyT(func(v LookupCiscoSnmpFeatureTemplateResult) []GetCiscoSnmpFeatureTemplateView { return v.Views }).(GetCiscoSnmpFeatureTemplateViewArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCiscoSnmpFeatureTemplateResultOutput{})
}
