// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Transport WAN VPN Interface T1 E1 Serial Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewTransportWanVpnInterfaceT1E1SerialFeature(ctx, "example", &sdwan.TransportWanVpnInterfaceT1E1SerialFeatureArgs{
//				Name:                                 pulumi.String("Example"),
//				Description:                          pulumi.String("My Example"),
//				FeatureProfileId:                     pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				TransportWanVpnFeatureId:             pulumi.String("140331f6-5418-4755-a059-13c77eb96037"),
//				Shutdown:                             pulumi.Bool(true),
//				InterfaceName:                        pulumi.String("Serial0"),
//				Ipv4Address:                          pulumi.String("1.2.3.4"),
//				Ipv4SubnetMask:                       pulumi.String("0.0.0.0"),
//				Ipv6Address:                          pulumi.String("2001:0:0:1::/64"),
//				Bandwidth:                            pulumi.Int(123456),
//				BandwidthDownstream:                  pulumi.Int(123456),
//				ClockRate:                            pulumi.String("1200"),
//				Encapsulation:                        pulumi.String("ppp"),
//				TunnelInterface:                      pulumi.Bool(true),
//				PerTunnelQos:                         pulumi.Bool(true),
//				PerTunnelQosAggregator:               pulumi.Bool(false),
//				TunnelQosMode:                        pulumi.String("hub"),
//				TunnelInterfaceColor:                 pulumi.String("mpls"),
//				TunnelInterfaceRestrict:              pulumi.Bool(true),
//				TunnelInterfaceGroups:                pulumi.Int(42949672),
//				TunnelInterfaceBorder:                pulumi.Bool(false),
//				TunnelInterfaceMaxControlConnections: pulumi.Int(62),
//				TunnelInterfaceVbondAsStunServer:     pulumi.Bool(false),
//				TunnelInterfaceExcludeControllerGroupLists: pulumi.IntArray{
//					pulumi.Int(2),
//				},
//				TunnelInterfaceVmanageConnectionPreference: pulumi.Int(8),
//				TunnelInterfacePortHop:                     pulumi.Bool(true),
//				TunnelInterfaceLowBandwidthLink:            pulumi.Bool(false),
//				TunnelInterfaceTunnelTcpMss:                pulumi.Int(1460),
//				TunnelInterfaceClearDontFragment:           pulumi.Bool(false),
//				TunnelInterfaceClearNetworkBroadcast:       pulumi.Bool(false),
//				TunnelInterfaceCarrier:                     pulumi.String("default"),
//				TunnelInterfaceBindLoopbackTunnel:          pulumi.String("example"),
//				TunnelInterfaceLastResortCircuit:           pulumi.Bool(false),
//				TunnelInterfaceNatRefreshInterval:          pulumi.Int(5),
//				TunnelInterfaceHelloInterval:               pulumi.Int(1000),
//				TunnelInterfaceHelloTolerance:              pulumi.Int(12),
//				TunnelInterfaceAllowAll:                    pulumi.Bool(false),
//				TunnelInterfaceAllowBgp:                    pulumi.Bool(false),
//				TunnelInterfaceAllowDhcp:                   pulumi.Bool(true),
//				TunnelInterfaceAllowDns:                    pulumi.Bool(true),
//				TunnelInterfaceAllowIcmp:                   pulumi.Bool(true),
//				TunnelInterfaceAllowNetconf:                pulumi.Bool(false),
//				TunnelInterfaceAllowNtp:                    pulumi.Bool(false),
//				TunnelInterfaceAllowOspf:                   pulumi.Bool(false),
//				TunnelInterfaceAllowSsh:                    pulumi.Bool(false),
//				TunnelInterfaceAllowStun:                   pulumi.Bool(false),
//				TunnelInterfaceAllowHttps:                  pulumi.Bool(true),
//				TunnelInterfaceAllowSnmp:                   pulumi.Bool(false),
//				TunnelInterfaceAllowBfd:                    pulumi.Bool(false),
//				TunnelInterfaceEncapsulations: sdwan.TransportWanVpnInterfaceT1E1SerialFeatureTunnelInterfaceEncapsulationArray{
//					&sdwan.TransportWanVpnInterfaceT1E1SerialFeatureTunnelInterfaceEncapsulationArgs{
//						Encapsulation: pulumi.String("gre"),
//						Preference:    pulumi.Int(4294967),
//						Weight:        pulumi.Int(250),
//					},
//				},
//				TcpMss:        pulumi.Int(1460),
//				Mtu:           pulumi.Int(1500),
//				IpMtu:         pulumi.Int(1500),
//				TlocExtension: pulumi.String("tloc"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Expected import identifier with the format: "transport_wan_vpn_interface_t1_e1_serial_feature_id,feature_profile_id,transport_wan_vpn_feature_id"
//
// ```sh
// $ pulumi import sdwan:index/transportWanVpnInterfaceT1E1SerialFeature:TransportWanVpnInterfaceT1E1SerialFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037"
// ```
type TransportWanVpnInterfaceT1E1SerialFeature struct {
	pulumi.CustomResourceState

	// Interface bandwidth capacity, in kbps - Range: `1`-`200000000`
	Bandwidth pulumi.IntPtrOutput `pulumi:"bandwidth"`
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthDownstream pulumi.IntPtrOutput `pulumi:"bandwidthDownstream"`
	// Variable name
	BandwidthDownstreamVariable pulumi.StringPtrOutput `pulumi:"bandwidthDownstreamVariable"`
	// Variable name
	BandwidthVariable pulumi.StringPtrOutput `pulumi:"bandwidthVariable"`
	// Set preference for interface Clock speed - Choices: `1200`, `2400`, `4800`, `9600`, `14400`, `19200`, `28800`, `32000`,
	// `38400`, `48000`, `56000`, `57600`, `64000`, `72000`, `115200`, `125000`, `148000`, `192000`, `250000`, `256000`,
	// `384000`, `500000`, `512000`, `768000`, `800000`, `1000000`, `2000000`, `4000000`, `5300000`, `8000000`
	ClockRate pulumi.StringPtrOutput `pulumi:"clockRate"`
	// Variable name
	ClockRateVariable pulumi.StringPtrOutput `pulumi:"clockRateVariable"`
	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Configure Encapsulation for interface - Choices: `hdlc`, `ppp`, `frame-relay`
	Encapsulation pulumi.StringPtrOutput `pulumi:"encapsulation"`
	// Variable name
	EncapsulationVariable pulumi.StringPtrOutput `pulumi:"encapsulationVariable"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// Serial Interface Name - slot/subslot/port:channel-group for T1/E1, slot/subslot/port for NIM-1T
	InterfaceName pulumi.StringPtrOutput `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable pulumi.StringPtrOutput `pulumi:"interfaceNameVariable"`
	// Set ip mtu - Range: `576`-`9216` - Default value: `1500`
	IpMtu pulumi.IntPtrOutput `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable pulumi.StringPtrOutput `pulumi:"ipMtuVariable"`
	Ipv4Address   pulumi.StringPtrOutput `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrOutput `pulumi:"ipv4AddressVariable"`
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrOutput `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable pulumi.StringPtrOutput `pulumi:"ipv4SubnetMaskVariable"`
	// Assign IPv6 address
	Ipv6Address pulumi.StringPtrOutput `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrOutput `pulumi:"ipv6AddressVariable"`
	// Interface MTU <68...2000>, in bytes - Range: `576`-`9216` - Default value: `1500`
	Mtu pulumi.IntPtrOutput `pulumi:"mtu"`
	// Variable name
	MtuVariable pulumi.StringPtrOutput `pulumi:"mtuVariable"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// Per-tunnel Qos - Default value: `false`
	PerTunnelQos pulumi.BoolPtrOutput `pulumi:"perTunnelQos"`
	// Per-tunnel QoS Aggregator - Default value: `false`
	PerTunnelQosAggregator pulumi.BoolPtrOutput `pulumi:"perTunnelQosAggregator"`
	// Variable name
	PerTunnelQosAggregatorVariable pulumi.StringPtrOutput `pulumi:"perTunnelQosAggregatorVariable"`
	// Variable name
	PerTunnelQosVariable pulumi.StringPtrOutput `pulumi:"perTunnelQosVariable"`
	// 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
	QosShapingRate pulumi.IntPtrOutput `pulumi:"qosShapingRate"`
	// Variable name
	QosShapingRateVariable pulumi.StringPtrOutput `pulumi:"qosShapingRateVariable"`
	// Administrative state - Default value: `true`
	Shutdown pulumi.BoolPtrOutput `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable pulumi.StringPtrOutput `pulumi:"shutdownVariable"`
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss pulumi.IntPtrOutput `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable pulumi.StringPtrOutput `pulumi:"tcpMssVariable"`
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension pulumi.StringPtrOutput `pulumi:"tlocExtension"`
	// Variable name
	TlocExtensionVariable pulumi.StringPtrOutput `pulumi:"tlocExtensionVariable"`
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId pulumi.StringPtrOutput `pulumi:"transportWanVpnFeatureId"`
	// Tunnel Interface - Default value: `false`
	TunnelInterface pulumi.BoolPtrOutput `pulumi:"tunnelInterface"`
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowAll"`
	// Variable name
	TunnelInterfaceAllowAllVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowAllVariable"`
	// Allow/Deny BFD - Default value: `false`
	TunnelInterfaceAllowBfd pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowBfd"`
	// Variable name
	TunnelInterfaceAllowBfdVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowBfdVariable"`
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowBgp"`
	// Variable name
	TunnelInterfaceAllowBgpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowBgpVariable"`
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowDhcp"`
	// Variable name
	TunnelInterfaceAllowDhcpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowDhcpVariable"`
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDns pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowDns"`
	// Variable name
	TunnelInterfaceAllowDnsVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowDnsVariable"`
	// Allow/Deny Https - Default value: `true`
	TunnelInterfaceAllowHttps pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowHttps"`
	// Variable name
	TunnelInterfaceAllowHttpsVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowHttpsVariable"`
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowIcmp"`
	// Variable name
	TunnelInterfaceAllowIcmpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowIcmpVariable"`
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowNetconf"`
	// Variable name
	TunnelInterfaceAllowNetconfVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowNetconfVariable"`
	// Allow/Deny NTP - Default value: `false`
	TunnelInterfaceAllowNtp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowNtp"`
	// Variable name
	TunnelInterfaceAllowNtpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowNtpVariable"`
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowOspf"`
	// Variable name
	TunnelInterfaceAllowOspfVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowOspfVariable"`
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowSnmp"`
	// Variable name
	TunnelInterfaceAllowSnmpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowSnmpVariable"`
	// Allow/Deny SSH - Default value: `false`
	TunnelInterfaceAllowSsh pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowSsh"`
	// Variable name
	TunnelInterfaceAllowSshVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowSshVariable"`
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowStun"`
	// Variable name
	TunnelInterfaceAllowStunVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowStunVariable"`
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel pulumi.StringPtrOutput `pulumi:"tunnelInterfaceBindLoopbackTunnel"`
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceBindLoopbackTunnelVariable"`
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceBorder"`
	// Variable name
	TunnelInterfaceBorderVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceBorderVariable"`
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier pulumi.StringPtrOutput `pulumi:"tunnelInterfaceCarrier"`
	// Variable name
	TunnelInterfaceCarrierVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceCarrierVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceClearDontFragment"`
	// Variable name
	TunnelInterfaceClearDontFragmentVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceClearDontFragmentVariable"`
	// Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
	TunnelInterfaceClearNetworkBroadcast pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceClearNetworkBroadcast"`
	// Variable name
	TunnelInterfaceClearNetworkBroadcastVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceClearNetworkBroadcastVariable"`
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `default`
	TunnelInterfaceColor pulumi.StringPtrOutput `pulumi:"tunnelInterfaceColor"`
	// Variable name
	TunnelInterfaceColorVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceColorVariable"`
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations TransportWanVpnInterfaceT1E1SerialFeatureTunnelInterfaceEncapsulationArrayOutput `pulumi:"tunnelInterfaceEncapsulations"`
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceExcludeControllerGroupListVariable"`
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists pulumi.IntArrayOutput `pulumi:"tunnelInterfaceExcludeControllerGroupLists"`
	// List of groups - Range: `1`-`4294967295`
	TunnelInterfaceGroups pulumi.IntPtrOutput `pulumi:"tunnelInterfaceGroups"`
	// Variable name
	TunnelInterfaceGroupsVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceGroupsVariable"`
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval pulumi.IntPtrOutput `pulumi:"tunnelInterfaceHelloInterval"`
	// Variable name
	TunnelInterfaceHelloIntervalVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceHelloIntervalVariable"`
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance pulumi.IntPtrOutput `pulumi:"tunnelInterfaceHelloTolerance"`
	// Variable name
	TunnelInterfaceHelloToleranceVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceHelloToleranceVariable"`
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceLastResortCircuit"`
	// Variable name
	TunnelInterfaceLastResortCircuitVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceLastResortCircuitVariable"`
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceLowBandwidthLink"`
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceLowBandwidthLinkVariable"`
	// Set the maximum number of control connections for this TLOC - Range: `0`-`100`
	TunnelInterfaceMaxControlConnections pulumi.IntPtrOutput `pulumi:"tunnelInterfaceMaxControlConnections"`
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceMaxControlConnectionsVariable"`
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval pulumi.IntPtrOutput `pulumi:"tunnelInterfaceNatRefreshInterval"`
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceNatRefreshIntervalVariable"`
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop pulumi.BoolPtrOutput `pulumi:"tunnelInterfacePortHop"`
	// Variable name
	TunnelInterfacePortHopVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfacePortHopVariable"`
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceRestrict pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceRestrict"`
	// Variable name
	TunnelInterfaceRestrictVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceRestrictVariable"`
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss pulumi.IntPtrOutput `pulumi:"tunnelInterfaceTunnelTcpMss"`
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceTunnelTcpMssVariable"`
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceVbondAsStunServer"`
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceVbondAsStunServerVariable"`
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference pulumi.IntPtrOutput `pulumi:"tunnelInterfaceVmanageConnectionPreference"`
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceVmanageConnectionPreferenceVariable"`
	// Set tunnel QoS mode - Choices: `spoke`, `hub`
	TunnelQosMode pulumi.StringPtrOutput `pulumi:"tunnelQosMode"`
	// Variable name
	TunnelQosModeVariable pulumi.StringPtrOutput `pulumi:"tunnelQosModeVariable"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewTransportWanVpnInterfaceT1E1SerialFeature registers a new resource with the given unique name, arguments, and options.
func NewTransportWanVpnInterfaceT1E1SerialFeature(ctx *pulumi.Context,
	name string, args *TransportWanVpnInterfaceT1E1SerialFeatureArgs, opts ...pulumi.ResourceOption) (*TransportWanVpnInterfaceT1E1SerialFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransportWanVpnInterfaceT1E1SerialFeature
	err := ctx.RegisterResource("sdwan:index/transportWanVpnInterfaceT1E1SerialFeature:TransportWanVpnInterfaceT1E1SerialFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransportWanVpnInterfaceT1E1SerialFeature gets an existing TransportWanVpnInterfaceT1E1SerialFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransportWanVpnInterfaceT1E1SerialFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransportWanVpnInterfaceT1E1SerialFeatureState, opts ...pulumi.ResourceOption) (*TransportWanVpnInterfaceT1E1SerialFeature, error) {
	var resource TransportWanVpnInterfaceT1E1SerialFeature
	err := ctx.ReadResource("sdwan:index/transportWanVpnInterfaceT1E1SerialFeature:TransportWanVpnInterfaceT1E1SerialFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransportWanVpnInterfaceT1E1SerialFeature resources.
type transportWanVpnInterfaceT1E1SerialFeatureState struct {
	// Interface bandwidth capacity, in kbps - Range: `1`-`200000000`
	Bandwidth *int `pulumi:"bandwidth"`
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthDownstream *int `pulumi:"bandwidthDownstream"`
	// Variable name
	BandwidthDownstreamVariable *string `pulumi:"bandwidthDownstreamVariable"`
	// Variable name
	BandwidthVariable *string `pulumi:"bandwidthVariable"`
	// Set preference for interface Clock speed - Choices: `1200`, `2400`, `4800`, `9600`, `14400`, `19200`, `28800`, `32000`,
	// `38400`, `48000`, `56000`, `57600`, `64000`, `72000`, `115200`, `125000`, `148000`, `192000`, `250000`, `256000`,
	// `384000`, `500000`, `512000`, `768000`, `800000`, `1000000`, `2000000`, `4000000`, `5300000`, `8000000`
	ClockRate *string `pulumi:"clockRate"`
	// Variable name
	ClockRateVariable *string `pulumi:"clockRateVariable"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Configure Encapsulation for interface - Choices: `hdlc`, `ppp`, `frame-relay`
	Encapsulation *string `pulumi:"encapsulation"`
	// Variable name
	EncapsulationVariable *string `pulumi:"encapsulationVariable"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// Serial Interface Name - slot/subslot/port:channel-group for T1/E1, slot/subslot/port for NIM-1T
	InterfaceName *string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable *string `pulumi:"interfaceNameVariable"`
	// Set ip mtu - Range: `576`-`9216` - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	Ipv4Address   *string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable *string `pulumi:"ipv4AddressVariable"`
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask *string `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable *string `pulumi:"ipv4SubnetMaskVariable"`
	// Assign IPv6 address
	Ipv6Address *string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable *string `pulumi:"ipv6AddressVariable"`
	// Interface MTU <68...2000>, in bytes - Range: `576`-`9216` - Default value: `1500`
	Mtu *int `pulumi:"mtu"`
	// Variable name
	MtuVariable *string `pulumi:"mtuVariable"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Per-tunnel Qos - Default value: `false`
	PerTunnelQos *bool `pulumi:"perTunnelQos"`
	// Per-tunnel QoS Aggregator - Default value: `false`
	PerTunnelQosAggregator *bool `pulumi:"perTunnelQosAggregator"`
	// Variable name
	PerTunnelQosAggregatorVariable *string `pulumi:"perTunnelQosAggregatorVariable"`
	// Variable name
	PerTunnelQosVariable *string `pulumi:"perTunnelQosVariable"`
	// 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
	QosShapingRate *int `pulumi:"qosShapingRate"`
	// Variable name
	QosShapingRateVariable *string `pulumi:"qosShapingRateVariable"`
	// Administrative state - Default value: `true`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss *int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable *string `pulumi:"tcpMssVariable"`
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension *string `pulumi:"tlocExtension"`
	// Variable name
	TlocExtensionVariable *string `pulumi:"tlocExtensionVariable"`
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId *string `pulumi:"transportWanVpnFeatureId"`
	// Tunnel Interface - Default value: `false`
	TunnelInterface *bool `pulumi:"tunnelInterface"`
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll *bool `pulumi:"tunnelInterfaceAllowAll"`
	// Variable name
	TunnelInterfaceAllowAllVariable *string `pulumi:"tunnelInterfaceAllowAllVariable"`
	// Allow/Deny BFD - Default value: `false`
	TunnelInterfaceAllowBfd *bool `pulumi:"tunnelInterfaceAllowBfd"`
	// Variable name
	TunnelInterfaceAllowBfdVariable *string `pulumi:"tunnelInterfaceAllowBfdVariable"`
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp *bool `pulumi:"tunnelInterfaceAllowBgp"`
	// Variable name
	TunnelInterfaceAllowBgpVariable *string `pulumi:"tunnelInterfaceAllowBgpVariable"`
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp *bool `pulumi:"tunnelInterfaceAllowDhcp"`
	// Variable name
	TunnelInterfaceAllowDhcpVariable *string `pulumi:"tunnelInterfaceAllowDhcpVariable"`
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDns *bool `pulumi:"tunnelInterfaceAllowDns"`
	// Variable name
	TunnelInterfaceAllowDnsVariable *string `pulumi:"tunnelInterfaceAllowDnsVariable"`
	// Allow/Deny Https - Default value: `true`
	TunnelInterfaceAllowHttps *bool `pulumi:"tunnelInterfaceAllowHttps"`
	// Variable name
	TunnelInterfaceAllowHttpsVariable *string `pulumi:"tunnelInterfaceAllowHttpsVariable"`
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp *bool `pulumi:"tunnelInterfaceAllowIcmp"`
	// Variable name
	TunnelInterfaceAllowIcmpVariable *string `pulumi:"tunnelInterfaceAllowIcmpVariable"`
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf *bool `pulumi:"tunnelInterfaceAllowNetconf"`
	// Variable name
	TunnelInterfaceAllowNetconfVariable *string `pulumi:"tunnelInterfaceAllowNetconfVariable"`
	// Allow/Deny NTP - Default value: `false`
	TunnelInterfaceAllowNtp *bool `pulumi:"tunnelInterfaceAllowNtp"`
	// Variable name
	TunnelInterfaceAllowNtpVariable *string `pulumi:"tunnelInterfaceAllowNtpVariable"`
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf *bool `pulumi:"tunnelInterfaceAllowOspf"`
	// Variable name
	TunnelInterfaceAllowOspfVariable *string `pulumi:"tunnelInterfaceAllowOspfVariable"`
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp *bool `pulumi:"tunnelInterfaceAllowSnmp"`
	// Variable name
	TunnelInterfaceAllowSnmpVariable *string `pulumi:"tunnelInterfaceAllowSnmpVariable"`
	// Allow/Deny SSH - Default value: `false`
	TunnelInterfaceAllowSsh *bool `pulumi:"tunnelInterfaceAllowSsh"`
	// Variable name
	TunnelInterfaceAllowSshVariable *string `pulumi:"tunnelInterfaceAllowSshVariable"`
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun *bool `pulumi:"tunnelInterfaceAllowStun"`
	// Variable name
	TunnelInterfaceAllowStunVariable *string `pulumi:"tunnelInterfaceAllowStunVariable"`
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel *string `pulumi:"tunnelInterfaceBindLoopbackTunnel"`
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable *string `pulumi:"tunnelInterfaceBindLoopbackTunnelVariable"`
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder *bool `pulumi:"tunnelInterfaceBorder"`
	// Variable name
	TunnelInterfaceBorderVariable *string `pulumi:"tunnelInterfaceBorderVariable"`
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier *string `pulumi:"tunnelInterfaceCarrier"`
	// Variable name
	TunnelInterfaceCarrierVariable *string `pulumi:"tunnelInterfaceCarrierVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment *bool `pulumi:"tunnelInterfaceClearDontFragment"`
	// Variable name
	TunnelInterfaceClearDontFragmentVariable *string `pulumi:"tunnelInterfaceClearDontFragmentVariable"`
	// Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
	TunnelInterfaceClearNetworkBroadcast *bool `pulumi:"tunnelInterfaceClearNetworkBroadcast"`
	// Variable name
	TunnelInterfaceClearNetworkBroadcastVariable *string `pulumi:"tunnelInterfaceClearNetworkBroadcastVariable"`
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `default`
	TunnelInterfaceColor *string `pulumi:"tunnelInterfaceColor"`
	// Variable name
	TunnelInterfaceColorVariable *string `pulumi:"tunnelInterfaceColorVariable"`
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations []TransportWanVpnInterfaceT1E1SerialFeatureTunnelInterfaceEncapsulation `pulumi:"tunnelInterfaceEncapsulations"`
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable *string `pulumi:"tunnelInterfaceExcludeControllerGroupListVariable"`
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists []int `pulumi:"tunnelInterfaceExcludeControllerGroupLists"`
	// List of groups - Range: `1`-`4294967295`
	TunnelInterfaceGroups *int `pulumi:"tunnelInterfaceGroups"`
	// Variable name
	TunnelInterfaceGroupsVariable *string `pulumi:"tunnelInterfaceGroupsVariable"`
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval *int `pulumi:"tunnelInterfaceHelloInterval"`
	// Variable name
	TunnelInterfaceHelloIntervalVariable *string `pulumi:"tunnelInterfaceHelloIntervalVariable"`
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance *int `pulumi:"tunnelInterfaceHelloTolerance"`
	// Variable name
	TunnelInterfaceHelloToleranceVariable *string `pulumi:"tunnelInterfaceHelloToleranceVariable"`
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit *bool `pulumi:"tunnelInterfaceLastResortCircuit"`
	// Variable name
	TunnelInterfaceLastResortCircuitVariable *string `pulumi:"tunnelInterfaceLastResortCircuitVariable"`
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink *bool `pulumi:"tunnelInterfaceLowBandwidthLink"`
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable *string `pulumi:"tunnelInterfaceLowBandwidthLinkVariable"`
	// Set the maximum number of control connections for this TLOC - Range: `0`-`100`
	TunnelInterfaceMaxControlConnections *int `pulumi:"tunnelInterfaceMaxControlConnections"`
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable *string `pulumi:"tunnelInterfaceMaxControlConnectionsVariable"`
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval *int `pulumi:"tunnelInterfaceNatRefreshInterval"`
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable *string `pulumi:"tunnelInterfaceNatRefreshIntervalVariable"`
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop *bool `pulumi:"tunnelInterfacePortHop"`
	// Variable name
	TunnelInterfacePortHopVariable *string `pulumi:"tunnelInterfacePortHopVariable"`
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceRestrict *bool `pulumi:"tunnelInterfaceRestrict"`
	// Variable name
	TunnelInterfaceRestrictVariable *string `pulumi:"tunnelInterfaceRestrictVariable"`
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss *int `pulumi:"tunnelInterfaceTunnelTcpMss"`
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable *string `pulumi:"tunnelInterfaceTunnelTcpMssVariable"`
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer *bool `pulumi:"tunnelInterfaceVbondAsStunServer"`
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable *string `pulumi:"tunnelInterfaceVbondAsStunServerVariable"`
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference *int `pulumi:"tunnelInterfaceVmanageConnectionPreference"`
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable *string `pulumi:"tunnelInterfaceVmanageConnectionPreferenceVariable"`
	// Set tunnel QoS mode - Choices: `spoke`, `hub`
	TunnelQosMode *string `pulumi:"tunnelQosMode"`
	// Variable name
	TunnelQosModeVariable *string `pulumi:"tunnelQosModeVariable"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type TransportWanVpnInterfaceT1E1SerialFeatureState struct {
	// Interface bandwidth capacity, in kbps - Range: `1`-`200000000`
	Bandwidth pulumi.IntPtrInput
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthDownstream pulumi.IntPtrInput
	// Variable name
	BandwidthDownstreamVariable pulumi.StringPtrInput
	// Variable name
	BandwidthVariable pulumi.StringPtrInput
	// Set preference for interface Clock speed - Choices: `1200`, `2400`, `4800`, `9600`, `14400`, `19200`, `28800`, `32000`,
	// `38400`, `48000`, `56000`, `57600`, `64000`, `72000`, `115200`, `125000`, `148000`, `192000`, `250000`, `256000`,
	// `384000`, `500000`, `512000`, `768000`, `800000`, `1000000`, `2000000`, `4000000`, `5300000`, `8000000`
	ClockRate pulumi.StringPtrInput
	// Variable name
	ClockRateVariable pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Configure Encapsulation for interface - Choices: `hdlc`, `ppp`, `frame-relay`
	Encapsulation pulumi.StringPtrInput
	// Variable name
	EncapsulationVariable pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// Serial Interface Name - slot/subslot/port:channel-group for T1/E1, slot/subslot/port for NIM-1T
	InterfaceName pulumi.StringPtrInput
	// Variable name
	InterfaceNameVariable pulumi.StringPtrInput
	// Set ip mtu - Range: `576`-`9216` - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	Ipv4Address   pulumi.StringPtrInput
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrInput
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrInput
	// Variable name
	Ipv4SubnetMaskVariable pulumi.StringPtrInput
	// Assign IPv6 address
	Ipv6Address pulumi.StringPtrInput
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrInput
	// Interface MTU <68...2000>, in bytes - Range: `576`-`9216` - Default value: `1500`
	Mtu pulumi.IntPtrInput
	// Variable name
	MtuVariable pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Per-tunnel Qos - Default value: `false`
	PerTunnelQos pulumi.BoolPtrInput
	// Per-tunnel QoS Aggregator - Default value: `false`
	PerTunnelQosAggregator pulumi.BoolPtrInput
	// Variable name
	PerTunnelQosAggregatorVariable pulumi.StringPtrInput
	// Variable name
	PerTunnelQosVariable pulumi.StringPtrInput
	// 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
	QosShapingRate pulumi.IntPtrInput
	// Variable name
	QosShapingRateVariable pulumi.StringPtrInput
	// Administrative state - Default value: `true`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss pulumi.IntPtrInput
	// Variable name
	TcpMssVariable pulumi.StringPtrInput
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension pulumi.StringPtrInput
	// Variable name
	TlocExtensionVariable pulumi.StringPtrInput
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId pulumi.StringPtrInput
	// Tunnel Interface - Default value: `false`
	TunnelInterface pulumi.BoolPtrInput
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowAllVariable pulumi.StringPtrInput
	// Allow/Deny BFD - Default value: `false`
	TunnelInterfaceAllowBfd pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowBfdVariable pulumi.StringPtrInput
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowBgpVariable pulumi.StringPtrInput
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowDhcpVariable pulumi.StringPtrInput
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDns pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowDnsVariable pulumi.StringPtrInput
	// Allow/Deny Https - Default value: `true`
	TunnelInterfaceAllowHttps pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowHttpsVariable pulumi.StringPtrInput
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowIcmpVariable pulumi.StringPtrInput
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowNetconfVariable pulumi.StringPtrInput
	// Allow/Deny NTP - Default value: `false`
	TunnelInterfaceAllowNtp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowNtpVariable pulumi.StringPtrInput
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowOspfVariable pulumi.StringPtrInput
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowSnmpVariable pulumi.StringPtrInput
	// Allow/Deny SSH - Default value: `false`
	TunnelInterfaceAllowSsh pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowSshVariable pulumi.StringPtrInput
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowStunVariable pulumi.StringPtrInput
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable pulumi.StringPtrInput
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceBorderVariable pulumi.StringPtrInput
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceCarrierVariable pulumi.StringPtrInput
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceClearDontFragmentVariable pulumi.StringPtrInput
	// Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
	TunnelInterfaceClearNetworkBroadcast pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceClearNetworkBroadcastVariable pulumi.StringPtrInput
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `default`
	TunnelInterfaceColor pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceColorVariable pulumi.StringPtrInput
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations TransportWanVpnInterfaceT1E1SerialFeatureTunnelInterfaceEncapsulationArrayInput
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable pulumi.StringPtrInput
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists pulumi.IntArrayInput
	// List of groups - Range: `1`-`4294967295`
	TunnelInterfaceGroups pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceGroupsVariable pulumi.StringPtrInput
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceHelloIntervalVariable pulumi.StringPtrInput
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceHelloToleranceVariable pulumi.StringPtrInput
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceLastResortCircuitVariable pulumi.StringPtrInput
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable pulumi.StringPtrInput
	// Set the maximum number of control connections for this TLOC - Range: `0`-`100`
	TunnelInterfaceMaxControlConnections pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable pulumi.StringPtrInput
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable pulumi.StringPtrInput
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop pulumi.BoolPtrInput
	// Variable name
	TunnelInterfacePortHopVariable pulumi.StringPtrInput
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceRestrict pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceRestrictVariable pulumi.StringPtrInput
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable pulumi.StringPtrInput
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable pulumi.StringPtrInput
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable pulumi.StringPtrInput
	// Set tunnel QoS mode - Choices: `spoke`, `hub`
	TunnelQosMode pulumi.StringPtrInput
	// Variable name
	TunnelQosModeVariable pulumi.StringPtrInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (TransportWanVpnInterfaceT1E1SerialFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*transportWanVpnInterfaceT1E1SerialFeatureState)(nil)).Elem()
}

type transportWanVpnInterfaceT1E1SerialFeatureArgs struct {
	// Interface bandwidth capacity, in kbps - Range: `1`-`200000000`
	Bandwidth *int `pulumi:"bandwidth"`
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthDownstream *int `pulumi:"bandwidthDownstream"`
	// Variable name
	BandwidthDownstreamVariable *string `pulumi:"bandwidthDownstreamVariable"`
	// Variable name
	BandwidthVariable *string `pulumi:"bandwidthVariable"`
	// Set preference for interface Clock speed - Choices: `1200`, `2400`, `4800`, `9600`, `14400`, `19200`, `28800`, `32000`,
	// `38400`, `48000`, `56000`, `57600`, `64000`, `72000`, `115200`, `125000`, `148000`, `192000`, `250000`, `256000`,
	// `384000`, `500000`, `512000`, `768000`, `800000`, `1000000`, `2000000`, `4000000`, `5300000`, `8000000`
	ClockRate *string `pulumi:"clockRate"`
	// Variable name
	ClockRateVariable *string `pulumi:"clockRateVariable"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Configure Encapsulation for interface - Choices: `hdlc`, `ppp`, `frame-relay`
	Encapsulation *string `pulumi:"encapsulation"`
	// Variable name
	EncapsulationVariable *string `pulumi:"encapsulationVariable"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// Serial Interface Name - slot/subslot/port:channel-group for T1/E1, slot/subslot/port for NIM-1T
	InterfaceName *string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable *string `pulumi:"interfaceNameVariable"`
	// Set ip mtu - Range: `576`-`9216` - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	Ipv4Address   *string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable *string `pulumi:"ipv4AddressVariable"`
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask *string `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable *string `pulumi:"ipv4SubnetMaskVariable"`
	// Assign IPv6 address
	Ipv6Address *string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable *string `pulumi:"ipv6AddressVariable"`
	// Interface MTU <68...2000>, in bytes - Range: `576`-`9216` - Default value: `1500`
	Mtu *int `pulumi:"mtu"`
	// Variable name
	MtuVariable *string `pulumi:"mtuVariable"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Per-tunnel Qos - Default value: `false`
	PerTunnelQos *bool `pulumi:"perTunnelQos"`
	// Per-tunnel QoS Aggregator - Default value: `false`
	PerTunnelQosAggregator *bool `pulumi:"perTunnelQosAggregator"`
	// Variable name
	PerTunnelQosAggregatorVariable *string `pulumi:"perTunnelQosAggregatorVariable"`
	// Variable name
	PerTunnelQosVariable *string `pulumi:"perTunnelQosVariable"`
	// 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
	QosShapingRate *int `pulumi:"qosShapingRate"`
	// Variable name
	QosShapingRateVariable *string `pulumi:"qosShapingRateVariable"`
	// Administrative state - Default value: `true`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss *int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable *string `pulumi:"tcpMssVariable"`
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension *string `pulumi:"tlocExtension"`
	// Variable name
	TlocExtensionVariable *string `pulumi:"tlocExtensionVariable"`
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId *string `pulumi:"transportWanVpnFeatureId"`
	// Tunnel Interface - Default value: `false`
	TunnelInterface *bool `pulumi:"tunnelInterface"`
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll *bool `pulumi:"tunnelInterfaceAllowAll"`
	// Variable name
	TunnelInterfaceAllowAllVariable *string `pulumi:"tunnelInterfaceAllowAllVariable"`
	// Allow/Deny BFD - Default value: `false`
	TunnelInterfaceAllowBfd *bool `pulumi:"tunnelInterfaceAllowBfd"`
	// Variable name
	TunnelInterfaceAllowBfdVariable *string `pulumi:"tunnelInterfaceAllowBfdVariable"`
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp *bool `pulumi:"tunnelInterfaceAllowBgp"`
	// Variable name
	TunnelInterfaceAllowBgpVariable *string `pulumi:"tunnelInterfaceAllowBgpVariable"`
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp *bool `pulumi:"tunnelInterfaceAllowDhcp"`
	// Variable name
	TunnelInterfaceAllowDhcpVariable *string `pulumi:"tunnelInterfaceAllowDhcpVariable"`
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDns *bool `pulumi:"tunnelInterfaceAllowDns"`
	// Variable name
	TunnelInterfaceAllowDnsVariable *string `pulumi:"tunnelInterfaceAllowDnsVariable"`
	// Allow/Deny Https - Default value: `true`
	TunnelInterfaceAllowHttps *bool `pulumi:"tunnelInterfaceAllowHttps"`
	// Variable name
	TunnelInterfaceAllowHttpsVariable *string `pulumi:"tunnelInterfaceAllowHttpsVariable"`
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp *bool `pulumi:"tunnelInterfaceAllowIcmp"`
	// Variable name
	TunnelInterfaceAllowIcmpVariable *string `pulumi:"tunnelInterfaceAllowIcmpVariable"`
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf *bool `pulumi:"tunnelInterfaceAllowNetconf"`
	// Variable name
	TunnelInterfaceAllowNetconfVariable *string `pulumi:"tunnelInterfaceAllowNetconfVariable"`
	// Allow/Deny NTP - Default value: `false`
	TunnelInterfaceAllowNtp *bool `pulumi:"tunnelInterfaceAllowNtp"`
	// Variable name
	TunnelInterfaceAllowNtpVariable *string `pulumi:"tunnelInterfaceAllowNtpVariable"`
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf *bool `pulumi:"tunnelInterfaceAllowOspf"`
	// Variable name
	TunnelInterfaceAllowOspfVariable *string `pulumi:"tunnelInterfaceAllowOspfVariable"`
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp *bool `pulumi:"tunnelInterfaceAllowSnmp"`
	// Variable name
	TunnelInterfaceAllowSnmpVariable *string `pulumi:"tunnelInterfaceAllowSnmpVariable"`
	// Allow/Deny SSH - Default value: `false`
	TunnelInterfaceAllowSsh *bool `pulumi:"tunnelInterfaceAllowSsh"`
	// Variable name
	TunnelInterfaceAllowSshVariable *string `pulumi:"tunnelInterfaceAllowSshVariable"`
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun *bool `pulumi:"tunnelInterfaceAllowStun"`
	// Variable name
	TunnelInterfaceAllowStunVariable *string `pulumi:"tunnelInterfaceAllowStunVariable"`
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel *string `pulumi:"tunnelInterfaceBindLoopbackTunnel"`
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable *string `pulumi:"tunnelInterfaceBindLoopbackTunnelVariable"`
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder *bool `pulumi:"tunnelInterfaceBorder"`
	// Variable name
	TunnelInterfaceBorderVariable *string `pulumi:"tunnelInterfaceBorderVariable"`
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier *string `pulumi:"tunnelInterfaceCarrier"`
	// Variable name
	TunnelInterfaceCarrierVariable *string `pulumi:"tunnelInterfaceCarrierVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment *bool `pulumi:"tunnelInterfaceClearDontFragment"`
	// Variable name
	TunnelInterfaceClearDontFragmentVariable *string `pulumi:"tunnelInterfaceClearDontFragmentVariable"`
	// Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
	TunnelInterfaceClearNetworkBroadcast *bool `pulumi:"tunnelInterfaceClearNetworkBroadcast"`
	// Variable name
	TunnelInterfaceClearNetworkBroadcastVariable *string `pulumi:"tunnelInterfaceClearNetworkBroadcastVariable"`
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `default`
	TunnelInterfaceColor *string `pulumi:"tunnelInterfaceColor"`
	// Variable name
	TunnelInterfaceColorVariable *string `pulumi:"tunnelInterfaceColorVariable"`
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations []TransportWanVpnInterfaceT1E1SerialFeatureTunnelInterfaceEncapsulation `pulumi:"tunnelInterfaceEncapsulations"`
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable *string `pulumi:"tunnelInterfaceExcludeControllerGroupListVariable"`
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists []int `pulumi:"tunnelInterfaceExcludeControllerGroupLists"`
	// List of groups - Range: `1`-`4294967295`
	TunnelInterfaceGroups *int `pulumi:"tunnelInterfaceGroups"`
	// Variable name
	TunnelInterfaceGroupsVariable *string `pulumi:"tunnelInterfaceGroupsVariable"`
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval *int `pulumi:"tunnelInterfaceHelloInterval"`
	// Variable name
	TunnelInterfaceHelloIntervalVariable *string `pulumi:"tunnelInterfaceHelloIntervalVariable"`
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance *int `pulumi:"tunnelInterfaceHelloTolerance"`
	// Variable name
	TunnelInterfaceHelloToleranceVariable *string `pulumi:"tunnelInterfaceHelloToleranceVariable"`
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit *bool `pulumi:"tunnelInterfaceLastResortCircuit"`
	// Variable name
	TunnelInterfaceLastResortCircuitVariable *string `pulumi:"tunnelInterfaceLastResortCircuitVariable"`
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink *bool `pulumi:"tunnelInterfaceLowBandwidthLink"`
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable *string `pulumi:"tunnelInterfaceLowBandwidthLinkVariable"`
	// Set the maximum number of control connections for this TLOC - Range: `0`-`100`
	TunnelInterfaceMaxControlConnections *int `pulumi:"tunnelInterfaceMaxControlConnections"`
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable *string `pulumi:"tunnelInterfaceMaxControlConnectionsVariable"`
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval *int `pulumi:"tunnelInterfaceNatRefreshInterval"`
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable *string `pulumi:"tunnelInterfaceNatRefreshIntervalVariable"`
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop *bool `pulumi:"tunnelInterfacePortHop"`
	// Variable name
	TunnelInterfacePortHopVariable *string `pulumi:"tunnelInterfacePortHopVariable"`
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceRestrict *bool `pulumi:"tunnelInterfaceRestrict"`
	// Variable name
	TunnelInterfaceRestrictVariable *string `pulumi:"tunnelInterfaceRestrictVariable"`
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss *int `pulumi:"tunnelInterfaceTunnelTcpMss"`
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable *string `pulumi:"tunnelInterfaceTunnelTcpMssVariable"`
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer *bool `pulumi:"tunnelInterfaceVbondAsStunServer"`
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable *string `pulumi:"tunnelInterfaceVbondAsStunServerVariable"`
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference *int `pulumi:"tunnelInterfaceVmanageConnectionPreference"`
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable *string `pulumi:"tunnelInterfaceVmanageConnectionPreferenceVariable"`
	// Set tunnel QoS mode - Choices: `spoke`, `hub`
	TunnelQosMode *string `pulumi:"tunnelQosMode"`
	// Variable name
	TunnelQosModeVariable *string `pulumi:"tunnelQosModeVariable"`
}

// The set of arguments for constructing a TransportWanVpnInterfaceT1E1SerialFeature resource.
type TransportWanVpnInterfaceT1E1SerialFeatureArgs struct {
	// Interface bandwidth capacity, in kbps - Range: `1`-`200000000`
	Bandwidth pulumi.IntPtrInput
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthDownstream pulumi.IntPtrInput
	// Variable name
	BandwidthDownstreamVariable pulumi.StringPtrInput
	// Variable name
	BandwidthVariable pulumi.StringPtrInput
	// Set preference for interface Clock speed - Choices: `1200`, `2400`, `4800`, `9600`, `14400`, `19200`, `28800`, `32000`,
	// `38400`, `48000`, `56000`, `57600`, `64000`, `72000`, `115200`, `125000`, `148000`, `192000`, `250000`, `256000`,
	// `384000`, `500000`, `512000`, `768000`, `800000`, `1000000`, `2000000`, `4000000`, `5300000`, `8000000`
	ClockRate pulumi.StringPtrInput
	// Variable name
	ClockRateVariable pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Configure Encapsulation for interface - Choices: `hdlc`, `ppp`, `frame-relay`
	Encapsulation pulumi.StringPtrInput
	// Variable name
	EncapsulationVariable pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// Serial Interface Name - slot/subslot/port:channel-group for T1/E1, slot/subslot/port for NIM-1T
	InterfaceName pulumi.StringPtrInput
	// Variable name
	InterfaceNameVariable pulumi.StringPtrInput
	// Set ip mtu - Range: `576`-`9216` - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	Ipv4Address   pulumi.StringPtrInput
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrInput
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrInput
	// Variable name
	Ipv4SubnetMaskVariable pulumi.StringPtrInput
	// Assign IPv6 address
	Ipv6Address pulumi.StringPtrInput
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrInput
	// Interface MTU <68...2000>, in bytes - Range: `576`-`9216` - Default value: `1500`
	Mtu pulumi.IntPtrInput
	// Variable name
	MtuVariable pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Per-tunnel Qos - Default value: `false`
	PerTunnelQos pulumi.BoolPtrInput
	// Per-tunnel QoS Aggregator - Default value: `false`
	PerTunnelQosAggregator pulumi.BoolPtrInput
	// Variable name
	PerTunnelQosAggregatorVariable pulumi.StringPtrInput
	// Variable name
	PerTunnelQosVariable pulumi.StringPtrInput
	// 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
	QosShapingRate pulumi.IntPtrInput
	// Variable name
	QosShapingRateVariable pulumi.StringPtrInput
	// Administrative state - Default value: `true`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss pulumi.IntPtrInput
	// Variable name
	TcpMssVariable pulumi.StringPtrInput
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension pulumi.StringPtrInput
	// Variable name
	TlocExtensionVariable pulumi.StringPtrInput
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId pulumi.StringPtrInput
	// Tunnel Interface - Default value: `false`
	TunnelInterface pulumi.BoolPtrInput
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowAllVariable pulumi.StringPtrInput
	// Allow/Deny BFD - Default value: `false`
	TunnelInterfaceAllowBfd pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowBfdVariable pulumi.StringPtrInput
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowBgpVariable pulumi.StringPtrInput
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowDhcpVariable pulumi.StringPtrInput
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDns pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowDnsVariable pulumi.StringPtrInput
	// Allow/Deny Https - Default value: `true`
	TunnelInterfaceAllowHttps pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowHttpsVariable pulumi.StringPtrInput
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowIcmpVariable pulumi.StringPtrInput
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowNetconfVariable pulumi.StringPtrInput
	// Allow/Deny NTP - Default value: `false`
	TunnelInterfaceAllowNtp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowNtpVariable pulumi.StringPtrInput
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowOspfVariable pulumi.StringPtrInput
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowSnmpVariable pulumi.StringPtrInput
	// Allow/Deny SSH - Default value: `false`
	TunnelInterfaceAllowSsh pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowSshVariable pulumi.StringPtrInput
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowStunVariable pulumi.StringPtrInput
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable pulumi.StringPtrInput
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceBorderVariable pulumi.StringPtrInput
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceCarrierVariable pulumi.StringPtrInput
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceClearDontFragmentVariable pulumi.StringPtrInput
	// Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
	TunnelInterfaceClearNetworkBroadcast pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceClearNetworkBroadcastVariable pulumi.StringPtrInput
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `default`
	TunnelInterfaceColor pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceColorVariable pulumi.StringPtrInput
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations TransportWanVpnInterfaceT1E1SerialFeatureTunnelInterfaceEncapsulationArrayInput
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable pulumi.StringPtrInput
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists pulumi.IntArrayInput
	// List of groups - Range: `1`-`4294967295`
	TunnelInterfaceGroups pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceGroupsVariable pulumi.StringPtrInput
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceHelloIntervalVariable pulumi.StringPtrInput
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceHelloToleranceVariable pulumi.StringPtrInput
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceLastResortCircuitVariable pulumi.StringPtrInput
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable pulumi.StringPtrInput
	// Set the maximum number of control connections for this TLOC - Range: `0`-`100`
	TunnelInterfaceMaxControlConnections pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable pulumi.StringPtrInput
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable pulumi.StringPtrInput
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop pulumi.BoolPtrInput
	// Variable name
	TunnelInterfacePortHopVariable pulumi.StringPtrInput
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceRestrict pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceRestrictVariable pulumi.StringPtrInput
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable pulumi.StringPtrInput
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable pulumi.StringPtrInput
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable pulumi.StringPtrInput
	// Set tunnel QoS mode - Choices: `spoke`, `hub`
	TunnelQosMode pulumi.StringPtrInput
	// Variable name
	TunnelQosModeVariable pulumi.StringPtrInput
}

func (TransportWanVpnInterfaceT1E1SerialFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transportWanVpnInterfaceT1E1SerialFeatureArgs)(nil)).Elem()
}

type TransportWanVpnInterfaceT1E1SerialFeatureInput interface {
	pulumi.Input

	ToTransportWanVpnInterfaceT1E1SerialFeatureOutput() TransportWanVpnInterfaceT1E1SerialFeatureOutput
	ToTransportWanVpnInterfaceT1E1SerialFeatureOutputWithContext(ctx context.Context) TransportWanVpnInterfaceT1E1SerialFeatureOutput
}

func (*TransportWanVpnInterfaceT1E1SerialFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportWanVpnInterfaceT1E1SerialFeature)(nil)).Elem()
}

func (i *TransportWanVpnInterfaceT1E1SerialFeature) ToTransportWanVpnInterfaceT1E1SerialFeatureOutput() TransportWanVpnInterfaceT1E1SerialFeatureOutput {
	return i.ToTransportWanVpnInterfaceT1E1SerialFeatureOutputWithContext(context.Background())
}

func (i *TransportWanVpnInterfaceT1E1SerialFeature) ToTransportWanVpnInterfaceT1E1SerialFeatureOutputWithContext(ctx context.Context) TransportWanVpnInterfaceT1E1SerialFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnInterfaceT1E1SerialFeatureOutput)
}

// TransportWanVpnInterfaceT1E1SerialFeatureArrayInput is an input type that accepts TransportWanVpnInterfaceT1E1SerialFeatureArray and TransportWanVpnInterfaceT1E1SerialFeatureArrayOutput values.
// You can construct a concrete instance of `TransportWanVpnInterfaceT1E1SerialFeatureArrayInput` via:
//
//	TransportWanVpnInterfaceT1E1SerialFeatureArray{ TransportWanVpnInterfaceT1E1SerialFeatureArgs{...} }
type TransportWanVpnInterfaceT1E1SerialFeatureArrayInput interface {
	pulumi.Input

	ToTransportWanVpnInterfaceT1E1SerialFeatureArrayOutput() TransportWanVpnInterfaceT1E1SerialFeatureArrayOutput
	ToTransportWanVpnInterfaceT1E1SerialFeatureArrayOutputWithContext(context.Context) TransportWanVpnInterfaceT1E1SerialFeatureArrayOutput
}

type TransportWanVpnInterfaceT1E1SerialFeatureArray []TransportWanVpnInterfaceT1E1SerialFeatureInput

func (TransportWanVpnInterfaceT1E1SerialFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportWanVpnInterfaceT1E1SerialFeature)(nil)).Elem()
}

func (i TransportWanVpnInterfaceT1E1SerialFeatureArray) ToTransportWanVpnInterfaceT1E1SerialFeatureArrayOutput() TransportWanVpnInterfaceT1E1SerialFeatureArrayOutput {
	return i.ToTransportWanVpnInterfaceT1E1SerialFeatureArrayOutputWithContext(context.Background())
}

func (i TransportWanVpnInterfaceT1E1SerialFeatureArray) ToTransportWanVpnInterfaceT1E1SerialFeatureArrayOutputWithContext(ctx context.Context) TransportWanVpnInterfaceT1E1SerialFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnInterfaceT1E1SerialFeatureArrayOutput)
}

// TransportWanVpnInterfaceT1E1SerialFeatureMapInput is an input type that accepts TransportWanVpnInterfaceT1E1SerialFeatureMap and TransportWanVpnInterfaceT1E1SerialFeatureMapOutput values.
// You can construct a concrete instance of `TransportWanVpnInterfaceT1E1SerialFeatureMapInput` via:
//
//	TransportWanVpnInterfaceT1E1SerialFeatureMap{ "key": TransportWanVpnInterfaceT1E1SerialFeatureArgs{...} }
type TransportWanVpnInterfaceT1E1SerialFeatureMapInput interface {
	pulumi.Input

	ToTransportWanVpnInterfaceT1E1SerialFeatureMapOutput() TransportWanVpnInterfaceT1E1SerialFeatureMapOutput
	ToTransportWanVpnInterfaceT1E1SerialFeatureMapOutputWithContext(context.Context) TransportWanVpnInterfaceT1E1SerialFeatureMapOutput
}

type TransportWanVpnInterfaceT1E1SerialFeatureMap map[string]TransportWanVpnInterfaceT1E1SerialFeatureInput

func (TransportWanVpnInterfaceT1E1SerialFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportWanVpnInterfaceT1E1SerialFeature)(nil)).Elem()
}

func (i TransportWanVpnInterfaceT1E1SerialFeatureMap) ToTransportWanVpnInterfaceT1E1SerialFeatureMapOutput() TransportWanVpnInterfaceT1E1SerialFeatureMapOutput {
	return i.ToTransportWanVpnInterfaceT1E1SerialFeatureMapOutputWithContext(context.Background())
}

func (i TransportWanVpnInterfaceT1E1SerialFeatureMap) ToTransportWanVpnInterfaceT1E1SerialFeatureMapOutputWithContext(ctx context.Context) TransportWanVpnInterfaceT1E1SerialFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnInterfaceT1E1SerialFeatureMapOutput)
}

type TransportWanVpnInterfaceT1E1SerialFeatureOutput struct{ *pulumi.OutputState }

func (TransportWanVpnInterfaceT1E1SerialFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportWanVpnInterfaceT1E1SerialFeature)(nil)).Elem()
}

func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) ToTransportWanVpnInterfaceT1E1SerialFeatureOutput() TransportWanVpnInterfaceT1E1SerialFeatureOutput {
	return o
}

func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) ToTransportWanVpnInterfaceT1E1SerialFeatureOutputWithContext(ctx context.Context) TransportWanVpnInterfaceT1E1SerialFeatureOutput {
	return o
}

// Interface bandwidth capacity, in kbps - Range: `1`-`200000000`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.IntPtrOutput { return v.Bandwidth }).(pulumi.IntPtrOutput)
}

// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) BandwidthDownstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.IntPtrOutput { return v.BandwidthDownstream }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) BandwidthDownstreamVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.BandwidthDownstreamVariable
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) BandwidthVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput { return v.BandwidthVariable }).(pulumi.StringPtrOutput)
}

// Set preference for interface Clock speed - Choices: `1200`, `2400`, `4800`, `9600`, `14400`, `19200`, `28800`, `32000`,
// `38400`, `48000`, `56000`, `57600`, `64000`, `72000`, `115200`, `125000`, `148000`, `192000`, `250000`, `256000`,
// `384000`, `500000`, `512000`, `768000`, `800000`, `1000000`, `2000000`, `4000000`, `5300000`, `8000000`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) ClockRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput { return v.ClockRate }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) ClockRateVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput { return v.ClockRateVariable }).(pulumi.StringPtrOutput)
}

// The description of the Feature
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Configure Encapsulation for interface - Choices: `hdlc`, `ppp`, `frame-relay`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) Encapsulation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput { return v.Encapsulation }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) EncapsulationVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.EncapsulationVariable
	}).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// Serial Interface Name - slot/subslot/port:channel-group for T1/E1, slot/subslot/port for NIM-1T
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) InterfaceNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.InterfaceNameVariable
	}).(pulumi.StringPtrOutput)
}

// Set ip mtu - Range: `576`-`9216` - Default value: `1500`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) IpMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.IntPtrOutput { return v.IpMtu }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) IpMtuVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput { return v.IpMtuVariable }).(pulumi.StringPtrOutput)
}

func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) Ipv4AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.Ipv4AddressVariable
	}).(pulumi.StringPtrOutput)
}

//   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
//     `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
//     `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
//     `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
//     `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) Ipv4SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput { return v.Ipv4SubnetMask }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) Ipv4SubnetMaskVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.Ipv4SubnetMaskVariable
	}).(pulumi.StringPtrOutput)
}

// Assign IPv6 address
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) Ipv6AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.Ipv6AddressVariable
	}).(pulumi.StringPtrOutput)
}

// Interface MTU <68...2000>, in bytes - Range: `576`-`9216` - Default value: `1500`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.IntPtrOutput { return v.Mtu }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) MtuVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput { return v.MtuVariable }).(pulumi.StringPtrOutput)
}

// The name of the Feature
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Per-tunnel Qos - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) PerTunnelQos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput { return v.PerTunnelQos }).(pulumi.BoolPtrOutput)
}

// Per-tunnel QoS Aggregator - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) PerTunnelQosAggregator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.PerTunnelQosAggregator
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) PerTunnelQosAggregatorVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.PerTunnelQosAggregatorVariable
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) PerTunnelQosVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.PerTunnelQosVariable
	}).(pulumi.StringPtrOutput)
}

// 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) QosShapingRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.IntPtrOutput { return v.QosShapingRate }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) QosShapingRateVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.QosShapingRateVariable
	}).(pulumi.StringPtrOutput)
}

// Administrative state - Default value: `true`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) Shutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput { return v.Shutdown }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) ShutdownVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput { return v.ShutdownVariable }).(pulumi.StringPtrOutput)
}

// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TcpMss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.IntPtrOutput { return v.TcpMss }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TcpMssVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput { return v.TcpMssVariable }).(pulumi.StringPtrOutput)
}

// Extends a local TLOC to a remote node only for vpn 0
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TlocExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput { return v.TlocExtension }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TlocExtensionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TlocExtensionVariable
	}).(pulumi.StringPtrOutput)
}

// Transport WAN VPN Feature ID
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TransportWanVpnFeatureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TransportWanVpnFeatureId
	}).(pulumi.StringPtrOutput)
}

// Tunnel Interface - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterface() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput { return v.TunnelInterface }).(pulumi.BoolPtrOutput)
}

// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowAll
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowAllVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowAllVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny BFD - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowBfd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowBfd
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowBfdVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowBfdVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/deny BGP - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowBgp
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowBgpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowBgpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny DHCP - Default value: `true`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowDhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowDhcp
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowDhcpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowDhcpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny DNS - Default value: `true`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowDns() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowDns
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowDnsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowDnsVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny Https - Default value: `true`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowHttps
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowHttpsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowHttpsVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny ICMP - Default value: `true`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowIcmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowIcmp
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowIcmpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowIcmpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny NETCONF - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowNetconf() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowNetconf
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowNetconfVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowNetconfVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny NTP - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowNtp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowNtp
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowNtpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowNtpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny OSPF - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowOspf() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowOspf
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowOspfVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowOspfVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny SNMP - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowSnmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowSnmp
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowSnmpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowSnmpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny SSH - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowSsh() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowSsh
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowSshVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowSshVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny STUN - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowStun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowStun
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceAllowStunVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowStunVariable
	}).(pulumi.StringPtrOutput)
}

// Bind loopback tunnel interface to a physical interface
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceBindLoopbackTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceBindLoopbackTunnel
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceBindLoopbackTunnelVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceBindLoopbackTunnelVariable
	}).(pulumi.StringPtrOutput)
}

// Set TLOC as border TLOC - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceBorder() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceBorder
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceBorderVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceBorderVariable
	}).(pulumi.StringPtrOutput)
}

// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
// `carrier7`, `carrier8` - Default value: `default`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceCarrier
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceCarrierVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceCarrierVariable
	}).(pulumi.StringPtrOutput)
}

// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceClearDontFragment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceClearDontFragment
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceClearDontFragmentVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceClearDontFragmentVariable
	}).(pulumi.StringPtrOutput)
}

// Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceClearNetworkBroadcast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceClearNetworkBroadcast
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceClearNetworkBroadcastVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceClearNetworkBroadcastVariable
	}).(pulumi.StringPtrOutput)
}

// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
// `private4`, `private5`, `private6` - Default value: `default`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceColor
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceColorVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceColorVariable
	}).(pulumi.StringPtrOutput)
}

// Encapsulation for TLOC
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceEncapsulations() TransportWanVpnInterfaceT1E1SerialFeatureTunnelInterfaceEncapsulationArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) TransportWanVpnInterfaceT1E1SerialFeatureTunnelInterfaceEncapsulationArrayOutput {
		return v.TunnelInterfaceEncapsulations
	}).(TransportWanVpnInterfaceT1E1SerialFeatureTunnelInterfaceEncapsulationArrayOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceExcludeControllerGroupListVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceExcludeControllerGroupListVariable
	}).(pulumi.StringPtrOutput)
}

// Exclude the following controller groups defined in this list
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceExcludeControllerGroupLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.IntArrayOutput {
		return v.TunnelInterfaceExcludeControllerGroupLists
	}).(pulumi.IntArrayOutput)
}

// List of groups - Range: `1`-`4294967295`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceGroups() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.IntPtrOutput { return v.TunnelInterfaceGroups }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceGroupsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceGroupsVariable
	}).(pulumi.StringPtrOutput)
}

// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceHelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.IntPtrOutput {
		return v.TunnelInterfaceHelloInterval
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceHelloIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceHelloIntervalVariable
	}).(pulumi.StringPtrOutput)
}

// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceHelloTolerance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.IntPtrOutput {
		return v.TunnelInterfaceHelloTolerance
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceHelloToleranceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceHelloToleranceVariable
	}).(pulumi.StringPtrOutput)
}

// Set TLOC as last resort - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceLastResortCircuit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceLastResortCircuit
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceLastResortCircuitVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceLastResortCircuitVariable
	}).(pulumi.StringPtrOutput)
}

// Set the interface as a low-bandwidth circuit - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceLowBandwidthLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceLowBandwidthLink
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceLowBandwidthLinkVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceLowBandwidthLinkVariable
	}).(pulumi.StringPtrOutput)
}

// Set the maximum number of control connections for this TLOC - Range: `0`-`100`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceMaxControlConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.IntPtrOutput {
		return v.TunnelInterfaceMaxControlConnections
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceMaxControlConnectionsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceMaxControlConnectionsVariable
	}).(pulumi.StringPtrOutput)
}

// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceNatRefreshInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.IntPtrOutput {
		return v.TunnelInterfaceNatRefreshInterval
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceNatRefreshIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceNatRefreshIntervalVariable
	}).(pulumi.StringPtrOutput)
}

// Disallow port hopping on the tunnel interface - Default value: `true`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfacePortHop() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfacePortHop
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfacePortHopVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfacePortHopVariable
	}).(pulumi.StringPtrOutput)
}

// Restrict this TLOC behavior - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceRestrict() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceRestrict
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceRestrictVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceRestrictVariable
	}).(pulumi.StringPtrOutput)
}

// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceTunnelTcpMss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.IntPtrOutput {
		return v.TunnelInterfaceTunnelTcpMss
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceTunnelTcpMssVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceTunnelTcpMssVariable
	}).(pulumi.StringPtrOutput)
}

// Put this wan interface in STUN mode only - Default value: `false`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceVbondAsStunServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceVbondAsStunServer
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceVbondAsStunServerVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceVbondAsStunServerVariable
	}).(pulumi.StringPtrOutput)
}

// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceVmanageConnectionPreference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.IntPtrOutput {
		return v.TunnelInterfaceVmanageConnectionPreference
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelInterfaceVmanageConnectionPreferenceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelInterfaceVmanageConnectionPreferenceVariable
	}).(pulumi.StringPtrOutput)
}

// Set tunnel QoS mode - Choices: `spoke`, `hub`
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelQosMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput { return v.TunnelQosMode }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) TunnelQosModeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.StringPtrOutput {
		return v.TunnelQosModeVariable
	}).(pulumi.StringPtrOutput)
}

// The version of the Feature
func (o TransportWanVpnInterfaceT1E1SerialFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceT1E1SerialFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type TransportWanVpnInterfaceT1E1SerialFeatureArrayOutput struct{ *pulumi.OutputState }

func (TransportWanVpnInterfaceT1E1SerialFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportWanVpnInterfaceT1E1SerialFeature)(nil)).Elem()
}

func (o TransportWanVpnInterfaceT1E1SerialFeatureArrayOutput) ToTransportWanVpnInterfaceT1E1SerialFeatureArrayOutput() TransportWanVpnInterfaceT1E1SerialFeatureArrayOutput {
	return o
}

func (o TransportWanVpnInterfaceT1E1SerialFeatureArrayOutput) ToTransportWanVpnInterfaceT1E1SerialFeatureArrayOutputWithContext(ctx context.Context) TransportWanVpnInterfaceT1E1SerialFeatureArrayOutput {
	return o
}

func (o TransportWanVpnInterfaceT1E1SerialFeatureArrayOutput) Index(i pulumi.IntInput) TransportWanVpnInterfaceT1E1SerialFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransportWanVpnInterfaceT1E1SerialFeature {
		return vs[0].([]*TransportWanVpnInterfaceT1E1SerialFeature)[vs[1].(int)]
	}).(TransportWanVpnInterfaceT1E1SerialFeatureOutput)
}

type TransportWanVpnInterfaceT1E1SerialFeatureMapOutput struct{ *pulumi.OutputState }

func (TransportWanVpnInterfaceT1E1SerialFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportWanVpnInterfaceT1E1SerialFeature)(nil)).Elem()
}

func (o TransportWanVpnInterfaceT1E1SerialFeatureMapOutput) ToTransportWanVpnInterfaceT1E1SerialFeatureMapOutput() TransportWanVpnInterfaceT1E1SerialFeatureMapOutput {
	return o
}

func (o TransportWanVpnInterfaceT1E1SerialFeatureMapOutput) ToTransportWanVpnInterfaceT1E1SerialFeatureMapOutputWithContext(ctx context.Context) TransportWanVpnInterfaceT1E1SerialFeatureMapOutput {
	return o
}

func (o TransportWanVpnInterfaceT1E1SerialFeatureMapOutput) MapIndex(k pulumi.StringInput) TransportWanVpnInterfaceT1E1SerialFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransportWanVpnInterfaceT1E1SerialFeature {
		return vs[0].(map[string]*TransportWanVpnInterfaceT1E1SerialFeature)[vs[1].(string)]
	}).(TransportWanVpnInterfaceT1E1SerialFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnInterfaceT1E1SerialFeatureInput)(nil)).Elem(), &TransportWanVpnInterfaceT1E1SerialFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnInterfaceT1E1SerialFeatureArrayInput)(nil)).Elem(), TransportWanVpnInterfaceT1E1SerialFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnInterfaceT1E1SerialFeatureMapInput)(nil)).Elem(), TransportWanVpnInterfaceT1E1SerialFeatureMap{})
	pulumi.RegisterOutputType(TransportWanVpnInterfaceT1E1SerialFeatureOutput{})
	pulumi.RegisterOutputType(TransportWanVpnInterfaceT1E1SerialFeatureArrayOutput{})
	pulumi.RegisterOutputType(TransportWanVpnInterfaceT1E1SerialFeatureMapOutput{})
}
