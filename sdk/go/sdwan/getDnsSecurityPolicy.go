// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the DNS Security Policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupDnsSecurityPolicy(ctx, &sdwan.LookupDnsSecurityPolicyArgs{
//				Id:               "f6b2c44c-693c-4763-b010-895aa3d236bd",
//				FeatureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDnsSecurityPolicy(ctx *pulumi.Context, args *LookupDnsSecurityPolicyArgs, opts ...pulumi.InvokeOption) (*LookupDnsSecurityPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDnsSecurityPolicyResult
	err := ctx.Invoke("sdwan:index/getDnsSecurityPolicy:getDnsSecurityPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDnsSecurityPolicy.
type LookupDnsSecurityPolicyArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Policy
	Id string `pulumi:"id"`
}

// A collection of values returned by getDnsSecurityPolicy.
type LookupDnsSecurityPolicyResult struct {
	// String that is a number that corresponds to Umbrella Multi Org, can be empty if not using Umbrella Multi Org
	ChildOrgId string `pulumi:"childOrgId"`
	// The description of the Policy
	Description string `pulumi:"description"`
	// If matchAllVpn is false, this field is only true if at least one of the targetVpns entires contains an umbrellaDefault true
	DnsCrypt bool `pulumi:"dnsCrypt"`
	// Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
	DnsServerIp string `pulumi:"dnsServerIp"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Policy
	Id string `pulumi:"id"`
	// Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
	LocalDomainBypassEnabled bool   `pulumi:"localDomainBypassEnabled"`
	LocalDomainBypassListId  string `pulumi:"localDomainBypassListId"`
	// If this is true, there shouldn't be a targetVpns field, if false then targetVpns field should be there
	MatchAllVpn bool `pulumi:"matchAllVpn"`
	// The name of the Policy
	Name string `pulumi:"name"`
	// Will be under data field only if matchAllVpn is false, if matchAllVpn is true field should not be in payload
	TargetVpns []GetDnsSecurityPolicyTargetVpn `pulumi:"targetVpns"`
	// Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
	UmbrellaDefault bool `pulumi:"umbrellaDefault"`
	// The version of the Policy
	Version int `pulumi:"version"`
}

func LookupDnsSecurityPolicyOutput(ctx *pulumi.Context, args LookupDnsSecurityPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupDnsSecurityPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDnsSecurityPolicyResultOutput, error) {
			args := v.(LookupDnsSecurityPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sdwan:index/getDnsSecurityPolicy:getDnsSecurityPolicy", args, LookupDnsSecurityPolicyResultOutput{}, options).(LookupDnsSecurityPolicyResultOutput), nil
		}).(LookupDnsSecurityPolicyResultOutput)
}

// A collection of arguments for invoking getDnsSecurityPolicy.
type LookupDnsSecurityPolicyOutputArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput `pulumi:"featureProfileId"`
	// The id of the Policy
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupDnsSecurityPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDnsSecurityPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getDnsSecurityPolicy.
type LookupDnsSecurityPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupDnsSecurityPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDnsSecurityPolicyResult)(nil)).Elem()
}

func (o LookupDnsSecurityPolicyResultOutput) ToLookupDnsSecurityPolicyResultOutput() LookupDnsSecurityPolicyResultOutput {
	return o
}

func (o LookupDnsSecurityPolicyResultOutput) ToLookupDnsSecurityPolicyResultOutputWithContext(ctx context.Context) LookupDnsSecurityPolicyResultOutput {
	return o
}

// String that is a number that corresponds to Umbrella Multi Org, can be empty if not using Umbrella Multi Org
func (o LookupDnsSecurityPolicyResultOutput) ChildOrgId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsSecurityPolicyResult) string { return v.ChildOrgId }).(pulumi.StringOutput)
}

// The description of the Policy
func (o LookupDnsSecurityPolicyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsSecurityPolicyResult) string { return v.Description }).(pulumi.StringOutput)
}

// If matchAllVpn is false, this field is only true if at least one of the targetVpns entires contains an umbrellaDefault true
func (o LookupDnsSecurityPolicyResultOutput) DnsCrypt() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDnsSecurityPolicyResult) bool { return v.DnsCrypt }).(pulumi.BoolOutput)
}

// Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
func (o LookupDnsSecurityPolicyResultOutput) DnsServerIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsSecurityPolicyResult) string { return v.DnsServerIp }).(pulumi.StringOutput)
}

// Feature Profile ID
func (o LookupDnsSecurityPolicyResultOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsSecurityPolicyResult) string { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The id of the Policy
func (o LookupDnsSecurityPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsSecurityPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
func (o LookupDnsSecurityPolicyResultOutput) LocalDomainBypassEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDnsSecurityPolicyResult) bool { return v.LocalDomainBypassEnabled }).(pulumi.BoolOutput)
}

func (o LookupDnsSecurityPolicyResultOutput) LocalDomainBypassListId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsSecurityPolicyResult) string { return v.LocalDomainBypassListId }).(pulumi.StringOutput)
}

// If this is true, there shouldn't be a targetVpns field, if false then targetVpns field should be there
func (o LookupDnsSecurityPolicyResultOutput) MatchAllVpn() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDnsSecurityPolicyResult) bool { return v.MatchAllVpn }).(pulumi.BoolOutput)
}

// The name of the Policy
func (o LookupDnsSecurityPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsSecurityPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// Will be under data field only if matchAllVpn is false, if matchAllVpn is true field should not be in payload
func (o LookupDnsSecurityPolicyResultOutput) TargetVpns() GetDnsSecurityPolicyTargetVpnArrayOutput {
	return o.ApplyT(func(v LookupDnsSecurityPolicyResult) []GetDnsSecurityPolicyTargetVpn { return v.TargetVpns }).(GetDnsSecurityPolicyTargetVpnArrayOutput)
}

// Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
func (o LookupDnsSecurityPolicyResultOutput) UmbrellaDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDnsSecurityPolicyResult) bool { return v.UmbrellaDefault }).(pulumi.BoolOutput)
}

// The version of the Policy
func (o LookupDnsSecurityPolicyResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDnsSecurityPolicyResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDnsSecurityPolicyResultOutput{})
}
