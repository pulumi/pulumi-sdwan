// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Service LAN VPN Interface GRE Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewServiceLanVpnInterfaceGreFeature(ctx, "example", &sdwan.ServiceLanVpnInterfaceGreFeatureArgs{
//				Name:                         pulumi.String("Example"),
//				Description:                  pulumi.String("My Example"),
//				FeatureProfileId:             pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				ServiceLanVpnFeatureId:       pulumi.String("140331f6-5418-4755-a059-13c77eb96037"),
//				InterfaceName:                pulumi.String("gre1"),
//				InterfaceDescription:         pulumi.String("gre1"),
//				Ipv4Address:                  pulumi.String("70.1.1.1"),
//				Ipv4SubnetMask:               pulumi.String("255.255.255.0"),
//				Shutdown:                     pulumi.Bool(true),
//				TunnelSourceIpv4Address:      pulumi.String("78.1.1.1"),
//				TunnelDestinationIpv4Address: pulumi.String("79.1.1.1"),
//				IpMtu:                        pulumi.Int(1500),
//				TcpMss:                       pulumi.Int(1460),
//				ClearDontFragment:            pulumi.Bool(false),
//				ApplicationTunnelType:        pulumi.String("none"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "service_lan_vpn_interface_gre_feature_id,feature_profile_id,service_lan_vpn_feature_id"
//
// ```sh
// $ pulumi import sdwan:index/serviceLanVpnInterfaceGreFeature:ServiceLanVpnInterfaceGreFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037"
// ```
type ServiceLanVpnInterfaceGreFeature struct {
	pulumi.CustomResourceState

	// Enable Application Tunnel Type - Choices: `none`, `sig`
	ApplicationTunnelType pulumi.StringPtrOutput `pulumi:"applicationTunnelType"`
	// Variable name
	ApplicationTunnelTypeVariable pulumi.StringPtrOutput `pulumi:"applicationTunnelTypeVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	ClearDontFragment pulumi.BoolPtrOutput `pulumi:"clearDontFragment"`
	// Variable name
	ClearDontFragmentVariable pulumi.StringPtrOutput `pulumi:"clearDontFragmentVariable"`
	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// Interface description
	InterfaceDescription pulumi.StringPtrOutput `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrOutput `pulumi:"interfaceDescriptionVariable"`
	// Interface name (1..255)
	InterfaceName pulumi.StringPtrOutput `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable pulumi.StringPtrOutput `pulumi:"interfaceNameVariable"`
	// Interface MTU <576..9976>, in bytes - Range: `576`-`9976` - Default value: `1500`
	IpMtu pulumi.IntPtrOutput `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable pulumi.StringPtrOutput `pulumi:"ipMtuVariable"`
	Ipv4Address   pulumi.StringPtrOutput `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrOutput `pulumi:"ipv4AddressVariable"`
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrOutput `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable pulumi.StringPtrOutput `pulumi:"ipv4SubnetMaskVariable"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringOutput `pulumi:"serviceLanVpnFeatureId"`
	// Administrative state - Default value: `false`
	Shutdown pulumi.BoolPtrOutput `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable pulumi.StringPtrOutput `pulumi:"shutdownVariable"`
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss pulumi.IntPtrOutput `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable pulumi.StringPtrOutput `pulumi:"tcpMssVariable"`
	// Tunnel destination IP Address
	TunnelDestinationIpv4Address pulumi.StringPtrOutput `pulumi:"tunnelDestinationIpv4Address"`
	// Variable name
	TunnelDestinationIpv4AddressVariable pulumi.StringPtrOutput `pulumi:"tunnelDestinationIpv4AddressVariable"`
	// <1..32 characters> Interface name, can't be Loopback interface
	TunnelRouteViaLoopback pulumi.StringPtrOutput `pulumi:"tunnelRouteViaLoopback"`
	// Variable name
	TunnelRouteViaLoopbackVariable pulumi.StringPtrOutput `pulumi:"tunnelRouteViaLoopbackVariable"`
	// <1..32 characters> Interface name
	TunnelSourceInterface pulumi.StringPtrOutput `pulumi:"tunnelSourceInterface"`
	// <1..32 characters> Interface name
	TunnelSourceInterfaceLoopback pulumi.StringPtrOutput `pulumi:"tunnelSourceInterfaceLoopback"`
	// Variable name
	TunnelSourceInterfaceLoopbackVariable pulumi.StringPtrOutput `pulumi:"tunnelSourceInterfaceLoopbackVariable"`
	// Variable name
	TunnelSourceInterfaceVariable pulumi.StringPtrOutput `pulumi:"tunnelSourceInterfaceVariable"`
	// Tunnel source IP Address
	TunnelSourceIpv4Address pulumi.StringPtrOutput `pulumi:"tunnelSourceIpv4Address"`
	// Variable name
	TunnelSourceIpv4AddressVariable pulumi.StringPtrOutput `pulumi:"tunnelSourceIpv4AddressVariable"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewServiceLanVpnInterfaceGreFeature registers a new resource with the given unique name, arguments, and options.
func NewServiceLanVpnInterfaceGreFeature(ctx *pulumi.Context,
	name string, args *ServiceLanVpnInterfaceGreFeatureArgs, opts ...pulumi.ResourceOption) (*ServiceLanVpnInterfaceGreFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	if args.ServiceLanVpnFeatureId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceLanVpnFeatureId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceLanVpnInterfaceGreFeature
	err := ctx.RegisterResource("sdwan:index/serviceLanVpnInterfaceGreFeature:ServiceLanVpnInterfaceGreFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceLanVpnInterfaceGreFeature gets an existing ServiceLanVpnInterfaceGreFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceLanVpnInterfaceGreFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceLanVpnInterfaceGreFeatureState, opts ...pulumi.ResourceOption) (*ServiceLanVpnInterfaceGreFeature, error) {
	var resource ServiceLanVpnInterfaceGreFeature
	err := ctx.ReadResource("sdwan:index/serviceLanVpnInterfaceGreFeature:ServiceLanVpnInterfaceGreFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceLanVpnInterfaceGreFeature resources.
type serviceLanVpnInterfaceGreFeatureState struct {
	// Enable Application Tunnel Type - Choices: `none`, `sig`
	ApplicationTunnelType *string `pulumi:"applicationTunnelType"`
	// Variable name
	ApplicationTunnelTypeVariable *string `pulumi:"applicationTunnelTypeVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	ClearDontFragment *bool `pulumi:"clearDontFragment"`
	// Variable name
	ClearDontFragmentVariable *string `pulumi:"clearDontFragmentVariable"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// Interface description
	InterfaceDescription *string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable *string `pulumi:"interfaceDescriptionVariable"`
	// Interface name (1..255)
	InterfaceName *string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable *string `pulumi:"interfaceNameVariable"`
	// Interface MTU <576..9976>, in bytes - Range: `576`-`9976` - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	Ipv4Address   *string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable *string `pulumi:"ipv4AddressVariable"`
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask *string `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable *string `pulumi:"ipv4SubnetMaskVariable"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId *string `pulumi:"serviceLanVpnFeatureId"`
	// Administrative state - Default value: `false`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss *int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable *string `pulumi:"tcpMssVariable"`
	// Tunnel destination IP Address
	TunnelDestinationIpv4Address *string `pulumi:"tunnelDestinationIpv4Address"`
	// Variable name
	TunnelDestinationIpv4AddressVariable *string `pulumi:"tunnelDestinationIpv4AddressVariable"`
	// <1..32 characters> Interface name, can't be Loopback interface
	TunnelRouteViaLoopback *string `pulumi:"tunnelRouteViaLoopback"`
	// Variable name
	TunnelRouteViaLoopbackVariable *string `pulumi:"tunnelRouteViaLoopbackVariable"`
	// <1..32 characters> Interface name
	TunnelSourceInterface *string `pulumi:"tunnelSourceInterface"`
	// <1..32 characters> Interface name
	TunnelSourceInterfaceLoopback *string `pulumi:"tunnelSourceInterfaceLoopback"`
	// Variable name
	TunnelSourceInterfaceLoopbackVariable *string `pulumi:"tunnelSourceInterfaceLoopbackVariable"`
	// Variable name
	TunnelSourceInterfaceVariable *string `pulumi:"tunnelSourceInterfaceVariable"`
	// Tunnel source IP Address
	TunnelSourceIpv4Address *string `pulumi:"tunnelSourceIpv4Address"`
	// Variable name
	TunnelSourceIpv4AddressVariable *string `pulumi:"tunnelSourceIpv4AddressVariable"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type ServiceLanVpnInterfaceGreFeatureState struct {
	// Enable Application Tunnel Type - Choices: `none`, `sig`
	ApplicationTunnelType pulumi.StringPtrInput
	// Variable name
	ApplicationTunnelTypeVariable pulumi.StringPtrInput
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	ClearDontFragment pulumi.BoolPtrInput
	// Variable name
	ClearDontFragmentVariable pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// Interface description
	InterfaceDescription pulumi.StringPtrInput
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrInput
	// Interface name (1..255)
	InterfaceName pulumi.StringPtrInput
	// Variable name
	InterfaceNameVariable pulumi.StringPtrInput
	// Interface MTU <576..9976>, in bytes - Range: `576`-`9976` - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	Ipv4Address   pulumi.StringPtrInput
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrInput
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrInput
	// Variable name
	Ipv4SubnetMaskVariable pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringPtrInput
	// Administrative state - Default value: `false`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss pulumi.IntPtrInput
	// Variable name
	TcpMssVariable pulumi.StringPtrInput
	// Tunnel destination IP Address
	TunnelDestinationIpv4Address pulumi.StringPtrInput
	// Variable name
	TunnelDestinationIpv4AddressVariable pulumi.StringPtrInput
	// <1..32 characters> Interface name, can't be Loopback interface
	TunnelRouteViaLoopback pulumi.StringPtrInput
	// Variable name
	TunnelRouteViaLoopbackVariable pulumi.StringPtrInput
	// <1..32 characters> Interface name
	TunnelSourceInterface pulumi.StringPtrInput
	// <1..32 characters> Interface name
	TunnelSourceInterfaceLoopback pulumi.StringPtrInput
	// Variable name
	TunnelSourceInterfaceLoopbackVariable pulumi.StringPtrInput
	// Variable name
	TunnelSourceInterfaceVariable pulumi.StringPtrInput
	// Tunnel source IP Address
	TunnelSourceIpv4Address pulumi.StringPtrInput
	// Variable name
	TunnelSourceIpv4AddressVariable pulumi.StringPtrInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (ServiceLanVpnInterfaceGreFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceLanVpnInterfaceGreFeatureState)(nil)).Elem()
}

type serviceLanVpnInterfaceGreFeatureArgs struct {
	// Enable Application Tunnel Type - Choices: `none`, `sig`
	ApplicationTunnelType *string `pulumi:"applicationTunnelType"`
	// Variable name
	ApplicationTunnelTypeVariable *string `pulumi:"applicationTunnelTypeVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	ClearDontFragment *bool `pulumi:"clearDontFragment"`
	// Variable name
	ClearDontFragmentVariable *string `pulumi:"clearDontFragmentVariable"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// Interface description
	InterfaceDescription *string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable *string `pulumi:"interfaceDescriptionVariable"`
	// Interface name (1..255)
	InterfaceName *string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable *string `pulumi:"interfaceNameVariable"`
	// Interface MTU <576..9976>, in bytes - Range: `576`-`9976` - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	Ipv4Address   *string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable *string `pulumi:"ipv4AddressVariable"`
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask *string `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable *string `pulumi:"ipv4SubnetMaskVariable"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId string `pulumi:"serviceLanVpnFeatureId"`
	// Administrative state - Default value: `false`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss *int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable *string `pulumi:"tcpMssVariable"`
	// Tunnel destination IP Address
	TunnelDestinationIpv4Address *string `pulumi:"tunnelDestinationIpv4Address"`
	// Variable name
	TunnelDestinationIpv4AddressVariable *string `pulumi:"tunnelDestinationIpv4AddressVariable"`
	// <1..32 characters> Interface name, can't be Loopback interface
	TunnelRouteViaLoopback *string `pulumi:"tunnelRouteViaLoopback"`
	// Variable name
	TunnelRouteViaLoopbackVariable *string `pulumi:"tunnelRouteViaLoopbackVariable"`
	// <1..32 characters> Interface name
	TunnelSourceInterface *string `pulumi:"tunnelSourceInterface"`
	// <1..32 characters> Interface name
	TunnelSourceInterfaceLoopback *string `pulumi:"tunnelSourceInterfaceLoopback"`
	// Variable name
	TunnelSourceInterfaceLoopbackVariable *string `pulumi:"tunnelSourceInterfaceLoopbackVariable"`
	// Variable name
	TunnelSourceInterfaceVariable *string `pulumi:"tunnelSourceInterfaceVariable"`
	// Tunnel source IP Address
	TunnelSourceIpv4Address *string `pulumi:"tunnelSourceIpv4Address"`
	// Variable name
	TunnelSourceIpv4AddressVariable *string `pulumi:"tunnelSourceIpv4AddressVariable"`
}

// The set of arguments for constructing a ServiceLanVpnInterfaceGreFeature resource.
type ServiceLanVpnInterfaceGreFeatureArgs struct {
	// Enable Application Tunnel Type - Choices: `none`, `sig`
	ApplicationTunnelType pulumi.StringPtrInput
	// Variable name
	ApplicationTunnelTypeVariable pulumi.StringPtrInput
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	ClearDontFragment pulumi.BoolPtrInput
	// Variable name
	ClearDontFragmentVariable pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// Interface description
	InterfaceDescription pulumi.StringPtrInput
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrInput
	// Interface name (1..255)
	InterfaceName pulumi.StringPtrInput
	// Variable name
	InterfaceNameVariable pulumi.StringPtrInput
	// Interface MTU <576..9976>, in bytes - Range: `576`-`9976` - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	Ipv4Address   pulumi.StringPtrInput
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrInput
	// - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	//   `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	//   `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	//   `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	//   `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrInput
	// Variable name
	Ipv4SubnetMaskVariable pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringInput
	// Administrative state - Default value: `false`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss pulumi.IntPtrInput
	// Variable name
	TcpMssVariable pulumi.StringPtrInput
	// Tunnel destination IP Address
	TunnelDestinationIpv4Address pulumi.StringPtrInput
	// Variable name
	TunnelDestinationIpv4AddressVariable pulumi.StringPtrInput
	// <1..32 characters> Interface name, can't be Loopback interface
	TunnelRouteViaLoopback pulumi.StringPtrInput
	// Variable name
	TunnelRouteViaLoopbackVariable pulumi.StringPtrInput
	// <1..32 characters> Interface name
	TunnelSourceInterface pulumi.StringPtrInput
	// <1..32 characters> Interface name
	TunnelSourceInterfaceLoopback pulumi.StringPtrInput
	// Variable name
	TunnelSourceInterfaceLoopbackVariable pulumi.StringPtrInput
	// Variable name
	TunnelSourceInterfaceVariable pulumi.StringPtrInput
	// Tunnel source IP Address
	TunnelSourceIpv4Address pulumi.StringPtrInput
	// Variable name
	TunnelSourceIpv4AddressVariable pulumi.StringPtrInput
}

func (ServiceLanVpnInterfaceGreFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceLanVpnInterfaceGreFeatureArgs)(nil)).Elem()
}

type ServiceLanVpnInterfaceGreFeatureInput interface {
	pulumi.Input

	ToServiceLanVpnInterfaceGreFeatureOutput() ServiceLanVpnInterfaceGreFeatureOutput
	ToServiceLanVpnInterfaceGreFeatureOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceGreFeatureOutput
}

func (*ServiceLanVpnInterfaceGreFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLanVpnInterfaceGreFeature)(nil)).Elem()
}

func (i *ServiceLanVpnInterfaceGreFeature) ToServiceLanVpnInterfaceGreFeatureOutput() ServiceLanVpnInterfaceGreFeatureOutput {
	return i.ToServiceLanVpnInterfaceGreFeatureOutputWithContext(context.Background())
}

func (i *ServiceLanVpnInterfaceGreFeature) ToServiceLanVpnInterfaceGreFeatureOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceGreFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLanVpnInterfaceGreFeatureOutput)
}

// ServiceLanVpnInterfaceGreFeatureArrayInput is an input type that accepts ServiceLanVpnInterfaceGreFeatureArray and ServiceLanVpnInterfaceGreFeatureArrayOutput values.
// You can construct a concrete instance of `ServiceLanVpnInterfaceGreFeatureArrayInput` via:
//
//	ServiceLanVpnInterfaceGreFeatureArray{ ServiceLanVpnInterfaceGreFeatureArgs{...} }
type ServiceLanVpnInterfaceGreFeatureArrayInput interface {
	pulumi.Input

	ToServiceLanVpnInterfaceGreFeatureArrayOutput() ServiceLanVpnInterfaceGreFeatureArrayOutput
	ToServiceLanVpnInterfaceGreFeatureArrayOutputWithContext(context.Context) ServiceLanVpnInterfaceGreFeatureArrayOutput
}

type ServiceLanVpnInterfaceGreFeatureArray []ServiceLanVpnInterfaceGreFeatureInput

func (ServiceLanVpnInterfaceGreFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceLanVpnInterfaceGreFeature)(nil)).Elem()
}

func (i ServiceLanVpnInterfaceGreFeatureArray) ToServiceLanVpnInterfaceGreFeatureArrayOutput() ServiceLanVpnInterfaceGreFeatureArrayOutput {
	return i.ToServiceLanVpnInterfaceGreFeatureArrayOutputWithContext(context.Background())
}

func (i ServiceLanVpnInterfaceGreFeatureArray) ToServiceLanVpnInterfaceGreFeatureArrayOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceGreFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLanVpnInterfaceGreFeatureArrayOutput)
}

// ServiceLanVpnInterfaceGreFeatureMapInput is an input type that accepts ServiceLanVpnInterfaceGreFeatureMap and ServiceLanVpnInterfaceGreFeatureMapOutput values.
// You can construct a concrete instance of `ServiceLanVpnInterfaceGreFeatureMapInput` via:
//
//	ServiceLanVpnInterfaceGreFeatureMap{ "key": ServiceLanVpnInterfaceGreFeatureArgs{...} }
type ServiceLanVpnInterfaceGreFeatureMapInput interface {
	pulumi.Input

	ToServiceLanVpnInterfaceGreFeatureMapOutput() ServiceLanVpnInterfaceGreFeatureMapOutput
	ToServiceLanVpnInterfaceGreFeatureMapOutputWithContext(context.Context) ServiceLanVpnInterfaceGreFeatureMapOutput
}

type ServiceLanVpnInterfaceGreFeatureMap map[string]ServiceLanVpnInterfaceGreFeatureInput

func (ServiceLanVpnInterfaceGreFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceLanVpnInterfaceGreFeature)(nil)).Elem()
}

func (i ServiceLanVpnInterfaceGreFeatureMap) ToServiceLanVpnInterfaceGreFeatureMapOutput() ServiceLanVpnInterfaceGreFeatureMapOutput {
	return i.ToServiceLanVpnInterfaceGreFeatureMapOutputWithContext(context.Background())
}

func (i ServiceLanVpnInterfaceGreFeatureMap) ToServiceLanVpnInterfaceGreFeatureMapOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceGreFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLanVpnInterfaceGreFeatureMapOutput)
}

type ServiceLanVpnInterfaceGreFeatureOutput struct{ *pulumi.OutputState }

func (ServiceLanVpnInterfaceGreFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLanVpnInterfaceGreFeature)(nil)).Elem()
}

func (o ServiceLanVpnInterfaceGreFeatureOutput) ToServiceLanVpnInterfaceGreFeatureOutput() ServiceLanVpnInterfaceGreFeatureOutput {
	return o
}

func (o ServiceLanVpnInterfaceGreFeatureOutput) ToServiceLanVpnInterfaceGreFeatureOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceGreFeatureOutput {
	return o
}

// Enable Application Tunnel Type - Choices: `none`, `sig`
func (o ServiceLanVpnInterfaceGreFeatureOutput) ApplicationTunnelType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput { return v.ApplicationTunnelType }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceGreFeatureOutput) ApplicationTunnelTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput {
		return v.ApplicationTunnelTypeVariable
	}).(pulumi.StringPtrOutput)
}

// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
func (o ServiceLanVpnInterfaceGreFeatureOutput) ClearDontFragment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.BoolPtrOutput { return v.ClearDontFragment }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceGreFeatureOutput) ClearDontFragmentVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput { return v.ClearDontFragmentVariable }).(pulumi.StringPtrOutput)
}

// The description of the Feature
func (o ServiceLanVpnInterfaceGreFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o ServiceLanVpnInterfaceGreFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// Interface description
func (o ServiceLanVpnInterfaceGreFeatureOutput) InterfaceDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput { return v.InterfaceDescription }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceGreFeatureOutput) InterfaceDescriptionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput {
		return v.InterfaceDescriptionVariable
	}).(pulumi.StringPtrOutput)
}

// Interface name (1..255)
func (o ServiceLanVpnInterfaceGreFeatureOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceGreFeatureOutput) InterfaceNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput { return v.InterfaceNameVariable }).(pulumi.StringPtrOutput)
}

// Interface MTU <576..9976>, in bytes - Range: `576`-`9976` - Default value: `1500`
func (o ServiceLanVpnInterfaceGreFeatureOutput) IpMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.IntPtrOutput { return v.IpMtu }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceGreFeatureOutput) IpMtuVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput { return v.IpMtuVariable }).(pulumi.StringPtrOutput)
}

func (o ServiceLanVpnInterfaceGreFeatureOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceGreFeatureOutput) Ipv4AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput { return v.Ipv4AddressVariable }).(pulumi.StringPtrOutput)
}

//   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
//     `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
//     `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
//     `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
//     `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
func (o ServiceLanVpnInterfaceGreFeatureOutput) Ipv4SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput { return v.Ipv4SubnetMask }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceGreFeatureOutput) Ipv4SubnetMaskVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput { return v.Ipv4SubnetMaskVariable }).(pulumi.StringPtrOutput)
}

// The name of the Feature
func (o ServiceLanVpnInterfaceGreFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Service LAN VPN Feature ID
func (o ServiceLanVpnInterfaceGreFeatureOutput) ServiceLanVpnFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringOutput { return v.ServiceLanVpnFeatureId }).(pulumi.StringOutput)
}

// Administrative state - Default value: `false`
func (o ServiceLanVpnInterfaceGreFeatureOutput) Shutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.BoolPtrOutput { return v.Shutdown }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceGreFeatureOutput) ShutdownVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput { return v.ShutdownVariable }).(pulumi.StringPtrOutput)
}

// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
func (o ServiceLanVpnInterfaceGreFeatureOutput) TcpMss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.IntPtrOutput { return v.TcpMss }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceGreFeatureOutput) TcpMssVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput { return v.TcpMssVariable }).(pulumi.StringPtrOutput)
}

// Tunnel destination IP Address
func (o ServiceLanVpnInterfaceGreFeatureOutput) TunnelDestinationIpv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput {
		return v.TunnelDestinationIpv4Address
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceGreFeatureOutput) TunnelDestinationIpv4AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput {
		return v.TunnelDestinationIpv4AddressVariable
	}).(pulumi.StringPtrOutput)
}

// <1..32 characters> Interface name, can't be Loopback interface
func (o ServiceLanVpnInterfaceGreFeatureOutput) TunnelRouteViaLoopback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput { return v.TunnelRouteViaLoopback }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceGreFeatureOutput) TunnelRouteViaLoopbackVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput {
		return v.TunnelRouteViaLoopbackVariable
	}).(pulumi.StringPtrOutput)
}

// <1..32 characters> Interface name
func (o ServiceLanVpnInterfaceGreFeatureOutput) TunnelSourceInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput { return v.TunnelSourceInterface }).(pulumi.StringPtrOutput)
}

// <1..32 characters> Interface name
func (o ServiceLanVpnInterfaceGreFeatureOutput) TunnelSourceInterfaceLoopback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput {
		return v.TunnelSourceInterfaceLoopback
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceGreFeatureOutput) TunnelSourceInterfaceLoopbackVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput {
		return v.TunnelSourceInterfaceLoopbackVariable
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceGreFeatureOutput) TunnelSourceInterfaceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput {
		return v.TunnelSourceInterfaceVariable
	}).(pulumi.StringPtrOutput)
}

// Tunnel source IP Address
func (o ServiceLanVpnInterfaceGreFeatureOutput) TunnelSourceIpv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput { return v.TunnelSourceIpv4Address }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceGreFeatureOutput) TunnelSourceIpv4AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.StringPtrOutput {
		return v.TunnelSourceIpv4AddressVariable
	}).(pulumi.StringPtrOutput)
}

// The version of the Feature
func (o ServiceLanVpnInterfaceGreFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceGreFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ServiceLanVpnInterfaceGreFeatureArrayOutput struct{ *pulumi.OutputState }

func (ServiceLanVpnInterfaceGreFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceLanVpnInterfaceGreFeature)(nil)).Elem()
}

func (o ServiceLanVpnInterfaceGreFeatureArrayOutput) ToServiceLanVpnInterfaceGreFeatureArrayOutput() ServiceLanVpnInterfaceGreFeatureArrayOutput {
	return o
}

func (o ServiceLanVpnInterfaceGreFeatureArrayOutput) ToServiceLanVpnInterfaceGreFeatureArrayOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceGreFeatureArrayOutput {
	return o
}

func (o ServiceLanVpnInterfaceGreFeatureArrayOutput) Index(i pulumi.IntInput) ServiceLanVpnInterfaceGreFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceLanVpnInterfaceGreFeature {
		return vs[0].([]*ServiceLanVpnInterfaceGreFeature)[vs[1].(int)]
	}).(ServiceLanVpnInterfaceGreFeatureOutput)
}

type ServiceLanVpnInterfaceGreFeatureMapOutput struct{ *pulumi.OutputState }

func (ServiceLanVpnInterfaceGreFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceLanVpnInterfaceGreFeature)(nil)).Elem()
}

func (o ServiceLanVpnInterfaceGreFeatureMapOutput) ToServiceLanVpnInterfaceGreFeatureMapOutput() ServiceLanVpnInterfaceGreFeatureMapOutput {
	return o
}

func (o ServiceLanVpnInterfaceGreFeatureMapOutput) ToServiceLanVpnInterfaceGreFeatureMapOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceGreFeatureMapOutput {
	return o
}

func (o ServiceLanVpnInterfaceGreFeatureMapOutput) MapIndex(k pulumi.StringInput) ServiceLanVpnInterfaceGreFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceLanVpnInterfaceGreFeature {
		return vs[0].(map[string]*ServiceLanVpnInterfaceGreFeature)[vs[1].(string)]
	}).(ServiceLanVpnInterfaceGreFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLanVpnInterfaceGreFeatureInput)(nil)).Elem(), &ServiceLanVpnInterfaceGreFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLanVpnInterfaceGreFeatureArrayInput)(nil)).Elem(), ServiceLanVpnInterfaceGreFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLanVpnInterfaceGreFeatureMapInput)(nil)).Elem(), ServiceLanVpnInterfaceGreFeatureMap{})
	pulumi.RegisterOutputType(ServiceLanVpnInterfaceGreFeatureOutput{})
	pulumi.RegisterOutputType(ServiceLanVpnInterfaceGreFeatureArrayOutput{})
	pulumi.RegisterOutputType(ServiceLanVpnInterfaceGreFeatureMapOutput{})
}
