// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Extended Community List Policy Object .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewExtendedCommunityListPolicyObject(ctx, "example", &sdwan.ExtendedCommunityListPolicyObjectArgs{
//				Name: pulumi.String("Example"),
//				Entries: sdwan.ExtendedCommunityListPolicyObjectEntryArray{
//					&sdwan.ExtendedCommunityListPolicyObjectEntryArgs{
//						Community: pulumi.String("community rt 100:10"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/extendedCommunityListPolicyObject:ExtendedCommunityListPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type ExtendedCommunityListPolicyObject struct {
	pulumi.CustomResourceState

	// List of entries
	Entries ExtendedCommunityListPolicyObjectEntryArrayOutput `pulumi:"entries"`
	// The name of the policy object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewExtendedCommunityListPolicyObject registers a new resource with the given unique name, arguments, and options.
func NewExtendedCommunityListPolicyObject(ctx *pulumi.Context,
	name string, args *ExtendedCommunityListPolicyObjectArgs, opts ...pulumi.ResourceOption) (*ExtendedCommunityListPolicyObject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExtendedCommunityListPolicyObject
	err := ctx.RegisterResource("sdwan:index/extendedCommunityListPolicyObject:ExtendedCommunityListPolicyObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExtendedCommunityListPolicyObject gets an existing ExtendedCommunityListPolicyObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExtendedCommunityListPolicyObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExtendedCommunityListPolicyObjectState, opts ...pulumi.ResourceOption) (*ExtendedCommunityListPolicyObject, error) {
	var resource ExtendedCommunityListPolicyObject
	err := ctx.ReadResource("sdwan:index/extendedCommunityListPolicyObject:ExtendedCommunityListPolicyObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExtendedCommunityListPolicyObject resources.
type extendedCommunityListPolicyObjectState struct {
	// List of entries
	Entries []ExtendedCommunityListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type ExtendedCommunityListPolicyObjectState struct {
	// List of entries
	Entries ExtendedCommunityListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (ExtendedCommunityListPolicyObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*extendedCommunityListPolicyObjectState)(nil)).Elem()
}

type extendedCommunityListPolicyObjectArgs struct {
	// List of entries
	Entries []ExtendedCommunityListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ExtendedCommunityListPolicyObject resource.
type ExtendedCommunityListPolicyObjectArgs struct {
	// List of entries
	Entries ExtendedCommunityListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
}

func (ExtendedCommunityListPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*extendedCommunityListPolicyObjectArgs)(nil)).Elem()
}

type ExtendedCommunityListPolicyObjectInput interface {
	pulumi.Input

	ToExtendedCommunityListPolicyObjectOutput() ExtendedCommunityListPolicyObjectOutput
	ToExtendedCommunityListPolicyObjectOutputWithContext(ctx context.Context) ExtendedCommunityListPolicyObjectOutput
}

func (*ExtendedCommunityListPolicyObject) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedCommunityListPolicyObject)(nil)).Elem()
}

func (i *ExtendedCommunityListPolicyObject) ToExtendedCommunityListPolicyObjectOutput() ExtendedCommunityListPolicyObjectOutput {
	return i.ToExtendedCommunityListPolicyObjectOutputWithContext(context.Background())
}

func (i *ExtendedCommunityListPolicyObject) ToExtendedCommunityListPolicyObjectOutputWithContext(ctx context.Context) ExtendedCommunityListPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedCommunityListPolicyObjectOutput)
}

// ExtendedCommunityListPolicyObjectArrayInput is an input type that accepts ExtendedCommunityListPolicyObjectArray and ExtendedCommunityListPolicyObjectArrayOutput values.
// You can construct a concrete instance of `ExtendedCommunityListPolicyObjectArrayInput` via:
//
//	ExtendedCommunityListPolicyObjectArray{ ExtendedCommunityListPolicyObjectArgs{...} }
type ExtendedCommunityListPolicyObjectArrayInput interface {
	pulumi.Input

	ToExtendedCommunityListPolicyObjectArrayOutput() ExtendedCommunityListPolicyObjectArrayOutput
	ToExtendedCommunityListPolicyObjectArrayOutputWithContext(context.Context) ExtendedCommunityListPolicyObjectArrayOutput
}

type ExtendedCommunityListPolicyObjectArray []ExtendedCommunityListPolicyObjectInput

func (ExtendedCommunityListPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExtendedCommunityListPolicyObject)(nil)).Elem()
}

func (i ExtendedCommunityListPolicyObjectArray) ToExtendedCommunityListPolicyObjectArrayOutput() ExtendedCommunityListPolicyObjectArrayOutput {
	return i.ToExtendedCommunityListPolicyObjectArrayOutputWithContext(context.Background())
}

func (i ExtendedCommunityListPolicyObjectArray) ToExtendedCommunityListPolicyObjectArrayOutputWithContext(ctx context.Context) ExtendedCommunityListPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedCommunityListPolicyObjectArrayOutput)
}

// ExtendedCommunityListPolicyObjectMapInput is an input type that accepts ExtendedCommunityListPolicyObjectMap and ExtendedCommunityListPolicyObjectMapOutput values.
// You can construct a concrete instance of `ExtendedCommunityListPolicyObjectMapInput` via:
//
//	ExtendedCommunityListPolicyObjectMap{ "key": ExtendedCommunityListPolicyObjectArgs{...} }
type ExtendedCommunityListPolicyObjectMapInput interface {
	pulumi.Input

	ToExtendedCommunityListPolicyObjectMapOutput() ExtendedCommunityListPolicyObjectMapOutput
	ToExtendedCommunityListPolicyObjectMapOutputWithContext(context.Context) ExtendedCommunityListPolicyObjectMapOutput
}

type ExtendedCommunityListPolicyObjectMap map[string]ExtendedCommunityListPolicyObjectInput

func (ExtendedCommunityListPolicyObjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExtendedCommunityListPolicyObject)(nil)).Elem()
}

func (i ExtendedCommunityListPolicyObjectMap) ToExtendedCommunityListPolicyObjectMapOutput() ExtendedCommunityListPolicyObjectMapOutput {
	return i.ToExtendedCommunityListPolicyObjectMapOutputWithContext(context.Background())
}

func (i ExtendedCommunityListPolicyObjectMap) ToExtendedCommunityListPolicyObjectMapOutputWithContext(ctx context.Context) ExtendedCommunityListPolicyObjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedCommunityListPolicyObjectMapOutput)
}

type ExtendedCommunityListPolicyObjectOutput struct{ *pulumi.OutputState }

func (ExtendedCommunityListPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedCommunityListPolicyObject)(nil)).Elem()
}

func (o ExtendedCommunityListPolicyObjectOutput) ToExtendedCommunityListPolicyObjectOutput() ExtendedCommunityListPolicyObjectOutput {
	return o
}

func (o ExtendedCommunityListPolicyObjectOutput) ToExtendedCommunityListPolicyObjectOutputWithContext(ctx context.Context) ExtendedCommunityListPolicyObjectOutput {
	return o
}

// List of entries
func (o ExtendedCommunityListPolicyObjectOutput) Entries() ExtendedCommunityListPolicyObjectEntryArrayOutput {
	return o.ApplyT(func(v *ExtendedCommunityListPolicyObject) ExtendedCommunityListPolicyObjectEntryArrayOutput {
		return v.Entries
	}).(ExtendedCommunityListPolicyObjectEntryArrayOutput)
}

// The name of the policy object
func (o ExtendedCommunityListPolicyObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtendedCommunityListPolicyObject) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the object
func (o ExtendedCommunityListPolicyObjectOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ExtendedCommunityListPolicyObject) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ExtendedCommunityListPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (ExtendedCommunityListPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExtendedCommunityListPolicyObject)(nil)).Elem()
}

func (o ExtendedCommunityListPolicyObjectArrayOutput) ToExtendedCommunityListPolicyObjectArrayOutput() ExtendedCommunityListPolicyObjectArrayOutput {
	return o
}

func (o ExtendedCommunityListPolicyObjectArrayOutput) ToExtendedCommunityListPolicyObjectArrayOutputWithContext(ctx context.Context) ExtendedCommunityListPolicyObjectArrayOutput {
	return o
}

func (o ExtendedCommunityListPolicyObjectArrayOutput) Index(i pulumi.IntInput) ExtendedCommunityListPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExtendedCommunityListPolicyObject {
		return vs[0].([]*ExtendedCommunityListPolicyObject)[vs[1].(int)]
	}).(ExtendedCommunityListPolicyObjectOutput)
}

type ExtendedCommunityListPolicyObjectMapOutput struct{ *pulumi.OutputState }

func (ExtendedCommunityListPolicyObjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExtendedCommunityListPolicyObject)(nil)).Elem()
}

func (o ExtendedCommunityListPolicyObjectMapOutput) ToExtendedCommunityListPolicyObjectMapOutput() ExtendedCommunityListPolicyObjectMapOutput {
	return o
}

func (o ExtendedCommunityListPolicyObjectMapOutput) ToExtendedCommunityListPolicyObjectMapOutputWithContext(ctx context.Context) ExtendedCommunityListPolicyObjectMapOutput {
	return o
}

func (o ExtendedCommunityListPolicyObjectMapOutput) MapIndex(k pulumi.StringInput) ExtendedCommunityListPolicyObjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExtendedCommunityListPolicyObject {
		return vs[0].(map[string]*ExtendedCommunityListPolicyObject)[vs[1].(string)]
	}).(ExtendedCommunityListPolicyObjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendedCommunityListPolicyObjectInput)(nil)).Elem(), &ExtendedCommunityListPolicyObject{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendedCommunityListPolicyObjectArrayInput)(nil)).Elem(), ExtendedCommunityListPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendedCommunityListPolicyObjectMapInput)(nil)).Elem(), ExtendedCommunityListPolicyObjectMap{})
	pulumi.RegisterOutputType(ExtendedCommunityListPolicyObjectOutput{})
	pulumi.RegisterOutputType(ExtendedCommunityListPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(ExtendedCommunityListPolicyObjectMapOutput{})
}
