// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Transport WAN VPN Feature.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupTransportWanVpnFeature(ctx, &sdwan.LookupTransportWanVpnFeatureArgs{
//				Id:               "f6b2c44c-693c-4763-b010-895aa3d236bd",
//				FeatureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTransportWanVpnFeature(ctx *pulumi.Context, args *LookupTransportWanVpnFeatureArgs, opts ...pulumi.InvokeOption) (*LookupTransportWanVpnFeatureResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTransportWanVpnFeatureResult
	err := ctx.Invoke("sdwan:index/getTransportWanVpnFeature:getTransportWanVpnFeature", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTransportWanVpnFeature.
type LookupTransportWanVpnFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
}

// A collection of values returned by getTransportWanVpnFeature.
type LookupTransportWanVpnFeatureResult struct {
	// The description of the Feature
	Description string `pulumi:"description"`
	// Enhance ECMP Keying
	EnhanceEcmpKeying bool `pulumi:"enhanceEcmpKeying"`
	// Variable name
	EnhanceEcmpKeyingVariable string `pulumi:"enhanceEcmpKeyingVariable"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
	// IPv4 Static Route
	Ipv4StaticRoutes []GetTransportWanVpnFeatureIpv4StaticRoute `pulumi:"ipv4StaticRoutes"`
	// IPv6 Static Route
	Ipv6StaticRoutes []GetTransportWanVpnFeatureIpv6StaticRoute `pulumi:"ipv6StaticRoutes"`
	// The name of the Feature
	Name string `pulumi:"name"`
	// NAT64 V4 Pool
	Nat64V4Pools    []GetTransportWanVpnFeatureNat64V4Pool    `pulumi:"nat64V4Pools"`
	NewHostMappings []GetTransportWanVpnFeatureNewHostMapping `pulumi:"newHostMappings"`
	// Primary DNS Address (IPv4)
	PrimaryDnsAddressIpv4 string `pulumi:"primaryDnsAddressIpv4"`
	// Variable name
	PrimaryDnsAddressIpv4Variable string `pulumi:"primaryDnsAddressIpv4Variable"`
	// Primary DNS Address (IPv6)
	PrimaryDnsAddressIpv6 string `pulumi:"primaryDnsAddressIpv6"`
	// Variable name
	PrimaryDnsAddressIpv6Variable string `pulumi:"primaryDnsAddressIpv6Variable"`
	// Secondary DNS Address (IPv4)
	SecondaryDnsAddressIpv4 string `pulumi:"secondaryDnsAddressIpv4"`
	// Variable name
	SecondaryDnsAddressIpv4Variable string `pulumi:"secondaryDnsAddressIpv4Variable"`
	// Secondary DNS Address (IPv6)
	SecondaryDnsAddressIpv6 string `pulumi:"secondaryDnsAddressIpv6"`
	// Variable name
	SecondaryDnsAddressIpv6Variable string `pulumi:"secondaryDnsAddressIpv6Variable"`
	// Service
	Services []GetTransportWanVpnFeatureService `pulumi:"services"`
	// The version of the Feature
	Version int `pulumi:"version"`
	// VPN
	Vpn int `pulumi:"vpn"`
}

func LookupTransportWanVpnFeatureOutput(ctx *pulumi.Context, args LookupTransportWanVpnFeatureOutputArgs, opts ...pulumi.InvokeOption) LookupTransportWanVpnFeatureResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTransportWanVpnFeatureResultOutput, error) {
			args := v.(LookupTransportWanVpnFeatureArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupTransportWanVpnFeatureResult
			secret, err := ctx.InvokePackageRaw("sdwan:index/getTransportWanVpnFeature:getTransportWanVpnFeature", args, &rv, "", opts...)
			if err != nil {
				return LookupTransportWanVpnFeatureResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupTransportWanVpnFeatureResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupTransportWanVpnFeatureResultOutput), nil
			}
			return output, nil
		}).(LookupTransportWanVpnFeatureResultOutput)
}

// A collection of arguments for invoking getTransportWanVpnFeature.
type LookupTransportWanVpnFeatureOutputArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput `pulumi:"featureProfileId"`
	// The id of the Feature
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupTransportWanVpnFeatureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransportWanVpnFeatureArgs)(nil)).Elem()
}

// A collection of values returned by getTransportWanVpnFeature.
type LookupTransportWanVpnFeatureResultOutput struct{ *pulumi.OutputState }

func (LookupTransportWanVpnFeatureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransportWanVpnFeatureResult)(nil)).Elem()
}

func (o LookupTransportWanVpnFeatureResultOutput) ToLookupTransportWanVpnFeatureResultOutput() LookupTransportWanVpnFeatureResultOutput {
	return o
}

func (o LookupTransportWanVpnFeatureResultOutput) ToLookupTransportWanVpnFeatureResultOutputWithContext(ctx context.Context) LookupTransportWanVpnFeatureResultOutput {
	return o
}

// The description of the Feature
func (o LookupTransportWanVpnFeatureResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) string { return v.Description }).(pulumi.StringOutput)
}

// Enhance ECMP Keying
func (o LookupTransportWanVpnFeatureResultOutput) EnhanceEcmpKeying() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) bool { return v.EnhanceEcmpKeying }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnFeatureResultOutput) EnhanceEcmpKeyingVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) string { return v.EnhanceEcmpKeyingVariable }).(pulumi.StringOutput)
}

// Feature Profile ID
func (o LookupTransportWanVpnFeatureResultOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) string { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The id of the Feature
func (o LookupTransportWanVpnFeatureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) string { return v.Id }).(pulumi.StringOutput)
}

// IPv4 Static Route
func (o LookupTransportWanVpnFeatureResultOutput) Ipv4StaticRoutes() GetTransportWanVpnFeatureIpv4StaticRouteArrayOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) []GetTransportWanVpnFeatureIpv4StaticRoute {
		return v.Ipv4StaticRoutes
	}).(GetTransportWanVpnFeatureIpv4StaticRouteArrayOutput)
}

// IPv6 Static Route
func (o LookupTransportWanVpnFeatureResultOutput) Ipv6StaticRoutes() GetTransportWanVpnFeatureIpv6StaticRouteArrayOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) []GetTransportWanVpnFeatureIpv6StaticRoute {
		return v.Ipv6StaticRoutes
	}).(GetTransportWanVpnFeatureIpv6StaticRouteArrayOutput)
}

// The name of the Feature
func (o LookupTransportWanVpnFeatureResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) string { return v.Name }).(pulumi.StringOutput)
}

// NAT64 V4 Pool
func (o LookupTransportWanVpnFeatureResultOutput) Nat64V4Pools() GetTransportWanVpnFeatureNat64V4PoolArrayOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) []GetTransportWanVpnFeatureNat64V4Pool {
		return v.Nat64V4Pools
	}).(GetTransportWanVpnFeatureNat64V4PoolArrayOutput)
}

func (o LookupTransportWanVpnFeatureResultOutput) NewHostMappings() GetTransportWanVpnFeatureNewHostMappingArrayOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) []GetTransportWanVpnFeatureNewHostMapping {
		return v.NewHostMappings
	}).(GetTransportWanVpnFeatureNewHostMappingArrayOutput)
}

// Primary DNS Address (IPv4)
func (o LookupTransportWanVpnFeatureResultOutput) PrimaryDnsAddressIpv4() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) string { return v.PrimaryDnsAddressIpv4 }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnFeatureResultOutput) PrimaryDnsAddressIpv4Variable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) string { return v.PrimaryDnsAddressIpv4Variable }).(pulumi.StringOutput)
}

// Primary DNS Address (IPv6)
func (o LookupTransportWanVpnFeatureResultOutput) PrimaryDnsAddressIpv6() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) string { return v.PrimaryDnsAddressIpv6 }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnFeatureResultOutput) PrimaryDnsAddressIpv6Variable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) string { return v.PrimaryDnsAddressIpv6Variable }).(pulumi.StringOutput)
}

// Secondary DNS Address (IPv4)
func (o LookupTransportWanVpnFeatureResultOutput) SecondaryDnsAddressIpv4() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) string { return v.SecondaryDnsAddressIpv4 }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnFeatureResultOutput) SecondaryDnsAddressIpv4Variable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) string { return v.SecondaryDnsAddressIpv4Variable }).(pulumi.StringOutput)
}

// Secondary DNS Address (IPv6)
func (o LookupTransportWanVpnFeatureResultOutput) SecondaryDnsAddressIpv6() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) string { return v.SecondaryDnsAddressIpv6 }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnFeatureResultOutput) SecondaryDnsAddressIpv6Variable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) string { return v.SecondaryDnsAddressIpv6Variable }).(pulumi.StringOutput)
}

// Service
func (o LookupTransportWanVpnFeatureResultOutput) Services() GetTransportWanVpnFeatureServiceArrayOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) []GetTransportWanVpnFeatureService { return v.Services }).(GetTransportWanVpnFeatureServiceArrayOutput)
}

// The version of the Feature
func (o LookupTransportWanVpnFeatureResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) int { return v.Version }).(pulumi.IntOutput)
}

// VPN
func (o LookupTransportWanVpnFeatureResultOutput) Vpn() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnFeatureResult) int { return v.Vpn }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTransportWanVpnFeatureResultOutput{})
}
