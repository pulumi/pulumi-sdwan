// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Service LAN VPN Interface SVI Feature.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupServiceLanVpnInterfaceSviFeature(ctx, &sdwan.LookupServiceLanVpnInterfaceSviFeatureArgs{
//				Id:                     "f6b2c44c-693c-4763-b010-895aa3d236bd",
//				FeatureProfileId:       "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
//				ServiceLanVpnFeatureId: "140331f6-5418-4755-a059-13c77eb96037",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupServiceLanVpnInterfaceSviFeature(ctx *pulumi.Context, args *LookupServiceLanVpnInterfaceSviFeatureArgs, opts ...pulumi.InvokeOption) (*LookupServiceLanVpnInterfaceSviFeatureResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceLanVpnInterfaceSviFeatureResult
	err := ctx.Invoke("sdwan:index/getServiceLanVpnInterfaceSviFeature:getServiceLanVpnInterfaceSviFeature", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceLanVpnInterfaceSviFeature.
type LookupServiceLanVpnInterfaceSviFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId string `pulumi:"serviceLanVpnFeatureId"`
}

// A collection of values returned by getServiceLanVpnInterfaceSviFeature.
type LookupServiceLanVpnInterfaceSviFeatureResult struct {
	// Timeout value for dynamically learned ARP entries, \n\n seconds
	ArpTimeout int `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable string `pulumi:"arpTimeoutVariable"`
	// Configure static ARP entries
	Arps []GetServiceLanVpnInterfaceSviFeatureArp `pulumi:"arps"`
	// The description of the Feature
	Description string `pulumi:"description"`
	// Enable DHCPv6
	EnableDhcpv6 bool `pulumi:"enableDhcpv6"`
	// Variable name
	EnableDhcpv6Variable string `pulumi:"enableDhcpv6Variable"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// ICMP/ICMPv6 Redirect Disable
	IcmpRedirectDisable bool `pulumi:"icmpRedirectDisable"`
	// Variable name
	IcmpRedirectDisableVariable string `pulumi:"icmpRedirectDisableVariable"`
	// The id of the Feature
	Id string `pulumi:"id"`
	// Interface description
	InterfaceDescription string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable string `pulumi:"interfaceDescriptionVariable"`
	// Interface MTU \n\n in bytes
	InterfaceMtu int `pulumi:"interfaceMtu"`
	// Variable name
	InterfaceMtuVariable string `pulumi:"interfaceMtuVariable"`
	// Interface name: VLAN 1 - VLAN 4094 when present
	InterfaceName string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable string `pulumi:"interfaceNameVariable"`
	// IP Directed-Broadcast
	IpDirectedBroadcast bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable string `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU \n\n, in bytes
	IpMtu int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable string `pulumi:"ipMtuVariable"`
	// IP Address
	Ipv4Address string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable string `pulumi:"ipv4AddressVariable"`
	// List of DHCP helper addresses
	Ipv4DhcpHelpers []string `pulumi:"ipv4DhcpHelpers"`
	// Variable name
	Ipv4DhcpHelpersVariable string `pulumi:"ipv4DhcpHelpersVariable"`
	// Assign secondary IP addresses
	Ipv4SecondaryAddresses []GetServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddress `pulumi:"ipv4SecondaryAddresses"`
	// Subnet Mask
	Ipv4SubnetMask string `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable string `pulumi:"ipv4SubnetMaskVariable"`
	// Enable ipv4 VRRP
	Ipv4Vrrps []GetServiceLanVpnInterfaceSviFeatureIpv4Vrrp `pulumi:"ipv4Vrrps"`
	// Assign IPv6 address
	Ipv6Address string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable string `pulumi:"ipv6AddressVariable"`
	// DHCPv6 Helper
	Ipv6DhcpHelpers []GetServiceLanVpnInterfaceSviFeatureIpv6DhcpHelper `pulumi:"ipv6DhcpHelpers"`
	// Assign secondary IPv6 addresses
	Ipv6SecondaryAddresses []GetServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddress `pulumi:"ipv6SecondaryAddresses"`
	// Enable ipv6 VRRP
	Ipv6Vrrps []GetServiceLanVpnInterfaceSviFeatureIpv6Vrrp `pulumi:"ipv6Vrrps"`
	// The name of the Feature
	Name string `pulumi:"name"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId string `pulumi:"serviceLanVpnFeatureId"`
	// Administrative state
	Shutdown bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable string `pulumi:"shutdownVariable"`
	// TCP MSS on SYN packets, in bytes
	TcpMss int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable string `pulumi:"tcpMssVariable"`
	// The version of the Feature
	Version int `pulumi:"version"`
}

func LookupServiceLanVpnInterfaceSviFeatureOutput(ctx *pulumi.Context, args LookupServiceLanVpnInterfaceSviFeatureOutputArgs, opts ...pulumi.InvokeOption) LookupServiceLanVpnInterfaceSviFeatureResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceLanVpnInterfaceSviFeatureResultOutput, error) {
			args := v.(LookupServiceLanVpnInterfaceSviFeatureArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupServiceLanVpnInterfaceSviFeatureResult
			secret, err := ctx.InvokePackageRaw("sdwan:index/getServiceLanVpnInterfaceSviFeature:getServiceLanVpnInterfaceSviFeature", args, &rv, "", opts...)
			if err != nil {
				return LookupServiceLanVpnInterfaceSviFeatureResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupServiceLanVpnInterfaceSviFeatureResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupServiceLanVpnInterfaceSviFeatureResultOutput), nil
			}
			return output, nil
		}).(LookupServiceLanVpnInterfaceSviFeatureResultOutput)
}

// A collection of arguments for invoking getServiceLanVpnInterfaceSviFeature.
type LookupServiceLanVpnInterfaceSviFeatureOutputArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput `pulumi:"featureProfileId"`
	// The id of the Feature
	Id pulumi.StringInput `pulumi:"id"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringInput `pulumi:"serviceLanVpnFeatureId"`
}

func (LookupServiceLanVpnInterfaceSviFeatureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceLanVpnInterfaceSviFeatureArgs)(nil)).Elem()
}

// A collection of values returned by getServiceLanVpnInterfaceSviFeature.
type LookupServiceLanVpnInterfaceSviFeatureResultOutput struct{ *pulumi.OutputState }

func (LookupServiceLanVpnInterfaceSviFeatureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceLanVpnInterfaceSviFeatureResult)(nil)).Elem()
}

func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) ToLookupServiceLanVpnInterfaceSviFeatureResultOutput() LookupServiceLanVpnInterfaceSviFeatureResultOutput {
	return o
}

func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) ToLookupServiceLanVpnInterfaceSviFeatureResultOutputWithContext(ctx context.Context) LookupServiceLanVpnInterfaceSviFeatureResultOutput {
	return o
}

// Timeout value for dynamically learned ARP entries, \n\n seconds
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) ArpTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) int { return v.ArpTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) ArpTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.ArpTimeoutVariable }).(pulumi.StringOutput)
}

// Configure static ARP entries
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Arps() GetServiceLanVpnInterfaceSviFeatureArpArrayOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) []GetServiceLanVpnInterfaceSviFeatureArp {
		return v.Arps
	}).(GetServiceLanVpnInterfaceSviFeatureArpArrayOutput)
}

// The description of the Feature
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.Description }).(pulumi.StringOutput)
}

// Enable DHCPv6
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) EnableDhcpv6() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) bool { return v.EnableDhcpv6 }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) EnableDhcpv6Variable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.EnableDhcpv6Variable }).(pulumi.StringOutput)
}

// Feature Profile ID
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// ICMP/ICMPv6 Redirect Disable
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) IcmpRedirectDisable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) bool { return v.IcmpRedirectDisable }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) IcmpRedirectDisableVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.IcmpRedirectDisableVariable }).(pulumi.StringOutput)
}

// The id of the Feature
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.Id }).(pulumi.StringOutput)
}

// Interface description
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) InterfaceDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.InterfaceDescription }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) InterfaceDescriptionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.InterfaceDescriptionVariable }).(pulumi.StringOutput)
}

// Interface MTU \n\n in bytes
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) InterfaceMtu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) int { return v.InterfaceMtu }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) InterfaceMtuVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.InterfaceMtuVariable }).(pulumi.StringOutput)
}

// Interface name: VLAN 1 - VLAN 4094 when present
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.InterfaceName }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) InterfaceNameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.InterfaceNameVariable }).(pulumi.StringOutput)
}

// IP Directed-Broadcast
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) IpDirectedBroadcast() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) bool { return v.IpDirectedBroadcast }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) IpDirectedBroadcastVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.IpDirectedBroadcastVariable }).(pulumi.StringOutput)
}

// IP MTU \n\n, in bytes
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) IpMtu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) int { return v.IpMtu }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) IpMtuVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.IpMtuVariable }).(pulumi.StringOutput)
}

// IP Address
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Ipv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.Ipv4Address }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Ipv4AddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.Ipv4AddressVariable }).(pulumi.StringOutput)
}

// List of DHCP helper addresses
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Ipv4DhcpHelpers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) []string { return v.Ipv4DhcpHelpers }).(pulumi.StringArrayOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Ipv4DhcpHelpersVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.Ipv4DhcpHelpersVariable }).(pulumi.StringOutput)
}

// Assign secondary IP addresses
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Ipv4SecondaryAddresses() GetServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddressArrayOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) []GetServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddress {
		return v.Ipv4SecondaryAddresses
	}).(GetServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddressArrayOutput)
}

// Subnet Mask
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Ipv4SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.Ipv4SubnetMask }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Ipv4SubnetMaskVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.Ipv4SubnetMaskVariable }).(pulumi.StringOutput)
}

// Enable ipv4 VRRP
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Ipv4Vrrps() GetServiceLanVpnInterfaceSviFeatureIpv4VrrpArrayOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) []GetServiceLanVpnInterfaceSviFeatureIpv4Vrrp {
		return v.Ipv4Vrrps
	}).(GetServiceLanVpnInterfaceSviFeatureIpv4VrrpArrayOutput)
}

// Assign IPv6 address
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Ipv6AddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.Ipv6AddressVariable }).(pulumi.StringOutput)
}

// DHCPv6 Helper
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Ipv6DhcpHelpers() GetServiceLanVpnInterfaceSviFeatureIpv6DhcpHelperArrayOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) []GetServiceLanVpnInterfaceSviFeatureIpv6DhcpHelper {
		return v.Ipv6DhcpHelpers
	}).(GetServiceLanVpnInterfaceSviFeatureIpv6DhcpHelperArrayOutput)
}

// Assign secondary IPv6 addresses
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Ipv6SecondaryAddresses() GetServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddressArrayOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) []GetServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddress {
		return v.Ipv6SecondaryAddresses
	}).(GetServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddressArrayOutput)
}

// Enable ipv6 VRRP
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Ipv6Vrrps() GetServiceLanVpnInterfaceSviFeatureIpv6VrrpArrayOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) []GetServiceLanVpnInterfaceSviFeatureIpv6Vrrp {
		return v.Ipv6Vrrps
	}).(GetServiceLanVpnInterfaceSviFeatureIpv6VrrpArrayOutput)
}

// The name of the Feature
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.Name }).(pulumi.StringOutput)
}

// Service LAN VPN Feature ID
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) ServiceLanVpnFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.ServiceLanVpnFeatureId }).(pulumi.StringOutput)
}

// Administrative state
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Shutdown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) bool { return v.Shutdown }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) ShutdownVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.ShutdownVariable }).(pulumi.StringOutput)
}

// TCP MSS on SYN packets, in bytes
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) TcpMss() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) int { return v.TcpMss }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) TcpMssVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) string { return v.TcpMssVariable }).(pulumi.StringOutput)
}

// The version of the Feature
func (o LookupServiceLanVpnInterfaceSviFeatureResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceSviFeatureResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceLanVpnInterfaceSviFeatureResultOutput{})
}
