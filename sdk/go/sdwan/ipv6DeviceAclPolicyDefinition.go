// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a IPv6 Device ACL Policy Definition .
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/ipv6DeviceAclPolicyDefinition:Ipv6DeviceAclPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type Ipv6DeviceAclPolicyDefinition struct {
	pulumi.CustomResourceState

	// Default action, either `accept` or `drop`
	//   - Choices: `accept`, `drop`
	DefaultAction pulumi.StringPtrOutput `pulumi:"defaultAction"`
	// The description of the policy definition
	Description pulumi.StringOutput `pulumi:"description"`
	// The name of the policy definition
	Name pulumi.StringOutput `pulumi:"name"`
	// List of ACL sequences
	Sequences Ipv6DeviceAclPolicyDefinitionSequenceArrayOutput `pulumi:"sequences"`
	// Type
	Type pulumi.StringOutput `pulumi:"type"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewIpv6DeviceAclPolicyDefinition registers a new resource with the given unique name, arguments, and options.
func NewIpv6DeviceAclPolicyDefinition(ctx *pulumi.Context,
	name string, args *Ipv6DeviceAclPolicyDefinitionArgs, opts ...pulumi.ResourceOption) (*Ipv6DeviceAclPolicyDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Sequences == nil {
		return nil, errors.New("invalid value for required argument 'Sequences'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ipv6DeviceAclPolicyDefinition
	err := ctx.RegisterResource("sdwan:index/ipv6DeviceAclPolicyDefinition:Ipv6DeviceAclPolicyDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpv6DeviceAclPolicyDefinition gets an existing Ipv6DeviceAclPolicyDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpv6DeviceAclPolicyDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Ipv6DeviceAclPolicyDefinitionState, opts ...pulumi.ResourceOption) (*Ipv6DeviceAclPolicyDefinition, error) {
	var resource Ipv6DeviceAclPolicyDefinition
	err := ctx.ReadResource("sdwan:index/ipv6DeviceAclPolicyDefinition:Ipv6DeviceAclPolicyDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ipv6DeviceAclPolicyDefinition resources.
type ipv6DeviceAclPolicyDefinitionState struct {
	// Default action, either `accept` or `drop`
	//   - Choices: `accept`, `drop`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the policy definition
	Description *string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of ACL sequences
	Sequences []Ipv6DeviceAclPolicyDefinitionSequence `pulumi:"sequences"`
	// Type
	Type *string `pulumi:"type"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type Ipv6DeviceAclPolicyDefinitionState struct {
	// Default action, either `accept` or `drop`
	//   - Choices: `accept`, `drop`
	DefaultAction pulumi.StringPtrInput
	// The description of the policy definition
	Description pulumi.StringPtrInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of ACL sequences
	Sequences Ipv6DeviceAclPolicyDefinitionSequenceArrayInput
	// Type
	Type pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (Ipv6DeviceAclPolicyDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipv6DeviceAclPolicyDefinitionState)(nil)).Elem()
}

type ipv6DeviceAclPolicyDefinitionArgs struct {
	// Default action, either `accept` or `drop`
	//   - Choices: `accept`, `drop`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the policy definition
	Description string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of ACL sequences
	Sequences []Ipv6DeviceAclPolicyDefinitionSequence `pulumi:"sequences"`
}

// The set of arguments for constructing a Ipv6DeviceAclPolicyDefinition resource.
type Ipv6DeviceAclPolicyDefinitionArgs struct {
	// Default action, either `accept` or `drop`
	//   - Choices: `accept`, `drop`
	DefaultAction pulumi.StringPtrInput
	// The description of the policy definition
	Description pulumi.StringInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of ACL sequences
	Sequences Ipv6DeviceAclPolicyDefinitionSequenceArrayInput
}

func (Ipv6DeviceAclPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipv6DeviceAclPolicyDefinitionArgs)(nil)).Elem()
}

type Ipv6DeviceAclPolicyDefinitionInput interface {
	pulumi.Input

	ToIpv6DeviceAclPolicyDefinitionOutput() Ipv6DeviceAclPolicyDefinitionOutput
	ToIpv6DeviceAclPolicyDefinitionOutputWithContext(ctx context.Context) Ipv6DeviceAclPolicyDefinitionOutput
}

func (*Ipv6DeviceAclPolicyDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6DeviceAclPolicyDefinition)(nil)).Elem()
}

func (i *Ipv6DeviceAclPolicyDefinition) ToIpv6DeviceAclPolicyDefinitionOutput() Ipv6DeviceAclPolicyDefinitionOutput {
	return i.ToIpv6DeviceAclPolicyDefinitionOutputWithContext(context.Background())
}

func (i *Ipv6DeviceAclPolicyDefinition) ToIpv6DeviceAclPolicyDefinitionOutputWithContext(ctx context.Context) Ipv6DeviceAclPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6DeviceAclPolicyDefinitionOutput)
}

// Ipv6DeviceAclPolicyDefinitionArrayInput is an input type that accepts Ipv6DeviceAclPolicyDefinitionArray and Ipv6DeviceAclPolicyDefinitionArrayOutput values.
// You can construct a concrete instance of `Ipv6DeviceAclPolicyDefinitionArrayInput` via:
//
//	Ipv6DeviceAclPolicyDefinitionArray{ Ipv6DeviceAclPolicyDefinitionArgs{...} }
type Ipv6DeviceAclPolicyDefinitionArrayInput interface {
	pulumi.Input

	ToIpv6DeviceAclPolicyDefinitionArrayOutput() Ipv6DeviceAclPolicyDefinitionArrayOutput
	ToIpv6DeviceAclPolicyDefinitionArrayOutputWithContext(context.Context) Ipv6DeviceAclPolicyDefinitionArrayOutput
}

type Ipv6DeviceAclPolicyDefinitionArray []Ipv6DeviceAclPolicyDefinitionInput

func (Ipv6DeviceAclPolicyDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ipv6DeviceAclPolicyDefinition)(nil)).Elem()
}

func (i Ipv6DeviceAclPolicyDefinitionArray) ToIpv6DeviceAclPolicyDefinitionArrayOutput() Ipv6DeviceAclPolicyDefinitionArrayOutput {
	return i.ToIpv6DeviceAclPolicyDefinitionArrayOutputWithContext(context.Background())
}

func (i Ipv6DeviceAclPolicyDefinitionArray) ToIpv6DeviceAclPolicyDefinitionArrayOutputWithContext(ctx context.Context) Ipv6DeviceAclPolicyDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6DeviceAclPolicyDefinitionArrayOutput)
}

// Ipv6DeviceAclPolicyDefinitionMapInput is an input type that accepts Ipv6DeviceAclPolicyDefinitionMap and Ipv6DeviceAclPolicyDefinitionMapOutput values.
// You can construct a concrete instance of `Ipv6DeviceAclPolicyDefinitionMapInput` via:
//
//	Ipv6DeviceAclPolicyDefinitionMap{ "key": Ipv6DeviceAclPolicyDefinitionArgs{...} }
type Ipv6DeviceAclPolicyDefinitionMapInput interface {
	pulumi.Input

	ToIpv6DeviceAclPolicyDefinitionMapOutput() Ipv6DeviceAclPolicyDefinitionMapOutput
	ToIpv6DeviceAclPolicyDefinitionMapOutputWithContext(context.Context) Ipv6DeviceAclPolicyDefinitionMapOutput
}

type Ipv6DeviceAclPolicyDefinitionMap map[string]Ipv6DeviceAclPolicyDefinitionInput

func (Ipv6DeviceAclPolicyDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ipv6DeviceAclPolicyDefinition)(nil)).Elem()
}

func (i Ipv6DeviceAclPolicyDefinitionMap) ToIpv6DeviceAclPolicyDefinitionMapOutput() Ipv6DeviceAclPolicyDefinitionMapOutput {
	return i.ToIpv6DeviceAclPolicyDefinitionMapOutputWithContext(context.Background())
}

func (i Ipv6DeviceAclPolicyDefinitionMap) ToIpv6DeviceAclPolicyDefinitionMapOutputWithContext(ctx context.Context) Ipv6DeviceAclPolicyDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6DeviceAclPolicyDefinitionMapOutput)
}

type Ipv6DeviceAclPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (Ipv6DeviceAclPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6DeviceAclPolicyDefinition)(nil)).Elem()
}

func (o Ipv6DeviceAclPolicyDefinitionOutput) ToIpv6DeviceAclPolicyDefinitionOutput() Ipv6DeviceAclPolicyDefinitionOutput {
	return o
}

func (o Ipv6DeviceAclPolicyDefinitionOutput) ToIpv6DeviceAclPolicyDefinitionOutputWithContext(ctx context.Context) Ipv6DeviceAclPolicyDefinitionOutput {
	return o
}

// Default action, either `accept` or `drop`
//   - Choices: `accept`, `drop`
func (o Ipv6DeviceAclPolicyDefinitionOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6DeviceAclPolicyDefinition) pulumi.StringPtrOutput { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// The description of the policy definition
func (o Ipv6DeviceAclPolicyDefinitionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv6DeviceAclPolicyDefinition) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The name of the policy definition
func (o Ipv6DeviceAclPolicyDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv6DeviceAclPolicyDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of ACL sequences
func (o Ipv6DeviceAclPolicyDefinitionOutput) Sequences() Ipv6DeviceAclPolicyDefinitionSequenceArrayOutput {
	return o.ApplyT(func(v *Ipv6DeviceAclPolicyDefinition) Ipv6DeviceAclPolicyDefinitionSequenceArrayOutput {
		return v.Sequences
	}).(Ipv6DeviceAclPolicyDefinitionSequenceArrayOutput)
}

// Type
func (o Ipv6DeviceAclPolicyDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv6DeviceAclPolicyDefinition) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The version of the object
func (o Ipv6DeviceAclPolicyDefinitionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *Ipv6DeviceAclPolicyDefinition) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type Ipv6DeviceAclPolicyDefinitionArrayOutput struct{ *pulumi.OutputState }

func (Ipv6DeviceAclPolicyDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ipv6DeviceAclPolicyDefinition)(nil)).Elem()
}

func (o Ipv6DeviceAclPolicyDefinitionArrayOutput) ToIpv6DeviceAclPolicyDefinitionArrayOutput() Ipv6DeviceAclPolicyDefinitionArrayOutput {
	return o
}

func (o Ipv6DeviceAclPolicyDefinitionArrayOutput) ToIpv6DeviceAclPolicyDefinitionArrayOutputWithContext(ctx context.Context) Ipv6DeviceAclPolicyDefinitionArrayOutput {
	return o
}

func (o Ipv6DeviceAclPolicyDefinitionArrayOutput) Index(i pulumi.IntInput) Ipv6DeviceAclPolicyDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ipv6DeviceAclPolicyDefinition {
		return vs[0].([]*Ipv6DeviceAclPolicyDefinition)[vs[1].(int)]
	}).(Ipv6DeviceAclPolicyDefinitionOutput)
}

type Ipv6DeviceAclPolicyDefinitionMapOutput struct{ *pulumi.OutputState }

func (Ipv6DeviceAclPolicyDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ipv6DeviceAclPolicyDefinition)(nil)).Elem()
}

func (o Ipv6DeviceAclPolicyDefinitionMapOutput) ToIpv6DeviceAclPolicyDefinitionMapOutput() Ipv6DeviceAclPolicyDefinitionMapOutput {
	return o
}

func (o Ipv6DeviceAclPolicyDefinitionMapOutput) ToIpv6DeviceAclPolicyDefinitionMapOutputWithContext(ctx context.Context) Ipv6DeviceAclPolicyDefinitionMapOutput {
	return o
}

func (o Ipv6DeviceAclPolicyDefinitionMapOutput) MapIndex(k pulumi.StringInput) Ipv6DeviceAclPolicyDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ipv6DeviceAclPolicyDefinition {
		return vs[0].(map[string]*Ipv6DeviceAclPolicyDefinition)[vs[1].(string)]
	}).(Ipv6DeviceAclPolicyDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6DeviceAclPolicyDefinitionInput)(nil)).Elem(), &Ipv6DeviceAclPolicyDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6DeviceAclPolicyDefinitionArrayInput)(nil)).Elem(), Ipv6DeviceAclPolicyDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6DeviceAclPolicyDefinitionMapInput)(nil)).Elem(), Ipv6DeviceAclPolicyDefinitionMap{})
	pulumi.RegisterOutputType(Ipv6DeviceAclPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(Ipv6DeviceAclPolicyDefinitionArrayOutput{})
	pulumi.RegisterOutputType(Ipv6DeviceAclPolicyDefinitionMapOutput{})
}
