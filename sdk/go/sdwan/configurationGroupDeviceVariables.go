// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Configuration Group Device Variables .
//   - Minimum SD-WAN Manager version: `20.12.0`
type ConfigurationGroupDeviceVariables struct {
	pulumi.CustomResourceState

	// Configuration Group ID
	ConfigurationGroupId pulumi.StringOutput `pulumi:"configurationGroupId"`
	// List of devices
	Devices ConfigurationGroupDeviceVariablesDeviceArrayOutput `pulumi:"devices"`
	// List of device groups
	Groups ConfigurationGroupDeviceVariablesGroupArrayOutput `pulumi:"groups"`
	// Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
	Solution pulumi.StringOutput `pulumi:"solution"`
}

// NewConfigurationGroupDeviceVariables registers a new resource with the given unique name, arguments, and options.
func NewConfigurationGroupDeviceVariables(ctx *pulumi.Context,
	name string, args *ConfigurationGroupDeviceVariablesArgs, opts ...pulumi.ResourceOption) (*ConfigurationGroupDeviceVariables, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigurationGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationGroupId'")
	}
	if args.Devices == nil {
		return nil, errors.New("invalid value for required argument 'Devices'")
	}
	if args.Solution == nil {
		return nil, errors.New("invalid value for required argument 'Solution'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConfigurationGroupDeviceVariables
	err := ctx.RegisterResource("sdwan:index/configurationGroupDeviceVariables:ConfigurationGroupDeviceVariables", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigurationGroupDeviceVariables gets an existing ConfigurationGroupDeviceVariables resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigurationGroupDeviceVariables(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigurationGroupDeviceVariablesState, opts ...pulumi.ResourceOption) (*ConfigurationGroupDeviceVariables, error) {
	var resource ConfigurationGroupDeviceVariables
	err := ctx.ReadResource("sdwan:index/configurationGroupDeviceVariables:ConfigurationGroupDeviceVariables", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigurationGroupDeviceVariables resources.
type configurationGroupDeviceVariablesState struct {
	// Configuration Group ID
	ConfigurationGroupId *string `pulumi:"configurationGroupId"`
	// List of devices
	Devices []ConfigurationGroupDeviceVariablesDevice `pulumi:"devices"`
	// List of device groups
	Groups []ConfigurationGroupDeviceVariablesGroup `pulumi:"groups"`
	// Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
	Solution *string `pulumi:"solution"`
}

type ConfigurationGroupDeviceVariablesState struct {
	// Configuration Group ID
	ConfigurationGroupId pulumi.StringPtrInput
	// List of devices
	Devices ConfigurationGroupDeviceVariablesDeviceArrayInput
	// List of device groups
	Groups ConfigurationGroupDeviceVariablesGroupArrayInput
	// Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
	Solution pulumi.StringPtrInput
}

func (ConfigurationGroupDeviceVariablesState) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationGroupDeviceVariablesState)(nil)).Elem()
}

type configurationGroupDeviceVariablesArgs struct {
	// Configuration Group ID
	ConfigurationGroupId string `pulumi:"configurationGroupId"`
	// List of devices
	Devices []ConfigurationGroupDeviceVariablesDevice `pulumi:"devices"`
	// List of device groups
	Groups []ConfigurationGroupDeviceVariablesGroup `pulumi:"groups"`
	// Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
	Solution string `pulumi:"solution"`
}

// The set of arguments for constructing a ConfigurationGroupDeviceVariables resource.
type ConfigurationGroupDeviceVariablesArgs struct {
	// Configuration Group ID
	ConfigurationGroupId pulumi.StringInput
	// List of devices
	Devices ConfigurationGroupDeviceVariablesDeviceArrayInput
	// List of device groups
	Groups ConfigurationGroupDeviceVariablesGroupArrayInput
	// Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
	Solution pulumi.StringInput
}

func (ConfigurationGroupDeviceVariablesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationGroupDeviceVariablesArgs)(nil)).Elem()
}

type ConfigurationGroupDeviceVariablesInput interface {
	pulumi.Input

	ToConfigurationGroupDeviceVariablesOutput() ConfigurationGroupDeviceVariablesOutput
	ToConfigurationGroupDeviceVariablesOutputWithContext(ctx context.Context) ConfigurationGroupDeviceVariablesOutput
}

func (*ConfigurationGroupDeviceVariables) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationGroupDeviceVariables)(nil)).Elem()
}

func (i *ConfigurationGroupDeviceVariables) ToConfigurationGroupDeviceVariablesOutput() ConfigurationGroupDeviceVariablesOutput {
	return i.ToConfigurationGroupDeviceVariablesOutputWithContext(context.Background())
}

func (i *ConfigurationGroupDeviceVariables) ToConfigurationGroupDeviceVariablesOutputWithContext(ctx context.Context) ConfigurationGroupDeviceVariablesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationGroupDeviceVariablesOutput)
}

// ConfigurationGroupDeviceVariablesArrayInput is an input type that accepts ConfigurationGroupDeviceVariablesArray and ConfigurationGroupDeviceVariablesArrayOutput values.
// You can construct a concrete instance of `ConfigurationGroupDeviceVariablesArrayInput` via:
//
//	ConfigurationGroupDeviceVariablesArray{ ConfigurationGroupDeviceVariablesArgs{...} }
type ConfigurationGroupDeviceVariablesArrayInput interface {
	pulumi.Input

	ToConfigurationGroupDeviceVariablesArrayOutput() ConfigurationGroupDeviceVariablesArrayOutput
	ToConfigurationGroupDeviceVariablesArrayOutputWithContext(context.Context) ConfigurationGroupDeviceVariablesArrayOutput
}

type ConfigurationGroupDeviceVariablesArray []ConfigurationGroupDeviceVariablesInput

func (ConfigurationGroupDeviceVariablesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigurationGroupDeviceVariables)(nil)).Elem()
}

func (i ConfigurationGroupDeviceVariablesArray) ToConfigurationGroupDeviceVariablesArrayOutput() ConfigurationGroupDeviceVariablesArrayOutput {
	return i.ToConfigurationGroupDeviceVariablesArrayOutputWithContext(context.Background())
}

func (i ConfigurationGroupDeviceVariablesArray) ToConfigurationGroupDeviceVariablesArrayOutputWithContext(ctx context.Context) ConfigurationGroupDeviceVariablesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationGroupDeviceVariablesArrayOutput)
}

// ConfigurationGroupDeviceVariablesMapInput is an input type that accepts ConfigurationGroupDeviceVariablesMap and ConfigurationGroupDeviceVariablesMapOutput values.
// You can construct a concrete instance of `ConfigurationGroupDeviceVariablesMapInput` via:
//
//	ConfigurationGroupDeviceVariablesMap{ "key": ConfigurationGroupDeviceVariablesArgs{...} }
type ConfigurationGroupDeviceVariablesMapInput interface {
	pulumi.Input

	ToConfigurationGroupDeviceVariablesMapOutput() ConfigurationGroupDeviceVariablesMapOutput
	ToConfigurationGroupDeviceVariablesMapOutputWithContext(context.Context) ConfigurationGroupDeviceVariablesMapOutput
}

type ConfigurationGroupDeviceVariablesMap map[string]ConfigurationGroupDeviceVariablesInput

func (ConfigurationGroupDeviceVariablesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigurationGroupDeviceVariables)(nil)).Elem()
}

func (i ConfigurationGroupDeviceVariablesMap) ToConfigurationGroupDeviceVariablesMapOutput() ConfigurationGroupDeviceVariablesMapOutput {
	return i.ToConfigurationGroupDeviceVariablesMapOutputWithContext(context.Background())
}

func (i ConfigurationGroupDeviceVariablesMap) ToConfigurationGroupDeviceVariablesMapOutputWithContext(ctx context.Context) ConfigurationGroupDeviceVariablesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationGroupDeviceVariablesMapOutput)
}

type ConfigurationGroupDeviceVariablesOutput struct{ *pulumi.OutputState }

func (ConfigurationGroupDeviceVariablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationGroupDeviceVariables)(nil)).Elem()
}

func (o ConfigurationGroupDeviceVariablesOutput) ToConfigurationGroupDeviceVariablesOutput() ConfigurationGroupDeviceVariablesOutput {
	return o
}

func (o ConfigurationGroupDeviceVariablesOutput) ToConfigurationGroupDeviceVariablesOutputWithContext(ctx context.Context) ConfigurationGroupDeviceVariablesOutput {
	return o
}

// Configuration Group ID
func (o ConfigurationGroupDeviceVariablesOutput) ConfigurationGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationGroupDeviceVariables) pulumi.StringOutput { return v.ConfigurationGroupId }).(pulumi.StringOutput)
}

// List of devices
func (o ConfigurationGroupDeviceVariablesOutput) Devices() ConfigurationGroupDeviceVariablesDeviceArrayOutput {
	return o.ApplyT(func(v *ConfigurationGroupDeviceVariables) ConfigurationGroupDeviceVariablesDeviceArrayOutput {
		return v.Devices
	}).(ConfigurationGroupDeviceVariablesDeviceArrayOutput)
}

// List of device groups
func (o ConfigurationGroupDeviceVariablesOutput) Groups() ConfigurationGroupDeviceVariablesGroupArrayOutput {
	return o.ApplyT(func(v *ConfigurationGroupDeviceVariables) ConfigurationGroupDeviceVariablesGroupArrayOutput {
		return v.Groups
	}).(ConfigurationGroupDeviceVariablesGroupArrayOutput)
}

// Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
func (o ConfigurationGroupDeviceVariablesOutput) Solution() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationGroupDeviceVariables) pulumi.StringOutput { return v.Solution }).(pulumi.StringOutput)
}

type ConfigurationGroupDeviceVariablesArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationGroupDeviceVariablesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigurationGroupDeviceVariables)(nil)).Elem()
}

func (o ConfigurationGroupDeviceVariablesArrayOutput) ToConfigurationGroupDeviceVariablesArrayOutput() ConfigurationGroupDeviceVariablesArrayOutput {
	return o
}

func (o ConfigurationGroupDeviceVariablesArrayOutput) ToConfigurationGroupDeviceVariablesArrayOutputWithContext(ctx context.Context) ConfigurationGroupDeviceVariablesArrayOutput {
	return o
}

func (o ConfigurationGroupDeviceVariablesArrayOutput) Index(i pulumi.IntInput) ConfigurationGroupDeviceVariablesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConfigurationGroupDeviceVariables {
		return vs[0].([]*ConfigurationGroupDeviceVariables)[vs[1].(int)]
	}).(ConfigurationGroupDeviceVariablesOutput)
}

type ConfigurationGroupDeviceVariablesMapOutput struct{ *pulumi.OutputState }

func (ConfigurationGroupDeviceVariablesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigurationGroupDeviceVariables)(nil)).Elem()
}

func (o ConfigurationGroupDeviceVariablesMapOutput) ToConfigurationGroupDeviceVariablesMapOutput() ConfigurationGroupDeviceVariablesMapOutput {
	return o
}

func (o ConfigurationGroupDeviceVariablesMapOutput) ToConfigurationGroupDeviceVariablesMapOutputWithContext(ctx context.Context) ConfigurationGroupDeviceVariablesMapOutput {
	return o
}

func (o ConfigurationGroupDeviceVariablesMapOutput) MapIndex(k pulumi.StringInput) ConfigurationGroupDeviceVariablesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConfigurationGroupDeviceVariables {
		return vs[0].(map[string]*ConfigurationGroupDeviceVariables)[vs[1].(string)]
	}).(ConfigurationGroupDeviceVariablesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationGroupDeviceVariablesInput)(nil)).Elem(), &ConfigurationGroupDeviceVariables{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationGroupDeviceVariablesArrayInput)(nil)).Elem(), ConfigurationGroupDeviceVariablesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationGroupDeviceVariablesMapInput)(nil)).Elem(), ConfigurationGroupDeviceVariablesMap{})
	pulumi.RegisterOutputType(ConfigurationGroupDeviceVariablesOutput{})
	pulumi.RegisterOutputType(ConfigurationGroupDeviceVariablesArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationGroupDeviceVariablesMapOutput{})
}
