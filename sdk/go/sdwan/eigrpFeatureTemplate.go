// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a eigrp feature template.
//   - Minimum SD-WAN Manager version: `15.0.0`
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/eigrpFeatureTemplate:EigrpFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type EigrpFeatureTemplate struct {
	pulumi.CustomResourceState

	// Set EIGRP address family
	AddressFamilies EigrpFeatureTemplateAddressFamilyArrayOutput `pulumi:"addressFamilies"`
	// Set autonomous system ID <1..65535> - Range: `1`-`65535`
	AsNumber pulumi.IntPtrOutput `pulumi:"asNumber"`
	// Variable name
	AsNumberVariable pulumi.StringPtrOutput `pulumi:"asNumberVariable"`
	// Set EIGRP router authentication type - Choices: `md5`, `hmac-sha-256`
	AuthenticationType pulumi.StringPtrOutput `pulumi:"authenticationType"`
	// Variable name
	AuthenticationTypeVariable pulumi.StringPtrOutput `pulumi:"authenticationTypeVariable"`
	// The description of the feature template
	Description pulumi.StringOutput `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayOutput `pulumi:"deviceTypes"`
	// Selective route download - Default value: `false`
	Filter pulumi.BoolPtrOutput `pulumi:"filter"`
	// Variable name
	FilterVariable pulumi.StringPtrOutput `pulumi:"filterVariable"`
	// Set EIGRP hello interval - Range: `0`-`65535` - Default value: `5`
	HelloInterval pulumi.IntPtrOutput `pulumi:"helloInterval"`
	// Variable name
	HelloIntervalVariable pulumi.StringPtrOutput `pulumi:"helloIntervalVariable"`
	// Set hmac-sha-256 authentication key
	HmacAuthenticationKey pulumi.StringPtrOutput `pulumi:"hmacAuthenticationKey"`
	// Variable name
	HmacAuthenticationKeyVariable pulumi.StringPtrOutput `pulumi:"hmacAuthenticationKeyVariable"`
	// Set EIGRP hold time - Range: `0`-`65535` - Default value: `15`
	HoldTime pulumi.IntPtrOutput `pulumi:"holdTime"`
	// Variable name
	HoldTimeVariable pulumi.StringPtrOutput `pulumi:"holdTimeVariable"`
	// Configure IPv4 Static Routes
	Interfaces EigrpFeatureTemplateInterfaceArrayOutput `pulumi:"interfaces"`
	// Set keychain name
	Keys EigrpFeatureTemplateKeyArrayOutput `pulumi:"keys"`
	// The name of the feature template
	Name pulumi.StringOutput `pulumi:"name"`
	// Configure policy to apply to prefixes received from EIGRP neighbor
	RoutePolicyName pulumi.StringPtrOutput `pulumi:"routePolicyName"`
	// Variable name
	RoutePolicyNameVariable pulumi.StringPtrOutput `pulumi:"routePolicyNameVariable"`
	// The template type
	TemplateType pulumi.StringOutput `pulumi:"templateType"`
	// The version of the feature template
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewEigrpFeatureTemplate registers a new resource with the given unique name, arguments, and options.
func NewEigrpFeatureTemplate(ctx *pulumi.Context,
	name string, args *EigrpFeatureTemplateArgs, opts ...pulumi.ResourceOption) (*EigrpFeatureTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.DeviceTypes == nil {
		return nil, errors.New("invalid value for required argument 'DeviceTypes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EigrpFeatureTemplate
	err := ctx.RegisterResource("sdwan:index/eigrpFeatureTemplate:EigrpFeatureTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEigrpFeatureTemplate gets an existing EigrpFeatureTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEigrpFeatureTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EigrpFeatureTemplateState, opts ...pulumi.ResourceOption) (*EigrpFeatureTemplate, error) {
	var resource EigrpFeatureTemplate
	err := ctx.ReadResource("sdwan:index/eigrpFeatureTemplate:EigrpFeatureTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EigrpFeatureTemplate resources.
type eigrpFeatureTemplateState struct {
	// Set EIGRP address family
	AddressFamilies []EigrpFeatureTemplateAddressFamily `pulumi:"addressFamilies"`
	// Set autonomous system ID <1..65535> - Range: `1`-`65535`
	AsNumber *int `pulumi:"asNumber"`
	// Variable name
	AsNumberVariable *string `pulumi:"asNumberVariable"`
	// Set EIGRP router authentication type - Choices: `md5`, `hmac-sha-256`
	AuthenticationType *string `pulumi:"authenticationType"`
	// Variable name
	AuthenticationTypeVariable *string `pulumi:"authenticationTypeVariable"`
	// The description of the feature template
	Description *string `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Selective route download - Default value: `false`
	Filter *bool `pulumi:"filter"`
	// Variable name
	FilterVariable *string `pulumi:"filterVariable"`
	// Set EIGRP hello interval - Range: `0`-`65535` - Default value: `5`
	HelloInterval *int `pulumi:"helloInterval"`
	// Variable name
	HelloIntervalVariable *string `pulumi:"helloIntervalVariable"`
	// Set hmac-sha-256 authentication key
	HmacAuthenticationKey *string `pulumi:"hmacAuthenticationKey"`
	// Variable name
	HmacAuthenticationKeyVariable *string `pulumi:"hmacAuthenticationKeyVariable"`
	// Set EIGRP hold time - Range: `0`-`65535` - Default value: `15`
	HoldTime *int `pulumi:"holdTime"`
	// Variable name
	HoldTimeVariable *string `pulumi:"holdTimeVariable"`
	// Configure IPv4 Static Routes
	Interfaces []EigrpFeatureTemplateInterface `pulumi:"interfaces"`
	// Set keychain name
	Keys []EigrpFeatureTemplateKey `pulumi:"keys"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Configure policy to apply to prefixes received from EIGRP neighbor
	RoutePolicyName *string `pulumi:"routePolicyName"`
	// Variable name
	RoutePolicyNameVariable *string `pulumi:"routePolicyNameVariable"`
	// The template type
	TemplateType *string `pulumi:"templateType"`
	// The version of the feature template
	Version *int `pulumi:"version"`
}

type EigrpFeatureTemplateState struct {
	// Set EIGRP address family
	AddressFamilies EigrpFeatureTemplateAddressFamilyArrayInput
	// Set autonomous system ID <1..65535> - Range: `1`-`65535`
	AsNumber pulumi.IntPtrInput
	// Variable name
	AsNumberVariable pulumi.StringPtrInput
	// Set EIGRP router authentication type - Choices: `md5`, `hmac-sha-256`
	AuthenticationType pulumi.StringPtrInput
	// Variable name
	AuthenticationTypeVariable pulumi.StringPtrInput
	// The description of the feature template
	Description pulumi.StringPtrInput
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Selective route download - Default value: `false`
	Filter pulumi.BoolPtrInput
	// Variable name
	FilterVariable pulumi.StringPtrInput
	// Set EIGRP hello interval - Range: `0`-`65535` - Default value: `5`
	HelloInterval pulumi.IntPtrInput
	// Variable name
	HelloIntervalVariable pulumi.StringPtrInput
	// Set hmac-sha-256 authentication key
	HmacAuthenticationKey pulumi.StringPtrInput
	// Variable name
	HmacAuthenticationKeyVariable pulumi.StringPtrInput
	// Set EIGRP hold time - Range: `0`-`65535` - Default value: `15`
	HoldTime pulumi.IntPtrInput
	// Variable name
	HoldTimeVariable pulumi.StringPtrInput
	// Configure IPv4 Static Routes
	Interfaces EigrpFeatureTemplateInterfaceArrayInput
	// Set keychain name
	Keys EigrpFeatureTemplateKeyArrayInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Configure policy to apply to prefixes received from EIGRP neighbor
	RoutePolicyName pulumi.StringPtrInput
	// Variable name
	RoutePolicyNameVariable pulumi.StringPtrInput
	// The template type
	TemplateType pulumi.StringPtrInput
	// The version of the feature template
	Version pulumi.IntPtrInput
}

func (EigrpFeatureTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*eigrpFeatureTemplateState)(nil)).Elem()
}

type eigrpFeatureTemplateArgs struct {
	// Set EIGRP address family
	AddressFamilies []EigrpFeatureTemplateAddressFamily `pulumi:"addressFamilies"`
	// Set autonomous system ID <1..65535> - Range: `1`-`65535`
	AsNumber *int `pulumi:"asNumber"`
	// Variable name
	AsNumberVariable *string `pulumi:"asNumberVariable"`
	// Set EIGRP router authentication type - Choices: `md5`, `hmac-sha-256`
	AuthenticationType *string `pulumi:"authenticationType"`
	// Variable name
	AuthenticationTypeVariable *string `pulumi:"authenticationTypeVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Selective route download - Default value: `false`
	Filter *bool `pulumi:"filter"`
	// Variable name
	FilterVariable *string `pulumi:"filterVariable"`
	// Set EIGRP hello interval - Range: `0`-`65535` - Default value: `5`
	HelloInterval *int `pulumi:"helloInterval"`
	// Variable name
	HelloIntervalVariable *string `pulumi:"helloIntervalVariable"`
	// Set hmac-sha-256 authentication key
	HmacAuthenticationKey *string `pulumi:"hmacAuthenticationKey"`
	// Variable name
	HmacAuthenticationKeyVariable *string `pulumi:"hmacAuthenticationKeyVariable"`
	// Set EIGRP hold time - Range: `0`-`65535` - Default value: `15`
	HoldTime *int `pulumi:"holdTime"`
	// Variable name
	HoldTimeVariable *string `pulumi:"holdTimeVariable"`
	// Configure IPv4 Static Routes
	Interfaces []EigrpFeatureTemplateInterface `pulumi:"interfaces"`
	// Set keychain name
	Keys []EigrpFeatureTemplateKey `pulumi:"keys"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Configure policy to apply to prefixes received from EIGRP neighbor
	RoutePolicyName *string `pulumi:"routePolicyName"`
	// Variable name
	RoutePolicyNameVariable *string `pulumi:"routePolicyNameVariable"`
}

// The set of arguments for constructing a EigrpFeatureTemplate resource.
type EigrpFeatureTemplateArgs struct {
	// Set EIGRP address family
	AddressFamilies EigrpFeatureTemplateAddressFamilyArrayInput
	// Set autonomous system ID <1..65535> - Range: `1`-`65535`
	AsNumber pulumi.IntPtrInput
	// Variable name
	AsNumberVariable pulumi.StringPtrInput
	// Set EIGRP router authentication type - Choices: `md5`, `hmac-sha-256`
	AuthenticationType pulumi.StringPtrInput
	// Variable name
	AuthenticationTypeVariable pulumi.StringPtrInput
	// The description of the feature template
	Description pulumi.StringInput
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Selective route download - Default value: `false`
	Filter pulumi.BoolPtrInput
	// Variable name
	FilterVariable pulumi.StringPtrInput
	// Set EIGRP hello interval - Range: `0`-`65535` - Default value: `5`
	HelloInterval pulumi.IntPtrInput
	// Variable name
	HelloIntervalVariable pulumi.StringPtrInput
	// Set hmac-sha-256 authentication key
	HmacAuthenticationKey pulumi.StringPtrInput
	// Variable name
	HmacAuthenticationKeyVariable pulumi.StringPtrInput
	// Set EIGRP hold time - Range: `0`-`65535` - Default value: `15`
	HoldTime pulumi.IntPtrInput
	// Variable name
	HoldTimeVariable pulumi.StringPtrInput
	// Configure IPv4 Static Routes
	Interfaces EigrpFeatureTemplateInterfaceArrayInput
	// Set keychain name
	Keys EigrpFeatureTemplateKeyArrayInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Configure policy to apply to prefixes received from EIGRP neighbor
	RoutePolicyName pulumi.StringPtrInput
	// Variable name
	RoutePolicyNameVariable pulumi.StringPtrInput
}

func (EigrpFeatureTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eigrpFeatureTemplateArgs)(nil)).Elem()
}

type EigrpFeatureTemplateInput interface {
	pulumi.Input

	ToEigrpFeatureTemplateOutput() EigrpFeatureTemplateOutput
	ToEigrpFeatureTemplateOutputWithContext(ctx context.Context) EigrpFeatureTemplateOutput
}

func (*EigrpFeatureTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**EigrpFeatureTemplate)(nil)).Elem()
}

func (i *EigrpFeatureTemplate) ToEigrpFeatureTemplateOutput() EigrpFeatureTemplateOutput {
	return i.ToEigrpFeatureTemplateOutputWithContext(context.Background())
}

func (i *EigrpFeatureTemplate) ToEigrpFeatureTemplateOutputWithContext(ctx context.Context) EigrpFeatureTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EigrpFeatureTemplateOutput)
}

// EigrpFeatureTemplateArrayInput is an input type that accepts EigrpFeatureTemplateArray and EigrpFeatureTemplateArrayOutput values.
// You can construct a concrete instance of `EigrpFeatureTemplateArrayInput` via:
//
//	EigrpFeatureTemplateArray{ EigrpFeatureTemplateArgs{...} }
type EigrpFeatureTemplateArrayInput interface {
	pulumi.Input

	ToEigrpFeatureTemplateArrayOutput() EigrpFeatureTemplateArrayOutput
	ToEigrpFeatureTemplateArrayOutputWithContext(context.Context) EigrpFeatureTemplateArrayOutput
}

type EigrpFeatureTemplateArray []EigrpFeatureTemplateInput

func (EigrpFeatureTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EigrpFeatureTemplate)(nil)).Elem()
}

func (i EigrpFeatureTemplateArray) ToEigrpFeatureTemplateArrayOutput() EigrpFeatureTemplateArrayOutput {
	return i.ToEigrpFeatureTemplateArrayOutputWithContext(context.Background())
}

func (i EigrpFeatureTemplateArray) ToEigrpFeatureTemplateArrayOutputWithContext(ctx context.Context) EigrpFeatureTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EigrpFeatureTemplateArrayOutput)
}

// EigrpFeatureTemplateMapInput is an input type that accepts EigrpFeatureTemplateMap and EigrpFeatureTemplateMapOutput values.
// You can construct a concrete instance of `EigrpFeatureTemplateMapInput` via:
//
//	EigrpFeatureTemplateMap{ "key": EigrpFeatureTemplateArgs{...} }
type EigrpFeatureTemplateMapInput interface {
	pulumi.Input

	ToEigrpFeatureTemplateMapOutput() EigrpFeatureTemplateMapOutput
	ToEigrpFeatureTemplateMapOutputWithContext(context.Context) EigrpFeatureTemplateMapOutput
}

type EigrpFeatureTemplateMap map[string]EigrpFeatureTemplateInput

func (EigrpFeatureTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EigrpFeatureTemplate)(nil)).Elem()
}

func (i EigrpFeatureTemplateMap) ToEigrpFeatureTemplateMapOutput() EigrpFeatureTemplateMapOutput {
	return i.ToEigrpFeatureTemplateMapOutputWithContext(context.Background())
}

func (i EigrpFeatureTemplateMap) ToEigrpFeatureTemplateMapOutputWithContext(ctx context.Context) EigrpFeatureTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EigrpFeatureTemplateMapOutput)
}

type EigrpFeatureTemplateOutput struct{ *pulumi.OutputState }

func (EigrpFeatureTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EigrpFeatureTemplate)(nil)).Elem()
}

func (o EigrpFeatureTemplateOutput) ToEigrpFeatureTemplateOutput() EigrpFeatureTemplateOutput {
	return o
}

func (o EigrpFeatureTemplateOutput) ToEigrpFeatureTemplateOutputWithContext(ctx context.Context) EigrpFeatureTemplateOutput {
	return o
}

// Set EIGRP address family
func (o EigrpFeatureTemplateOutput) AddressFamilies() EigrpFeatureTemplateAddressFamilyArrayOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) EigrpFeatureTemplateAddressFamilyArrayOutput { return v.AddressFamilies }).(EigrpFeatureTemplateAddressFamilyArrayOutput)
}

// Set autonomous system ID <1..65535> - Range: `1`-`65535`
func (o EigrpFeatureTemplateOutput) AsNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.IntPtrOutput { return v.AsNumber }).(pulumi.IntPtrOutput)
}

// Variable name
func (o EigrpFeatureTemplateOutput) AsNumberVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.StringPtrOutput { return v.AsNumberVariable }).(pulumi.StringPtrOutput)
}

// Set EIGRP router authentication type - Choices: `md5`, `hmac-sha-256`
func (o EigrpFeatureTemplateOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.StringPtrOutput { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// Variable name
func (o EigrpFeatureTemplateOutput) AuthenticationTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.StringPtrOutput { return v.AuthenticationTypeVariable }).(pulumi.StringPtrOutput)
}

// The description of the feature template
func (o EigrpFeatureTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
func (o EigrpFeatureTemplateOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.StringArrayOutput { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Selective route download - Default value: `false`
func (o EigrpFeatureTemplateOutput) Filter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.BoolPtrOutput { return v.Filter }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o EigrpFeatureTemplateOutput) FilterVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.StringPtrOutput { return v.FilterVariable }).(pulumi.StringPtrOutput)
}

// Set EIGRP hello interval - Range: `0`-`65535` - Default value: `5`
func (o EigrpFeatureTemplateOutput) HelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.IntPtrOutput { return v.HelloInterval }).(pulumi.IntPtrOutput)
}

// Variable name
func (o EigrpFeatureTemplateOutput) HelloIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.StringPtrOutput { return v.HelloIntervalVariable }).(pulumi.StringPtrOutput)
}

// Set hmac-sha-256 authentication key
func (o EigrpFeatureTemplateOutput) HmacAuthenticationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.StringPtrOutput { return v.HmacAuthenticationKey }).(pulumi.StringPtrOutput)
}

// Variable name
func (o EigrpFeatureTemplateOutput) HmacAuthenticationKeyVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.StringPtrOutput { return v.HmacAuthenticationKeyVariable }).(pulumi.StringPtrOutput)
}

// Set EIGRP hold time - Range: `0`-`65535` - Default value: `15`
func (o EigrpFeatureTemplateOutput) HoldTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.IntPtrOutput { return v.HoldTime }).(pulumi.IntPtrOutput)
}

// Variable name
func (o EigrpFeatureTemplateOutput) HoldTimeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.StringPtrOutput { return v.HoldTimeVariable }).(pulumi.StringPtrOutput)
}

// Configure IPv4 Static Routes
func (o EigrpFeatureTemplateOutput) Interfaces() EigrpFeatureTemplateInterfaceArrayOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) EigrpFeatureTemplateInterfaceArrayOutput { return v.Interfaces }).(EigrpFeatureTemplateInterfaceArrayOutput)
}

// Set keychain name
func (o EigrpFeatureTemplateOutput) Keys() EigrpFeatureTemplateKeyArrayOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) EigrpFeatureTemplateKeyArrayOutput { return v.Keys }).(EigrpFeatureTemplateKeyArrayOutput)
}

// The name of the feature template
func (o EigrpFeatureTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Configure policy to apply to prefixes received from EIGRP neighbor
func (o EigrpFeatureTemplateOutput) RoutePolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.StringPtrOutput { return v.RoutePolicyName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o EigrpFeatureTemplateOutput) RoutePolicyNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.StringPtrOutput { return v.RoutePolicyNameVariable }).(pulumi.StringPtrOutput)
}

// The template type
func (o EigrpFeatureTemplateOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.StringOutput { return v.TemplateType }).(pulumi.StringOutput)
}

// The version of the feature template
func (o EigrpFeatureTemplateOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *EigrpFeatureTemplate) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type EigrpFeatureTemplateArrayOutput struct{ *pulumi.OutputState }

func (EigrpFeatureTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EigrpFeatureTemplate)(nil)).Elem()
}

func (o EigrpFeatureTemplateArrayOutput) ToEigrpFeatureTemplateArrayOutput() EigrpFeatureTemplateArrayOutput {
	return o
}

func (o EigrpFeatureTemplateArrayOutput) ToEigrpFeatureTemplateArrayOutputWithContext(ctx context.Context) EigrpFeatureTemplateArrayOutput {
	return o
}

func (o EigrpFeatureTemplateArrayOutput) Index(i pulumi.IntInput) EigrpFeatureTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EigrpFeatureTemplate {
		return vs[0].([]*EigrpFeatureTemplate)[vs[1].(int)]
	}).(EigrpFeatureTemplateOutput)
}

type EigrpFeatureTemplateMapOutput struct{ *pulumi.OutputState }

func (EigrpFeatureTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EigrpFeatureTemplate)(nil)).Elem()
}

func (o EigrpFeatureTemplateMapOutput) ToEigrpFeatureTemplateMapOutput() EigrpFeatureTemplateMapOutput {
	return o
}

func (o EigrpFeatureTemplateMapOutput) ToEigrpFeatureTemplateMapOutputWithContext(ctx context.Context) EigrpFeatureTemplateMapOutput {
	return o
}

func (o EigrpFeatureTemplateMapOutput) MapIndex(k pulumi.StringInput) EigrpFeatureTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EigrpFeatureTemplate {
		return vs[0].(map[string]*EigrpFeatureTemplate)[vs[1].(string)]
	}).(EigrpFeatureTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EigrpFeatureTemplateInput)(nil)).Elem(), &EigrpFeatureTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*EigrpFeatureTemplateArrayInput)(nil)).Elem(), EigrpFeatureTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EigrpFeatureTemplateMapInput)(nil)).Elem(), EigrpFeatureTemplateMap{})
	pulumi.RegisterOutputType(EigrpFeatureTemplateOutput{})
	pulumi.RegisterOutputType(EigrpFeatureTemplateArrayOutput{})
	pulumi.RegisterOutputType(EigrpFeatureTemplateMapOutput{})
}
