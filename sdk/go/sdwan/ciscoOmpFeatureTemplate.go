// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Cisco OMP feature template.
//   - Minimum SD-WAN Manager version: `15.0.0`
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/ciscoOmpFeatureTemplate:CiscoOmpFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type CiscoOmpFeatureTemplate struct {
	pulumi.CustomResourceState

	// Advertise locally learned routes to OMP
	AdvertiseIpv4Routes CiscoOmpFeatureTemplateAdvertiseIpv4RouteArrayOutput `pulumi:"advertiseIpv4Routes"`
	// Advertise locally learned routes to OMP
	AdvertiseIpv6Routes CiscoOmpFeatureTemplateAdvertiseIpv6RouteArrayOutput `pulumi:"advertiseIpv6Routes"`
	// Set the time between OMP Update packets
	//   - Range: `0`-`65535`
	//   - Default value: `1`
	AdvertisementInterval pulumi.IntPtrOutput `pulumi:"advertisementInterval"`
	// Variable name
	AdvertisementIntervalVariable pulumi.StringPtrOutput `pulumi:"advertisementIntervalVariable"`
	// The description of the feature template
	Description pulumi.StringOutput `pulumi:"description"`
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayOutput `pulumi:"deviceTypes"`
	// Set maximum number of OMP paths to install in vEdge route table
	//   - Range: `1`-`16`
	//   - Default value: `4`
	EcmpLimit pulumi.IntPtrOutput `pulumi:"ecmpLimit"`
	// Variable name
	EcmpLimitVariable pulumi.StringPtrOutput `pulumi:"ecmpLimitVariable"`
	// End of RIB timer <1..604800> seconds
	//   - Range: `1`-`3600`
	//   - Default value: `300`
	EorTimer pulumi.IntPtrOutput `pulumi:"eorTimer"`
	// Variable name
	EorTimerVariable pulumi.StringPtrOutput `pulumi:"eorTimerVariable"`
	// Enable or disable OMP graceful restart
	//   - Default value: `true`
	GracefulRestart pulumi.BoolPtrOutput `pulumi:"gracefulRestart"`
	// Set the OMP graceful restart timer
	//   - Range: `1`-`604800`
	//   - Default value: `43200`
	GracefulRestartTimer pulumi.IntPtrOutput `pulumi:"gracefulRestartTimer"`
	// Variable name
	GracefulRestartTimerVariable pulumi.StringPtrOutput `pulumi:"gracefulRestartTimerVariable"`
	// Variable name
	GracefulRestartVariable pulumi.StringPtrOutput `pulumi:"gracefulRestartVariable"`
	// Set how long to wait before closing OMP peer connection
	//   - Default value: `60`
	Holdtime pulumi.IntPtrOutput `pulumi:"holdtime"`
	// Variable name
	HoldtimeVariable pulumi.StringPtrOutput `pulumi:"holdtimeVariable"`
	// Ignore Region-Path Length During Best-Path Algorithm
	//   - Default value: `false`
	IgnoreRegionPathLength pulumi.BoolPtrOutput `pulumi:"ignoreRegionPathLength"`
	// Variable name
	IgnoreRegionPathLengthVariable pulumi.StringPtrOutput `pulumi:"ignoreRegionPathLengthVariable"`
	// The name of the feature template
	Name pulumi.StringOutput `pulumi:"name"`
	// omp-admin-distance-ipv4
	//   - Range: `1`-`255`
	OmpAdminDistanceIpv4 pulumi.IntPtrOutput `pulumi:"ompAdminDistanceIpv4"`
	// Variable name
	OmpAdminDistanceIpv4Variable pulumi.StringPtrOutput `pulumi:"ompAdminDistanceIpv4Variable"`
	// omp-admin-distance-ipv6
	//   - Range: `1`-`255`
	OmpAdminDistanceIpv6 pulumi.IntPtrOutput `pulumi:"ompAdminDistanceIpv6"`
	// Variable name
	OmpAdminDistanceIpv6Variable pulumi.StringPtrOutput `pulumi:"ompAdminDistanceIpv6Variable"`
	// Set Overlay AS number <1..4294967295> or <XX.YY>
	//   - Range: `1`-`4294967295`
	OverlayAs pulumi.IntPtrOutput `pulumi:"overlayAs"`
	// Variable name
	OverlayAsVariable pulumi.StringPtrOutput `pulumi:"overlayAsVariable"`
	// Set number of TLOC routes advertised between vSmart and vEdge
	//   - Range: `1`-`16`
	//   - Default value: `4`
	SendPathLimit pulumi.IntPtrOutput `pulumi:"sendPathLimit"`
	// Variable name
	SendPathLimitVariable pulumi.StringPtrOutput `pulumi:"sendPathLimitVariable"`
	// Enable or disable OMP
	//   - Default value: `false`
	Shutdown pulumi.BoolPtrOutput `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable pulumi.StringPtrOutput `pulumi:"shutdownVariable"`
	// The template type
	TemplateType pulumi.StringOutput `pulumi:"templateType"`
	// Transport gateway path computation
	//   - Choices: `prefer`, `ecmp-with-direct-path`
	TransportGateway pulumi.StringPtrOutput `pulumi:"transportGateway"`
	// Variable name
	TransportGatewayVariable pulumi.StringPtrOutput `pulumi:"transportGatewayVariable"`
	// The version of the feature template
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewCiscoOmpFeatureTemplate registers a new resource with the given unique name, arguments, and options.
func NewCiscoOmpFeatureTemplate(ctx *pulumi.Context,
	name string, args *CiscoOmpFeatureTemplateArgs, opts ...pulumi.ResourceOption) (*CiscoOmpFeatureTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.DeviceTypes == nil {
		return nil, errors.New("invalid value for required argument 'DeviceTypes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CiscoOmpFeatureTemplate
	err := ctx.RegisterResource("sdwan:index/ciscoOmpFeatureTemplate:CiscoOmpFeatureTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCiscoOmpFeatureTemplate gets an existing CiscoOmpFeatureTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCiscoOmpFeatureTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CiscoOmpFeatureTemplateState, opts ...pulumi.ResourceOption) (*CiscoOmpFeatureTemplate, error) {
	var resource CiscoOmpFeatureTemplate
	err := ctx.ReadResource("sdwan:index/ciscoOmpFeatureTemplate:CiscoOmpFeatureTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CiscoOmpFeatureTemplate resources.
type ciscoOmpFeatureTemplateState struct {
	// Advertise locally learned routes to OMP
	AdvertiseIpv4Routes []CiscoOmpFeatureTemplateAdvertiseIpv4Route `pulumi:"advertiseIpv4Routes"`
	// Advertise locally learned routes to OMP
	AdvertiseIpv6Routes []CiscoOmpFeatureTemplateAdvertiseIpv6Route `pulumi:"advertiseIpv6Routes"`
	// Set the time between OMP Update packets
	//   - Range: `0`-`65535`
	//   - Default value: `1`
	AdvertisementInterval *int `pulumi:"advertisementInterval"`
	// Variable name
	AdvertisementIntervalVariable *string `pulumi:"advertisementIntervalVariable"`
	// The description of the feature template
	Description *string `pulumi:"description"`
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Set maximum number of OMP paths to install in vEdge route table
	//   - Range: `1`-`16`
	//   - Default value: `4`
	EcmpLimit *int `pulumi:"ecmpLimit"`
	// Variable name
	EcmpLimitVariable *string `pulumi:"ecmpLimitVariable"`
	// End of RIB timer <1..604800> seconds
	//   - Range: `1`-`3600`
	//   - Default value: `300`
	EorTimer *int `pulumi:"eorTimer"`
	// Variable name
	EorTimerVariable *string `pulumi:"eorTimerVariable"`
	// Enable or disable OMP graceful restart
	//   - Default value: `true`
	GracefulRestart *bool `pulumi:"gracefulRestart"`
	// Set the OMP graceful restart timer
	//   - Range: `1`-`604800`
	//   - Default value: `43200`
	GracefulRestartTimer *int `pulumi:"gracefulRestartTimer"`
	// Variable name
	GracefulRestartTimerVariable *string `pulumi:"gracefulRestartTimerVariable"`
	// Variable name
	GracefulRestartVariable *string `pulumi:"gracefulRestartVariable"`
	// Set how long to wait before closing OMP peer connection
	//   - Default value: `60`
	Holdtime *int `pulumi:"holdtime"`
	// Variable name
	HoldtimeVariable *string `pulumi:"holdtimeVariable"`
	// Ignore Region-Path Length During Best-Path Algorithm
	//   - Default value: `false`
	IgnoreRegionPathLength *bool `pulumi:"ignoreRegionPathLength"`
	// Variable name
	IgnoreRegionPathLengthVariable *string `pulumi:"ignoreRegionPathLengthVariable"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// omp-admin-distance-ipv4
	//   - Range: `1`-`255`
	OmpAdminDistanceIpv4 *int `pulumi:"ompAdminDistanceIpv4"`
	// Variable name
	OmpAdminDistanceIpv4Variable *string `pulumi:"ompAdminDistanceIpv4Variable"`
	// omp-admin-distance-ipv6
	//   - Range: `1`-`255`
	OmpAdminDistanceIpv6 *int `pulumi:"ompAdminDistanceIpv6"`
	// Variable name
	OmpAdminDistanceIpv6Variable *string `pulumi:"ompAdminDistanceIpv6Variable"`
	// Set Overlay AS number <1..4294967295> or <XX.YY>
	//   - Range: `1`-`4294967295`
	OverlayAs *int `pulumi:"overlayAs"`
	// Variable name
	OverlayAsVariable *string `pulumi:"overlayAsVariable"`
	// Set number of TLOC routes advertised between vSmart and vEdge
	//   - Range: `1`-`16`
	//   - Default value: `4`
	SendPathLimit *int `pulumi:"sendPathLimit"`
	// Variable name
	SendPathLimitVariable *string `pulumi:"sendPathLimitVariable"`
	// Enable or disable OMP
	//   - Default value: `false`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// The template type
	TemplateType *string `pulumi:"templateType"`
	// Transport gateway path computation
	//   - Choices: `prefer`, `ecmp-with-direct-path`
	TransportGateway *string `pulumi:"transportGateway"`
	// Variable name
	TransportGatewayVariable *string `pulumi:"transportGatewayVariable"`
	// The version of the feature template
	Version *int `pulumi:"version"`
}

type CiscoOmpFeatureTemplateState struct {
	// Advertise locally learned routes to OMP
	AdvertiseIpv4Routes CiscoOmpFeatureTemplateAdvertiseIpv4RouteArrayInput
	// Advertise locally learned routes to OMP
	AdvertiseIpv6Routes CiscoOmpFeatureTemplateAdvertiseIpv6RouteArrayInput
	// Set the time between OMP Update packets
	//   - Range: `0`-`65535`
	//   - Default value: `1`
	AdvertisementInterval pulumi.IntPtrInput
	// Variable name
	AdvertisementIntervalVariable pulumi.StringPtrInput
	// The description of the feature template
	Description pulumi.StringPtrInput
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Set maximum number of OMP paths to install in vEdge route table
	//   - Range: `1`-`16`
	//   - Default value: `4`
	EcmpLimit pulumi.IntPtrInput
	// Variable name
	EcmpLimitVariable pulumi.StringPtrInput
	// End of RIB timer <1..604800> seconds
	//   - Range: `1`-`3600`
	//   - Default value: `300`
	EorTimer pulumi.IntPtrInput
	// Variable name
	EorTimerVariable pulumi.StringPtrInput
	// Enable or disable OMP graceful restart
	//   - Default value: `true`
	GracefulRestart pulumi.BoolPtrInput
	// Set the OMP graceful restart timer
	//   - Range: `1`-`604800`
	//   - Default value: `43200`
	GracefulRestartTimer pulumi.IntPtrInput
	// Variable name
	GracefulRestartTimerVariable pulumi.StringPtrInput
	// Variable name
	GracefulRestartVariable pulumi.StringPtrInput
	// Set how long to wait before closing OMP peer connection
	//   - Default value: `60`
	Holdtime pulumi.IntPtrInput
	// Variable name
	HoldtimeVariable pulumi.StringPtrInput
	// Ignore Region-Path Length During Best-Path Algorithm
	//   - Default value: `false`
	IgnoreRegionPathLength pulumi.BoolPtrInput
	// Variable name
	IgnoreRegionPathLengthVariable pulumi.StringPtrInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// omp-admin-distance-ipv4
	//   - Range: `1`-`255`
	OmpAdminDistanceIpv4 pulumi.IntPtrInput
	// Variable name
	OmpAdminDistanceIpv4Variable pulumi.StringPtrInput
	// omp-admin-distance-ipv6
	//   - Range: `1`-`255`
	OmpAdminDistanceIpv6 pulumi.IntPtrInput
	// Variable name
	OmpAdminDistanceIpv6Variable pulumi.StringPtrInput
	// Set Overlay AS number <1..4294967295> or <XX.YY>
	//   - Range: `1`-`4294967295`
	OverlayAs pulumi.IntPtrInput
	// Variable name
	OverlayAsVariable pulumi.StringPtrInput
	// Set number of TLOC routes advertised between vSmart and vEdge
	//   - Range: `1`-`16`
	//   - Default value: `4`
	SendPathLimit pulumi.IntPtrInput
	// Variable name
	SendPathLimitVariable pulumi.StringPtrInput
	// Enable or disable OMP
	//   - Default value: `false`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// The template type
	TemplateType pulumi.StringPtrInput
	// Transport gateway path computation
	//   - Choices: `prefer`, `ecmp-with-direct-path`
	TransportGateway pulumi.StringPtrInput
	// Variable name
	TransportGatewayVariable pulumi.StringPtrInput
	// The version of the feature template
	Version pulumi.IntPtrInput
}

func (CiscoOmpFeatureTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*ciscoOmpFeatureTemplateState)(nil)).Elem()
}

type ciscoOmpFeatureTemplateArgs struct {
	// Advertise locally learned routes to OMP
	AdvertiseIpv4Routes []CiscoOmpFeatureTemplateAdvertiseIpv4Route `pulumi:"advertiseIpv4Routes"`
	// Advertise locally learned routes to OMP
	AdvertiseIpv6Routes []CiscoOmpFeatureTemplateAdvertiseIpv6Route `pulumi:"advertiseIpv6Routes"`
	// Set the time between OMP Update packets
	//   - Range: `0`-`65535`
	//   - Default value: `1`
	AdvertisementInterval *int `pulumi:"advertisementInterval"`
	// Variable name
	AdvertisementIntervalVariable *string `pulumi:"advertisementIntervalVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Set maximum number of OMP paths to install in vEdge route table
	//   - Range: `1`-`16`
	//   - Default value: `4`
	EcmpLimit *int `pulumi:"ecmpLimit"`
	// Variable name
	EcmpLimitVariable *string `pulumi:"ecmpLimitVariable"`
	// End of RIB timer <1..604800> seconds
	//   - Range: `1`-`3600`
	//   - Default value: `300`
	EorTimer *int `pulumi:"eorTimer"`
	// Variable name
	EorTimerVariable *string `pulumi:"eorTimerVariable"`
	// Enable or disable OMP graceful restart
	//   - Default value: `true`
	GracefulRestart *bool `pulumi:"gracefulRestart"`
	// Set the OMP graceful restart timer
	//   - Range: `1`-`604800`
	//   - Default value: `43200`
	GracefulRestartTimer *int `pulumi:"gracefulRestartTimer"`
	// Variable name
	GracefulRestartTimerVariable *string `pulumi:"gracefulRestartTimerVariable"`
	// Variable name
	GracefulRestartVariable *string `pulumi:"gracefulRestartVariable"`
	// Set how long to wait before closing OMP peer connection
	//   - Default value: `60`
	Holdtime *int `pulumi:"holdtime"`
	// Variable name
	HoldtimeVariable *string `pulumi:"holdtimeVariable"`
	// Ignore Region-Path Length During Best-Path Algorithm
	//   - Default value: `false`
	IgnoreRegionPathLength *bool `pulumi:"ignoreRegionPathLength"`
	// Variable name
	IgnoreRegionPathLengthVariable *string `pulumi:"ignoreRegionPathLengthVariable"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// omp-admin-distance-ipv4
	//   - Range: `1`-`255`
	OmpAdminDistanceIpv4 *int `pulumi:"ompAdminDistanceIpv4"`
	// Variable name
	OmpAdminDistanceIpv4Variable *string `pulumi:"ompAdminDistanceIpv4Variable"`
	// omp-admin-distance-ipv6
	//   - Range: `1`-`255`
	OmpAdminDistanceIpv6 *int `pulumi:"ompAdminDistanceIpv6"`
	// Variable name
	OmpAdminDistanceIpv6Variable *string `pulumi:"ompAdminDistanceIpv6Variable"`
	// Set Overlay AS number <1..4294967295> or <XX.YY>
	//   - Range: `1`-`4294967295`
	OverlayAs *int `pulumi:"overlayAs"`
	// Variable name
	OverlayAsVariable *string `pulumi:"overlayAsVariable"`
	// Set number of TLOC routes advertised between vSmart and vEdge
	//   - Range: `1`-`16`
	//   - Default value: `4`
	SendPathLimit *int `pulumi:"sendPathLimit"`
	// Variable name
	SendPathLimitVariable *string `pulumi:"sendPathLimitVariable"`
	// Enable or disable OMP
	//   - Default value: `false`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// Transport gateway path computation
	//   - Choices: `prefer`, `ecmp-with-direct-path`
	TransportGateway *string `pulumi:"transportGateway"`
	// Variable name
	TransportGatewayVariable *string `pulumi:"transportGatewayVariable"`
}

// The set of arguments for constructing a CiscoOmpFeatureTemplate resource.
type CiscoOmpFeatureTemplateArgs struct {
	// Advertise locally learned routes to OMP
	AdvertiseIpv4Routes CiscoOmpFeatureTemplateAdvertiseIpv4RouteArrayInput
	// Advertise locally learned routes to OMP
	AdvertiseIpv6Routes CiscoOmpFeatureTemplateAdvertiseIpv6RouteArrayInput
	// Set the time between OMP Update packets
	//   - Range: `0`-`65535`
	//   - Default value: `1`
	AdvertisementInterval pulumi.IntPtrInput
	// Variable name
	AdvertisementIntervalVariable pulumi.StringPtrInput
	// The description of the feature template
	Description pulumi.StringInput
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Set maximum number of OMP paths to install in vEdge route table
	//   - Range: `1`-`16`
	//   - Default value: `4`
	EcmpLimit pulumi.IntPtrInput
	// Variable name
	EcmpLimitVariable pulumi.StringPtrInput
	// End of RIB timer <1..604800> seconds
	//   - Range: `1`-`3600`
	//   - Default value: `300`
	EorTimer pulumi.IntPtrInput
	// Variable name
	EorTimerVariable pulumi.StringPtrInput
	// Enable or disable OMP graceful restart
	//   - Default value: `true`
	GracefulRestart pulumi.BoolPtrInput
	// Set the OMP graceful restart timer
	//   - Range: `1`-`604800`
	//   - Default value: `43200`
	GracefulRestartTimer pulumi.IntPtrInput
	// Variable name
	GracefulRestartTimerVariable pulumi.StringPtrInput
	// Variable name
	GracefulRestartVariable pulumi.StringPtrInput
	// Set how long to wait before closing OMP peer connection
	//   - Default value: `60`
	Holdtime pulumi.IntPtrInput
	// Variable name
	HoldtimeVariable pulumi.StringPtrInput
	// Ignore Region-Path Length During Best-Path Algorithm
	//   - Default value: `false`
	IgnoreRegionPathLength pulumi.BoolPtrInput
	// Variable name
	IgnoreRegionPathLengthVariable pulumi.StringPtrInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// omp-admin-distance-ipv4
	//   - Range: `1`-`255`
	OmpAdminDistanceIpv4 pulumi.IntPtrInput
	// Variable name
	OmpAdminDistanceIpv4Variable pulumi.StringPtrInput
	// omp-admin-distance-ipv6
	//   - Range: `1`-`255`
	OmpAdminDistanceIpv6 pulumi.IntPtrInput
	// Variable name
	OmpAdminDistanceIpv6Variable pulumi.StringPtrInput
	// Set Overlay AS number <1..4294967295> or <XX.YY>
	//   - Range: `1`-`4294967295`
	OverlayAs pulumi.IntPtrInput
	// Variable name
	OverlayAsVariable pulumi.StringPtrInput
	// Set number of TLOC routes advertised between vSmart and vEdge
	//   - Range: `1`-`16`
	//   - Default value: `4`
	SendPathLimit pulumi.IntPtrInput
	// Variable name
	SendPathLimitVariable pulumi.StringPtrInput
	// Enable or disable OMP
	//   - Default value: `false`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// Transport gateway path computation
	//   - Choices: `prefer`, `ecmp-with-direct-path`
	TransportGateway pulumi.StringPtrInput
	// Variable name
	TransportGatewayVariable pulumi.StringPtrInput
}

func (CiscoOmpFeatureTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ciscoOmpFeatureTemplateArgs)(nil)).Elem()
}

type CiscoOmpFeatureTemplateInput interface {
	pulumi.Input

	ToCiscoOmpFeatureTemplateOutput() CiscoOmpFeatureTemplateOutput
	ToCiscoOmpFeatureTemplateOutputWithContext(ctx context.Context) CiscoOmpFeatureTemplateOutput
}

func (*CiscoOmpFeatureTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**CiscoOmpFeatureTemplate)(nil)).Elem()
}

func (i *CiscoOmpFeatureTemplate) ToCiscoOmpFeatureTemplateOutput() CiscoOmpFeatureTemplateOutput {
	return i.ToCiscoOmpFeatureTemplateOutputWithContext(context.Background())
}

func (i *CiscoOmpFeatureTemplate) ToCiscoOmpFeatureTemplateOutputWithContext(ctx context.Context) CiscoOmpFeatureTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CiscoOmpFeatureTemplateOutput)
}

// CiscoOmpFeatureTemplateArrayInput is an input type that accepts CiscoOmpFeatureTemplateArray and CiscoOmpFeatureTemplateArrayOutput values.
// You can construct a concrete instance of `CiscoOmpFeatureTemplateArrayInput` via:
//
//	CiscoOmpFeatureTemplateArray{ CiscoOmpFeatureTemplateArgs{...} }
type CiscoOmpFeatureTemplateArrayInput interface {
	pulumi.Input

	ToCiscoOmpFeatureTemplateArrayOutput() CiscoOmpFeatureTemplateArrayOutput
	ToCiscoOmpFeatureTemplateArrayOutputWithContext(context.Context) CiscoOmpFeatureTemplateArrayOutput
}

type CiscoOmpFeatureTemplateArray []CiscoOmpFeatureTemplateInput

func (CiscoOmpFeatureTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CiscoOmpFeatureTemplate)(nil)).Elem()
}

func (i CiscoOmpFeatureTemplateArray) ToCiscoOmpFeatureTemplateArrayOutput() CiscoOmpFeatureTemplateArrayOutput {
	return i.ToCiscoOmpFeatureTemplateArrayOutputWithContext(context.Background())
}

func (i CiscoOmpFeatureTemplateArray) ToCiscoOmpFeatureTemplateArrayOutputWithContext(ctx context.Context) CiscoOmpFeatureTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CiscoOmpFeatureTemplateArrayOutput)
}

// CiscoOmpFeatureTemplateMapInput is an input type that accepts CiscoOmpFeatureTemplateMap and CiscoOmpFeatureTemplateMapOutput values.
// You can construct a concrete instance of `CiscoOmpFeatureTemplateMapInput` via:
//
//	CiscoOmpFeatureTemplateMap{ "key": CiscoOmpFeatureTemplateArgs{...} }
type CiscoOmpFeatureTemplateMapInput interface {
	pulumi.Input

	ToCiscoOmpFeatureTemplateMapOutput() CiscoOmpFeatureTemplateMapOutput
	ToCiscoOmpFeatureTemplateMapOutputWithContext(context.Context) CiscoOmpFeatureTemplateMapOutput
}

type CiscoOmpFeatureTemplateMap map[string]CiscoOmpFeatureTemplateInput

func (CiscoOmpFeatureTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CiscoOmpFeatureTemplate)(nil)).Elem()
}

func (i CiscoOmpFeatureTemplateMap) ToCiscoOmpFeatureTemplateMapOutput() CiscoOmpFeatureTemplateMapOutput {
	return i.ToCiscoOmpFeatureTemplateMapOutputWithContext(context.Background())
}

func (i CiscoOmpFeatureTemplateMap) ToCiscoOmpFeatureTemplateMapOutputWithContext(ctx context.Context) CiscoOmpFeatureTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CiscoOmpFeatureTemplateMapOutput)
}

type CiscoOmpFeatureTemplateOutput struct{ *pulumi.OutputState }

func (CiscoOmpFeatureTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CiscoOmpFeatureTemplate)(nil)).Elem()
}

func (o CiscoOmpFeatureTemplateOutput) ToCiscoOmpFeatureTemplateOutput() CiscoOmpFeatureTemplateOutput {
	return o
}

func (o CiscoOmpFeatureTemplateOutput) ToCiscoOmpFeatureTemplateOutputWithContext(ctx context.Context) CiscoOmpFeatureTemplateOutput {
	return o
}

// Advertise locally learned routes to OMP
func (o CiscoOmpFeatureTemplateOutput) AdvertiseIpv4Routes() CiscoOmpFeatureTemplateAdvertiseIpv4RouteArrayOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) CiscoOmpFeatureTemplateAdvertiseIpv4RouteArrayOutput {
		return v.AdvertiseIpv4Routes
	}).(CiscoOmpFeatureTemplateAdvertiseIpv4RouteArrayOutput)
}

// Advertise locally learned routes to OMP
func (o CiscoOmpFeatureTemplateOutput) AdvertiseIpv6Routes() CiscoOmpFeatureTemplateAdvertiseIpv6RouteArrayOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) CiscoOmpFeatureTemplateAdvertiseIpv6RouteArrayOutput {
		return v.AdvertiseIpv6Routes
	}).(CiscoOmpFeatureTemplateAdvertiseIpv6RouteArrayOutput)
}

// Set the time between OMP Update packets
//   - Range: `0`-`65535`
//   - Default value: `1`
func (o CiscoOmpFeatureTemplateOutput) AdvertisementInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.IntPtrOutput { return v.AdvertisementInterval }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoOmpFeatureTemplateOutput) AdvertisementIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.StringPtrOutput { return v.AdvertisementIntervalVariable }).(pulumi.StringPtrOutput)
}

// The description of the feature template
func (o CiscoOmpFeatureTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
func (o CiscoOmpFeatureTemplateOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.StringArrayOutput { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Set maximum number of OMP paths to install in vEdge route table
//   - Range: `1`-`16`
//   - Default value: `4`
func (o CiscoOmpFeatureTemplateOutput) EcmpLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.IntPtrOutput { return v.EcmpLimit }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoOmpFeatureTemplateOutput) EcmpLimitVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.StringPtrOutput { return v.EcmpLimitVariable }).(pulumi.StringPtrOutput)
}

// End of RIB timer <1..604800> seconds
//   - Range: `1`-`3600`
//   - Default value: `300`
func (o CiscoOmpFeatureTemplateOutput) EorTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.IntPtrOutput { return v.EorTimer }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoOmpFeatureTemplateOutput) EorTimerVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.StringPtrOutput { return v.EorTimerVariable }).(pulumi.StringPtrOutput)
}

// Enable or disable OMP graceful restart
//   - Default value: `true`
func (o CiscoOmpFeatureTemplateOutput) GracefulRestart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.BoolPtrOutput { return v.GracefulRestart }).(pulumi.BoolPtrOutput)
}

// Set the OMP graceful restart timer
//   - Range: `1`-`604800`
//   - Default value: `43200`
func (o CiscoOmpFeatureTemplateOutput) GracefulRestartTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.IntPtrOutput { return v.GracefulRestartTimer }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoOmpFeatureTemplateOutput) GracefulRestartTimerVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.StringPtrOutput { return v.GracefulRestartTimerVariable }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoOmpFeatureTemplateOutput) GracefulRestartVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.StringPtrOutput { return v.GracefulRestartVariable }).(pulumi.StringPtrOutput)
}

// Set how long to wait before closing OMP peer connection
//   - Default value: `60`
func (o CiscoOmpFeatureTemplateOutput) Holdtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.IntPtrOutput { return v.Holdtime }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoOmpFeatureTemplateOutput) HoldtimeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.StringPtrOutput { return v.HoldtimeVariable }).(pulumi.StringPtrOutput)
}

// Ignore Region-Path Length During Best-Path Algorithm
//   - Default value: `false`
func (o CiscoOmpFeatureTemplateOutput) IgnoreRegionPathLength() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.BoolPtrOutput { return v.IgnoreRegionPathLength }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoOmpFeatureTemplateOutput) IgnoreRegionPathLengthVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.StringPtrOutput { return v.IgnoreRegionPathLengthVariable }).(pulumi.StringPtrOutput)
}

// The name of the feature template
func (o CiscoOmpFeatureTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// omp-admin-distance-ipv4
//   - Range: `1`-`255`
func (o CiscoOmpFeatureTemplateOutput) OmpAdminDistanceIpv4() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.IntPtrOutput { return v.OmpAdminDistanceIpv4 }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoOmpFeatureTemplateOutput) OmpAdminDistanceIpv4Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.StringPtrOutput { return v.OmpAdminDistanceIpv4Variable }).(pulumi.StringPtrOutput)
}

// omp-admin-distance-ipv6
//   - Range: `1`-`255`
func (o CiscoOmpFeatureTemplateOutput) OmpAdminDistanceIpv6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.IntPtrOutput { return v.OmpAdminDistanceIpv6 }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoOmpFeatureTemplateOutput) OmpAdminDistanceIpv6Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.StringPtrOutput { return v.OmpAdminDistanceIpv6Variable }).(pulumi.StringPtrOutput)
}

// Set Overlay AS number <1..4294967295> or <XX.YY>
//   - Range: `1`-`4294967295`
func (o CiscoOmpFeatureTemplateOutput) OverlayAs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.IntPtrOutput { return v.OverlayAs }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoOmpFeatureTemplateOutput) OverlayAsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.StringPtrOutput { return v.OverlayAsVariable }).(pulumi.StringPtrOutput)
}

// Set number of TLOC routes advertised between vSmart and vEdge
//   - Range: `1`-`16`
//   - Default value: `4`
func (o CiscoOmpFeatureTemplateOutput) SendPathLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.IntPtrOutput { return v.SendPathLimit }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoOmpFeatureTemplateOutput) SendPathLimitVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.StringPtrOutput { return v.SendPathLimitVariable }).(pulumi.StringPtrOutput)
}

// Enable or disable OMP
//   - Default value: `false`
func (o CiscoOmpFeatureTemplateOutput) Shutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.BoolPtrOutput { return v.Shutdown }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoOmpFeatureTemplateOutput) ShutdownVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.StringPtrOutput { return v.ShutdownVariable }).(pulumi.StringPtrOutput)
}

// The template type
func (o CiscoOmpFeatureTemplateOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.StringOutput { return v.TemplateType }).(pulumi.StringOutput)
}

// Transport gateway path computation
//   - Choices: `prefer`, `ecmp-with-direct-path`
func (o CiscoOmpFeatureTemplateOutput) TransportGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.StringPtrOutput { return v.TransportGateway }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoOmpFeatureTemplateOutput) TransportGatewayVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.StringPtrOutput { return v.TransportGatewayVariable }).(pulumi.StringPtrOutput)
}

// The version of the feature template
func (o CiscoOmpFeatureTemplateOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *CiscoOmpFeatureTemplate) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type CiscoOmpFeatureTemplateArrayOutput struct{ *pulumi.OutputState }

func (CiscoOmpFeatureTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CiscoOmpFeatureTemplate)(nil)).Elem()
}

func (o CiscoOmpFeatureTemplateArrayOutput) ToCiscoOmpFeatureTemplateArrayOutput() CiscoOmpFeatureTemplateArrayOutput {
	return o
}

func (o CiscoOmpFeatureTemplateArrayOutput) ToCiscoOmpFeatureTemplateArrayOutputWithContext(ctx context.Context) CiscoOmpFeatureTemplateArrayOutput {
	return o
}

func (o CiscoOmpFeatureTemplateArrayOutput) Index(i pulumi.IntInput) CiscoOmpFeatureTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CiscoOmpFeatureTemplate {
		return vs[0].([]*CiscoOmpFeatureTemplate)[vs[1].(int)]
	}).(CiscoOmpFeatureTemplateOutput)
}

type CiscoOmpFeatureTemplateMapOutput struct{ *pulumi.OutputState }

func (CiscoOmpFeatureTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CiscoOmpFeatureTemplate)(nil)).Elem()
}

func (o CiscoOmpFeatureTemplateMapOutput) ToCiscoOmpFeatureTemplateMapOutput() CiscoOmpFeatureTemplateMapOutput {
	return o
}

func (o CiscoOmpFeatureTemplateMapOutput) ToCiscoOmpFeatureTemplateMapOutputWithContext(ctx context.Context) CiscoOmpFeatureTemplateMapOutput {
	return o
}

func (o CiscoOmpFeatureTemplateMapOutput) MapIndex(k pulumi.StringInput) CiscoOmpFeatureTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CiscoOmpFeatureTemplate {
		return vs[0].(map[string]*CiscoOmpFeatureTemplate)[vs[1].(string)]
	}).(CiscoOmpFeatureTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CiscoOmpFeatureTemplateInput)(nil)).Elem(), &CiscoOmpFeatureTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*CiscoOmpFeatureTemplateArrayInput)(nil)).Elem(), CiscoOmpFeatureTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CiscoOmpFeatureTemplateMapInput)(nil)).Elem(), CiscoOmpFeatureTemplateMap{})
	pulumi.RegisterOutputType(CiscoOmpFeatureTemplateOutput{})
	pulumi.RegisterOutputType(CiscoOmpFeatureTemplateArrayOutput{})
	pulumi.RegisterOutputType(CiscoOmpFeatureTemplateMapOutput{})
}
