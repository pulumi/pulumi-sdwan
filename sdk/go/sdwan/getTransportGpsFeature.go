// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Transport GPS Feature.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupTransportGpsFeature(ctx, &sdwan.LookupTransportGpsFeatureArgs{
//				Id:               "f6b2c44c-693c-4763-b010-895aa3d236bd",
//				FeatureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTransportGpsFeature(ctx *pulumi.Context, args *LookupTransportGpsFeatureArgs, opts ...pulumi.InvokeOption) (*LookupTransportGpsFeatureResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTransportGpsFeatureResult
	err := ctx.Invoke("sdwan:index/getTransportGpsFeature:getTransportGpsFeature", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTransportGpsFeature.
type LookupTransportGpsFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
}

// A collection of values returned by getTransportGpsFeature.
type LookupTransportGpsFeatureResult struct {
	// The description of the Feature
	Description string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// Enable/disable GPS
	GpsEnable bool `pulumi:"gpsEnable"`
	// Variable name
	GpsEnableVariable string `pulumi:"gpsEnableVariable"`
	// Select GPS mode
	GpsMode string `pulumi:"gpsMode"`
	// Variable name
	GpsModeVariable string `pulumi:"gpsModeVariable"`
	// The id of the Feature
	Id string `pulumi:"id"`
	// The name of the Feature
	Name string `pulumi:"name"`
	// Destination address
	NmeaDestinationAddress string `pulumi:"nmeaDestinationAddress"`
	// Variable name
	NmeaDestinationAddressVariable string `pulumi:"nmeaDestinationAddressVariable"`
	// Destination port
	NmeaDestinationPort int `pulumi:"nmeaDestinationPort"`
	// Variable name
	NmeaDestinationPortVariable string `pulumi:"nmeaDestinationPortVariable"`
	// Enable/disable NMEA data
	NmeaEnable bool `pulumi:"nmeaEnable"`
	// Variable name
	NmeaEnableVariable string `pulumi:"nmeaEnableVariable"`
	// Source address
	NmeaSourceAddress string `pulumi:"nmeaSourceAddress"`
	// Variable name
	NmeaSourceAddressVariable string `pulumi:"nmeaSourceAddressVariable"`
	// The version of the Feature
	Version int `pulumi:"version"`
}

func LookupTransportGpsFeatureOutput(ctx *pulumi.Context, args LookupTransportGpsFeatureOutputArgs, opts ...pulumi.InvokeOption) LookupTransportGpsFeatureResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTransportGpsFeatureResultOutput, error) {
			args := v.(LookupTransportGpsFeatureArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupTransportGpsFeatureResult
			secret, err := ctx.InvokePackageRaw("sdwan:index/getTransportGpsFeature:getTransportGpsFeature", args, &rv, "", opts...)
			if err != nil {
				return LookupTransportGpsFeatureResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupTransportGpsFeatureResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupTransportGpsFeatureResultOutput), nil
			}
			return output, nil
		}).(LookupTransportGpsFeatureResultOutput)
}

// A collection of arguments for invoking getTransportGpsFeature.
type LookupTransportGpsFeatureOutputArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput `pulumi:"featureProfileId"`
	// The id of the Feature
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupTransportGpsFeatureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransportGpsFeatureArgs)(nil)).Elem()
}

// A collection of values returned by getTransportGpsFeature.
type LookupTransportGpsFeatureResultOutput struct{ *pulumi.OutputState }

func (LookupTransportGpsFeatureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransportGpsFeatureResult)(nil)).Elem()
}

func (o LookupTransportGpsFeatureResultOutput) ToLookupTransportGpsFeatureResultOutput() LookupTransportGpsFeatureResultOutput {
	return o
}

func (o LookupTransportGpsFeatureResultOutput) ToLookupTransportGpsFeatureResultOutputWithContext(ctx context.Context) LookupTransportGpsFeatureResultOutput {
	return o
}

// The description of the Feature
func (o LookupTransportGpsFeatureResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportGpsFeatureResult) string { return v.Description }).(pulumi.StringOutput)
}

// Feature Profile ID
func (o LookupTransportGpsFeatureResultOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportGpsFeatureResult) string { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// Enable/disable GPS
func (o LookupTransportGpsFeatureResultOutput) GpsEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportGpsFeatureResult) bool { return v.GpsEnable }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportGpsFeatureResultOutput) GpsEnableVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportGpsFeatureResult) string { return v.GpsEnableVariable }).(pulumi.StringOutput)
}

// Select GPS mode
func (o LookupTransportGpsFeatureResultOutput) GpsMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportGpsFeatureResult) string { return v.GpsMode }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportGpsFeatureResultOutput) GpsModeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportGpsFeatureResult) string { return v.GpsModeVariable }).(pulumi.StringOutput)
}

// The id of the Feature
func (o LookupTransportGpsFeatureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportGpsFeatureResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Feature
func (o LookupTransportGpsFeatureResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportGpsFeatureResult) string { return v.Name }).(pulumi.StringOutput)
}

// Destination address
func (o LookupTransportGpsFeatureResultOutput) NmeaDestinationAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportGpsFeatureResult) string { return v.NmeaDestinationAddress }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportGpsFeatureResultOutput) NmeaDestinationAddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportGpsFeatureResult) string { return v.NmeaDestinationAddressVariable }).(pulumi.StringOutput)
}

// Destination port
func (o LookupTransportGpsFeatureResultOutput) NmeaDestinationPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportGpsFeatureResult) int { return v.NmeaDestinationPort }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportGpsFeatureResultOutput) NmeaDestinationPortVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportGpsFeatureResult) string { return v.NmeaDestinationPortVariable }).(pulumi.StringOutput)
}

// Enable/disable NMEA data
func (o LookupTransportGpsFeatureResultOutput) NmeaEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportGpsFeatureResult) bool { return v.NmeaEnable }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportGpsFeatureResultOutput) NmeaEnableVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportGpsFeatureResult) string { return v.NmeaEnableVariable }).(pulumi.StringOutput)
}

// Source address
func (o LookupTransportGpsFeatureResultOutput) NmeaSourceAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportGpsFeatureResult) string { return v.NmeaSourceAddress }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportGpsFeatureResultOutput) NmeaSourceAddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportGpsFeatureResult) string { return v.NmeaSourceAddressVariable }).(pulumi.StringOutput)
}

// The version of the Feature
func (o LookupTransportGpsFeatureResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportGpsFeatureResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTransportGpsFeatureResultOutput{})
}
