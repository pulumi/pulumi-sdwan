// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Cisco Wireless LAN feature template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupCiscoWirelessLanFeatureTemplate(ctx, &sdwan.LookupCiscoWirelessLanFeatureTemplateArgs{
//				Id: pulumi.StringRef("f6b2c44c-693c-4763-b010-895aa3d236bd"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCiscoWirelessLanFeatureTemplate(ctx *pulumi.Context, args *LookupCiscoWirelessLanFeatureTemplateArgs, opts ...pulumi.InvokeOption) (*LookupCiscoWirelessLanFeatureTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCiscoWirelessLanFeatureTemplateResult
	err := ctx.Invoke("sdwan:index/getCiscoWirelessLanFeatureTemplate:getCiscoWirelessLanFeatureTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCiscoWirelessLanFeatureTemplate.
type LookupCiscoWirelessLanFeatureTemplateArgs struct {
	// The id of the feature template
	Id *string `pulumi:"id"`
	// The name of the feature template
	Name *string `pulumi:"name"`
}

// A collection of values returned by getCiscoWirelessLanFeatureTemplate.
type LookupCiscoWirelessLanFeatureTemplateResult struct {
	// Set mobile express default gateway
	ControllerDefaultGateway string `pulumi:"controllerDefaultGateway"`
	// Variable name
	ControllerDefaultGatewayVariable string `pulumi:"controllerDefaultGatewayVariable"`
	// Set mobile express controller address
	ControllerIpAddress string `pulumi:"controllerIpAddress"`
	// Variable name
	ControllerIpAddressVariable string `pulumi:"controllerIpAddressVariable"`
	// Set mobile express controller subnet mask
	ControllerSubnetMask string `pulumi:"controllerSubnetMask"`
	// Variable name
	ControllerSubnetMaskVariable string `pulumi:"controllerSubnetMaskVariable"`
	// Select country
	Country string `pulumi:"country"`
	// Variable name
	CountryVariable string `pulumi:"countryVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	DeviceTypes []string `pulumi:"deviceTypes"`
	// The id of the feature template
	Id string `pulumi:"id"`
	// The name of the feature template
	Name string `pulumi:"name"`
	// Set management password
	Password string `pulumi:"password"`
	// Variable name
	PasswordVariable string `pulumi:"passwordVariable"`
	// 2.4GHz Shutdown
	Shutdown24ghz bool `pulumi:"shutdown24ghz"`
	// Variable name
	Shutdown24ghzVariable string `pulumi:"shutdown24ghzVariable"`
	// 5GHz Shutdown
	Shutdown5ghz bool `pulumi:"shutdown5ghz"`
	// Variable name
	Shutdown5ghzVariable string `pulumi:"shutdown5ghzVariable"`
	// Configure Wi-Fi SSID
	Ssids []GetCiscoWirelessLanFeatureTemplateSsid `pulumi:"ssids"`
	// The template type
	TemplateType string `pulumi:"templateType"`
	// Set management username
	Username string `pulumi:"username"`
	// Variable name
	UsernameVariable string `pulumi:"usernameVariable"`
	// The version of the feature template
	Version int `pulumi:"version"`
}

func LookupCiscoWirelessLanFeatureTemplateOutput(ctx *pulumi.Context, args LookupCiscoWirelessLanFeatureTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupCiscoWirelessLanFeatureTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCiscoWirelessLanFeatureTemplateResultOutput, error) {
			args := v.(LookupCiscoWirelessLanFeatureTemplateArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupCiscoWirelessLanFeatureTemplateResult
			secret, err := ctx.InvokePackageRaw("sdwan:index/getCiscoWirelessLanFeatureTemplate:getCiscoWirelessLanFeatureTemplate", args, &rv, "", opts...)
			if err != nil {
				return LookupCiscoWirelessLanFeatureTemplateResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupCiscoWirelessLanFeatureTemplateResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupCiscoWirelessLanFeatureTemplateResultOutput), nil
			}
			return output, nil
		}).(LookupCiscoWirelessLanFeatureTemplateResultOutput)
}

// A collection of arguments for invoking getCiscoWirelessLanFeatureTemplate.
type LookupCiscoWirelessLanFeatureTemplateOutputArgs struct {
	// The id of the feature template
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the feature template
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupCiscoWirelessLanFeatureTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCiscoWirelessLanFeatureTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getCiscoWirelessLanFeatureTemplate.
type LookupCiscoWirelessLanFeatureTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupCiscoWirelessLanFeatureTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCiscoWirelessLanFeatureTemplateResult)(nil)).Elem()
}

func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) ToLookupCiscoWirelessLanFeatureTemplateResultOutput() LookupCiscoWirelessLanFeatureTemplateResultOutput {
	return o
}

func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) ToLookupCiscoWirelessLanFeatureTemplateResultOutputWithContext(ctx context.Context) LookupCiscoWirelessLanFeatureTemplateResultOutput {
	return o
}

// Set mobile express default gateway
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) ControllerDefaultGateway() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) string { return v.ControllerDefaultGateway }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) ControllerDefaultGatewayVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) string { return v.ControllerDefaultGatewayVariable }).(pulumi.StringOutput)
}

// Set mobile express controller address
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) ControllerIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) string { return v.ControllerIpAddress }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) ControllerIpAddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) string { return v.ControllerIpAddressVariable }).(pulumi.StringOutput)
}

// Set mobile express controller subnet mask
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) ControllerSubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) string { return v.ControllerSubnetMask }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) ControllerSubnetMaskVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) string { return v.ControllerSubnetMaskVariable }).(pulumi.StringOutput)
}

// Select country
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) string { return v.Country }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) CountryVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) string { return v.CountryVariable }).(pulumi.StringOutput)
}

// The description of the feature template
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) []string { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// The id of the feature template
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the feature template
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// Set management password
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) string { return v.Password }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) PasswordVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) string { return v.PasswordVariable }).(pulumi.StringOutput)
}

// 2.4GHz Shutdown
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) Shutdown24ghz() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) bool { return v.Shutdown24ghz }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) Shutdown24ghzVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) string { return v.Shutdown24ghzVariable }).(pulumi.StringOutput)
}

// 5GHz Shutdown
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) Shutdown5ghz() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) bool { return v.Shutdown5ghz }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) Shutdown5ghzVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) string { return v.Shutdown5ghzVariable }).(pulumi.StringOutput)
}

// Configure Wi-Fi SSID
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) Ssids() GetCiscoWirelessLanFeatureTemplateSsidArrayOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) []GetCiscoWirelessLanFeatureTemplateSsid {
		return v.Ssids
	}).(GetCiscoWirelessLanFeatureTemplateSsidArrayOutput)
}

// The template type
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) string { return v.TemplateType }).(pulumi.StringOutput)
}

// Set management username
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) string { return v.Username }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) UsernameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) string { return v.UsernameVariable }).(pulumi.StringOutput)
}

// The version of the feature template
func (o LookupCiscoWirelessLanFeatureTemplateResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoWirelessLanFeatureTemplateResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCiscoWirelessLanFeatureTemplateResultOutput{})
}
