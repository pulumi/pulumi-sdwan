// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Cellular Profile feature template.
//   - Minimum SD-WAN Manager version: `15.0.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewCellularProfileFeatureTemplate(ctx, "example", &sdwan.CellularProfileFeatureTemplateArgs{
//				Name:        pulumi.String("Example"),
//				Description: pulumi.String("My Example"),
//				DeviceTypes: pulumi.StringArray{
//					pulumi.String("vedge-C8000V"),
//				},
//				IfName:                pulumi.String("Ethernet1"),
//				ProfileId:             pulumi.Int(1),
//				AccessPointName:       pulumi.String("APN1"),
//				AuthenticationType:    pulumi.String("CHAP"),
//				IpAddress:             pulumi.String("1.2.3.4"),
//				ProfileName:           pulumi.String("PROFILE1"),
//				PacketDataNetworkType: pulumi.String("ipv4"),
//				ProfileUsername:       pulumi.String("MyUsername"),
//				ProfilePassword:       pulumi.String("MyPassword"),
//				PrimaryDnsAddress:     pulumi.String("1.2.3.4"),
//				SecondaryDnsAddress:   pulumi.String("1.2.3.5"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/cellularProfileFeatureTemplate:CellularProfileFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type CellularProfileFeatureTemplate struct {
	pulumi.CustomResourceState

	// Set access point name
	AccessPointName pulumi.StringPtrOutput `pulumi:"accessPointName"`
	// Variable name
	AccessPointNameVariable pulumi.StringPtrOutput `pulumi:"accessPointNameVariable"`
	// Set authentication type - Choices: `None`, `PAP`, `CHAP`, `PAP/CHAP` - Default value: `None`
	AuthenticationType pulumi.StringPtrOutput `pulumi:"authenticationType"`
	// Variable name
	AuthenticationTypeVariable pulumi.StringPtrOutput `pulumi:"authenticationTypeVariable"`
	// The description of the feature template
	Description pulumi.StringOutput `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayOutput `pulumi:"deviceTypes"`
	// Set interface name
	IfName pulumi.StringPtrOutput `pulumi:"ifName"`
	// Variable name
	IfNameVariable pulumi.StringPtrOutput `pulumi:"ifNameVariable"`
	// Set IP address
	IpAddress pulumi.StringPtrOutput `pulumi:"ipAddress"`
	// Variable name
	IpAddressVariable pulumi.StringPtrOutput `pulumi:"ipAddressVariable"`
	// The name of the feature template
	Name pulumi.StringOutput `pulumi:"name"`
	// Set packet data network type - Choices: `ipv4`, `ipv6`, `ipv46`
	PacketDataNetworkType pulumi.StringPtrOutput `pulumi:"packetDataNetworkType"`
	// Variable name
	PacketDataNetworkTypeVariable pulumi.StringPtrOutput `pulumi:"packetDataNetworkTypeVariable"`
	// Set the address of the primary DNS server
	PrimaryDnsAddress pulumi.StringPtrOutput `pulumi:"primaryDnsAddress"`
	// Variable name
	PrimaryDnsAddressVariable pulumi.StringPtrOutput `pulumi:"primaryDnsAddressVariable"`
	// Set Profile ID - Range: `1`-`16`
	ProfileId pulumi.IntPtrOutput `pulumi:"profileId"`
	// Variable name
	ProfileIdVariable pulumi.StringPtrOutput `pulumi:"profileIdVariable"`
	// Set profile name
	ProfileName pulumi.StringPtrOutput `pulumi:"profileName"`
	// Variable name
	ProfileNameVariable pulumi.StringPtrOutput `pulumi:"profileNameVariable"`
	// Set the profile password
	ProfilePassword pulumi.StringPtrOutput `pulumi:"profilePassword"`
	// Variable name
	ProfilePasswordVariable pulumi.StringPtrOutput `pulumi:"profilePasswordVariable"`
	// Set the profile username
	ProfileUsername pulumi.StringPtrOutput `pulumi:"profileUsername"`
	// Variable name
	ProfileUsernameVariable pulumi.StringPtrOutput `pulumi:"profileUsernameVariable"`
	// Set the address of the secondary DNS server
	SecondaryDnsAddress pulumi.StringPtrOutput `pulumi:"secondaryDnsAddress"`
	// Variable name
	SecondaryDnsAddressVariable pulumi.StringPtrOutput `pulumi:"secondaryDnsAddressVariable"`
	// The template type
	TemplateType pulumi.StringOutput `pulumi:"templateType"`
	// The version of the feature template
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewCellularProfileFeatureTemplate registers a new resource with the given unique name, arguments, and options.
func NewCellularProfileFeatureTemplate(ctx *pulumi.Context,
	name string, args *CellularProfileFeatureTemplateArgs, opts ...pulumi.ResourceOption) (*CellularProfileFeatureTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.DeviceTypes == nil {
		return nil, errors.New("invalid value for required argument 'DeviceTypes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CellularProfileFeatureTemplate
	err := ctx.RegisterResource("sdwan:index/cellularProfileFeatureTemplate:CellularProfileFeatureTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCellularProfileFeatureTemplate gets an existing CellularProfileFeatureTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCellularProfileFeatureTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CellularProfileFeatureTemplateState, opts ...pulumi.ResourceOption) (*CellularProfileFeatureTemplate, error) {
	var resource CellularProfileFeatureTemplate
	err := ctx.ReadResource("sdwan:index/cellularProfileFeatureTemplate:CellularProfileFeatureTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CellularProfileFeatureTemplate resources.
type cellularProfileFeatureTemplateState struct {
	// Set access point name
	AccessPointName *string `pulumi:"accessPointName"`
	// Variable name
	AccessPointNameVariable *string `pulumi:"accessPointNameVariable"`
	// Set authentication type - Choices: `None`, `PAP`, `CHAP`, `PAP/CHAP` - Default value: `None`
	AuthenticationType *string `pulumi:"authenticationType"`
	// Variable name
	AuthenticationTypeVariable *string `pulumi:"authenticationTypeVariable"`
	// The description of the feature template
	Description *string `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Set interface name
	IfName *string `pulumi:"ifName"`
	// Variable name
	IfNameVariable *string `pulumi:"ifNameVariable"`
	// Set IP address
	IpAddress *string `pulumi:"ipAddress"`
	// Variable name
	IpAddressVariable *string `pulumi:"ipAddressVariable"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Set packet data network type - Choices: `ipv4`, `ipv6`, `ipv46`
	PacketDataNetworkType *string `pulumi:"packetDataNetworkType"`
	// Variable name
	PacketDataNetworkTypeVariable *string `pulumi:"packetDataNetworkTypeVariable"`
	// Set the address of the primary DNS server
	PrimaryDnsAddress *string `pulumi:"primaryDnsAddress"`
	// Variable name
	PrimaryDnsAddressVariable *string `pulumi:"primaryDnsAddressVariable"`
	// Set Profile ID - Range: `1`-`16`
	ProfileId *int `pulumi:"profileId"`
	// Variable name
	ProfileIdVariable *string `pulumi:"profileIdVariable"`
	// Set profile name
	ProfileName *string `pulumi:"profileName"`
	// Variable name
	ProfileNameVariable *string `pulumi:"profileNameVariable"`
	// Set the profile password
	ProfilePassword *string `pulumi:"profilePassword"`
	// Variable name
	ProfilePasswordVariable *string `pulumi:"profilePasswordVariable"`
	// Set the profile username
	ProfileUsername *string `pulumi:"profileUsername"`
	// Variable name
	ProfileUsernameVariable *string `pulumi:"profileUsernameVariable"`
	// Set the address of the secondary DNS server
	SecondaryDnsAddress *string `pulumi:"secondaryDnsAddress"`
	// Variable name
	SecondaryDnsAddressVariable *string `pulumi:"secondaryDnsAddressVariable"`
	// The template type
	TemplateType *string `pulumi:"templateType"`
	// The version of the feature template
	Version *int `pulumi:"version"`
}

type CellularProfileFeatureTemplateState struct {
	// Set access point name
	AccessPointName pulumi.StringPtrInput
	// Variable name
	AccessPointNameVariable pulumi.StringPtrInput
	// Set authentication type - Choices: `None`, `PAP`, `CHAP`, `PAP/CHAP` - Default value: `None`
	AuthenticationType pulumi.StringPtrInput
	// Variable name
	AuthenticationTypeVariable pulumi.StringPtrInput
	// The description of the feature template
	Description pulumi.StringPtrInput
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Set interface name
	IfName pulumi.StringPtrInput
	// Variable name
	IfNameVariable pulumi.StringPtrInput
	// Set IP address
	IpAddress pulumi.StringPtrInput
	// Variable name
	IpAddressVariable pulumi.StringPtrInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Set packet data network type - Choices: `ipv4`, `ipv6`, `ipv46`
	PacketDataNetworkType pulumi.StringPtrInput
	// Variable name
	PacketDataNetworkTypeVariable pulumi.StringPtrInput
	// Set the address of the primary DNS server
	PrimaryDnsAddress pulumi.StringPtrInput
	// Variable name
	PrimaryDnsAddressVariable pulumi.StringPtrInput
	// Set Profile ID - Range: `1`-`16`
	ProfileId pulumi.IntPtrInput
	// Variable name
	ProfileIdVariable pulumi.StringPtrInput
	// Set profile name
	ProfileName pulumi.StringPtrInput
	// Variable name
	ProfileNameVariable pulumi.StringPtrInput
	// Set the profile password
	ProfilePassword pulumi.StringPtrInput
	// Variable name
	ProfilePasswordVariable pulumi.StringPtrInput
	// Set the profile username
	ProfileUsername pulumi.StringPtrInput
	// Variable name
	ProfileUsernameVariable pulumi.StringPtrInput
	// Set the address of the secondary DNS server
	SecondaryDnsAddress pulumi.StringPtrInput
	// Variable name
	SecondaryDnsAddressVariable pulumi.StringPtrInput
	// The template type
	TemplateType pulumi.StringPtrInput
	// The version of the feature template
	Version pulumi.IntPtrInput
}

func (CellularProfileFeatureTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*cellularProfileFeatureTemplateState)(nil)).Elem()
}

type cellularProfileFeatureTemplateArgs struct {
	// Set access point name
	AccessPointName *string `pulumi:"accessPointName"`
	// Variable name
	AccessPointNameVariable *string `pulumi:"accessPointNameVariable"`
	// Set authentication type - Choices: `None`, `PAP`, `CHAP`, `PAP/CHAP` - Default value: `None`
	AuthenticationType *string `pulumi:"authenticationType"`
	// Variable name
	AuthenticationTypeVariable *string `pulumi:"authenticationTypeVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Set interface name
	IfName *string `pulumi:"ifName"`
	// Variable name
	IfNameVariable *string `pulumi:"ifNameVariable"`
	// Set IP address
	IpAddress *string `pulumi:"ipAddress"`
	// Variable name
	IpAddressVariable *string `pulumi:"ipAddressVariable"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Set packet data network type - Choices: `ipv4`, `ipv6`, `ipv46`
	PacketDataNetworkType *string `pulumi:"packetDataNetworkType"`
	// Variable name
	PacketDataNetworkTypeVariable *string `pulumi:"packetDataNetworkTypeVariable"`
	// Set the address of the primary DNS server
	PrimaryDnsAddress *string `pulumi:"primaryDnsAddress"`
	// Variable name
	PrimaryDnsAddressVariable *string `pulumi:"primaryDnsAddressVariable"`
	// Set Profile ID - Range: `1`-`16`
	ProfileId *int `pulumi:"profileId"`
	// Variable name
	ProfileIdVariable *string `pulumi:"profileIdVariable"`
	// Set profile name
	ProfileName *string `pulumi:"profileName"`
	// Variable name
	ProfileNameVariable *string `pulumi:"profileNameVariable"`
	// Set the profile password
	ProfilePassword *string `pulumi:"profilePassword"`
	// Variable name
	ProfilePasswordVariable *string `pulumi:"profilePasswordVariable"`
	// Set the profile username
	ProfileUsername *string `pulumi:"profileUsername"`
	// Variable name
	ProfileUsernameVariable *string `pulumi:"profileUsernameVariable"`
	// Set the address of the secondary DNS server
	SecondaryDnsAddress *string `pulumi:"secondaryDnsAddress"`
	// Variable name
	SecondaryDnsAddressVariable *string `pulumi:"secondaryDnsAddressVariable"`
}

// The set of arguments for constructing a CellularProfileFeatureTemplate resource.
type CellularProfileFeatureTemplateArgs struct {
	// Set access point name
	AccessPointName pulumi.StringPtrInput
	// Variable name
	AccessPointNameVariable pulumi.StringPtrInput
	// Set authentication type - Choices: `None`, `PAP`, `CHAP`, `PAP/CHAP` - Default value: `None`
	AuthenticationType pulumi.StringPtrInput
	// Variable name
	AuthenticationTypeVariable pulumi.StringPtrInput
	// The description of the feature template
	Description pulumi.StringInput
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Set interface name
	IfName pulumi.StringPtrInput
	// Variable name
	IfNameVariable pulumi.StringPtrInput
	// Set IP address
	IpAddress pulumi.StringPtrInput
	// Variable name
	IpAddressVariable pulumi.StringPtrInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Set packet data network type - Choices: `ipv4`, `ipv6`, `ipv46`
	PacketDataNetworkType pulumi.StringPtrInput
	// Variable name
	PacketDataNetworkTypeVariable pulumi.StringPtrInput
	// Set the address of the primary DNS server
	PrimaryDnsAddress pulumi.StringPtrInput
	// Variable name
	PrimaryDnsAddressVariable pulumi.StringPtrInput
	// Set Profile ID - Range: `1`-`16`
	ProfileId pulumi.IntPtrInput
	// Variable name
	ProfileIdVariable pulumi.StringPtrInput
	// Set profile name
	ProfileName pulumi.StringPtrInput
	// Variable name
	ProfileNameVariable pulumi.StringPtrInput
	// Set the profile password
	ProfilePassword pulumi.StringPtrInput
	// Variable name
	ProfilePasswordVariable pulumi.StringPtrInput
	// Set the profile username
	ProfileUsername pulumi.StringPtrInput
	// Variable name
	ProfileUsernameVariable pulumi.StringPtrInput
	// Set the address of the secondary DNS server
	SecondaryDnsAddress pulumi.StringPtrInput
	// Variable name
	SecondaryDnsAddressVariable pulumi.StringPtrInput
}

func (CellularProfileFeatureTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cellularProfileFeatureTemplateArgs)(nil)).Elem()
}

type CellularProfileFeatureTemplateInput interface {
	pulumi.Input

	ToCellularProfileFeatureTemplateOutput() CellularProfileFeatureTemplateOutput
	ToCellularProfileFeatureTemplateOutputWithContext(ctx context.Context) CellularProfileFeatureTemplateOutput
}

func (*CellularProfileFeatureTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**CellularProfileFeatureTemplate)(nil)).Elem()
}

func (i *CellularProfileFeatureTemplate) ToCellularProfileFeatureTemplateOutput() CellularProfileFeatureTemplateOutput {
	return i.ToCellularProfileFeatureTemplateOutputWithContext(context.Background())
}

func (i *CellularProfileFeatureTemplate) ToCellularProfileFeatureTemplateOutputWithContext(ctx context.Context) CellularProfileFeatureTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularProfileFeatureTemplateOutput)
}

// CellularProfileFeatureTemplateArrayInput is an input type that accepts CellularProfileFeatureTemplateArray and CellularProfileFeatureTemplateArrayOutput values.
// You can construct a concrete instance of `CellularProfileFeatureTemplateArrayInput` via:
//
//	CellularProfileFeatureTemplateArray{ CellularProfileFeatureTemplateArgs{...} }
type CellularProfileFeatureTemplateArrayInput interface {
	pulumi.Input

	ToCellularProfileFeatureTemplateArrayOutput() CellularProfileFeatureTemplateArrayOutput
	ToCellularProfileFeatureTemplateArrayOutputWithContext(context.Context) CellularProfileFeatureTemplateArrayOutput
}

type CellularProfileFeatureTemplateArray []CellularProfileFeatureTemplateInput

func (CellularProfileFeatureTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CellularProfileFeatureTemplate)(nil)).Elem()
}

func (i CellularProfileFeatureTemplateArray) ToCellularProfileFeatureTemplateArrayOutput() CellularProfileFeatureTemplateArrayOutput {
	return i.ToCellularProfileFeatureTemplateArrayOutputWithContext(context.Background())
}

func (i CellularProfileFeatureTemplateArray) ToCellularProfileFeatureTemplateArrayOutputWithContext(ctx context.Context) CellularProfileFeatureTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularProfileFeatureTemplateArrayOutput)
}

// CellularProfileFeatureTemplateMapInput is an input type that accepts CellularProfileFeatureTemplateMap and CellularProfileFeatureTemplateMapOutput values.
// You can construct a concrete instance of `CellularProfileFeatureTemplateMapInput` via:
//
//	CellularProfileFeatureTemplateMap{ "key": CellularProfileFeatureTemplateArgs{...} }
type CellularProfileFeatureTemplateMapInput interface {
	pulumi.Input

	ToCellularProfileFeatureTemplateMapOutput() CellularProfileFeatureTemplateMapOutput
	ToCellularProfileFeatureTemplateMapOutputWithContext(context.Context) CellularProfileFeatureTemplateMapOutput
}

type CellularProfileFeatureTemplateMap map[string]CellularProfileFeatureTemplateInput

func (CellularProfileFeatureTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CellularProfileFeatureTemplate)(nil)).Elem()
}

func (i CellularProfileFeatureTemplateMap) ToCellularProfileFeatureTemplateMapOutput() CellularProfileFeatureTemplateMapOutput {
	return i.ToCellularProfileFeatureTemplateMapOutputWithContext(context.Background())
}

func (i CellularProfileFeatureTemplateMap) ToCellularProfileFeatureTemplateMapOutputWithContext(ctx context.Context) CellularProfileFeatureTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CellularProfileFeatureTemplateMapOutput)
}

type CellularProfileFeatureTemplateOutput struct{ *pulumi.OutputState }

func (CellularProfileFeatureTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CellularProfileFeatureTemplate)(nil)).Elem()
}

func (o CellularProfileFeatureTemplateOutput) ToCellularProfileFeatureTemplateOutput() CellularProfileFeatureTemplateOutput {
	return o
}

func (o CellularProfileFeatureTemplateOutput) ToCellularProfileFeatureTemplateOutputWithContext(ctx context.Context) CellularProfileFeatureTemplateOutput {
	return o
}

// Set access point name
func (o CellularProfileFeatureTemplateOutput) AccessPointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.AccessPointName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CellularProfileFeatureTemplateOutput) AccessPointNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.AccessPointNameVariable }).(pulumi.StringPtrOutput)
}

// Set authentication type - Choices: `None`, `PAP`, `CHAP`, `PAP/CHAP` - Default value: `None`
func (o CellularProfileFeatureTemplateOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CellularProfileFeatureTemplateOutput) AuthenticationTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.AuthenticationTypeVariable }).(pulumi.StringPtrOutput)
}

// The description of the feature template
func (o CellularProfileFeatureTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
func (o CellularProfileFeatureTemplateOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringArrayOutput { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Set interface name
func (o CellularProfileFeatureTemplateOutput) IfName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.IfName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CellularProfileFeatureTemplateOutput) IfNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.IfNameVariable }).(pulumi.StringPtrOutput)
}

// Set IP address
func (o CellularProfileFeatureTemplateOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CellularProfileFeatureTemplateOutput) IpAddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.IpAddressVariable }).(pulumi.StringPtrOutput)
}

// The name of the feature template
func (o CellularProfileFeatureTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Set packet data network type - Choices: `ipv4`, `ipv6`, `ipv46`
func (o CellularProfileFeatureTemplateOutput) PacketDataNetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.PacketDataNetworkType }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CellularProfileFeatureTemplateOutput) PacketDataNetworkTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.PacketDataNetworkTypeVariable }).(pulumi.StringPtrOutput)
}

// Set the address of the primary DNS server
func (o CellularProfileFeatureTemplateOutput) PrimaryDnsAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.PrimaryDnsAddress }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CellularProfileFeatureTemplateOutput) PrimaryDnsAddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.PrimaryDnsAddressVariable }).(pulumi.StringPtrOutput)
}

// Set Profile ID - Range: `1`-`16`
func (o CellularProfileFeatureTemplateOutput) ProfileId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.IntPtrOutput { return v.ProfileId }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CellularProfileFeatureTemplateOutput) ProfileIdVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.ProfileIdVariable }).(pulumi.StringPtrOutput)
}

// Set profile name
func (o CellularProfileFeatureTemplateOutput) ProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.ProfileName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CellularProfileFeatureTemplateOutput) ProfileNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.ProfileNameVariable }).(pulumi.StringPtrOutput)
}

// Set the profile password
func (o CellularProfileFeatureTemplateOutput) ProfilePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.ProfilePassword }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CellularProfileFeatureTemplateOutput) ProfilePasswordVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.ProfilePasswordVariable }).(pulumi.StringPtrOutput)
}

// Set the profile username
func (o CellularProfileFeatureTemplateOutput) ProfileUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.ProfileUsername }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CellularProfileFeatureTemplateOutput) ProfileUsernameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.ProfileUsernameVariable }).(pulumi.StringPtrOutput)
}

// Set the address of the secondary DNS server
func (o CellularProfileFeatureTemplateOutput) SecondaryDnsAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.SecondaryDnsAddress }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CellularProfileFeatureTemplateOutput) SecondaryDnsAddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringPtrOutput { return v.SecondaryDnsAddressVariable }).(pulumi.StringPtrOutput)
}

// The template type
func (o CellularProfileFeatureTemplateOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.StringOutput { return v.TemplateType }).(pulumi.StringOutput)
}

// The version of the feature template
func (o CellularProfileFeatureTemplateOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *CellularProfileFeatureTemplate) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type CellularProfileFeatureTemplateArrayOutput struct{ *pulumi.OutputState }

func (CellularProfileFeatureTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CellularProfileFeatureTemplate)(nil)).Elem()
}

func (o CellularProfileFeatureTemplateArrayOutput) ToCellularProfileFeatureTemplateArrayOutput() CellularProfileFeatureTemplateArrayOutput {
	return o
}

func (o CellularProfileFeatureTemplateArrayOutput) ToCellularProfileFeatureTemplateArrayOutputWithContext(ctx context.Context) CellularProfileFeatureTemplateArrayOutput {
	return o
}

func (o CellularProfileFeatureTemplateArrayOutput) Index(i pulumi.IntInput) CellularProfileFeatureTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CellularProfileFeatureTemplate {
		return vs[0].([]*CellularProfileFeatureTemplate)[vs[1].(int)]
	}).(CellularProfileFeatureTemplateOutput)
}

type CellularProfileFeatureTemplateMapOutput struct{ *pulumi.OutputState }

func (CellularProfileFeatureTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CellularProfileFeatureTemplate)(nil)).Elem()
}

func (o CellularProfileFeatureTemplateMapOutput) ToCellularProfileFeatureTemplateMapOutput() CellularProfileFeatureTemplateMapOutput {
	return o
}

func (o CellularProfileFeatureTemplateMapOutput) ToCellularProfileFeatureTemplateMapOutputWithContext(ctx context.Context) CellularProfileFeatureTemplateMapOutput {
	return o
}

func (o CellularProfileFeatureTemplateMapOutput) MapIndex(k pulumi.StringInput) CellularProfileFeatureTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CellularProfileFeatureTemplate {
		return vs[0].(map[string]*CellularProfileFeatureTemplate)[vs[1].(string)]
	}).(CellularProfileFeatureTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CellularProfileFeatureTemplateInput)(nil)).Elem(), &CellularProfileFeatureTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*CellularProfileFeatureTemplateArrayInput)(nil)).Elem(), CellularProfileFeatureTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CellularProfileFeatureTemplateMapInput)(nil)).Elem(), CellularProfileFeatureTemplateMap{})
	pulumi.RegisterOutputType(CellularProfileFeatureTemplateOutput{})
	pulumi.RegisterOutputType(CellularProfileFeatureTemplateArrayOutput{})
	pulumi.RegisterOutputType(CellularProfileFeatureTemplateMapOutput{})
}
