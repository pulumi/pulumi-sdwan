// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Cisco VPN Interface GRE feature template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupCiscoVpnInterfaceGreFeatureTemplate(ctx, &sdwan.LookupCiscoVpnInterfaceGreFeatureTemplateArgs{
//				Id: pulumi.StringRef("f6b2c44c-693c-4763-b010-895aa3d236bd"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCiscoVpnInterfaceGreFeatureTemplate(ctx *pulumi.Context, args *LookupCiscoVpnInterfaceGreFeatureTemplateArgs, opts ...pulumi.InvokeOption) (*LookupCiscoVpnInterfaceGreFeatureTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCiscoVpnInterfaceGreFeatureTemplateResult
	err := ctx.Invoke("sdwan:index/getCiscoVpnInterfaceGreFeatureTemplate:getCiscoVpnInterfaceGreFeatureTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCiscoVpnInterfaceGreFeatureTemplate.
type LookupCiscoVpnInterfaceGreFeatureTemplateArgs struct {
	// The id of the feature template
	Id *string `pulumi:"id"`
	// The name of the feature template
	Name *string `pulumi:"name"`
}

// A collection of values returned by getCiscoVpnInterfaceGreFeatureTemplate.
type LookupCiscoVpnInterfaceGreFeatureTemplateResult struct {
	// Apply ACL
	AccessLists []GetCiscoVpnInterfaceGreFeatureTemplateAccessList `pulumi:"accessLists"`
	// Enable Application Tunnel Type
	Application string `pulumi:"application"`
	// Variable name
	ApplicationVariable string `pulumi:"applicationVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
	ClearDontFragment bool `pulumi:"clearDontFragment"`
	// Variable name
	ClearDontFragmentVariable string `pulumi:"clearDontFragmentVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	DeviceTypes []string `pulumi:"deviceTypes"`
	// The id of the feature template
	Id string `pulumi:"id"`
	// Interface description
	InterfaceDescription string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable string `pulumi:"interfaceDescriptionVariable"`
	// Interface name: ge0/\n\n or ge0/\n\n.vlanid or irbbridgeid:1-63 or loopback\n\n or natpool-\n\n when present
	InterfaceName string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable string `pulumi:"interfaceNameVariable"`
	// Assign IPv4 address
	IpAddress string `pulumi:"ipAddress"`
	// Variable name
	IpAddressVariable string `pulumi:"ipAddressVariable"`
	// Interface MTU \n\n, in bytes
	IpMtu int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable string `pulumi:"ipMtuVariable"`
	// The name of the feature template
	Name string `pulumi:"name"`
	// Name of rewrite rule
	RewriteRule string `pulumi:"rewriteRule"`
	// Variable name
	RewriteRuleVariable string `pulumi:"rewriteRuleVariable"`
	// Administrative state
	Shutdown bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable string `pulumi:"shutdownVariable"`
	// TCP MSS on SYN packets, in bytes
	TcpMssAdjust int `pulumi:"tcpMssAdjust"`
	// Variable name
	TcpMssAdjustVariable string `pulumi:"tcpMssAdjustVariable"`
	// The template type
	TemplateType string `pulumi:"templateType"`
	// Variable name
	TrackerVariable string `pulumi:"trackerVariable"`
	// Enable tracker for this interface
	Trackers []string `pulumi:"trackers"`
	// Tunnel destination IP Address
	TunnelDestination string `pulumi:"tunnelDestination"`
	// Variable name
	TunnelDestinationVariable string `pulumi:"tunnelDestinationVariable"`
	// \n\n Interface name: ge0/\n\n or ge0/\n\n.vlanid
	TunnelRouteVia string `pulumi:"tunnelRouteVia"`
	// Variable name
	TunnelRouteViaVariable string `pulumi:"tunnelRouteViaVariable"`
	// Tunnel source IP Address
	TunnelSource string `pulumi:"tunnelSource"`
	// \n\n Interface name: ge0/\n\n or ge0/\n\n.vlanid
	TunnelSourceInterface string `pulumi:"tunnelSourceInterface"`
	// Variable name
	TunnelSourceInterfaceVariable string `pulumi:"tunnelSourceInterfaceVariable"`
	// Variable name
	TunnelSourceVariable string `pulumi:"tunnelSourceVariable"`
	// The version of the feature template
	Version int `pulumi:"version"`
}

func LookupCiscoVpnInterfaceGreFeatureTemplateOutput(ctx *pulumi.Context, args LookupCiscoVpnInterfaceGreFeatureTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput, error) {
			args := v.(LookupCiscoVpnInterfaceGreFeatureTemplateArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupCiscoVpnInterfaceGreFeatureTemplateResult
			secret, err := ctx.InvokePackageRaw("sdwan:index/getCiscoVpnInterfaceGreFeatureTemplate:getCiscoVpnInterfaceGreFeatureTemplate", args, &rv, "", opts...)
			if err != nil {
				return LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput), nil
			}
			return output, nil
		}).(LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput)
}

// A collection of arguments for invoking getCiscoVpnInterfaceGreFeatureTemplate.
type LookupCiscoVpnInterfaceGreFeatureTemplateOutputArgs struct {
	// The id of the feature template
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the feature template
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupCiscoVpnInterfaceGreFeatureTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCiscoVpnInterfaceGreFeatureTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getCiscoVpnInterfaceGreFeatureTemplate.
type LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCiscoVpnInterfaceGreFeatureTemplateResult)(nil)).Elem()
}

func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) ToLookupCiscoVpnInterfaceGreFeatureTemplateResultOutput() LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput {
	return o
}

func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) ToLookupCiscoVpnInterfaceGreFeatureTemplateResultOutputWithContext(ctx context.Context) LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput {
	return o
}

// Apply ACL
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) AccessLists() GetCiscoVpnInterfaceGreFeatureTemplateAccessListArrayOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) []GetCiscoVpnInterfaceGreFeatureTemplateAccessList {
		return v.AccessLists
	}).(GetCiscoVpnInterfaceGreFeatureTemplateAccessListArrayOutput)
}

// Enable Application Tunnel Type
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) Application() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.Application }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) ApplicationVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.ApplicationVariable }).(pulumi.StringOutput)
}

// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) ClearDontFragment() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) bool { return v.ClearDontFragment }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) ClearDontFragmentVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.ClearDontFragmentVariable }).(pulumi.StringOutput)
}

// The description of the feature template
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) []string { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// The id of the feature template
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// Interface description
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) InterfaceDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.InterfaceDescription }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) InterfaceDescriptionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.InterfaceDescriptionVariable }).(pulumi.StringOutput)
}

// Interface name: ge0/\n\n or ge0/\n\n.vlanid or irbbridgeid:1-63 or loopback\n\n or natpool-\n\n when present
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.InterfaceName }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) InterfaceNameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.InterfaceNameVariable }).(pulumi.StringOutput)
}

// Assign IPv4 address
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) IpAddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.IpAddressVariable }).(pulumi.StringOutput)
}

// Interface MTU \n\n, in bytes
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) IpMtu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) int { return v.IpMtu }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) IpMtuVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.IpMtuVariable }).(pulumi.StringOutput)
}

// The name of the feature template
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// Name of rewrite rule
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) RewriteRule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.RewriteRule }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) RewriteRuleVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.RewriteRuleVariable }).(pulumi.StringOutput)
}

// Administrative state
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) Shutdown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) bool { return v.Shutdown }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) ShutdownVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.ShutdownVariable }).(pulumi.StringOutput)
}

// TCP MSS on SYN packets, in bytes
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) TcpMssAdjust() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) int { return v.TcpMssAdjust }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) TcpMssAdjustVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.TcpMssAdjustVariable }).(pulumi.StringOutput)
}

// The template type
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.TemplateType }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) TrackerVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.TrackerVariable }).(pulumi.StringOutput)
}

// Enable tracker for this interface
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) Trackers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) []string { return v.Trackers }).(pulumi.StringArrayOutput)
}

// Tunnel destination IP Address
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) TunnelDestination() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.TunnelDestination }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) TunnelDestinationVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.TunnelDestinationVariable }).(pulumi.StringOutput)
}

// \n\n Interface name: ge0/\n\n or ge0/\n\n.vlanid
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) TunnelRouteVia() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.TunnelRouteVia }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) TunnelRouteViaVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.TunnelRouteViaVariable }).(pulumi.StringOutput)
}

// Tunnel source IP Address
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) TunnelSource() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.TunnelSource }).(pulumi.StringOutput)
}

// \n\n Interface name: ge0/\n\n or ge0/\n\n.vlanid
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) TunnelSourceInterface() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.TunnelSourceInterface }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) TunnelSourceInterfaceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.TunnelSourceInterfaceVariable }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) TunnelSourceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) string { return v.TunnelSourceVariable }).(pulumi.StringOutput)
}

// The version of the feature template
func (o LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoVpnInterfaceGreFeatureTemplateResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCiscoVpnInterfaceGreFeatureTemplateResultOutput{})
}
