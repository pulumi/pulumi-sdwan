// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Policy Object Data IPv6 Prefix List Policy_object.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "policy_object_data_ipv6_prefix_list_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/policyObjectDataIpv6PrefixList:PolicyObjectDataIpv6PrefixList example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type PolicyObjectDataIpv6PrefixList struct {
	pulumi.CustomResourceState

	// The description of the Policy_object
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// IPv6 Prefix List
	Entries PolicyObjectDataIpv6PrefixListEntryArrayOutput `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the Policy_object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewPolicyObjectDataIpv6PrefixList registers a new resource with the given unique name, arguments, and options.
func NewPolicyObjectDataIpv6PrefixList(ctx *pulumi.Context,
	name string, args *PolicyObjectDataIpv6PrefixListArgs, opts ...pulumi.ResourceOption) (*PolicyObjectDataIpv6PrefixList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyObjectDataIpv6PrefixList
	err := ctx.RegisterResource("sdwan:index/policyObjectDataIpv6PrefixList:PolicyObjectDataIpv6PrefixList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyObjectDataIpv6PrefixList gets an existing PolicyObjectDataIpv6PrefixList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyObjectDataIpv6PrefixList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyObjectDataIpv6PrefixListState, opts ...pulumi.ResourceOption) (*PolicyObjectDataIpv6PrefixList, error) {
	var resource PolicyObjectDataIpv6PrefixList
	err := ctx.ReadResource("sdwan:index/policyObjectDataIpv6PrefixList:PolicyObjectDataIpv6PrefixList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyObjectDataIpv6PrefixList resources.
type policyObjectDataIpv6PrefixListState struct {
	// The description of the Policy_object
	Description *string `pulumi:"description"`
	// IPv6 Prefix List
	Entries []PolicyObjectDataIpv6PrefixListEntry `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name *string `pulumi:"name"`
	// The version of the Policy_object
	Version *int `pulumi:"version"`
}

type PolicyObjectDataIpv6PrefixListState struct {
	// The description of the Policy_object
	Description pulumi.StringPtrInput
	// IPv6 Prefix List
	Entries PolicyObjectDataIpv6PrefixListEntryArrayInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Policy_object
	Name pulumi.StringPtrInput
	// The version of the Policy_object
	Version pulumi.IntPtrInput
}

func (PolicyObjectDataIpv6PrefixListState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyObjectDataIpv6PrefixListState)(nil)).Elem()
}

type policyObjectDataIpv6PrefixListArgs struct {
	// The description of the Policy_object
	Description *string `pulumi:"description"`
	// IPv6 Prefix List
	Entries []PolicyObjectDataIpv6PrefixListEntry `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a PolicyObjectDataIpv6PrefixList resource.
type PolicyObjectDataIpv6PrefixListArgs struct {
	// The description of the Policy_object
	Description pulumi.StringPtrInput
	// IPv6 Prefix List
	Entries PolicyObjectDataIpv6PrefixListEntryArrayInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// The name of the Policy_object
	Name pulumi.StringPtrInput
}

func (PolicyObjectDataIpv6PrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyObjectDataIpv6PrefixListArgs)(nil)).Elem()
}

type PolicyObjectDataIpv6PrefixListInput interface {
	pulumi.Input

	ToPolicyObjectDataIpv6PrefixListOutput() PolicyObjectDataIpv6PrefixListOutput
	ToPolicyObjectDataIpv6PrefixListOutputWithContext(ctx context.Context) PolicyObjectDataIpv6PrefixListOutput
}

func (*PolicyObjectDataIpv6PrefixList) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyObjectDataIpv6PrefixList)(nil)).Elem()
}

func (i *PolicyObjectDataIpv6PrefixList) ToPolicyObjectDataIpv6PrefixListOutput() PolicyObjectDataIpv6PrefixListOutput {
	return i.ToPolicyObjectDataIpv6PrefixListOutputWithContext(context.Background())
}

func (i *PolicyObjectDataIpv6PrefixList) ToPolicyObjectDataIpv6PrefixListOutputWithContext(ctx context.Context) PolicyObjectDataIpv6PrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectDataIpv6PrefixListOutput)
}

// PolicyObjectDataIpv6PrefixListArrayInput is an input type that accepts PolicyObjectDataIpv6PrefixListArray and PolicyObjectDataIpv6PrefixListArrayOutput values.
// You can construct a concrete instance of `PolicyObjectDataIpv6PrefixListArrayInput` via:
//
//	PolicyObjectDataIpv6PrefixListArray{ PolicyObjectDataIpv6PrefixListArgs{...} }
type PolicyObjectDataIpv6PrefixListArrayInput interface {
	pulumi.Input

	ToPolicyObjectDataIpv6PrefixListArrayOutput() PolicyObjectDataIpv6PrefixListArrayOutput
	ToPolicyObjectDataIpv6PrefixListArrayOutputWithContext(context.Context) PolicyObjectDataIpv6PrefixListArrayOutput
}

type PolicyObjectDataIpv6PrefixListArray []PolicyObjectDataIpv6PrefixListInput

func (PolicyObjectDataIpv6PrefixListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyObjectDataIpv6PrefixList)(nil)).Elem()
}

func (i PolicyObjectDataIpv6PrefixListArray) ToPolicyObjectDataIpv6PrefixListArrayOutput() PolicyObjectDataIpv6PrefixListArrayOutput {
	return i.ToPolicyObjectDataIpv6PrefixListArrayOutputWithContext(context.Background())
}

func (i PolicyObjectDataIpv6PrefixListArray) ToPolicyObjectDataIpv6PrefixListArrayOutputWithContext(ctx context.Context) PolicyObjectDataIpv6PrefixListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectDataIpv6PrefixListArrayOutput)
}

// PolicyObjectDataIpv6PrefixListMapInput is an input type that accepts PolicyObjectDataIpv6PrefixListMap and PolicyObjectDataIpv6PrefixListMapOutput values.
// You can construct a concrete instance of `PolicyObjectDataIpv6PrefixListMapInput` via:
//
//	PolicyObjectDataIpv6PrefixListMap{ "key": PolicyObjectDataIpv6PrefixListArgs{...} }
type PolicyObjectDataIpv6PrefixListMapInput interface {
	pulumi.Input

	ToPolicyObjectDataIpv6PrefixListMapOutput() PolicyObjectDataIpv6PrefixListMapOutput
	ToPolicyObjectDataIpv6PrefixListMapOutputWithContext(context.Context) PolicyObjectDataIpv6PrefixListMapOutput
}

type PolicyObjectDataIpv6PrefixListMap map[string]PolicyObjectDataIpv6PrefixListInput

func (PolicyObjectDataIpv6PrefixListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyObjectDataIpv6PrefixList)(nil)).Elem()
}

func (i PolicyObjectDataIpv6PrefixListMap) ToPolicyObjectDataIpv6PrefixListMapOutput() PolicyObjectDataIpv6PrefixListMapOutput {
	return i.ToPolicyObjectDataIpv6PrefixListMapOutputWithContext(context.Background())
}

func (i PolicyObjectDataIpv6PrefixListMap) ToPolicyObjectDataIpv6PrefixListMapOutputWithContext(ctx context.Context) PolicyObjectDataIpv6PrefixListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectDataIpv6PrefixListMapOutput)
}

type PolicyObjectDataIpv6PrefixListOutput struct{ *pulumi.OutputState }

func (PolicyObjectDataIpv6PrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyObjectDataIpv6PrefixList)(nil)).Elem()
}

func (o PolicyObjectDataIpv6PrefixListOutput) ToPolicyObjectDataIpv6PrefixListOutput() PolicyObjectDataIpv6PrefixListOutput {
	return o
}

func (o PolicyObjectDataIpv6PrefixListOutput) ToPolicyObjectDataIpv6PrefixListOutputWithContext(ctx context.Context) PolicyObjectDataIpv6PrefixListOutput {
	return o
}

// The description of the Policy_object
func (o PolicyObjectDataIpv6PrefixListOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyObjectDataIpv6PrefixList) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// IPv6 Prefix List
func (o PolicyObjectDataIpv6PrefixListOutput) Entries() PolicyObjectDataIpv6PrefixListEntryArrayOutput {
	return o.ApplyT(func(v *PolicyObjectDataIpv6PrefixList) PolicyObjectDataIpv6PrefixListEntryArrayOutput {
		return v.Entries
	}).(PolicyObjectDataIpv6PrefixListEntryArrayOutput)
}

// Feature Profile ID
func (o PolicyObjectDataIpv6PrefixListOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectDataIpv6PrefixList) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The name of the Policy_object
func (o PolicyObjectDataIpv6PrefixListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectDataIpv6PrefixList) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the Policy_object
func (o PolicyObjectDataIpv6PrefixListOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *PolicyObjectDataIpv6PrefixList) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type PolicyObjectDataIpv6PrefixListArrayOutput struct{ *pulumi.OutputState }

func (PolicyObjectDataIpv6PrefixListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyObjectDataIpv6PrefixList)(nil)).Elem()
}

func (o PolicyObjectDataIpv6PrefixListArrayOutput) ToPolicyObjectDataIpv6PrefixListArrayOutput() PolicyObjectDataIpv6PrefixListArrayOutput {
	return o
}

func (o PolicyObjectDataIpv6PrefixListArrayOutput) ToPolicyObjectDataIpv6PrefixListArrayOutputWithContext(ctx context.Context) PolicyObjectDataIpv6PrefixListArrayOutput {
	return o
}

func (o PolicyObjectDataIpv6PrefixListArrayOutput) Index(i pulumi.IntInput) PolicyObjectDataIpv6PrefixListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyObjectDataIpv6PrefixList {
		return vs[0].([]*PolicyObjectDataIpv6PrefixList)[vs[1].(int)]
	}).(PolicyObjectDataIpv6PrefixListOutput)
}

type PolicyObjectDataIpv6PrefixListMapOutput struct{ *pulumi.OutputState }

func (PolicyObjectDataIpv6PrefixListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyObjectDataIpv6PrefixList)(nil)).Elem()
}

func (o PolicyObjectDataIpv6PrefixListMapOutput) ToPolicyObjectDataIpv6PrefixListMapOutput() PolicyObjectDataIpv6PrefixListMapOutput {
	return o
}

func (o PolicyObjectDataIpv6PrefixListMapOutput) ToPolicyObjectDataIpv6PrefixListMapOutputWithContext(ctx context.Context) PolicyObjectDataIpv6PrefixListMapOutput {
	return o
}

func (o PolicyObjectDataIpv6PrefixListMapOutput) MapIndex(k pulumi.StringInput) PolicyObjectDataIpv6PrefixListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyObjectDataIpv6PrefixList {
		return vs[0].(map[string]*PolicyObjectDataIpv6PrefixList)[vs[1].(string)]
	}).(PolicyObjectDataIpv6PrefixListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectDataIpv6PrefixListInput)(nil)).Elem(), &PolicyObjectDataIpv6PrefixList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectDataIpv6PrefixListArrayInput)(nil)).Elem(), PolicyObjectDataIpv6PrefixListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectDataIpv6PrefixListMapInput)(nil)).Elem(), PolicyObjectDataIpv6PrefixListMap{})
	pulumi.RegisterOutputType(PolicyObjectDataIpv6PrefixListOutput{})
	pulumi.RegisterOutputType(PolicyObjectDataIpv6PrefixListArrayOutput{})
	pulumi.RegisterOutputType(PolicyObjectDataIpv6PrefixListMapOutput{})
}
