// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Cisco BGP feature template.
//   - Minimum SD-WAN Manager version: `15.0.0`
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/ciscoBgpFeatureTemplate:CiscoBgpFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type CiscoBgpFeatureTemplate struct {
	pulumi.CustomResourceState

	// Set BGP address family
	AddressFamilies CiscoBgpFeatureTemplateAddressFamilyArrayOutput `pulumi:"addressFamilies"`
	// Compare MEDs from all ASs when selecting active BGP paths
	//   - Default value: `false`
	AlwaysCompareMed pulumi.BoolPtrOutput `pulumi:"alwaysCompareMed"`
	// Variable name
	AlwaysCompareMedVariable pulumi.StringPtrOutput `pulumi:"alwaysCompareMedVariable"`
	// Set autonomous system number <1..4294967295> or <XX.YY>
	AsNumber pulumi.StringPtrOutput `pulumi:"asNumber"`
	// Variable name
	AsNumberVariable pulumi.StringPtrOutput `pulumi:"asNumberVariable"`
	// Compare router IDs when selecting active BGP paths
	//   - Default value: `false`
	CompareRouterId pulumi.BoolPtrOutput `pulumi:"compareRouterId"`
	// Variable name
	CompareRouterIdVariable pulumi.StringPtrOutput `pulumi:"compareRouterIdVariable"`
	// The description of the feature template
	Description pulumi.StringOutput `pulumi:"description"`
	// Compare MEDs from all routes from same AS when selecting active BGP paths
	//   - Default value: `false`
	DeterministicMed pulumi.BoolPtrOutput `pulumi:"deterministicMed"`
	// Variable name
	DeterministicMedVariable pulumi.StringPtrOutput `pulumi:"deterministicMedVariable"`
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayOutput `pulumi:"deviceTypes"`
	// Set administrative distance for external BGP routes
	//   - Range: `1`-`255`
	//   - Default value: `20`
	DistanceExternal pulumi.IntPtrOutput `pulumi:"distanceExternal"`
	// Variable name
	DistanceExternalVariable pulumi.StringPtrOutput `pulumi:"distanceExternalVariable"`
	// Set administrative distance for internal BGP routes
	//   - Range: `1`-`255`
	//   - Default value: `200`
	DistanceInternal pulumi.IntPtrOutput `pulumi:"distanceInternal"`
	// Variable name
	DistanceInternalVariable pulumi.StringPtrOutput `pulumi:"distanceInternalVariable"`
	// Set administrative distance for local BGP routes
	//   - Range: `1`-`255`
	//   - Default value: `20`
	DistanceLocal pulumi.IntPtrOutput `pulumi:"distanceLocal"`
	// Variable name
	DistanceLocalVariable pulumi.StringPtrOutput `pulumi:"distanceLocalVariable"`
	// Set the interval when BGP considers a neighbor to be down
	//   - Range: `0`-`65535`
	//   - Default value: `180`
	Holdtime pulumi.IntPtrOutput `pulumi:"holdtime"`
	// Variable name
	HoldtimeVariable pulumi.StringPtrOutput `pulumi:"holdtimeVariable"`
	// Set BGP neighbors
	Ipv4Neighbors CiscoBgpFeatureTemplateIpv4NeighborArrayOutput `pulumi:"ipv4Neighbors"`
	// Router Target for IPV4
	Ipv4RouteTargets CiscoBgpFeatureTemplateIpv4RouteTargetArrayOutput `pulumi:"ipv4RouteTargets"`
	// Set BGP IPv6 neighbors
	Ipv6Neighbors CiscoBgpFeatureTemplateIpv6NeighborArrayOutput `pulumi:"ipv6Neighbors"`
	// Router Target for IPV6
	Ipv6RouteTargets CiscoBgpFeatureTemplateIpv6RouteTargetArrayOutput `pulumi:"ipv6RouteTargets"`
	// Set how often keepalive messages are sent to BGP peer
	//   - Range: `0`-`65535`
	//   - Default value: `60`
	Keepalive pulumi.IntPtrOutput `pulumi:"keepalive"`
	// Variable name
	KeepaliveVariable pulumi.StringPtrOutput `pulumi:"keepaliveVariable"`
	// If path has no MED, consider it to be worst path when selecting active BGP paths
	//   - Default value: `false`
	MissingMedWorst pulumi.BoolPtrOutput `pulumi:"missingMedWorst"`
	// Variable name
	MissingMedWorstVariable pulumi.StringPtrOutput `pulumi:"missingMedWorstVariable"`
	// MPLS BGP Interface
	MplsInterfaces CiscoBgpFeatureTemplateMplsInterfaceArrayOutput `pulumi:"mplsInterfaces"`
	// Ignore AS for multipath selection
	//   - Default value: `false`
	MultipathRelax pulumi.BoolPtrOutput `pulumi:"multipathRelax"`
	// Variable name
	MultipathRelaxVariable pulumi.StringPtrOutput `pulumi:"multipathRelaxVariable"`
	// The name of the feature template
	Name pulumi.StringOutput `pulumi:"name"`
	// Propagate AS Path
	//   - Default value: `false`
	PropagateAspath pulumi.BoolPtrOutput `pulumi:"propagateAspath"`
	// Variable name
	PropagateAspathVariable pulumi.StringPtrOutput `pulumi:"propagateAspathVariable"`
	// Propagate Community
	//   - Default value: `false`
	PropagateCommunity pulumi.BoolPtrOutput `pulumi:"propagateCommunity"`
	// Variable name
	PropagateCommunityVariable pulumi.StringPtrOutput `pulumi:"propagateCommunityVariable"`
	// Configure BGP router identifier
	RouterId pulumi.StringPtrOutput `pulumi:"routerId"`
	// Variable name
	RouterIdVariable pulumi.StringPtrOutput `pulumi:"routerIdVariable"`
	// Enable or disable BGP
	//   - Default value: `false`
	Shutdown pulumi.BoolPtrOutput `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable pulumi.StringPtrOutput `pulumi:"shutdownVariable"`
	// The template type
	TemplateType pulumi.StringOutput `pulumi:"templateType"`
	// The version of the feature template
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewCiscoBgpFeatureTemplate registers a new resource with the given unique name, arguments, and options.
func NewCiscoBgpFeatureTemplate(ctx *pulumi.Context,
	name string, args *CiscoBgpFeatureTemplateArgs, opts ...pulumi.ResourceOption) (*CiscoBgpFeatureTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.DeviceTypes == nil {
		return nil, errors.New("invalid value for required argument 'DeviceTypes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CiscoBgpFeatureTemplate
	err := ctx.RegisterResource("sdwan:index/ciscoBgpFeatureTemplate:CiscoBgpFeatureTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCiscoBgpFeatureTemplate gets an existing CiscoBgpFeatureTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCiscoBgpFeatureTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CiscoBgpFeatureTemplateState, opts ...pulumi.ResourceOption) (*CiscoBgpFeatureTemplate, error) {
	var resource CiscoBgpFeatureTemplate
	err := ctx.ReadResource("sdwan:index/ciscoBgpFeatureTemplate:CiscoBgpFeatureTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CiscoBgpFeatureTemplate resources.
type ciscoBgpFeatureTemplateState struct {
	// Set BGP address family
	AddressFamilies []CiscoBgpFeatureTemplateAddressFamily `pulumi:"addressFamilies"`
	// Compare MEDs from all ASs when selecting active BGP paths
	//   - Default value: `false`
	AlwaysCompareMed *bool `pulumi:"alwaysCompareMed"`
	// Variable name
	AlwaysCompareMedVariable *string `pulumi:"alwaysCompareMedVariable"`
	// Set autonomous system number <1..4294967295> or <XX.YY>
	AsNumber *string `pulumi:"asNumber"`
	// Variable name
	AsNumberVariable *string `pulumi:"asNumberVariable"`
	// Compare router IDs when selecting active BGP paths
	//   - Default value: `false`
	CompareRouterId *bool `pulumi:"compareRouterId"`
	// Variable name
	CompareRouterIdVariable *string `pulumi:"compareRouterIdVariable"`
	// The description of the feature template
	Description *string `pulumi:"description"`
	// Compare MEDs from all routes from same AS when selecting active BGP paths
	//   - Default value: `false`
	DeterministicMed *bool `pulumi:"deterministicMed"`
	// Variable name
	DeterministicMedVariable *string `pulumi:"deterministicMedVariable"`
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Set administrative distance for external BGP routes
	//   - Range: `1`-`255`
	//   - Default value: `20`
	DistanceExternal *int `pulumi:"distanceExternal"`
	// Variable name
	DistanceExternalVariable *string `pulumi:"distanceExternalVariable"`
	// Set administrative distance for internal BGP routes
	//   - Range: `1`-`255`
	//   - Default value: `200`
	DistanceInternal *int `pulumi:"distanceInternal"`
	// Variable name
	DistanceInternalVariable *string `pulumi:"distanceInternalVariable"`
	// Set administrative distance for local BGP routes
	//   - Range: `1`-`255`
	//   - Default value: `20`
	DistanceLocal *int `pulumi:"distanceLocal"`
	// Variable name
	DistanceLocalVariable *string `pulumi:"distanceLocalVariable"`
	// Set the interval when BGP considers a neighbor to be down
	//   - Range: `0`-`65535`
	//   - Default value: `180`
	Holdtime *int `pulumi:"holdtime"`
	// Variable name
	HoldtimeVariable *string `pulumi:"holdtimeVariable"`
	// Set BGP neighbors
	Ipv4Neighbors []CiscoBgpFeatureTemplateIpv4Neighbor `pulumi:"ipv4Neighbors"`
	// Router Target for IPV4
	Ipv4RouteTargets []CiscoBgpFeatureTemplateIpv4RouteTarget `pulumi:"ipv4RouteTargets"`
	// Set BGP IPv6 neighbors
	Ipv6Neighbors []CiscoBgpFeatureTemplateIpv6Neighbor `pulumi:"ipv6Neighbors"`
	// Router Target for IPV6
	Ipv6RouteTargets []CiscoBgpFeatureTemplateIpv6RouteTarget `pulumi:"ipv6RouteTargets"`
	// Set how often keepalive messages are sent to BGP peer
	//   - Range: `0`-`65535`
	//   - Default value: `60`
	Keepalive *int `pulumi:"keepalive"`
	// Variable name
	KeepaliveVariable *string `pulumi:"keepaliveVariable"`
	// If path has no MED, consider it to be worst path when selecting active BGP paths
	//   - Default value: `false`
	MissingMedWorst *bool `pulumi:"missingMedWorst"`
	// Variable name
	MissingMedWorstVariable *string `pulumi:"missingMedWorstVariable"`
	// MPLS BGP Interface
	MplsInterfaces []CiscoBgpFeatureTemplateMplsInterface `pulumi:"mplsInterfaces"`
	// Ignore AS for multipath selection
	//   - Default value: `false`
	MultipathRelax *bool `pulumi:"multipathRelax"`
	// Variable name
	MultipathRelaxVariable *string `pulumi:"multipathRelaxVariable"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Propagate AS Path
	//   - Default value: `false`
	PropagateAspath *bool `pulumi:"propagateAspath"`
	// Variable name
	PropagateAspathVariable *string `pulumi:"propagateAspathVariable"`
	// Propagate Community
	//   - Default value: `false`
	PropagateCommunity *bool `pulumi:"propagateCommunity"`
	// Variable name
	PropagateCommunityVariable *string `pulumi:"propagateCommunityVariable"`
	// Configure BGP router identifier
	RouterId *string `pulumi:"routerId"`
	// Variable name
	RouterIdVariable *string `pulumi:"routerIdVariable"`
	// Enable or disable BGP
	//   - Default value: `false`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// The template type
	TemplateType *string `pulumi:"templateType"`
	// The version of the feature template
	Version *int `pulumi:"version"`
}

type CiscoBgpFeatureTemplateState struct {
	// Set BGP address family
	AddressFamilies CiscoBgpFeatureTemplateAddressFamilyArrayInput
	// Compare MEDs from all ASs when selecting active BGP paths
	//   - Default value: `false`
	AlwaysCompareMed pulumi.BoolPtrInput
	// Variable name
	AlwaysCompareMedVariable pulumi.StringPtrInput
	// Set autonomous system number <1..4294967295> or <XX.YY>
	AsNumber pulumi.StringPtrInput
	// Variable name
	AsNumberVariable pulumi.StringPtrInput
	// Compare router IDs when selecting active BGP paths
	//   - Default value: `false`
	CompareRouterId pulumi.BoolPtrInput
	// Variable name
	CompareRouterIdVariable pulumi.StringPtrInput
	// The description of the feature template
	Description pulumi.StringPtrInput
	// Compare MEDs from all routes from same AS when selecting active BGP paths
	//   - Default value: `false`
	DeterministicMed pulumi.BoolPtrInput
	// Variable name
	DeterministicMedVariable pulumi.StringPtrInput
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Set administrative distance for external BGP routes
	//   - Range: `1`-`255`
	//   - Default value: `20`
	DistanceExternal pulumi.IntPtrInput
	// Variable name
	DistanceExternalVariable pulumi.StringPtrInput
	// Set administrative distance for internal BGP routes
	//   - Range: `1`-`255`
	//   - Default value: `200`
	DistanceInternal pulumi.IntPtrInput
	// Variable name
	DistanceInternalVariable pulumi.StringPtrInput
	// Set administrative distance for local BGP routes
	//   - Range: `1`-`255`
	//   - Default value: `20`
	DistanceLocal pulumi.IntPtrInput
	// Variable name
	DistanceLocalVariable pulumi.StringPtrInput
	// Set the interval when BGP considers a neighbor to be down
	//   - Range: `0`-`65535`
	//   - Default value: `180`
	Holdtime pulumi.IntPtrInput
	// Variable name
	HoldtimeVariable pulumi.StringPtrInput
	// Set BGP neighbors
	Ipv4Neighbors CiscoBgpFeatureTemplateIpv4NeighborArrayInput
	// Router Target for IPV4
	Ipv4RouteTargets CiscoBgpFeatureTemplateIpv4RouteTargetArrayInput
	// Set BGP IPv6 neighbors
	Ipv6Neighbors CiscoBgpFeatureTemplateIpv6NeighborArrayInput
	// Router Target for IPV6
	Ipv6RouteTargets CiscoBgpFeatureTemplateIpv6RouteTargetArrayInput
	// Set how often keepalive messages are sent to BGP peer
	//   - Range: `0`-`65535`
	//   - Default value: `60`
	Keepalive pulumi.IntPtrInput
	// Variable name
	KeepaliveVariable pulumi.StringPtrInput
	// If path has no MED, consider it to be worst path when selecting active BGP paths
	//   - Default value: `false`
	MissingMedWorst pulumi.BoolPtrInput
	// Variable name
	MissingMedWorstVariable pulumi.StringPtrInput
	// MPLS BGP Interface
	MplsInterfaces CiscoBgpFeatureTemplateMplsInterfaceArrayInput
	// Ignore AS for multipath selection
	//   - Default value: `false`
	MultipathRelax pulumi.BoolPtrInput
	// Variable name
	MultipathRelaxVariable pulumi.StringPtrInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Propagate AS Path
	//   - Default value: `false`
	PropagateAspath pulumi.BoolPtrInput
	// Variable name
	PropagateAspathVariable pulumi.StringPtrInput
	// Propagate Community
	//   - Default value: `false`
	PropagateCommunity pulumi.BoolPtrInput
	// Variable name
	PropagateCommunityVariable pulumi.StringPtrInput
	// Configure BGP router identifier
	RouterId pulumi.StringPtrInput
	// Variable name
	RouterIdVariable pulumi.StringPtrInput
	// Enable or disable BGP
	//   - Default value: `false`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// The template type
	TemplateType pulumi.StringPtrInput
	// The version of the feature template
	Version pulumi.IntPtrInput
}

func (CiscoBgpFeatureTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*ciscoBgpFeatureTemplateState)(nil)).Elem()
}

type ciscoBgpFeatureTemplateArgs struct {
	// Set BGP address family
	AddressFamilies []CiscoBgpFeatureTemplateAddressFamily `pulumi:"addressFamilies"`
	// Compare MEDs from all ASs when selecting active BGP paths
	//   - Default value: `false`
	AlwaysCompareMed *bool `pulumi:"alwaysCompareMed"`
	// Variable name
	AlwaysCompareMedVariable *string `pulumi:"alwaysCompareMedVariable"`
	// Set autonomous system number <1..4294967295> or <XX.YY>
	AsNumber *string `pulumi:"asNumber"`
	// Variable name
	AsNumberVariable *string `pulumi:"asNumberVariable"`
	// Compare router IDs when selecting active BGP paths
	//   - Default value: `false`
	CompareRouterId *bool `pulumi:"compareRouterId"`
	// Variable name
	CompareRouterIdVariable *string `pulumi:"compareRouterIdVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// Compare MEDs from all routes from same AS when selecting active BGP paths
	//   - Default value: `false`
	DeterministicMed *bool `pulumi:"deterministicMed"`
	// Variable name
	DeterministicMedVariable *string `pulumi:"deterministicMedVariable"`
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Set administrative distance for external BGP routes
	//   - Range: `1`-`255`
	//   - Default value: `20`
	DistanceExternal *int `pulumi:"distanceExternal"`
	// Variable name
	DistanceExternalVariable *string `pulumi:"distanceExternalVariable"`
	// Set administrative distance for internal BGP routes
	//   - Range: `1`-`255`
	//   - Default value: `200`
	DistanceInternal *int `pulumi:"distanceInternal"`
	// Variable name
	DistanceInternalVariable *string `pulumi:"distanceInternalVariable"`
	// Set administrative distance for local BGP routes
	//   - Range: `1`-`255`
	//   - Default value: `20`
	DistanceLocal *int `pulumi:"distanceLocal"`
	// Variable name
	DistanceLocalVariable *string `pulumi:"distanceLocalVariable"`
	// Set the interval when BGP considers a neighbor to be down
	//   - Range: `0`-`65535`
	//   - Default value: `180`
	Holdtime *int `pulumi:"holdtime"`
	// Variable name
	HoldtimeVariable *string `pulumi:"holdtimeVariable"`
	// Set BGP neighbors
	Ipv4Neighbors []CiscoBgpFeatureTemplateIpv4Neighbor `pulumi:"ipv4Neighbors"`
	// Router Target for IPV4
	Ipv4RouteTargets []CiscoBgpFeatureTemplateIpv4RouteTarget `pulumi:"ipv4RouteTargets"`
	// Set BGP IPv6 neighbors
	Ipv6Neighbors []CiscoBgpFeatureTemplateIpv6Neighbor `pulumi:"ipv6Neighbors"`
	// Router Target for IPV6
	Ipv6RouteTargets []CiscoBgpFeatureTemplateIpv6RouteTarget `pulumi:"ipv6RouteTargets"`
	// Set how often keepalive messages are sent to BGP peer
	//   - Range: `0`-`65535`
	//   - Default value: `60`
	Keepalive *int `pulumi:"keepalive"`
	// Variable name
	KeepaliveVariable *string `pulumi:"keepaliveVariable"`
	// If path has no MED, consider it to be worst path when selecting active BGP paths
	//   - Default value: `false`
	MissingMedWorst *bool `pulumi:"missingMedWorst"`
	// Variable name
	MissingMedWorstVariable *string `pulumi:"missingMedWorstVariable"`
	// MPLS BGP Interface
	MplsInterfaces []CiscoBgpFeatureTemplateMplsInterface `pulumi:"mplsInterfaces"`
	// Ignore AS for multipath selection
	//   - Default value: `false`
	MultipathRelax *bool `pulumi:"multipathRelax"`
	// Variable name
	MultipathRelaxVariable *string `pulumi:"multipathRelaxVariable"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Propagate AS Path
	//   - Default value: `false`
	PropagateAspath *bool `pulumi:"propagateAspath"`
	// Variable name
	PropagateAspathVariable *string `pulumi:"propagateAspathVariable"`
	// Propagate Community
	//   - Default value: `false`
	PropagateCommunity *bool `pulumi:"propagateCommunity"`
	// Variable name
	PropagateCommunityVariable *string `pulumi:"propagateCommunityVariable"`
	// Configure BGP router identifier
	RouterId *string `pulumi:"routerId"`
	// Variable name
	RouterIdVariable *string `pulumi:"routerIdVariable"`
	// Enable or disable BGP
	//   - Default value: `false`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
}

// The set of arguments for constructing a CiscoBgpFeatureTemplate resource.
type CiscoBgpFeatureTemplateArgs struct {
	// Set BGP address family
	AddressFamilies CiscoBgpFeatureTemplateAddressFamilyArrayInput
	// Compare MEDs from all ASs when selecting active BGP paths
	//   - Default value: `false`
	AlwaysCompareMed pulumi.BoolPtrInput
	// Variable name
	AlwaysCompareMedVariable pulumi.StringPtrInput
	// Set autonomous system number <1..4294967295> or <XX.YY>
	AsNumber pulumi.StringPtrInput
	// Variable name
	AsNumberVariable pulumi.StringPtrInput
	// Compare router IDs when selecting active BGP paths
	//   - Default value: `false`
	CompareRouterId pulumi.BoolPtrInput
	// Variable name
	CompareRouterIdVariable pulumi.StringPtrInput
	// The description of the feature template
	Description pulumi.StringInput
	// Compare MEDs from all routes from same AS when selecting active BGP paths
	//   - Default value: `false`
	DeterministicMed pulumi.BoolPtrInput
	// Variable name
	DeterministicMedVariable pulumi.StringPtrInput
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Set administrative distance for external BGP routes
	//   - Range: `1`-`255`
	//   - Default value: `20`
	DistanceExternal pulumi.IntPtrInput
	// Variable name
	DistanceExternalVariable pulumi.StringPtrInput
	// Set administrative distance for internal BGP routes
	//   - Range: `1`-`255`
	//   - Default value: `200`
	DistanceInternal pulumi.IntPtrInput
	// Variable name
	DistanceInternalVariable pulumi.StringPtrInput
	// Set administrative distance for local BGP routes
	//   - Range: `1`-`255`
	//   - Default value: `20`
	DistanceLocal pulumi.IntPtrInput
	// Variable name
	DistanceLocalVariable pulumi.StringPtrInput
	// Set the interval when BGP considers a neighbor to be down
	//   - Range: `0`-`65535`
	//   - Default value: `180`
	Holdtime pulumi.IntPtrInput
	// Variable name
	HoldtimeVariable pulumi.StringPtrInput
	// Set BGP neighbors
	Ipv4Neighbors CiscoBgpFeatureTemplateIpv4NeighborArrayInput
	// Router Target for IPV4
	Ipv4RouteTargets CiscoBgpFeatureTemplateIpv4RouteTargetArrayInput
	// Set BGP IPv6 neighbors
	Ipv6Neighbors CiscoBgpFeatureTemplateIpv6NeighborArrayInput
	// Router Target for IPV6
	Ipv6RouteTargets CiscoBgpFeatureTemplateIpv6RouteTargetArrayInput
	// Set how often keepalive messages are sent to BGP peer
	//   - Range: `0`-`65535`
	//   - Default value: `60`
	Keepalive pulumi.IntPtrInput
	// Variable name
	KeepaliveVariable pulumi.StringPtrInput
	// If path has no MED, consider it to be worst path when selecting active BGP paths
	//   - Default value: `false`
	MissingMedWorst pulumi.BoolPtrInput
	// Variable name
	MissingMedWorstVariable pulumi.StringPtrInput
	// MPLS BGP Interface
	MplsInterfaces CiscoBgpFeatureTemplateMplsInterfaceArrayInput
	// Ignore AS for multipath selection
	//   - Default value: `false`
	MultipathRelax pulumi.BoolPtrInput
	// Variable name
	MultipathRelaxVariable pulumi.StringPtrInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Propagate AS Path
	//   - Default value: `false`
	PropagateAspath pulumi.BoolPtrInput
	// Variable name
	PropagateAspathVariable pulumi.StringPtrInput
	// Propagate Community
	//   - Default value: `false`
	PropagateCommunity pulumi.BoolPtrInput
	// Variable name
	PropagateCommunityVariable pulumi.StringPtrInput
	// Configure BGP router identifier
	RouterId pulumi.StringPtrInput
	// Variable name
	RouterIdVariable pulumi.StringPtrInput
	// Enable or disable BGP
	//   - Default value: `false`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
}

func (CiscoBgpFeatureTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ciscoBgpFeatureTemplateArgs)(nil)).Elem()
}

type CiscoBgpFeatureTemplateInput interface {
	pulumi.Input

	ToCiscoBgpFeatureTemplateOutput() CiscoBgpFeatureTemplateOutput
	ToCiscoBgpFeatureTemplateOutputWithContext(ctx context.Context) CiscoBgpFeatureTemplateOutput
}

func (*CiscoBgpFeatureTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**CiscoBgpFeatureTemplate)(nil)).Elem()
}

func (i *CiscoBgpFeatureTemplate) ToCiscoBgpFeatureTemplateOutput() CiscoBgpFeatureTemplateOutput {
	return i.ToCiscoBgpFeatureTemplateOutputWithContext(context.Background())
}

func (i *CiscoBgpFeatureTemplate) ToCiscoBgpFeatureTemplateOutputWithContext(ctx context.Context) CiscoBgpFeatureTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CiscoBgpFeatureTemplateOutput)
}

// CiscoBgpFeatureTemplateArrayInput is an input type that accepts CiscoBgpFeatureTemplateArray and CiscoBgpFeatureTemplateArrayOutput values.
// You can construct a concrete instance of `CiscoBgpFeatureTemplateArrayInput` via:
//
//	CiscoBgpFeatureTemplateArray{ CiscoBgpFeatureTemplateArgs{...} }
type CiscoBgpFeatureTemplateArrayInput interface {
	pulumi.Input

	ToCiscoBgpFeatureTemplateArrayOutput() CiscoBgpFeatureTemplateArrayOutput
	ToCiscoBgpFeatureTemplateArrayOutputWithContext(context.Context) CiscoBgpFeatureTemplateArrayOutput
}

type CiscoBgpFeatureTemplateArray []CiscoBgpFeatureTemplateInput

func (CiscoBgpFeatureTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CiscoBgpFeatureTemplate)(nil)).Elem()
}

func (i CiscoBgpFeatureTemplateArray) ToCiscoBgpFeatureTemplateArrayOutput() CiscoBgpFeatureTemplateArrayOutput {
	return i.ToCiscoBgpFeatureTemplateArrayOutputWithContext(context.Background())
}

func (i CiscoBgpFeatureTemplateArray) ToCiscoBgpFeatureTemplateArrayOutputWithContext(ctx context.Context) CiscoBgpFeatureTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CiscoBgpFeatureTemplateArrayOutput)
}

// CiscoBgpFeatureTemplateMapInput is an input type that accepts CiscoBgpFeatureTemplateMap and CiscoBgpFeatureTemplateMapOutput values.
// You can construct a concrete instance of `CiscoBgpFeatureTemplateMapInput` via:
//
//	CiscoBgpFeatureTemplateMap{ "key": CiscoBgpFeatureTemplateArgs{...} }
type CiscoBgpFeatureTemplateMapInput interface {
	pulumi.Input

	ToCiscoBgpFeatureTemplateMapOutput() CiscoBgpFeatureTemplateMapOutput
	ToCiscoBgpFeatureTemplateMapOutputWithContext(context.Context) CiscoBgpFeatureTemplateMapOutput
}

type CiscoBgpFeatureTemplateMap map[string]CiscoBgpFeatureTemplateInput

func (CiscoBgpFeatureTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CiscoBgpFeatureTemplate)(nil)).Elem()
}

func (i CiscoBgpFeatureTemplateMap) ToCiscoBgpFeatureTemplateMapOutput() CiscoBgpFeatureTemplateMapOutput {
	return i.ToCiscoBgpFeatureTemplateMapOutputWithContext(context.Background())
}

func (i CiscoBgpFeatureTemplateMap) ToCiscoBgpFeatureTemplateMapOutputWithContext(ctx context.Context) CiscoBgpFeatureTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CiscoBgpFeatureTemplateMapOutput)
}

type CiscoBgpFeatureTemplateOutput struct{ *pulumi.OutputState }

func (CiscoBgpFeatureTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CiscoBgpFeatureTemplate)(nil)).Elem()
}

func (o CiscoBgpFeatureTemplateOutput) ToCiscoBgpFeatureTemplateOutput() CiscoBgpFeatureTemplateOutput {
	return o
}

func (o CiscoBgpFeatureTemplateOutput) ToCiscoBgpFeatureTemplateOutputWithContext(ctx context.Context) CiscoBgpFeatureTemplateOutput {
	return o
}

// Set BGP address family
func (o CiscoBgpFeatureTemplateOutput) AddressFamilies() CiscoBgpFeatureTemplateAddressFamilyArrayOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) CiscoBgpFeatureTemplateAddressFamilyArrayOutput {
		return v.AddressFamilies
	}).(CiscoBgpFeatureTemplateAddressFamilyArrayOutput)
}

// Compare MEDs from all ASs when selecting active BGP paths
//   - Default value: `false`
func (o CiscoBgpFeatureTemplateOutput) AlwaysCompareMed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.BoolPtrOutput { return v.AlwaysCompareMed }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoBgpFeatureTemplateOutput) AlwaysCompareMedVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringPtrOutput { return v.AlwaysCompareMedVariable }).(pulumi.StringPtrOutput)
}

// Set autonomous system number <1..4294967295> or <XX.YY>
func (o CiscoBgpFeatureTemplateOutput) AsNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringPtrOutput { return v.AsNumber }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoBgpFeatureTemplateOutput) AsNumberVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringPtrOutput { return v.AsNumberVariable }).(pulumi.StringPtrOutput)
}

// Compare router IDs when selecting active BGP paths
//   - Default value: `false`
func (o CiscoBgpFeatureTemplateOutput) CompareRouterId() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.BoolPtrOutput { return v.CompareRouterId }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoBgpFeatureTemplateOutput) CompareRouterIdVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringPtrOutput { return v.CompareRouterIdVariable }).(pulumi.StringPtrOutput)
}

// The description of the feature template
func (o CiscoBgpFeatureTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Compare MEDs from all routes from same AS when selecting active BGP paths
//   - Default value: `false`
func (o CiscoBgpFeatureTemplateOutput) DeterministicMed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.BoolPtrOutput { return v.DeterministicMed }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoBgpFeatureTemplateOutput) DeterministicMedVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringPtrOutput { return v.DeterministicMedVariable }).(pulumi.StringPtrOutput)
}

// List of supported device types
//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
func (o CiscoBgpFeatureTemplateOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringArrayOutput { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Set administrative distance for external BGP routes
//   - Range: `1`-`255`
//   - Default value: `20`
func (o CiscoBgpFeatureTemplateOutput) DistanceExternal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.IntPtrOutput { return v.DistanceExternal }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoBgpFeatureTemplateOutput) DistanceExternalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringPtrOutput { return v.DistanceExternalVariable }).(pulumi.StringPtrOutput)
}

// Set administrative distance for internal BGP routes
//   - Range: `1`-`255`
//   - Default value: `200`
func (o CiscoBgpFeatureTemplateOutput) DistanceInternal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.IntPtrOutput { return v.DistanceInternal }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoBgpFeatureTemplateOutput) DistanceInternalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringPtrOutput { return v.DistanceInternalVariable }).(pulumi.StringPtrOutput)
}

// Set administrative distance for local BGP routes
//   - Range: `1`-`255`
//   - Default value: `20`
func (o CiscoBgpFeatureTemplateOutput) DistanceLocal() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.IntPtrOutput { return v.DistanceLocal }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoBgpFeatureTemplateOutput) DistanceLocalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringPtrOutput { return v.DistanceLocalVariable }).(pulumi.StringPtrOutput)
}

// Set the interval when BGP considers a neighbor to be down
//   - Range: `0`-`65535`
//   - Default value: `180`
func (o CiscoBgpFeatureTemplateOutput) Holdtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.IntPtrOutput { return v.Holdtime }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoBgpFeatureTemplateOutput) HoldtimeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringPtrOutput { return v.HoldtimeVariable }).(pulumi.StringPtrOutput)
}

// Set BGP neighbors
func (o CiscoBgpFeatureTemplateOutput) Ipv4Neighbors() CiscoBgpFeatureTemplateIpv4NeighborArrayOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) CiscoBgpFeatureTemplateIpv4NeighborArrayOutput {
		return v.Ipv4Neighbors
	}).(CiscoBgpFeatureTemplateIpv4NeighborArrayOutput)
}

// Router Target for IPV4
func (o CiscoBgpFeatureTemplateOutput) Ipv4RouteTargets() CiscoBgpFeatureTemplateIpv4RouteTargetArrayOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) CiscoBgpFeatureTemplateIpv4RouteTargetArrayOutput {
		return v.Ipv4RouteTargets
	}).(CiscoBgpFeatureTemplateIpv4RouteTargetArrayOutput)
}

// Set BGP IPv6 neighbors
func (o CiscoBgpFeatureTemplateOutput) Ipv6Neighbors() CiscoBgpFeatureTemplateIpv6NeighborArrayOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) CiscoBgpFeatureTemplateIpv6NeighborArrayOutput {
		return v.Ipv6Neighbors
	}).(CiscoBgpFeatureTemplateIpv6NeighborArrayOutput)
}

// Router Target for IPV6
func (o CiscoBgpFeatureTemplateOutput) Ipv6RouteTargets() CiscoBgpFeatureTemplateIpv6RouteTargetArrayOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) CiscoBgpFeatureTemplateIpv6RouteTargetArrayOutput {
		return v.Ipv6RouteTargets
	}).(CiscoBgpFeatureTemplateIpv6RouteTargetArrayOutput)
}

// Set how often keepalive messages are sent to BGP peer
//   - Range: `0`-`65535`
//   - Default value: `60`
func (o CiscoBgpFeatureTemplateOutput) Keepalive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.IntPtrOutput { return v.Keepalive }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoBgpFeatureTemplateOutput) KeepaliveVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringPtrOutput { return v.KeepaliveVariable }).(pulumi.StringPtrOutput)
}

// If path has no MED, consider it to be worst path when selecting active BGP paths
//   - Default value: `false`
func (o CiscoBgpFeatureTemplateOutput) MissingMedWorst() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.BoolPtrOutput { return v.MissingMedWorst }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoBgpFeatureTemplateOutput) MissingMedWorstVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringPtrOutput { return v.MissingMedWorstVariable }).(pulumi.StringPtrOutput)
}

// MPLS BGP Interface
func (o CiscoBgpFeatureTemplateOutput) MplsInterfaces() CiscoBgpFeatureTemplateMplsInterfaceArrayOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) CiscoBgpFeatureTemplateMplsInterfaceArrayOutput {
		return v.MplsInterfaces
	}).(CiscoBgpFeatureTemplateMplsInterfaceArrayOutput)
}

// Ignore AS for multipath selection
//   - Default value: `false`
func (o CiscoBgpFeatureTemplateOutput) MultipathRelax() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.BoolPtrOutput { return v.MultipathRelax }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoBgpFeatureTemplateOutput) MultipathRelaxVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringPtrOutput { return v.MultipathRelaxVariable }).(pulumi.StringPtrOutput)
}

// The name of the feature template
func (o CiscoBgpFeatureTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Propagate AS Path
//   - Default value: `false`
func (o CiscoBgpFeatureTemplateOutput) PropagateAspath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.BoolPtrOutput { return v.PropagateAspath }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoBgpFeatureTemplateOutput) PropagateAspathVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringPtrOutput { return v.PropagateAspathVariable }).(pulumi.StringPtrOutput)
}

// Propagate Community
//   - Default value: `false`
func (o CiscoBgpFeatureTemplateOutput) PropagateCommunity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.BoolPtrOutput { return v.PropagateCommunity }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoBgpFeatureTemplateOutput) PropagateCommunityVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringPtrOutput { return v.PropagateCommunityVariable }).(pulumi.StringPtrOutput)
}

// Configure BGP router identifier
func (o CiscoBgpFeatureTemplateOutput) RouterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringPtrOutput { return v.RouterId }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoBgpFeatureTemplateOutput) RouterIdVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringPtrOutput { return v.RouterIdVariable }).(pulumi.StringPtrOutput)
}

// Enable or disable BGP
//   - Default value: `false`
func (o CiscoBgpFeatureTemplateOutput) Shutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.BoolPtrOutput { return v.Shutdown }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoBgpFeatureTemplateOutput) ShutdownVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringPtrOutput { return v.ShutdownVariable }).(pulumi.StringPtrOutput)
}

// The template type
func (o CiscoBgpFeatureTemplateOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.StringOutput { return v.TemplateType }).(pulumi.StringOutput)
}

// The version of the feature template
func (o CiscoBgpFeatureTemplateOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *CiscoBgpFeatureTemplate) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type CiscoBgpFeatureTemplateArrayOutput struct{ *pulumi.OutputState }

func (CiscoBgpFeatureTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CiscoBgpFeatureTemplate)(nil)).Elem()
}

func (o CiscoBgpFeatureTemplateArrayOutput) ToCiscoBgpFeatureTemplateArrayOutput() CiscoBgpFeatureTemplateArrayOutput {
	return o
}

func (o CiscoBgpFeatureTemplateArrayOutput) ToCiscoBgpFeatureTemplateArrayOutputWithContext(ctx context.Context) CiscoBgpFeatureTemplateArrayOutput {
	return o
}

func (o CiscoBgpFeatureTemplateArrayOutput) Index(i pulumi.IntInput) CiscoBgpFeatureTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CiscoBgpFeatureTemplate {
		return vs[0].([]*CiscoBgpFeatureTemplate)[vs[1].(int)]
	}).(CiscoBgpFeatureTemplateOutput)
}

type CiscoBgpFeatureTemplateMapOutput struct{ *pulumi.OutputState }

func (CiscoBgpFeatureTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CiscoBgpFeatureTemplate)(nil)).Elem()
}

func (o CiscoBgpFeatureTemplateMapOutput) ToCiscoBgpFeatureTemplateMapOutput() CiscoBgpFeatureTemplateMapOutput {
	return o
}

func (o CiscoBgpFeatureTemplateMapOutput) ToCiscoBgpFeatureTemplateMapOutputWithContext(ctx context.Context) CiscoBgpFeatureTemplateMapOutput {
	return o
}

func (o CiscoBgpFeatureTemplateMapOutput) MapIndex(k pulumi.StringInput) CiscoBgpFeatureTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CiscoBgpFeatureTemplate {
		return vs[0].(map[string]*CiscoBgpFeatureTemplate)[vs[1].(string)]
	}).(CiscoBgpFeatureTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CiscoBgpFeatureTemplateInput)(nil)).Elem(), &CiscoBgpFeatureTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*CiscoBgpFeatureTemplateArrayInput)(nil)).Elem(), CiscoBgpFeatureTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CiscoBgpFeatureTemplateMapInput)(nil)).Elem(), CiscoBgpFeatureTemplateMap{})
	pulumi.RegisterOutputType(CiscoBgpFeatureTemplateOutput{})
	pulumi.RegisterOutputType(CiscoBgpFeatureTemplateArrayOutput{})
	pulumi.RegisterOutputType(CiscoBgpFeatureTemplateMapOutput{})
}
