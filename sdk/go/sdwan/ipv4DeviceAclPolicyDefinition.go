// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a IPv4 Device ACL Policy Definition .
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/ipv4DeviceAclPolicyDefinition:Ipv4DeviceAclPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type Ipv4DeviceAclPolicyDefinition struct {
	pulumi.CustomResourceState

	// Default action, either `accept` or `drop` - Choices: `accept`, `drop`
	DefaultAction pulumi.StringPtrOutput `pulumi:"defaultAction"`
	// The description of the policy definition
	Description pulumi.StringOutput `pulumi:"description"`
	// The name of the policy definition
	Name pulumi.StringOutput `pulumi:"name"`
	// List of ACL sequences
	Sequences Ipv4DeviceAclPolicyDefinitionSequenceArrayOutput `pulumi:"sequences"`
	// Type
	Type pulumi.StringOutput `pulumi:"type"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewIpv4DeviceAclPolicyDefinition registers a new resource with the given unique name, arguments, and options.
func NewIpv4DeviceAclPolicyDefinition(ctx *pulumi.Context,
	name string, args *Ipv4DeviceAclPolicyDefinitionArgs, opts ...pulumi.ResourceOption) (*Ipv4DeviceAclPolicyDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Sequences == nil {
		return nil, errors.New("invalid value for required argument 'Sequences'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ipv4DeviceAclPolicyDefinition
	err := ctx.RegisterResource("sdwan:index/ipv4DeviceAclPolicyDefinition:Ipv4DeviceAclPolicyDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpv4DeviceAclPolicyDefinition gets an existing Ipv4DeviceAclPolicyDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpv4DeviceAclPolicyDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Ipv4DeviceAclPolicyDefinitionState, opts ...pulumi.ResourceOption) (*Ipv4DeviceAclPolicyDefinition, error) {
	var resource Ipv4DeviceAclPolicyDefinition
	err := ctx.ReadResource("sdwan:index/ipv4DeviceAclPolicyDefinition:Ipv4DeviceAclPolicyDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ipv4DeviceAclPolicyDefinition resources.
type ipv4DeviceAclPolicyDefinitionState struct {
	// Default action, either `accept` or `drop` - Choices: `accept`, `drop`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the policy definition
	Description *string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of ACL sequences
	Sequences []Ipv4DeviceAclPolicyDefinitionSequence `pulumi:"sequences"`
	// Type
	Type *string `pulumi:"type"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type Ipv4DeviceAclPolicyDefinitionState struct {
	// Default action, either `accept` or `drop` - Choices: `accept`, `drop`
	DefaultAction pulumi.StringPtrInput
	// The description of the policy definition
	Description pulumi.StringPtrInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of ACL sequences
	Sequences Ipv4DeviceAclPolicyDefinitionSequenceArrayInput
	// Type
	Type pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (Ipv4DeviceAclPolicyDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipv4DeviceAclPolicyDefinitionState)(nil)).Elem()
}

type ipv4DeviceAclPolicyDefinitionArgs struct {
	// Default action, either `accept` or `drop` - Choices: `accept`, `drop`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the policy definition
	Description string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of ACL sequences
	Sequences []Ipv4DeviceAclPolicyDefinitionSequence `pulumi:"sequences"`
}

// The set of arguments for constructing a Ipv4DeviceAclPolicyDefinition resource.
type Ipv4DeviceAclPolicyDefinitionArgs struct {
	// Default action, either `accept` or `drop` - Choices: `accept`, `drop`
	DefaultAction pulumi.StringPtrInput
	// The description of the policy definition
	Description pulumi.StringInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of ACL sequences
	Sequences Ipv4DeviceAclPolicyDefinitionSequenceArrayInput
}

func (Ipv4DeviceAclPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipv4DeviceAclPolicyDefinitionArgs)(nil)).Elem()
}

type Ipv4DeviceAclPolicyDefinitionInput interface {
	pulumi.Input

	ToIpv4DeviceAclPolicyDefinitionOutput() Ipv4DeviceAclPolicyDefinitionOutput
	ToIpv4DeviceAclPolicyDefinitionOutputWithContext(ctx context.Context) Ipv4DeviceAclPolicyDefinitionOutput
}

func (*Ipv4DeviceAclPolicyDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv4DeviceAclPolicyDefinition)(nil)).Elem()
}

func (i *Ipv4DeviceAclPolicyDefinition) ToIpv4DeviceAclPolicyDefinitionOutput() Ipv4DeviceAclPolicyDefinitionOutput {
	return i.ToIpv4DeviceAclPolicyDefinitionOutputWithContext(context.Background())
}

func (i *Ipv4DeviceAclPolicyDefinition) ToIpv4DeviceAclPolicyDefinitionOutputWithContext(ctx context.Context) Ipv4DeviceAclPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv4DeviceAclPolicyDefinitionOutput)
}

// Ipv4DeviceAclPolicyDefinitionArrayInput is an input type that accepts Ipv4DeviceAclPolicyDefinitionArray and Ipv4DeviceAclPolicyDefinitionArrayOutput values.
// You can construct a concrete instance of `Ipv4DeviceAclPolicyDefinitionArrayInput` via:
//
//	Ipv4DeviceAclPolicyDefinitionArray{ Ipv4DeviceAclPolicyDefinitionArgs{...} }
type Ipv4DeviceAclPolicyDefinitionArrayInput interface {
	pulumi.Input

	ToIpv4DeviceAclPolicyDefinitionArrayOutput() Ipv4DeviceAclPolicyDefinitionArrayOutput
	ToIpv4DeviceAclPolicyDefinitionArrayOutputWithContext(context.Context) Ipv4DeviceAclPolicyDefinitionArrayOutput
}

type Ipv4DeviceAclPolicyDefinitionArray []Ipv4DeviceAclPolicyDefinitionInput

func (Ipv4DeviceAclPolicyDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ipv4DeviceAclPolicyDefinition)(nil)).Elem()
}

func (i Ipv4DeviceAclPolicyDefinitionArray) ToIpv4DeviceAclPolicyDefinitionArrayOutput() Ipv4DeviceAclPolicyDefinitionArrayOutput {
	return i.ToIpv4DeviceAclPolicyDefinitionArrayOutputWithContext(context.Background())
}

func (i Ipv4DeviceAclPolicyDefinitionArray) ToIpv4DeviceAclPolicyDefinitionArrayOutputWithContext(ctx context.Context) Ipv4DeviceAclPolicyDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv4DeviceAclPolicyDefinitionArrayOutput)
}

// Ipv4DeviceAclPolicyDefinitionMapInput is an input type that accepts Ipv4DeviceAclPolicyDefinitionMap and Ipv4DeviceAclPolicyDefinitionMapOutput values.
// You can construct a concrete instance of `Ipv4DeviceAclPolicyDefinitionMapInput` via:
//
//	Ipv4DeviceAclPolicyDefinitionMap{ "key": Ipv4DeviceAclPolicyDefinitionArgs{...} }
type Ipv4DeviceAclPolicyDefinitionMapInput interface {
	pulumi.Input

	ToIpv4DeviceAclPolicyDefinitionMapOutput() Ipv4DeviceAclPolicyDefinitionMapOutput
	ToIpv4DeviceAclPolicyDefinitionMapOutputWithContext(context.Context) Ipv4DeviceAclPolicyDefinitionMapOutput
}

type Ipv4DeviceAclPolicyDefinitionMap map[string]Ipv4DeviceAclPolicyDefinitionInput

func (Ipv4DeviceAclPolicyDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ipv4DeviceAclPolicyDefinition)(nil)).Elem()
}

func (i Ipv4DeviceAclPolicyDefinitionMap) ToIpv4DeviceAclPolicyDefinitionMapOutput() Ipv4DeviceAclPolicyDefinitionMapOutput {
	return i.ToIpv4DeviceAclPolicyDefinitionMapOutputWithContext(context.Background())
}

func (i Ipv4DeviceAclPolicyDefinitionMap) ToIpv4DeviceAclPolicyDefinitionMapOutputWithContext(ctx context.Context) Ipv4DeviceAclPolicyDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv4DeviceAclPolicyDefinitionMapOutput)
}

type Ipv4DeviceAclPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (Ipv4DeviceAclPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv4DeviceAclPolicyDefinition)(nil)).Elem()
}

func (o Ipv4DeviceAclPolicyDefinitionOutput) ToIpv4DeviceAclPolicyDefinitionOutput() Ipv4DeviceAclPolicyDefinitionOutput {
	return o
}

func (o Ipv4DeviceAclPolicyDefinitionOutput) ToIpv4DeviceAclPolicyDefinitionOutputWithContext(ctx context.Context) Ipv4DeviceAclPolicyDefinitionOutput {
	return o
}

// Default action, either `accept` or `drop` - Choices: `accept`, `drop`
func (o Ipv4DeviceAclPolicyDefinitionOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv4DeviceAclPolicyDefinition) pulumi.StringPtrOutput { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// The description of the policy definition
func (o Ipv4DeviceAclPolicyDefinitionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv4DeviceAclPolicyDefinition) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The name of the policy definition
func (o Ipv4DeviceAclPolicyDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv4DeviceAclPolicyDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of ACL sequences
func (o Ipv4DeviceAclPolicyDefinitionOutput) Sequences() Ipv4DeviceAclPolicyDefinitionSequenceArrayOutput {
	return o.ApplyT(func(v *Ipv4DeviceAclPolicyDefinition) Ipv4DeviceAclPolicyDefinitionSequenceArrayOutput {
		return v.Sequences
	}).(Ipv4DeviceAclPolicyDefinitionSequenceArrayOutput)
}

// Type
func (o Ipv4DeviceAclPolicyDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv4DeviceAclPolicyDefinition) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The version of the object
func (o Ipv4DeviceAclPolicyDefinitionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *Ipv4DeviceAclPolicyDefinition) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type Ipv4DeviceAclPolicyDefinitionArrayOutput struct{ *pulumi.OutputState }

func (Ipv4DeviceAclPolicyDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ipv4DeviceAclPolicyDefinition)(nil)).Elem()
}

func (o Ipv4DeviceAclPolicyDefinitionArrayOutput) ToIpv4DeviceAclPolicyDefinitionArrayOutput() Ipv4DeviceAclPolicyDefinitionArrayOutput {
	return o
}

func (o Ipv4DeviceAclPolicyDefinitionArrayOutput) ToIpv4DeviceAclPolicyDefinitionArrayOutputWithContext(ctx context.Context) Ipv4DeviceAclPolicyDefinitionArrayOutput {
	return o
}

func (o Ipv4DeviceAclPolicyDefinitionArrayOutput) Index(i pulumi.IntInput) Ipv4DeviceAclPolicyDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ipv4DeviceAclPolicyDefinition {
		return vs[0].([]*Ipv4DeviceAclPolicyDefinition)[vs[1].(int)]
	}).(Ipv4DeviceAclPolicyDefinitionOutput)
}

type Ipv4DeviceAclPolicyDefinitionMapOutput struct{ *pulumi.OutputState }

func (Ipv4DeviceAclPolicyDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ipv4DeviceAclPolicyDefinition)(nil)).Elem()
}

func (o Ipv4DeviceAclPolicyDefinitionMapOutput) ToIpv4DeviceAclPolicyDefinitionMapOutput() Ipv4DeviceAclPolicyDefinitionMapOutput {
	return o
}

func (o Ipv4DeviceAclPolicyDefinitionMapOutput) ToIpv4DeviceAclPolicyDefinitionMapOutputWithContext(ctx context.Context) Ipv4DeviceAclPolicyDefinitionMapOutput {
	return o
}

func (o Ipv4DeviceAclPolicyDefinitionMapOutput) MapIndex(k pulumi.StringInput) Ipv4DeviceAclPolicyDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ipv4DeviceAclPolicyDefinition {
		return vs[0].(map[string]*Ipv4DeviceAclPolicyDefinition)[vs[1].(string)]
	}).(Ipv4DeviceAclPolicyDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv4DeviceAclPolicyDefinitionInput)(nil)).Elem(), &Ipv4DeviceAclPolicyDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv4DeviceAclPolicyDefinitionArrayInput)(nil)).Elem(), Ipv4DeviceAclPolicyDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv4DeviceAclPolicyDefinitionMapInput)(nil)).Elem(), Ipv4DeviceAclPolicyDefinitionMap{})
	pulumi.RegisterOutputType(Ipv4DeviceAclPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(Ipv4DeviceAclPolicyDefinitionArrayOutput{})
	pulumi.RegisterOutputType(Ipv4DeviceAclPolicyDefinitionMapOutput{})
}
