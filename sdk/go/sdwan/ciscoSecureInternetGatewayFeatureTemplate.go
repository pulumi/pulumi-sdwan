// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Cisco Secure Internet Gateway feature template.
//   - Minimum SD-WAN Manager version: `15.0.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewCiscoSecureInternetGatewayFeatureTemplate(ctx, "example", &sdwan.CiscoSecureInternetGatewayFeatureTemplateArgs{
//				Name:        pulumi.String("Example"),
//				Description: pulumi.String("My Example"),
//				DeviceTypes: pulumi.StringArray{
//					pulumi.String("vedge-C8000V"),
//				},
//				VpnId: pulumi.Int(1),
//				Interfaces: sdwan.CiscoSecureInternetGatewayFeatureTemplateInterfaceArray{
//					&sdwan.CiscoSecureInternetGatewayFeatureTemplateInterfaceArgs{
//						Name:                          pulumi.String("ipsec1"),
//						Auto_tunnel_mode:              true,
//						Shutdown:                      pulumi.Bool(true),
//						Description:                   pulumi.String("My Description"),
//						Ip_unnumbered:                 false,
//						Ipv4_address:                  "1.2.3.4/24",
//						Tunnel_source:                 "3.3.3.3",
//						Tunnel_source_interface:       "ge0/1",
//						Tunnel_route_via:              "ge0/2",
//						Tunnel_destination:            "3.4.5.6",
//						Application:                   pulumi.String("sig"),
//						Sig_provider:                  "secure-internet-gateway-umbrella",
//						Tunnel_dc_preference:          "primary-dc",
//						Tcp_mss:                       1400,
//						Mtu:                           pulumi.Int(1500),
//						Dead_peer_detection_interval:  30,
//						Dead_peer_detection_retries:   5,
//						Ike_version:                   1,
//						Ike_pre_shared_key:            "A1234567",
//						Ike_rekey_interval:            600,
//						Ike_ciphersuite:               "aes256-cbc-sha2",
//						Ike_group:                     "14",
//						Ike_pre_shared_key_dynamic:    false,
//						Ike_pre_shared_key_local_id:   "1.2.3.4",
//						Ike_pre_shared_key_remote_id:  "2.3.4.5",
//						Ipsec_rekey_interval:          7200,
//						Ipsec_replay_window:           1024,
//						Ipsec_ciphersuite:             "aes256-cbc-sha1",
//						Ipsec_perfect_forward_secrecy: "group-14",
//						Tracker:                       pulumi.String("test"),
//						Track_enable:                  false,
//						Tunnel_public_ip:              "5.5.5.5",
//					},
//				},
//				Services: sdwan.CiscoSecureInternetGatewayFeatureTemplateServiceArray{
//					&sdwan.CiscoSecureInternetGatewayFeatureTemplateServiceArgs{
//						Service_type: "sig",
//						Interface_pairs: []map[string]interface{}{
//							map[string]interface{}{
//								"activeInterface":       "e1",
//								"activeInterfaceWeight": 10,
//								"backupInterface":       "e2",
//								"backupInterfaceWeight": 20,
//							},
//						},
//						Zscaler_authentication_required:                 true,
//						Zscaler_xff_forward:                             true,
//						Zscaler_firewall_enabled:                        true,
//						Zscaler_ips_control_enabled:                     true,
//						Zscaler_caution_enabled:                         true,
//						Zscaler_primary_data_center:                     "Auto",
//						Zscaler_secondary_data_center:                   "Auto",
//						Zscaler_surrogate_ip:                            true,
//						Zscaler_surrogate_idle_time:                     100,
//						Zscaler_surrogate_display_time_unit:             "MINUTE",
//						Zscaler_surrogate_ip_enforce_for_known_browsers: true,
//						Zscaler_surrogate_refresh_time:                  12345,
//						Zscaler_surrogate_refresh_time_unit:             "MINUTE",
//						Zscaler_aup_enabled:                             true,
//						Zscaler_aup_block_internet_until_accepted:       true,
//						Zscaler_aup_force_ssl_inspection:                true,
//						Zscaler_aup_timeout:                             60,
//						Zscaler_location_name:                           "LOC1",
//						Umbrella_primary_data_center:                    "Auto",
//						Umbrella_secondary_data_center:                  "Auto",
//					},
//				},
//				TrackerSourceIp: pulumi.String("2.3.4.5"),
//				Trackers: sdwan.CiscoSecureInternetGatewayFeatureTemplateTrackerArray{
//					&sdwan.CiscoSecureInternetGatewayFeatureTemplateTrackerArgs{
//						Name:             pulumi.String("TRACKER1"),
//						Endpoint_api_url: "https://1.1.1.1",
//						Threshold:        pulumi.Int(500),
//						Interval:         pulumi.Int(60),
//						Multiplier:       pulumi.Int(4),
//						Tracker_type:     "SIG",
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/ciscoSecureInternetGatewayFeatureTemplate:CiscoSecureInternetGatewayFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type CiscoSecureInternetGatewayFeatureTemplate struct {
	pulumi.CustomResourceState

	// The description of the feature template
	Description pulumi.StringOutput `pulumi:"description"`
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayOutput `pulumi:"deviceTypes"`
	// Interface name: IPsec when present
	Interfaces CiscoSecureInternetGatewayFeatureTemplateInterfaceArrayOutput `pulumi:"interfaces"`
	// The name of the feature template
	Name pulumi.StringOutput `pulumi:"name"`
	// Configure services
	Services CiscoSecureInternetGatewayFeatureTemplateServiceArrayOutput `pulumi:"services"`
	// The template type
	TemplateType pulumi.StringOutput `pulumi:"templateType"`
	// Source IP address for Tracker
	TrackerSourceIp pulumi.StringPtrOutput `pulumi:"trackerSourceIp"`
	// Variable name
	TrackerSourceIpVariable pulumi.StringPtrOutput `pulumi:"trackerSourceIpVariable"`
	// Tracker configuration
	Trackers CiscoSecureInternetGatewayFeatureTemplateTrackerArrayOutput `pulumi:"trackers"`
	// The version of the feature template
	Version pulumi.IntOutput `pulumi:"version"`
	// List of VPN instances
	//   - Range: `0`-`65527`
	//   - Default value: `0`
	VpnId pulumi.IntPtrOutput `pulumi:"vpnId"`
}

// NewCiscoSecureInternetGatewayFeatureTemplate registers a new resource with the given unique name, arguments, and options.
func NewCiscoSecureInternetGatewayFeatureTemplate(ctx *pulumi.Context,
	name string, args *CiscoSecureInternetGatewayFeatureTemplateArgs, opts ...pulumi.ResourceOption) (*CiscoSecureInternetGatewayFeatureTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.DeviceTypes == nil {
		return nil, errors.New("invalid value for required argument 'DeviceTypes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CiscoSecureInternetGatewayFeatureTemplate
	err := ctx.RegisterResource("sdwan:index/ciscoSecureInternetGatewayFeatureTemplate:CiscoSecureInternetGatewayFeatureTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCiscoSecureInternetGatewayFeatureTemplate gets an existing CiscoSecureInternetGatewayFeatureTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCiscoSecureInternetGatewayFeatureTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CiscoSecureInternetGatewayFeatureTemplateState, opts ...pulumi.ResourceOption) (*CiscoSecureInternetGatewayFeatureTemplate, error) {
	var resource CiscoSecureInternetGatewayFeatureTemplate
	err := ctx.ReadResource("sdwan:index/ciscoSecureInternetGatewayFeatureTemplate:CiscoSecureInternetGatewayFeatureTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CiscoSecureInternetGatewayFeatureTemplate resources.
type ciscoSecureInternetGatewayFeatureTemplateState struct {
	// The description of the feature template
	Description *string `pulumi:"description"`
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Interface name: IPsec when present
	Interfaces []CiscoSecureInternetGatewayFeatureTemplateInterface `pulumi:"interfaces"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Configure services
	Services []CiscoSecureInternetGatewayFeatureTemplateService `pulumi:"services"`
	// The template type
	TemplateType *string `pulumi:"templateType"`
	// Source IP address for Tracker
	TrackerSourceIp *string `pulumi:"trackerSourceIp"`
	// Variable name
	TrackerSourceIpVariable *string `pulumi:"trackerSourceIpVariable"`
	// Tracker configuration
	Trackers []CiscoSecureInternetGatewayFeatureTemplateTracker `pulumi:"trackers"`
	// The version of the feature template
	Version *int `pulumi:"version"`
	// List of VPN instances
	//   - Range: `0`-`65527`
	//   - Default value: `0`
	VpnId *int `pulumi:"vpnId"`
}

type CiscoSecureInternetGatewayFeatureTemplateState struct {
	// The description of the feature template
	Description pulumi.StringPtrInput
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Interface name: IPsec when present
	Interfaces CiscoSecureInternetGatewayFeatureTemplateInterfaceArrayInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Configure services
	Services CiscoSecureInternetGatewayFeatureTemplateServiceArrayInput
	// The template type
	TemplateType pulumi.StringPtrInput
	// Source IP address for Tracker
	TrackerSourceIp pulumi.StringPtrInput
	// Variable name
	TrackerSourceIpVariable pulumi.StringPtrInput
	// Tracker configuration
	Trackers CiscoSecureInternetGatewayFeatureTemplateTrackerArrayInput
	// The version of the feature template
	Version pulumi.IntPtrInput
	// List of VPN instances
	//   - Range: `0`-`65527`
	//   - Default value: `0`
	VpnId pulumi.IntPtrInput
}

func (CiscoSecureInternetGatewayFeatureTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*ciscoSecureInternetGatewayFeatureTemplateState)(nil)).Elem()
}

type ciscoSecureInternetGatewayFeatureTemplateArgs struct {
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Interface name: IPsec when present
	Interfaces []CiscoSecureInternetGatewayFeatureTemplateInterface `pulumi:"interfaces"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Configure services
	Services []CiscoSecureInternetGatewayFeatureTemplateService `pulumi:"services"`
	// Source IP address for Tracker
	TrackerSourceIp *string `pulumi:"trackerSourceIp"`
	// Variable name
	TrackerSourceIpVariable *string `pulumi:"trackerSourceIpVariable"`
	// Tracker configuration
	Trackers []CiscoSecureInternetGatewayFeatureTemplateTracker `pulumi:"trackers"`
	// List of VPN instances
	//   - Range: `0`-`65527`
	//   - Default value: `0`
	VpnId *int `pulumi:"vpnId"`
}

// The set of arguments for constructing a CiscoSecureInternetGatewayFeatureTemplate resource.
type CiscoSecureInternetGatewayFeatureTemplateArgs struct {
	// The description of the feature template
	Description pulumi.StringInput
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Interface name: IPsec when present
	Interfaces CiscoSecureInternetGatewayFeatureTemplateInterfaceArrayInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Configure services
	Services CiscoSecureInternetGatewayFeatureTemplateServiceArrayInput
	// Source IP address for Tracker
	TrackerSourceIp pulumi.StringPtrInput
	// Variable name
	TrackerSourceIpVariable pulumi.StringPtrInput
	// Tracker configuration
	Trackers CiscoSecureInternetGatewayFeatureTemplateTrackerArrayInput
	// List of VPN instances
	//   - Range: `0`-`65527`
	//   - Default value: `0`
	VpnId pulumi.IntPtrInput
}

func (CiscoSecureInternetGatewayFeatureTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ciscoSecureInternetGatewayFeatureTemplateArgs)(nil)).Elem()
}

type CiscoSecureInternetGatewayFeatureTemplateInput interface {
	pulumi.Input

	ToCiscoSecureInternetGatewayFeatureTemplateOutput() CiscoSecureInternetGatewayFeatureTemplateOutput
	ToCiscoSecureInternetGatewayFeatureTemplateOutputWithContext(ctx context.Context) CiscoSecureInternetGatewayFeatureTemplateOutput
}

func (*CiscoSecureInternetGatewayFeatureTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**CiscoSecureInternetGatewayFeatureTemplate)(nil)).Elem()
}

func (i *CiscoSecureInternetGatewayFeatureTemplate) ToCiscoSecureInternetGatewayFeatureTemplateOutput() CiscoSecureInternetGatewayFeatureTemplateOutput {
	return i.ToCiscoSecureInternetGatewayFeatureTemplateOutputWithContext(context.Background())
}

func (i *CiscoSecureInternetGatewayFeatureTemplate) ToCiscoSecureInternetGatewayFeatureTemplateOutputWithContext(ctx context.Context) CiscoSecureInternetGatewayFeatureTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CiscoSecureInternetGatewayFeatureTemplateOutput)
}

// CiscoSecureInternetGatewayFeatureTemplateArrayInput is an input type that accepts CiscoSecureInternetGatewayFeatureTemplateArray and CiscoSecureInternetGatewayFeatureTemplateArrayOutput values.
// You can construct a concrete instance of `CiscoSecureInternetGatewayFeatureTemplateArrayInput` via:
//
//	CiscoSecureInternetGatewayFeatureTemplateArray{ CiscoSecureInternetGatewayFeatureTemplateArgs{...} }
type CiscoSecureInternetGatewayFeatureTemplateArrayInput interface {
	pulumi.Input

	ToCiscoSecureInternetGatewayFeatureTemplateArrayOutput() CiscoSecureInternetGatewayFeatureTemplateArrayOutput
	ToCiscoSecureInternetGatewayFeatureTemplateArrayOutputWithContext(context.Context) CiscoSecureInternetGatewayFeatureTemplateArrayOutput
}

type CiscoSecureInternetGatewayFeatureTemplateArray []CiscoSecureInternetGatewayFeatureTemplateInput

func (CiscoSecureInternetGatewayFeatureTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CiscoSecureInternetGatewayFeatureTemplate)(nil)).Elem()
}

func (i CiscoSecureInternetGatewayFeatureTemplateArray) ToCiscoSecureInternetGatewayFeatureTemplateArrayOutput() CiscoSecureInternetGatewayFeatureTemplateArrayOutput {
	return i.ToCiscoSecureInternetGatewayFeatureTemplateArrayOutputWithContext(context.Background())
}

func (i CiscoSecureInternetGatewayFeatureTemplateArray) ToCiscoSecureInternetGatewayFeatureTemplateArrayOutputWithContext(ctx context.Context) CiscoSecureInternetGatewayFeatureTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CiscoSecureInternetGatewayFeatureTemplateArrayOutput)
}

// CiscoSecureInternetGatewayFeatureTemplateMapInput is an input type that accepts CiscoSecureInternetGatewayFeatureTemplateMap and CiscoSecureInternetGatewayFeatureTemplateMapOutput values.
// You can construct a concrete instance of `CiscoSecureInternetGatewayFeatureTemplateMapInput` via:
//
//	CiscoSecureInternetGatewayFeatureTemplateMap{ "key": CiscoSecureInternetGatewayFeatureTemplateArgs{...} }
type CiscoSecureInternetGatewayFeatureTemplateMapInput interface {
	pulumi.Input

	ToCiscoSecureInternetGatewayFeatureTemplateMapOutput() CiscoSecureInternetGatewayFeatureTemplateMapOutput
	ToCiscoSecureInternetGatewayFeatureTemplateMapOutputWithContext(context.Context) CiscoSecureInternetGatewayFeatureTemplateMapOutput
}

type CiscoSecureInternetGatewayFeatureTemplateMap map[string]CiscoSecureInternetGatewayFeatureTemplateInput

func (CiscoSecureInternetGatewayFeatureTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CiscoSecureInternetGatewayFeatureTemplate)(nil)).Elem()
}

func (i CiscoSecureInternetGatewayFeatureTemplateMap) ToCiscoSecureInternetGatewayFeatureTemplateMapOutput() CiscoSecureInternetGatewayFeatureTemplateMapOutput {
	return i.ToCiscoSecureInternetGatewayFeatureTemplateMapOutputWithContext(context.Background())
}

func (i CiscoSecureInternetGatewayFeatureTemplateMap) ToCiscoSecureInternetGatewayFeatureTemplateMapOutputWithContext(ctx context.Context) CiscoSecureInternetGatewayFeatureTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CiscoSecureInternetGatewayFeatureTemplateMapOutput)
}

type CiscoSecureInternetGatewayFeatureTemplateOutput struct{ *pulumi.OutputState }

func (CiscoSecureInternetGatewayFeatureTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CiscoSecureInternetGatewayFeatureTemplate)(nil)).Elem()
}

func (o CiscoSecureInternetGatewayFeatureTemplateOutput) ToCiscoSecureInternetGatewayFeatureTemplateOutput() CiscoSecureInternetGatewayFeatureTemplateOutput {
	return o
}

func (o CiscoSecureInternetGatewayFeatureTemplateOutput) ToCiscoSecureInternetGatewayFeatureTemplateOutputWithContext(ctx context.Context) CiscoSecureInternetGatewayFeatureTemplateOutput {
	return o
}

// The description of the feature template
func (o CiscoSecureInternetGatewayFeatureTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CiscoSecureInternetGatewayFeatureTemplate) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
func (o CiscoSecureInternetGatewayFeatureTemplateOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CiscoSecureInternetGatewayFeatureTemplate) pulumi.StringArrayOutput { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Interface name: IPsec when present
func (o CiscoSecureInternetGatewayFeatureTemplateOutput) Interfaces() CiscoSecureInternetGatewayFeatureTemplateInterfaceArrayOutput {
	return o.ApplyT(func(v *CiscoSecureInternetGatewayFeatureTemplate) CiscoSecureInternetGatewayFeatureTemplateInterfaceArrayOutput {
		return v.Interfaces
	}).(CiscoSecureInternetGatewayFeatureTemplateInterfaceArrayOutput)
}

// The name of the feature template
func (o CiscoSecureInternetGatewayFeatureTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CiscoSecureInternetGatewayFeatureTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Configure services
func (o CiscoSecureInternetGatewayFeatureTemplateOutput) Services() CiscoSecureInternetGatewayFeatureTemplateServiceArrayOutput {
	return o.ApplyT(func(v *CiscoSecureInternetGatewayFeatureTemplate) CiscoSecureInternetGatewayFeatureTemplateServiceArrayOutput {
		return v.Services
	}).(CiscoSecureInternetGatewayFeatureTemplateServiceArrayOutput)
}

// The template type
func (o CiscoSecureInternetGatewayFeatureTemplateOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v *CiscoSecureInternetGatewayFeatureTemplate) pulumi.StringOutput { return v.TemplateType }).(pulumi.StringOutput)
}

// Source IP address for Tracker
func (o CiscoSecureInternetGatewayFeatureTemplateOutput) TrackerSourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSecureInternetGatewayFeatureTemplate) pulumi.StringPtrOutput { return v.TrackerSourceIp }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoSecureInternetGatewayFeatureTemplateOutput) TrackerSourceIpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoSecureInternetGatewayFeatureTemplate) pulumi.StringPtrOutput {
		return v.TrackerSourceIpVariable
	}).(pulumi.StringPtrOutput)
}

// Tracker configuration
func (o CiscoSecureInternetGatewayFeatureTemplateOutput) Trackers() CiscoSecureInternetGatewayFeatureTemplateTrackerArrayOutput {
	return o.ApplyT(func(v *CiscoSecureInternetGatewayFeatureTemplate) CiscoSecureInternetGatewayFeatureTemplateTrackerArrayOutput {
		return v.Trackers
	}).(CiscoSecureInternetGatewayFeatureTemplateTrackerArrayOutput)
}

// The version of the feature template
func (o CiscoSecureInternetGatewayFeatureTemplateOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *CiscoSecureInternetGatewayFeatureTemplate) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

// List of VPN instances
//   - Range: `0`-`65527`
//   - Default value: `0`
func (o CiscoSecureInternetGatewayFeatureTemplateOutput) VpnId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoSecureInternetGatewayFeatureTemplate) pulumi.IntPtrOutput { return v.VpnId }).(pulumi.IntPtrOutput)
}

type CiscoSecureInternetGatewayFeatureTemplateArrayOutput struct{ *pulumi.OutputState }

func (CiscoSecureInternetGatewayFeatureTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CiscoSecureInternetGatewayFeatureTemplate)(nil)).Elem()
}

func (o CiscoSecureInternetGatewayFeatureTemplateArrayOutput) ToCiscoSecureInternetGatewayFeatureTemplateArrayOutput() CiscoSecureInternetGatewayFeatureTemplateArrayOutput {
	return o
}

func (o CiscoSecureInternetGatewayFeatureTemplateArrayOutput) ToCiscoSecureInternetGatewayFeatureTemplateArrayOutputWithContext(ctx context.Context) CiscoSecureInternetGatewayFeatureTemplateArrayOutput {
	return o
}

func (o CiscoSecureInternetGatewayFeatureTemplateArrayOutput) Index(i pulumi.IntInput) CiscoSecureInternetGatewayFeatureTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CiscoSecureInternetGatewayFeatureTemplate {
		return vs[0].([]*CiscoSecureInternetGatewayFeatureTemplate)[vs[1].(int)]
	}).(CiscoSecureInternetGatewayFeatureTemplateOutput)
}

type CiscoSecureInternetGatewayFeatureTemplateMapOutput struct{ *pulumi.OutputState }

func (CiscoSecureInternetGatewayFeatureTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CiscoSecureInternetGatewayFeatureTemplate)(nil)).Elem()
}

func (o CiscoSecureInternetGatewayFeatureTemplateMapOutput) ToCiscoSecureInternetGatewayFeatureTemplateMapOutput() CiscoSecureInternetGatewayFeatureTemplateMapOutput {
	return o
}

func (o CiscoSecureInternetGatewayFeatureTemplateMapOutput) ToCiscoSecureInternetGatewayFeatureTemplateMapOutputWithContext(ctx context.Context) CiscoSecureInternetGatewayFeatureTemplateMapOutput {
	return o
}

func (o CiscoSecureInternetGatewayFeatureTemplateMapOutput) MapIndex(k pulumi.StringInput) CiscoSecureInternetGatewayFeatureTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CiscoSecureInternetGatewayFeatureTemplate {
		return vs[0].(map[string]*CiscoSecureInternetGatewayFeatureTemplate)[vs[1].(string)]
	}).(CiscoSecureInternetGatewayFeatureTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CiscoSecureInternetGatewayFeatureTemplateInput)(nil)).Elem(), &CiscoSecureInternetGatewayFeatureTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*CiscoSecureInternetGatewayFeatureTemplateArrayInput)(nil)).Elem(), CiscoSecureInternetGatewayFeatureTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CiscoSecureInternetGatewayFeatureTemplateMapInput)(nil)).Elem(), CiscoSecureInternetGatewayFeatureTemplateMap{})
	pulumi.RegisterOutputType(CiscoSecureInternetGatewayFeatureTemplateOutput{})
	pulumi.RegisterOutputType(CiscoSecureInternetGatewayFeatureTemplateArrayOutput{})
	pulumi.RegisterOutputType(CiscoSecureInternetGatewayFeatureTemplateMapOutput{})
}
