// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a System NTP profile parcel.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/systemNtpProfileParcel:SystemNtpProfileParcel example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type SystemNtpProfileParcel struct {
	pulumi.CustomResourceState

	// Set MD5 authentication key
	AuthenticationKeys SystemNtpProfileParcelAuthenticationKeyArrayOutput `pulumi:"authenticationKeys"`
	// Enable device as NTP Leader - Default value: `false`
	AuthoritativeNtpServer pulumi.BoolPtrOutput `pulumi:"authoritativeNtpServer"`
	// Variable name
	AuthoritativeNtpServerVariable pulumi.StringPtrOutput `pulumi:"authoritativeNtpServerVariable"`
	// The description of the profile parcel
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrOutput `pulumi:"featureProfileId"`
	// The name of the profile parcel
	Name pulumi.StringOutput `pulumi:"name"`
	// Configure NTP servers
	Servers SystemNtpProfileParcelServerArrayOutput `pulumi:"servers"`
	// Enable device as NTP Leader
	SourceInterface pulumi.StringPtrOutput `pulumi:"sourceInterface"`
	// Variable name
	SourceInterfaceVariable pulumi.StringPtrOutput `pulumi:"sourceInterfaceVariable"`
	// Enable device as NTP Leader - Range: `1`-`15`
	Stratum pulumi.IntPtrOutput `pulumi:"stratum"`
	// Variable name
	StratumVariable pulumi.StringPtrOutput `pulumi:"stratumVariable"`
	// Designate authentication key as trustworthy
	TrustedKeys pulumi.IntArrayOutput `pulumi:"trustedKeys"`
	// Variable name
	TrustedKeysVariable pulumi.StringPtrOutput `pulumi:"trustedKeysVariable"`
	// The version of the profile parcel
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewSystemNtpProfileParcel registers a new resource with the given unique name, arguments, and options.
func NewSystemNtpProfileParcel(ctx *pulumi.Context,
	name string, args *SystemNtpProfileParcelArgs, opts ...pulumi.ResourceOption) (*SystemNtpProfileParcel, error) {
	if args == nil {
		args = &SystemNtpProfileParcelArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemNtpProfileParcel
	err := ctx.RegisterResource("sdwan:index/systemNtpProfileParcel:SystemNtpProfileParcel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemNtpProfileParcel gets an existing SystemNtpProfileParcel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemNtpProfileParcel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemNtpProfileParcelState, opts ...pulumi.ResourceOption) (*SystemNtpProfileParcel, error) {
	var resource SystemNtpProfileParcel
	err := ctx.ReadResource("sdwan:index/systemNtpProfileParcel:SystemNtpProfileParcel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemNtpProfileParcel resources.
type systemNtpProfileParcelState struct {
	// Set MD5 authentication key
	AuthenticationKeys []SystemNtpProfileParcelAuthenticationKey `pulumi:"authenticationKeys"`
	// Enable device as NTP Leader - Default value: `false`
	AuthoritativeNtpServer *bool `pulumi:"authoritativeNtpServer"`
	// Variable name
	AuthoritativeNtpServerVariable *string `pulumi:"authoritativeNtpServerVariable"`
	// The description of the profile parcel
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the profile parcel
	Name *string `pulumi:"name"`
	// Configure NTP servers
	Servers []SystemNtpProfileParcelServer `pulumi:"servers"`
	// Enable device as NTP Leader
	SourceInterface *string `pulumi:"sourceInterface"`
	// Variable name
	SourceInterfaceVariable *string `pulumi:"sourceInterfaceVariable"`
	// Enable device as NTP Leader - Range: `1`-`15`
	Stratum *int `pulumi:"stratum"`
	// Variable name
	StratumVariable *string `pulumi:"stratumVariable"`
	// Designate authentication key as trustworthy
	TrustedKeys []int `pulumi:"trustedKeys"`
	// Variable name
	TrustedKeysVariable *string `pulumi:"trustedKeysVariable"`
	// The version of the profile parcel
	Version *int `pulumi:"version"`
}

type SystemNtpProfileParcelState struct {
	// Set MD5 authentication key
	AuthenticationKeys SystemNtpProfileParcelAuthenticationKeyArrayInput
	// Enable device as NTP Leader - Default value: `false`
	AuthoritativeNtpServer pulumi.BoolPtrInput
	// Variable name
	AuthoritativeNtpServerVariable pulumi.StringPtrInput
	// The description of the profile parcel
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the profile parcel
	Name pulumi.StringPtrInput
	// Configure NTP servers
	Servers SystemNtpProfileParcelServerArrayInput
	// Enable device as NTP Leader
	SourceInterface pulumi.StringPtrInput
	// Variable name
	SourceInterfaceVariable pulumi.StringPtrInput
	// Enable device as NTP Leader - Range: `1`-`15`
	Stratum pulumi.IntPtrInput
	// Variable name
	StratumVariable pulumi.StringPtrInput
	// Designate authentication key as trustworthy
	TrustedKeys pulumi.IntArrayInput
	// Variable name
	TrustedKeysVariable pulumi.StringPtrInput
	// The version of the profile parcel
	Version pulumi.IntPtrInput
}

func (SystemNtpProfileParcelState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemNtpProfileParcelState)(nil)).Elem()
}

type systemNtpProfileParcelArgs struct {
	// Set MD5 authentication key
	AuthenticationKeys []SystemNtpProfileParcelAuthenticationKey `pulumi:"authenticationKeys"`
	// Enable device as NTP Leader - Default value: `false`
	AuthoritativeNtpServer *bool `pulumi:"authoritativeNtpServer"`
	// Variable name
	AuthoritativeNtpServerVariable *string `pulumi:"authoritativeNtpServerVariable"`
	// The description of the profile parcel
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the profile parcel
	Name *string `pulumi:"name"`
	// Configure NTP servers
	Servers []SystemNtpProfileParcelServer `pulumi:"servers"`
	// Enable device as NTP Leader
	SourceInterface *string `pulumi:"sourceInterface"`
	// Variable name
	SourceInterfaceVariable *string `pulumi:"sourceInterfaceVariable"`
	// Enable device as NTP Leader - Range: `1`-`15`
	Stratum *int `pulumi:"stratum"`
	// Variable name
	StratumVariable *string `pulumi:"stratumVariable"`
	// Designate authentication key as trustworthy
	TrustedKeys []int `pulumi:"trustedKeys"`
	// Variable name
	TrustedKeysVariable *string `pulumi:"trustedKeysVariable"`
}

// The set of arguments for constructing a SystemNtpProfileParcel resource.
type SystemNtpProfileParcelArgs struct {
	// Set MD5 authentication key
	AuthenticationKeys SystemNtpProfileParcelAuthenticationKeyArrayInput
	// Enable device as NTP Leader - Default value: `false`
	AuthoritativeNtpServer pulumi.BoolPtrInput
	// Variable name
	AuthoritativeNtpServerVariable pulumi.StringPtrInput
	// The description of the profile parcel
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the profile parcel
	Name pulumi.StringPtrInput
	// Configure NTP servers
	Servers SystemNtpProfileParcelServerArrayInput
	// Enable device as NTP Leader
	SourceInterface pulumi.StringPtrInput
	// Variable name
	SourceInterfaceVariable pulumi.StringPtrInput
	// Enable device as NTP Leader - Range: `1`-`15`
	Stratum pulumi.IntPtrInput
	// Variable name
	StratumVariable pulumi.StringPtrInput
	// Designate authentication key as trustworthy
	TrustedKeys pulumi.IntArrayInput
	// Variable name
	TrustedKeysVariable pulumi.StringPtrInput
}

func (SystemNtpProfileParcelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemNtpProfileParcelArgs)(nil)).Elem()
}

type SystemNtpProfileParcelInput interface {
	pulumi.Input

	ToSystemNtpProfileParcelOutput() SystemNtpProfileParcelOutput
	ToSystemNtpProfileParcelOutputWithContext(ctx context.Context) SystemNtpProfileParcelOutput
}

func (*SystemNtpProfileParcel) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemNtpProfileParcel)(nil)).Elem()
}

func (i *SystemNtpProfileParcel) ToSystemNtpProfileParcelOutput() SystemNtpProfileParcelOutput {
	return i.ToSystemNtpProfileParcelOutputWithContext(context.Background())
}

func (i *SystemNtpProfileParcel) ToSystemNtpProfileParcelOutputWithContext(ctx context.Context) SystemNtpProfileParcelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNtpProfileParcelOutput)
}

// SystemNtpProfileParcelArrayInput is an input type that accepts SystemNtpProfileParcelArray and SystemNtpProfileParcelArrayOutput values.
// You can construct a concrete instance of `SystemNtpProfileParcelArrayInput` via:
//
//	SystemNtpProfileParcelArray{ SystemNtpProfileParcelArgs{...} }
type SystemNtpProfileParcelArrayInput interface {
	pulumi.Input

	ToSystemNtpProfileParcelArrayOutput() SystemNtpProfileParcelArrayOutput
	ToSystemNtpProfileParcelArrayOutputWithContext(context.Context) SystemNtpProfileParcelArrayOutput
}

type SystemNtpProfileParcelArray []SystemNtpProfileParcelInput

func (SystemNtpProfileParcelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemNtpProfileParcel)(nil)).Elem()
}

func (i SystemNtpProfileParcelArray) ToSystemNtpProfileParcelArrayOutput() SystemNtpProfileParcelArrayOutput {
	return i.ToSystemNtpProfileParcelArrayOutputWithContext(context.Background())
}

func (i SystemNtpProfileParcelArray) ToSystemNtpProfileParcelArrayOutputWithContext(ctx context.Context) SystemNtpProfileParcelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNtpProfileParcelArrayOutput)
}

// SystemNtpProfileParcelMapInput is an input type that accepts SystemNtpProfileParcelMap and SystemNtpProfileParcelMapOutput values.
// You can construct a concrete instance of `SystemNtpProfileParcelMapInput` via:
//
//	SystemNtpProfileParcelMap{ "key": SystemNtpProfileParcelArgs{...} }
type SystemNtpProfileParcelMapInput interface {
	pulumi.Input

	ToSystemNtpProfileParcelMapOutput() SystemNtpProfileParcelMapOutput
	ToSystemNtpProfileParcelMapOutputWithContext(context.Context) SystemNtpProfileParcelMapOutput
}

type SystemNtpProfileParcelMap map[string]SystemNtpProfileParcelInput

func (SystemNtpProfileParcelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemNtpProfileParcel)(nil)).Elem()
}

func (i SystemNtpProfileParcelMap) ToSystemNtpProfileParcelMapOutput() SystemNtpProfileParcelMapOutput {
	return i.ToSystemNtpProfileParcelMapOutputWithContext(context.Background())
}

func (i SystemNtpProfileParcelMap) ToSystemNtpProfileParcelMapOutputWithContext(ctx context.Context) SystemNtpProfileParcelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNtpProfileParcelMapOutput)
}

type SystemNtpProfileParcelOutput struct{ *pulumi.OutputState }

func (SystemNtpProfileParcelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemNtpProfileParcel)(nil)).Elem()
}

func (o SystemNtpProfileParcelOutput) ToSystemNtpProfileParcelOutput() SystemNtpProfileParcelOutput {
	return o
}

func (o SystemNtpProfileParcelOutput) ToSystemNtpProfileParcelOutputWithContext(ctx context.Context) SystemNtpProfileParcelOutput {
	return o
}

// Set MD5 authentication key
func (o SystemNtpProfileParcelOutput) AuthenticationKeys() SystemNtpProfileParcelAuthenticationKeyArrayOutput {
	return o.ApplyT(func(v *SystemNtpProfileParcel) SystemNtpProfileParcelAuthenticationKeyArrayOutput {
		return v.AuthenticationKeys
	}).(SystemNtpProfileParcelAuthenticationKeyArrayOutput)
}

// Enable device as NTP Leader - Default value: `false`
func (o SystemNtpProfileParcelOutput) AuthoritativeNtpServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SystemNtpProfileParcel) pulumi.BoolPtrOutput { return v.AuthoritativeNtpServer }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o SystemNtpProfileParcelOutput) AuthoritativeNtpServerVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNtpProfileParcel) pulumi.StringPtrOutput { return v.AuthoritativeNtpServerVariable }).(pulumi.StringPtrOutput)
}

// The description of the profile parcel
func (o SystemNtpProfileParcelOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNtpProfileParcel) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o SystemNtpProfileParcelOutput) FeatureProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNtpProfileParcel) pulumi.StringPtrOutput { return v.FeatureProfileId }).(pulumi.StringPtrOutput)
}

// The name of the profile parcel
func (o SystemNtpProfileParcelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemNtpProfileParcel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Configure NTP servers
func (o SystemNtpProfileParcelOutput) Servers() SystemNtpProfileParcelServerArrayOutput {
	return o.ApplyT(func(v *SystemNtpProfileParcel) SystemNtpProfileParcelServerArrayOutput { return v.Servers }).(SystemNtpProfileParcelServerArrayOutput)
}

// Enable device as NTP Leader
func (o SystemNtpProfileParcelOutput) SourceInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNtpProfileParcel) pulumi.StringPtrOutput { return v.SourceInterface }).(pulumi.StringPtrOutput)
}

// Variable name
func (o SystemNtpProfileParcelOutput) SourceInterfaceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNtpProfileParcel) pulumi.StringPtrOutput { return v.SourceInterfaceVariable }).(pulumi.StringPtrOutput)
}

// Enable device as NTP Leader - Range: `1`-`15`
func (o SystemNtpProfileParcelOutput) Stratum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemNtpProfileParcel) pulumi.IntPtrOutput { return v.Stratum }).(pulumi.IntPtrOutput)
}

// Variable name
func (o SystemNtpProfileParcelOutput) StratumVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNtpProfileParcel) pulumi.StringPtrOutput { return v.StratumVariable }).(pulumi.StringPtrOutput)
}

// Designate authentication key as trustworthy
func (o SystemNtpProfileParcelOutput) TrustedKeys() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *SystemNtpProfileParcel) pulumi.IntArrayOutput { return v.TrustedKeys }).(pulumi.IntArrayOutput)
}

// Variable name
func (o SystemNtpProfileParcelOutput) TrustedKeysVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNtpProfileParcel) pulumi.StringPtrOutput { return v.TrustedKeysVariable }).(pulumi.StringPtrOutput)
}

// The version of the profile parcel
func (o SystemNtpProfileParcelOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemNtpProfileParcel) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type SystemNtpProfileParcelArrayOutput struct{ *pulumi.OutputState }

func (SystemNtpProfileParcelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemNtpProfileParcel)(nil)).Elem()
}

func (o SystemNtpProfileParcelArrayOutput) ToSystemNtpProfileParcelArrayOutput() SystemNtpProfileParcelArrayOutput {
	return o
}

func (o SystemNtpProfileParcelArrayOutput) ToSystemNtpProfileParcelArrayOutputWithContext(ctx context.Context) SystemNtpProfileParcelArrayOutput {
	return o
}

func (o SystemNtpProfileParcelArrayOutput) Index(i pulumi.IntInput) SystemNtpProfileParcelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemNtpProfileParcel {
		return vs[0].([]*SystemNtpProfileParcel)[vs[1].(int)]
	}).(SystemNtpProfileParcelOutput)
}

type SystemNtpProfileParcelMapOutput struct{ *pulumi.OutputState }

func (SystemNtpProfileParcelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemNtpProfileParcel)(nil)).Elem()
}

func (o SystemNtpProfileParcelMapOutput) ToSystemNtpProfileParcelMapOutput() SystemNtpProfileParcelMapOutput {
	return o
}

func (o SystemNtpProfileParcelMapOutput) ToSystemNtpProfileParcelMapOutputWithContext(ctx context.Context) SystemNtpProfileParcelMapOutput {
	return o
}

func (o SystemNtpProfileParcelMapOutput) MapIndex(k pulumi.StringInput) SystemNtpProfileParcelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemNtpProfileParcel {
		return vs[0].(map[string]*SystemNtpProfileParcel)[vs[1].(string)]
	}).(SystemNtpProfileParcelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNtpProfileParcelInput)(nil)).Elem(), &SystemNtpProfileParcel{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNtpProfileParcelArrayInput)(nil)).Elem(), SystemNtpProfileParcelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNtpProfileParcelMapInput)(nil)).Elem(), SystemNtpProfileParcelMap{})
	pulumi.RegisterOutputType(SystemNtpProfileParcelOutput{})
	pulumi.RegisterOutputType(SystemNtpProfileParcelArrayOutput{})
	pulumi.RegisterOutputType(SystemNtpProfileParcelMapOutput{})
}
