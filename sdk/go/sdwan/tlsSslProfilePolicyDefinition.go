// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a TLS SSL Profile Policy Definition .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewTlsSslProfilePolicyDefinition(ctx, "example", &sdwan.TlsSslProfilePolicyDefinitionArgs{
//				Name:        pulumi.String("Example"),
//				Description: pulumi.String("My description"),
//				Mode:        pulumi.String("security"),
//				DecryptCategories: pulumi.StringArray{
//					pulumi.String("alcohol-and-tobacco"),
//				},
//				NeverDecryptCategories: pulumi.StringArray{
//					pulumi.String("auctions"),
//				},
//				SkipDecryptCategories: pulumi.StringArray{
//					pulumi.String("cdns"),
//				},
//				DecryptThreshold: pulumi.String("high-risk"),
//				Reputation:       pulumi.Bool(false),
//				FailDecrypt:      pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/tlsSslProfilePolicyDefinition:TlsSslProfilePolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type TlsSslProfilePolicyDefinition struct {
	pulumi.CustomResourceState

	// Allow URL list ID
	AllowUrlListId pulumi.StringPtrOutput `pulumi:"allowUrlListId"`
	// Allow URL list version
	AllowUrlListVersion pulumi.IntPtrOutput `pulumi:"allowUrlListVersion"`
	// Block URL list ID
	BlockUrlListId pulumi.StringPtrOutput `pulumi:"blockUrlListId"`
	// Block URL list version
	BlockUrlListVersion pulumi.IntPtrOutput `pulumi:"blockUrlListVersion"`
	// Categories that should be decrypted
	DecryptCategories pulumi.StringArrayOutput `pulumi:"decryptCategories"`
	// Decrypt threshold - Choices: `high-risk`, `suspicious`, `moderate-risk`, `low-risk`, `trustworthy`
	DecryptThreshold pulumi.StringPtrOutput `pulumi:"decryptThreshold"`
	// The description of the policy definition.
	Description pulumi.StringOutput `pulumi:"description"`
	// Fail decrypt enabled
	FailDecrypt pulumi.BoolPtrOutput `pulumi:"failDecrypt"`
	// The policy mode - Choices: `security`, `unified`
	Mode pulumi.StringPtrOutput `pulumi:"mode"`
	// The name of the policy definition.
	Name pulumi.StringOutput `pulumi:"name"`
	// Categories that should never be decrypted
	NeverDecryptCategories pulumi.StringArrayOutput `pulumi:"neverDecryptCategories"`
	// Reputation enabled
	Reputation pulumi.BoolPtrOutput `pulumi:"reputation"`
	// Categories that should skipped
	SkipDecryptCategories pulumi.StringArrayOutput `pulumi:"skipDecryptCategories"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewTlsSslProfilePolicyDefinition registers a new resource with the given unique name, arguments, and options.
func NewTlsSslProfilePolicyDefinition(ctx *pulumi.Context,
	name string, args *TlsSslProfilePolicyDefinitionArgs, opts ...pulumi.ResourceOption) (*TlsSslProfilePolicyDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TlsSslProfilePolicyDefinition
	err := ctx.RegisterResource("sdwan:index/tlsSslProfilePolicyDefinition:TlsSslProfilePolicyDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTlsSslProfilePolicyDefinition gets an existing TlsSslProfilePolicyDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTlsSslProfilePolicyDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TlsSslProfilePolicyDefinitionState, opts ...pulumi.ResourceOption) (*TlsSslProfilePolicyDefinition, error) {
	var resource TlsSslProfilePolicyDefinition
	err := ctx.ReadResource("sdwan:index/tlsSslProfilePolicyDefinition:TlsSslProfilePolicyDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TlsSslProfilePolicyDefinition resources.
type tlsSslProfilePolicyDefinitionState struct {
	// Allow URL list ID
	AllowUrlListId *string `pulumi:"allowUrlListId"`
	// Allow URL list version
	AllowUrlListVersion *int `pulumi:"allowUrlListVersion"`
	// Block URL list ID
	BlockUrlListId *string `pulumi:"blockUrlListId"`
	// Block URL list version
	BlockUrlListVersion *int `pulumi:"blockUrlListVersion"`
	// Categories that should be decrypted
	DecryptCategories []string `pulumi:"decryptCategories"`
	// Decrypt threshold - Choices: `high-risk`, `suspicious`, `moderate-risk`, `low-risk`, `trustworthy`
	DecryptThreshold *string `pulumi:"decryptThreshold"`
	// The description of the policy definition.
	Description *string `pulumi:"description"`
	// Fail decrypt enabled
	FailDecrypt *bool `pulumi:"failDecrypt"`
	// The policy mode - Choices: `security`, `unified`
	Mode *string `pulumi:"mode"`
	// The name of the policy definition.
	Name *string `pulumi:"name"`
	// Categories that should never be decrypted
	NeverDecryptCategories []string `pulumi:"neverDecryptCategories"`
	// Reputation enabled
	Reputation *bool `pulumi:"reputation"`
	// Categories that should skipped
	SkipDecryptCategories []string `pulumi:"skipDecryptCategories"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type TlsSslProfilePolicyDefinitionState struct {
	// Allow URL list ID
	AllowUrlListId pulumi.StringPtrInput
	// Allow URL list version
	AllowUrlListVersion pulumi.IntPtrInput
	// Block URL list ID
	BlockUrlListId pulumi.StringPtrInput
	// Block URL list version
	BlockUrlListVersion pulumi.IntPtrInput
	// Categories that should be decrypted
	DecryptCategories pulumi.StringArrayInput
	// Decrypt threshold - Choices: `high-risk`, `suspicious`, `moderate-risk`, `low-risk`, `trustworthy`
	DecryptThreshold pulumi.StringPtrInput
	// The description of the policy definition.
	Description pulumi.StringPtrInput
	// Fail decrypt enabled
	FailDecrypt pulumi.BoolPtrInput
	// The policy mode - Choices: `security`, `unified`
	Mode pulumi.StringPtrInput
	// The name of the policy definition.
	Name pulumi.StringPtrInput
	// Categories that should never be decrypted
	NeverDecryptCategories pulumi.StringArrayInput
	// Reputation enabled
	Reputation pulumi.BoolPtrInput
	// Categories that should skipped
	SkipDecryptCategories pulumi.StringArrayInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (TlsSslProfilePolicyDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*tlsSslProfilePolicyDefinitionState)(nil)).Elem()
}

type tlsSslProfilePolicyDefinitionArgs struct {
	// Allow URL list ID
	AllowUrlListId *string `pulumi:"allowUrlListId"`
	// Allow URL list version
	AllowUrlListVersion *int `pulumi:"allowUrlListVersion"`
	// Block URL list ID
	BlockUrlListId *string `pulumi:"blockUrlListId"`
	// Block URL list version
	BlockUrlListVersion *int `pulumi:"blockUrlListVersion"`
	// Categories that should be decrypted
	DecryptCategories []string `pulumi:"decryptCategories"`
	// Decrypt threshold - Choices: `high-risk`, `suspicious`, `moderate-risk`, `low-risk`, `trustworthy`
	DecryptThreshold *string `pulumi:"decryptThreshold"`
	// The description of the policy definition.
	Description string `pulumi:"description"`
	// Fail decrypt enabled
	FailDecrypt *bool `pulumi:"failDecrypt"`
	// The policy mode - Choices: `security`, `unified`
	Mode *string `pulumi:"mode"`
	// The name of the policy definition.
	Name *string `pulumi:"name"`
	// Categories that should never be decrypted
	NeverDecryptCategories []string `pulumi:"neverDecryptCategories"`
	// Reputation enabled
	Reputation *bool `pulumi:"reputation"`
	// Categories that should skipped
	SkipDecryptCategories []string `pulumi:"skipDecryptCategories"`
}

// The set of arguments for constructing a TlsSslProfilePolicyDefinition resource.
type TlsSslProfilePolicyDefinitionArgs struct {
	// Allow URL list ID
	AllowUrlListId pulumi.StringPtrInput
	// Allow URL list version
	AllowUrlListVersion pulumi.IntPtrInput
	// Block URL list ID
	BlockUrlListId pulumi.StringPtrInput
	// Block URL list version
	BlockUrlListVersion pulumi.IntPtrInput
	// Categories that should be decrypted
	DecryptCategories pulumi.StringArrayInput
	// Decrypt threshold - Choices: `high-risk`, `suspicious`, `moderate-risk`, `low-risk`, `trustworthy`
	DecryptThreshold pulumi.StringPtrInput
	// The description of the policy definition.
	Description pulumi.StringInput
	// Fail decrypt enabled
	FailDecrypt pulumi.BoolPtrInput
	// The policy mode - Choices: `security`, `unified`
	Mode pulumi.StringPtrInput
	// The name of the policy definition.
	Name pulumi.StringPtrInput
	// Categories that should never be decrypted
	NeverDecryptCategories pulumi.StringArrayInput
	// Reputation enabled
	Reputation pulumi.BoolPtrInput
	// Categories that should skipped
	SkipDecryptCategories pulumi.StringArrayInput
}

func (TlsSslProfilePolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tlsSslProfilePolicyDefinitionArgs)(nil)).Elem()
}

type TlsSslProfilePolicyDefinitionInput interface {
	pulumi.Input

	ToTlsSslProfilePolicyDefinitionOutput() TlsSslProfilePolicyDefinitionOutput
	ToTlsSslProfilePolicyDefinitionOutputWithContext(ctx context.Context) TlsSslProfilePolicyDefinitionOutput
}

func (*TlsSslProfilePolicyDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsSslProfilePolicyDefinition)(nil)).Elem()
}

func (i *TlsSslProfilePolicyDefinition) ToTlsSslProfilePolicyDefinitionOutput() TlsSslProfilePolicyDefinitionOutput {
	return i.ToTlsSslProfilePolicyDefinitionOutputWithContext(context.Background())
}

func (i *TlsSslProfilePolicyDefinition) ToTlsSslProfilePolicyDefinitionOutputWithContext(ctx context.Context) TlsSslProfilePolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsSslProfilePolicyDefinitionOutput)
}

// TlsSslProfilePolicyDefinitionArrayInput is an input type that accepts TlsSslProfilePolicyDefinitionArray and TlsSslProfilePolicyDefinitionArrayOutput values.
// You can construct a concrete instance of `TlsSslProfilePolicyDefinitionArrayInput` via:
//
//	TlsSslProfilePolicyDefinitionArray{ TlsSslProfilePolicyDefinitionArgs{...} }
type TlsSslProfilePolicyDefinitionArrayInput interface {
	pulumi.Input

	ToTlsSslProfilePolicyDefinitionArrayOutput() TlsSslProfilePolicyDefinitionArrayOutput
	ToTlsSslProfilePolicyDefinitionArrayOutputWithContext(context.Context) TlsSslProfilePolicyDefinitionArrayOutput
}

type TlsSslProfilePolicyDefinitionArray []TlsSslProfilePolicyDefinitionInput

func (TlsSslProfilePolicyDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TlsSslProfilePolicyDefinition)(nil)).Elem()
}

func (i TlsSslProfilePolicyDefinitionArray) ToTlsSslProfilePolicyDefinitionArrayOutput() TlsSslProfilePolicyDefinitionArrayOutput {
	return i.ToTlsSslProfilePolicyDefinitionArrayOutputWithContext(context.Background())
}

func (i TlsSslProfilePolicyDefinitionArray) ToTlsSslProfilePolicyDefinitionArrayOutputWithContext(ctx context.Context) TlsSslProfilePolicyDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsSslProfilePolicyDefinitionArrayOutput)
}

// TlsSslProfilePolicyDefinitionMapInput is an input type that accepts TlsSslProfilePolicyDefinitionMap and TlsSslProfilePolicyDefinitionMapOutput values.
// You can construct a concrete instance of `TlsSslProfilePolicyDefinitionMapInput` via:
//
//	TlsSslProfilePolicyDefinitionMap{ "key": TlsSslProfilePolicyDefinitionArgs{...} }
type TlsSslProfilePolicyDefinitionMapInput interface {
	pulumi.Input

	ToTlsSslProfilePolicyDefinitionMapOutput() TlsSslProfilePolicyDefinitionMapOutput
	ToTlsSslProfilePolicyDefinitionMapOutputWithContext(context.Context) TlsSslProfilePolicyDefinitionMapOutput
}

type TlsSslProfilePolicyDefinitionMap map[string]TlsSslProfilePolicyDefinitionInput

func (TlsSslProfilePolicyDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TlsSslProfilePolicyDefinition)(nil)).Elem()
}

func (i TlsSslProfilePolicyDefinitionMap) ToTlsSslProfilePolicyDefinitionMapOutput() TlsSslProfilePolicyDefinitionMapOutput {
	return i.ToTlsSslProfilePolicyDefinitionMapOutputWithContext(context.Background())
}

func (i TlsSslProfilePolicyDefinitionMap) ToTlsSslProfilePolicyDefinitionMapOutputWithContext(ctx context.Context) TlsSslProfilePolicyDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsSslProfilePolicyDefinitionMapOutput)
}

type TlsSslProfilePolicyDefinitionOutput struct{ *pulumi.OutputState }

func (TlsSslProfilePolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsSslProfilePolicyDefinition)(nil)).Elem()
}

func (o TlsSslProfilePolicyDefinitionOutput) ToTlsSslProfilePolicyDefinitionOutput() TlsSslProfilePolicyDefinitionOutput {
	return o
}

func (o TlsSslProfilePolicyDefinitionOutput) ToTlsSslProfilePolicyDefinitionOutputWithContext(ctx context.Context) TlsSslProfilePolicyDefinitionOutput {
	return o
}

// Allow URL list ID
func (o TlsSslProfilePolicyDefinitionOutput) AllowUrlListId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsSslProfilePolicyDefinition) pulumi.StringPtrOutput { return v.AllowUrlListId }).(pulumi.StringPtrOutput)
}

// Allow URL list version
func (o TlsSslProfilePolicyDefinitionOutput) AllowUrlListVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TlsSslProfilePolicyDefinition) pulumi.IntPtrOutput { return v.AllowUrlListVersion }).(pulumi.IntPtrOutput)
}

// Block URL list ID
func (o TlsSslProfilePolicyDefinitionOutput) BlockUrlListId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsSslProfilePolicyDefinition) pulumi.StringPtrOutput { return v.BlockUrlListId }).(pulumi.StringPtrOutput)
}

// Block URL list version
func (o TlsSslProfilePolicyDefinitionOutput) BlockUrlListVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TlsSslProfilePolicyDefinition) pulumi.IntPtrOutput { return v.BlockUrlListVersion }).(pulumi.IntPtrOutput)
}

// Categories that should be decrypted
func (o TlsSslProfilePolicyDefinitionOutput) DecryptCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TlsSslProfilePolicyDefinition) pulumi.StringArrayOutput { return v.DecryptCategories }).(pulumi.StringArrayOutput)
}

// Decrypt threshold - Choices: `high-risk`, `suspicious`, `moderate-risk`, `low-risk`, `trustworthy`
func (o TlsSslProfilePolicyDefinitionOutput) DecryptThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsSslProfilePolicyDefinition) pulumi.StringPtrOutput { return v.DecryptThreshold }).(pulumi.StringPtrOutput)
}

// The description of the policy definition.
func (o TlsSslProfilePolicyDefinitionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *TlsSslProfilePolicyDefinition) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Fail decrypt enabled
func (o TlsSslProfilePolicyDefinitionOutput) FailDecrypt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TlsSslProfilePolicyDefinition) pulumi.BoolPtrOutput { return v.FailDecrypt }).(pulumi.BoolPtrOutput)
}

// The policy mode - Choices: `security`, `unified`
func (o TlsSslProfilePolicyDefinitionOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsSslProfilePolicyDefinition) pulumi.StringPtrOutput { return v.Mode }).(pulumi.StringPtrOutput)
}

// The name of the policy definition.
func (o TlsSslProfilePolicyDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TlsSslProfilePolicyDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Categories that should never be decrypted
func (o TlsSslProfilePolicyDefinitionOutput) NeverDecryptCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TlsSslProfilePolicyDefinition) pulumi.StringArrayOutput { return v.NeverDecryptCategories }).(pulumi.StringArrayOutput)
}

// Reputation enabled
func (o TlsSslProfilePolicyDefinitionOutput) Reputation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TlsSslProfilePolicyDefinition) pulumi.BoolPtrOutput { return v.Reputation }).(pulumi.BoolPtrOutput)
}

// Categories that should skipped
func (o TlsSslProfilePolicyDefinitionOutput) SkipDecryptCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TlsSslProfilePolicyDefinition) pulumi.StringArrayOutput { return v.SkipDecryptCategories }).(pulumi.StringArrayOutput)
}

// The version of the object
func (o TlsSslProfilePolicyDefinitionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *TlsSslProfilePolicyDefinition) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type TlsSslProfilePolicyDefinitionArrayOutput struct{ *pulumi.OutputState }

func (TlsSslProfilePolicyDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TlsSslProfilePolicyDefinition)(nil)).Elem()
}

func (o TlsSslProfilePolicyDefinitionArrayOutput) ToTlsSslProfilePolicyDefinitionArrayOutput() TlsSslProfilePolicyDefinitionArrayOutput {
	return o
}

func (o TlsSslProfilePolicyDefinitionArrayOutput) ToTlsSslProfilePolicyDefinitionArrayOutputWithContext(ctx context.Context) TlsSslProfilePolicyDefinitionArrayOutput {
	return o
}

func (o TlsSslProfilePolicyDefinitionArrayOutput) Index(i pulumi.IntInput) TlsSslProfilePolicyDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TlsSslProfilePolicyDefinition {
		return vs[0].([]*TlsSslProfilePolicyDefinition)[vs[1].(int)]
	}).(TlsSslProfilePolicyDefinitionOutput)
}

type TlsSslProfilePolicyDefinitionMapOutput struct{ *pulumi.OutputState }

func (TlsSslProfilePolicyDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TlsSslProfilePolicyDefinition)(nil)).Elem()
}

func (o TlsSslProfilePolicyDefinitionMapOutput) ToTlsSslProfilePolicyDefinitionMapOutput() TlsSslProfilePolicyDefinitionMapOutput {
	return o
}

func (o TlsSslProfilePolicyDefinitionMapOutput) ToTlsSslProfilePolicyDefinitionMapOutputWithContext(ctx context.Context) TlsSslProfilePolicyDefinitionMapOutput {
	return o
}

func (o TlsSslProfilePolicyDefinitionMapOutput) MapIndex(k pulumi.StringInput) TlsSslProfilePolicyDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TlsSslProfilePolicyDefinition {
		return vs[0].(map[string]*TlsSslProfilePolicyDefinition)[vs[1].(string)]
	}).(TlsSslProfilePolicyDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TlsSslProfilePolicyDefinitionInput)(nil)).Elem(), &TlsSslProfilePolicyDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*TlsSslProfilePolicyDefinitionArrayInput)(nil)).Elem(), TlsSslProfilePolicyDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TlsSslProfilePolicyDefinitionMapInput)(nil)).Elem(), TlsSslProfilePolicyDefinitionMap{})
	pulumi.RegisterOutputType(TlsSslProfilePolicyDefinitionOutput{})
	pulumi.RegisterOutputType(TlsSslProfilePolicyDefinitionArrayOutput{})
	pulumi.RegisterOutputType(TlsSslProfilePolicyDefinitionMapOutput{})
}
