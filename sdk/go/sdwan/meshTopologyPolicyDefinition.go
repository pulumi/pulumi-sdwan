// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Mesh Topology Policy Definition .
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/meshTopologyPolicyDefinition:MeshTopologyPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type MeshTopologyPolicyDefinition struct {
	pulumi.CustomResourceState

	// The description of the policy definition
	Description pulumi.StringOutput `pulumi:"description"`
	// The name of the policy definition
	Name pulumi.StringOutput `pulumi:"name"`
	// List of regions
	Regions MeshTopologyPolicyDefinitionRegionArrayOutput `pulumi:"regions"`
	// Type
	Type pulumi.StringOutput `pulumi:"type"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
	// VPN list ID
	VpnListId pulumi.StringPtrOutput `pulumi:"vpnListId"`
	// VPN list version
	VpnListVersion pulumi.IntPtrOutput `pulumi:"vpnListVersion"`
}

// NewMeshTopologyPolicyDefinition registers a new resource with the given unique name, arguments, and options.
func NewMeshTopologyPolicyDefinition(ctx *pulumi.Context,
	name string, args *MeshTopologyPolicyDefinitionArgs, opts ...pulumi.ResourceOption) (*MeshTopologyPolicyDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Regions == nil {
		return nil, errors.New("invalid value for required argument 'Regions'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MeshTopologyPolicyDefinition
	err := ctx.RegisterResource("sdwan:index/meshTopologyPolicyDefinition:MeshTopologyPolicyDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMeshTopologyPolicyDefinition gets an existing MeshTopologyPolicyDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMeshTopologyPolicyDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MeshTopologyPolicyDefinitionState, opts ...pulumi.ResourceOption) (*MeshTopologyPolicyDefinition, error) {
	var resource MeshTopologyPolicyDefinition
	err := ctx.ReadResource("sdwan:index/meshTopologyPolicyDefinition:MeshTopologyPolicyDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MeshTopologyPolicyDefinition resources.
type meshTopologyPolicyDefinitionState struct {
	// The description of the policy definition
	Description *string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of regions
	Regions []MeshTopologyPolicyDefinitionRegion `pulumi:"regions"`
	// Type
	Type *string `pulumi:"type"`
	// The version of the object
	Version *int `pulumi:"version"`
	// VPN list ID
	VpnListId *string `pulumi:"vpnListId"`
	// VPN list version
	VpnListVersion *int `pulumi:"vpnListVersion"`
}

type MeshTopologyPolicyDefinitionState struct {
	// The description of the policy definition
	Description pulumi.StringPtrInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of regions
	Regions MeshTopologyPolicyDefinitionRegionArrayInput
	// Type
	Type pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
	// VPN list ID
	VpnListId pulumi.StringPtrInput
	// VPN list version
	VpnListVersion pulumi.IntPtrInput
}

func (MeshTopologyPolicyDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*meshTopologyPolicyDefinitionState)(nil)).Elem()
}

type meshTopologyPolicyDefinitionArgs struct {
	// The description of the policy definition
	Description string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of regions
	Regions []MeshTopologyPolicyDefinitionRegion `pulumi:"regions"`
	// VPN list ID
	VpnListId *string `pulumi:"vpnListId"`
	// VPN list version
	VpnListVersion *int `pulumi:"vpnListVersion"`
}

// The set of arguments for constructing a MeshTopologyPolicyDefinition resource.
type MeshTopologyPolicyDefinitionArgs struct {
	// The description of the policy definition
	Description pulumi.StringInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of regions
	Regions MeshTopologyPolicyDefinitionRegionArrayInput
	// VPN list ID
	VpnListId pulumi.StringPtrInput
	// VPN list version
	VpnListVersion pulumi.IntPtrInput
}

func (MeshTopologyPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*meshTopologyPolicyDefinitionArgs)(nil)).Elem()
}

type MeshTopologyPolicyDefinitionInput interface {
	pulumi.Input

	ToMeshTopologyPolicyDefinitionOutput() MeshTopologyPolicyDefinitionOutput
	ToMeshTopologyPolicyDefinitionOutputWithContext(ctx context.Context) MeshTopologyPolicyDefinitionOutput
}

func (*MeshTopologyPolicyDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**MeshTopologyPolicyDefinition)(nil)).Elem()
}

func (i *MeshTopologyPolicyDefinition) ToMeshTopologyPolicyDefinitionOutput() MeshTopologyPolicyDefinitionOutput {
	return i.ToMeshTopologyPolicyDefinitionOutputWithContext(context.Background())
}

func (i *MeshTopologyPolicyDefinition) ToMeshTopologyPolicyDefinitionOutputWithContext(ctx context.Context) MeshTopologyPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshTopologyPolicyDefinitionOutput)
}

// MeshTopologyPolicyDefinitionArrayInput is an input type that accepts MeshTopologyPolicyDefinitionArray and MeshTopologyPolicyDefinitionArrayOutput values.
// You can construct a concrete instance of `MeshTopologyPolicyDefinitionArrayInput` via:
//
//	MeshTopologyPolicyDefinitionArray{ MeshTopologyPolicyDefinitionArgs{...} }
type MeshTopologyPolicyDefinitionArrayInput interface {
	pulumi.Input

	ToMeshTopologyPolicyDefinitionArrayOutput() MeshTopologyPolicyDefinitionArrayOutput
	ToMeshTopologyPolicyDefinitionArrayOutputWithContext(context.Context) MeshTopologyPolicyDefinitionArrayOutput
}

type MeshTopologyPolicyDefinitionArray []MeshTopologyPolicyDefinitionInput

func (MeshTopologyPolicyDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MeshTopologyPolicyDefinition)(nil)).Elem()
}

func (i MeshTopologyPolicyDefinitionArray) ToMeshTopologyPolicyDefinitionArrayOutput() MeshTopologyPolicyDefinitionArrayOutput {
	return i.ToMeshTopologyPolicyDefinitionArrayOutputWithContext(context.Background())
}

func (i MeshTopologyPolicyDefinitionArray) ToMeshTopologyPolicyDefinitionArrayOutputWithContext(ctx context.Context) MeshTopologyPolicyDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshTopologyPolicyDefinitionArrayOutput)
}

// MeshTopologyPolicyDefinitionMapInput is an input type that accepts MeshTopologyPolicyDefinitionMap and MeshTopologyPolicyDefinitionMapOutput values.
// You can construct a concrete instance of `MeshTopologyPolicyDefinitionMapInput` via:
//
//	MeshTopologyPolicyDefinitionMap{ "key": MeshTopologyPolicyDefinitionArgs{...} }
type MeshTopologyPolicyDefinitionMapInput interface {
	pulumi.Input

	ToMeshTopologyPolicyDefinitionMapOutput() MeshTopologyPolicyDefinitionMapOutput
	ToMeshTopologyPolicyDefinitionMapOutputWithContext(context.Context) MeshTopologyPolicyDefinitionMapOutput
}

type MeshTopologyPolicyDefinitionMap map[string]MeshTopologyPolicyDefinitionInput

func (MeshTopologyPolicyDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MeshTopologyPolicyDefinition)(nil)).Elem()
}

func (i MeshTopologyPolicyDefinitionMap) ToMeshTopologyPolicyDefinitionMapOutput() MeshTopologyPolicyDefinitionMapOutput {
	return i.ToMeshTopologyPolicyDefinitionMapOutputWithContext(context.Background())
}

func (i MeshTopologyPolicyDefinitionMap) ToMeshTopologyPolicyDefinitionMapOutputWithContext(ctx context.Context) MeshTopologyPolicyDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeshTopologyPolicyDefinitionMapOutput)
}

type MeshTopologyPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (MeshTopologyPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MeshTopologyPolicyDefinition)(nil)).Elem()
}

func (o MeshTopologyPolicyDefinitionOutput) ToMeshTopologyPolicyDefinitionOutput() MeshTopologyPolicyDefinitionOutput {
	return o
}

func (o MeshTopologyPolicyDefinitionOutput) ToMeshTopologyPolicyDefinitionOutputWithContext(ctx context.Context) MeshTopologyPolicyDefinitionOutput {
	return o
}

// The description of the policy definition
func (o MeshTopologyPolicyDefinitionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *MeshTopologyPolicyDefinition) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The name of the policy definition
func (o MeshTopologyPolicyDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MeshTopologyPolicyDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of regions
func (o MeshTopologyPolicyDefinitionOutput) Regions() MeshTopologyPolicyDefinitionRegionArrayOutput {
	return o.ApplyT(func(v *MeshTopologyPolicyDefinition) MeshTopologyPolicyDefinitionRegionArrayOutput { return v.Regions }).(MeshTopologyPolicyDefinitionRegionArrayOutput)
}

// Type
func (o MeshTopologyPolicyDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *MeshTopologyPolicyDefinition) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The version of the object
func (o MeshTopologyPolicyDefinitionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *MeshTopologyPolicyDefinition) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

// VPN list ID
func (o MeshTopologyPolicyDefinitionOutput) VpnListId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MeshTopologyPolicyDefinition) pulumi.StringPtrOutput { return v.VpnListId }).(pulumi.StringPtrOutput)
}

// VPN list version
func (o MeshTopologyPolicyDefinitionOutput) VpnListVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MeshTopologyPolicyDefinition) pulumi.IntPtrOutput { return v.VpnListVersion }).(pulumi.IntPtrOutput)
}

type MeshTopologyPolicyDefinitionArrayOutput struct{ *pulumi.OutputState }

func (MeshTopologyPolicyDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MeshTopologyPolicyDefinition)(nil)).Elem()
}

func (o MeshTopologyPolicyDefinitionArrayOutput) ToMeshTopologyPolicyDefinitionArrayOutput() MeshTopologyPolicyDefinitionArrayOutput {
	return o
}

func (o MeshTopologyPolicyDefinitionArrayOutput) ToMeshTopologyPolicyDefinitionArrayOutputWithContext(ctx context.Context) MeshTopologyPolicyDefinitionArrayOutput {
	return o
}

func (o MeshTopologyPolicyDefinitionArrayOutput) Index(i pulumi.IntInput) MeshTopologyPolicyDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MeshTopologyPolicyDefinition {
		return vs[0].([]*MeshTopologyPolicyDefinition)[vs[1].(int)]
	}).(MeshTopologyPolicyDefinitionOutput)
}

type MeshTopologyPolicyDefinitionMapOutput struct{ *pulumi.OutputState }

func (MeshTopologyPolicyDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MeshTopologyPolicyDefinition)(nil)).Elem()
}

func (o MeshTopologyPolicyDefinitionMapOutput) ToMeshTopologyPolicyDefinitionMapOutput() MeshTopologyPolicyDefinitionMapOutput {
	return o
}

func (o MeshTopologyPolicyDefinitionMapOutput) ToMeshTopologyPolicyDefinitionMapOutputWithContext(ctx context.Context) MeshTopologyPolicyDefinitionMapOutput {
	return o
}

func (o MeshTopologyPolicyDefinitionMapOutput) MapIndex(k pulumi.StringInput) MeshTopologyPolicyDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MeshTopologyPolicyDefinition {
		return vs[0].(map[string]*MeshTopologyPolicyDefinition)[vs[1].(string)]
	}).(MeshTopologyPolicyDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MeshTopologyPolicyDefinitionInput)(nil)).Elem(), &MeshTopologyPolicyDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*MeshTopologyPolicyDefinitionArrayInput)(nil)).Elem(), MeshTopologyPolicyDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MeshTopologyPolicyDefinitionMapInput)(nil)).Elem(), MeshTopologyPolicyDefinitionMap{})
	pulumi.RegisterOutputType(MeshTopologyPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(MeshTopologyPolicyDefinitionArrayOutput{})
	pulumi.RegisterOutputType(MeshTopologyPolicyDefinitionMapOutput{})
}
