// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Transport WAN VPN Interface Ethernet Feature Associate Tracker Feature .
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature(ctx, "example", &sdwan.TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArgs{
//				FeatureProfileId:                          pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				TransportWanVpnFeatureId:                  pulumi.String("140331f6-5418-4755-a059-13c77eb96037"),
//				TransportWanVpnInterfaceEthernetFeatureId: pulumi.String("140331f6-5418-4755-a059-13c77eb96037"),
//				TransportTrackerFeatureId:                 pulumi.String("140331f6-5418-4755-a059-13c77eb96037"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/transportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature:TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature struct {
	pulumi.CustomResourceState

	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// Transport Tracker Feature ID
	TransportTrackerFeatureId pulumi.StringOutput `pulumi:"transportTrackerFeatureId"`
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId pulumi.StringOutput `pulumi:"transportWanVpnFeatureId"`
	// Transport WAN VPN Interface Ethernet Feature ID
	TransportWanVpnInterfaceEthernetFeatureId pulumi.StringOutput `pulumi:"transportWanVpnInterfaceEthernetFeatureId"`
}

// NewTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature registers a new resource with the given unique name, arguments, and options.
func NewTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature(ctx *pulumi.Context,
	name string, args *TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArgs, opts ...pulumi.ResourceOption) (*TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	if args.TransportTrackerFeatureId == nil {
		return nil, errors.New("invalid value for required argument 'TransportTrackerFeatureId'")
	}
	if args.TransportWanVpnFeatureId == nil {
		return nil, errors.New("invalid value for required argument 'TransportWanVpnFeatureId'")
	}
	if args.TransportWanVpnInterfaceEthernetFeatureId == nil {
		return nil, errors.New("invalid value for required argument 'TransportWanVpnInterfaceEthernetFeatureId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature
	err := ctx.RegisterResource("sdwan:index/transportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature:TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature gets an existing TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureState, opts ...pulumi.ResourceOption) (*TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature, error) {
	var resource TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature
	err := ctx.ReadResource("sdwan:index/transportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature:TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature resources.
type transportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureState struct {
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// Transport Tracker Feature ID
	TransportTrackerFeatureId *string `pulumi:"transportTrackerFeatureId"`
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId *string `pulumi:"transportWanVpnFeatureId"`
	// Transport WAN VPN Interface Ethernet Feature ID
	TransportWanVpnInterfaceEthernetFeatureId *string `pulumi:"transportWanVpnInterfaceEthernetFeatureId"`
}

type TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureState struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// Transport Tracker Feature ID
	TransportTrackerFeatureId pulumi.StringPtrInput
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId pulumi.StringPtrInput
	// Transport WAN VPN Interface Ethernet Feature ID
	TransportWanVpnInterfaceEthernetFeatureId pulumi.StringPtrInput
}

func (TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*transportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureState)(nil)).Elem()
}

type transportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// Transport Tracker Feature ID
	TransportTrackerFeatureId string `pulumi:"transportTrackerFeatureId"`
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId string `pulumi:"transportWanVpnFeatureId"`
	// Transport WAN VPN Interface Ethernet Feature ID
	TransportWanVpnInterfaceEthernetFeatureId string `pulumi:"transportWanVpnInterfaceEthernetFeatureId"`
}

// The set of arguments for constructing a TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature resource.
type TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// Transport Tracker Feature ID
	TransportTrackerFeatureId pulumi.StringInput
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId pulumi.StringInput
	// Transport WAN VPN Interface Ethernet Feature ID
	TransportWanVpnInterfaceEthernetFeatureId pulumi.StringInput
}

func (TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArgs)(nil)).Elem()
}

type TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureInput interface {
	pulumi.Input

	ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput() TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput
	ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput
}

func (*TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature)(nil)).Elem()
}

func (i *TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature) ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput() TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput {
	return i.ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutputWithContext(context.Background())
}

func (i *TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature) ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput)
}

// TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayInput is an input type that accepts TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArray and TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutput values.
// You can construct a concrete instance of `TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayInput` via:
//
//	TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArray{ TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArgs{...} }
type TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayInput interface {
	pulumi.Input

	ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutput() TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutput
	ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutputWithContext(context.Context) TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutput
}

type TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArray []TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureInput

func (TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature)(nil)).Elem()
}

func (i TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArray) ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutput() TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutput {
	return i.ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutputWithContext(context.Background())
}

func (i TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArray) ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutput)
}

// TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapInput is an input type that accepts TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMap and TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutput values.
// You can construct a concrete instance of `TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapInput` via:
//
//	TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMap{ "key": TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArgs{...} }
type TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapInput interface {
	pulumi.Input

	ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutput() TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutput
	ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutputWithContext(context.Context) TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutput
}

type TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMap map[string]TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureInput

func (TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature)(nil)).Elem()
}

func (i TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMap) ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutput() TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutput {
	return i.ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutputWithContext(context.Background())
}

func (i TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMap) ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutput)
}

type TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput struct{ *pulumi.OutputState }

func (TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature)(nil)).Elem()
}

func (o TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput) ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput() TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput {
	return o
}

func (o TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput) ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput {
	return o
}

// Feature Profile ID
func (o TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature) pulumi.StringOutput {
		return v.FeatureProfileId
	}).(pulumi.StringOutput)
}

// Transport Tracker Feature ID
func (o TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput) TransportTrackerFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature) pulumi.StringOutput {
		return v.TransportTrackerFeatureId
	}).(pulumi.StringOutput)
}

// Transport WAN VPN Feature ID
func (o TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput) TransportWanVpnFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature) pulumi.StringOutput {
		return v.TransportWanVpnFeatureId
	}).(pulumi.StringOutput)
}

// Transport WAN VPN Interface Ethernet Feature ID
func (o TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput) TransportWanVpnInterfaceEthernetFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature) pulumi.StringOutput {
		return v.TransportWanVpnInterfaceEthernetFeatureId
	}).(pulumi.StringOutput)
}

type TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutput struct{ *pulumi.OutputState }

func (TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature)(nil)).Elem()
}

func (o TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutput) ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutput() TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutput {
	return o
}

func (o TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutput) ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutput {
	return o
}

func (o TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutput) Index(i pulumi.IntInput) TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature {
		return vs[0].([]*TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature)[vs[1].(int)]
	}).(TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput)
}

type TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutput struct{ *pulumi.OutputState }

func (TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature)(nil)).Elem()
}

func (o TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutput) ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutput() TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutput {
	return o
}

func (o TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutput) ToTransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutput {
	return o
}

func (o TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutput) MapIndex(k pulumi.StringInput) TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature {
		return vs[0].(map[string]*TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature)[vs[1].(string)]
	}).(TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureInput)(nil)).Elem(), &TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayInput)(nil)).Elem(), TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapInput)(nil)).Elem(), TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMap{})
	pulumi.RegisterOutputType(TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureOutput{})
	pulumi.RegisterOutputType(TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureArrayOutput{})
	pulumi.RegisterOutputType(TransportWanVpnInterfaceEthernetFeatureAssociateTrackerFeatureMapOutput{})
}
