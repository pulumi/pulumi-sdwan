// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a IPv4 ACL Policy Definition .
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/ipv4AclPolicyDefinition:Ipv4AclPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type Ipv4AclPolicyDefinition struct {
	pulumi.CustomResourceState

	// Default action, either `accept` or `drop` - Choices: `accept`, `drop`
	DefaultAction pulumi.StringPtrOutput `pulumi:"defaultAction"`
	// The description of the policy definition
	Description pulumi.StringOutput `pulumi:"description"`
	// The name of the policy definition
	Name pulumi.StringOutput `pulumi:"name"`
	// List of ACL sequences
	Sequences Ipv4AclPolicyDefinitionSequenceArrayOutput `pulumi:"sequences"`
	// Type
	Type pulumi.StringOutput `pulumi:"type"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewIpv4AclPolicyDefinition registers a new resource with the given unique name, arguments, and options.
func NewIpv4AclPolicyDefinition(ctx *pulumi.Context,
	name string, args *Ipv4AclPolicyDefinitionArgs, opts ...pulumi.ResourceOption) (*Ipv4AclPolicyDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Sequences == nil {
		return nil, errors.New("invalid value for required argument 'Sequences'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ipv4AclPolicyDefinition
	err := ctx.RegisterResource("sdwan:index/ipv4AclPolicyDefinition:Ipv4AclPolicyDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpv4AclPolicyDefinition gets an existing Ipv4AclPolicyDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpv4AclPolicyDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Ipv4AclPolicyDefinitionState, opts ...pulumi.ResourceOption) (*Ipv4AclPolicyDefinition, error) {
	var resource Ipv4AclPolicyDefinition
	err := ctx.ReadResource("sdwan:index/ipv4AclPolicyDefinition:Ipv4AclPolicyDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ipv4AclPolicyDefinition resources.
type ipv4AclPolicyDefinitionState struct {
	// Default action, either `accept` or `drop` - Choices: `accept`, `drop`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the policy definition
	Description *string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of ACL sequences
	Sequences []Ipv4AclPolicyDefinitionSequence `pulumi:"sequences"`
	// Type
	Type *string `pulumi:"type"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type Ipv4AclPolicyDefinitionState struct {
	// Default action, either `accept` or `drop` - Choices: `accept`, `drop`
	DefaultAction pulumi.StringPtrInput
	// The description of the policy definition
	Description pulumi.StringPtrInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of ACL sequences
	Sequences Ipv4AclPolicyDefinitionSequenceArrayInput
	// Type
	Type pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (Ipv4AclPolicyDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipv4AclPolicyDefinitionState)(nil)).Elem()
}

type ipv4AclPolicyDefinitionArgs struct {
	// Default action, either `accept` or `drop` - Choices: `accept`, `drop`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the policy definition
	Description string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of ACL sequences
	Sequences []Ipv4AclPolicyDefinitionSequence `pulumi:"sequences"`
}

// The set of arguments for constructing a Ipv4AclPolicyDefinition resource.
type Ipv4AclPolicyDefinitionArgs struct {
	// Default action, either `accept` or `drop` - Choices: `accept`, `drop`
	DefaultAction pulumi.StringPtrInput
	// The description of the policy definition
	Description pulumi.StringInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of ACL sequences
	Sequences Ipv4AclPolicyDefinitionSequenceArrayInput
}

func (Ipv4AclPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipv4AclPolicyDefinitionArgs)(nil)).Elem()
}

type Ipv4AclPolicyDefinitionInput interface {
	pulumi.Input

	ToIpv4AclPolicyDefinitionOutput() Ipv4AclPolicyDefinitionOutput
	ToIpv4AclPolicyDefinitionOutputWithContext(ctx context.Context) Ipv4AclPolicyDefinitionOutput
}

func (*Ipv4AclPolicyDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv4AclPolicyDefinition)(nil)).Elem()
}

func (i *Ipv4AclPolicyDefinition) ToIpv4AclPolicyDefinitionOutput() Ipv4AclPolicyDefinitionOutput {
	return i.ToIpv4AclPolicyDefinitionOutputWithContext(context.Background())
}

func (i *Ipv4AclPolicyDefinition) ToIpv4AclPolicyDefinitionOutputWithContext(ctx context.Context) Ipv4AclPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv4AclPolicyDefinitionOutput)
}

// Ipv4AclPolicyDefinitionArrayInput is an input type that accepts Ipv4AclPolicyDefinitionArray and Ipv4AclPolicyDefinitionArrayOutput values.
// You can construct a concrete instance of `Ipv4AclPolicyDefinitionArrayInput` via:
//
//	Ipv4AclPolicyDefinitionArray{ Ipv4AclPolicyDefinitionArgs{...} }
type Ipv4AclPolicyDefinitionArrayInput interface {
	pulumi.Input

	ToIpv4AclPolicyDefinitionArrayOutput() Ipv4AclPolicyDefinitionArrayOutput
	ToIpv4AclPolicyDefinitionArrayOutputWithContext(context.Context) Ipv4AclPolicyDefinitionArrayOutput
}

type Ipv4AclPolicyDefinitionArray []Ipv4AclPolicyDefinitionInput

func (Ipv4AclPolicyDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ipv4AclPolicyDefinition)(nil)).Elem()
}

func (i Ipv4AclPolicyDefinitionArray) ToIpv4AclPolicyDefinitionArrayOutput() Ipv4AclPolicyDefinitionArrayOutput {
	return i.ToIpv4AclPolicyDefinitionArrayOutputWithContext(context.Background())
}

func (i Ipv4AclPolicyDefinitionArray) ToIpv4AclPolicyDefinitionArrayOutputWithContext(ctx context.Context) Ipv4AclPolicyDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv4AclPolicyDefinitionArrayOutput)
}

// Ipv4AclPolicyDefinitionMapInput is an input type that accepts Ipv4AclPolicyDefinitionMap and Ipv4AclPolicyDefinitionMapOutput values.
// You can construct a concrete instance of `Ipv4AclPolicyDefinitionMapInput` via:
//
//	Ipv4AclPolicyDefinitionMap{ "key": Ipv4AclPolicyDefinitionArgs{...} }
type Ipv4AclPolicyDefinitionMapInput interface {
	pulumi.Input

	ToIpv4AclPolicyDefinitionMapOutput() Ipv4AclPolicyDefinitionMapOutput
	ToIpv4AclPolicyDefinitionMapOutputWithContext(context.Context) Ipv4AclPolicyDefinitionMapOutput
}

type Ipv4AclPolicyDefinitionMap map[string]Ipv4AclPolicyDefinitionInput

func (Ipv4AclPolicyDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ipv4AclPolicyDefinition)(nil)).Elem()
}

func (i Ipv4AclPolicyDefinitionMap) ToIpv4AclPolicyDefinitionMapOutput() Ipv4AclPolicyDefinitionMapOutput {
	return i.ToIpv4AclPolicyDefinitionMapOutputWithContext(context.Background())
}

func (i Ipv4AclPolicyDefinitionMap) ToIpv4AclPolicyDefinitionMapOutputWithContext(ctx context.Context) Ipv4AclPolicyDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv4AclPolicyDefinitionMapOutput)
}

type Ipv4AclPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (Ipv4AclPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv4AclPolicyDefinition)(nil)).Elem()
}

func (o Ipv4AclPolicyDefinitionOutput) ToIpv4AclPolicyDefinitionOutput() Ipv4AclPolicyDefinitionOutput {
	return o
}

func (o Ipv4AclPolicyDefinitionOutput) ToIpv4AclPolicyDefinitionOutputWithContext(ctx context.Context) Ipv4AclPolicyDefinitionOutput {
	return o
}

// Default action, either `accept` or `drop` - Choices: `accept`, `drop`
func (o Ipv4AclPolicyDefinitionOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv4AclPolicyDefinition) pulumi.StringPtrOutput { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// The description of the policy definition
func (o Ipv4AclPolicyDefinitionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv4AclPolicyDefinition) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The name of the policy definition
func (o Ipv4AclPolicyDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv4AclPolicyDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of ACL sequences
func (o Ipv4AclPolicyDefinitionOutput) Sequences() Ipv4AclPolicyDefinitionSequenceArrayOutput {
	return o.ApplyT(func(v *Ipv4AclPolicyDefinition) Ipv4AclPolicyDefinitionSequenceArrayOutput { return v.Sequences }).(Ipv4AclPolicyDefinitionSequenceArrayOutput)
}

// Type
func (o Ipv4AclPolicyDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv4AclPolicyDefinition) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The version of the object
func (o Ipv4AclPolicyDefinitionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *Ipv4AclPolicyDefinition) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type Ipv4AclPolicyDefinitionArrayOutput struct{ *pulumi.OutputState }

func (Ipv4AclPolicyDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ipv4AclPolicyDefinition)(nil)).Elem()
}

func (o Ipv4AclPolicyDefinitionArrayOutput) ToIpv4AclPolicyDefinitionArrayOutput() Ipv4AclPolicyDefinitionArrayOutput {
	return o
}

func (o Ipv4AclPolicyDefinitionArrayOutput) ToIpv4AclPolicyDefinitionArrayOutputWithContext(ctx context.Context) Ipv4AclPolicyDefinitionArrayOutput {
	return o
}

func (o Ipv4AclPolicyDefinitionArrayOutput) Index(i pulumi.IntInput) Ipv4AclPolicyDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ipv4AclPolicyDefinition {
		return vs[0].([]*Ipv4AclPolicyDefinition)[vs[1].(int)]
	}).(Ipv4AclPolicyDefinitionOutput)
}

type Ipv4AclPolicyDefinitionMapOutput struct{ *pulumi.OutputState }

func (Ipv4AclPolicyDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ipv4AclPolicyDefinition)(nil)).Elem()
}

func (o Ipv4AclPolicyDefinitionMapOutput) ToIpv4AclPolicyDefinitionMapOutput() Ipv4AclPolicyDefinitionMapOutput {
	return o
}

func (o Ipv4AclPolicyDefinitionMapOutput) ToIpv4AclPolicyDefinitionMapOutputWithContext(ctx context.Context) Ipv4AclPolicyDefinitionMapOutput {
	return o
}

func (o Ipv4AclPolicyDefinitionMapOutput) MapIndex(k pulumi.StringInput) Ipv4AclPolicyDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ipv4AclPolicyDefinition {
		return vs[0].(map[string]*Ipv4AclPolicyDefinition)[vs[1].(string)]
	}).(Ipv4AclPolicyDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv4AclPolicyDefinitionInput)(nil)).Elem(), &Ipv4AclPolicyDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv4AclPolicyDefinitionArrayInput)(nil)).Elem(), Ipv4AclPolicyDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv4AclPolicyDefinitionMapInput)(nil)).Elem(), Ipv4AclPolicyDefinitionMap{})
	pulumi.RegisterOutputType(Ipv4AclPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(Ipv4AclPolicyDefinitionArrayOutput{})
	pulumi.RegisterOutputType(Ipv4AclPolicyDefinitionMapOutput{})
}
