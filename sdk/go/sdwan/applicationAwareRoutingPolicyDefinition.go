// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Application Aware Routing Policy Definition .
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/applicationAwareRoutingPolicyDefinition:ApplicationAwareRoutingPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type ApplicationAwareRoutingPolicyDefinition struct {
	pulumi.CustomResourceState

	// The description of the policy definition
	Description pulumi.StringOutput `pulumi:"description"`
	// The name of the policy definition
	Name pulumi.StringOutput `pulumi:"name"`
	// List of sequences
	Sequences ApplicationAwareRoutingPolicyDefinitionSequenceArrayOutput `pulumi:"sequences"`
	// Type
	Type pulumi.StringOutput `pulumi:"type"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewApplicationAwareRoutingPolicyDefinition registers a new resource with the given unique name, arguments, and options.
func NewApplicationAwareRoutingPolicyDefinition(ctx *pulumi.Context,
	name string, args *ApplicationAwareRoutingPolicyDefinitionArgs, opts ...pulumi.ResourceOption) (*ApplicationAwareRoutingPolicyDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Sequences == nil {
		return nil, errors.New("invalid value for required argument 'Sequences'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplicationAwareRoutingPolicyDefinition
	err := ctx.RegisterResource("sdwan:index/applicationAwareRoutingPolicyDefinition:ApplicationAwareRoutingPolicyDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationAwareRoutingPolicyDefinition gets an existing ApplicationAwareRoutingPolicyDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationAwareRoutingPolicyDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationAwareRoutingPolicyDefinitionState, opts ...pulumi.ResourceOption) (*ApplicationAwareRoutingPolicyDefinition, error) {
	var resource ApplicationAwareRoutingPolicyDefinition
	err := ctx.ReadResource("sdwan:index/applicationAwareRoutingPolicyDefinition:ApplicationAwareRoutingPolicyDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationAwareRoutingPolicyDefinition resources.
type applicationAwareRoutingPolicyDefinitionState struct {
	// The description of the policy definition
	Description *string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of sequences
	Sequences []ApplicationAwareRoutingPolicyDefinitionSequence `pulumi:"sequences"`
	// Type
	Type *string `pulumi:"type"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type ApplicationAwareRoutingPolicyDefinitionState struct {
	// The description of the policy definition
	Description pulumi.StringPtrInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of sequences
	Sequences ApplicationAwareRoutingPolicyDefinitionSequenceArrayInput
	// Type
	Type pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (ApplicationAwareRoutingPolicyDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationAwareRoutingPolicyDefinitionState)(nil)).Elem()
}

type applicationAwareRoutingPolicyDefinitionArgs struct {
	// The description of the policy definition
	Description string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of sequences
	Sequences []ApplicationAwareRoutingPolicyDefinitionSequence `pulumi:"sequences"`
}

// The set of arguments for constructing a ApplicationAwareRoutingPolicyDefinition resource.
type ApplicationAwareRoutingPolicyDefinitionArgs struct {
	// The description of the policy definition
	Description pulumi.StringInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of sequences
	Sequences ApplicationAwareRoutingPolicyDefinitionSequenceArrayInput
}

func (ApplicationAwareRoutingPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationAwareRoutingPolicyDefinitionArgs)(nil)).Elem()
}

type ApplicationAwareRoutingPolicyDefinitionInput interface {
	pulumi.Input

	ToApplicationAwareRoutingPolicyDefinitionOutput() ApplicationAwareRoutingPolicyDefinitionOutput
	ToApplicationAwareRoutingPolicyDefinitionOutputWithContext(ctx context.Context) ApplicationAwareRoutingPolicyDefinitionOutput
}

func (*ApplicationAwareRoutingPolicyDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationAwareRoutingPolicyDefinition)(nil)).Elem()
}

func (i *ApplicationAwareRoutingPolicyDefinition) ToApplicationAwareRoutingPolicyDefinitionOutput() ApplicationAwareRoutingPolicyDefinitionOutput {
	return i.ToApplicationAwareRoutingPolicyDefinitionOutputWithContext(context.Background())
}

func (i *ApplicationAwareRoutingPolicyDefinition) ToApplicationAwareRoutingPolicyDefinitionOutputWithContext(ctx context.Context) ApplicationAwareRoutingPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAwareRoutingPolicyDefinitionOutput)
}

// ApplicationAwareRoutingPolicyDefinitionArrayInput is an input type that accepts ApplicationAwareRoutingPolicyDefinitionArray and ApplicationAwareRoutingPolicyDefinitionArrayOutput values.
// You can construct a concrete instance of `ApplicationAwareRoutingPolicyDefinitionArrayInput` via:
//
//	ApplicationAwareRoutingPolicyDefinitionArray{ ApplicationAwareRoutingPolicyDefinitionArgs{...} }
type ApplicationAwareRoutingPolicyDefinitionArrayInput interface {
	pulumi.Input

	ToApplicationAwareRoutingPolicyDefinitionArrayOutput() ApplicationAwareRoutingPolicyDefinitionArrayOutput
	ToApplicationAwareRoutingPolicyDefinitionArrayOutputWithContext(context.Context) ApplicationAwareRoutingPolicyDefinitionArrayOutput
}

type ApplicationAwareRoutingPolicyDefinitionArray []ApplicationAwareRoutingPolicyDefinitionInput

func (ApplicationAwareRoutingPolicyDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationAwareRoutingPolicyDefinition)(nil)).Elem()
}

func (i ApplicationAwareRoutingPolicyDefinitionArray) ToApplicationAwareRoutingPolicyDefinitionArrayOutput() ApplicationAwareRoutingPolicyDefinitionArrayOutput {
	return i.ToApplicationAwareRoutingPolicyDefinitionArrayOutputWithContext(context.Background())
}

func (i ApplicationAwareRoutingPolicyDefinitionArray) ToApplicationAwareRoutingPolicyDefinitionArrayOutputWithContext(ctx context.Context) ApplicationAwareRoutingPolicyDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAwareRoutingPolicyDefinitionArrayOutput)
}

// ApplicationAwareRoutingPolicyDefinitionMapInput is an input type that accepts ApplicationAwareRoutingPolicyDefinitionMap and ApplicationAwareRoutingPolicyDefinitionMapOutput values.
// You can construct a concrete instance of `ApplicationAwareRoutingPolicyDefinitionMapInput` via:
//
//	ApplicationAwareRoutingPolicyDefinitionMap{ "key": ApplicationAwareRoutingPolicyDefinitionArgs{...} }
type ApplicationAwareRoutingPolicyDefinitionMapInput interface {
	pulumi.Input

	ToApplicationAwareRoutingPolicyDefinitionMapOutput() ApplicationAwareRoutingPolicyDefinitionMapOutput
	ToApplicationAwareRoutingPolicyDefinitionMapOutputWithContext(context.Context) ApplicationAwareRoutingPolicyDefinitionMapOutput
}

type ApplicationAwareRoutingPolicyDefinitionMap map[string]ApplicationAwareRoutingPolicyDefinitionInput

func (ApplicationAwareRoutingPolicyDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationAwareRoutingPolicyDefinition)(nil)).Elem()
}

func (i ApplicationAwareRoutingPolicyDefinitionMap) ToApplicationAwareRoutingPolicyDefinitionMapOutput() ApplicationAwareRoutingPolicyDefinitionMapOutput {
	return i.ToApplicationAwareRoutingPolicyDefinitionMapOutputWithContext(context.Background())
}

func (i ApplicationAwareRoutingPolicyDefinitionMap) ToApplicationAwareRoutingPolicyDefinitionMapOutputWithContext(ctx context.Context) ApplicationAwareRoutingPolicyDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAwareRoutingPolicyDefinitionMapOutput)
}

type ApplicationAwareRoutingPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (ApplicationAwareRoutingPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationAwareRoutingPolicyDefinition)(nil)).Elem()
}

func (o ApplicationAwareRoutingPolicyDefinitionOutput) ToApplicationAwareRoutingPolicyDefinitionOutput() ApplicationAwareRoutingPolicyDefinitionOutput {
	return o
}

func (o ApplicationAwareRoutingPolicyDefinitionOutput) ToApplicationAwareRoutingPolicyDefinitionOutputWithContext(ctx context.Context) ApplicationAwareRoutingPolicyDefinitionOutput {
	return o
}

// The description of the policy definition
func (o ApplicationAwareRoutingPolicyDefinitionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationAwareRoutingPolicyDefinition) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The name of the policy definition
func (o ApplicationAwareRoutingPolicyDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationAwareRoutingPolicyDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of sequences
func (o ApplicationAwareRoutingPolicyDefinitionOutput) Sequences() ApplicationAwareRoutingPolicyDefinitionSequenceArrayOutput {
	return o.ApplyT(func(v *ApplicationAwareRoutingPolicyDefinition) ApplicationAwareRoutingPolicyDefinitionSequenceArrayOutput {
		return v.Sequences
	}).(ApplicationAwareRoutingPolicyDefinitionSequenceArrayOutput)
}

// Type
func (o ApplicationAwareRoutingPolicyDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationAwareRoutingPolicyDefinition) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The version of the object
func (o ApplicationAwareRoutingPolicyDefinitionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ApplicationAwareRoutingPolicyDefinition) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ApplicationAwareRoutingPolicyDefinitionArrayOutput struct{ *pulumi.OutputState }

func (ApplicationAwareRoutingPolicyDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationAwareRoutingPolicyDefinition)(nil)).Elem()
}

func (o ApplicationAwareRoutingPolicyDefinitionArrayOutput) ToApplicationAwareRoutingPolicyDefinitionArrayOutput() ApplicationAwareRoutingPolicyDefinitionArrayOutput {
	return o
}

func (o ApplicationAwareRoutingPolicyDefinitionArrayOutput) ToApplicationAwareRoutingPolicyDefinitionArrayOutputWithContext(ctx context.Context) ApplicationAwareRoutingPolicyDefinitionArrayOutput {
	return o
}

func (o ApplicationAwareRoutingPolicyDefinitionArrayOutput) Index(i pulumi.IntInput) ApplicationAwareRoutingPolicyDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplicationAwareRoutingPolicyDefinition {
		return vs[0].([]*ApplicationAwareRoutingPolicyDefinition)[vs[1].(int)]
	}).(ApplicationAwareRoutingPolicyDefinitionOutput)
}

type ApplicationAwareRoutingPolicyDefinitionMapOutput struct{ *pulumi.OutputState }

func (ApplicationAwareRoutingPolicyDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationAwareRoutingPolicyDefinition)(nil)).Elem()
}

func (o ApplicationAwareRoutingPolicyDefinitionMapOutput) ToApplicationAwareRoutingPolicyDefinitionMapOutput() ApplicationAwareRoutingPolicyDefinitionMapOutput {
	return o
}

func (o ApplicationAwareRoutingPolicyDefinitionMapOutput) ToApplicationAwareRoutingPolicyDefinitionMapOutputWithContext(ctx context.Context) ApplicationAwareRoutingPolicyDefinitionMapOutput {
	return o
}

func (o ApplicationAwareRoutingPolicyDefinitionMapOutput) MapIndex(k pulumi.StringInput) ApplicationAwareRoutingPolicyDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplicationAwareRoutingPolicyDefinition {
		return vs[0].(map[string]*ApplicationAwareRoutingPolicyDefinition)[vs[1].(string)]
	}).(ApplicationAwareRoutingPolicyDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAwareRoutingPolicyDefinitionInput)(nil)).Elem(), &ApplicationAwareRoutingPolicyDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAwareRoutingPolicyDefinitionArrayInput)(nil)).Elem(), ApplicationAwareRoutingPolicyDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAwareRoutingPolicyDefinitionMapInput)(nil)).Elem(), ApplicationAwareRoutingPolicyDefinitionMap{})
	pulumi.RegisterOutputType(ApplicationAwareRoutingPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(ApplicationAwareRoutingPolicyDefinitionArrayOutput{})
	pulumi.RegisterOutputType(ApplicationAwareRoutingPolicyDefinitionMapOutput{})
}
