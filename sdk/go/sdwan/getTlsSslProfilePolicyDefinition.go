// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the TLS SSL Profile Policy Definition .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupTlsSslProfilePolicyDefinition(ctx, &sdwan.LookupTlsSslProfilePolicyDefinitionArgs{
//				Id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTlsSslProfilePolicyDefinition(ctx *pulumi.Context, args *LookupTlsSslProfilePolicyDefinitionArgs, opts ...pulumi.InvokeOption) (*LookupTlsSslProfilePolicyDefinitionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTlsSslProfilePolicyDefinitionResult
	err := ctx.Invoke("sdwan:index/getTlsSslProfilePolicyDefinition:getTlsSslProfilePolicyDefinition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTlsSslProfilePolicyDefinition.
type LookupTlsSslProfilePolicyDefinitionArgs struct {
	// The id of the object
	Id string `pulumi:"id"`
}

// A collection of values returned by getTlsSslProfilePolicyDefinition.
type LookupTlsSslProfilePolicyDefinitionResult struct {
	// Allow URL list ID
	AllowUrlListId string `pulumi:"allowUrlListId"`
	// Allow URL list version
	AllowUrlListVersion int `pulumi:"allowUrlListVersion"`
	// Block URL list ID
	BlockUrlListId string `pulumi:"blockUrlListId"`
	// Block URL list version
	BlockUrlListVersion int `pulumi:"blockUrlListVersion"`
	// Categories that should be decrypted
	DecryptCategories []string `pulumi:"decryptCategories"`
	// Decrypt threshold
	DecryptThreshold string `pulumi:"decryptThreshold"`
	// The description of the policy definition.
	Description string `pulumi:"description"`
	// Fail decrypt enabled
	FailDecrypt bool `pulumi:"failDecrypt"`
	// The id of the object
	Id string `pulumi:"id"`
	// The policy mode
	Mode string `pulumi:"mode"`
	// The name of the policy definition.
	Name string `pulumi:"name"`
	// Categories that should never be decrypted
	NeverDecryptCategories []string `pulumi:"neverDecryptCategories"`
	// Reputation enabled
	Reputation bool `pulumi:"reputation"`
	// Categories that should skipped
	SkipDecryptCategories []string `pulumi:"skipDecryptCategories"`
	// The version of the object
	Version int `pulumi:"version"`
}

func LookupTlsSslProfilePolicyDefinitionOutput(ctx *pulumi.Context, args LookupTlsSslProfilePolicyDefinitionOutputArgs, opts ...pulumi.InvokeOption) LookupTlsSslProfilePolicyDefinitionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTlsSslProfilePolicyDefinitionResult, error) {
			args := v.(LookupTlsSslProfilePolicyDefinitionArgs)
			r, err := LookupTlsSslProfilePolicyDefinition(ctx, &args, opts...)
			var s LookupTlsSslProfilePolicyDefinitionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTlsSslProfilePolicyDefinitionResultOutput)
}

// A collection of arguments for invoking getTlsSslProfilePolicyDefinition.
type LookupTlsSslProfilePolicyDefinitionOutputArgs struct {
	// The id of the object
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupTlsSslProfilePolicyDefinitionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTlsSslProfilePolicyDefinitionArgs)(nil)).Elem()
}

// A collection of values returned by getTlsSslProfilePolicyDefinition.
type LookupTlsSslProfilePolicyDefinitionResultOutput struct{ *pulumi.OutputState }

func (LookupTlsSslProfilePolicyDefinitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTlsSslProfilePolicyDefinitionResult)(nil)).Elem()
}

func (o LookupTlsSslProfilePolicyDefinitionResultOutput) ToLookupTlsSslProfilePolicyDefinitionResultOutput() LookupTlsSslProfilePolicyDefinitionResultOutput {
	return o
}

func (o LookupTlsSslProfilePolicyDefinitionResultOutput) ToLookupTlsSslProfilePolicyDefinitionResultOutputWithContext(ctx context.Context) LookupTlsSslProfilePolicyDefinitionResultOutput {
	return o
}

// Allow URL list ID
func (o LookupTlsSslProfilePolicyDefinitionResultOutput) AllowUrlListId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTlsSslProfilePolicyDefinitionResult) string { return v.AllowUrlListId }).(pulumi.StringOutput)
}

// Allow URL list version
func (o LookupTlsSslProfilePolicyDefinitionResultOutput) AllowUrlListVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTlsSslProfilePolicyDefinitionResult) int { return v.AllowUrlListVersion }).(pulumi.IntOutput)
}

// Block URL list ID
func (o LookupTlsSslProfilePolicyDefinitionResultOutput) BlockUrlListId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTlsSslProfilePolicyDefinitionResult) string { return v.BlockUrlListId }).(pulumi.StringOutput)
}

// Block URL list version
func (o LookupTlsSslProfilePolicyDefinitionResultOutput) BlockUrlListVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTlsSslProfilePolicyDefinitionResult) int { return v.BlockUrlListVersion }).(pulumi.IntOutput)
}

// Categories that should be decrypted
func (o LookupTlsSslProfilePolicyDefinitionResultOutput) DecryptCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTlsSslProfilePolicyDefinitionResult) []string { return v.DecryptCategories }).(pulumi.StringArrayOutput)
}

// Decrypt threshold
func (o LookupTlsSslProfilePolicyDefinitionResultOutput) DecryptThreshold() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTlsSslProfilePolicyDefinitionResult) string { return v.DecryptThreshold }).(pulumi.StringOutput)
}

// The description of the policy definition.
func (o LookupTlsSslProfilePolicyDefinitionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTlsSslProfilePolicyDefinitionResult) string { return v.Description }).(pulumi.StringOutput)
}

// Fail decrypt enabled
func (o LookupTlsSslProfilePolicyDefinitionResultOutput) FailDecrypt() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTlsSslProfilePolicyDefinitionResult) bool { return v.FailDecrypt }).(pulumi.BoolOutput)
}

// The id of the object
func (o LookupTlsSslProfilePolicyDefinitionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTlsSslProfilePolicyDefinitionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The policy mode
func (o LookupTlsSslProfilePolicyDefinitionResultOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTlsSslProfilePolicyDefinitionResult) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the policy definition.
func (o LookupTlsSslProfilePolicyDefinitionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTlsSslProfilePolicyDefinitionResult) string { return v.Name }).(pulumi.StringOutput)
}

// Categories that should never be decrypted
func (o LookupTlsSslProfilePolicyDefinitionResultOutput) NeverDecryptCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTlsSslProfilePolicyDefinitionResult) []string { return v.NeverDecryptCategories }).(pulumi.StringArrayOutput)
}

// Reputation enabled
func (o LookupTlsSslProfilePolicyDefinitionResultOutput) Reputation() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTlsSslProfilePolicyDefinitionResult) bool { return v.Reputation }).(pulumi.BoolOutput)
}

// Categories that should skipped
func (o LookupTlsSslProfilePolicyDefinitionResultOutput) SkipDecryptCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTlsSslProfilePolicyDefinitionResult) []string { return v.SkipDecryptCategories }).(pulumi.StringArrayOutput)
}

// The version of the object
func (o LookupTlsSslProfilePolicyDefinitionResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTlsSslProfilePolicyDefinitionResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTlsSslProfilePolicyDefinitionResultOutput{})
}
