// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a IPS Signature List Policy Object .
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/ipsSignatureListPolicyObject:IpsSignatureListPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type IpsSignatureListPolicyObject struct {
	pulumi.CustomResourceState

	// List of entries
	Entries IpsSignatureListPolicyObjectEntryArrayOutput `pulumi:"entries"`
	// The name of the policy object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewIpsSignatureListPolicyObject registers a new resource with the given unique name, arguments, and options.
func NewIpsSignatureListPolicyObject(ctx *pulumi.Context,
	name string, args *IpsSignatureListPolicyObjectArgs, opts ...pulumi.ResourceOption) (*IpsSignatureListPolicyObject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IpsSignatureListPolicyObject
	err := ctx.RegisterResource("sdwan:index/ipsSignatureListPolicyObject:IpsSignatureListPolicyObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpsSignatureListPolicyObject gets an existing IpsSignatureListPolicyObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpsSignatureListPolicyObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IpsSignatureListPolicyObjectState, opts ...pulumi.ResourceOption) (*IpsSignatureListPolicyObject, error) {
	var resource IpsSignatureListPolicyObject
	err := ctx.ReadResource("sdwan:index/ipsSignatureListPolicyObject:IpsSignatureListPolicyObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IpsSignatureListPolicyObject resources.
type ipsSignatureListPolicyObjectState struct {
	// List of entries
	Entries []IpsSignatureListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type IpsSignatureListPolicyObjectState struct {
	// List of entries
	Entries IpsSignatureListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (IpsSignatureListPolicyObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipsSignatureListPolicyObjectState)(nil)).Elem()
}

type ipsSignatureListPolicyObjectArgs struct {
	// List of entries
	Entries []IpsSignatureListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a IpsSignatureListPolicyObject resource.
type IpsSignatureListPolicyObjectArgs struct {
	// List of entries
	Entries IpsSignatureListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
}

func (IpsSignatureListPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipsSignatureListPolicyObjectArgs)(nil)).Elem()
}

type IpsSignatureListPolicyObjectInput interface {
	pulumi.Input

	ToIpsSignatureListPolicyObjectOutput() IpsSignatureListPolicyObjectOutput
	ToIpsSignatureListPolicyObjectOutputWithContext(ctx context.Context) IpsSignatureListPolicyObjectOutput
}

func (*IpsSignatureListPolicyObject) ElementType() reflect.Type {
	return reflect.TypeOf((**IpsSignatureListPolicyObject)(nil)).Elem()
}

func (i *IpsSignatureListPolicyObject) ToIpsSignatureListPolicyObjectOutput() IpsSignatureListPolicyObjectOutput {
	return i.ToIpsSignatureListPolicyObjectOutputWithContext(context.Background())
}

func (i *IpsSignatureListPolicyObject) ToIpsSignatureListPolicyObjectOutputWithContext(ctx context.Context) IpsSignatureListPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSignatureListPolicyObjectOutput)
}

// IpsSignatureListPolicyObjectArrayInput is an input type that accepts IpsSignatureListPolicyObjectArray and IpsSignatureListPolicyObjectArrayOutput values.
// You can construct a concrete instance of `IpsSignatureListPolicyObjectArrayInput` via:
//
//	IpsSignatureListPolicyObjectArray{ IpsSignatureListPolicyObjectArgs{...} }
type IpsSignatureListPolicyObjectArrayInput interface {
	pulumi.Input

	ToIpsSignatureListPolicyObjectArrayOutput() IpsSignatureListPolicyObjectArrayOutput
	ToIpsSignatureListPolicyObjectArrayOutputWithContext(context.Context) IpsSignatureListPolicyObjectArrayOutput
}

type IpsSignatureListPolicyObjectArray []IpsSignatureListPolicyObjectInput

func (IpsSignatureListPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpsSignatureListPolicyObject)(nil)).Elem()
}

func (i IpsSignatureListPolicyObjectArray) ToIpsSignatureListPolicyObjectArrayOutput() IpsSignatureListPolicyObjectArrayOutput {
	return i.ToIpsSignatureListPolicyObjectArrayOutputWithContext(context.Background())
}

func (i IpsSignatureListPolicyObjectArray) ToIpsSignatureListPolicyObjectArrayOutputWithContext(ctx context.Context) IpsSignatureListPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSignatureListPolicyObjectArrayOutput)
}

// IpsSignatureListPolicyObjectMapInput is an input type that accepts IpsSignatureListPolicyObjectMap and IpsSignatureListPolicyObjectMapOutput values.
// You can construct a concrete instance of `IpsSignatureListPolicyObjectMapInput` via:
//
//	IpsSignatureListPolicyObjectMap{ "key": IpsSignatureListPolicyObjectArgs{...} }
type IpsSignatureListPolicyObjectMapInput interface {
	pulumi.Input

	ToIpsSignatureListPolicyObjectMapOutput() IpsSignatureListPolicyObjectMapOutput
	ToIpsSignatureListPolicyObjectMapOutputWithContext(context.Context) IpsSignatureListPolicyObjectMapOutput
}

type IpsSignatureListPolicyObjectMap map[string]IpsSignatureListPolicyObjectInput

func (IpsSignatureListPolicyObjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpsSignatureListPolicyObject)(nil)).Elem()
}

func (i IpsSignatureListPolicyObjectMap) ToIpsSignatureListPolicyObjectMapOutput() IpsSignatureListPolicyObjectMapOutput {
	return i.ToIpsSignatureListPolicyObjectMapOutputWithContext(context.Background())
}

func (i IpsSignatureListPolicyObjectMap) ToIpsSignatureListPolicyObjectMapOutputWithContext(ctx context.Context) IpsSignatureListPolicyObjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsSignatureListPolicyObjectMapOutput)
}

type IpsSignatureListPolicyObjectOutput struct{ *pulumi.OutputState }

func (IpsSignatureListPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpsSignatureListPolicyObject)(nil)).Elem()
}

func (o IpsSignatureListPolicyObjectOutput) ToIpsSignatureListPolicyObjectOutput() IpsSignatureListPolicyObjectOutput {
	return o
}

func (o IpsSignatureListPolicyObjectOutput) ToIpsSignatureListPolicyObjectOutputWithContext(ctx context.Context) IpsSignatureListPolicyObjectOutput {
	return o
}

// List of entries
func (o IpsSignatureListPolicyObjectOutput) Entries() IpsSignatureListPolicyObjectEntryArrayOutput {
	return o.ApplyT(func(v *IpsSignatureListPolicyObject) IpsSignatureListPolicyObjectEntryArrayOutput { return v.Entries }).(IpsSignatureListPolicyObjectEntryArrayOutput)
}

// The name of the policy object
func (o IpsSignatureListPolicyObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IpsSignatureListPolicyObject) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the object
func (o IpsSignatureListPolicyObjectOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *IpsSignatureListPolicyObject) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type IpsSignatureListPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (IpsSignatureListPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpsSignatureListPolicyObject)(nil)).Elem()
}

func (o IpsSignatureListPolicyObjectArrayOutput) ToIpsSignatureListPolicyObjectArrayOutput() IpsSignatureListPolicyObjectArrayOutput {
	return o
}

func (o IpsSignatureListPolicyObjectArrayOutput) ToIpsSignatureListPolicyObjectArrayOutputWithContext(ctx context.Context) IpsSignatureListPolicyObjectArrayOutput {
	return o
}

func (o IpsSignatureListPolicyObjectArrayOutput) Index(i pulumi.IntInput) IpsSignatureListPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IpsSignatureListPolicyObject {
		return vs[0].([]*IpsSignatureListPolicyObject)[vs[1].(int)]
	}).(IpsSignatureListPolicyObjectOutput)
}

type IpsSignatureListPolicyObjectMapOutput struct{ *pulumi.OutputState }

func (IpsSignatureListPolicyObjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpsSignatureListPolicyObject)(nil)).Elem()
}

func (o IpsSignatureListPolicyObjectMapOutput) ToIpsSignatureListPolicyObjectMapOutput() IpsSignatureListPolicyObjectMapOutput {
	return o
}

func (o IpsSignatureListPolicyObjectMapOutput) ToIpsSignatureListPolicyObjectMapOutputWithContext(ctx context.Context) IpsSignatureListPolicyObjectMapOutput {
	return o
}

func (o IpsSignatureListPolicyObjectMapOutput) MapIndex(k pulumi.StringInput) IpsSignatureListPolicyObjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IpsSignatureListPolicyObject {
		return vs[0].(map[string]*IpsSignatureListPolicyObject)[vs[1].(string)]
	}).(IpsSignatureListPolicyObjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSignatureListPolicyObjectInput)(nil)).Elem(), &IpsSignatureListPolicyObject{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSignatureListPolicyObjectArrayInput)(nil)).Elem(), IpsSignatureListPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpsSignatureListPolicyObjectMapInput)(nil)).Elem(), IpsSignatureListPolicyObjectMap{})
	pulumi.RegisterOutputType(IpsSignatureListPolicyObjectOutput{})
	pulumi.RegisterOutputType(IpsSignatureListPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(IpsSignatureListPolicyObjectMapOutput{})
}
