// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Configuration Group .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupConfigurationGroup(ctx, &sdwan.LookupConfigurationGroupArgs{
//				Id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupConfigurationGroup(ctx *pulumi.Context, args *LookupConfigurationGroupArgs, opts ...pulumi.InvokeOption) (*LookupConfigurationGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConfigurationGroupResult
	err := ctx.Invoke("sdwan:index/getConfigurationGroup:getConfigurationGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConfigurationGroup.
type LookupConfigurationGroupArgs struct {
	// The id of the object
	Id string `pulumi:"id"`
}

// A collection of values returned by getConfigurationGroup.
type LookupConfigurationGroupResult struct {
	// Description
	Description string `pulumi:"description"`
	// List of feature profiles
	FeatureProfiles []GetConfigurationGroupFeatureProfile `pulumi:"featureProfiles"`
	// The id of the object
	Id string `pulumi:"id"`
	// The name of the configuration group
	Name string `pulumi:"name"`
	// Type of solution
	Solution string `pulumi:"solution"`
	// List of topology device types
	TopologyDevices []GetConfigurationGroupTopologyDevice `pulumi:"topologyDevices"`
	// Number of devices per site
	TopologySiteDevices int `pulumi:"topologySiteDevices"`
}

func LookupConfigurationGroupOutput(ctx *pulumi.Context, args LookupConfigurationGroupOutputArgs, opts ...pulumi.InvokeOption) LookupConfigurationGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConfigurationGroupResultOutput, error) {
			args := v.(LookupConfigurationGroupArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupConfigurationGroupResult
			secret, err := ctx.InvokePackageRaw("sdwan:index/getConfigurationGroup:getConfigurationGroup", args, &rv, "", opts...)
			if err != nil {
				return LookupConfigurationGroupResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupConfigurationGroupResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupConfigurationGroupResultOutput), nil
			}
			return output, nil
		}).(LookupConfigurationGroupResultOutput)
}

// A collection of arguments for invoking getConfigurationGroup.
type LookupConfigurationGroupOutputArgs struct {
	// The id of the object
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupConfigurationGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationGroupArgs)(nil)).Elem()
}

// A collection of values returned by getConfigurationGroup.
type LookupConfigurationGroupResultOutput struct{ *pulumi.OutputState }

func (LookupConfigurationGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationGroupResult)(nil)).Elem()
}

func (o LookupConfigurationGroupResultOutput) ToLookupConfigurationGroupResultOutput() LookupConfigurationGroupResultOutput {
	return o
}

func (o LookupConfigurationGroupResultOutput) ToLookupConfigurationGroupResultOutputWithContext(ctx context.Context) LookupConfigurationGroupResultOutput {
	return o
}

// Description
func (o LookupConfigurationGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of feature profiles
func (o LookupConfigurationGroupResultOutput) FeatureProfiles() GetConfigurationGroupFeatureProfileArrayOutput {
	return o.ApplyT(func(v LookupConfigurationGroupResult) []GetConfigurationGroupFeatureProfile { return v.FeatureProfiles }).(GetConfigurationGroupFeatureProfileArrayOutput)
}

// The id of the object
func (o LookupConfigurationGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the configuration group
func (o LookupConfigurationGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// Type of solution
func (o LookupConfigurationGroupResultOutput) Solution() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationGroupResult) string { return v.Solution }).(pulumi.StringOutput)
}

// List of topology device types
func (o LookupConfigurationGroupResultOutput) TopologyDevices() GetConfigurationGroupTopologyDeviceArrayOutput {
	return o.ApplyT(func(v LookupConfigurationGroupResult) []GetConfigurationGroupTopologyDevice { return v.TopologyDevices }).(GetConfigurationGroupTopologyDeviceArrayOutput)
}

// Number of devices per site
func (o LookupConfigurationGroupResultOutput) TopologySiteDevices() pulumi.IntOutput {
	return o.ApplyT(func(v LookupConfigurationGroupResult) int { return v.TopologySiteDevices }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfigurationGroupResultOutput{})
}
