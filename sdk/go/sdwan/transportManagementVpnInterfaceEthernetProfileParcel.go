// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Transport Management VPN Interface Ethernet profile parcel.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/transportManagementVpnInterfaceEthernetProfileParcel:TransportManagementVpnInterfaceEthernetProfileParcel example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type TransportManagementVpnInterfaceEthernetProfileParcel struct {
	pulumi.CustomResourceState

	// Configure ARP entries
	ArpEntries TransportManagementVpnInterfaceEthernetProfileParcelArpEntryArrayOutput `pulumi:"arpEntries"`
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
	ArpTimeout pulumi.IntPtrOutput `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable pulumi.StringPtrOutput `pulumi:"arpTimeoutVariable"`
	// Link autonegotiation
	Autonegotiate pulumi.BoolPtrOutput `pulumi:"autonegotiate"`
	// Variable name
	AutonegotiateVariable         pulumi.StringPtrOutput `pulumi:"autonegotiateVariable"`
	BasicConfigurationDescription pulumi.StringPtrOutput `pulumi:"basicConfigurationDescription"`
	// Variable name
	BasicConfigurationDescriptionVariable pulumi.StringPtrOutput `pulumi:"basicConfigurationDescriptionVariable"`
	// The description of the profile parcel
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Duplex mode - Choices: `full`, `half`, `auto`
	Duplex pulumi.StringPtrOutput `pulumi:"duplex"`
	// Variable name
	DuplexVariable pulumi.StringPtrOutput `pulumi:"duplexVariable"`
	// Enable DHCPv6
	EnableDhcpv6 pulumi.BoolPtrOutput `pulumi:"enableDhcpv6"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrOutput `pulumi:"featureProfileId"`
	// ICMP/ICMPv6 Redirect Disable - Default value: `true`
	IcmpRedirectDisable pulumi.BoolPtrOutput `pulumi:"icmpRedirectDisable"`
	// Variable name
	IcmpRedirectDisableVariable pulumi.StringPtrOutput `pulumi:"icmpRedirectDisableVariable"`
	// Interface MTU - Range: `1500`-`9216` - Default value: `1500`
	InterfaceMtu pulumi.IntPtrOutput `pulumi:"interfaceMtu"`
	// Variable name
	InterfaceMtuVariable pulumi.StringPtrOutput `pulumi:"interfaceMtuVariable"`
	InterfaceName        pulumi.StringOutput    `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable pulumi.StringPtrOutput `pulumi:"interfaceNameVariable"`
	// IP Directed-Broadcast - Default value: `false`
	IpDirectedBroadcast pulumi.BoolPtrOutput `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable pulumi.StringPtrOutput `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
	// <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
	IpMtu pulumi.IntPtrOutput `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable pulumi.StringPtrOutput `pulumi:"ipMtuVariable"`
	// IP Address
	Ipv4Address pulumi.StringPtrOutput `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrOutput `pulumi:"ipv4AddressVariable"`
	// Interface auto detect bandwidth - Default value: `false`
	Ipv4AutoDetectBandwidth pulumi.BoolPtrOutput `pulumi:"ipv4AutoDetectBandwidth"`
	// Variable name
	Ipv4AutoDetectBandwidthVariable pulumi.StringPtrOutput `pulumi:"ipv4AutoDetectBandwidthVariable"`
	// DHCP Distance - Range: `1`-`65536`
	Ipv4DhcpDistance pulumi.IntPtrOutput `pulumi:"ipv4DhcpDistance"`
	// Variable name
	Ipv4DhcpDistanceVariable pulumi.StringPtrOutput `pulumi:"ipv4DhcpDistanceVariable"`
	// Variable name
	Ipv4DhcpHelperVariable pulumi.StringPtrOutput `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP IPv4 helper addresses (min 1, max 8)
	Ipv4DhcpHelpers pulumi.StringArrayOutput `pulumi:"ipv4DhcpHelpers"`
	// Iperf server for auto bandwidth detect
	Ipv4IperfServer pulumi.StringPtrOutput `pulumi:"ipv4IperfServer"`
	// Variable name
	Ipv4IperfServerVariable pulumi.StringPtrOutput `pulumi:"ipv4IperfServerVariable"`
	// Secondary IpV4 Addresses
	Ipv4SecondaryAddresses TransportManagementVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArrayOutput `pulumi:"ipv4SecondaryAddresses"`
	// Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	// `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	// `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	// `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	// `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrOutput `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable pulumi.StringPtrOutput `pulumi:"ipv4SubnetMaskVariable"`
	// IPv6 Address Secondary
	Ipv6Address pulumi.StringPtrOutput `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrOutput `pulumi:"ipv6AddressVariable"`
	// Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
	LoadInterval pulumi.IntPtrOutput `pulumi:"loadInterval"`
	// Variable name
	LoadIntervalVariable pulumi.StringPtrOutput `pulumi:"loadIntervalVariable"`
	// MAC Address
	MacAddress pulumi.StringPtrOutput `pulumi:"macAddress"`
	// Variable name
	MacAddressVariable pulumi.StringPtrOutput `pulumi:"macAddressVariable"`
	// Media type - Choices: `auto-select`, `rj45`, `sfp`
	MediaType pulumi.StringPtrOutput `pulumi:"mediaType"`
	// Variable name
	MediaTypeVariable pulumi.StringPtrOutput `pulumi:"mediaTypeVariable"`
	// The name of the profile parcel
	Name pulumi.StringOutput `pulumi:"name"`
	// - Default value: `true`
	Shutdown pulumi.BoolPtrOutput `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable pulumi.StringPtrOutput `pulumi:"shutdownVariable"`
	// Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed pulumi.StringPtrOutput `pulumi:"speed"`
	// Variable name
	SpeedVariable pulumi.StringPtrOutput `pulumi:"speedVariable"`
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss pulumi.IntPtrOutput `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable pulumi.StringPtrOutput `pulumi:"tcpMssVariable"`
	// Transport Management VPN Profile Parcel ID
	TransportManagementVpnProfileParcelId pulumi.StringPtrOutput `pulumi:"transportManagementVpnProfileParcelId"`
	// The version of the profile parcel
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewTransportManagementVpnInterfaceEthernetProfileParcel registers a new resource with the given unique name, arguments, and options.
func NewTransportManagementVpnInterfaceEthernetProfileParcel(ctx *pulumi.Context,
	name string, args *TransportManagementVpnInterfaceEthernetProfileParcelArgs, opts ...pulumi.ResourceOption) (*TransportManagementVpnInterfaceEthernetProfileParcel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InterfaceName == nil {
		return nil, errors.New("invalid value for required argument 'InterfaceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransportManagementVpnInterfaceEthernetProfileParcel
	err := ctx.RegisterResource("sdwan:index/transportManagementVpnInterfaceEthernetProfileParcel:TransportManagementVpnInterfaceEthernetProfileParcel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransportManagementVpnInterfaceEthernetProfileParcel gets an existing TransportManagementVpnInterfaceEthernetProfileParcel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransportManagementVpnInterfaceEthernetProfileParcel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransportManagementVpnInterfaceEthernetProfileParcelState, opts ...pulumi.ResourceOption) (*TransportManagementVpnInterfaceEthernetProfileParcel, error) {
	var resource TransportManagementVpnInterfaceEthernetProfileParcel
	err := ctx.ReadResource("sdwan:index/transportManagementVpnInterfaceEthernetProfileParcel:TransportManagementVpnInterfaceEthernetProfileParcel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransportManagementVpnInterfaceEthernetProfileParcel resources.
type transportManagementVpnInterfaceEthernetProfileParcelState struct {
	// Configure ARP entries
	ArpEntries []TransportManagementVpnInterfaceEthernetProfileParcelArpEntry `pulumi:"arpEntries"`
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
	ArpTimeout *int `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable *string `pulumi:"arpTimeoutVariable"`
	// Link autonegotiation
	Autonegotiate *bool `pulumi:"autonegotiate"`
	// Variable name
	AutonegotiateVariable         *string `pulumi:"autonegotiateVariable"`
	BasicConfigurationDescription *string `pulumi:"basicConfigurationDescription"`
	// Variable name
	BasicConfigurationDescriptionVariable *string `pulumi:"basicConfigurationDescriptionVariable"`
	// The description of the profile parcel
	Description *string `pulumi:"description"`
	// Duplex mode - Choices: `full`, `half`, `auto`
	Duplex *string `pulumi:"duplex"`
	// Variable name
	DuplexVariable *string `pulumi:"duplexVariable"`
	// Enable DHCPv6
	EnableDhcpv6 *bool `pulumi:"enableDhcpv6"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// ICMP/ICMPv6 Redirect Disable - Default value: `true`
	IcmpRedirectDisable *bool `pulumi:"icmpRedirectDisable"`
	// Variable name
	IcmpRedirectDisableVariable *string `pulumi:"icmpRedirectDisableVariable"`
	// Interface MTU - Range: `1500`-`9216` - Default value: `1500`
	InterfaceMtu *int `pulumi:"interfaceMtu"`
	// Variable name
	InterfaceMtuVariable *string `pulumi:"interfaceMtuVariable"`
	InterfaceName        *string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable *string `pulumi:"interfaceNameVariable"`
	// IP Directed-Broadcast - Default value: `false`
	IpDirectedBroadcast *bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable *string `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
	// <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	// IP Address
	Ipv4Address *string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable *string `pulumi:"ipv4AddressVariable"`
	// Interface auto detect bandwidth - Default value: `false`
	Ipv4AutoDetectBandwidth *bool `pulumi:"ipv4AutoDetectBandwidth"`
	// Variable name
	Ipv4AutoDetectBandwidthVariable *string `pulumi:"ipv4AutoDetectBandwidthVariable"`
	// DHCP Distance - Range: `1`-`65536`
	Ipv4DhcpDistance *int `pulumi:"ipv4DhcpDistance"`
	// Variable name
	Ipv4DhcpDistanceVariable *string `pulumi:"ipv4DhcpDistanceVariable"`
	// Variable name
	Ipv4DhcpHelperVariable *string `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP IPv4 helper addresses (min 1, max 8)
	Ipv4DhcpHelpers []string `pulumi:"ipv4DhcpHelpers"`
	// Iperf server for auto bandwidth detect
	Ipv4IperfServer *string `pulumi:"ipv4IperfServer"`
	// Variable name
	Ipv4IperfServerVariable *string `pulumi:"ipv4IperfServerVariable"`
	// Secondary IpV4 Addresses
	Ipv4SecondaryAddresses []TransportManagementVpnInterfaceEthernetProfileParcelIpv4SecondaryAddress `pulumi:"ipv4SecondaryAddresses"`
	// Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	// `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	// `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	// `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	// `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask *string `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable *string `pulumi:"ipv4SubnetMaskVariable"`
	// IPv6 Address Secondary
	Ipv6Address *string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable *string `pulumi:"ipv6AddressVariable"`
	// Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
	LoadInterval *int `pulumi:"loadInterval"`
	// Variable name
	LoadIntervalVariable *string `pulumi:"loadIntervalVariable"`
	// MAC Address
	MacAddress *string `pulumi:"macAddress"`
	// Variable name
	MacAddressVariable *string `pulumi:"macAddressVariable"`
	// Media type - Choices: `auto-select`, `rj45`, `sfp`
	MediaType *string `pulumi:"mediaType"`
	// Variable name
	MediaTypeVariable *string `pulumi:"mediaTypeVariable"`
	// The name of the profile parcel
	Name *string `pulumi:"name"`
	// - Default value: `true`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed *string `pulumi:"speed"`
	// Variable name
	SpeedVariable *string `pulumi:"speedVariable"`
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss *int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable *string `pulumi:"tcpMssVariable"`
	// Transport Management VPN Profile Parcel ID
	TransportManagementVpnProfileParcelId *string `pulumi:"transportManagementVpnProfileParcelId"`
	// The version of the profile parcel
	Version *int `pulumi:"version"`
}

type TransportManagementVpnInterfaceEthernetProfileParcelState struct {
	// Configure ARP entries
	ArpEntries TransportManagementVpnInterfaceEthernetProfileParcelArpEntryArrayInput
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
	ArpTimeout pulumi.IntPtrInput
	// Variable name
	ArpTimeoutVariable pulumi.StringPtrInput
	// Link autonegotiation
	Autonegotiate pulumi.BoolPtrInput
	// Variable name
	AutonegotiateVariable         pulumi.StringPtrInput
	BasicConfigurationDescription pulumi.StringPtrInput
	// Variable name
	BasicConfigurationDescriptionVariable pulumi.StringPtrInput
	// The description of the profile parcel
	Description pulumi.StringPtrInput
	// Duplex mode - Choices: `full`, `half`, `auto`
	Duplex pulumi.StringPtrInput
	// Variable name
	DuplexVariable pulumi.StringPtrInput
	// Enable DHCPv6
	EnableDhcpv6 pulumi.BoolPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// ICMP/ICMPv6 Redirect Disable - Default value: `true`
	IcmpRedirectDisable pulumi.BoolPtrInput
	// Variable name
	IcmpRedirectDisableVariable pulumi.StringPtrInput
	// Interface MTU - Range: `1500`-`9216` - Default value: `1500`
	InterfaceMtu pulumi.IntPtrInput
	// Variable name
	InterfaceMtuVariable pulumi.StringPtrInput
	InterfaceName        pulumi.StringPtrInput
	// Variable name
	InterfaceNameVariable pulumi.StringPtrInput
	// IP Directed-Broadcast - Default value: `false`
	IpDirectedBroadcast pulumi.BoolPtrInput
	// Variable name
	IpDirectedBroadcastVariable pulumi.StringPtrInput
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
	// <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	// IP Address
	Ipv4Address pulumi.StringPtrInput
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrInput
	// Interface auto detect bandwidth - Default value: `false`
	Ipv4AutoDetectBandwidth pulumi.BoolPtrInput
	// Variable name
	Ipv4AutoDetectBandwidthVariable pulumi.StringPtrInput
	// DHCP Distance - Range: `1`-`65536`
	Ipv4DhcpDistance pulumi.IntPtrInput
	// Variable name
	Ipv4DhcpDistanceVariable pulumi.StringPtrInput
	// Variable name
	Ipv4DhcpHelperVariable pulumi.StringPtrInput
	// List of DHCP IPv4 helper addresses (min 1, max 8)
	Ipv4DhcpHelpers pulumi.StringArrayInput
	// Iperf server for auto bandwidth detect
	Ipv4IperfServer pulumi.StringPtrInput
	// Variable name
	Ipv4IperfServerVariable pulumi.StringPtrInput
	// Secondary IpV4 Addresses
	Ipv4SecondaryAddresses TransportManagementVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArrayInput
	// Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	// `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	// `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	// `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	// `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrInput
	// Variable name
	Ipv4SubnetMaskVariable pulumi.StringPtrInput
	// IPv6 Address Secondary
	Ipv6Address pulumi.StringPtrInput
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrInput
	// Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
	LoadInterval pulumi.IntPtrInput
	// Variable name
	LoadIntervalVariable pulumi.StringPtrInput
	// MAC Address
	MacAddress pulumi.StringPtrInput
	// Variable name
	MacAddressVariable pulumi.StringPtrInput
	// Media type - Choices: `auto-select`, `rj45`, `sfp`
	MediaType pulumi.StringPtrInput
	// Variable name
	MediaTypeVariable pulumi.StringPtrInput
	// The name of the profile parcel
	Name pulumi.StringPtrInput
	// - Default value: `true`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed pulumi.StringPtrInput
	// Variable name
	SpeedVariable pulumi.StringPtrInput
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss pulumi.IntPtrInput
	// Variable name
	TcpMssVariable pulumi.StringPtrInput
	// Transport Management VPN Profile Parcel ID
	TransportManagementVpnProfileParcelId pulumi.StringPtrInput
	// The version of the profile parcel
	Version pulumi.IntPtrInput
}

func (TransportManagementVpnInterfaceEthernetProfileParcelState) ElementType() reflect.Type {
	return reflect.TypeOf((*transportManagementVpnInterfaceEthernetProfileParcelState)(nil)).Elem()
}

type transportManagementVpnInterfaceEthernetProfileParcelArgs struct {
	// Configure ARP entries
	ArpEntries []TransportManagementVpnInterfaceEthernetProfileParcelArpEntry `pulumi:"arpEntries"`
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
	ArpTimeout *int `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable *string `pulumi:"arpTimeoutVariable"`
	// Link autonegotiation
	Autonegotiate *bool `pulumi:"autonegotiate"`
	// Variable name
	AutonegotiateVariable         *string `pulumi:"autonegotiateVariable"`
	BasicConfigurationDescription *string `pulumi:"basicConfigurationDescription"`
	// Variable name
	BasicConfigurationDescriptionVariable *string `pulumi:"basicConfigurationDescriptionVariable"`
	// The description of the profile parcel
	Description *string `pulumi:"description"`
	// Duplex mode - Choices: `full`, `half`, `auto`
	Duplex *string `pulumi:"duplex"`
	// Variable name
	DuplexVariable *string `pulumi:"duplexVariable"`
	// Enable DHCPv6
	EnableDhcpv6 *bool `pulumi:"enableDhcpv6"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// ICMP/ICMPv6 Redirect Disable - Default value: `true`
	IcmpRedirectDisable *bool `pulumi:"icmpRedirectDisable"`
	// Variable name
	IcmpRedirectDisableVariable *string `pulumi:"icmpRedirectDisableVariable"`
	// Interface MTU - Range: `1500`-`9216` - Default value: `1500`
	InterfaceMtu *int `pulumi:"interfaceMtu"`
	// Variable name
	InterfaceMtuVariable *string `pulumi:"interfaceMtuVariable"`
	InterfaceName        string  `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable *string `pulumi:"interfaceNameVariable"`
	// IP Directed-Broadcast - Default value: `false`
	IpDirectedBroadcast *bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable *string `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
	// <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	// IP Address
	Ipv4Address *string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable *string `pulumi:"ipv4AddressVariable"`
	// Interface auto detect bandwidth - Default value: `false`
	Ipv4AutoDetectBandwidth *bool `pulumi:"ipv4AutoDetectBandwidth"`
	// Variable name
	Ipv4AutoDetectBandwidthVariable *string `pulumi:"ipv4AutoDetectBandwidthVariable"`
	// DHCP Distance - Range: `1`-`65536`
	Ipv4DhcpDistance *int `pulumi:"ipv4DhcpDistance"`
	// Variable name
	Ipv4DhcpDistanceVariable *string `pulumi:"ipv4DhcpDistanceVariable"`
	// Variable name
	Ipv4DhcpHelperVariable *string `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP IPv4 helper addresses (min 1, max 8)
	Ipv4DhcpHelpers []string `pulumi:"ipv4DhcpHelpers"`
	// Iperf server for auto bandwidth detect
	Ipv4IperfServer *string `pulumi:"ipv4IperfServer"`
	// Variable name
	Ipv4IperfServerVariable *string `pulumi:"ipv4IperfServerVariable"`
	// Secondary IpV4 Addresses
	Ipv4SecondaryAddresses []TransportManagementVpnInterfaceEthernetProfileParcelIpv4SecondaryAddress `pulumi:"ipv4SecondaryAddresses"`
	// Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	// `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	// `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	// `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	// `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask *string `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable *string `pulumi:"ipv4SubnetMaskVariable"`
	// IPv6 Address Secondary
	Ipv6Address *string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable *string `pulumi:"ipv6AddressVariable"`
	// Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
	LoadInterval *int `pulumi:"loadInterval"`
	// Variable name
	LoadIntervalVariable *string `pulumi:"loadIntervalVariable"`
	// MAC Address
	MacAddress *string `pulumi:"macAddress"`
	// Variable name
	MacAddressVariable *string `pulumi:"macAddressVariable"`
	// Media type - Choices: `auto-select`, `rj45`, `sfp`
	MediaType *string `pulumi:"mediaType"`
	// Variable name
	MediaTypeVariable *string `pulumi:"mediaTypeVariable"`
	// The name of the profile parcel
	Name *string `pulumi:"name"`
	// - Default value: `true`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed *string `pulumi:"speed"`
	// Variable name
	SpeedVariable *string `pulumi:"speedVariable"`
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss *int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable *string `pulumi:"tcpMssVariable"`
	// Transport Management VPN Profile Parcel ID
	TransportManagementVpnProfileParcelId *string `pulumi:"transportManagementVpnProfileParcelId"`
}

// The set of arguments for constructing a TransportManagementVpnInterfaceEthernetProfileParcel resource.
type TransportManagementVpnInterfaceEthernetProfileParcelArgs struct {
	// Configure ARP entries
	ArpEntries TransportManagementVpnInterfaceEthernetProfileParcelArpEntryArrayInput
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
	ArpTimeout pulumi.IntPtrInput
	// Variable name
	ArpTimeoutVariable pulumi.StringPtrInput
	// Link autonegotiation
	Autonegotiate pulumi.BoolPtrInput
	// Variable name
	AutonegotiateVariable         pulumi.StringPtrInput
	BasicConfigurationDescription pulumi.StringPtrInput
	// Variable name
	BasicConfigurationDescriptionVariable pulumi.StringPtrInput
	// The description of the profile parcel
	Description pulumi.StringPtrInput
	// Duplex mode - Choices: `full`, `half`, `auto`
	Duplex pulumi.StringPtrInput
	// Variable name
	DuplexVariable pulumi.StringPtrInput
	// Enable DHCPv6
	EnableDhcpv6 pulumi.BoolPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// ICMP/ICMPv6 Redirect Disable - Default value: `true`
	IcmpRedirectDisable pulumi.BoolPtrInput
	// Variable name
	IcmpRedirectDisableVariable pulumi.StringPtrInput
	// Interface MTU - Range: `1500`-`9216` - Default value: `1500`
	InterfaceMtu pulumi.IntPtrInput
	// Variable name
	InterfaceMtuVariable pulumi.StringPtrInput
	InterfaceName        pulumi.StringInput
	// Variable name
	InterfaceNameVariable pulumi.StringPtrInput
	// IP Directed-Broadcast - Default value: `false`
	IpDirectedBroadcast pulumi.BoolPtrInput
	// Variable name
	IpDirectedBroadcastVariable pulumi.StringPtrInput
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
	// <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	// IP Address
	Ipv4Address pulumi.StringPtrInput
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrInput
	// Interface auto detect bandwidth - Default value: `false`
	Ipv4AutoDetectBandwidth pulumi.BoolPtrInput
	// Variable name
	Ipv4AutoDetectBandwidthVariable pulumi.StringPtrInput
	// DHCP Distance - Range: `1`-`65536`
	Ipv4DhcpDistance pulumi.IntPtrInput
	// Variable name
	Ipv4DhcpDistanceVariable pulumi.StringPtrInput
	// Variable name
	Ipv4DhcpHelperVariable pulumi.StringPtrInput
	// List of DHCP IPv4 helper addresses (min 1, max 8)
	Ipv4DhcpHelpers pulumi.StringArrayInput
	// Iperf server for auto bandwidth detect
	Ipv4IperfServer pulumi.StringPtrInput
	// Variable name
	Ipv4IperfServerVariable pulumi.StringPtrInput
	// Secondary IpV4 Addresses
	Ipv4SecondaryAddresses TransportManagementVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArrayInput
	// Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	// `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	// `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	// `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	// `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrInput
	// Variable name
	Ipv4SubnetMaskVariable pulumi.StringPtrInput
	// IPv6 Address Secondary
	Ipv6Address pulumi.StringPtrInput
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrInput
	// Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
	LoadInterval pulumi.IntPtrInput
	// Variable name
	LoadIntervalVariable pulumi.StringPtrInput
	// MAC Address
	MacAddress pulumi.StringPtrInput
	// Variable name
	MacAddressVariable pulumi.StringPtrInput
	// Media type - Choices: `auto-select`, `rj45`, `sfp`
	MediaType pulumi.StringPtrInput
	// Variable name
	MediaTypeVariable pulumi.StringPtrInput
	// The name of the profile parcel
	Name pulumi.StringPtrInput
	// - Default value: `true`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed pulumi.StringPtrInput
	// Variable name
	SpeedVariable pulumi.StringPtrInput
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss pulumi.IntPtrInput
	// Variable name
	TcpMssVariable pulumi.StringPtrInput
	// Transport Management VPN Profile Parcel ID
	TransportManagementVpnProfileParcelId pulumi.StringPtrInput
}

func (TransportManagementVpnInterfaceEthernetProfileParcelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transportManagementVpnInterfaceEthernetProfileParcelArgs)(nil)).Elem()
}

type TransportManagementVpnInterfaceEthernetProfileParcelInput interface {
	pulumi.Input

	ToTransportManagementVpnInterfaceEthernetProfileParcelOutput() TransportManagementVpnInterfaceEthernetProfileParcelOutput
	ToTransportManagementVpnInterfaceEthernetProfileParcelOutputWithContext(ctx context.Context) TransportManagementVpnInterfaceEthernetProfileParcelOutput
}

func (*TransportManagementVpnInterfaceEthernetProfileParcel) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportManagementVpnInterfaceEthernetProfileParcel)(nil)).Elem()
}

func (i *TransportManagementVpnInterfaceEthernetProfileParcel) ToTransportManagementVpnInterfaceEthernetProfileParcelOutput() TransportManagementVpnInterfaceEthernetProfileParcelOutput {
	return i.ToTransportManagementVpnInterfaceEthernetProfileParcelOutputWithContext(context.Background())
}

func (i *TransportManagementVpnInterfaceEthernetProfileParcel) ToTransportManagementVpnInterfaceEthernetProfileParcelOutputWithContext(ctx context.Context) TransportManagementVpnInterfaceEthernetProfileParcelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportManagementVpnInterfaceEthernetProfileParcelOutput)
}

// TransportManagementVpnInterfaceEthernetProfileParcelArrayInput is an input type that accepts TransportManagementVpnInterfaceEthernetProfileParcelArray and TransportManagementVpnInterfaceEthernetProfileParcelArrayOutput values.
// You can construct a concrete instance of `TransportManagementVpnInterfaceEthernetProfileParcelArrayInput` via:
//
//	TransportManagementVpnInterfaceEthernetProfileParcelArray{ TransportManagementVpnInterfaceEthernetProfileParcelArgs{...} }
type TransportManagementVpnInterfaceEthernetProfileParcelArrayInput interface {
	pulumi.Input

	ToTransportManagementVpnInterfaceEthernetProfileParcelArrayOutput() TransportManagementVpnInterfaceEthernetProfileParcelArrayOutput
	ToTransportManagementVpnInterfaceEthernetProfileParcelArrayOutputWithContext(context.Context) TransportManagementVpnInterfaceEthernetProfileParcelArrayOutput
}

type TransportManagementVpnInterfaceEthernetProfileParcelArray []TransportManagementVpnInterfaceEthernetProfileParcelInput

func (TransportManagementVpnInterfaceEthernetProfileParcelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportManagementVpnInterfaceEthernetProfileParcel)(nil)).Elem()
}

func (i TransportManagementVpnInterfaceEthernetProfileParcelArray) ToTransportManagementVpnInterfaceEthernetProfileParcelArrayOutput() TransportManagementVpnInterfaceEthernetProfileParcelArrayOutput {
	return i.ToTransportManagementVpnInterfaceEthernetProfileParcelArrayOutputWithContext(context.Background())
}

func (i TransportManagementVpnInterfaceEthernetProfileParcelArray) ToTransportManagementVpnInterfaceEthernetProfileParcelArrayOutputWithContext(ctx context.Context) TransportManagementVpnInterfaceEthernetProfileParcelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportManagementVpnInterfaceEthernetProfileParcelArrayOutput)
}

// TransportManagementVpnInterfaceEthernetProfileParcelMapInput is an input type that accepts TransportManagementVpnInterfaceEthernetProfileParcelMap and TransportManagementVpnInterfaceEthernetProfileParcelMapOutput values.
// You can construct a concrete instance of `TransportManagementVpnInterfaceEthernetProfileParcelMapInput` via:
//
//	TransportManagementVpnInterfaceEthernetProfileParcelMap{ "key": TransportManagementVpnInterfaceEthernetProfileParcelArgs{...} }
type TransportManagementVpnInterfaceEthernetProfileParcelMapInput interface {
	pulumi.Input

	ToTransportManagementVpnInterfaceEthernetProfileParcelMapOutput() TransportManagementVpnInterfaceEthernetProfileParcelMapOutput
	ToTransportManagementVpnInterfaceEthernetProfileParcelMapOutputWithContext(context.Context) TransportManagementVpnInterfaceEthernetProfileParcelMapOutput
}

type TransportManagementVpnInterfaceEthernetProfileParcelMap map[string]TransportManagementVpnInterfaceEthernetProfileParcelInput

func (TransportManagementVpnInterfaceEthernetProfileParcelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportManagementVpnInterfaceEthernetProfileParcel)(nil)).Elem()
}

func (i TransportManagementVpnInterfaceEthernetProfileParcelMap) ToTransportManagementVpnInterfaceEthernetProfileParcelMapOutput() TransportManagementVpnInterfaceEthernetProfileParcelMapOutput {
	return i.ToTransportManagementVpnInterfaceEthernetProfileParcelMapOutputWithContext(context.Background())
}

func (i TransportManagementVpnInterfaceEthernetProfileParcelMap) ToTransportManagementVpnInterfaceEthernetProfileParcelMapOutputWithContext(ctx context.Context) TransportManagementVpnInterfaceEthernetProfileParcelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportManagementVpnInterfaceEthernetProfileParcelMapOutput)
}

type TransportManagementVpnInterfaceEthernetProfileParcelOutput struct{ *pulumi.OutputState }

func (TransportManagementVpnInterfaceEthernetProfileParcelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportManagementVpnInterfaceEthernetProfileParcel)(nil)).Elem()
}

func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) ToTransportManagementVpnInterfaceEthernetProfileParcelOutput() TransportManagementVpnInterfaceEthernetProfileParcelOutput {
	return o
}

func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) ToTransportManagementVpnInterfaceEthernetProfileParcelOutputWithContext(ctx context.Context) TransportManagementVpnInterfaceEthernetProfileParcelOutput {
	return o
}

// Configure ARP entries
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) ArpEntries() TransportManagementVpnInterfaceEthernetProfileParcelArpEntryArrayOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) TransportManagementVpnInterfaceEthernetProfileParcelArpEntryArrayOutput {
		return v.ArpEntries
	}).(TransportManagementVpnInterfaceEthernetProfileParcelArpEntryArrayOutput)
}

// Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) ArpTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput { return v.ArpTimeout }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) ArpTimeoutVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.ArpTimeoutVariable
	}).(pulumi.StringPtrOutput)
}

// Link autonegotiation
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Autonegotiate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.Autonegotiate
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) AutonegotiateVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.AutonegotiateVariable
	}).(pulumi.StringPtrOutput)
}

func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) BasicConfigurationDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.BasicConfigurationDescription
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) BasicConfigurationDescriptionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.BasicConfigurationDescriptionVariable
	}).(pulumi.StringPtrOutput)
}

// The description of the profile parcel
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Duplex mode - Choices: `full`, `half`, `auto`
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Duplex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.Duplex }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) DuplexVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.DuplexVariable
	}).(pulumi.StringPtrOutput)
}

// Enable DHCPv6
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) EnableDhcpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.EnableDhcpv6
	}).(pulumi.BoolPtrOutput)
}

// Feature Profile ID
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) FeatureProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.FeatureProfileId
	}).(pulumi.StringPtrOutput)
}

// ICMP/ICMPv6 Redirect Disable - Default value: `true`
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) IcmpRedirectDisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.IcmpRedirectDisable
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) IcmpRedirectDisableVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.IcmpRedirectDisableVariable
	}).(pulumi.StringPtrOutput)
}

// Interface MTU - Range: `1500`-`9216` - Default value: `1500`
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) InterfaceMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput {
		return v.InterfaceMtu
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) InterfaceMtuVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.InterfaceMtuVariable
	}).(pulumi.StringPtrOutput)
}

func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringOutput {
		return v.InterfaceName
	}).(pulumi.StringOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) InterfaceNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.InterfaceNameVariable
	}).(pulumi.StringPtrOutput)
}

// IP Directed-Broadcast - Default value: `false`
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) IpDirectedBroadcast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.IpDirectedBroadcast
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) IpDirectedBroadcastVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.IpDirectedBroadcastVariable
	}).(pulumi.StringPtrOutput)
}

// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
// <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) IpMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput { return v.IpMtu }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) IpMtuVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.IpMtuVariable
	}).(pulumi.StringPtrOutput)
}

// IP Address
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.Ipv4Address
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Ipv4AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.Ipv4AddressVariable
	}).(pulumi.StringPtrOutput)
}

// Interface auto detect bandwidth - Default value: `false`
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Ipv4AutoDetectBandwidth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.Ipv4AutoDetectBandwidth
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Ipv4AutoDetectBandwidthVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.Ipv4AutoDetectBandwidthVariable
	}).(pulumi.StringPtrOutput)
}

// DHCP Distance - Range: `1`-`65536`
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Ipv4DhcpDistance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput {
		return v.Ipv4DhcpDistance
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Ipv4DhcpDistanceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.Ipv4DhcpDistanceVariable
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Ipv4DhcpHelperVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.Ipv4DhcpHelperVariable
	}).(pulumi.StringPtrOutput)
}

// List of DHCP IPv4 helper addresses (min 1, max 8)
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Ipv4DhcpHelpers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringArrayOutput {
		return v.Ipv4DhcpHelpers
	}).(pulumi.StringArrayOutput)
}

// Iperf server for auto bandwidth detect
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Ipv4IperfServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.Ipv4IperfServer
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Ipv4IperfServerVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.Ipv4IperfServerVariable
	}).(pulumi.StringPtrOutput)
}

// Secondary IpV4 Addresses
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Ipv4SecondaryAddresses() TransportManagementVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArrayOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) TransportManagementVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArrayOutput {
		return v.Ipv4SecondaryAddresses
	}).(TransportManagementVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArrayOutput)
}

// Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
// `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
// `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
// `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
// `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Ipv4SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.Ipv4SubnetMask
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Ipv4SubnetMaskVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.Ipv4SubnetMaskVariable
	}).(pulumi.StringPtrOutput)
}

// IPv6 Address Secondary
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.Ipv6Address
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Ipv6AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.Ipv6AddressVariable
	}).(pulumi.StringPtrOutput)
}

// Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) LoadInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput {
		return v.LoadInterval
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) LoadIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.LoadIntervalVariable
	}).(pulumi.StringPtrOutput)
}

// MAC Address
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.MacAddress
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) MacAddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.MacAddressVariable
	}).(pulumi.StringPtrOutput)
}

// Media type - Choices: `auto-select`, `rj45`, `sfp`
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.MediaType
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) MediaTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.MediaTypeVariable
	}).(pulumi.StringPtrOutput)
}

// The name of the profile parcel
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// - Default value: `true`
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Shutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput { return v.Shutdown }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) ShutdownVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.ShutdownVariable
	}).(pulumi.StringPtrOutput)
}

// Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Speed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.Speed }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) SpeedVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.SpeedVariable
	}).(pulumi.StringPtrOutput)
}

// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) TcpMss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput { return v.TcpMss }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) TcpMssVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TcpMssVariable
	}).(pulumi.StringPtrOutput)
}

// Transport Management VPN Profile Parcel ID
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) TransportManagementVpnProfileParcelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TransportManagementVpnProfileParcelId
	}).(pulumi.StringPtrOutput)
}

// The version of the profile parcel
func (o TransportManagementVpnInterfaceEthernetProfileParcelOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *TransportManagementVpnInterfaceEthernetProfileParcel) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type TransportManagementVpnInterfaceEthernetProfileParcelArrayOutput struct{ *pulumi.OutputState }

func (TransportManagementVpnInterfaceEthernetProfileParcelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportManagementVpnInterfaceEthernetProfileParcel)(nil)).Elem()
}

func (o TransportManagementVpnInterfaceEthernetProfileParcelArrayOutput) ToTransportManagementVpnInterfaceEthernetProfileParcelArrayOutput() TransportManagementVpnInterfaceEthernetProfileParcelArrayOutput {
	return o
}

func (o TransportManagementVpnInterfaceEthernetProfileParcelArrayOutput) ToTransportManagementVpnInterfaceEthernetProfileParcelArrayOutputWithContext(ctx context.Context) TransportManagementVpnInterfaceEthernetProfileParcelArrayOutput {
	return o
}

func (o TransportManagementVpnInterfaceEthernetProfileParcelArrayOutput) Index(i pulumi.IntInput) TransportManagementVpnInterfaceEthernetProfileParcelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransportManagementVpnInterfaceEthernetProfileParcel {
		return vs[0].([]*TransportManagementVpnInterfaceEthernetProfileParcel)[vs[1].(int)]
	}).(TransportManagementVpnInterfaceEthernetProfileParcelOutput)
}

type TransportManagementVpnInterfaceEthernetProfileParcelMapOutput struct{ *pulumi.OutputState }

func (TransportManagementVpnInterfaceEthernetProfileParcelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportManagementVpnInterfaceEthernetProfileParcel)(nil)).Elem()
}

func (o TransportManagementVpnInterfaceEthernetProfileParcelMapOutput) ToTransportManagementVpnInterfaceEthernetProfileParcelMapOutput() TransportManagementVpnInterfaceEthernetProfileParcelMapOutput {
	return o
}

func (o TransportManagementVpnInterfaceEthernetProfileParcelMapOutput) ToTransportManagementVpnInterfaceEthernetProfileParcelMapOutputWithContext(ctx context.Context) TransportManagementVpnInterfaceEthernetProfileParcelMapOutput {
	return o
}

func (o TransportManagementVpnInterfaceEthernetProfileParcelMapOutput) MapIndex(k pulumi.StringInput) TransportManagementVpnInterfaceEthernetProfileParcelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransportManagementVpnInterfaceEthernetProfileParcel {
		return vs[0].(map[string]*TransportManagementVpnInterfaceEthernetProfileParcel)[vs[1].(string)]
	}).(TransportManagementVpnInterfaceEthernetProfileParcelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransportManagementVpnInterfaceEthernetProfileParcelInput)(nil)).Elem(), &TransportManagementVpnInterfaceEthernetProfileParcel{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportManagementVpnInterfaceEthernetProfileParcelArrayInput)(nil)).Elem(), TransportManagementVpnInterfaceEthernetProfileParcelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportManagementVpnInterfaceEthernetProfileParcelMapInput)(nil)).Elem(), TransportManagementVpnInterfaceEthernetProfileParcelMap{})
	pulumi.RegisterOutputType(TransportManagementVpnInterfaceEthernetProfileParcelOutput{})
	pulumi.RegisterOutputType(TransportManagementVpnInterfaceEthernetProfileParcelArrayOutput{})
	pulumi.RegisterOutputType(TransportManagementVpnInterfaceEthernetProfileParcelMapOutput{})
}
