// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Transport IPv6 Tracker profile parcel.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewTransportIpv6TrackerProfileParcel(ctx, "example", &sdwan.TransportIpv6TrackerProfileParcelArgs{
//				Name:                pulumi.String("Example"),
//				Description:         pulumi.String("My Example"),
//				FeatureProfileId:    pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				TrackerName:         pulumi.String("TRACKER_1"),
//				EndpointApiUrl:      pulumi.String("google.com"),
//				EndpointDnsName:     pulumi.String("google.com"),
//				EndpointIp:          pulumi.String("2001:0:0:1::0"),
//				Interval:            pulumi.Int(30),
//				Multiplier:          pulumi.Int(3),
//				Threshold:           pulumi.Int(300),
//				EndpointTrackerType: pulumi.String("ipv6-interface"),
//				TrackerType:         pulumi.String("endpoint"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/transportIpv6TrackerProfileParcel:TransportIpv6TrackerProfileParcel example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type TransportIpv6TrackerProfileParcel struct {
	pulumi.CustomResourceState

	// The description of the profile parcel
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// API url of endpoint
	EndpointApiUrl pulumi.StringPtrOutput `pulumi:"endpointApiUrl"`
	// Variable name
	EndpointApiUrlVariable pulumi.StringPtrOutput `pulumi:"endpointApiUrlVariable"`
	// Endpoint DNS Name
	EndpointDnsName pulumi.StringPtrOutput `pulumi:"endpointDnsName"`
	// Variable name
	EndpointDnsNameVariable pulumi.StringPtrOutput `pulumi:"endpointDnsNameVariable"`
	// Endpoint IP
	EndpointIp pulumi.StringPtrOutput `pulumi:"endpointIp"`
	// Variable name
	EndpointIpVariable pulumi.StringPtrOutput `pulumi:"endpointIpVariable"`
	// Endpoint Tracker Type - Choices: `ipv6-interface` - Default value: `ipv6-interface`
	EndpointTrackerType pulumi.StringPtrOutput `pulumi:"endpointTrackerType"`
	// Variable name
	EndpointTrackerTypeVariable pulumi.StringPtrOutput `pulumi:"endpointTrackerTypeVariable"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// Interval - Range: `20`-`600` - Default value: `60`
	Interval pulumi.IntPtrOutput `pulumi:"interval"`
	// Variable name
	IntervalVariable pulumi.StringPtrOutput `pulumi:"intervalVariable"`
	// Multiplier - Range: `1`-`10` - Default value: `3`
	Multiplier pulumi.IntPtrOutput `pulumi:"multiplier"`
	// Variable name
	MultiplierVariable pulumi.StringPtrOutput `pulumi:"multiplierVariable"`
	// The name of the profile parcel
	Name pulumi.StringOutput `pulumi:"name"`
	// Threshold - Range: `100`-`1000` - Default value: `300`
	Threshold pulumi.IntPtrOutput `pulumi:"threshold"`
	// Variable name
	ThresholdVariable pulumi.StringPtrOutput `pulumi:"thresholdVariable"`
	// Tracker Name
	TrackerName pulumi.StringOutput `pulumi:"trackerName"`
	// Variable name
	TrackerNameVariable pulumi.StringPtrOutput `pulumi:"trackerNameVariable"`
	// Tracker Type - Choices: `endpoint` - Default value: `endpoint`
	TrackerType pulumi.StringPtrOutput `pulumi:"trackerType"`
	// Variable name
	TrackerTypeVariable pulumi.StringPtrOutput `pulumi:"trackerTypeVariable"`
	// The version of the profile parcel
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewTransportIpv6TrackerProfileParcel registers a new resource with the given unique name, arguments, and options.
func NewTransportIpv6TrackerProfileParcel(ctx *pulumi.Context,
	name string, args *TransportIpv6TrackerProfileParcelArgs, opts ...pulumi.ResourceOption) (*TransportIpv6TrackerProfileParcel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	if args.TrackerName == nil {
		return nil, errors.New("invalid value for required argument 'TrackerName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransportIpv6TrackerProfileParcel
	err := ctx.RegisterResource("sdwan:index/transportIpv6TrackerProfileParcel:TransportIpv6TrackerProfileParcel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransportIpv6TrackerProfileParcel gets an existing TransportIpv6TrackerProfileParcel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransportIpv6TrackerProfileParcel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransportIpv6TrackerProfileParcelState, opts ...pulumi.ResourceOption) (*TransportIpv6TrackerProfileParcel, error) {
	var resource TransportIpv6TrackerProfileParcel
	err := ctx.ReadResource("sdwan:index/transportIpv6TrackerProfileParcel:TransportIpv6TrackerProfileParcel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransportIpv6TrackerProfileParcel resources.
type transportIpv6TrackerProfileParcelState struct {
	// The description of the profile parcel
	Description *string `pulumi:"description"`
	// API url of endpoint
	EndpointApiUrl *string `pulumi:"endpointApiUrl"`
	// Variable name
	EndpointApiUrlVariable *string `pulumi:"endpointApiUrlVariable"`
	// Endpoint DNS Name
	EndpointDnsName *string `pulumi:"endpointDnsName"`
	// Variable name
	EndpointDnsNameVariable *string `pulumi:"endpointDnsNameVariable"`
	// Endpoint IP
	EndpointIp *string `pulumi:"endpointIp"`
	// Variable name
	EndpointIpVariable *string `pulumi:"endpointIpVariable"`
	// Endpoint Tracker Type - Choices: `ipv6-interface` - Default value: `ipv6-interface`
	EndpointTrackerType *string `pulumi:"endpointTrackerType"`
	// Variable name
	EndpointTrackerTypeVariable *string `pulumi:"endpointTrackerTypeVariable"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// Interval - Range: `20`-`600` - Default value: `60`
	Interval *int `pulumi:"interval"`
	// Variable name
	IntervalVariable *string `pulumi:"intervalVariable"`
	// Multiplier - Range: `1`-`10` - Default value: `3`
	Multiplier *int `pulumi:"multiplier"`
	// Variable name
	MultiplierVariable *string `pulumi:"multiplierVariable"`
	// The name of the profile parcel
	Name *string `pulumi:"name"`
	// Threshold - Range: `100`-`1000` - Default value: `300`
	Threshold *int `pulumi:"threshold"`
	// Variable name
	ThresholdVariable *string `pulumi:"thresholdVariable"`
	// Tracker Name
	TrackerName *string `pulumi:"trackerName"`
	// Variable name
	TrackerNameVariable *string `pulumi:"trackerNameVariable"`
	// Tracker Type - Choices: `endpoint` - Default value: `endpoint`
	TrackerType *string `pulumi:"trackerType"`
	// Variable name
	TrackerTypeVariable *string `pulumi:"trackerTypeVariable"`
	// The version of the profile parcel
	Version *int `pulumi:"version"`
}

type TransportIpv6TrackerProfileParcelState struct {
	// The description of the profile parcel
	Description pulumi.StringPtrInput
	// API url of endpoint
	EndpointApiUrl pulumi.StringPtrInput
	// Variable name
	EndpointApiUrlVariable pulumi.StringPtrInput
	// Endpoint DNS Name
	EndpointDnsName pulumi.StringPtrInput
	// Variable name
	EndpointDnsNameVariable pulumi.StringPtrInput
	// Endpoint IP
	EndpointIp pulumi.StringPtrInput
	// Variable name
	EndpointIpVariable pulumi.StringPtrInput
	// Endpoint Tracker Type - Choices: `ipv6-interface` - Default value: `ipv6-interface`
	EndpointTrackerType pulumi.StringPtrInput
	// Variable name
	EndpointTrackerTypeVariable pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// Interval - Range: `20`-`600` - Default value: `60`
	Interval pulumi.IntPtrInput
	// Variable name
	IntervalVariable pulumi.StringPtrInput
	// Multiplier - Range: `1`-`10` - Default value: `3`
	Multiplier pulumi.IntPtrInput
	// Variable name
	MultiplierVariable pulumi.StringPtrInput
	// The name of the profile parcel
	Name pulumi.StringPtrInput
	// Threshold - Range: `100`-`1000` - Default value: `300`
	Threshold pulumi.IntPtrInput
	// Variable name
	ThresholdVariable pulumi.StringPtrInput
	// Tracker Name
	TrackerName pulumi.StringPtrInput
	// Variable name
	TrackerNameVariable pulumi.StringPtrInput
	// Tracker Type - Choices: `endpoint` - Default value: `endpoint`
	TrackerType pulumi.StringPtrInput
	// Variable name
	TrackerTypeVariable pulumi.StringPtrInput
	// The version of the profile parcel
	Version pulumi.IntPtrInput
}

func (TransportIpv6TrackerProfileParcelState) ElementType() reflect.Type {
	return reflect.TypeOf((*transportIpv6TrackerProfileParcelState)(nil)).Elem()
}

type transportIpv6TrackerProfileParcelArgs struct {
	// The description of the profile parcel
	Description *string `pulumi:"description"`
	// API url of endpoint
	EndpointApiUrl *string `pulumi:"endpointApiUrl"`
	// Variable name
	EndpointApiUrlVariable *string `pulumi:"endpointApiUrlVariable"`
	// Endpoint DNS Name
	EndpointDnsName *string `pulumi:"endpointDnsName"`
	// Variable name
	EndpointDnsNameVariable *string `pulumi:"endpointDnsNameVariable"`
	// Endpoint IP
	EndpointIp *string `pulumi:"endpointIp"`
	// Variable name
	EndpointIpVariable *string `pulumi:"endpointIpVariable"`
	// Endpoint Tracker Type - Choices: `ipv6-interface` - Default value: `ipv6-interface`
	EndpointTrackerType *string `pulumi:"endpointTrackerType"`
	// Variable name
	EndpointTrackerTypeVariable *string `pulumi:"endpointTrackerTypeVariable"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// Interval - Range: `20`-`600` - Default value: `60`
	Interval *int `pulumi:"interval"`
	// Variable name
	IntervalVariable *string `pulumi:"intervalVariable"`
	// Multiplier - Range: `1`-`10` - Default value: `3`
	Multiplier *int `pulumi:"multiplier"`
	// Variable name
	MultiplierVariable *string `pulumi:"multiplierVariable"`
	// The name of the profile parcel
	Name *string `pulumi:"name"`
	// Threshold - Range: `100`-`1000` - Default value: `300`
	Threshold *int `pulumi:"threshold"`
	// Variable name
	ThresholdVariable *string `pulumi:"thresholdVariable"`
	// Tracker Name
	TrackerName string `pulumi:"trackerName"`
	// Variable name
	TrackerNameVariable *string `pulumi:"trackerNameVariable"`
	// Tracker Type - Choices: `endpoint` - Default value: `endpoint`
	TrackerType *string `pulumi:"trackerType"`
	// Variable name
	TrackerTypeVariable *string `pulumi:"trackerTypeVariable"`
}

// The set of arguments for constructing a TransportIpv6TrackerProfileParcel resource.
type TransportIpv6TrackerProfileParcelArgs struct {
	// The description of the profile parcel
	Description pulumi.StringPtrInput
	// API url of endpoint
	EndpointApiUrl pulumi.StringPtrInput
	// Variable name
	EndpointApiUrlVariable pulumi.StringPtrInput
	// Endpoint DNS Name
	EndpointDnsName pulumi.StringPtrInput
	// Variable name
	EndpointDnsNameVariable pulumi.StringPtrInput
	// Endpoint IP
	EndpointIp pulumi.StringPtrInput
	// Variable name
	EndpointIpVariable pulumi.StringPtrInput
	// Endpoint Tracker Type - Choices: `ipv6-interface` - Default value: `ipv6-interface`
	EndpointTrackerType pulumi.StringPtrInput
	// Variable name
	EndpointTrackerTypeVariable pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// Interval - Range: `20`-`600` - Default value: `60`
	Interval pulumi.IntPtrInput
	// Variable name
	IntervalVariable pulumi.StringPtrInput
	// Multiplier - Range: `1`-`10` - Default value: `3`
	Multiplier pulumi.IntPtrInput
	// Variable name
	MultiplierVariable pulumi.StringPtrInput
	// The name of the profile parcel
	Name pulumi.StringPtrInput
	// Threshold - Range: `100`-`1000` - Default value: `300`
	Threshold pulumi.IntPtrInput
	// Variable name
	ThresholdVariable pulumi.StringPtrInput
	// Tracker Name
	TrackerName pulumi.StringInput
	// Variable name
	TrackerNameVariable pulumi.StringPtrInput
	// Tracker Type - Choices: `endpoint` - Default value: `endpoint`
	TrackerType pulumi.StringPtrInput
	// Variable name
	TrackerTypeVariable pulumi.StringPtrInput
}

func (TransportIpv6TrackerProfileParcelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transportIpv6TrackerProfileParcelArgs)(nil)).Elem()
}

type TransportIpv6TrackerProfileParcelInput interface {
	pulumi.Input

	ToTransportIpv6TrackerProfileParcelOutput() TransportIpv6TrackerProfileParcelOutput
	ToTransportIpv6TrackerProfileParcelOutputWithContext(ctx context.Context) TransportIpv6TrackerProfileParcelOutput
}

func (*TransportIpv6TrackerProfileParcel) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportIpv6TrackerProfileParcel)(nil)).Elem()
}

func (i *TransportIpv6TrackerProfileParcel) ToTransportIpv6TrackerProfileParcelOutput() TransportIpv6TrackerProfileParcelOutput {
	return i.ToTransportIpv6TrackerProfileParcelOutputWithContext(context.Background())
}

func (i *TransportIpv6TrackerProfileParcel) ToTransportIpv6TrackerProfileParcelOutputWithContext(ctx context.Context) TransportIpv6TrackerProfileParcelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportIpv6TrackerProfileParcelOutput)
}

// TransportIpv6TrackerProfileParcelArrayInput is an input type that accepts TransportIpv6TrackerProfileParcelArray and TransportIpv6TrackerProfileParcelArrayOutput values.
// You can construct a concrete instance of `TransportIpv6TrackerProfileParcelArrayInput` via:
//
//	TransportIpv6TrackerProfileParcelArray{ TransportIpv6TrackerProfileParcelArgs{...} }
type TransportIpv6TrackerProfileParcelArrayInput interface {
	pulumi.Input

	ToTransportIpv6TrackerProfileParcelArrayOutput() TransportIpv6TrackerProfileParcelArrayOutput
	ToTransportIpv6TrackerProfileParcelArrayOutputWithContext(context.Context) TransportIpv6TrackerProfileParcelArrayOutput
}

type TransportIpv6TrackerProfileParcelArray []TransportIpv6TrackerProfileParcelInput

func (TransportIpv6TrackerProfileParcelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportIpv6TrackerProfileParcel)(nil)).Elem()
}

func (i TransportIpv6TrackerProfileParcelArray) ToTransportIpv6TrackerProfileParcelArrayOutput() TransportIpv6TrackerProfileParcelArrayOutput {
	return i.ToTransportIpv6TrackerProfileParcelArrayOutputWithContext(context.Background())
}

func (i TransportIpv6TrackerProfileParcelArray) ToTransportIpv6TrackerProfileParcelArrayOutputWithContext(ctx context.Context) TransportIpv6TrackerProfileParcelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportIpv6TrackerProfileParcelArrayOutput)
}

// TransportIpv6TrackerProfileParcelMapInput is an input type that accepts TransportIpv6TrackerProfileParcelMap and TransportIpv6TrackerProfileParcelMapOutput values.
// You can construct a concrete instance of `TransportIpv6TrackerProfileParcelMapInput` via:
//
//	TransportIpv6TrackerProfileParcelMap{ "key": TransportIpv6TrackerProfileParcelArgs{...} }
type TransportIpv6TrackerProfileParcelMapInput interface {
	pulumi.Input

	ToTransportIpv6TrackerProfileParcelMapOutput() TransportIpv6TrackerProfileParcelMapOutput
	ToTransportIpv6TrackerProfileParcelMapOutputWithContext(context.Context) TransportIpv6TrackerProfileParcelMapOutput
}

type TransportIpv6TrackerProfileParcelMap map[string]TransportIpv6TrackerProfileParcelInput

func (TransportIpv6TrackerProfileParcelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportIpv6TrackerProfileParcel)(nil)).Elem()
}

func (i TransportIpv6TrackerProfileParcelMap) ToTransportIpv6TrackerProfileParcelMapOutput() TransportIpv6TrackerProfileParcelMapOutput {
	return i.ToTransportIpv6TrackerProfileParcelMapOutputWithContext(context.Background())
}

func (i TransportIpv6TrackerProfileParcelMap) ToTransportIpv6TrackerProfileParcelMapOutputWithContext(ctx context.Context) TransportIpv6TrackerProfileParcelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportIpv6TrackerProfileParcelMapOutput)
}

type TransportIpv6TrackerProfileParcelOutput struct{ *pulumi.OutputState }

func (TransportIpv6TrackerProfileParcelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportIpv6TrackerProfileParcel)(nil)).Elem()
}

func (o TransportIpv6TrackerProfileParcelOutput) ToTransportIpv6TrackerProfileParcelOutput() TransportIpv6TrackerProfileParcelOutput {
	return o
}

func (o TransportIpv6TrackerProfileParcelOutput) ToTransportIpv6TrackerProfileParcelOutputWithContext(ctx context.Context) TransportIpv6TrackerProfileParcelOutput {
	return o
}

// The description of the profile parcel
func (o TransportIpv6TrackerProfileParcelOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// API url of endpoint
func (o TransportIpv6TrackerProfileParcelOutput) EndpointApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.StringPtrOutput { return v.EndpointApiUrl }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportIpv6TrackerProfileParcelOutput) EndpointApiUrlVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.StringPtrOutput { return v.EndpointApiUrlVariable }).(pulumi.StringPtrOutput)
}

// Endpoint DNS Name
func (o TransportIpv6TrackerProfileParcelOutput) EndpointDnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.StringPtrOutput { return v.EndpointDnsName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportIpv6TrackerProfileParcelOutput) EndpointDnsNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.StringPtrOutput { return v.EndpointDnsNameVariable }).(pulumi.StringPtrOutput)
}

// Endpoint IP
func (o TransportIpv6TrackerProfileParcelOutput) EndpointIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.StringPtrOutput { return v.EndpointIp }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportIpv6TrackerProfileParcelOutput) EndpointIpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.StringPtrOutput { return v.EndpointIpVariable }).(pulumi.StringPtrOutput)
}

// Endpoint Tracker Type - Choices: `ipv6-interface` - Default value: `ipv6-interface`
func (o TransportIpv6TrackerProfileParcelOutput) EndpointTrackerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.StringPtrOutput { return v.EndpointTrackerType }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportIpv6TrackerProfileParcelOutput) EndpointTrackerTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.StringPtrOutput {
		return v.EndpointTrackerTypeVariable
	}).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o TransportIpv6TrackerProfileParcelOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// Interval - Range: `20`-`600` - Default value: `60`
func (o TransportIpv6TrackerProfileParcelOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.IntPtrOutput { return v.Interval }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportIpv6TrackerProfileParcelOutput) IntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.StringPtrOutput { return v.IntervalVariable }).(pulumi.StringPtrOutput)
}

// Multiplier - Range: `1`-`10` - Default value: `3`
func (o TransportIpv6TrackerProfileParcelOutput) Multiplier() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.IntPtrOutput { return v.Multiplier }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportIpv6TrackerProfileParcelOutput) MultiplierVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.StringPtrOutput { return v.MultiplierVariable }).(pulumi.StringPtrOutput)
}

// The name of the profile parcel
func (o TransportIpv6TrackerProfileParcelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Threshold - Range: `100`-`1000` - Default value: `300`
func (o TransportIpv6TrackerProfileParcelOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.IntPtrOutput { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportIpv6TrackerProfileParcelOutput) ThresholdVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.StringPtrOutput { return v.ThresholdVariable }).(pulumi.StringPtrOutput)
}

// Tracker Name
func (o TransportIpv6TrackerProfileParcelOutput) TrackerName() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.StringOutput { return v.TrackerName }).(pulumi.StringOutput)
}

// Variable name
func (o TransportIpv6TrackerProfileParcelOutput) TrackerNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.StringPtrOutput { return v.TrackerNameVariable }).(pulumi.StringPtrOutput)
}

// Tracker Type - Choices: `endpoint` - Default value: `endpoint`
func (o TransportIpv6TrackerProfileParcelOutput) TrackerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.StringPtrOutput { return v.TrackerType }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportIpv6TrackerProfileParcelOutput) TrackerTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.StringPtrOutput { return v.TrackerTypeVariable }).(pulumi.StringPtrOutput)
}

// The version of the profile parcel
func (o TransportIpv6TrackerProfileParcelOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerProfileParcel) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type TransportIpv6TrackerProfileParcelArrayOutput struct{ *pulumi.OutputState }

func (TransportIpv6TrackerProfileParcelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportIpv6TrackerProfileParcel)(nil)).Elem()
}

func (o TransportIpv6TrackerProfileParcelArrayOutput) ToTransportIpv6TrackerProfileParcelArrayOutput() TransportIpv6TrackerProfileParcelArrayOutput {
	return o
}

func (o TransportIpv6TrackerProfileParcelArrayOutput) ToTransportIpv6TrackerProfileParcelArrayOutputWithContext(ctx context.Context) TransportIpv6TrackerProfileParcelArrayOutput {
	return o
}

func (o TransportIpv6TrackerProfileParcelArrayOutput) Index(i pulumi.IntInput) TransportIpv6TrackerProfileParcelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransportIpv6TrackerProfileParcel {
		return vs[0].([]*TransportIpv6TrackerProfileParcel)[vs[1].(int)]
	}).(TransportIpv6TrackerProfileParcelOutput)
}

type TransportIpv6TrackerProfileParcelMapOutput struct{ *pulumi.OutputState }

func (TransportIpv6TrackerProfileParcelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportIpv6TrackerProfileParcel)(nil)).Elem()
}

func (o TransportIpv6TrackerProfileParcelMapOutput) ToTransportIpv6TrackerProfileParcelMapOutput() TransportIpv6TrackerProfileParcelMapOutput {
	return o
}

func (o TransportIpv6TrackerProfileParcelMapOutput) ToTransportIpv6TrackerProfileParcelMapOutputWithContext(ctx context.Context) TransportIpv6TrackerProfileParcelMapOutput {
	return o
}

func (o TransportIpv6TrackerProfileParcelMapOutput) MapIndex(k pulumi.StringInput) TransportIpv6TrackerProfileParcelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransportIpv6TrackerProfileParcel {
		return vs[0].(map[string]*TransportIpv6TrackerProfileParcel)[vs[1].(string)]
	}).(TransportIpv6TrackerProfileParcelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransportIpv6TrackerProfileParcelInput)(nil)).Elem(), &TransportIpv6TrackerProfileParcel{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportIpv6TrackerProfileParcelArrayInput)(nil)).Elem(), TransportIpv6TrackerProfileParcelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportIpv6TrackerProfileParcelMapInput)(nil)).Elem(), TransportIpv6TrackerProfileParcelMap{})
	pulumi.RegisterOutputType(TransportIpv6TrackerProfileParcelOutput{})
	pulumi.RegisterOutputType(TransportIpv6TrackerProfileParcelArrayOutput{})
	pulumi.RegisterOutputType(TransportIpv6TrackerProfileParcelMapOutput{})
}
