// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a cEdge AAA feature template.
//   - Minimum SD-WAN Manager version: `15.0.0`
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/cedgeAaaFeatureTemplate:CedgeAaaFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type CedgeAaaFeatureTemplate struct {
	pulumi.CustomResourceState

	// Configure the accounting rules
	AccountingRules CedgeAaaFeatureTemplateAccountingRuleArrayOutput `pulumi:"accountingRules"`
	// For configuration mode commands. - Default value: `false`
	AuthorizationConfigCommands pulumi.BoolPtrOutput `pulumi:"authorizationConfigCommands"`
	// Variable name
	AuthorizationConfigCommandsVariable pulumi.StringPtrOutput `pulumi:"authorizationConfigCommandsVariable"`
	// For enabling console authorization - Default value: `false`
	AuthorizationConsole pulumi.BoolPtrOutput `pulumi:"authorizationConsole"`
	// Variable name
	AuthorizationConsoleVariable pulumi.StringPtrOutput `pulumi:"authorizationConsoleVariable"`
	// Configure the Authorization Rules
	AuthorizationRules CedgeAaaFeatureTemplateAuthorizationRuleArrayOutput `pulumi:"authorizationRules"`
	// The description of the feature template
	Description pulumi.StringOutput `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayOutput `pulumi:"deviceTypes"`
	// Accounting configurations parameters - Default value: `false`
	Dot1xAccounting pulumi.BoolPtrOutput `pulumi:"dot1xAccounting"`
	// Variable name
	Dot1xAccountingVariable pulumi.StringPtrOutput `pulumi:"dot1xAccountingVariable"`
	// Authentication configurations parameters - Default value: `false`
	Dot1xAuthentication pulumi.BoolPtrOutput `pulumi:"dot1xAuthentication"`
	// Variable name
	Dot1xAuthenticationVariable pulumi.StringPtrOutput `pulumi:"dot1xAuthenticationVariable"`
	// The name of the feature template
	Name pulumi.StringOutput `pulumi:"name"`
	// Specify a RADIUS client
	RadiusClients CedgeAaaFeatureTemplateRadiusClientArrayOutput `pulumi:"radiusClients"`
	// Authentication Type - Choices: `any`, `all`, `session-key` - Default value: `any`
	RadiusDynamicAuthorAuthenticationType pulumi.StringPtrOutput `pulumi:"radiusDynamicAuthorAuthenticationType"`
	// Variable name
	RadiusDynamicAuthorAuthenticationTypeVariable pulumi.StringPtrOutput `pulumi:"radiusDynamicAuthorAuthenticationTypeVariable"`
	// Domain Stripping - Choices: `yes`, `no`, `right-to-left` - Default value: `no`
	RadiusDynamicAuthorDomainStripping pulumi.StringPtrOutput `pulumi:"radiusDynamicAuthorDomainStripping"`
	// Variable name
	RadiusDynamicAuthorDomainStrippingVariable pulumi.StringPtrOutput `pulumi:"radiusDynamicAuthorDomainStrippingVariable"`
	// Specify Radius Dynamic Author Port - Range: `0`-`65535` - Default value: `1700`
	RadiusDynamicAuthorPort pulumi.IntPtrOutput `pulumi:"radiusDynamicAuthorPort"`
	// Variable name
	RadiusDynamicAuthorPortVariable pulumi.StringPtrOutput `pulumi:"radiusDynamicAuthorPortVariable"`
	// Specify a radius dynamic author server-key
	RadiusDynamicAuthorServerKey pulumi.StringPtrOutput `pulumi:"radiusDynamicAuthorServerKey"`
	// Variable name
	RadiusDynamicAuthorServerKeyVariable pulumi.StringPtrOutput `pulumi:"radiusDynamicAuthorServerKeyVariable"`
	// Configure the Radius serverGroup
	RadiusServerGroups CedgeAaaFeatureTemplateRadiusServerGroupArrayOutput `pulumi:"radiusServerGroups"`
	// CTS Authorization List
	RadiusTrustsecCtsAuthorizationList pulumi.StringPtrOutput `pulumi:"radiusTrustsecCtsAuthorizationList"`
	// Variable name
	RadiusTrustsecCtsAuthorizationListVariable pulumi.StringPtrOutput `pulumi:"radiusTrustsecCtsAuthorizationListVariable"`
	// RADIUS trustsec group
	RadiusTrustsecGroup pulumi.StringPtrOutput `pulumi:"radiusTrustsecGroup"`
	// ServerGroups priority order - Default value: `local`
	ServerGroupsPriorityOrder pulumi.StringPtrOutput `pulumi:"serverGroupsPriorityOrder"`
	// Configure the TACACS serverGroup
	TacacsServerGroups CedgeAaaFeatureTemplateTacacsServerGroupArrayOutput `pulumi:"tacacsServerGroups"`
	// The template type
	TemplateType pulumi.StringOutput `pulumi:"templateType"`
	// Create local login account
	Users CedgeAaaFeatureTemplateUserArrayOutput `pulumi:"users"`
	// The version of the feature template
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewCedgeAaaFeatureTemplate registers a new resource with the given unique name, arguments, and options.
func NewCedgeAaaFeatureTemplate(ctx *pulumi.Context,
	name string, args *CedgeAaaFeatureTemplateArgs, opts ...pulumi.ResourceOption) (*CedgeAaaFeatureTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.DeviceTypes == nil {
		return nil, errors.New("invalid value for required argument 'DeviceTypes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CedgeAaaFeatureTemplate
	err := ctx.RegisterResource("sdwan:index/cedgeAaaFeatureTemplate:CedgeAaaFeatureTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCedgeAaaFeatureTemplate gets an existing CedgeAaaFeatureTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCedgeAaaFeatureTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CedgeAaaFeatureTemplateState, opts ...pulumi.ResourceOption) (*CedgeAaaFeatureTemplate, error) {
	var resource CedgeAaaFeatureTemplate
	err := ctx.ReadResource("sdwan:index/cedgeAaaFeatureTemplate:CedgeAaaFeatureTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CedgeAaaFeatureTemplate resources.
type cedgeAaaFeatureTemplateState struct {
	// Configure the accounting rules
	AccountingRules []CedgeAaaFeatureTemplateAccountingRule `pulumi:"accountingRules"`
	// For configuration mode commands. - Default value: `false`
	AuthorizationConfigCommands *bool `pulumi:"authorizationConfigCommands"`
	// Variable name
	AuthorizationConfigCommandsVariable *string `pulumi:"authorizationConfigCommandsVariable"`
	// For enabling console authorization - Default value: `false`
	AuthorizationConsole *bool `pulumi:"authorizationConsole"`
	// Variable name
	AuthorizationConsoleVariable *string `pulumi:"authorizationConsoleVariable"`
	// Configure the Authorization Rules
	AuthorizationRules []CedgeAaaFeatureTemplateAuthorizationRule `pulumi:"authorizationRules"`
	// The description of the feature template
	Description *string `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Accounting configurations parameters - Default value: `false`
	Dot1xAccounting *bool `pulumi:"dot1xAccounting"`
	// Variable name
	Dot1xAccountingVariable *string `pulumi:"dot1xAccountingVariable"`
	// Authentication configurations parameters - Default value: `false`
	Dot1xAuthentication *bool `pulumi:"dot1xAuthentication"`
	// Variable name
	Dot1xAuthenticationVariable *string `pulumi:"dot1xAuthenticationVariable"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Specify a RADIUS client
	RadiusClients []CedgeAaaFeatureTemplateRadiusClient `pulumi:"radiusClients"`
	// Authentication Type - Choices: `any`, `all`, `session-key` - Default value: `any`
	RadiusDynamicAuthorAuthenticationType *string `pulumi:"radiusDynamicAuthorAuthenticationType"`
	// Variable name
	RadiusDynamicAuthorAuthenticationTypeVariable *string `pulumi:"radiusDynamicAuthorAuthenticationTypeVariable"`
	// Domain Stripping - Choices: `yes`, `no`, `right-to-left` - Default value: `no`
	RadiusDynamicAuthorDomainStripping *string `pulumi:"radiusDynamicAuthorDomainStripping"`
	// Variable name
	RadiusDynamicAuthorDomainStrippingVariable *string `pulumi:"radiusDynamicAuthorDomainStrippingVariable"`
	// Specify Radius Dynamic Author Port - Range: `0`-`65535` - Default value: `1700`
	RadiusDynamicAuthorPort *int `pulumi:"radiusDynamicAuthorPort"`
	// Variable name
	RadiusDynamicAuthorPortVariable *string `pulumi:"radiusDynamicAuthorPortVariable"`
	// Specify a radius dynamic author server-key
	RadiusDynamicAuthorServerKey *string `pulumi:"radiusDynamicAuthorServerKey"`
	// Variable name
	RadiusDynamicAuthorServerKeyVariable *string `pulumi:"radiusDynamicAuthorServerKeyVariable"`
	// Configure the Radius serverGroup
	RadiusServerGroups []CedgeAaaFeatureTemplateRadiusServerGroup `pulumi:"radiusServerGroups"`
	// CTS Authorization List
	RadiusTrustsecCtsAuthorizationList *string `pulumi:"radiusTrustsecCtsAuthorizationList"`
	// Variable name
	RadiusTrustsecCtsAuthorizationListVariable *string `pulumi:"radiusTrustsecCtsAuthorizationListVariable"`
	// RADIUS trustsec group
	RadiusTrustsecGroup *string `pulumi:"radiusTrustsecGroup"`
	// ServerGroups priority order - Default value: `local`
	ServerGroupsPriorityOrder *string `pulumi:"serverGroupsPriorityOrder"`
	// Configure the TACACS serverGroup
	TacacsServerGroups []CedgeAaaFeatureTemplateTacacsServerGroup `pulumi:"tacacsServerGroups"`
	// The template type
	TemplateType *string `pulumi:"templateType"`
	// Create local login account
	Users []CedgeAaaFeatureTemplateUser `pulumi:"users"`
	// The version of the feature template
	Version *int `pulumi:"version"`
}

type CedgeAaaFeatureTemplateState struct {
	// Configure the accounting rules
	AccountingRules CedgeAaaFeatureTemplateAccountingRuleArrayInput
	// For configuration mode commands. - Default value: `false`
	AuthorizationConfigCommands pulumi.BoolPtrInput
	// Variable name
	AuthorizationConfigCommandsVariable pulumi.StringPtrInput
	// For enabling console authorization - Default value: `false`
	AuthorizationConsole pulumi.BoolPtrInput
	// Variable name
	AuthorizationConsoleVariable pulumi.StringPtrInput
	// Configure the Authorization Rules
	AuthorizationRules CedgeAaaFeatureTemplateAuthorizationRuleArrayInput
	// The description of the feature template
	Description pulumi.StringPtrInput
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Accounting configurations parameters - Default value: `false`
	Dot1xAccounting pulumi.BoolPtrInput
	// Variable name
	Dot1xAccountingVariable pulumi.StringPtrInput
	// Authentication configurations parameters - Default value: `false`
	Dot1xAuthentication pulumi.BoolPtrInput
	// Variable name
	Dot1xAuthenticationVariable pulumi.StringPtrInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Specify a RADIUS client
	RadiusClients CedgeAaaFeatureTemplateRadiusClientArrayInput
	// Authentication Type - Choices: `any`, `all`, `session-key` - Default value: `any`
	RadiusDynamicAuthorAuthenticationType pulumi.StringPtrInput
	// Variable name
	RadiusDynamicAuthorAuthenticationTypeVariable pulumi.StringPtrInput
	// Domain Stripping - Choices: `yes`, `no`, `right-to-left` - Default value: `no`
	RadiusDynamicAuthorDomainStripping pulumi.StringPtrInput
	// Variable name
	RadiusDynamicAuthorDomainStrippingVariable pulumi.StringPtrInput
	// Specify Radius Dynamic Author Port - Range: `0`-`65535` - Default value: `1700`
	RadiusDynamicAuthorPort pulumi.IntPtrInput
	// Variable name
	RadiusDynamicAuthorPortVariable pulumi.StringPtrInput
	// Specify a radius dynamic author server-key
	RadiusDynamicAuthorServerKey pulumi.StringPtrInput
	// Variable name
	RadiusDynamicAuthorServerKeyVariable pulumi.StringPtrInput
	// Configure the Radius serverGroup
	RadiusServerGroups CedgeAaaFeatureTemplateRadiusServerGroupArrayInput
	// CTS Authorization List
	RadiusTrustsecCtsAuthorizationList pulumi.StringPtrInput
	// Variable name
	RadiusTrustsecCtsAuthorizationListVariable pulumi.StringPtrInput
	// RADIUS trustsec group
	RadiusTrustsecGroup pulumi.StringPtrInput
	// ServerGroups priority order - Default value: `local`
	ServerGroupsPriorityOrder pulumi.StringPtrInput
	// Configure the TACACS serverGroup
	TacacsServerGroups CedgeAaaFeatureTemplateTacacsServerGroupArrayInput
	// The template type
	TemplateType pulumi.StringPtrInput
	// Create local login account
	Users CedgeAaaFeatureTemplateUserArrayInput
	// The version of the feature template
	Version pulumi.IntPtrInput
}

func (CedgeAaaFeatureTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*cedgeAaaFeatureTemplateState)(nil)).Elem()
}

type cedgeAaaFeatureTemplateArgs struct {
	// Configure the accounting rules
	AccountingRules []CedgeAaaFeatureTemplateAccountingRule `pulumi:"accountingRules"`
	// For configuration mode commands. - Default value: `false`
	AuthorizationConfigCommands *bool `pulumi:"authorizationConfigCommands"`
	// Variable name
	AuthorizationConfigCommandsVariable *string `pulumi:"authorizationConfigCommandsVariable"`
	// For enabling console authorization - Default value: `false`
	AuthorizationConsole *bool `pulumi:"authorizationConsole"`
	// Variable name
	AuthorizationConsoleVariable *string `pulumi:"authorizationConsoleVariable"`
	// Configure the Authorization Rules
	AuthorizationRules []CedgeAaaFeatureTemplateAuthorizationRule `pulumi:"authorizationRules"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Accounting configurations parameters - Default value: `false`
	Dot1xAccounting *bool `pulumi:"dot1xAccounting"`
	// Variable name
	Dot1xAccountingVariable *string `pulumi:"dot1xAccountingVariable"`
	// Authentication configurations parameters - Default value: `false`
	Dot1xAuthentication *bool `pulumi:"dot1xAuthentication"`
	// Variable name
	Dot1xAuthenticationVariable *string `pulumi:"dot1xAuthenticationVariable"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Specify a RADIUS client
	RadiusClients []CedgeAaaFeatureTemplateRadiusClient `pulumi:"radiusClients"`
	// Authentication Type - Choices: `any`, `all`, `session-key` - Default value: `any`
	RadiusDynamicAuthorAuthenticationType *string `pulumi:"radiusDynamicAuthorAuthenticationType"`
	// Variable name
	RadiusDynamicAuthorAuthenticationTypeVariable *string `pulumi:"radiusDynamicAuthorAuthenticationTypeVariable"`
	// Domain Stripping - Choices: `yes`, `no`, `right-to-left` - Default value: `no`
	RadiusDynamicAuthorDomainStripping *string `pulumi:"radiusDynamicAuthorDomainStripping"`
	// Variable name
	RadiusDynamicAuthorDomainStrippingVariable *string `pulumi:"radiusDynamicAuthorDomainStrippingVariable"`
	// Specify Radius Dynamic Author Port - Range: `0`-`65535` - Default value: `1700`
	RadiusDynamicAuthorPort *int `pulumi:"radiusDynamicAuthorPort"`
	// Variable name
	RadiusDynamicAuthorPortVariable *string `pulumi:"radiusDynamicAuthorPortVariable"`
	// Specify a radius dynamic author server-key
	RadiusDynamicAuthorServerKey *string `pulumi:"radiusDynamicAuthorServerKey"`
	// Variable name
	RadiusDynamicAuthorServerKeyVariable *string `pulumi:"radiusDynamicAuthorServerKeyVariable"`
	// Configure the Radius serverGroup
	RadiusServerGroups []CedgeAaaFeatureTemplateRadiusServerGroup `pulumi:"radiusServerGroups"`
	// CTS Authorization List
	RadiusTrustsecCtsAuthorizationList *string `pulumi:"radiusTrustsecCtsAuthorizationList"`
	// Variable name
	RadiusTrustsecCtsAuthorizationListVariable *string `pulumi:"radiusTrustsecCtsAuthorizationListVariable"`
	// RADIUS trustsec group
	RadiusTrustsecGroup *string `pulumi:"radiusTrustsecGroup"`
	// ServerGroups priority order - Default value: `local`
	ServerGroupsPriorityOrder *string `pulumi:"serverGroupsPriorityOrder"`
	// Configure the TACACS serverGroup
	TacacsServerGroups []CedgeAaaFeatureTemplateTacacsServerGroup `pulumi:"tacacsServerGroups"`
	// Create local login account
	Users []CedgeAaaFeatureTemplateUser `pulumi:"users"`
}

// The set of arguments for constructing a CedgeAaaFeatureTemplate resource.
type CedgeAaaFeatureTemplateArgs struct {
	// Configure the accounting rules
	AccountingRules CedgeAaaFeatureTemplateAccountingRuleArrayInput
	// For configuration mode commands. - Default value: `false`
	AuthorizationConfigCommands pulumi.BoolPtrInput
	// Variable name
	AuthorizationConfigCommandsVariable pulumi.StringPtrInput
	// For enabling console authorization - Default value: `false`
	AuthorizationConsole pulumi.BoolPtrInput
	// Variable name
	AuthorizationConsoleVariable pulumi.StringPtrInput
	// Configure the Authorization Rules
	AuthorizationRules CedgeAaaFeatureTemplateAuthorizationRuleArrayInput
	// The description of the feature template
	Description pulumi.StringInput
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Accounting configurations parameters - Default value: `false`
	Dot1xAccounting pulumi.BoolPtrInput
	// Variable name
	Dot1xAccountingVariable pulumi.StringPtrInput
	// Authentication configurations parameters - Default value: `false`
	Dot1xAuthentication pulumi.BoolPtrInput
	// Variable name
	Dot1xAuthenticationVariable pulumi.StringPtrInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Specify a RADIUS client
	RadiusClients CedgeAaaFeatureTemplateRadiusClientArrayInput
	// Authentication Type - Choices: `any`, `all`, `session-key` - Default value: `any`
	RadiusDynamicAuthorAuthenticationType pulumi.StringPtrInput
	// Variable name
	RadiusDynamicAuthorAuthenticationTypeVariable pulumi.StringPtrInput
	// Domain Stripping - Choices: `yes`, `no`, `right-to-left` - Default value: `no`
	RadiusDynamicAuthorDomainStripping pulumi.StringPtrInput
	// Variable name
	RadiusDynamicAuthorDomainStrippingVariable pulumi.StringPtrInput
	// Specify Radius Dynamic Author Port - Range: `0`-`65535` - Default value: `1700`
	RadiusDynamicAuthorPort pulumi.IntPtrInput
	// Variable name
	RadiusDynamicAuthorPortVariable pulumi.StringPtrInput
	// Specify a radius dynamic author server-key
	RadiusDynamicAuthorServerKey pulumi.StringPtrInput
	// Variable name
	RadiusDynamicAuthorServerKeyVariable pulumi.StringPtrInput
	// Configure the Radius serverGroup
	RadiusServerGroups CedgeAaaFeatureTemplateRadiusServerGroupArrayInput
	// CTS Authorization List
	RadiusTrustsecCtsAuthorizationList pulumi.StringPtrInput
	// Variable name
	RadiusTrustsecCtsAuthorizationListVariable pulumi.StringPtrInput
	// RADIUS trustsec group
	RadiusTrustsecGroup pulumi.StringPtrInput
	// ServerGroups priority order - Default value: `local`
	ServerGroupsPriorityOrder pulumi.StringPtrInput
	// Configure the TACACS serverGroup
	TacacsServerGroups CedgeAaaFeatureTemplateTacacsServerGroupArrayInput
	// Create local login account
	Users CedgeAaaFeatureTemplateUserArrayInput
}

func (CedgeAaaFeatureTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cedgeAaaFeatureTemplateArgs)(nil)).Elem()
}

type CedgeAaaFeatureTemplateInput interface {
	pulumi.Input

	ToCedgeAaaFeatureTemplateOutput() CedgeAaaFeatureTemplateOutput
	ToCedgeAaaFeatureTemplateOutputWithContext(ctx context.Context) CedgeAaaFeatureTemplateOutput
}

func (*CedgeAaaFeatureTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**CedgeAaaFeatureTemplate)(nil)).Elem()
}

func (i *CedgeAaaFeatureTemplate) ToCedgeAaaFeatureTemplateOutput() CedgeAaaFeatureTemplateOutput {
	return i.ToCedgeAaaFeatureTemplateOutputWithContext(context.Background())
}

func (i *CedgeAaaFeatureTemplate) ToCedgeAaaFeatureTemplateOutputWithContext(ctx context.Context) CedgeAaaFeatureTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CedgeAaaFeatureTemplateOutput)
}

// CedgeAaaFeatureTemplateArrayInput is an input type that accepts CedgeAaaFeatureTemplateArray and CedgeAaaFeatureTemplateArrayOutput values.
// You can construct a concrete instance of `CedgeAaaFeatureTemplateArrayInput` via:
//
//	CedgeAaaFeatureTemplateArray{ CedgeAaaFeatureTemplateArgs{...} }
type CedgeAaaFeatureTemplateArrayInput interface {
	pulumi.Input

	ToCedgeAaaFeatureTemplateArrayOutput() CedgeAaaFeatureTemplateArrayOutput
	ToCedgeAaaFeatureTemplateArrayOutputWithContext(context.Context) CedgeAaaFeatureTemplateArrayOutput
}

type CedgeAaaFeatureTemplateArray []CedgeAaaFeatureTemplateInput

func (CedgeAaaFeatureTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CedgeAaaFeatureTemplate)(nil)).Elem()
}

func (i CedgeAaaFeatureTemplateArray) ToCedgeAaaFeatureTemplateArrayOutput() CedgeAaaFeatureTemplateArrayOutput {
	return i.ToCedgeAaaFeatureTemplateArrayOutputWithContext(context.Background())
}

func (i CedgeAaaFeatureTemplateArray) ToCedgeAaaFeatureTemplateArrayOutputWithContext(ctx context.Context) CedgeAaaFeatureTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CedgeAaaFeatureTemplateArrayOutput)
}

// CedgeAaaFeatureTemplateMapInput is an input type that accepts CedgeAaaFeatureTemplateMap and CedgeAaaFeatureTemplateMapOutput values.
// You can construct a concrete instance of `CedgeAaaFeatureTemplateMapInput` via:
//
//	CedgeAaaFeatureTemplateMap{ "key": CedgeAaaFeatureTemplateArgs{...} }
type CedgeAaaFeatureTemplateMapInput interface {
	pulumi.Input

	ToCedgeAaaFeatureTemplateMapOutput() CedgeAaaFeatureTemplateMapOutput
	ToCedgeAaaFeatureTemplateMapOutputWithContext(context.Context) CedgeAaaFeatureTemplateMapOutput
}

type CedgeAaaFeatureTemplateMap map[string]CedgeAaaFeatureTemplateInput

func (CedgeAaaFeatureTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CedgeAaaFeatureTemplate)(nil)).Elem()
}

func (i CedgeAaaFeatureTemplateMap) ToCedgeAaaFeatureTemplateMapOutput() CedgeAaaFeatureTemplateMapOutput {
	return i.ToCedgeAaaFeatureTemplateMapOutputWithContext(context.Background())
}

func (i CedgeAaaFeatureTemplateMap) ToCedgeAaaFeatureTemplateMapOutputWithContext(ctx context.Context) CedgeAaaFeatureTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CedgeAaaFeatureTemplateMapOutput)
}

type CedgeAaaFeatureTemplateOutput struct{ *pulumi.OutputState }

func (CedgeAaaFeatureTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CedgeAaaFeatureTemplate)(nil)).Elem()
}

func (o CedgeAaaFeatureTemplateOutput) ToCedgeAaaFeatureTemplateOutput() CedgeAaaFeatureTemplateOutput {
	return o
}

func (o CedgeAaaFeatureTemplateOutput) ToCedgeAaaFeatureTemplateOutputWithContext(ctx context.Context) CedgeAaaFeatureTemplateOutput {
	return o
}

// Configure the accounting rules
func (o CedgeAaaFeatureTemplateOutput) AccountingRules() CedgeAaaFeatureTemplateAccountingRuleArrayOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) CedgeAaaFeatureTemplateAccountingRuleArrayOutput {
		return v.AccountingRules
	}).(CedgeAaaFeatureTemplateAccountingRuleArrayOutput)
}

// For configuration mode commands. - Default value: `false`
func (o CedgeAaaFeatureTemplateOutput) AuthorizationConfigCommands() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.BoolPtrOutput { return v.AuthorizationConfigCommands }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeAaaFeatureTemplateOutput) AuthorizationConfigCommandsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringPtrOutput { return v.AuthorizationConfigCommandsVariable }).(pulumi.StringPtrOutput)
}

// For enabling console authorization - Default value: `false`
func (o CedgeAaaFeatureTemplateOutput) AuthorizationConsole() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.BoolPtrOutput { return v.AuthorizationConsole }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeAaaFeatureTemplateOutput) AuthorizationConsoleVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringPtrOutput { return v.AuthorizationConsoleVariable }).(pulumi.StringPtrOutput)
}

// Configure the Authorization Rules
func (o CedgeAaaFeatureTemplateOutput) AuthorizationRules() CedgeAaaFeatureTemplateAuthorizationRuleArrayOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) CedgeAaaFeatureTemplateAuthorizationRuleArrayOutput {
		return v.AuthorizationRules
	}).(CedgeAaaFeatureTemplateAuthorizationRuleArrayOutput)
}

// The description of the feature template
func (o CedgeAaaFeatureTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
func (o CedgeAaaFeatureTemplateOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringArrayOutput { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Accounting configurations parameters - Default value: `false`
func (o CedgeAaaFeatureTemplateOutput) Dot1xAccounting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.BoolPtrOutput { return v.Dot1xAccounting }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeAaaFeatureTemplateOutput) Dot1xAccountingVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringPtrOutput { return v.Dot1xAccountingVariable }).(pulumi.StringPtrOutput)
}

// Authentication configurations parameters - Default value: `false`
func (o CedgeAaaFeatureTemplateOutput) Dot1xAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.BoolPtrOutput { return v.Dot1xAuthentication }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgeAaaFeatureTemplateOutput) Dot1xAuthenticationVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringPtrOutput { return v.Dot1xAuthenticationVariable }).(pulumi.StringPtrOutput)
}

// The name of the feature template
func (o CedgeAaaFeatureTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specify a RADIUS client
func (o CedgeAaaFeatureTemplateOutput) RadiusClients() CedgeAaaFeatureTemplateRadiusClientArrayOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) CedgeAaaFeatureTemplateRadiusClientArrayOutput {
		return v.RadiusClients
	}).(CedgeAaaFeatureTemplateRadiusClientArrayOutput)
}

// Authentication Type - Choices: `any`, `all`, `session-key` - Default value: `any`
func (o CedgeAaaFeatureTemplateOutput) RadiusDynamicAuthorAuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringPtrOutput {
		return v.RadiusDynamicAuthorAuthenticationType
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o CedgeAaaFeatureTemplateOutput) RadiusDynamicAuthorAuthenticationTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringPtrOutput {
		return v.RadiusDynamicAuthorAuthenticationTypeVariable
	}).(pulumi.StringPtrOutput)
}

// Domain Stripping - Choices: `yes`, `no`, `right-to-left` - Default value: `no`
func (o CedgeAaaFeatureTemplateOutput) RadiusDynamicAuthorDomainStripping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringPtrOutput { return v.RadiusDynamicAuthorDomainStripping }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CedgeAaaFeatureTemplateOutput) RadiusDynamicAuthorDomainStrippingVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringPtrOutput {
		return v.RadiusDynamicAuthorDomainStrippingVariable
	}).(pulumi.StringPtrOutput)
}

// Specify Radius Dynamic Author Port - Range: `0`-`65535` - Default value: `1700`
func (o CedgeAaaFeatureTemplateOutput) RadiusDynamicAuthorPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.IntPtrOutput { return v.RadiusDynamicAuthorPort }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CedgeAaaFeatureTemplateOutput) RadiusDynamicAuthorPortVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringPtrOutput { return v.RadiusDynamicAuthorPortVariable }).(pulumi.StringPtrOutput)
}

// Specify a radius dynamic author server-key
func (o CedgeAaaFeatureTemplateOutput) RadiusDynamicAuthorServerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringPtrOutput { return v.RadiusDynamicAuthorServerKey }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CedgeAaaFeatureTemplateOutput) RadiusDynamicAuthorServerKeyVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringPtrOutput { return v.RadiusDynamicAuthorServerKeyVariable }).(pulumi.StringPtrOutput)
}

// Configure the Radius serverGroup
func (o CedgeAaaFeatureTemplateOutput) RadiusServerGroups() CedgeAaaFeatureTemplateRadiusServerGroupArrayOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) CedgeAaaFeatureTemplateRadiusServerGroupArrayOutput {
		return v.RadiusServerGroups
	}).(CedgeAaaFeatureTemplateRadiusServerGroupArrayOutput)
}

// CTS Authorization List
func (o CedgeAaaFeatureTemplateOutput) RadiusTrustsecCtsAuthorizationList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringPtrOutput { return v.RadiusTrustsecCtsAuthorizationList }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CedgeAaaFeatureTemplateOutput) RadiusTrustsecCtsAuthorizationListVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringPtrOutput {
		return v.RadiusTrustsecCtsAuthorizationListVariable
	}).(pulumi.StringPtrOutput)
}

// RADIUS trustsec group
func (o CedgeAaaFeatureTemplateOutput) RadiusTrustsecGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringPtrOutput { return v.RadiusTrustsecGroup }).(pulumi.StringPtrOutput)
}

// ServerGroups priority order - Default value: `local`
func (o CedgeAaaFeatureTemplateOutput) ServerGroupsPriorityOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringPtrOutput { return v.ServerGroupsPriorityOrder }).(pulumi.StringPtrOutput)
}

// Configure the TACACS serverGroup
func (o CedgeAaaFeatureTemplateOutput) TacacsServerGroups() CedgeAaaFeatureTemplateTacacsServerGroupArrayOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) CedgeAaaFeatureTemplateTacacsServerGroupArrayOutput {
		return v.TacacsServerGroups
	}).(CedgeAaaFeatureTemplateTacacsServerGroupArrayOutput)
}

// The template type
func (o CedgeAaaFeatureTemplateOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.StringOutput { return v.TemplateType }).(pulumi.StringOutput)
}

// Create local login account
func (o CedgeAaaFeatureTemplateOutput) Users() CedgeAaaFeatureTemplateUserArrayOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) CedgeAaaFeatureTemplateUserArrayOutput { return v.Users }).(CedgeAaaFeatureTemplateUserArrayOutput)
}

// The version of the feature template
func (o CedgeAaaFeatureTemplateOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *CedgeAaaFeatureTemplate) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type CedgeAaaFeatureTemplateArrayOutput struct{ *pulumi.OutputState }

func (CedgeAaaFeatureTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CedgeAaaFeatureTemplate)(nil)).Elem()
}

func (o CedgeAaaFeatureTemplateArrayOutput) ToCedgeAaaFeatureTemplateArrayOutput() CedgeAaaFeatureTemplateArrayOutput {
	return o
}

func (o CedgeAaaFeatureTemplateArrayOutput) ToCedgeAaaFeatureTemplateArrayOutputWithContext(ctx context.Context) CedgeAaaFeatureTemplateArrayOutput {
	return o
}

func (o CedgeAaaFeatureTemplateArrayOutput) Index(i pulumi.IntInput) CedgeAaaFeatureTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CedgeAaaFeatureTemplate {
		return vs[0].([]*CedgeAaaFeatureTemplate)[vs[1].(int)]
	}).(CedgeAaaFeatureTemplateOutput)
}

type CedgeAaaFeatureTemplateMapOutput struct{ *pulumi.OutputState }

func (CedgeAaaFeatureTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CedgeAaaFeatureTemplate)(nil)).Elem()
}

func (o CedgeAaaFeatureTemplateMapOutput) ToCedgeAaaFeatureTemplateMapOutput() CedgeAaaFeatureTemplateMapOutput {
	return o
}

func (o CedgeAaaFeatureTemplateMapOutput) ToCedgeAaaFeatureTemplateMapOutputWithContext(ctx context.Context) CedgeAaaFeatureTemplateMapOutput {
	return o
}

func (o CedgeAaaFeatureTemplateMapOutput) MapIndex(k pulumi.StringInput) CedgeAaaFeatureTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CedgeAaaFeatureTemplate {
		return vs[0].(map[string]*CedgeAaaFeatureTemplate)[vs[1].(string)]
	}).(CedgeAaaFeatureTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CedgeAaaFeatureTemplateInput)(nil)).Elem(), &CedgeAaaFeatureTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*CedgeAaaFeatureTemplateArrayInput)(nil)).Elem(), CedgeAaaFeatureTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CedgeAaaFeatureTemplateMapInput)(nil)).Elem(), CedgeAaaFeatureTemplateMap{})
	pulumi.RegisterOutputType(CedgeAaaFeatureTemplateOutput{})
	pulumi.RegisterOutputType(CedgeAaaFeatureTemplateArrayOutput{})
	pulumi.RegisterOutputType(CedgeAaaFeatureTemplateMapOutput{})
}
