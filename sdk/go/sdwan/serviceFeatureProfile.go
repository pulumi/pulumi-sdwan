// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Service Feature Profile .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewServiceFeatureProfile(ctx, "example", &sdwan.ServiceFeatureProfileArgs{
//				Name:        pulumi.String("SERVICE_FP_1"),
//				Description: pulumi.String("My service feature profile 1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/serviceFeatureProfile:ServiceFeatureProfile example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type ServiceFeatureProfile struct {
	pulumi.CustomResourceState

	// Description
	Description pulumi.StringOutput `pulumi:"description"`
	// The name of the service feature profile
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewServiceFeatureProfile registers a new resource with the given unique name, arguments, and options.
func NewServiceFeatureProfile(ctx *pulumi.Context,
	name string, args *ServiceFeatureProfileArgs, opts ...pulumi.ResourceOption) (*ServiceFeatureProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceFeatureProfile
	err := ctx.RegisterResource("sdwan:index/serviceFeatureProfile:ServiceFeatureProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceFeatureProfile gets an existing ServiceFeatureProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceFeatureProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceFeatureProfileState, opts ...pulumi.ResourceOption) (*ServiceFeatureProfile, error) {
	var resource ServiceFeatureProfile
	err := ctx.ReadResource("sdwan:index/serviceFeatureProfile:ServiceFeatureProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceFeatureProfile resources.
type serviceFeatureProfileState struct {
	// Description
	Description *string `pulumi:"description"`
	// The name of the service feature profile
	Name *string `pulumi:"name"`
}

type ServiceFeatureProfileState struct {
	// Description
	Description pulumi.StringPtrInput
	// The name of the service feature profile
	Name pulumi.StringPtrInput
}

func (ServiceFeatureProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceFeatureProfileState)(nil)).Elem()
}

type serviceFeatureProfileArgs struct {
	// Description
	Description string `pulumi:"description"`
	// The name of the service feature profile
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ServiceFeatureProfile resource.
type ServiceFeatureProfileArgs struct {
	// Description
	Description pulumi.StringInput
	// The name of the service feature profile
	Name pulumi.StringPtrInput
}

func (ServiceFeatureProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceFeatureProfileArgs)(nil)).Elem()
}

type ServiceFeatureProfileInput interface {
	pulumi.Input

	ToServiceFeatureProfileOutput() ServiceFeatureProfileOutput
	ToServiceFeatureProfileOutputWithContext(ctx context.Context) ServiceFeatureProfileOutput
}

func (*ServiceFeatureProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFeatureProfile)(nil)).Elem()
}

func (i *ServiceFeatureProfile) ToServiceFeatureProfileOutput() ServiceFeatureProfileOutput {
	return i.ToServiceFeatureProfileOutputWithContext(context.Background())
}

func (i *ServiceFeatureProfile) ToServiceFeatureProfileOutputWithContext(ctx context.Context) ServiceFeatureProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFeatureProfileOutput)
}

// ServiceFeatureProfileArrayInput is an input type that accepts ServiceFeatureProfileArray and ServiceFeatureProfileArrayOutput values.
// You can construct a concrete instance of `ServiceFeatureProfileArrayInput` via:
//
//	ServiceFeatureProfileArray{ ServiceFeatureProfileArgs{...} }
type ServiceFeatureProfileArrayInput interface {
	pulumi.Input

	ToServiceFeatureProfileArrayOutput() ServiceFeatureProfileArrayOutput
	ToServiceFeatureProfileArrayOutputWithContext(context.Context) ServiceFeatureProfileArrayOutput
}

type ServiceFeatureProfileArray []ServiceFeatureProfileInput

func (ServiceFeatureProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceFeatureProfile)(nil)).Elem()
}

func (i ServiceFeatureProfileArray) ToServiceFeatureProfileArrayOutput() ServiceFeatureProfileArrayOutput {
	return i.ToServiceFeatureProfileArrayOutputWithContext(context.Background())
}

func (i ServiceFeatureProfileArray) ToServiceFeatureProfileArrayOutputWithContext(ctx context.Context) ServiceFeatureProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFeatureProfileArrayOutput)
}

// ServiceFeatureProfileMapInput is an input type that accepts ServiceFeatureProfileMap and ServiceFeatureProfileMapOutput values.
// You can construct a concrete instance of `ServiceFeatureProfileMapInput` via:
//
//	ServiceFeatureProfileMap{ "key": ServiceFeatureProfileArgs{...} }
type ServiceFeatureProfileMapInput interface {
	pulumi.Input

	ToServiceFeatureProfileMapOutput() ServiceFeatureProfileMapOutput
	ToServiceFeatureProfileMapOutputWithContext(context.Context) ServiceFeatureProfileMapOutput
}

type ServiceFeatureProfileMap map[string]ServiceFeatureProfileInput

func (ServiceFeatureProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceFeatureProfile)(nil)).Elem()
}

func (i ServiceFeatureProfileMap) ToServiceFeatureProfileMapOutput() ServiceFeatureProfileMapOutput {
	return i.ToServiceFeatureProfileMapOutputWithContext(context.Background())
}

func (i ServiceFeatureProfileMap) ToServiceFeatureProfileMapOutputWithContext(ctx context.Context) ServiceFeatureProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFeatureProfileMapOutput)
}

type ServiceFeatureProfileOutput struct{ *pulumi.OutputState }

func (ServiceFeatureProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFeatureProfile)(nil)).Elem()
}

func (o ServiceFeatureProfileOutput) ToServiceFeatureProfileOutput() ServiceFeatureProfileOutput {
	return o
}

func (o ServiceFeatureProfileOutput) ToServiceFeatureProfileOutputWithContext(ctx context.Context) ServiceFeatureProfileOutput {
	return o
}

// Description
func (o ServiceFeatureProfileOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceFeatureProfile) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The name of the service feature profile
func (o ServiceFeatureProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceFeatureProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type ServiceFeatureProfileArrayOutput struct{ *pulumi.OutputState }

func (ServiceFeatureProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceFeatureProfile)(nil)).Elem()
}

func (o ServiceFeatureProfileArrayOutput) ToServiceFeatureProfileArrayOutput() ServiceFeatureProfileArrayOutput {
	return o
}

func (o ServiceFeatureProfileArrayOutput) ToServiceFeatureProfileArrayOutputWithContext(ctx context.Context) ServiceFeatureProfileArrayOutput {
	return o
}

func (o ServiceFeatureProfileArrayOutput) Index(i pulumi.IntInput) ServiceFeatureProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceFeatureProfile {
		return vs[0].([]*ServiceFeatureProfile)[vs[1].(int)]
	}).(ServiceFeatureProfileOutput)
}

type ServiceFeatureProfileMapOutput struct{ *pulumi.OutputState }

func (ServiceFeatureProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceFeatureProfile)(nil)).Elem()
}

func (o ServiceFeatureProfileMapOutput) ToServiceFeatureProfileMapOutput() ServiceFeatureProfileMapOutput {
	return o
}

func (o ServiceFeatureProfileMapOutput) ToServiceFeatureProfileMapOutputWithContext(ctx context.Context) ServiceFeatureProfileMapOutput {
	return o
}

func (o ServiceFeatureProfileMapOutput) MapIndex(k pulumi.StringInput) ServiceFeatureProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceFeatureProfile {
		return vs[0].(map[string]*ServiceFeatureProfile)[vs[1].(string)]
	}).(ServiceFeatureProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFeatureProfileInput)(nil)).Elem(), &ServiceFeatureProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFeatureProfileArrayInput)(nil)).Elem(), ServiceFeatureProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFeatureProfileMapInput)(nil)).Elem(), ServiceFeatureProfileMap{})
	pulumi.RegisterOutputType(ServiceFeatureProfileOutput{})
	pulumi.RegisterOutputType(ServiceFeatureProfileArrayOutput{})
	pulumi.RegisterOutputType(ServiceFeatureProfileMapOutput{})
}
