// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a VPN Membership Policy Definition .
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/vpnMembershipPolicyDefinition:VpnMembershipPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type VpnMembershipPolicyDefinition struct {
	pulumi.CustomResourceState

	// The description of the policy definition
	Description pulumi.StringOutput `pulumi:"description"`
	// The name of the policy definition
	Name pulumi.StringOutput `pulumi:"name"`
	// List of sites
	Sites VpnMembershipPolicyDefinitionSiteArrayOutput `pulumi:"sites"`
	// Type
	Type pulumi.StringOutput `pulumi:"type"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewVpnMembershipPolicyDefinition registers a new resource with the given unique name, arguments, and options.
func NewVpnMembershipPolicyDefinition(ctx *pulumi.Context,
	name string, args *VpnMembershipPolicyDefinitionArgs, opts ...pulumi.ResourceOption) (*VpnMembershipPolicyDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Sites == nil {
		return nil, errors.New("invalid value for required argument 'Sites'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpnMembershipPolicyDefinition
	err := ctx.RegisterResource("sdwan:index/vpnMembershipPolicyDefinition:VpnMembershipPolicyDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnMembershipPolicyDefinition gets an existing VpnMembershipPolicyDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnMembershipPolicyDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnMembershipPolicyDefinitionState, opts ...pulumi.ResourceOption) (*VpnMembershipPolicyDefinition, error) {
	var resource VpnMembershipPolicyDefinition
	err := ctx.ReadResource("sdwan:index/vpnMembershipPolicyDefinition:VpnMembershipPolicyDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnMembershipPolicyDefinition resources.
type vpnMembershipPolicyDefinitionState struct {
	// The description of the policy definition
	Description *string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of sites
	Sites []VpnMembershipPolicyDefinitionSite `pulumi:"sites"`
	// Type
	Type *string `pulumi:"type"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type VpnMembershipPolicyDefinitionState struct {
	// The description of the policy definition
	Description pulumi.StringPtrInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of sites
	Sites VpnMembershipPolicyDefinitionSiteArrayInput
	// Type
	Type pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (VpnMembershipPolicyDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnMembershipPolicyDefinitionState)(nil)).Elem()
}

type vpnMembershipPolicyDefinitionArgs struct {
	// The description of the policy definition
	Description string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of sites
	Sites []VpnMembershipPolicyDefinitionSite `pulumi:"sites"`
}

// The set of arguments for constructing a VpnMembershipPolicyDefinition resource.
type VpnMembershipPolicyDefinitionArgs struct {
	// The description of the policy definition
	Description pulumi.StringInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of sites
	Sites VpnMembershipPolicyDefinitionSiteArrayInput
}

func (VpnMembershipPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnMembershipPolicyDefinitionArgs)(nil)).Elem()
}

type VpnMembershipPolicyDefinitionInput interface {
	pulumi.Input

	ToVpnMembershipPolicyDefinitionOutput() VpnMembershipPolicyDefinitionOutput
	ToVpnMembershipPolicyDefinitionOutputWithContext(ctx context.Context) VpnMembershipPolicyDefinitionOutput
}

func (*VpnMembershipPolicyDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnMembershipPolicyDefinition)(nil)).Elem()
}

func (i *VpnMembershipPolicyDefinition) ToVpnMembershipPolicyDefinitionOutput() VpnMembershipPolicyDefinitionOutput {
	return i.ToVpnMembershipPolicyDefinitionOutputWithContext(context.Background())
}

func (i *VpnMembershipPolicyDefinition) ToVpnMembershipPolicyDefinitionOutputWithContext(ctx context.Context) VpnMembershipPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnMembershipPolicyDefinitionOutput)
}

// VpnMembershipPolicyDefinitionArrayInput is an input type that accepts VpnMembershipPolicyDefinitionArray and VpnMembershipPolicyDefinitionArrayOutput values.
// You can construct a concrete instance of `VpnMembershipPolicyDefinitionArrayInput` via:
//
//	VpnMembershipPolicyDefinitionArray{ VpnMembershipPolicyDefinitionArgs{...} }
type VpnMembershipPolicyDefinitionArrayInput interface {
	pulumi.Input

	ToVpnMembershipPolicyDefinitionArrayOutput() VpnMembershipPolicyDefinitionArrayOutput
	ToVpnMembershipPolicyDefinitionArrayOutputWithContext(context.Context) VpnMembershipPolicyDefinitionArrayOutput
}

type VpnMembershipPolicyDefinitionArray []VpnMembershipPolicyDefinitionInput

func (VpnMembershipPolicyDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnMembershipPolicyDefinition)(nil)).Elem()
}

func (i VpnMembershipPolicyDefinitionArray) ToVpnMembershipPolicyDefinitionArrayOutput() VpnMembershipPolicyDefinitionArrayOutput {
	return i.ToVpnMembershipPolicyDefinitionArrayOutputWithContext(context.Background())
}

func (i VpnMembershipPolicyDefinitionArray) ToVpnMembershipPolicyDefinitionArrayOutputWithContext(ctx context.Context) VpnMembershipPolicyDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnMembershipPolicyDefinitionArrayOutput)
}

// VpnMembershipPolicyDefinitionMapInput is an input type that accepts VpnMembershipPolicyDefinitionMap and VpnMembershipPolicyDefinitionMapOutput values.
// You can construct a concrete instance of `VpnMembershipPolicyDefinitionMapInput` via:
//
//	VpnMembershipPolicyDefinitionMap{ "key": VpnMembershipPolicyDefinitionArgs{...} }
type VpnMembershipPolicyDefinitionMapInput interface {
	pulumi.Input

	ToVpnMembershipPolicyDefinitionMapOutput() VpnMembershipPolicyDefinitionMapOutput
	ToVpnMembershipPolicyDefinitionMapOutputWithContext(context.Context) VpnMembershipPolicyDefinitionMapOutput
}

type VpnMembershipPolicyDefinitionMap map[string]VpnMembershipPolicyDefinitionInput

func (VpnMembershipPolicyDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnMembershipPolicyDefinition)(nil)).Elem()
}

func (i VpnMembershipPolicyDefinitionMap) ToVpnMembershipPolicyDefinitionMapOutput() VpnMembershipPolicyDefinitionMapOutput {
	return i.ToVpnMembershipPolicyDefinitionMapOutputWithContext(context.Background())
}

func (i VpnMembershipPolicyDefinitionMap) ToVpnMembershipPolicyDefinitionMapOutputWithContext(ctx context.Context) VpnMembershipPolicyDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnMembershipPolicyDefinitionMapOutput)
}

type VpnMembershipPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (VpnMembershipPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnMembershipPolicyDefinition)(nil)).Elem()
}

func (o VpnMembershipPolicyDefinitionOutput) ToVpnMembershipPolicyDefinitionOutput() VpnMembershipPolicyDefinitionOutput {
	return o
}

func (o VpnMembershipPolicyDefinitionOutput) ToVpnMembershipPolicyDefinitionOutputWithContext(ctx context.Context) VpnMembershipPolicyDefinitionOutput {
	return o
}

// The description of the policy definition
func (o VpnMembershipPolicyDefinitionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnMembershipPolicyDefinition) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The name of the policy definition
func (o VpnMembershipPolicyDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnMembershipPolicyDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of sites
func (o VpnMembershipPolicyDefinitionOutput) Sites() VpnMembershipPolicyDefinitionSiteArrayOutput {
	return o.ApplyT(func(v *VpnMembershipPolicyDefinition) VpnMembershipPolicyDefinitionSiteArrayOutput { return v.Sites }).(VpnMembershipPolicyDefinitionSiteArrayOutput)
}

// Type
func (o VpnMembershipPolicyDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnMembershipPolicyDefinition) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The version of the object
func (o VpnMembershipPolicyDefinitionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnMembershipPolicyDefinition) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type VpnMembershipPolicyDefinitionArrayOutput struct{ *pulumi.OutputState }

func (VpnMembershipPolicyDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnMembershipPolicyDefinition)(nil)).Elem()
}

func (o VpnMembershipPolicyDefinitionArrayOutput) ToVpnMembershipPolicyDefinitionArrayOutput() VpnMembershipPolicyDefinitionArrayOutput {
	return o
}

func (o VpnMembershipPolicyDefinitionArrayOutput) ToVpnMembershipPolicyDefinitionArrayOutputWithContext(ctx context.Context) VpnMembershipPolicyDefinitionArrayOutput {
	return o
}

func (o VpnMembershipPolicyDefinitionArrayOutput) Index(i pulumi.IntInput) VpnMembershipPolicyDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpnMembershipPolicyDefinition {
		return vs[0].([]*VpnMembershipPolicyDefinition)[vs[1].(int)]
	}).(VpnMembershipPolicyDefinitionOutput)
}

type VpnMembershipPolicyDefinitionMapOutput struct{ *pulumi.OutputState }

func (VpnMembershipPolicyDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnMembershipPolicyDefinition)(nil)).Elem()
}

func (o VpnMembershipPolicyDefinitionMapOutput) ToVpnMembershipPolicyDefinitionMapOutput() VpnMembershipPolicyDefinitionMapOutput {
	return o
}

func (o VpnMembershipPolicyDefinitionMapOutput) ToVpnMembershipPolicyDefinitionMapOutputWithContext(ctx context.Context) VpnMembershipPolicyDefinitionMapOutput {
	return o
}

func (o VpnMembershipPolicyDefinitionMapOutput) MapIndex(k pulumi.StringInput) VpnMembershipPolicyDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpnMembershipPolicyDefinition {
		return vs[0].(map[string]*VpnMembershipPolicyDefinition)[vs[1].(string)]
	}).(VpnMembershipPolicyDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpnMembershipPolicyDefinitionInput)(nil)).Elem(), &VpnMembershipPolicyDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnMembershipPolicyDefinitionArrayInput)(nil)).Elem(), VpnMembershipPolicyDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnMembershipPolicyDefinitionMapInput)(nil)).Elem(), VpnMembershipPolicyDefinitionMap{})
	pulumi.RegisterOutputType(VpnMembershipPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(VpnMembershipPolicyDefinitionArrayOutput{})
	pulumi.RegisterOutputType(VpnMembershipPolicyDefinitionMapOutput{})
}
