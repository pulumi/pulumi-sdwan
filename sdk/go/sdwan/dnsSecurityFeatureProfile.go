// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a DNS Security Feature Profile .
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewDnsSecurityFeatureProfile(ctx, "example", &sdwan.DnsSecurityFeatureProfileArgs{
//				Name:        pulumi.String("DNS_SECURITY_FP_1"),
//				Description: pulumi.String("My dns security feature profile 1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/dnsSecurityFeatureProfile:DnsSecurityFeatureProfile example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type DnsSecurityFeatureProfile struct {
	pulumi.CustomResourceState

	// Description
	Description pulumi.StringOutput `pulumi:"description"`
	// The name of the dns security feature profile
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewDnsSecurityFeatureProfile registers a new resource with the given unique name, arguments, and options.
func NewDnsSecurityFeatureProfile(ctx *pulumi.Context,
	name string, args *DnsSecurityFeatureProfileArgs, opts ...pulumi.ResourceOption) (*DnsSecurityFeatureProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DnsSecurityFeatureProfile
	err := ctx.RegisterResource("sdwan:index/dnsSecurityFeatureProfile:DnsSecurityFeatureProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDnsSecurityFeatureProfile gets an existing DnsSecurityFeatureProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDnsSecurityFeatureProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DnsSecurityFeatureProfileState, opts ...pulumi.ResourceOption) (*DnsSecurityFeatureProfile, error) {
	var resource DnsSecurityFeatureProfile
	err := ctx.ReadResource("sdwan:index/dnsSecurityFeatureProfile:DnsSecurityFeatureProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DnsSecurityFeatureProfile resources.
type dnsSecurityFeatureProfileState struct {
	// Description
	Description *string `pulumi:"description"`
	// The name of the dns security feature profile
	Name *string `pulumi:"name"`
}

type DnsSecurityFeatureProfileState struct {
	// Description
	Description pulumi.StringPtrInput
	// The name of the dns security feature profile
	Name pulumi.StringPtrInput
}

func (DnsSecurityFeatureProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsSecurityFeatureProfileState)(nil)).Elem()
}

type dnsSecurityFeatureProfileArgs struct {
	// Description
	Description string `pulumi:"description"`
	// The name of the dns security feature profile
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a DnsSecurityFeatureProfile resource.
type DnsSecurityFeatureProfileArgs struct {
	// Description
	Description pulumi.StringInput
	// The name of the dns security feature profile
	Name pulumi.StringPtrInput
}

func (DnsSecurityFeatureProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsSecurityFeatureProfileArgs)(nil)).Elem()
}

type DnsSecurityFeatureProfileInput interface {
	pulumi.Input

	ToDnsSecurityFeatureProfileOutput() DnsSecurityFeatureProfileOutput
	ToDnsSecurityFeatureProfileOutputWithContext(ctx context.Context) DnsSecurityFeatureProfileOutput
}

func (*DnsSecurityFeatureProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsSecurityFeatureProfile)(nil)).Elem()
}

func (i *DnsSecurityFeatureProfile) ToDnsSecurityFeatureProfileOutput() DnsSecurityFeatureProfileOutput {
	return i.ToDnsSecurityFeatureProfileOutputWithContext(context.Background())
}

func (i *DnsSecurityFeatureProfile) ToDnsSecurityFeatureProfileOutputWithContext(ctx context.Context) DnsSecurityFeatureProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsSecurityFeatureProfileOutput)
}

// DnsSecurityFeatureProfileArrayInput is an input type that accepts DnsSecurityFeatureProfileArray and DnsSecurityFeatureProfileArrayOutput values.
// You can construct a concrete instance of `DnsSecurityFeatureProfileArrayInput` via:
//
//	DnsSecurityFeatureProfileArray{ DnsSecurityFeatureProfileArgs{...} }
type DnsSecurityFeatureProfileArrayInput interface {
	pulumi.Input

	ToDnsSecurityFeatureProfileArrayOutput() DnsSecurityFeatureProfileArrayOutput
	ToDnsSecurityFeatureProfileArrayOutputWithContext(context.Context) DnsSecurityFeatureProfileArrayOutput
}

type DnsSecurityFeatureProfileArray []DnsSecurityFeatureProfileInput

func (DnsSecurityFeatureProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DnsSecurityFeatureProfile)(nil)).Elem()
}

func (i DnsSecurityFeatureProfileArray) ToDnsSecurityFeatureProfileArrayOutput() DnsSecurityFeatureProfileArrayOutput {
	return i.ToDnsSecurityFeatureProfileArrayOutputWithContext(context.Background())
}

func (i DnsSecurityFeatureProfileArray) ToDnsSecurityFeatureProfileArrayOutputWithContext(ctx context.Context) DnsSecurityFeatureProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsSecurityFeatureProfileArrayOutput)
}

// DnsSecurityFeatureProfileMapInput is an input type that accepts DnsSecurityFeatureProfileMap and DnsSecurityFeatureProfileMapOutput values.
// You can construct a concrete instance of `DnsSecurityFeatureProfileMapInput` via:
//
//	DnsSecurityFeatureProfileMap{ "key": DnsSecurityFeatureProfileArgs{...} }
type DnsSecurityFeatureProfileMapInput interface {
	pulumi.Input

	ToDnsSecurityFeatureProfileMapOutput() DnsSecurityFeatureProfileMapOutput
	ToDnsSecurityFeatureProfileMapOutputWithContext(context.Context) DnsSecurityFeatureProfileMapOutput
}

type DnsSecurityFeatureProfileMap map[string]DnsSecurityFeatureProfileInput

func (DnsSecurityFeatureProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DnsSecurityFeatureProfile)(nil)).Elem()
}

func (i DnsSecurityFeatureProfileMap) ToDnsSecurityFeatureProfileMapOutput() DnsSecurityFeatureProfileMapOutput {
	return i.ToDnsSecurityFeatureProfileMapOutputWithContext(context.Background())
}

func (i DnsSecurityFeatureProfileMap) ToDnsSecurityFeatureProfileMapOutputWithContext(ctx context.Context) DnsSecurityFeatureProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsSecurityFeatureProfileMapOutput)
}

type DnsSecurityFeatureProfileOutput struct{ *pulumi.OutputState }

func (DnsSecurityFeatureProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsSecurityFeatureProfile)(nil)).Elem()
}

func (o DnsSecurityFeatureProfileOutput) ToDnsSecurityFeatureProfileOutput() DnsSecurityFeatureProfileOutput {
	return o
}

func (o DnsSecurityFeatureProfileOutput) ToDnsSecurityFeatureProfileOutputWithContext(ctx context.Context) DnsSecurityFeatureProfileOutput {
	return o
}

// Description
func (o DnsSecurityFeatureProfileOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsSecurityFeatureProfile) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The name of the dns security feature profile
func (o DnsSecurityFeatureProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsSecurityFeatureProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type DnsSecurityFeatureProfileArrayOutput struct{ *pulumi.OutputState }

func (DnsSecurityFeatureProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DnsSecurityFeatureProfile)(nil)).Elem()
}

func (o DnsSecurityFeatureProfileArrayOutput) ToDnsSecurityFeatureProfileArrayOutput() DnsSecurityFeatureProfileArrayOutput {
	return o
}

func (o DnsSecurityFeatureProfileArrayOutput) ToDnsSecurityFeatureProfileArrayOutputWithContext(ctx context.Context) DnsSecurityFeatureProfileArrayOutput {
	return o
}

func (o DnsSecurityFeatureProfileArrayOutput) Index(i pulumi.IntInput) DnsSecurityFeatureProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DnsSecurityFeatureProfile {
		return vs[0].([]*DnsSecurityFeatureProfile)[vs[1].(int)]
	}).(DnsSecurityFeatureProfileOutput)
}

type DnsSecurityFeatureProfileMapOutput struct{ *pulumi.OutputState }

func (DnsSecurityFeatureProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DnsSecurityFeatureProfile)(nil)).Elem()
}

func (o DnsSecurityFeatureProfileMapOutput) ToDnsSecurityFeatureProfileMapOutput() DnsSecurityFeatureProfileMapOutput {
	return o
}

func (o DnsSecurityFeatureProfileMapOutput) ToDnsSecurityFeatureProfileMapOutputWithContext(ctx context.Context) DnsSecurityFeatureProfileMapOutput {
	return o
}

func (o DnsSecurityFeatureProfileMapOutput) MapIndex(k pulumi.StringInput) DnsSecurityFeatureProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DnsSecurityFeatureProfile {
		return vs[0].(map[string]*DnsSecurityFeatureProfile)[vs[1].(string)]
	}).(DnsSecurityFeatureProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DnsSecurityFeatureProfileInput)(nil)).Elem(), &DnsSecurityFeatureProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsSecurityFeatureProfileArrayInput)(nil)).Elem(), DnsSecurityFeatureProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsSecurityFeatureProfileMapInput)(nil)).Elem(), DnsSecurityFeatureProfileMap{})
	pulumi.RegisterOutputType(DnsSecurityFeatureProfileOutput{})
	pulumi.RegisterOutputType(DnsSecurityFeatureProfileArrayOutput{})
	pulumi.RegisterOutputType(DnsSecurityFeatureProfileMapOutput{})
}
