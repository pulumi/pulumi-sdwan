// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Transport WAN VPN Interface Ethernet profile parcel.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/transportWanVpnInterfaceEthernetProfileParcel:TransportWanVpnInterfaceEthernetProfileParcel example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type TransportWanVpnInterfaceEthernetProfileParcel struct {
	pulumi.CustomResourceState

	// Adaptive QoS - Default value: `false`
	AdaptiveQos pulumi.BoolPtrOutput `pulumi:"adaptiveQos"`
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
	ArpTimeout pulumi.IntPtrOutput `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable pulumi.StringPtrOutput `pulumi:"arpTimeoutVariable"`
	// Configure ARP entries
	Arps TransportWanVpnInterfaceEthernetProfileParcelArpArrayOutput `pulumi:"arps"`
	// Interface auto detect bandwidth - Default value: `false`
	AutoDetectBandwidth pulumi.BoolPtrOutput `pulumi:"autoDetectBandwidth"`
	// Variable name
	AutoDetectBandwidthVariable pulumi.StringPtrOutput `pulumi:"autoDetectBandwidthVariable"`
	// Link autonegotiation
	Autonegotiate pulumi.BoolPtrOutput `pulumi:"autonegotiate"`
	// Variable name
	AutonegotiateVariable pulumi.StringPtrOutput `pulumi:"autonegotiateVariable"`
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthDownstream pulumi.IntPtrOutput `pulumi:"bandwidthDownstream"`
	// Variable name
	BandwidthDownstreamVariable pulumi.StringPtrOutput `pulumi:"bandwidthDownstreamVariable"`
	// Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthUpstream pulumi.IntPtrOutput `pulumi:"bandwidthUpstream"`
	// Variable name
	BandwidthUpstreamVariable pulumi.StringPtrOutput `pulumi:"bandwidthUpstreamVariable"`
	// Block packets originating from IP address that is not from this source - Default value: `false`
	BlockNonSourceIp pulumi.BoolPtrOutput `pulumi:"blockNonSourceIp"`
	// Variable name
	BlockNonSourceIpVariable pulumi.StringPtrOutput `pulumi:"blockNonSourceIpVariable"`
	ConfigDescription        pulumi.StringPtrOutput `pulumi:"configDescription"`
	// Variable name
	ConfigDescriptionVariable pulumi.StringPtrOutput `pulumi:"configDescriptionVariable"`
	// The description of the profile parcel
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Duplex mode - Choices: `full`, `half`, `auto`
	Duplex pulumi.StringPtrOutput `pulumi:"duplex"`
	// Variable name
	DuplexVariable pulumi.StringPtrOutput `pulumi:"duplexVariable"`
	// Enable DHCPv6
	EnableDhcpv6 pulumi.BoolPtrOutput `pulumi:"enableDhcpv6"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// GRE tunnel source IP
	GreTunnelSourceIp pulumi.StringPtrOutput `pulumi:"greTunnelSourceIp"`
	// Variable name
	GreTunnelSourceIpVariable pulumi.StringPtrOutput `pulumi:"greTunnelSourceIpVariable"`
	// ICMP/ICMPv6 Redirect Disable - Default value: `true`
	IcmpRedirectDisable pulumi.BoolPtrOutput `pulumi:"icmpRedirectDisable"`
	// Variable name
	IcmpRedirectDisableVariable pulumi.StringPtrOutput `pulumi:"icmpRedirectDisableVariable"`
	InterfaceName               pulumi.StringPtrOutput `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable pulumi.StringPtrOutput `pulumi:"interfaceNameVariable"`
	// Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
	// Default value: `1500`
	IntrfMtu pulumi.IntPtrOutput `pulumi:"intrfMtu"`
	// Variable name
	IntrfMtuVariable pulumi.StringPtrOutput `pulumi:"intrfMtuVariable"`
	// IP Directed-Broadcast - Default value: `false`
	IpDirectedBroadcast pulumi.BoolPtrOutput `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable pulumi.StringPtrOutput `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
	// <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
	IpMtu pulumi.IntPtrOutput `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable pulumi.StringPtrOutput `pulumi:"ipMtuVariable"`
	// Iperf server for auto bandwidth detect
	IperfServer pulumi.StringPtrOutput `pulumi:"iperfServer"`
	// Variable name
	IperfServerVariable pulumi.StringPtrOutput `pulumi:"iperfServerVariable"`
	// IP Address
	Ipv4Address pulumi.StringPtrOutput `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrOutput `pulumi:"ipv4AddressVariable"`
	// DHCP Distance - Range: `1`-`65536`
	Ipv4DhcpDistance pulumi.IntPtrOutput `pulumi:"ipv4DhcpDistance"`
	// Variable name
	Ipv4DhcpDistanceVariable pulumi.StringPtrOutput `pulumi:"ipv4DhcpDistanceVariable"`
	// Variable name
	Ipv4DhcpHelperVariable pulumi.StringPtrOutput `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP IPv4 helper addresses (min 1, max 8)
	Ipv4DhcpHelpers pulumi.StringArrayOutput `pulumi:"ipv4DhcpHelpers"`
	// Secondary IpV4 Addresses
	Ipv4SecondaryAddresses TransportWanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArrayOutput `pulumi:"ipv4SecondaryAddresses"`
	// Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	// `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	// `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	// `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	// `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrOutput `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable pulumi.StringPtrOutput `pulumi:"ipv4SubnetMaskVariable"`
	// IPv6 Address Secondary
	Ipv6Address pulumi.StringPtrOutput `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrOutput `pulumi:"ipv6AddressVariable"`
	// secondary IPv6 addresses
	Ipv6DhcpSecondaryAddresses TransportWanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArrayOutput `pulumi:"ipv6DhcpSecondaryAddresses"`
	// Static secondary IPv6 addresses
	Ipv6SecondaryAddresses TransportWanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArrayOutput `pulumi:"ipv6SecondaryAddresses"`
	// Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
	LoadInterval pulumi.IntPtrOutput `pulumi:"loadInterval"`
	// Variable name
	LoadIntervalVariable pulumi.StringPtrOutput `pulumi:"loadIntervalVariable"`
	// MAC Address
	MacAddress pulumi.StringPtrOutput `pulumi:"macAddress"`
	// Variable name
	MacAddressVariable pulumi.StringPtrOutput `pulumi:"macAddressVariable"`
	// Media type - Choices: `auto-select`, `rj45`, `sfp`
	MediaType pulumi.StringPtrOutput `pulumi:"mediaType"`
	// Variable name
	MediaTypeVariable pulumi.StringPtrOutput `pulumi:"mediaTypeVariable"`
	// The name of the profile parcel
	Name pulumi.StringOutput `pulumi:"name"`
	// NAT64 on this interface - Default value: `false`
	Nat64 pulumi.BoolPtrOutput `pulumi:"nat64"`
	// NAT66 on this interface - Default value: `false`
	Nat66 pulumi.BoolPtrOutput `pulumi:"nat66"`
	// enable Network Address Translation on this interface - Default value: `false`
	NatIpv4 pulumi.BoolPtrOutput `pulumi:"natIpv4"`
	// Variable name
	NatIpv4Variable pulumi.StringPtrOutput `pulumi:"natIpv4Variable"`
	// enable Network Address Translation ipv6 on this interface - Default value: `false`
	NatIpv6 pulumi.BoolPtrOutput `pulumi:"natIpv6"`
	// Variable name
	NatIpv6Variable pulumi.StringPtrOutput `pulumi:"natIpv6Variable"`
	// NAT Inside Source Loopback Interface
	NatLoopback pulumi.StringPtrOutput `pulumi:"natLoopback"`
	// Variable name
	NatLoopbackVariable pulumi.StringPtrOutput `pulumi:"natLoopbackVariable"`
	// NAT Overload - Default value: `true`
	NatOverload pulumi.BoolPtrOutput `pulumi:"natOverload"`
	// Variable name
	NatOverloadVariable pulumi.StringPtrOutput `pulumi:"natOverloadVariable"`
	// NAT Pool Prefix Length - Range: `1`-`32`
	NatPrefixLength pulumi.IntPtrOutput `pulumi:"natPrefixLength"`
	// Variable name
	NatPrefixLengthVariable pulumi.StringPtrOutput `pulumi:"natPrefixLengthVariable"`
	// NAT Pool Range End
	NatRangeEnd pulumi.StringPtrOutput `pulumi:"natRangeEnd"`
	// Variable name
	NatRangeEndVariable pulumi.StringPtrOutput `pulumi:"natRangeEndVariable"`
	// NAT Pool Range Start
	NatRangeStart pulumi.StringPtrOutput `pulumi:"natRangeStart"`
	// Variable name
	NatRangeStartVariable pulumi.StringPtrOutput `pulumi:"natRangeStartVariable"`
	// Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
	NatTcpTimeout pulumi.IntPtrOutput `pulumi:"natTcpTimeout"`
	// Variable name
	NatTcpTimeoutVariable pulumi.StringPtrOutput `pulumi:"natTcpTimeoutVariable"`
	// NAT Type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
	NatType pulumi.StringPtrOutput `pulumi:"natType"`
	// Variable name
	NatTypeVariable pulumi.StringPtrOutput `pulumi:"natTypeVariable"`
	// Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
	NatUdpTimeout pulumi.IntPtrOutput `pulumi:"natUdpTimeout"`
	// Variable name
	NatUdpTimeoutVariable pulumi.StringPtrOutput `pulumi:"natUdpTimeoutVariable"`
	// static NAT
	NewStaticNats TransportWanVpnInterfaceEthernetProfileParcelNewStaticNatArrayOutput `pulumi:"newStaticNats"`
	// Per-tunnel Qos - Default value: `false`
	PerTunnelQos pulumi.BoolPtrOutput `pulumi:"perTunnelQos"`
	// Variable name
	PerTunnelQosVariable pulumi.StringPtrOutput `pulumi:"perTunnelQosVariable"`
	// Shaping Rate Downstream - Default value: `false`
	QosAdaptiveBandwidthDownstream pulumi.BoolPtrOutput `pulumi:"qosAdaptiveBandwidthDownstream"`
	// Shaping Rate Upstream - Default value: `false`
	QosAdaptiveBandwidthUpstream pulumi.BoolPtrOutput `pulumi:"qosAdaptiveBandwidthUpstream"`
	// Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
	QosAdaptiveDefaultDownstream pulumi.IntPtrOutput `pulumi:"qosAdaptiveDefaultDownstream"`
	// Variable name
	QosAdaptiveDefaultDownstreamVariable pulumi.StringPtrOutput `pulumi:"qosAdaptiveDefaultDownstreamVariable"`
	// Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
	QosAdaptiveDefaultUpstream pulumi.IntPtrOutput `pulumi:"qosAdaptiveDefaultUpstream"`
	// Variable name
	QosAdaptiveDefaultUpstreamVariable pulumi.StringPtrOutput `pulumi:"qosAdaptiveDefaultUpstreamVariable"`
	// Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMaxDownstream pulumi.IntPtrOutput `pulumi:"qosAdaptiveMaxDownstream"`
	// Variable name
	QosAdaptiveMaxDownstreamVariable pulumi.StringPtrOutput `pulumi:"qosAdaptiveMaxDownstreamVariable"`
	// Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMaxUpstream pulumi.IntPtrOutput `pulumi:"qosAdaptiveMaxUpstream"`
	// Variable name
	QosAdaptiveMaxUpstreamVariable pulumi.StringPtrOutput `pulumi:"qosAdaptiveMaxUpstreamVariable"`
	// Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMinDownstream pulumi.IntPtrOutput `pulumi:"qosAdaptiveMinDownstream"`
	// Variable name
	QosAdaptiveMinDownstreamVariable pulumi.StringPtrOutput `pulumi:"qosAdaptiveMinDownstreamVariable"`
	// Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMinUpstream pulumi.IntPtrOutput `pulumi:"qosAdaptiveMinUpstream"`
	// Variable name
	QosAdaptiveMinUpstreamVariable pulumi.StringPtrOutput `pulumi:"qosAdaptiveMinUpstreamVariable"`
	// Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
	QosAdaptivePeriod pulumi.IntPtrOutput `pulumi:"qosAdaptivePeriod"`
	// Variable name
	QosAdaptivePeriodVariable pulumi.StringPtrOutput `pulumi:"qosAdaptivePeriodVariable"`
	// Shaping Rate (Kbps) - Range: `8`-`100000000`
	QosShapingRate pulumi.IntPtrOutput `pulumi:"qosShapingRate"`
	// Variable name
	QosShapingRateVariable pulumi.StringPtrOutput `pulumi:"qosShapingRateVariable"`
	// Service Provider Name
	ServiceProvider pulumi.StringPtrOutput `pulumi:"serviceProvider"`
	// Variable name
	ServiceProviderVariable pulumi.StringPtrOutput `pulumi:"serviceProviderVariable"`
	// - Default value: `true`
	Shutdown pulumi.BoolPtrOutput `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable pulumi.StringPtrOutput `pulumi:"shutdownVariable"`
	// Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed pulumi.StringPtrOutput `pulumi:"speed"`
	// Variable name
	SpeedVariable pulumi.StringPtrOutput `pulumi:"speedVariable"`
	// static NAT66
	StaticNat66s TransportWanVpnInterfaceEthernetProfileParcelStaticNat66ArrayOutput `pulumi:"staticNat66s"`
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss pulumi.IntPtrOutput `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable pulumi.StringPtrOutput `pulumi:"tcpMssVariable"`
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension pulumi.StringPtrOutput `pulumi:"tlocExtension"`
	// Variable name
	TlocExtensionVariable pulumi.StringPtrOutput `pulumi:"tlocExtensionVariable"`
	// Enable tracker for this interface
	Tracker pulumi.StringPtrOutput `pulumi:"tracker"`
	// Variable name
	TrackerVariable pulumi.StringPtrOutput `pulumi:"trackerVariable"`
	// Transport WAN VPN Profile Parcel ID
	TransportWanVpnProfileParcelId pulumi.StringPtrOutput `pulumi:"transportWanVpnProfileParcelId"`
	// Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
	TunnelBandwidthPercent pulumi.IntPtrOutput `pulumi:"tunnelBandwidthPercent"`
	// Variable name
	TunnelBandwidthPercentVariable pulumi.StringPtrOutput `pulumi:"tunnelBandwidthPercentVariable"`
	// Tunnel Interface on/off - Default value: `false`
	TunnelInterface pulumi.BoolPtrOutput `pulumi:"tunnelInterface"`
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowAll"`
	// Variable name
	TunnelInterfaceAllowAllVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowAllVariable"`
	// Allow/Deny BFD - Default value: `false`
	TunnelInterfaceAllowBfd pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowBfd"`
	// Variable name
	TunnelInterfaceAllowBfdVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowBfdVariable"`
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowBgp"`
	// Variable name
	TunnelInterfaceAllowBgpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowBgpVariable"`
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDbs pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowDbs"`
	// Variable name
	TunnelInterfaceAllowDbsVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowDbsVariable"`
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowDhcp"`
	// Variable name
	TunnelInterfaceAllowDhcpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowDhcpVariable"`
	// Allow/Deny HTTPS - Default value: `true`
	TunnelInterfaceAllowHttps pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowHttps"`
	// Variable name
	TunnelInterfaceAllowHttpsVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowHttpsVariable"`
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowIcmp"`
	// Variable name
	TunnelInterfaceAllowIcmpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowIcmpVariable"`
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowNetconf"`
	// Variable name
	TunnelInterfaceAllowNetconfVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowNetconfVariable"`
	// Allow/Deny NTP - Default value: `true`
	TunnelInterfaceAllowNtp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowNtp"`
	// Variable name
	TunnelInterfaceAllowNtpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowNtpVariable"`
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowOspf"`
	// Variable name
	TunnelInterfaceAllowOspfVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowOspfVariable"`
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowSnmp"`
	// Variable name
	TunnelInterfaceAllowSnmpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowSnmpVariable"`
	// Allow/Deny SSH - Default value: `true`
	TunnelInterfaceAllowSsh pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowSsh"`
	// Variable name
	TunnelInterfaceAllowSshVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowSshVariable"`
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowStun"`
	// Variable name
	TunnelInterfaceAllowStunVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowStunVariable"`
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel pulumi.StringPtrOutput `pulumi:"tunnelInterfaceBindLoopbackTunnel"`
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceBindLoopbackTunnelVariable"`
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceBorder"`
	// Variable name
	TunnelInterfaceBorderVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceBorderVariable"`
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier pulumi.StringPtrOutput `pulumi:"tunnelInterfaceCarrier"`
	// Variable name
	TunnelInterfaceCarrierVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceCarrierVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceClearDontFragment"`
	// Variable name
	TunnelInterfaceClearDontFragmentVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceClearDontFragmentVariable"`
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `mpls`
	TunnelInterfaceColor pulumi.StringPtrOutput `pulumi:"tunnelInterfaceColor"`
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceColorRestrict pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceColorRestrict"`
	// Variable name
	TunnelInterfaceColorRestrictVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceColorRestrictVariable"`
	// Variable name
	TunnelInterfaceColorVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceColorVariable"`
	// CTS SGT Propagation configuration - Default value: `false`
	TunnelInterfaceCtsSgtPropagation pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceCtsSgtPropagation"`
	// Variable name
	TunnelInterfaceCtsSgtPropagationVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceCtsSgtPropagationVariable"`
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations TransportWanVpnInterfaceEthernetProfileParcelTunnelInterfaceEncapsulationArrayOutput `pulumi:"tunnelInterfaceEncapsulations"`
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceExcludeControllerGroupListVariable"`
	// Exclude the following controller groups defined in this list.
	TunnelInterfaceExcludeControllerGroupLists pulumi.IntArrayOutput `pulumi:"tunnelInterfaceExcludeControllerGroupLists"`
	// GRE tunnel destination IP
	TunnelInterfaceGreTunnelDestinationIp pulumi.StringPtrOutput `pulumi:"tunnelInterfaceGreTunnelDestinationIp"`
	// Variable name
	TunnelInterfaceGreTunnelDestinationIpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceGreTunnelDestinationIpVariable"`
	// List of groups - Range: `1`-`4294967295`
	TunnelInterfaceGroups pulumi.IntPtrOutput `pulumi:"tunnelInterfaceGroups"`
	// Variable name
	TunnelInterfaceGroupsVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceGroupsVariable"`
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval pulumi.IntPtrOutput `pulumi:"tunnelInterfaceHelloInterval"`
	// Variable name
	TunnelInterfaceHelloIntervalVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceHelloIntervalVariable"`
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance pulumi.IntPtrOutput `pulumi:"tunnelInterfaceHelloTolerance"`
	// Variable name
	TunnelInterfaceHelloToleranceVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceHelloToleranceVariable"`
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceLastResortCircuit"`
	// Variable name
	TunnelInterfaceLastResortCircuitVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceLastResortCircuitVariable"`
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceLowBandwidthLink"`
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceLowBandwidthLinkVariable"`
	// Maximum Control Connections - Range: `0`-`100`
	TunnelInterfaceMaxControlConnections pulumi.IntPtrOutput `pulumi:"tunnelInterfaceMaxControlConnections"`
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceMaxControlConnectionsVariable"`
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval pulumi.IntPtrOutput `pulumi:"tunnelInterfaceNatRefreshInterval"`
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceNatRefreshIntervalVariable"`
	// Accept and respond to network-prefix-directed broadcasts - Default value: `false`
	TunnelInterfaceNetworkBroadcast pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceNetworkBroadcast"`
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceNetworkBroadcastVariable"`
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop pulumi.BoolPtrOutput `pulumi:"tunnelInterfacePortHop"`
	// Variable name
	TunnelInterfacePortHopVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfacePortHopVariable"`
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss pulumi.IntPtrOutput `pulumi:"tunnelInterfaceTunnelTcpMss"`
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceTunnelTcpMssVariable"`
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceVbondAsStunServer"`
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceVbondAsStunServerVariable"`
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference pulumi.IntPtrOutput `pulumi:"tunnelInterfaceVmanageConnectionPreference"`
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceVmanageConnectionPreferenceVariable"`
	// Set tunnel QoS mode - Choices: `hub`, `spoke`
	TunnelQosMode pulumi.StringPtrOutput `pulumi:"tunnelQosMode"`
	// Variable name
	TunnelQosModeVariable pulumi.StringPtrOutput `pulumi:"tunnelQosModeVariable"`
	// The version of the profile parcel
	Version pulumi.IntOutput `pulumi:"version"`
	// Extend remote TLOC over a GRE tunnel to a local WAN interface
	Xconnect pulumi.StringPtrOutput `pulumi:"xconnect"`
	// Variable name
	XconnectVariable pulumi.StringPtrOutput `pulumi:"xconnectVariable"`
}

// NewTransportWanVpnInterfaceEthernetProfileParcel registers a new resource with the given unique name, arguments, and options.
func NewTransportWanVpnInterfaceEthernetProfileParcel(ctx *pulumi.Context,
	name string, args *TransportWanVpnInterfaceEthernetProfileParcelArgs, opts ...pulumi.ResourceOption) (*TransportWanVpnInterfaceEthernetProfileParcel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransportWanVpnInterfaceEthernetProfileParcel
	err := ctx.RegisterResource("sdwan:index/transportWanVpnInterfaceEthernetProfileParcel:TransportWanVpnInterfaceEthernetProfileParcel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransportWanVpnInterfaceEthernetProfileParcel gets an existing TransportWanVpnInterfaceEthernetProfileParcel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransportWanVpnInterfaceEthernetProfileParcel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransportWanVpnInterfaceEthernetProfileParcelState, opts ...pulumi.ResourceOption) (*TransportWanVpnInterfaceEthernetProfileParcel, error) {
	var resource TransportWanVpnInterfaceEthernetProfileParcel
	err := ctx.ReadResource("sdwan:index/transportWanVpnInterfaceEthernetProfileParcel:TransportWanVpnInterfaceEthernetProfileParcel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransportWanVpnInterfaceEthernetProfileParcel resources.
type transportWanVpnInterfaceEthernetProfileParcelState struct {
	// Adaptive QoS - Default value: `false`
	AdaptiveQos *bool `pulumi:"adaptiveQos"`
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
	ArpTimeout *int `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable *string `pulumi:"arpTimeoutVariable"`
	// Configure ARP entries
	Arps []TransportWanVpnInterfaceEthernetProfileParcelArp `pulumi:"arps"`
	// Interface auto detect bandwidth - Default value: `false`
	AutoDetectBandwidth *bool `pulumi:"autoDetectBandwidth"`
	// Variable name
	AutoDetectBandwidthVariable *string `pulumi:"autoDetectBandwidthVariable"`
	// Link autonegotiation
	Autonegotiate *bool `pulumi:"autonegotiate"`
	// Variable name
	AutonegotiateVariable *string `pulumi:"autonegotiateVariable"`
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthDownstream *int `pulumi:"bandwidthDownstream"`
	// Variable name
	BandwidthDownstreamVariable *string `pulumi:"bandwidthDownstreamVariable"`
	// Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthUpstream *int `pulumi:"bandwidthUpstream"`
	// Variable name
	BandwidthUpstreamVariable *string `pulumi:"bandwidthUpstreamVariable"`
	// Block packets originating from IP address that is not from this source - Default value: `false`
	BlockNonSourceIp *bool `pulumi:"blockNonSourceIp"`
	// Variable name
	BlockNonSourceIpVariable *string `pulumi:"blockNonSourceIpVariable"`
	ConfigDescription        *string `pulumi:"configDescription"`
	// Variable name
	ConfigDescriptionVariable *string `pulumi:"configDescriptionVariable"`
	// The description of the profile parcel
	Description *string `pulumi:"description"`
	// Duplex mode - Choices: `full`, `half`, `auto`
	Duplex *string `pulumi:"duplex"`
	// Variable name
	DuplexVariable *string `pulumi:"duplexVariable"`
	// Enable DHCPv6
	EnableDhcpv6 *bool `pulumi:"enableDhcpv6"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// GRE tunnel source IP
	GreTunnelSourceIp *string `pulumi:"greTunnelSourceIp"`
	// Variable name
	GreTunnelSourceIpVariable *string `pulumi:"greTunnelSourceIpVariable"`
	// ICMP/ICMPv6 Redirect Disable - Default value: `true`
	IcmpRedirectDisable *bool `pulumi:"icmpRedirectDisable"`
	// Variable name
	IcmpRedirectDisableVariable *string `pulumi:"icmpRedirectDisableVariable"`
	InterfaceName               *string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable *string `pulumi:"interfaceNameVariable"`
	// Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
	// Default value: `1500`
	IntrfMtu *int `pulumi:"intrfMtu"`
	// Variable name
	IntrfMtuVariable *string `pulumi:"intrfMtuVariable"`
	// IP Directed-Broadcast - Default value: `false`
	IpDirectedBroadcast *bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable *string `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
	// <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	// Iperf server for auto bandwidth detect
	IperfServer *string `pulumi:"iperfServer"`
	// Variable name
	IperfServerVariable *string `pulumi:"iperfServerVariable"`
	// IP Address
	Ipv4Address *string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable *string `pulumi:"ipv4AddressVariable"`
	// DHCP Distance - Range: `1`-`65536`
	Ipv4DhcpDistance *int `pulumi:"ipv4DhcpDistance"`
	// Variable name
	Ipv4DhcpDistanceVariable *string `pulumi:"ipv4DhcpDistanceVariable"`
	// Variable name
	Ipv4DhcpHelperVariable *string `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP IPv4 helper addresses (min 1, max 8)
	Ipv4DhcpHelpers []string `pulumi:"ipv4DhcpHelpers"`
	// Secondary IpV4 Addresses
	Ipv4SecondaryAddresses []TransportWanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddress `pulumi:"ipv4SecondaryAddresses"`
	// Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	// `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	// `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	// `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	// `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask *string `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable *string `pulumi:"ipv4SubnetMaskVariable"`
	// IPv6 Address Secondary
	Ipv6Address *string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable *string `pulumi:"ipv6AddressVariable"`
	// secondary IPv6 addresses
	Ipv6DhcpSecondaryAddresses []TransportWanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddress `pulumi:"ipv6DhcpSecondaryAddresses"`
	// Static secondary IPv6 addresses
	Ipv6SecondaryAddresses []TransportWanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddress `pulumi:"ipv6SecondaryAddresses"`
	// Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
	LoadInterval *int `pulumi:"loadInterval"`
	// Variable name
	LoadIntervalVariable *string `pulumi:"loadIntervalVariable"`
	// MAC Address
	MacAddress *string `pulumi:"macAddress"`
	// Variable name
	MacAddressVariable *string `pulumi:"macAddressVariable"`
	// Media type - Choices: `auto-select`, `rj45`, `sfp`
	MediaType *string `pulumi:"mediaType"`
	// Variable name
	MediaTypeVariable *string `pulumi:"mediaTypeVariable"`
	// The name of the profile parcel
	Name *string `pulumi:"name"`
	// NAT64 on this interface - Default value: `false`
	Nat64 *bool `pulumi:"nat64"`
	// NAT66 on this interface - Default value: `false`
	Nat66 *bool `pulumi:"nat66"`
	// enable Network Address Translation on this interface - Default value: `false`
	NatIpv4 *bool `pulumi:"natIpv4"`
	// Variable name
	NatIpv4Variable *string `pulumi:"natIpv4Variable"`
	// enable Network Address Translation ipv6 on this interface - Default value: `false`
	NatIpv6 *bool `pulumi:"natIpv6"`
	// Variable name
	NatIpv6Variable *string `pulumi:"natIpv6Variable"`
	// NAT Inside Source Loopback Interface
	NatLoopback *string `pulumi:"natLoopback"`
	// Variable name
	NatLoopbackVariable *string `pulumi:"natLoopbackVariable"`
	// NAT Overload - Default value: `true`
	NatOverload *bool `pulumi:"natOverload"`
	// Variable name
	NatOverloadVariable *string `pulumi:"natOverloadVariable"`
	// NAT Pool Prefix Length - Range: `1`-`32`
	NatPrefixLength *int `pulumi:"natPrefixLength"`
	// Variable name
	NatPrefixLengthVariable *string `pulumi:"natPrefixLengthVariable"`
	// NAT Pool Range End
	NatRangeEnd *string `pulumi:"natRangeEnd"`
	// Variable name
	NatRangeEndVariable *string `pulumi:"natRangeEndVariable"`
	// NAT Pool Range Start
	NatRangeStart *string `pulumi:"natRangeStart"`
	// Variable name
	NatRangeStartVariable *string `pulumi:"natRangeStartVariable"`
	// Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
	NatTcpTimeout *int `pulumi:"natTcpTimeout"`
	// Variable name
	NatTcpTimeoutVariable *string `pulumi:"natTcpTimeoutVariable"`
	// NAT Type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
	NatType *string `pulumi:"natType"`
	// Variable name
	NatTypeVariable *string `pulumi:"natTypeVariable"`
	// Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
	NatUdpTimeout *int `pulumi:"natUdpTimeout"`
	// Variable name
	NatUdpTimeoutVariable *string `pulumi:"natUdpTimeoutVariable"`
	// static NAT
	NewStaticNats []TransportWanVpnInterfaceEthernetProfileParcelNewStaticNat `pulumi:"newStaticNats"`
	// Per-tunnel Qos - Default value: `false`
	PerTunnelQos *bool `pulumi:"perTunnelQos"`
	// Variable name
	PerTunnelQosVariable *string `pulumi:"perTunnelQosVariable"`
	// Shaping Rate Downstream - Default value: `false`
	QosAdaptiveBandwidthDownstream *bool `pulumi:"qosAdaptiveBandwidthDownstream"`
	// Shaping Rate Upstream - Default value: `false`
	QosAdaptiveBandwidthUpstream *bool `pulumi:"qosAdaptiveBandwidthUpstream"`
	// Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
	QosAdaptiveDefaultDownstream *int `pulumi:"qosAdaptiveDefaultDownstream"`
	// Variable name
	QosAdaptiveDefaultDownstreamVariable *string `pulumi:"qosAdaptiveDefaultDownstreamVariable"`
	// Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
	QosAdaptiveDefaultUpstream *int `pulumi:"qosAdaptiveDefaultUpstream"`
	// Variable name
	QosAdaptiveDefaultUpstreamVariable *string `pulumi:"qosAdaptiveDefaultUpstreamVariable"`
	// Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMaxDownstream *int `pulumi:"qosAdaptiveMaxDownstream"`
	// Variable name
	QosAdaptiveMaxDownstreamVariable *string `pulumi:"qosAdaptiveMaxDownstreamVariable"`
	// Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMaxUpstream *int `pulumi:"qosAdaptiveMaxUpstream"`
	// Variable name
	QosAdaptiveMaxUpstreamVariable *string `pulumi:"qosAdaptiveMaxUpstreamVariable"`
	// Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMinDownstream *int `pulumi:"qosAdaptiveMinDownstream"`
	// Variable name
	QosAdaptiveMinDownstreamVariable *string `pulumi:"qosAdaptiveMinDownstreamVariable"`
	// Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMinUpstream *int `pulumi:"qosAdaptiveMinUpstream"`
	// Variable name
	QosAdaptiveMinUpstreamVariable *string `pulumi:"qosAdaptiveMinUpstreamVariable"`
	// Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
	QosAdaptivePeriod *int `pulumi:"qosAdaptivePeriod"`
	// Variable name
	QosAdaptivePeriodVariable *string `pulumi:"qosAdaptivePeriodVariable"`
	// Shaping Rate (Kbps) - Range: `8`-`100000000`
	QosShapingRate *int `pulumi:"qosShapingRate"`
	// Variable name
	QosShapingRateVariable *string `pulumi:"qosShapingRateVariable"`
	// Service Provider Name
	ServiceProvider *string `pulumi:"serviceProvider"`
	// Variable name
	ServiceProviderVariable *string `pulumi:"serviceProviderVariable"`
	// - Default value: `true`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed *string `pulumi:"speed"`
	// Variable name
	SpeedVariable *string `pulumi:"speedVariable"`
	// static NAT66
	StaticNat66s []TransportWanVpnInterfaceEthernetProfileParcelStaticNat66 `pulumi:"staticNat66s"`
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss *int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable *string `pulumi:"tcpMssVariable"`
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension *string `pulumi:"tlocExtension"`
	// Variable name
	TlocExtensionVariable *string `pulumi:"tlocExtensionVariable"`
	// Enable tracker for this interface
	Tracker *string `pulumi:"tracker"`
	// Variable name
	TrackerVariable *string `pulumi:"trackerVariable"`
	// Transport WAN VPN Profile Parcel ID
	TransportWanVpnProfileParcelId *string `pulumi:"transportWanVpnProfileParcelId"`
	// Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
	TunnelBandwidthPercent *int `pulumi:"tunnelBandwidthPercent"`
	// Variable name
	TunnelBandwidthPercentVariable *string `pulumi:"tunnelBandwidthPercentVariable"`
	// Tunnel Interface on/off - Default value: `false`
	TunnelInterface *bool `pulumi:"tunnelInterface"`
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll *bool `pulumi:"tunnelInterfaceAllowAll"`
	// Variable name
	TunnelInterfaceAllowAllVariable *string `pulumi:"tunnelInterfaceAllowAllVariable"`
	// Allow/Deny BFD - Default value: `false`
	TunnelInterfaceAllowBfd *bool `pulumi:"tunnelInterfaceAllowBfd"`
	// Variable name
	TunnelInterfaceAllowBfdVariable *string `pulumi:"tunnelInterfaceAllowBfdVariable"`
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp *bool `pulumi:"tunnelInterfaceAllowBgp"`
	// Variable name
	TunnelInterfaceAllowBgpVariable *string `pulumi:"tunnelInterfaceAllowBgpVariable"`
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDbs *bool `pulumi:"tunnelInterfaceAllowDbs"`
	// Variable name
	TunnelInterfaceAllowDbsVariable *string `pulumi:"tunnelInterfaceAllowDbsVariable"`
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp *bool `pulumi:"tunnelInterfaceAllowDhcp"`
	// Variable name
	TunnelInterfaceAllowDhcpVariable *string `pulumi:"tunnelInterfaceAllowDhcpVariable"`
	// Allow/Deny HTTPS - Default value: `true`
	TunnelInterfaceAllowHttps *bool `pulumi:"tunnelInterfaceAllowHttps"`
	// Variable name
	TunnelInterfaceAllowHttpsVariable *string `pulumi:"tunnelInterfaceAllowHttpsVariable"`
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp *bool `pulumi:"tunnelInterfaceAllowIcmp"`
	// Variable name
	TunnelInterfaceAllowIcmpVariable *string `pulumi:"tunnelInterfaceAllowIcmpVariable"`
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf *bool `pulumi:"tunnelInterfaceAllowNetconf"`
	// Variable name
	TunnelInterfaceAllowNetconfVariable *string `pulumi:"tunnelInterfaceAllowNetconfVariable"`
	// Allow/Deny NTP - Default value: `true`
	TunnelInterfaceAllowNtp *bool `pulumi:"tunnelInterfaceAllowNtp"`
	// Variable name
	TunnelInterfaceAllowNtpVariable *string `pulumi:"tunnelInterfaceAllowNtpVariable"`
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf *bool `pulumi:"tunnelInterfaceAllowOspf"`
	// Variable name
	TunnelInterfaceAllowOspfVariable *string `pulumi:"tunnelInterfaceAllowOspfVariable"`
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp *bool `pulumi:"tunnelInterfaceAllowSnmp"`
	// Variable name
	TunnelInterfaceAllowSnmpVariable *string `pulumi:"tunnelInterfaceAllowSnmpVariable"`
	// Allow/Deny SSH - Default value: `true`
	TunnelInterfaceAllowSsh *bool `pulumi:"tunnelInterfaceAllowSsh"`
	// Variable name
	TunnelInterfaceAllowSshVariable *string `pulumi:"tunnelInterfaceAllowSshVariable"`
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun *bool `pulumi:"tunnelInterfaceAllowStun"`
	// Variable name
	TunnelInterfaceAllowStunVariable *string `pulumi:"tunnelInterfaceAllowStunVariable"`
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel *string `pulumi:"tunnelInterfaceBindLoopbackTunnel"`
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable *string `pulumi:"tunnelInterfaceBindLoopbackTunnelVariable"`
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder *bool `pulumi:"tunnelInterfaceBorder"`
	// Variable name
	TunnelInterfaceBorderVariable *string `pulumi:"tunnelInterfaceBorderVariable"`
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier *string `pulumi:"tunnelInterfaceCarrier"`
	// Variable name
	TunnelInterfaceCarrierVariable *string `pulumi:"tunnelInterfaceCarrierVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment *bool `pulumi:"tunnelInterfaceClearDontFragment"`
	// Variable name
	TunnelInterfaceClearDontFragmentVariable *string `pulumi:"tunnelInterfaceClearDontFragmentVariable"`
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `mpls`
	TunnelInterfaceColor *string `pulumi:"tunnelInterfaceColor"`
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceColorRestrict *bool `pulumi:"tunnelInterfaceColorRestrict"`
	// Variable name
	TunnelInterfaceColorRestrictVariable *string `pulumi:"tunnelInterfaceColorRestrictVariable"`
	// Variable name
	TunnelInterfaceColorVariable *string `pulumi:"tunnelInterfaceColorVariable"`
	// CTS SGT Propagation configuration - Default value: `false`
	TunnelInterfaceCtsSgtPropagation *bool `pulumi:"tunnelInterfaceCtsSgtPropagation"`
	// Variable name
	TunnelInterfaceCtsSgtPropagationVariable *string `pulumi:"tunnelInterfaceCtsSgtPropagationVariable"`
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations []TransportWanVpnInterfaceEthernetProfileParcelTunnelInterfaceEncapsulation `pulumi:"tunnelInterfaceEncapsulations"`
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable *string `pulumi:"tunnelInterfaceExcludeControllerGroupListVariable"`
	// Exclude the following controller groups defined in this list.
	TunnelInterfaceExcludeControllerGroupLists []int `pulumi:"tunnelInterfaceExcludeControllerGroupLists"`
	// GRE tunnel destination IP
	TunnelInterfaceGreTunnelDestinationIp *string `pulumi:"tunnelInterfaceGreTunnelDestinationIp"`
	// Variable name
	TunnelInterfaceGreTunnelDestinationIpVariable *string `pulumi:"tunnelInterfaceGreTunnelDestinationIpVariable"`
	// List of groups - Range: `1`-`4294967295`
	TunnelInterfaceGroups *int `pulumi:"tunnelInterfaceGroups"`
	// Variable name
	TunnelInterfaceGroupsVariable *string `pulumi:"tunnelInterfaceGroupsVariable"`
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval *int `pulumi:"tunnelInterfaceHelloInterval"`
	// Variable name
	TunnelInterfaceHelloIntervalVariable *string `pulumi:"tunnelInterfaceHelloIntervalVariable"`
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance *int `pulumi:"tunnelInterfaceHelloTolerance"`
	// Variable name
	TunnelInterfaceHelloToleranceVariable *string `pulumi:"tunnelInterfaceHelloToleranceVariable"`
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit *bool `pulumi:"tunnelInterfaceLastResortCircuit"`
	// Variable name
	TunnelInterfaceLastResortCircuitVariable *string `pulumi:"tunnelInterfaceLastResortCircuitVariable"`
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink *bool `pulumi:"tunnelInterfaceLowBandwidthLink"`
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable *string `pulumi:"tunnelInterfaceLowBandwidthLinkVariable"`
	// Maximum Control Connections - Range: `0`-`100`
	TunnelInterfaceMaxControlConnections *int `pulumi:"tunnelInterfaceMaxControlConnections"`
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable *string `pulumi:"tunnelInterfaceMaxControlConnectionsVariable"`
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval *int `pulumi:"tunnelInterfaceNatRefreshInterval"`
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable *string `pulumi:"tunnelInterfaceNatRefreshIntervalVariable"`
	// Accept and respond to network-prefix-directed broadcasts - Default value: `false`
	TunnelInterfaceNetworkBroadcast *bool `pulumi:"tunnelInterfaceNetworkBroadcast"`
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable *string `pulumi:"tunnelInterfaceNetworkBroadcastVariable"`
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop *bool `pulumi:"tunnelInterfacePortHop"`
	// Variable name
	TunnelInterfacePortHopVariable *string `pulumi:"tunnelInterfacePortHopVariable"`
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss *int `pulumi:"tunnelInterfaceTunnelTcpMss"`
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable *string `pulumi:"tunnelInterfaceTunnelTcpMssVariable"`
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer *bool `pulumi:"tunnelInterfaceVbondAsStunServer"`
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable *string `pulumi:"tunnelInterfaceVbondAsStunServerVariable"`
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference *int `pulumi:"tunnelInterfaceVmanageConnectionPreference"`
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable *string `pulumi:"tunnelInterfaceVmanageConnectionPreferenceVariable"`
	// Set tunnel QoS mode - Choices: `hub`, `spoke`
	TunnelQosMode *string `pulumi:"tunnelQosMode"`
	// Variable name
	TunnelQosModeVariable *string `pulumi:"tunnelQosModeVariable"`
	// The version of the profile parcel
	Version *int `pulumi:"version"`
	// Extend remote TLOC over a GRE tunnel to a local WAN interface
	Xconnect *string `pulumi:"xconnect"`
	// Variable name
	XconnectVariable *string `pulumi:"xconnectVariable"`
}

type TransportWanVpnInterfaceEthernetProfileParcelState struct {
	// Adaptive QoS - Default value: `false`
	AdaptiveQos pulumi.BoolPtrInput
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
	ArpTimeout pulumi.IntPtrInput
	// Variable name
	ArpTimeoutVariable pulumi.StringPtrInput
	// Configure ARP entries
	Arps TransportWanVpnInterfaceEthernetProfileParcelArpArrayInput
	// Interface auto detect bandwidth - Default value: `false`
	AutoDetectBandwidth pulumi.BoolPtrInput
	// Variable name
	AutoDetectBandwidthVariable pulumi.StringPtrInput
	// Link autonegotiation
	Autonegotiate pulumi.BoolPtrInput
	// Variable name
	AutonegotiateVariable pulumi.StringPtrInput
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthDownstream pulumi.IntPtrInput
	// Variable name
	BandwidthDownstreamVariable pulumi.StringPtrInput
	// Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthUpstream pulumi.IntPtrInput
	// Variable name
	BandwidthUpstreamVariable pulumi.StringPtrInput
	// Block packets originating from IP address that is not from this source - Default value: `false`
	BlockNonSourceIp pulumi.BoolPtrInput
	// Variable name
	BlockNonSourceIpVariable pulumi.StringPtrInput
	ConfigDescription        pulumi.StringPtrInput
	// Variable name
	ConfigDescriptionVariable pulumi.StringPtrInput
	// The description of the profile parcel
	Description pulumi.StringPtrInput
	// Duplex mode - Choices: `full`, `half`, `auto`
	Duplex pulumi.StringPtrInput
	// Variable name
	DuplexVariable pulumi.StringPtrInput
	// Enable DHCPv6
	EnableDhcpv6 pulumi.BoolPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// GRE tunnel source IP
	GreTunnelSourceIp pulumi.StringPtrInput
	// Variable name
	GreTunnelSourceIpVariable pulumi.StringPtrInput
	// ICMP/ICMPv6 Redirect Disable - Default value: `true`
	IcmpRedirectDisable pulumi.BoolPtrInput
	// Variable name
	IcmpRedirectDisableVariable pulumi.StringPtrInput
	InterfaceName               pulumi.StringPtrInput
	// Variable name
	InterfaceNameVariable pulumi.StringPtrInput
	// Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
	// Default value: `1500`
	IntrfMtu pulumi.IntPtrInput
	// Variable name
	IntrfMtuVariable pulumi.StringPtrInput
	// IP Directed-Broadcast - Default value: `false`
	IpDirectedBroadcast pulumi.BoolPtrInput
	// Variable name
	IpDirectedBroadcastVariable pulumi.StringPtrInput
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
	// <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	// Iperf server for auto bandwidth detect
	IperfServer pulumi.StringPtrInput
	// Variable name
	IperfServerVariable pulumi.StringPtrInput
	// IP Address
	Ipv4Address pulumi.StringPtrInput
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrInput
	// DHCP Distance - Range: `1`-`65536`
	Ipv4DhcpDistance pulumi.IntPtrInput
	// Variable name
	Ipv4DhcpDistanceVariable pulumi.StringPtrInput
	// Variable name
	Ipv4DhcpHelperVariable pulumi.StringPtrInput
	// List of DHCP IPv4 helper addresses (min 1, max 8)
	Ipv4DhcpHelpers pulumi.StringArrayInput
	// Secondary IpV4 Addresses
	Ipv4SecondaryAddresses TransportWanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArrayInput
	// Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	// `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	// `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	// `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	// `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrInput
	// Variable name
	Ipv4SubnetMaskVariable pulumi.StringPtrInput
	// IPv6 Address Secondary
	Ipv6Address pulumi.StringPtrInput
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrInput
	// secondary IPv6 addresses
	Ipv6DhcpSecondaryAddresses TransportWanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArrayInput
	// Static secondary IPv6 addresses
	Ipv6SecondaryAddresses TransportWanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArrayInput
	// Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
	LoadInterval pulumi.IntPtrInput
	// Variable name
	LoadIntervalVariable pulumi.StringPtrInput
	// MAC Address
	MacAddress pulumi.StringPtrInput
	// Variable name
	MacAddressVariable pulumi.StringPtrInput
	// Media type - Choices: `auto-select`, `rj45`, `sfp`
	MediaType pulumi.StringPtrInput
	// Variable name
	MediaTypeVariable pulumi.StringPtrInput
	// The name of the profile parcel
	Name pulumi.StringPtrInput
	// NAT64 on this interface - Default value: `false`
	Nat64 pulumi.BoolPtrInput
	// NAT66 on this interface - Default value: `false`
	Nat66 pulumi.BoolPtrInput
	// enable Network Address Translation on this interface - Default value: `false`
	NatIpv4 pulumi.BoolPtrInput
	// Variable name
	NatIpv4Variable pulumi.StringPtrInput
	// enable Network Address Translation ipv6 on this interface - Default value: `false`
	NatIpv6 pulumi.BoolPtrInput
	// Variable name
	NatIpv6Variable pulumi.StringPtrInput
	// NAT Inside Source Loopback Interface
	NatLoopback pulumi.StringPtrInput
	// Variable name
	NatLoopbackVariable pulumi.StringPtrInput
	// NAT Overload - Default value: `true`
	NatOverload pulumi.BoolPtrInput
	// Variable name
	NatOverloadVariable pulumi.StringPtrInput
	// NAT Pool Prefix Length - Range: `1`-`32`
	NatPrefixLength pulumi.IntPtrInput
	// Variable name
	NatPrefixLengthVariable pulumi.StringPtrInput
	// NAT Pool Range End
	NatRangeEnd pulumi.StringPtrInput
	// Variable name
	NatRangeEndVariable pulumi.StringPtrInput
	// NAT Pool Range Start
	NatRangeStart pulumi.StringPtrInput
	// Variable name
	NatRangeStartVariable pulumi.StringPtrInput
	// Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
	NatTcpTimeout pulumi.IntPtrInput
	// Variable name
	NatTcpTimeoutVariable pulumi.StringPtrInput
	// NAT Type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
	NatType pulumi.StringPtrInput
	// Variable name
	NatTypeVariable pulumi.StringPtrInput
	// Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
	NatUdpTimeout pulumi.IntPtrInput
	// Variable name
	NatUdpTimeoutVariable pulumi.StringPtrInput
	// static NAT
	NewStaticNats TransportWanVpnInterfaceEthernetProfileParcelNewStaticNatArrayInput
	// Per-tunnel Qos - Default value: `false`
	PerTunnelQos pulumi.BoolPtrInput
	// Variable name
	PerTunnelQosVariable pulumi.StringPtrInput
	// Shaping Rate Downstream - Default value: `false`
	QosAdaptiveBandwidthDownstream pulumi.BoolPtrInput
	// Shaping Rate Upstream - Default value: `false`
	QosAdaptiveBandwidthUpstream pulumi.BoolPtrInput
	// Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
	QosAdaptiveDefaultDownstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveDefaultDownstreamVariable pulumi.StringPtrInput
	// Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
	QosAdaptiveDefaultUpstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveDefaultUpstreamVariable pulumi.StringPtrInput
	// Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMaxDownstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveMaxDownstreamVariable pulumi.StringPtrInput
	// Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMaxUpstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveMaxUpstreamVariable pulumi.StringPtrInput
	// Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMinDownstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveMinDownstreamVariable pulumi.StringPtrInput
	// Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMinUpstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveMinUpstreamVariable pulumi.StringPtrInput
	// Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
	QosAdaptivePeriod pulumi.IntPtrInput
	// Variable name
	QosAdaptivePeriodVariable pulumi.StringPtrInput
	// Shaping Rate (Kbps) - Range: `8`-`100000000`
	QosShapingRate pulumi.IntPtrInput
	// Variable name
	QosShapingRateVariable pulumi.StringPtrInput
	// Service Provider Name
	ServiceProvider pulumi.StringPtrInput
	// Variable name
	ServiceProviderVariable pulumi.StringPtrInput
	// - Default value: `true`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed pulumi.StringPtrInput
	// Variable name
	SpeedVariable pulumi.StringPtrInput
	// static NAT66
	StaticNat66s TransportWanVpnInterfaceEthernetProfileParcelStaticNat66ArrayInput
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss pulumi.IntPtrInput
	// Variable name
	TcpMssVariable pulumi.StringPtrInput
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension pulumi.StringPtrInput
	// Variable name
	TlocExtensionVariable pulumi.StringPtrInput
	// Enable tracker for this interface
	Tracker pulumi.StringPtrInput
	// Variable name
	TrackerVariable pulumi.StringPtrInput
	// Transport WAN VPN Profile Parcel ID
	TransportWanVpnProfileParcelId pulumi.StringPtrInput
	// Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
	TunnelBandwidthPercent pulumi.IntPtrInput
	// Variable name
	TunnelBandwidthPercentVariable pulumi.StringPtrInput
	// Tunnel Interface on/off - Default value: `false`
	TunnelInterface pulumi.BoolPtrInput
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowAllVariable pulumi.StringPtrInput
	// Allow/Deny BFD - Default value: `false`
	TunnelInterfaceAllowBfd pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowBfdVariable pulumi.StringPtrInput
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowBgpVariable pulumi.StringPtrInput
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDbs pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowDbsVariable pulumi.StringPtrInput
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowDhcpVariable pulumi.StringPtrInput
	// Allow/Deny HTTPS - Default value: `true`
	TunnelInterfaceAllowHttps pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowHttpsVariable pulumi.StringPtrInput
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowIcmpVariable pulumi.StringPtrInput
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowNetconfVariable pulumi.StringPtrInput
	// Allow/Deny NTP - Default value: `true`
	TunnelInterfaceAllowNtp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowNtpVariable pulumi.StringPtrInput
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowOspfVariable pulumi.StringPtrInput
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowSnmpVariable pulumi.StringPtrInput
	// Allow/Deny SSH - Default value: `true`
	TunnelInterfaceAllowSsh pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowSshVariable pulumi.StringPtrInput
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowStunVariable pulumi.StringPtrInput
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable pulumi.StringPtrInput
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceBorderVariable pulumi.StringPtrInput
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceCarrierVariable pulumi.StringPtrInput
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceClearDontFragmentVariable pulumi.StringPtrInput
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `mpls`
	TunnelInterfaceColor pulumi.StringPtrInput
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceColorRestrict pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceColorRestrictVariable pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceColorVariable pulumi.StringPtrInput
	// CTS SGT Propagation configuration - Default value: `false`
	TunnelInterfaceCtsSgtPropagation pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceCtsSgtPropagationVariable pulumi.StringPtrInput
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations TransportWanVpnInterfaceEthernetProfileParcelTunnelInterfaceEncapsulationArrayInput
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable pulumi.StringPtrInput
	// Exclude the following controller groups defined in this list.
	TunnelInterfaceExcludeControllerGroupLists pulumi.IntArrayInput
	// GRE tunnel destination IP
	TunnelInterfaceGreTunnelDestinationIp pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceGreTunnelDestinationIpVariable pulumi.StringPtrInput
	// List of groups - Range: `1`-`4294967295`
	TunnelInterfaceGroups pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceGroupsVariable pulumi.StringPtrInput
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceHelloIntervalVariable pulumi.StringPtrInput
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceHelloToleranceVariable pulumi.StringPtrInput
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceLastResortCircuitVariable pulumi.StringPtrInput
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable pulumi.StringPtrInput
	// Maximum Control Connections - Range: `0`-`100`
	TunnelInterfaceMaxControlConnections pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable pulumi.StringPtrInput
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable pulumi.StringPtrInput
	// Accept and respond to network-prefix-directed broadcasts - Default value: `false`
	TunnelInterfaceNetworkBroadcast pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable pulumi.StringPtrInput
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop pulumi.BoolPtrInput
	// Variable name
	TunnelInterfacePortHopVariable pulumi.StringPtrInput
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable pulumi.StringPtrInput
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable pulumi.StringPtrInput
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable pulumi.StringPtrInput
	// Set tunnel QoS mode - Choices: `hub`, `spoke`
	TunnelQosMode pulumi.StringPtrInput
	// Variable name
	TunnelQosModeVariable pulumi.StringPtrInput
	// The version of the profile parcel
	Version pulumi.IntPtrInput
	// Extend remote TLOC over a GRE tunnel to a local WAN interface
	Xconnect pulumi.StringPtrInput
	// Variable name
	XconnectVariable pulumi.StringPtrInput
}

func (TransportWanVpnInterfaceEthernetProfileParcelState) ElementType() reflect.Type {
	return reflect.TypeOf((*transportWanVpnInterfaceEthernetProfileParcelState)(nil)).Elem()
}

type transportWanVpnInterfaceEthernetProfileParcelArgs struct {
	// Adaptive QoS - Default value: `false`
	AdaptiveQos *bool `pulumi:"adaptiveQos"`
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
	ArpTimeout *int `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable *string `pulumi:"arpTimeoutVariable"`
	// Configure ARP entries
	Arps []TransportWanVpnInterfaceEthernetProfileParcelArp `pulumi:"arps"`
	// Interface auto detect bandwidth - Default value: `false`
	AutoDetectBandwidth *bool `pulumi:"autoDetectBandwidth"`
	// Variable name
	AutoDetectBandwidthVariable *string `pulumi:"autoDetectBandwidthVariable"`
	// Link autonegotiation
	Autonegotiate *bool `pulumi:"autonegotiate"`
	// Variable name
	AutonegotiateVariable *string `pulumi:"autonegotiateVariable"`
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthDownstream *int `pulumi:"bandwidthDownstream"`
	// Variable name
	BandwidthDownstreamVariable *string `pulumi:"bandwidthDownstreamVariable"`
	// Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthUpstream *int `pulumi:"bandwidthUpstream"`
	// Variable name
	BandwidthUpstreamVariable *string `pulumi:"bandwidthUpstreamVariable"`
	// Block packets originating from IP address that is not from this source - Default value: `false`
	BlockNonSourceIp *bool `pulumi:"blockNonSourceIp"`
	// Variable name
	BlockNonSourceIpVariable *string `pulumi:"blockNonSourceIpVariable"`
	ConfigDescription        *string `pulumi:"configDescription"`
	// Variable name
	ConfigDescriptionVariable *string `pulumi:"configDescriptionVariable"`
	// The description of the profile parcel
	Description *string `pulumi:"description"`
	// Duplex mode - Choices: `full`, `half`, `auto`
	Duplex *string `pulumi:"duplex"`
	// Variable name
	DuplexVariable *string `pulumi:"duplexVariable"`
	// Enable DHCPv6
	EnableDhcpv6 *bool `pulumi:"enableDhcpv6"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// GRE tunnel source IP
	GreTunnelSourceIp *string `pulumi:"greTunnelSourceIp"`
	// Variable name
	GreTunnelSourceIpVariable *string `pulumi:"greTunnelSourceIpVariable"`
	// ICMP/ICMPv6 Redirect Disable - Default value: `true`
	IcmpRedirectDisable *bool `pulumi:"icmpRedirectDisable"`
	// Variable name
	IcmpRedirectDisableVariable *string `pulumi:"icmpRedirectDisableVariable"`
	InterfaceName               *string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable *string `pulumi:"interfaceNameVariable"`
	// Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
	// Default value: `1500`
	IntrfMtu *int `pulumi:"intrfMtu"`
	// Variable name
	IntrfMtuVariable *string `pulumi:"intrfMtuVariable"`
	// IP Directed-Broadcast - Default value: `false`
	IpDirectedBroadcast *bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable *string `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
	// <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	// Iperf server for auto bandwidth detect
	IperfServer *string `pulumi:"iperfServer"`
	// Variable name
	IperfServerVariable *string `pulumi:"iperfServerVariable"`
	// IP Address
	Ipv4Address *string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable *string `pulumi:"ipv4AddressVariable"`
	// DHCP Distance - Range: `1`-`65536`
	Ipv4DhcpDistance *int `pulumi:"ipv4DhcpDistance"`
	// Variable name
	Ipv4DhcpDistanceVariable *string `pulumi:"ipv4DhcpDistanceVariable"`
	// Variable name
	Ipv4DhcpHelperVariable *string `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP IPv4 helper addresses (min 1, max 8)
	Ipv4DhcpHelpers []string `pulumi:"ipv4DhcpHelpers"`
	// Secondary IpV4 Addresses
	Ipv4SecondaryAddresses []TransportWanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddress `pulumi:"ipv4SecondaryAddresses"`
	// Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	// `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	// `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	// `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	// `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask *string `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable *string `pulumi:"ipv4SubnetMaskVariable"`
	// IPv6 Address Secondary
	Ipv6Address *string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable *string `pulumi:"ipv6AddressVariable"`
	// secondary IPv6 addresses
	Ipv6DhcpSecondaryAddresses []TransportWanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddress `pulumi:"ipv6DhcpSecondaryAddresses"`
	// Static secondary IPv6 addresses
	Ipv6SecondaryAddresses []TransportWanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddress `pulumi:"ipv6SecondaryAddresses"`
	// Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
	LoadInterval *int `pulumi:"loadInterval"`
	// Variable name
	LoadIntervalVariable *string `pulumi:"loadIntervalVariable"`
	// MAC Address
	MacAddress *string `pulumi:"macAddress"`
	// Variable name
	MacAddressVariable *string `pulumi:"macAddressVariable"`
	// Media type - Choices: `auto-select`, `rj45`, `sfp`
	MediaType *string `pulumi:"mediaType"`
	// Variable name
	MediaTypeVariable *string `pulumi:"mediaTypeVariable"`
	// The name of the profile parcel
	Name *string `pulumi:"name"`
	// NAT64 on this interface - Default value: `false`
	Nat64 *bool `pulumi:"nat64"`
	// NAT66 on this interface - Default value: `false`
	Nat66 *bool `pulumi:"nat66"`
	// enable Network Address Translation on this interface - Default value: `false`
	NatIpv4 *bool `pulumi:"natIpv4"`
	// Variable name
	NatIpv4Variable *string `pulumi:"natIpv4Variable"`
	// enable Network Address Translation ipv6 on this interface - Default value: `false`
	NatIpv6 *bool `pulumi:"natIpv6"`
	// Variable name
	NatIpv6Variable *string `pulumi:"natIpv6Variable"`
	// NAT Inside Source Loopback Interface
	NatLoopback *string `pulumi:"natLoopback"`
	// Variable name
	NatLoopbackVariable *string `pulumi:"natLoopbackVariable"`
	// NAT Overload - Default value: `true`
	NatOverload *bool `pulumi:"natOverload"`
	// Variable name
	NatOverloadVariable *string `pulumi:"natOverloadVariable"`
	// NAT Pool Prefix Length - Range: `1`-`32`
	NatPrefixLength *int `pulumi:"natPrefixLength"`
	// Variable name
	NatPrefixLengthVariable *string `pulumi:"natPrefixLengthVariable"`
	// NAT Pool Range End
	NatRangeEnd *string `pulumi:"natRangeEnd"`
	// Variable name
	NatRangeEndVariable *string `pulumi:"natRangeEndVariable"`
	// NAT Pool Range Start
	NatRangeStart *string `pulumi:"natRangeStart"`
	// Variable name
	NatRangeStartVariable *string `pulumi:"natRangeStartVariable"`
	// Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
	NatTcpTimeout *int `pulumi:"natTcpTimeout"`
	// Variable name
	NatTcpTimeoutVariable *string `pulumi:"natTcpTimeoutVariable"`
	// NAT Type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
	NatType *string `pulumi:"natType"`
	// Variable name
	NatTypeVariable *string `pulumi:"natTypeVariable"`
	// Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
	NatUdpTimeout *int `pulumi:"natUdpTimeout"`
	// Variable name
	NatUdpTimeoutVariable *string `pulumi:"natUdpTimeoutVariable"`
	// static NAT
	NewStaticNats []TransportWanVpnInterfaceEthernetProfileParcelNewStaticNat `pulumi:"newStaticNats"`
	// Per-tunnel Qos - Default value: `false`
	PerTunnelQos *bool `pulumi:"perTunnelQos"`
	// Variable name
	PerTunnelQosVariable *string `pulumi:"perTunnelQosVariable"`
	// Shaping Rate Downstream - Default value: `false`
	QosAdaptiveBandwidthDownstream *bool `pulumi:"qosAdaptiveBandwidthDownstream"`
	// Shaping Rate Upstream - Default value: `false`
	QosAdaptiveBandwidthUpstream *bool `pulumi:"qosAdaptiveBandwidthUpstream"`
	// Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
	QosAdaptiveDefaultDownstream *int `pulumi:"qosAdaptiveDefaultDownstream"`
	// Variable name
	QosAdaptiveDefaultDownstreamVariable *string `pulumi:"qosAdaptiveDefaultDownstreamVariable"`
	// Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
	QosAdaptiveDefaultUpstream *int `pulumi:"qosAdaptiveDefaultUpstream"`
	// Variable name
	QosAdaptiveDefaultUpstreamVariable *string `pulumi:"qosAdaptiveDefaultUpstreamVariable"`
	// Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMaxDownstream *int `pulumi:"qosAdaptiveMaxDownstream"`
	// Variable name
	QosAdaptiveMaxDownstreamVariable *string `pulumi:"qosAdaptiveMaxDownstreamVariable"`
	// Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMaxUpstream *int `pulumi:"qosAdaptiveMaxUpstream"`
	// Variable name
	QosAdaptiveMaxUpstreamVariable *string `pulumi:"qosAdaptiveMaxUpstreamVariable"`
	// Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMinDownstream *int `pulumi:"qosAdaptiveMinDownstream"`
	// Variable name
	QosAdaptiveMinDownstreamVariable *string `pulumi:"qosAdaptiveMinDownstreamVariable"`
	// Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMinUpstream *int `pulumi:"qosAdaptiveMinUpstream"`
	// Variable name
	QosAdaptiveMinUpstreamVariable *string `pulumi:"qosAdaptiveMinUpstreamVariable"`
	// Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
	QosAdaptivePeriod *int `pulumi:"qosAdaptivePeriod"`
	// Variable name
	QosAdaptivePeriodVariable *string `pulumi:"qosAdaptivePeriodVariable"`
	// Shaping Rate (Kbps) - Range: `8`-`100000000`
	QosShapingRate *int `pulumi:"qosShapingRate"`
	// Variable name
	QosShapingRateVariable *string `pulumi:"qosShapingRateVariable"`
	// Service Provider Name
	ServiceProvider *string `pulumi:"serviceProvider"`
	// Variable name
	ServiceProviderVariable *string `pulumi:"serviceProviderVariable"`
	// - Default value: `true`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed *string `pulumi:"speed"`
	// Variable name
	SpeedVariable *string `pulumi:"speedVariable"`
	// static NAT66
	StaticNat66s []TransportWanVpnInterfaceEthernetProfileParcelStaticNat66 `pulumi:"staticNat66s"`
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss *int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable *string `pulumi:"tcpMssVariable"`
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension *string `pulumi:"tlocExtension"`
	// Variable name
	TlocExtensionVariable *string `pulumi:"tlocExtensionVariable"`
	// Enable tracker for this interface
	Tracker *string `pulumi:"tracker"`
	// Variable name
	TrackerVariable *string `pulumi:"trackerVariable"`
	// Transport WAN VPN Profile Parcel ID
	TransportWanVpnProfileParcelId *string `pulumi:"transportWanVpnProfileParcelId"`
	// Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
	TunnelBandwidthPercent *int `pulumi:"tunnelBandwidthPercent"`
	// Variable name
	TunnelBandwidthPercentVariable *string `pulumi:"tunnelBandwidthPercentVariable"`
	// Tunnel Interface on/off - Default value: `false`
	TunnelInterface *bool `pulumi:"tunnelInterface"`
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll *bool `pulumi:"tunnelInterfaceAllowAll"`
	// Variable name
	TunnelInterfaceAllowAllVariable *string `pulumi:"tunnelInterfaceAllowAllVariable"`
	// Allow/Deny BFD - Default value: `false`
	TunnelInterfaceAllowBfd *bool `pulumi:"tunnelInterfaceAllowBfd"`
	// Variable name
	TunnelInterfaceAllowBfdVariable *string `pulumi:"tunnelInterfaceAllowBfdVariable"`
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp *bool `pulumi:"tunnelInterfaceAllowBgp"`
	// Variable name
	TunnelInterfaceAllowBgpVariable *string `pulumi:"tunnelInterfaceAllowBgpVariable"`
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDbs *bool `pulumi:"tunnelInterfaceAllowDbs"`
	// Variable name
	TunnelInterfaceAllowDbsVariable *string `pulumi:"tunnelInterfaceAllowDbsVariable"`
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp *bool `pulumi:"tunnelInterfaceAllowDhcp"`
	// Variable name
	TunnelInterfaceAllowDhcpVariable *string `pulumi:"tunnelInterfaceAllowDhcpVariable"`
	// Allow/Deny HTTPS - Default value: `true`
	TunnelInterfaceAllowHttps *bool `pulumi:"tunnelInterfaceAllowHttps"`
	// Variable name
	TunnelInterfaceAllowHttpsVariable *string `pulumi:"tunnelInterfaceAllowHttpsVariable"`
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp *bool `pulumi:"tunnelInterfaceAllowIcmp"`
	// Variable name
	TunnelInterfaceAllowIcmpVariable *string `pulumi:"tunnelInterfaceAllowIcmpVariable"`
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf *bool `pulumi:"tunnelInterfaceAllowNetconf"`
	// Variable name
	TunnelInterfaceAllowNetconfVariable *string `pulumi:"tunnelInterfaceAllowNetconfVariable"`
	// Allow/Deny NTP - Default value: `true`
	TunnelInterfaceAllowNtp *bool `pulumi:"tunnelInterfaceAllowNtp"`
	// Variable name
	TunnelInterfaceAllowNtpVariable *string `pulumi:"tunnelInterfaceAllowNtpVariable"`
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf *bool `pulumi:"tunnelInterfaceAllowOspf"`
	// Variable name
	TunnelInterfaceAllowOspfVariable *string `pulumi:"tunnelInterfaceAllowOspfVariable"`
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp *bool `pulumi:"tunnelInterfaceAllowSnmp"`
	// Variable name
	TunnelInterfaceAllowSnmpVariable *string `pulumi:"tunnelInterfaceAllowSnmpVariable"`
	// Allow/Deny SSH - Default value: `true`
	TunnelInterfaceAllowSsh *bool `pulumi:"tunnelInterfaceAllowSsh"`
	// Variable name
	TunnelInterfaceAllowSshVariable *string `pulumi:"tunnelInterfaceAllowSshVariable"`
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun *bool `pulumi:"tunnelInterfaceAllowStun"`
	// Variable name
	TunnelInterfaceAllowStunVariable *string `pulumi:"tunnelInterfaceAllowStunVariable"`
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel *string `pulumi:"tunnelInterfaceBindLoopbackTunnel"`
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable *string `pulumi:"tunnelInterfaceBindLoopbackTunnelVariable"`
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder *bool `pulumi:"tunnelInterfaceBorder"`
	// Variable name
	TunnelInterfaceBorderVariable *string `pulumi:"tunnelInterfaceBorderVariable"`
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier *string `pulumi:"tunnelInterfaceCarrier"`
	// Variable name
	TunnelInterfaceCarrierVariable *string `pulumi:"tunnelInterfaceCarrierVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment *bool `pulumi:"tunnelInterfaceClearDontFragment"`
	// Variable name
	TunnelInterfaceClearDontFragmentVariable *string `pulumi:"tunnelInterfaceClearDontFragmentVariable"`
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `mpls`
	TunnelInterfaceColor *string `pulumi:"tunnelInterfaceColor"`
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceColorRestrict *bool `pulumi:"tunnelInterfaceColorRestrict"`
	// Variable name
	TunnelInterfaceColorRestrictVariable *string `pulumi:"tunnelInterfaceColorRestrictVariable"`
	// Variable name
	TunnelInterfaceColorVariable *string `pulumi:"tunnelInterfaceColorVariable"`
	// CTS SGT Propagation configuration - Default value: `false`
	TunnelInterfaceCtsSgtPropagation *bool `pulumi:"tunnelInterfaceCtsSgtPropagation"`
	// Variable name
	TunnelInterfaceCtsSgtPropagationVariable *string `pulumi:"tunnelInterfaceCtsSgtPropagationVariable"`
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations []TransportWanVpnInterfaceEthernetProfileParcelTunnelInterfaceEncapsulation `pulumi:"tunnelInterfaceEncapsulations"`
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable *string `pulumi:"tunnelInterfaceExcludeControllerGroupListVariable"`
	// Exclude the following controller groups defined in this list.
	TunnelInterfaceExcludeControllerGroupLists []int `pulumi:"tunnelInterfaceExcludeControllerGroupLists"`
	// GRE tunnel destination IP
	TunnelInterfaceGreTunnelDestinationIp *string `pulumi:"tunnelInterfaceGreTunnelDestinationIp"`
	// Variable name
	TunnelInterfaceGreTunnelDestinationIpVariable *string `pulumi:"tunnelInterfaceGreTunnelDestinationIpVariable"`
	// List of groups - Range: `1`-`4294967295`
	TunnelInterfaceGroups *int `pulumi:"tunnelInterfaceGroups"`
	// Variable name
	TunnelInterfaceGroupsVariable *string `pulumi:"tunnelInterfaceGroupsVariable"`
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval *int `pulumi:"tunnelInterfaceHelloInterval"`
	// Variable name
	TunnelInterfaceHelloIntervalVariable *string `pulumi:"tunnelInterfaceHelloIntervalVariable"`
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance *int `pulumi:"tunnelInterfaceHelloTolerance"`
	// Variable name
	TunnelInterfaceHelloToleranceVariable *string `pulumi:"tunnelInterfaceHelloToleranceVariable"`
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit *bool `pulumi:"tunnelInterfaceLastResortCircuit"`
	// Variable name
	TunnelInterfaceLastResortCircuitVariable *string `pulumi:"tunnelInterfaceLastResortCircuitVariable"`
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink *bool `pulumi:"tunnelInterfaceLowBandwidthLink"`
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable *string `pulumi:"tunnelInterfaceLowBandwidthLinkVariable"`
	// Maximum Control Connections - Range: `0`-`100`
	TunnelInterfaceMaxControlConnections *int `pulumi:"tunnelInterfaceMaxControlConnections"`
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable *string `pulumi:"tunnelInterfaceMaxControlConnectionsVariable"`
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval *int `pulumi:"tunnelInterfaceNatRefreshInterval"`
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable *string `pulumi:"tunnelInterfaceNatRefreshIntervalVariable"`
	// Accept and respond to network-prefix-directed broadcasts - Default value: `false`
	TunnelInterfaceNetworkBroadcast *bool `pulumi:"tunnelInterfaceNetworkBroadcast"`
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable *string `pulumi:"tunnelInterfaceNetworkBroadcastVariable"`
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop *bool `pulumi:"tunnelInterfacePortHop"`
	// Variable name
	TunnelInterfacePortHopVariable *string `pulumi:"tunnelInterfacePortHopVariable"`
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss *int `pulumi:"tunnelInterfaceTunnelTcpMss"`
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable *string `pulumi:"tunnelInterfaceTunnelTcpMssVariable"`
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer *bool `pulumi:"tunnelInterfaceVbondAsStunServer"`
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable *string `pulumi:"tunnelInterfaceVbondAsStunServerVariable"`
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference *int `pulumi:"tunnelInterfaceVmanageConnectionPreference"`
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable *string `pulumi:"tunnelInterfaceVmanageConnectionPreferenceVariable"`
	// Set tunnel QoS mode - Choices: `hub`, `spoke`
	TunnelQosMode *string `pulumi:"tunnelQosMode"`
	// Variable name
	TunnelQosModeVariable *string `pulumi:"tunnelQosModeVariable"`
	// Extend remote TLOC over a GRE tunnel to a local WAN interface
	Xconnect *string `pulumi:"xconnect"`
	// Variable name
	XconnectVariable *string `pulumi:"xconnectVariable"`
}

// The set of arguments for constructing a TransportWanVpnInterfaceEthernetProfileParcel resource.
type TransportWanVpnInterfaceEthernetProfileParcelArgs struct {
	// Adaptive QoS - Default value: `false`
	AdaptiveQos pulumi.BoolPtrInput
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
	ArpTimeout pulumi.IntPtrInput
	// Variable name
	ArpTimeoutVariable pulumi.StringPtrInput
	// Configure ARP entries
	Arps TransportWanVpnInterfaceEthernetProfileParcelArpArrayInput
	// Interface auto detect bandwidth - Default value: `false`
	AutoDetectBandwidth pulumi.BoolPtrInput
	// Variable name
	AutoDetectBandwidthVariable pulumi.StringPtrInput
	// Link autonegotiation
	Autonegotiate pulumi.BoolPtrInput
	// Variable name
	AutonegotiateVariable pulumi.StringPtrInput
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthDownstream pulumi.IntPtrInput
	// Variable name
	BandwidthDownstreamVariable pulumi.StringPtrInput
	// Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthUpstream pulumi.IntPtrInput
	// Variable name
	BandwidthUpstreamVariable pulumi.StringPtrInput
	// Block packets originating from IP address that is not from this source - Default value: `false`
	BlockNonSourceIp pulumi.BoolPtrInput
	// Variable name
	BlockNonSourceIpVariable pulumi.StringPtrInput
	ConfigDescription        pulumi.StringPtrInput
	// Variable name
	ConfigDescriptionVariable pulumi.StringPtrInput
	// The description of the profile parcel
	Description pulumi.StringPtrInput
	// Duplex mode - Choices: `full`, `half`, `auto`
	Duplex pulumi.StringPtrInput
	// Variable name
	DuplexVariable pulumi.StringPtrInput
	// Enable DHCPv6
	EnableDhcpv6 pulumi.BoolPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// GRE tunnel source IP
	GreTunnelSourceIp pulumi.StringPtrInput
	// Variable name
	GreTunnelSourceIpVariable pulumi.StringPtrInput
	// ICMP/ICMPv6 Redirect Disable - Default value: `true`
	IcmpRedirectDisable pulumi.BoolPtrInput
	// Variable name
	IcmpRedirectDisableVariable pulumi.StringPtrInput
	InterfaceName               pulumi.StringPtrInput
	// Variable name
	InterfaceNameVariable pulumi.StringPtrInput
	// Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
	// Default value: `1500`
	IntrfMtu pulumi.IntPtrInput
	// Variable name
	IntrfMtuVariable pulumi.StringPtrInput
	// IP Directed-Broadcast - Default value: `false`
	IpDirectedBroadcast pulumi.BoolPtrInput
	// Variable name
	IpDirectedBroadcastVariable pulumi.StringPtrInput
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
	// <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	// Iperf server for auto bandwidth detect
	IperfServer pulumi.StringPtrInput
	// Variable name
	IperfServerVariable pulumi.StringPtrInput
	// IP Address
	Ipv4Address pulumi.StringPtrInput
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrInput
	// DHCP Distance - Range: `1`-`65536`
	Ipv4DhcpDistance pulumi.IntPtrInput
	// Variable name
	Ipv4DhcpDistanceVariable pulumi.StringPtrInput
	// Variable name
	Ipv4DhcpHelperVariable pulumi.StringPtrInput
	// List of DHCP IPv4 helper addresses (min 1, max 8)
	Ipv4DhcpHelpers pulumi.StringArrayInput
	// Secondary IpV4 Addresses
	Ipv4SecondaryAddresses TransportWanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArrayInput
	// Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
	// `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
	// `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
	// `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
	// `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrInput
	// Variable name
	Ipv4SubnetMaskVariable pulumi.StringPtrInput
	// IPv6 Address Secondary
	Ipv6Address pulumi.StringPtrInput
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrInput
	// secondary IPv6 addresses
	Ipv6DhcpSecondaryAddresses TransportWanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArrayInput
	// Static secondary IPv6 addresses
	Ipv6SecondaryAddresses TransportWanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArrayInput
	// Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
	LoadInterval pulumi.IntPtrInput
	// Variable name
	LoadIntervalVariable pulumi.StringPtrInput
	// MAC Address
	MacAddress pulumi.StringPtrInput
	// Variable name
	MacAddressVariable pulumi.StringPtrInput
	// Media type - Choices: `auto-select`, `rj45`, `sfp`
	MediaType pulumi.StringPtrInput
	// Variable name
	MediaTypeVariable pulumi.StringPtrInput
	// The name of the profile parcel
	Name pulumi.StringPtrInput
	// NAT64 on this interface - Default value: `false`
	Nat64 pulumi.BoolPtrInput
	// NAT66 on this interface - Default value: `false`
	Nat66 pulumi.BoolPtrInput
	// enable Network Address Translation on this interface - Default value: `false`
	NatIpv4 pulumi.BoolPtrInput
	// Variable name
	NatIpv4Variable pulumi.StringPtrInput
	// enable Network Address Translation ipv6 on this interface - Default value: `false`
	NatIpv6 pulumi.BoolPtrInput
	// Variable name
	NatIpv6Variable pulumi.StringPtrInput
	// NAT Inside Source Loopback Interface
	NatLoopback pulumi.StringPtrInput
	// Variable name
	NatLoopbackVariable pulumi.StringPtrInput
	// NAT Overload - Default value: `true`
	NatOverload pulumi.BoolPtrInput
	// Variable name
	NatOverloadVariable pulumi.StringPtrInput
	// NAT Pool Prefix Length - Range: `1`-`32`
	NatPrefixLength pulumi.IntPtrInput
	// Variable name
	NatPrefixLengthVariable pulumi.StringPtrInput
	// NAT Pool Range End
	NatRangeEnd pulumi.StringPtrInput
	// Variable name
	NatRangeEndVariable pulumi.StringPtrInput
	// NAT Pool Range Start
	NatRangeStart pulumi.StringPtrInput
	// Variable name
	NatRangeStartVariable pulumi.StringPtrInput
	// Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
	NatTcpTimeout pulumi.IntPtrInput
	// Variable name
	NatTcpTimeoutVariable pulumi.StringPtrInput
	// NAT Type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
	NatType pulumi.StringPtrInput
	// Variable name
	NatTypeVariable pulumi.StringPtrInput
	// Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
	NatUdpTimeout pulumi.IntPtrInput
	// Variable name
	NatUdpTimeoutVariable pulumi.StringPtrInput
	// static NAT
	NewStaticNats TransportWanVpnInterfaceEthernetProfileParcelNewStaticNatArrayInput
	// Per-tunnel Qos - Default value: `false`
	PerTunnelQos pulumi.BoolPtrInput
	// Variable name
	PerTunnelQosVariable pulumi.StringPtrInput
	// Shaping Rate Downstream - Default value: `false`
	QosAdaptiveBandwidthDownstream pulumi.BoolPtrInput
	// Shaping Rate Upstream - Default value: `false`
	QosAdaptiveBandwidthUpstream pulumi.BoolPtrInput
	// Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
	QosAdaptiveDefaultDownstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveDefaultDownstreamVariable pulumi.StringPtrInput
	// Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
	QosAdaptiveDefaultUpstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveDefaultUpstreamVariable pulumi.StringPtrInput
	// Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMaxDownstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveMaxDownstreamVariable pulumi.StringPtrInput
	// Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMaxUpstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveMaxUpstreamVariable pulumi.StringPtrInput
	// Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMinDownstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveMinDownstreamVariable pulumi.StringPtrInput
	// Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
	QosAdaptiveMinUpstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveMinUpstreamVariable pulumi.StringPtrInput
	// Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
	QosAdaptivePeriod pulumi.IntPtrInput
	// Variable name
	QosAdaptivePeriodVariable pulumi.StringPtrInput
	// Shaping Rate (Kbps) - Range: `8`-`100000000`
	QosShapingRate pulumi.IntPtrInput
	// Variable name
	QosShapingRateVariable pulumi.StringPtrInput
	// Service Provider Name
	ServiceProvider pulumi.StringPtrInput
	// Variable name
	ServiceProviderVariable pulumi.StringPtrInput
	// - Default value: `true`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed pulumi.StringPtrInput
	// Variable name
	SpeedVariable pulumi.StringPtrInput
	// static NAT66
	StaticNat66s TransportWanVpnInterfaceEthernetProfileParcelStaticNat66ArrayInput
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMss pulumi.IntPtrInput
	// Variable name
	TcpMssVariable pulumi.StringPtrInput
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension pulumi.StringPtrInput
	// Variable name
	TlocExtensionVariable pulumi.StringPtrInput
	// Enable tracker for this interface
	Tracker pulumi.StringPtrInput
	// Variable name
	TrackerVariable pulumi.StringPtrInput
	// Transport WAN VPN Profile Parcel ID
	TransportWanVpnProfileParcelId pulumi.StringPtrInput
	// Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
	TunnelBandwidthPercent pulumi.IntPtrInput
	// Variable name
	TunnelBandwidthPercentVariable pulumi.StringPtrInput
	// Tunnel Interface on/off - Default value: `false`
	TunnelInterface pulumi.BoolPtrInput
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowAllVariable pulumi.StringPtrInput
	// Allow/Deny BFD - Default value: `false`
	TunnelInterfaceAllowBfd pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowBfdVariable pulumi.StringPtrInput
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowBgpVariable pulumi.StringPtrInput
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDbs pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowDbsVariable pulumi.StringPtrInput
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowDhcpVariable pulumi.StringPtrInput
	// Allow/Deny HTTPS - Default value: `true`
	TunnelInterfaceAllowHttps pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowHttpsVariable pulumi.StringPtrInput
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowIcmpVariable pulumi.StringPtrInput
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowNetconfVariable pulumi.StringPtrInput
	// Allow/Deny NTP - Default value: `true`
	TunnelInterfaceAllowNtp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowNtpVariable pulumi.StringPtrInput
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowOspfVariable pulumi.StringPtrInput
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowSnmpVariable pulumi.StringPtrInput
	// Allow/Deny SSH - Default value: `true`
	TunnelInterfaceAllowSsh pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowSshVariable pulumi.StringPtrInput
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowStunVariable pulumi.StringPtrInput
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable pulumi.StringPtrInput
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceBorderVariable pulumi.StringPtrInput
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceCarrierVariable pulumi.StringPtrInput
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceClearDontFragmentVariable pulumi.StringPtrInput
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `mpls`
	TunnelInterfaceColor pulumi.StringPtrInput
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceColorRestrict pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceColorRestrictVariable pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceColorVariable pulumi.StringPtrInput
	// CTS SGT Propagation configuration - Default value: `false`
	TunnelInterfaceCtsSgtPropagation pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceCtsSgtPropagationVariable pulumi.StringPtrInput
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations TransportWanVpnInterfaceEthernetProfileParcelTunnelInterfaceEncapsulationArrayInput
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable pulumi.StringPtrInput
	// Exclude the following controller groups defined in this list.
	TunnelInterfaceExcludeControllerGroupLists pulumi.IntArrayInput
	// GRE tunnel destination IP
	TunnelInterfaceGreTunnelDestinationIp pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceGreTunnelDestinationIpVariable pulumi.StringPtrInput
	// List of groups - Range: `1`-`4294967295`
	TunnelInterfaceGroups pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceGroupsVariable pulumi.StringPtrInput
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceHelloIntervalVariable pulumi.StringPtrInput
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceHelloToleranceVariable pulumi.StringPtrInput
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceLastResortCircuitVariable pulumi.StringPtrInput
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable pulumi.StringPtrInput
	// Maximum Control Connections - Range: `0`-`100`
	TunnelInterfaceMaxControlConnections pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable pulumi.StringPtrInput
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable pulumi.StringPtrInput
	// Accept and respond to network-prefix-directed broadcasts - Default value: `false`
	TunnelInterfaceNetworkBroadcast pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable pulumi.StringPtrInput
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop pulumi.BoolPtrInput
	// Variable name
	TunnelInterfacePortHopVariable pulumi.StringPtrInput
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable pulumi.StringPtrInput
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable pulumi.StringPtrInput
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable pulumi.StringPtrInput
	// Set tunnel QoS mode - Choices: `hub`, `spoke`
	TunnelQosMode pulumi.StringPtrInput
	// Variable name
	TunnelQosModeVariable pulumi.StringPtrInput
	// Extend remote TLOC over a GRE tunnel to a local WAN interface
	Xconnect pulumi.StringPtrInput
	// Variable name
	XconnectVariable pulumi.StringPtrInput
}

func (TransportWanVpnInterfaceEthernetProfileParcelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transportWanVpnInterfaceEthernetProfileParcelArgs)(nil)).Elem()
}

type TransportWanVpnInterfaceEthernetProfileParcelInput interface {
	pulumi.Input

	ToTransportWanVpnInterfaceEthernetProfileParcelOutput() TransportWanVpnInterfaceEthernetProfileParcelOutput
	ToTransportWanVpnInterfaceEthernetProfileParcelOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetProfileParcelOutput
}

func (*TransportWanVpnInterfaceEthernetProfileParcel) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportWanVpnInterfaceEthernetProfileParcel)(nil)).Elem()
}

func (i *TransportWanVpnInterfaceEthernetProfileParcel) ToTransportWanVpnInterfaceEthernetProfileParcelOutput() TransportWanVpnInterfaceEthernetProfileParcelOutput {
	return i.ToTransportWanVpnInterfaceEthernetProfileParcelOutputWithContext(context.Background())
}

func (i *TransportWanVpnInterfaceEthernetProfileParcel) ToTransportWanVpnInterfaceEthernetProfileParcelOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetProfileParcelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnInterfaceEthernetProfileParcelOutput)
}

// TransportWanVpnInterfaceEthernetProfileParcelArrayInput is an input type that accepts TransportWanVpnInterfaceEthernetProfileParcelArray and TransportWanVpnInterfaceEthernetProfileParcelArrayOutput values.
// You can construct a concrete instance of `TransportWanVpnInterfaceEthernetProfileParcelArrayInput` via:
//
//	TransportWanVpnInterfaceEthernetProfileParcelArray{ TransportWanVpnInterfaceEthernetProfileParcelArgs{...} }
type TransportWanVpnInterfaceEthernetProfileParcelArrayInput interface {
	pulumi.Input

	ToTransportWanVpnInterfaceEthernetProfileParcelArrayOutput() TransportWanVpnInterfaceEthernetProfileParcelArrayOutput
	ToTransportWanVpnInterfaceEthernetProfileParcelArrayOutputWithContext(context.Context) TransportWanVpnInterfaceEthernetProfileParcelArrayOutput
}

type TransportWanVpnInterfaceEthernetProfileParcelArray []TransportWanVpnInterfaceEthernetProfileParcelInput

func (TransportWanVpnInterfaceEthernetProfileParcelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportWanVpnInterfaceEthernetProfileParcel)(nil)).Elem()
}

func (i TransportWanVpnInterfaceEthernetProfileParcelArray) ToTransportWanVpnInterfaceEthernetProfileParcelArrayOutput() TransportWanVpnInterfaceEthernetProfileParcelArrayOutput {
	return i.ToTransportWanVpnInterfaceEthernetProfileParcelArrayOutputWithContext(context.Background())
}

func (i TransportWanVpnInterfaceEthernetProfileParcelArray) ToTransportWanVpnInterfaceEthernetProfileParcelArrayOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetProfileParcelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnInterfaceEthernetProfileParcelArrayOutput)
}

// TransportWanVpnInterfaceEthernetProfileParcelMapInput is an input type that accepts TransportWanVpnInterfaceEthernetProfileParcelMap and TransportWanVpnInterfaceEthernetProfileParcelMapOutput values.
// You can construct a concrete instance of `TransportWanVpnInterfaceEthernetProfileParcelMapInput` via:
//
//	TransportWanVpnInterfaceEthernetProfileParcelMap{ "key": TransportWanVpnInterfaceEthernetProfileParcelArgs{...} }
type TransportWanVpnInterfaceEthernetProfileParcelMapInput interface {
	pulumi.Input

	ToTransportWanVpnInterfaceEthernetProfileParcelMapOutput() TransportWanVpnInterfaceEthernetProfileParcelMapOutput
	ToTransportWanVpnInterfaceEthernetProfileParcelMapOutputWithContext(context.Context) TransportWanVpnInterfaceEthernetProfileParcelMapOutput
}

type TransportWanVpnInterfaceEthernetProfileParcelMap map[string]TransportWanVpnInterfaceEthernetProfileParcelInput

func (TransportWanVpnInterfaceEthernetProfileParcelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportWanVpnInterfaceEthernetProfileParcel)(nil)).Elem()
}

func (i TransportWanVpnInterfaceEthernetProfileParcelMap) ToTransportWanVpnInterfaceEthernetProfileParcelMapOutput() TransportWanVpnInterfaceEthernetProfileParcelMapOutput {
	return i.ToTransportWanVpnInterfaceEthernetProfileParcelMapOutputWithContext(context.Background())
}

func (i TransportWanVpnInterfaceEthernetProfileParcelMap) ToTransportWanVpnInterfaceEthernetProfileParcelMapOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetProfileParcelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportWanVpnInterfaceEthernetProfileParcelMapOutput)
}

type TransportWanVpnInterfaceEthernetProfileParcelOutput struct{ *pulumi.OutputState }

func (TransportWanVpnInterfaceEthernetProfileParcelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportWanVpnInterfaceEthernetProfileParcel)(nil)).Elem()
}

func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) ToTransportWanVpnInterfaceEthernetProfileParcelOutput() TransportWanVpnInterfaceEthernetProfileParcelOutput {
	return o
}

func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) ToTransportWanVpnInterfaceEthernetProfileParcelOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetProfileParcelOutput {
	return o
}

// Adaptive QoS - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) AdaptiveQos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput { return v.AdaptiveQos }).(pulumi.BoolPtrOutput)
}

// Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) ArpTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput { return v.ArpTimeout }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) ArpTimeoutVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.ArpTimeoutVariable
	}).(pulumi.StringPtrOutput)
}

// Configure ARP entries
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Arps() TransportWanVpnInterfaceEthernetProfileParcelArpArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) TransportWanVpnInterfaceEthernetProfileParcelArpArrayOutput {
		return v.Arps
	}).(TransportWanVpnInterfaceEthernetProfileParcelArpArrayOutput)
}

// Interface auto detect bandwidth - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) AutoDetectBandwidth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.AutoDetectBandwidth
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) AutoDetectBandwidthVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.AutoDetectBandwidthVariable
	}).(pulumi.StringPtrOutput)
}

// Link autonegotiation
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Autonegotiate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput { return v.Autonegotiate }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) AutonegotiateVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.AutonegotiateVariable
	}).(pulumi.StringPtrOutput)
}

// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) BandwidthDownstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput {
		return v.BandwidthDownstream
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) BandwidthDownstreamVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.BandwidthDownstreamVariable
	}).(pulumi.StringPtrOutput)
}

// Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) BandwidthUpstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput { return v.BandwidthUpstream }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) BandwidthUpstreamVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.BandwidthUpstreamVariable
	}).(pulumi.StringPtrOutput)
}

// Block packets originating from IP address that is not from this source - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) BlockNonSourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput { return v.BlockNonSourceIp }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) BlockNonSourceIpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.BlockNonSourceIpVariable
	}).(pulumi.StringPtrOutput)
}

func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) ConfigDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.ConfigDescription
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) ConfigDescriptionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.ConfigDescriptionVariable
	}).(pulumi.StringPtrOutput)
}

// The description of the profile parcel
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Duplex mode - Choices: `full`, `half`, `auto`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Duplex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.Duplex }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) DuplexVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.DuplexVariable }).(pulumi.StringPtrOutput)
}

// Enable DHCPv6
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) EnableDhcpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput { return v.EnableDhcpv6 }).(pulumi.BoolPtrOutput)
}

// Feature Profile ID
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// GRE tunnel source IP
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) GreTunnelSourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.GreTunnelSourceIp
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) GreTunnelSourceIpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.GreTunnelSourceIpVariable
	}).(pulumi.StringPtrOutput)
}

// ICMP/ICMPv6 Redirect Disable - Default value: `true`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) IcmpRedirectDisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.IcmpRedirectDisable
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) IcmpRedirectDisableVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.IcmpRedirectDisableVariable
	}).(pulumi.StringPtrOutput)
}

func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) InterfaceNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.InterfaceNameVariable
	}).(pulumi.StringPtrOutput)
}

// Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
// Default value: `1500`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) IntrfMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput { return v.IntrfMtu }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) IntrfMtuVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.IntrfMtuVariable
	}).(pulumi.StringPtrOutput)
}

// IP Directed-Broadcast - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) IpDirectedBroadcast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.IpDirectedBroadcast
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) IpDirectedBroadcastVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.IpDirectedBroadcastVariable
	}).(pulumi.StringPtrOutput)
}

// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
// <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) IpMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput { return v.IpMtu }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) IpMtuVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.IpMtuVariable }).(pulumi.StringPtrOutput)
}

// Iperf server for auto bandwidth detect
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) IperfServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.IperfServer }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) IperfServerVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.IperfServerVariable
	}).(pulumi.StringPtrOutput)
}

// IP Address
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Ipv4AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.Ipv4AddressVariable
	}).(pulumi.StringPtrOutput)
}

// DHCP Distance - Range: `1`-`65536`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Ipv4DhcpDistance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput { return v.Ipv4DhcpDistance }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Ipv4DhcpDistanceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.Ipv4DhcpDistanceVariable
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Ipv4DhcpHelperVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.Ipv4DhcpHelperVariable
	}).(pulumi.StringPtrOutput)
}

// List of DHCP IPv4 helper addresses (min 1, max 8)
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Ipv4DhcpHelpers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringArrayOutput {
		return v.Ipv4DhcpHelpers
	}).(pulumi.StringArrayOutput)
}

// Secondary IpV4 Addresses
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Ipv4SecondaryAddresses() TransportWanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) TransportWanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArrayOutput {
		return v.Ipv4SecondaryAddresses
	}).(TransportWanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArrayOutput)
}

// Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
// `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
// `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
// `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
// `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Ipv4SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.Ipv4SubnetMask }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Ipv4SubnetMaskVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.Ipv4SubnetMaskVariable
	}).(pulumi.StringPtrOutput)
}

// IPv6 Address Secondary
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Ipv6AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.Ipv6AddressVariable
	}).(pulumi.StringPtrOutput)
}

// secondary IPv6 addresses
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Ipv6DhcpSecondaryAddresses() TransportWanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) TransportWanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArrayOutput {
		return v.Ipv6DhcpSecondaryAddresses
	}).(TransportWanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArrayOutput)
}

// Static secondary IPv6 addresses
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Ipv6SecondaryAddresses() TransportWanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) TransportWanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArrayOutput {
		return v.Ipv6SecondaryAddresses
	}).(TransportWanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArrayOutput)
}

// Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) LoadInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput { return v.LoadInterval }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) LoadIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.LoadIntervalVariable
	}).(pulumi.StringPtrOutput)
}

// MAC Address
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) MacAddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.MacAddressVariable
	}).(pulumi.StringPtrOutput)
}

// Media type - Choices: `auto-select`, `rj45`, `sfp`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.MediaType }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) MediaTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.MediaTypeVariable
	}).(pulumi.StringPtrOutput)
}

// The name of the profile parcel
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// NAT64 on this interface - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Nat64() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput { return v.Nat64 }).(pulumi.BoolPtrOutput)
}

// NAT66 on this interface - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Nat66() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput { return v.Nat66 }).(pulumi.BoolPtrOutput)
}

// enable Network Address Translation on this interface - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatIpv4() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput { return v.NatIpv4 }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatIpv4Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.NatIpv4Variable
	}).(pulumi.StringPtrOutput)
}

// enable Network Address Translation ipv6 on this interface - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatIpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput { return v.NatIpv6 }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatIpv6Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.NatIpv6Variable
	}).(pulumi.StringPtrOutput)
}

// NAT Inside Source Loopback Interface
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatLoopback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.NatLoopback }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatLoopbackVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.NatLoopbackVariable
	}).(pulumi.StringPtrOutput)
}

// NAT Overload - Default value: `true`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatOverload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput { return v.NatOverload }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatOverloadVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.NatOverloadVariable
	}).(pulumi.StringPtrOutput)
}

// NAT Pool Prefix Length - Range: `1`-`32`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatPrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput { return v.NatPrefixLength }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatPrefixLengthVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.NatPrefixLengthVariable
	}).(pulumi.StringPtrOutput)
}

// NAT Pool Range End
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatRangeEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.NatRangeEnd }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatRangeEndVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.NatRangeEndVariable
	}).(pulumi.StringPtrOutput)
}

// NAT Pool Range Start
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatRangeStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.NatRangeStart }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatRangeStartVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.NatRangeStartVariable
	}).(pulumi.StringPtrOutput)
}

// Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatTcpTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput { return v.NatTcpTimeout }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatTcpTimeoutVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.NatTcpTimeoutVariable
	}).(pulumi.StringPtrOutput)
}

// NAT Type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.NatType }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.NatTypeVariable
	}).(pulumi.StringPtrOutput)
}

// Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatUdpTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput { return v.NatUdpTimeout }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NatUdpTimeoutVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.NatUdpTimeoutVariable
	}).(pulumi.StringPtrOutput)
}

// static NAT
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) NewStaticNats() TransportWanVpnInterfaceEthernetProfileParcelNewStaticNatArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) TransportWanVpnInterfaceEthernetProfileParcelNewStaticNatArrayOutput {
		return v.NewStaticNats
	}).(TransportWanVpnInterfaceEthernetProfileParcelNewStaticNatArrayOutput)
}

// Per-tunnel Qos - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) PerTunnelQos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput { return v.PerTunnelQos }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) PerTunnelQosVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.PerTunnelQosVariable
	}).(pulumi.StringPtrOutput)
}

// Shaping Rate Downstream - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) QosAdaptiveBandwidthDownstream() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.QosAdaptiveBandwidthDownstream
	}).(pulumi.BoolPtrOutput)
}

// Shaping Rate Upstream - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) QosAdaptiveBandwidthUpstream() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.QosAdaptiveBandwidthUpstream
	}).(pulumi.BoolPtrOutput)
}

// Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) QosAdaptiveDefaultDownstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput {
		return v.QosAdaptiveDefaultDownstream
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) QosAdaptiveDefaultDownstreamVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.QosAdaptiveDefaultDownstreamVariable
	}).(pulumi.StringPtrOutput)
}

// Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) QosAdaptiveDefaultUpstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput {
		return v.QosAdaptiveDefaultUpstream
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) QosAdaptiveDefaultUpstreamVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.QosAdaptiveDefaultUpstreamVariable
	}).(pulumi.StringPtrOutput)
}

// Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) QosAdaptiveMaxDownstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput {
		return v.QosAdaptiveMaxDownstream
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) QosAdaptiveMaxDownstreamVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.QosAdaptiveMaxDownstreamVariable
	}).(pulumi.StringPtrOutput)
}

// Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) QosAdaptiveMaxUpstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput {
		return v.QosAdaptiveMaxUpstream
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) QosAdaptiveMaxUpstreamVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.QosAdaptiveMaxUpstreamVariable
	}).(pulumi.StringPtrOutput)
}

// Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) QosAdaptiveMinDownstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput {
		return v.QosAdaptiveMinDownstream
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) QosAdaptiveMinDownstreamVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.QosAdaptiveMinDownstreamVariable
	}).(pulumi.StringPtrOutput)
}

// Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) QosAdaptiveMinUpstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput {
		return v.QosAdaptiveMinUpstream
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) QosAdaptiveMinUpstreamVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.QosAdaptiveMinUpstreamVariable
	}).(pulumi.StringPtrOutput)
}

// Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) QosAdaptivePeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput { return v.QosAdaptivePeriod }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) QosAdaptivePeriodVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.QosAdaptivePeriodVariable
	}).(pulumi.StringPtrOutput)
}

// Shaping Rate (Kbps) - Range: `8`-`100000000`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) QosShapingRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput { return v.QosShapingRate }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) QosShapingRateVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.QosShapingRateVariable
	}).(pulumi.StringPtrOutput)
}

// Service Provider Name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) ServiceProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.ServiceProvider
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) ServiceProviderVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.ServiceProviderVariable
	}).(pulumi.StringPtrOutput)
}

// - Default value: `true`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Shutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput { return v.Shutdown }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) ShutdownVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.ShutdownVariable
	}).(pulumi.StringPtrOutput)
}

// Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Speed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.Speed }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) SpeedVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.SpeedVariable }).(pulumi.StringPtrOutput)
}

// static NAT66
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) StaticNat66s() TransportWanVpnInterfaceEthernetProfileParcelStaticNat66ArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) TransportWanVpnInterfaceEthernetProfileParcelStaticNat66ArrayOutput {
		return v.StaticNat66s
	}).(TransportWanVpnInterfaceEthernetProfileParcelStaticNat66ArrayOutput)
}

// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TcpMss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput { return v.TcpMss }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TcpMssVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.TcpMssVariable }).(pulumi.StringPtrOutput)
}

// Extends a local TLOC to a remote node only for vpn 0
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TlocExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.TlocExtension }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TlocExtensionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TlocExtensionVariable
	}).(pulumi.StringPtrOutput)
}

// Enable tracker for this interface
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Tracker() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.Tracker }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TrackerVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TrackerVariable
	}).(pulumi.StringPtrOutput)
}

// Transport WAN VPN Profile Parcel ID
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TransportWanVpnProfileParcelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TransportWanVpnProfileParcelId
	}).(pulumi.StringPtrOutput)
}

// Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelBandwidthPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput {
		return v.TunnelBandwidthPercent
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelBandwidthPercentVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelBandwidthPercentVariable
	}).(pulumi.StringPtrOutput)
}

// Tunnel Interface on/off - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterface() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput { return v.TunnelInterface }).(pulumi.BoolPtrOutput)
}

// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowAll
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowAllVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowAllVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny BFD - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowBfd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowBfd
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowBfdVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowBfdVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/deny BGP - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowBgp
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowBgpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowBgpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny DNS - Default value: `true`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowDbs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowDbs
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowDbsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowDbsVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny DHCP - Default value: `true`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowDhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowDhcp
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowDhcpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowDhcpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny HTTPS - Default value: `true`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowHttps
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowHttpsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowHttpsVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny ICMP - Default value: `true`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowIcmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowIcmp
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowIcmpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowIcmpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny NETCONF - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowNetconf() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowNetconf
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowNetconfVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowNetconfVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny NTP - Default value: `true`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowNtp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowNtp
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowNtpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowNtpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny OSPF - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowOspf() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowOspf
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowOspfVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowOspfVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny SNMP - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowSnmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowSnmp
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowSnmpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowSnmpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny SSH - Default value: `true`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowSsh() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowSsh
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowSshVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowSshVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny STUN - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowStun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowStun
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceAllowStunVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowStunVariable
	}).(pulumi.StringPtrOutput)
}

// Bind loopback tunnel interface to a physical interface
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceBindLoopbackTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceBindLoopbackTunnel
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceBindLoopbackTunnelVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceBindLoopbackTunnelVariable
	}).(pulumi.StringPtrOutput)
}

// Set TLOC as border TLOC - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceBorder() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceBorder
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceBorderVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceBorderVariable
	}).(pulumi.StringPtrOutput)
}

// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
// `carrier7`, `carrier8` - Default value: `default`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceCarrier
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceCarrierVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceCarrierVariable
	}).(pulumi.StringPtrOutput)
}

// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceClearDontFragment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceClearDontFragment
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceClearDontFragmentVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceClearDontFragmentVariable
	}).(pulumi.StringPtrOutput)
}

// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
// `private4`, `private5`, `private6` - Default value: `mpls`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceColor
	}).(pulumi.StringPtrOutput)
}

// Restrict this TLOC behavior - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceColorRestrict() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceColorRestrict
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceColorRestrictVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceColorRestrictVariable
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceColorVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceColorVariable
	}).(pulumi.StringPtrOutput)
}

// CTS SGT Propagation configuration - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceCtsSgtPropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceCtsSgtPropagation
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceCtsSgtPropagationVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceCtsSgtPropagationVariable
	}).(pulumi.StringPtrOutput)
}

// Encapsulation for TLOC
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceEncapsulations() TransportWanVpnInterfaceEthernetProfileParcelTunnelInterfaceEncapsulationArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) TransportWanVpnInterfaceEthernetProfileParcelTunnelInterfaceEncapsulationArrayOutput {
		return v.TunnelInterfaceEncapsulations
	}).(TransportWanVpnInterfaceEthernetProfileParcelTunnelInterfaceEncapsulationArrayOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceExcludeControllerGroupListVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceExcludeControllerGroupListVariable
	}).(pulumi.StringPtrOutput)
}

// Exclude the following controller groups defined in this list.
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceExcludeControllerGroupLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntArrayOutput {
		return v.TunnelInterfaceExcludeControllerGroupLists
	}).(pulumi.IntArrayOutput)
}

// GRE tunnel destination IP
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceGreTunnelDestinationIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceGreTunnelDestinationIp
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceGreTunnelDestinationIpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceGreTunnelDestinationIpVariable
	}).(pulumi.StringPtrOutput)
}

// List of groups - Range: `1`-`4294967295`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceGroups() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput {
		return v.TunnelInterfaceGroups
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceGroupsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceGroupsVariable
	}).(pulumi.StringPtrOutput)
}

// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceHelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput {
		return v.TunnelInterfaceHelloInterval
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceHelloIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceHelloIntervalVariable
	}).(pulumi.StringPtrOutput)
}

// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceHelloTolerance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput {
		return v.TunnelInterfaceHelloTolerance
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceHelloToleranceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceHelloToleranceVariable
	}).(pulumi.StringPtrOutput)
}

// Set TLOC as last resort - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceLastResortCircuit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceLastResortCircuit
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceLastResortCircuitVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceLastResortCircuitVariable
	}).(pulumi.StringPtrOutput)
}

// Set the interface as a low-bandwidth circuit - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceLowBandwidthLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceLowBandwidthLink
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceLowBandwidthLinkVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceLowBandwidthLinkVariable
	}).(pulumi.StringPtrOutput)
}

// Maximum Control Connections - Range: `0`-`100`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceMaxControlConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput {
		return v.TunnelInterfaceMaxControlConnections
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceMaxControlConnectionsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceMaxControlConnectionsVariable
	}).(pulumi.StringPtrOutput)
}

// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceNatRefreshInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput {
		return v.TunnelInterfaceNatRefreshInterval
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceNatRefreshIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceNatRefreshIntervalVariable
	}).(pulumi.StringPtrOutput)
}

// Accept and respond to network-prefix-directed broadcasts - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceNetworkBroadcast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceNetworkBroadcast
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceNetworkBroadcastVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceNetworkBroadcastVariable
	}).(pulumi.StringPtrOutput)
}

// Disallow port hopping on the tunnel interface - Default value: `true`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfacePortHop() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfacePortHop
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfacePortHopVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfacePortHopVariable
	}).(pulumi.StringPtrOutput)
}

// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceTunnelTcpMss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput {
		return v.TunnelInterfaceTunnelTcpMss
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceTunnelTcpMssVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceTunnelTcpMssVariable
	}).(pulumi.StringPtrOutput)
}

// Put this wan interface in STUN mode only - Default value: `false`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceVbondAsStunServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceVbondAsStunServer
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceVbondAsStunServerVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceVbondAsStunServerVariable
	}).(pulumi.StringPtrOutput)
}

// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceVmanageConnectionPreference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntPtrOutput {
		return v.TunnelInterfaceVmanageConnectionPreference
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelInterfaceVmanageConnectionPreferenceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelInterfaceVmanageConnectionPreferenceVariable
	}).(pulumi.StringPtrOutput)
}

// Set tunnel QoS mode - Choices: `hub`, `spoke`
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelQosMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.TunnelQosMode }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) TunnelQosModeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.TunnelQosModeVariable
	}).(pulumi.StringPtrOutput)
}

// The version of the profile parcel
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

// Extend remote TLOC over a GRE tunnel to a local WAN interface
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) Xconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput { return v.Xconnect }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportWanVpnInterfaceEthernetProfileParcelOutput) XconnectVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportWanVpnInterfaceEthernetProfileParcel) pulumi.StringPtrOutput {
		return v.XconnectVariable
	}).(pulumi.StringPtrOutput)
}

type TransportWanVpnInterfaceEthernetProfileParcelArrayOutput struct{ *pulumi.OutputState }

func (TransportWanVpnInterfaceEthernetProfileParcelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportWanVpnInterfaceEthernetProfileParcel)(nil)).Elem()
}

func (o TransportWanVpnInterfaceEthernetProfileParcelArrayOutput) ToTransportWanVpnInterfaceEthernetProfileParcelArrayOutput() TransportWanVpnInterfaceEthernetProfileParcelArrayOutput {
	return o
}

func (o TransportWanVpnInterfaceEthernetProfileParcelArrayOutput) ToTransportWanVpnInterfaceEthernetProfileParcelArrayOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetProfileParcelArrayOutput {
	return o
}

func (o TransportWanVpnInterfaceEthernetProfileParcelArrayOutput) Index(i pulumi.IntInput) TransportWanVpnInterfaceEthernetProfileParcelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransportWanVpnInterfaceEthernetProfileParcel {
		return vs[0].([]*TransportWanVpnInterfaceEthernetProfileParcel)[vs[1].(int)]
	}).(TransportWanVpnInterfaceEthernetProfileParcelOutput)
}

type TransportWanVpnInterfaceEthernetProfileParcelMapOutput struct{ *pulumi.OutputState }

func (TransportWanVpnInterfaceEthernetProfileParcelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportWanVpnInterfaceEthernetProfileParcel)(nil)).Elem()
}

func (o TransportWanVpnInterfaceEthernetProfileParcelMapOutput) ToTransportWanVpnInterfaceEthernetProfileParcelMapOutput() TransportWanVpnInterfaceEthernetProfileParcelMapOutput {
	return o
}

func (o TransportWanVpnInterfaceEthernetProfileParcelMapOutput) ToTransportWanVpnInterfaceEthernetProfileParcelMapOutputWithContext(ctx context.Context) TransportWanVpnInterfaceEthernetProfileParcelMapOutput {
	return o
}

func (o TransportWanVpnInterfaceEthernetProfileParcelMapOutput) MapIndex(k pulumi.StringInput) TransportWanVpnInterfaceEthernetProfileParcelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransportWanVpnInterfaceEthernetProfileParcel {
		return vs[0].(map[string]*TransportWanVpnInterfaceEthernetProfileParcel)[vs[1].(string)]
	}).(TransportWanVpnInterfaceEthernetProfileParcelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnInterfaceEthernetProfileParcelInput)(nil)).Elem(), &TransportWanVpnInterfaceEthernetProfileParcel{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnInterfaceEthernetProfileParcelArrayInput)(nil)).Elem(), TransportWanVpnInterfaceEthernetProfileParcelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportWanVpnInterfaceEthernetProfileParcelMapInput)(nil)).Elem(), TransportWanVpnInterfaceEthernetProfileParcelMap{})
	pulumi.RegisterOutputType(TransportWanVpnInterfaceEthernetProfileParcelOutput{})
	pulumi.RegisterOutputType(TransportWanVpnInterfaceEthernetProfileParcelArrayOutput{})
	pulumi.RegisterOutputType(TransportWanVpnInterfaceEthernetProfileParcelMapOutput{})
}
