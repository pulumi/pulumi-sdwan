// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Configuration Group Deploy .
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewConfigurationGroupDeploy(ctx, "example", &sdwan.ConfigurationGroupDeployArgs{
//				ConfigurationGroupId: pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				Devices: sdwan.ConfigurationGroupDeployDeviceArray{
//					&sdwan.ConfigurationGroupDeployDeviceArgs{
//						Id: pulumi.String("C8K-15411CCC-D476-0B3B-21F2-5D6AC387EE7B"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ConfigurationGroupDeploy struct {
	pulumi.CustomResourceState

	// Configuration Group ID
	ConfigurationGroupId pulumi.StringOutput `pulumi:"configurationGroupId"`
	// List of devices
	Devices ConfigurationGroupDeployDeviceArrayOutput `pulumi:"devices"`
}

// NewConfigurationGroupDeploy registers a new resource with the given unique name, arguments, and options.
func NewConfigurationGroupDeploy(ctx *pulumi.Context,
	name string, args *ConfigurationGroupDeployArgs, opts ...pulumi.ResourceOption) (*ConfigurationGroupDeploy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigurationGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationGroupId'")
	}
	if args.Devices == nil {
		return nil, errors.New("invalid value for required argument 'Devices'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConfigurationGroupDeploy
	err := ctx.RegisterResource("sdwan:index/configurationGroupDeploy:ConfigurationGroupDeploy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigurationGroupDeploy gets an existing ConfigurationGroupDeploy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigurationGroupDeploy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigurationGroupDeployState, opts ...pulumi.ResourceOption) (*ConfigurationGroupDeploy, error) {
	var resource ConfigurationGroupDeploy
	err := ctx.ReadResource("sdwan:index/configurationGroupDeploy:ConfigurationGroupDeploy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigurationGroupDeploy resources.
type configurationGroupDeployState struct {
	// Configuration Group ID
	ConfigurationGroupId *string `pulumi:"configurationGroupId"`
	// List of devices
	Devices []ConfigurationGroupDeployDevice `pulumi:"devices"`
}

type ConfigurationGroupDeployState struct {
	// Configuration Group ID
	ConfigurationGroupId pulumi.StringPtrInput
	// List of devices
	Devices ConfigurationGroupDeployDeviceArrayInput
}

func (ConfigurationGroupDeployState) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationGroupDeployState)(nil)).Elem()
}

type configurationGroupDeployArgs struct {
	// Configuration Group ID
	ConfigurationGroupId string `pulumi:"configurationGroupId"`
	// List of devices
	Devices []ConfigurationGroupDeployDevice `pulumi:"devices"`
}

// The set of arguments for constructing a ConfigurationGroupDeploy resource.
type ConfigurationGroupDeployArgs struct {
	// Configuration Group ID
	ConfigurationGroupId pulumi.StringInput
	// List of devices
	Devices ConfigurationGroupDeployDeviceArrayInput
}

func (ConfigurationGroupDeployArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationGroupDeployArgs)(nil)).Elem()
}

type ConfigurationGroupDeployInput interface {
	pulumi.Input

	ToConfigurationGroupDeployOutput() ConfigurationGroupDeployOutput
	ToConfigurationGroupDeployOutputWithContext(ctx context.Context) ConfigurationGroupDeployOutput
}

func (*ConfigurationGroupDeploy) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationGroupDeploy)(nil)).Elem()
}

func (i *ConfigurationGroupDeploy) ToConfigurationGroupDeployOutput() ConfigurationGroupDeployOutput {
	return i.ToConfigurationGroupDeployOutputWithContext(context.Background())
}

func (i *ConfigurationGroupDeploy) ToConfigurationGroupDeployOutputWithContext(ctx context.Context) ConfigurationGroupDeployOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationGroupDeployOutput)
}

// ConfigurationGroupDeployArrayInput is an input type that accepts ConfigurationGroupDeployArray and ConfigurationGroupDeployArrayOutput values.
// You can construct a concrete instance of `ConfigurationGroupDeployArrayInput` via:
//
//	ConfigurationGroupDeployArray{ ConfigurationGroupDeployArgs{...} }
type ConfigurationGroupDeployArrayInput interface {
	pulumi.Input

	ToConfigurationGroupDeployArrayOutput() ConfigurationGroupDeployArrayOutput
	ToConfigurationGroupDeployArrayOutputWithContext(context.Context) ConfigurationGroupDeployArrayOutput
}

type ConfigurationGroupDeployArray []ConfigurationGroupDeployInput

func (ConfigurationGroupDeployArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigurationGroupDeploy)(nil)).Elem()
}

func (i ConfigurationGroupDeployArray) ToConfigurationGroupDeployArrayOutput() ConfigurationGroupDeployArrayOutput {
	return i.ToConfigurationGroupDeployArrayOutputWithContext(context.Background())
}

func (i ConfigurationGroupDeployArray) ToConfigurationGroupDeployArrayOutputWithContext(ctx context.Context) ConfigurationGroupDeployArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationGroupDeployArrayOutput)
}

// ConfigurationGroupDeployMapInput is an input type that accepts ConfigurationGroupDeployMap and ConfigurationGroupDeployMapOutput values.
// You can construct a concrete instance of `ConfigurationGroupDeployMapInput` via:
//
//	ConfigurationGroupDeployMap{ "key": ConfigurationGroupDeployArgs{...} }
type ConfigurationGroupDeployMapInput interface {
	pulumi.Input

	ToConfigurationGroupDeployMapOutput() ConfigurationGroupDeployMapOutput
	ToConfigurationGroupDeployMapOutputWithContext(context.Context) ConfigurationGroupDeployMapOutput
}

type ConfigurationGroupDeployMap map[string]ConfigurationGroupDeployInput

func (ConfigurationGroupDeployMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigurationGroupDeploy)(nil)).Elem()
}

func (i ConfigurationGroupDeployMap) ToConfigurationGroupDeployMapOutput() ConfigurationGroupDeployMapOutput {
	return i.ToConfigurationGroupDeployMapOutputWithContext(context.Background())
}

func (i ConfigurationGroupDeployMap) ToConfigurationGroupDeployMapOutputWithContext(ctx context.Context) ConfigurationGroupDeployMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationGroupDeployMapOutput)
}

type ConfigurationGroupDeployOutput struct{ *pulumi.OutputState }

func (ConfigurationGroupDeployOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationGroupDeploy)(nil)).Elem()
}

func (o ConfigurationGroupDeployOutput) ToConfigurationGroupDeployOutput() ConfigurationGroupDeployOutput {
	return o
}

func (o ConfigurationGroupDeployOutput) ToConfigurationGroupDeployOutputWithContext(ctx context.Context) ConfigurationGroupDeployOutput {
	return o
}

// Configuration Group ID
func (o ConfigurationGroupDeployOutput) ConfigurationGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationGroupDeploy) pulumi.StringOutput { return v.ConfigurationGroupId }).(pulumi.StringOutput)
}

// List of devices
func (o ConfigurationGroupDeployOutput) Devices() ConfigurationGroupDeployDeviceArrayOutput {
	return o.ApplyT(func(v *ConfigurationGroupDeploy) ConfigurationGroupDeployDeviceArrayOutput { return v.Devices }).(ConfigurationGroupDeployDeviceArrayOutput)
}

type ConfigurationGroupDeployArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationGroupDeployArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigurationGroupDeploy)(nil)).Elem()
}

func (o ConfigurationGroupDeployArrayOutput) ToConfigurationGroupDeployArrayOutput() ConfigurationGroupDeployArrayOutput {
	return o
}

func (o ConfigurationGroupDeployArrayOutput) ToConfigurationGroupDeployArrayOutputWithContext(ctx context.Context) ConfigurationGroupDeployArrayOutput {
	return o
}

func (o ConfigurationGroupDeployArrayOutput) Index(i pulumi.IntInput) ConfigurationGroupDeployOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConfigurationGroupDeploy {
		return vs[0].([]*ConfigurationGroupDeploy)[vs[1].(int)]
	}).(ConfigurationGroupDeployOutput)
}

type ConfigurationGroupDeployMapOutput struct{ *pulumi.OutputState }

func (ConfigurationGroupDeployMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigurationGroupDeploy)(nil)).Elem()
}

func (o ConfigurationGroupDeployMapOutput) ToConfigurationGroupDeployMapOutput() ConfigurationGroupDeployMapOutput {
	return o
}

func (o ConfigurationGroupDeployMapOutput) ToConfigurationGroupDeployMapOutputWithContext(ctx context.Context) ConfigurationGroupDeployMapOutput {
	return o
}

func (o ConfigurationGroupDeployMapOutput) MapIndex(k pulumi.StringInput) ConfigurationGroupDeployOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConfigurationGroupDeploy {
		return vs[0].(map[string]*ConfigurationGroupDeploy)[vs[1].(string)]
	}).(ConfigurationGroupDeployOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationGroupDeployInput)(nil)).Elem(), &ConfigurationGroupDeploy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationGroupDeployArrayInput)(nil)).Elem(), ConfigurationGroupDeployArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationGroupDeployMapInput)(nil)).Elem(), ConfigurationGroupDeployMap{})
	pulumi.RegisterOutputType(ConfigurationGroupDeployOutput{})
	pulumi.RegisterOutputType(ConfigurationGroupDeployArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationGroupDeployMapOutput{})
}
