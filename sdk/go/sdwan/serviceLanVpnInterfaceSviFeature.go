// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Service LAN VPN Interface SVI Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "service_lan_vpn_interface_svi_feature_id,feature_profile_id,service_lan_vpn_feature_id"
//
// ```sh
// $ pulumi import sdwan:index/serviceLanVpnInterfaceSviFeature:ServiceLanVpnInterfaceSviFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037"
// ```
type ServiceLanVpnInterfaceSviFeature struct {
	pulumi.CustomResourceState

	AclIpv4EgressFeatureId  pulumi.StringPtrOutput `pulumi:"aclIpv4EgressFeatureId"`
	AclIpv4IngressFeatureId pulumi.StringPtrOutput `pulumi:"aclIpv4IngressFeatureId"`
	AclIpv6EgressFeatureId  pulumi.StringPtrOutput `pulumi:"aclIpv6EgressFeatureId"`
	AclIpv6IngressFeatureId pulumi.StringPtrOutput `pulumi:"aclIpv6IngressFeatureId"`
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds
	//   - Range: `0`-`2678400`
	//   - Default value: `1200`
	ArpTimeout pulumi.IntPtrOutput `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable pulumi.StringPtrOutput `pulumi:"arpTimeoutVariable"`
	// Configure static ARP entries
	Arps ServiceLanVpnInterfaceSviFeatureArpArrayOutput `pulumi:"arps"`
	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Enable DHCPv6
	//   - Default value: `false`
	EnableDhcpv6 pulumi.BoolPtrOutput `pulumi:"enableDhcpv6"`
	// Variable name
	EnableDhcpv6Variable pulumi.StringPtrOutput `pulumi:"enableDhcpv6Variable"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// ICMP/ICMPv6 Redirect Disable
	//   - Default value: `true`
	IcmpRedirectDisable pulumi.BoolPtrOutput `pulumi:"icmpRedirectDisable"`
	// Variable name
	IcmpRedirectDisableVariable pulumi.StringPtrOutput `pulumi:"icmpRedirectDisableVariable"`
	// Interface description
	InterfaceDescription pulumi.StringPtrOutput `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrOutput `pulumi:"interfaceDescriptionVariable"`
	// Interface MTU <1500..9216> in bytes
	//   - Range: `1500`-`9216`
	//   - Default value: `1500`
	InterfaceMtu pulumi.IntPtrOutput `pulumi:"interfaceMtu"`
	// Variable name
	InterfaceMtuVariable pulumi.StringPtrOutput `pulumi:"interfaceMtuVariable"`
	// Interface name: VLAN 1 - VLAN 4094 when present
	InterfaceName pulumi.StringPtrOutput `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable pulumi.StringPtrOutput `pulumi:"interfaceNameVariable"`
	// IP Directed-Broadcast
	//   - Default value: `false`
	IpDirectedBroadcast pulumi.BoolPtrOutput `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable pulumi.StringPtrOutput `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU <576..Interface MTU>, in bytes
	//   - Range: `576`-`9216`
	//   - Default value: `1500`
	IpMtu pulumi.IntPtrOutput `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable pulumi.StringPtrOutput `pulumi:"ipMtuVariable"`
	// IP Address
	Ipv4Address pulumi.StringPtrOutput `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrOutput `pulumi:"ipv4AddressVariable"`
	// List of DHCP helper addresses
	Ipv4DhcpHelpers pulumi.StringArrayOutput `pulumi:"ipv4DhcpHelpers"`
	// Variable name
	Ipv4DhcpHelpersVariable pulumi.StringPtrOutput `pulumi:"ipv4DhcpHelpersVariable"`
	// Assign secondary IP addresses
	Ipv4SecondaryAddresses ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddressArrayOutput `pulumi:"ipv4SecondaryAddresses"`
	// Subnet Mask
	//   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrOutput `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable pulumi.StringPtrOutput `pulumi:"ipv4SubnetMaskVariable"`
	// Enable ipv4 VRRP
	Ipv4Vrrps ServiceLanVpnInterfaceSviFeatureIpv4VrrpArrayOutput `pulumi:"ipv4Vrrps"`
	// Assign IPv6 address
	Ipv6Address pulumi.StringPtrOutput `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrOutput `pulumi:"ipv6AddressVariable"`
	// DHCPv6 Helper
	Ipv6DhcpHelpers ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelperArrayOutput `pulumi:"ipv6DhcpHelpers"`
	// Assign secondary IPv6 addresses
	Ipv6SecondaryAddresses ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddressArrayOutput `pulumi:"ipv6SecondaryAddresses"`
	// Enable ipv6 VRRP
	Ipv6Vrrps ServiceLanVpnInterfaceSviFeatureIpv6VrrpArrayOutput `pulumi:"ipv6Vrrps"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringOutput `pulumi:"serviceLanVpnFeatureId"`
	// Administrative state
	//   - Default value: `true`
	Shutdown pulumi.BoolPtrOutput `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable pulumi.StringPtrOutput `pulumi:"shutdownVariable"`
	// TCP MSS on SYN packets, in bytes
	//   - Range: `552`-`1960`
	TcpMss pulumi.IntPtrOutput `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable pulumi.StringPtrOutput `pulumi:"tcpMssVariable"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewServiceLanVpnInterfaceSviFeature registers a new resource with the given unique name, arguments, and options.
func NewServiceLanVpnInterfaceSviFeature(ctx *pulumi.Context,
	name string, args *ServiceLanVpnInterfaceSviFeatureArgs, opts ...pulumi.ResourceOption) (*ServiceLanVpnInterfaceSviFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	if args.ServiceLanVpnFeatureId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceLanVpnFeatureId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceLanVpnInterfaceSviFeature
	err := ctx.RegisterResource("sdwan:index/serviceLanVpnInterfaceSviFeature:ServiceLanVpnInterfaceSviFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceLanVpnInterfaceSviFeature gets an existing ServiceLanVpnInterfaceSviFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceLanVpnInterfaceSviFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceLanVpnInterfaceSviFeatureState, opts ...pulumi.ResourceOption) (*ServiceLanVpnInterfaceSviFeature, error) {
	var resource ServiceLanVpnInterfaceSviFeature
	err := ctx.ReadResource("sdwan:index/serviceLanVpnInterfaceSviFeature:ServiceLanVpnInterfaceSviFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceLanVpnInterfaceSviFeature resources.
type serviceLanVpnInterfaceSviFeatureState struct {
	AclIpv4EgressFeatureId  *string `pulumi:"aclIpv4EgressFeatureId"`
	AclIpv4IngressFeatureId *string `pulumi:"aclIpv4IngressFeatureId"`
	AclIpv6EgressFeatureId  *string `pulumi:"aclIpv6EgressFeatureId"`
	AclIpv6IngressFeatureId *string `pulumi:"aclIpv6IngressFeatureId"`
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds
	//   - Range: `0`-`2678400`
	//   - Default value: `1200`
	ArpTimeout *int `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable *string `pulumi:"arpTimeoutVariable"`
	// Configure static ARP entries
	Arps []ServiceLanVpnInterfaceSviFeatureArp `pulumi:"arps"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Enable DHCPv6
	//   - Default value: `false`
	EnableDhcpv6 *bool `pulumi:"enableDhcpv6"`
	// Variable name
	EnableDhcpv6Variable *string `pulumi:"enableDhcpv6Variable"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// ICMP/ICMPv6 Redirect Disable
	//   - Default value: `true`
	IcmpRedirectDisable *bool `pulumi:"icmpRedirectDisable"`
	// Variable name
	IcmpRedirectDisableVariable *string `pulumi:"icmpRedirectDisableVariable"`
	// Interface description
	InterfaceDescription *string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable *string `pulumi:"interfaceDescriptionVariable"`
	// Interface MTU <1500..9216> in bytes
	//   - Range: `1500`-`9216`
	//   - Default value: `1500`
	InterfaceMtu *int `pulumi:"interfaceMtu"`
	// Variable name
	InterfaceMtuVariable *string `pulumi:"interfaceMtuVariable"`
	// Interface name: VLAN 1 - VLAN 4094 when present
	InterfaceName *string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable *string `pulumi:"interfaceNameVariable"`
	// IP Directed-Broadcast
	//   - Default value: `false`
	IpDirectedBroadcast *bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable *string `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU <576..Interface MTU>, in bytes
	//   - Range: `576`-`9216`
	//   - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	// IP Address
	Ipv4Address *string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable *string `pulumi:"ipv4AddressVariable"`
	// List of DHCP helper addresses
	Ipv4DhcpHelpers []string `pulumi:"ipv4DhcpHelpers"`
	// Variable name
	Ipv4DhcpHelpersVariable *string `pulumi:"ipv4DhcpHelpersVariable"`
	// Assign secondary IP addresses
	Ipv4SecondaryAddresses []ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddress `pulumi:"ipv4SecondaryAddresses"`
	// Subnet Mask
	//   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask *string `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable *string `pulumi:"ipv4SubnetMaskVariable"`
	// Enable ipv4 VRRP
	Ipv4Vrrps []ServiceLanVpnInterfaceSviFeatureIpv4Vrrp `pulumi:"ipv4Vrrps"`
	// Assign IPv6 address
	Ipv6Address *string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable *string `pulumi:"ipv6AddressVariable"`
	// DHCPv6 Helper
	Ipv6DhcpHelpers []ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelper `pulumi:"ipv6DhcpHelpers"`
	// Assign secondary IPv6 addresses
	Ipv6SecondaryAddresses []ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddress `pulumi:"ipv6SecondaryAddresses"`
	// Enable ipv6 VRRP
	Ipv6Vrrps []ServiceLanVpnInterfaceSviFeatureIpv6Vrrp `pulumi:"ipv6Vrrps"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId *string `pulumi:"serviceLanVpnFeatureId"`
	// Administrative state
	//   - Default value: `true`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// TCP MSS on SYN packets, in bytes
	//   - Range: `552`-`1960`
	TcpMss *int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable *string `pulumi:"tcpMssVariable"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type ServiceLanVpnInterfaceSviFeatureState struct {
	AclIpv4EgressFeatureId  pulumi.StringPtrInput
	AclIpv4IngressFeatureId pulumi.StringPtrInput
	AclIpv6EgressFeatureId  pulumi.StringPtrInput
	AclIpv6IngressFeatureId pulumi.StringPtrInput
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds
	//   - Range: `0`-`2678400`
	//   - Default value: `1200`
	ArpTimeout pulumi.IntPtrInput
	// Variable name
	ArpTimeoutVariable pulumi.StringPtrInput
	// Configure static ARP entries
	Arps ServiceLanVpnInterfaceSviFeatureArpArrayInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Enable DHCPv6
	//   - Default value: `false`
	EnableDhcpv6 pulumi.BoolPtrInput
	// Variable name
	EnableDhcpv6Variable pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// ICMP/ICMPv6 Redirect Disable
	//   - Default value: `true`
	IcmpRedirectDisable pulumi.BoolPtrInput
	// Variable name
	IcmpRedirectDisableVariable pulumi.StringPtrInput
	// Interface description
	InterfaceDescription pulumi.StringPtrInput
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrInput
	// Interface MTU <1500..9216> in bytes
	//   - Range: `1500`-`9216`
	//   - Default value: `1500`
	InterfaceMtu pulumi.IntPtrInput
	// Variable name
	InterfaceMtuVariable pulumi.StringPtrInput
	// Interface name: VLAN 1 - VLAN 4094 when present
	InterfaceName pulumi.StringPtrInput
	// Variable name
	InterfaceNameVariable pulumi.StringPtrInput
	// IP Directed-Broadcast
	//   - Default value: `false`
	IpDirectedBroadcast pulumi.BoolPtrInput
	// Variable name
	IpDirectedBroadcastVariable pulumi.StringPtrInput
	// IP MTU <576..Interface MTU>, in bytes
	//   - Range: `576`-`9216`
	//   - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	// IP Address
	Ipv4Address pulumi.StringPtrInput
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrInput
	// List of DHCP helper addresses
	Ipv4DhcpHelpers pulumi.StringArrayInput
	// Variable name
	Ipv4DhcpHelpersVariable pulumi.StringPtrInput
	// Assign secondary IP addresses
	Ipv4SecondaryAddresses ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddressArrayInput
	// Subnet Mask
	//   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrInput
	// Variable name
	Ipv4SubnetMaskVariable pulumi.StringPtrInput
	// Enable ipv4 VRRP
	Ipv4Vrrps ServiceLanVpnInterfaceSviFeatureIpv4VrrpArrayInput
	// Assign IPv6 address
	Ipv6Address pulumi.StringPtrInput
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrInput
	// DHCPv6 Helper
	Ipv6DhcpHelpers ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelperArrayInput
	// Assign secondary IPv6 addresses
	Ipv6SecondaryAddresses ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddressArrayInput
	// Enable ipv6 VRRP
	Ipv6Vrrps ServiceLanVpnInterfaceSviFeatureIpv6VrrpArrayInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringPtrInput
	// Administrative state
	//   - Default value: `true`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// TCP MSS on SYN packets, in bytes
	//   - Range: `552`-`1960`
	TcpMss pulumi.IntPtrInput
	// Variable name
	TcpMssVariable pulumi.StringPtrInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (ServiceLanVpnInterfaceSviFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceLanVpnInterfaceSviFeatureState)(nil)).Elem()
}

type serviceLanVpnInterfaceSviFeatureArgs struct {
	AclIpv4EgressFeatureId  *string `pulumi:"aclIpv4EgressFeatureId"`
	AclIpv4IngressFeatureId *string `pulumi:"aclIpv4IngressFeatureId"`
	AclIpv6EgressFeatureId  *string `pulumi:"aclIpv6EgressFeatureId"`
	AclIpv6IngressFeatureId *string `pulumi:"aclIpv6IngressFeatureId"`
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds
	//   - Range: `0`-`2678400`
	//   - Default value: `1200`
	ArpTimeout *int `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable *string `pulumi:"arpTimeoutVariable"`
	// Configure static ARP entries
	Arps []ServiceLanVpnInterfaceSviFeatureArp `pulumi:"arps"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Enable DHCPv6
	//   - Default value: `false`
	EnableDhcpv6 *bool `pulumi:"enableDhcpv6"`
	// Variable name
	EnableDhcpv6Variable *string `pulumi:"enableDhcpv6Variable"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// ICMP/ICMPv6 Redirect Disable
	//   - Default value: `true`
	IcmpRedirectDisable *bool `pulumi:"icmpRedirectDisable"`
	// Variable name
	IcmpRedirectDisableVariable *string `pulumi:"icmpRedirectDisableVariable"`
	// Interface description
	InterfaceDescription *string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable *string `pulumi:"interfaceDescriptionVariable"`
	// Interface MTU <1500..9216> in bytes
	//   - Range: `1500`-`9216`
	//   - Default value: `1500`
	InterfaceMtu *int `pulumi:"interfaceMtu"`
	// Variable name
	InterfaceMtuVariable *string `pulumi:"interfaceMtuVariable"`
	// Interface name: VLAN 1 - VLAN 4094 when present
	InterfaceName *string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable *string `pulumi:"interfaceNameVariable"`
	// IP Directed-Broadcast
	//   - Default value: `false`
	IpDirectedBroadcast *bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable *string `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU <576..Interface MTU>, in bytes
	//   - Range: `576`-`9216`
	//   - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	// IP Address
	Ipv4Address *string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable *string `pulumi:"ipv4AddressVariable"`
	// List of DHCP helper addresses
	Ipv4DhcpHelpers []string `pulumi:"ipv4DhcpHelpers"`
	// Variable name
	Ipv4DhcpHelpersVariable *string `pulumi:"ipv4DhcpHelpersVariable"`
	// Assign secondary IP addresses
	Ipv4SecondaryAddresses []ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddress `pulumi:"ipv4SecondaryAddresses"`
	// Subnet Mask
	//   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask *string `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable *string `pulumi:"ipv4SubnetMaskVariable"`
	// Enable ipv4 VRRP
	Ipv4Vrrps []ServiceLanVpnInterfaceSviFeatureIpv4Vrrp `pulumi:"ipv4Vrrps"`
	// Assign IPv6 address
	Ipv6Address *string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable *string `pulumi:"ipv6AddressVariable"`
	// DHCPv6 Helper
	Ipv6DhcpHelpers []ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelper `pulumi:"ipv6DhcpHelpers"`
	// Assign secondary IPv6 addresses
	Ipv6SecondaryAddresses []ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddress `pulumi:"ipv6SecondaryAddresses"`
	// Enable ipv6 VRRP
	Ipv6Vrrps []ServiceLanVpnInterfaceSviFeatureIpv6Vrrp `pulumi:"ipv6Vrrps"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId string `pulumi:"serviceLanVpnFeatureId"`
	// Administrative state
	//   - Default value: `true`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// TCP MSS on SYN packets, in bytes
	//   - Range: `552`-`1960`
	TcpMss *int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable *string `pulumi:"tcpMssVariable"`
}

// The set of arguments for constructing a ServiceLanVpnInterfaceSviFeature resource.
type ServiceLanVpnInterfaceSviFeatureArgs struct {
	AclIpv4EgressFeatureId  pulumi.StringPtrInput
	AclIpv4IngressFeatureId pulumi.StringPtrInput
	AclIpv6EgressFeatureId  pulumi.StringPtrInput
	AclIpv6IngressFeatureId pulumi.StringPtrInput
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds
	//   - Range: `0`-`2678400`
	//   - Default value: `1200`
	ArpTimeout pulumi.IntPtrInput
	// Variable name
	ArpTimeoutVariable pulumi.StringPtrInput
	// Configure static ARP entries
	Arps ServiceLanVpnInterfaceSviFeatureArpArrayInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Enable DHCPv6
	//   - Default value: `false`
	EnableDhcpv6 pulumi.BoolPtrInput
	// Variable name
	EnableDhcpv6Variable pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// ICMP/ICMPv6 Redirect Disable
	//   - Default value: `true`
	IcmpRedirectDisable pulumi.BoolPtrInput
	// Variable name
	IcmpRedirectDisableVariable pulumi.StringPtrInput
	// Interface description
	InterfaceDescription pulumi.StringPtrInput
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrInput
	// Interface MTU <1500..9216> in bytes
	//   - Range: `1500`-`9216`
	//   - Default value: `1500`
	InterfaceMtu pulumi.IntPtrInput
	// Variable name
	InterfaceMtuVariable pulumi.StringPtrInput
	// Interface name: VLAN 1 - VLAN 4094 when present
	InterfaceName pulumi.StringPtrInput
	// Variable name
	InterfaceNameVariable pulumi.StringPtrInput
	// IP Directed-Broadcast
	//   - Default value: `false`
	IpDirectedBroadcast pulumi.BoolPtrInput
	// Variable name
	IpDirectedBroadcastVariable pulumi.StringPtrInput
	// IP MTU <576..Interface MTU>, in bytes
	//   - Range: `576`-`9216`
	//   - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	// IP Address
	Ipv4Address pulumi.StringPtrInput
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrInput
	// List of DHCP helper addresses
	Ipv4DhcpHelpers pulumi.StringArrayInput
	// Variable name
	Ipv4DhcpHelpersVariable pulumi.StringPtrInput
	// Assign secondary IP addresses
	Ipv4SecondaryAddresses ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddressArrayInput
	// Subnet Mask
	//   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrInput
	// Variable name
	Ipv4SubnetMaskVariable pulumi.StringPtrInput
	// Enable ipv4 VRRP
	Ipv4Vrrps ServiceLanVpnInterfaceSviFeatureIpv4VrrpArrayInput
	// Assign IPv6 address
	Ipv6Address pulumi.StringPtrInput
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrInput
	// DHCPv6 Helper
	Ipv6DhcpHelpers ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelperArrayInput
	// Assign secondary IPv6 addresses
	Ipv6SecondaryAddresses ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddressArrayInput
	// Enable ipv6 VRRP
	Ipv6Vrrps ServiceLanVpnInterfaceSviFeatureIpv6VrrpArrayInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringInput
	// Administrative state
	//   - Default value: `true`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// TCP MSS on SYN packets, in bytes
	//   - Range: `552`-`1960`
	TcpMss pulumi.IntPtrInput
	// Variable name
	TcpMssVariable pulumi.StringPtrInput
}

func (ServiceLanVpnInterfaceSviFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceLanVpnInterfaceSviFeatureArgs)(nil)).Elem()
}

type ServiceLanVpnInterfaceSviFeatureInput interface {
	pulumi.Input

	ToServiceLanVpnInterfaceSviFeatureOutput() ServiceLanVpnInterfaceSviFeatureOutput
	ToServiceLanVpnInterfaceSviFeatureOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceSviFeatureOutput
}

func (*ServiceLanVpnInterfaceSviFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLanVpnInterfaceSviFeature)(nil)).Elem()
}

func (i *ServiceLanVpnInterfaceSviFeature) ToServiceLanVpnInterfaceSviFeatureOutput() ServiceLanVpnInterfaceSviFeatureOutput {
	return i.ToServiceLanVpnInterfaceSviFeatureOutputWithContext(context.Background())
}

func (i *ServiceLanVpnInterfaceSviFeature) ToServiceLanVpnInterfaceSviFeatureOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceSviFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLanVpnInterfaceSviFeatureOutput)
}

// ServiceLanVpnInterfaceSviFeatureArrayInput is an input type that accepts ServiceLanVpnInterfaceSviFeatureArray and ServiceLanVpnInterfaceSviFeatureArrayOutput values.
// You can construct a concrete instance of `ServiceLanVpnInterfaceSviFeatureArrayInput` via:
//
//	ServiceLanVpnInterfaceSviFeatureArray{ ServiceLanVpnInterfaceSviFeatureArgs{...} }
type ServiceLanVpnInterfaceSviFeatureArrayInput interface {
	pulumi.Input

	ToServiceLanVpnInterfaceSviFeatureArrayOutput() ServiceLanVpnInterfaceSviFeatureArrayOutput
	ToServiceLanVpnInterfaceSviFeatureArrayOutputWithContext(context.Context) ServiceLanVpnInterfaceSviFeatureArrayOutput
}

type ServiceLanVpnInterfaceSviFeatureArray []ServiceLanVpnInterfaceSviFeatureInput

func (ServiceLanVpnInterfaceSviFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceLanVpnInterfaceSviFeature)(nil)).Elem()
}

func (i ServiceLanVpnInterfaceSviFeatureArray) ToServiceLanVpnInterfaceSviFeatureArrayOutput() ServiceLanVpnInterfaceSviFeatureArrayOutput {
	return i.ToServiceLanVpnInterfaceSviFeatureArrayOutputWithContext(context.Background())
}

func (i ServiceLanVpnInterfaceSviFeatureArray) ToServiceLanVpnInterfaceSviFeatureArrayOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceSviFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLanVpnInterfaceSviFeatureArrayOutput)
}

// ServiceLanVpnInterfaceSviFeatureMapInput is an input type that accepts ServiceLanVpnInterfaceSviFeatureMap and ServiceLanVpnInterfaceSviFeatureMapOutput values.
// You can construct a concrete instance of `ServiceLanVpnInterfaceSviFeatureMapInput` via:
//
//	ServiceLanVpnInterfaceSviFeatureMap{ "key": ServiceLanVpnInterfaceSviFeatureArgs{...} }
type ServiceLanVpnInterfaceSviFeatureMapInput interface {
	pulumi.Input

	ToServiceLanVpnInterfaceSviFeatureMapOutput() ServiceLanVpnInterfaceSviFeatureMapOutput
	ToServiceLanVpnInterfaceSviFeatureMapOutputWithContext(context.Context) ServiceLanVpnInterfaceSviFeatureMapOutput
}

type ServiceLanVpnInterfaceSviFeatureMap map[string]ServiceLanVpnInterfaceSviFeatureInput

func (ServiceLanVpnInterfaceSviFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceLanVpnInterfaceSviFeature)(nil)).Elem()
}

func (i ServiceLanVpnInterfaceSviFeatureMap) ToServiceLanVpnInterfaceSviFeatureMapOutput() ServiceLanVpnInterfaceSviFeatureMapOutput {
	return i.ToServiceLanVpnInterfaceSviFeatureMapOutputWithContext(context.Background())
}

func (i ServiceLanVpnInterfaceSviFeatureMap) ToServiceLanVpnInterfaceSviFeatureMapOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceSviFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLanVpnInterfaceSviFeatureMapOutput)
}

type ServiceLanVpnInterfaceSviFeatureOutput struct{ *pulumi.OutputState }

func (ServiceLanVpnInterfaceSviFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLanVpnInterfaceSviFeature)(nil)).Elem()
}

func (o ServiceLanVpnInterfaceSviFeatureOutput) ToServiceLanVpnInterfaceSviFeatureOutput() ServiceLanVpnInterfaceSviFeatureOutput {
	return o
}

func (o ServiceLanVpnInterfaceSviFeatureOutput) ToServiceLanVpnInterfaceSviFeatureOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceSviFeatureOutput {
	return o
}

func (o ServiceLanVpnInterfaceSviFeatureOutput) AclIpv4EgressFeatureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.AclIpv4EgressFeatureId }).(pulumi.StringPtrOutput)
}

func (o ServiceLanVpnInterfaceSviFeatureOutput) AclIpv4IngressFeatureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.AclIpv4IngressFeatureId }).(pulumi.StringPtrOutput)
}

func (o ServiceLanVpnInterfaceSviFeatureOutput) AclIpv6EgressFeatureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.AclIpv6EgressFeatureId }).(pulumi.StringPtrOutput)
}

func (o ServiceLanVpnInterfaceSviFeatureOutput) AclIpv6IngressFeatureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.AclIpv6IngressFeatureId }).(pulumi.StringPtrOutput)
}

// Timeout value for dynamically learned ARP entries, <0..2678400> seconds
//   - Range: `0`-`2678400`
//   - Default value: `1200`
func (o ServiceLanVpnInterfaceSviFeatureOutput) ArpTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.IntPtrOutput { return v.ArpTimeout }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceSviFeatureOutput) ArpTimeoutVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.ArpTimeoutVariable }).(pulumi.StringPtrOutput)
}

// Configure static ARP entries
func (o ServiceLanVpnInterfaceSviFeatureOutput) Arps() ServiceLanVpnInterfaceSviFeatureArpArrayOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) ServiceLanVpnInterfaceSviFeatureArpArrayOutput {
		return v.Arps
	}).(ServiceLanVpnInterfaceSviFeatureArpArrayOutput)
}

// The description of the Feature
func (o ServiceLanVpnInterfaceSviFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Enable DHCPv6
//   - Default value: `false`
func (o ServiceLanVpnInterfaceSviFeatureOutput) EnableDhcpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.BoolPtrOutput { return v.EnableDhcpv6 }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceSviFeatureOutput) EnableDhcpv6Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.EnableDhcpv6Variable }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o ServiceLanVpnInterfaceSviFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// ICMP/ICMPv6 Redirect Disable
//   - Default value: `true`
func (o ServiceLanVpnInterfaceSviFeatureOutput) IcmpRedirectDisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.BoolPtrOutput { return v.IcmpRedirectDisable }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceSviFeatureOutput) IcmpRedirectDisableVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.IcmpRedirectDisableVariable }).(pulumi.StringPtrOutput)
}

// Interface description
func (o ServiceLanVpnInterfaceSviFeatureOutput) InterfaceDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.InterfaceDescription }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceSviFeatureOutput) InterfaceDescriptionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput {
		return v.InterfaceDescriptionVariable
	}).(pulumi.StringPtrOutput)
}

// Interface MTU <1500..9216> in bytes
//   - Range: `1500`-`9216`
//   - Default value: `1500`
func (o ServiceLanVpnInterfaceSviFeatureOutput) InterfaceMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.IntPtrOutput { return v.InterfaceMtu }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceSviFeatureOutput) InterfaceMtuVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.InterfaceMtuVariable }).(pulumi.StringPtrOutput)
}

// Interface name: VLAN 1 - VLAN 4094 when present
func (o ServiceLanVpnInterfaceSviFeatureOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceSviFeatureOutput) InterfaceNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.InterfaceNameVariable }).(pulumi.StringPtrOutput)
}

// IP Directed-Broadcast
//   - Default value: `false`
func (o ServiceLanVpnInterfaceSviFeatureOutput) IpDirectedBroadcast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.BoolPtrOutput { return v.IpDirectedBroadcast }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceSviFeatureOutput) IpDirectedBroadcastVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.IpDirectedBroadcastVariable }).(pulumi.StringPtrOutput)
}

// IP MTU <576..Interface MTU>, in bytes
//   - Range: `576`-`9216`
//   - Default value: `1500`
func (o ServiceLanVpnInterfaceSviFeatureOutput) IpMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.IntPtrOutput { return v.IpMtu }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceSviFeatureOutput) IpMtuVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.IpMtuVariable }).(pulumi.StringPtrOutput)
}

// IP Address
func (o ServiceLanVpnInterfaceSviFeatureOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceSviFeatureOutput) Ipv4AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.Ipv4AddressVariable }).(pulumi.StringPtrOutput)
}

// List of DHCP helper addresses
func (o ServiceLanVpnInterfaceSviFeatureOutput) Ipv4DhcpHelpers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringArrayOutput { return v.Ipv4DhcpHelpers }).(pulumi.StringArrayOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceSviFeatureOutput) Ipv4DhcpHelpersVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.Ipv4DhcpHelpersVariable }).(pulumi.StringPtrOutput)
}

// Assign secondary IP addresses
func (o ServiceLanVpnInterfaceSviFeatureOutput) Ipv4SecondaryAddresses() ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddressArrayOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddressArrayOutput {
		return v.Ipv4SecondaryAddresses
	}).(ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddressArrayOutput)
}

// Subnet Mask
//   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
func (o ServiceLanVpnInterfaceSviFeatureOutput) Ipv4SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.Ipv4SubnetMask }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceSviFeatureOutput) Ipv4SubnetMaskVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.Ipv4SubnetMaskVariable }).(pulumi.StringPtrOutput)
}

// Enable ipv4 VRRP
func (o ServiceLanVpnInterfaceSviFeatureOutput) Ipv4Vrrps() ServiceLanVpnInterfaceSviFeatureIpv4VrrpArrayOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) ServiceLanVpnInterfaceSviFeatureIpv4VrrpArrayOutput {
		return v.Ipv4Vrrps
	}).(ServiceLanVpnInterfaceSviFeatureIpv4VrrpArrayOutput)
}

// Assign IPv6 address
func (o ServiceLanVpnInterfaceSviFeatureOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceSviFeatureOutput) Ipv6AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.Ipv6AddressVariable }).(pulumi.StringPtrOutput)
}

// DHCPv6 Helper
func (o ServiceLanVpnInterfaceSviFeatureOutput) Ipv6DhcpHelpers() ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelperArrayOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelperArrayOutput {
		return v.Ipv6DhcpHelpers
	}).(ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelperArrayOutput)
}

// Assign secondary IPv6 addresses
func (o ServiceLanVpnInterfaceSviFeatureOutput) Ipv6SecondaryAddresses() ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddressArrayOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddressArrayOutput {
		return v.Ipv6SecondaryAddresses
	}).(ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddressArrayOutput)
}

// Enable ipv6 VRRP
func (o ServiceLanVpnInterfaceSviFeatureOutput) Ipv6Vrrps() ServiceLanVpnInterfaceSviFeatureIpv6VrrpArrayOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) ServiceLanVpnInterfaceSviFeatureIpv6VrrpArrayOutput {
		return v.Ipv6Vrrps
	}).(ServiceLanVpnInterfaceSviFeatureIpv6VrrpArrayOutput)
}

// The name of the Feature
func (o ServiceLanVpnInterfaceSviFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Service LAN VPN Feature ID
func (o ServiceLanVpnInterfaceSviFeatureOutput) ServiceLanVpnFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringOutput { return v.ServiceLanVpnFeatureId }).(pulumi.StringOutput)
}

// Administrative state
//   - Default value: `true`
func (o ServiceLanVpnInterfaceSviFeatureOutput) Shutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.BoolPtrOutput { return v.Shutdown }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceSviFeatureOutput) ShutdownVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.ShutdownVariable }).(pulumi.StringPtrOutput)
}

// TCP MSS on SYN packets, in bytes
//   - Range: `552`-`1960`
func (o ServiceLanVpnInterfaceSviFeatureOutput) TcpMss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.IntPtrOutput { return v.TcpMss }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceSviFeatureOutput) TcpMssVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.StringPtrOutput { return v.TcpMssVariable }).(pulumi.StringPtrOutput)
}

// The version of the Feature
func (o ServiceLanVpnInterfaceSviFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceSviFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ServiceLanVpnInterfaceSviFeatureArrayOutput struct{ *pulumi.OutputState }

func (ServiceLanVpnInterfaceSviFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceLanVpnInterfaceSviFeature)(nil)).Elem()
}

func (o ServiceLanVpnInterfaceSviFeatureArrayOutput) ToServiceLanVpnInterfaceSviFeatureArrayOutput() ServiceLanVpnInterfaceSviFeatureArrayOutput {
	return o
}

func (o ServiceLanVpnInterfaceSviFeatureArrayOutput) ToServiceLanVpnInterfaceSviFeatureArrayOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceSviFeatureArrayOutput {
	return o
}

func (o ServiceLanVpnInterfaceSviFeatureArrayOutput) Index(i pulumi.IntInput) ServiceLanVpnInterfaceSviFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceLanVpnInterfaceSviFeature {
		return vs[0].([]*ServiceLanVpnInterfaceSviFeature)[vs[1].(int)]
	}).(ServiceLanVpnInterfaceSviFeatureOutput)
}

type ServiceLanVpnInterfaceSviFeatureMapOutput struct{ *pulumi.OutputState }

func (ServiceLanVpnInterfaceSviFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceLanVpnInterfaceSviFeature)(nil)).Elem()
}

func (o ServiceLanVpnInterfaceSviFeatureMapOutput) ToServiceLanVpnInterfaceSviFeatureMapOutput() ServiceLanVpnInterfaceSviFeatureMapOutput {
	return o
}

func (o ServiceLanVpnInterfaceSviFeatureMapOutput) ToServiceLanVpnInterfaceSviFeatureMapOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceSviFeatureMapOutput {
	return o
}

func (o ServiceLanVpnInterfaceSviFeatureMapOutput) MapIndex(k pulumi.StringInput) ServiceLanVpnInterfaceSviFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceLanVpnInterfaceSviFeature {
		return vs[0].(map[string]*ServiceLanVpnInterfaceSviFeature)[vs[1].(string)]
	}).(ServiceLanVpnInterfaceSviFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLanVpnInterfaceSviFeatureInput)(nil)).Elem(), &ServiceLanVpnInterfaceSviFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLanVpnInterfaceSviFeatureArrayInput)(nil)).Elem(), ServiceLanVpnInterfaceSviFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLanVpnInterfaceSviFeatureMapInput)(nil)).Elem(), ServiceLanVpnInterfaceSviFeatureMap{})
	pulumi.RegisterOutputType(ServiceLanVpnInterfaceSviFeatureOutput{})
	pulumi.RegisterOutputType(ServiceLanVpnInterfaceSviFeatureArrayOutput{})
	pulumi.RegisterOutputType(ServiceLanVpnInterfaceSviFeatureMapOutput{})
}
