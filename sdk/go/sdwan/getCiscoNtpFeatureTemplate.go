// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Cisco NTP feature template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupCiscoNtpFeatureTemplate(ctx, &sdwan.LookupCiscoNtpFeatureTemplateArgs{
//				Id: pulumi.StringRef("f6b2c44c-693c-4763-b010-895aa3d236bd"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCiscoNtpFeatureTemplate(ctx *pulumi.Context, args *LookupCiscoNtpFeatureTemplateArgs, opts ...pulumi.InvokeOption) (*LookupCiscoNtpFeatureTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCiscoNtpFeatureTemplateResult
	err := ctx.Invoke("sdwan:index/getCiscoNtpFeatureTemplate:getCiscoNtpFeatureTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCiscoNtpFeatureTemplate.
type LookupCiscoNtpFeatureTemplateArgs struct {
	// The id of the feature template
	Id *string `pulumi:"id"`
	// The name of the feature template
	Name *string `pulumi:"name"`
}

// A collection of values returned by getCiscoNtpFeatureTemplate.
type LookupCiscoNtpFeatureTemplateResult struct {
	// Set MD5 authentication key
	AuthenticationKeys []GetCiscoNtpFeatureTemplateAuthenticationKey `pulumi:"authenticationKeys"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	DeviceTypes []string `pulumi:"deviceTypes"`
	// The id of the feature template
	Id string `pulumi:"id"`
	// Configure device as NTP master
	Master bool `pulumi:"master"`
	// Set interface for NTP Master
	MasterSourceInterface string `pulumi:"masterSourceInterface"`
	// Variable name
	MasterSourceInterfaceVariable string `pulumi:"masterSourceInterfaceVariable"`
	// Master Stratum \n\n
	MasterStratum int `pulumi:"masterStratum"`
	// Variable name
	MasterStratumVariable string `pulumi:"masterStratumVariable"`
	// Variable name
	MasterVariable string `pulumi:"masterVariable"`
	// The name of the feature template
	Name string `pulumi:"name"`
	// Configure NTP servers
	Servers []GetCiscoNtpFeatureTemplateServer `pulumi:"servers"`
	// The template type
	TemplateType string `pulumi:"templateType"`
	// Designate authentication key as trustworthy
	TrustedKeys []int `pulumi:"trustedKeys"`
	// Variable name
	TrustedKeysVariable string `pulumi:"trustedKeysVariable"`
	// The version of the feature template
	Version int `pulumi:"version"`
}

func LookupCiscoNtpFeatureTemplateOutput(ctx *pulumi.Context, args LookupCiscoNtpFeatureTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupCiscoNtpFeatureTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCiscoNtpFeatureTemplateResult, error) {
			args := v.(LookupCiscoNtpFeatureTemplateArgs)
			r, err := LookupCiscoNtpFeatureTemplate(ctx, &args, opts...)
			var s LookupCiscoNtpFeatureTemplateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCiscoNtpFeatureTemplateResultOutput)
}

// A collection of arguments for invoking getCiscoNtpFeatureTemplate.
type LookupCiscoNtpFeatureTemplateOutputArgs struct {
	// The id of the feature template
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the feature template
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupCiscoNtpFeatureTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCiscoNtpFeatureTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getCiscoNtpFeatureTemplate.
type LookupCiscoNtpFeatureTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupCiscoNtpFeatureTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCiscoNtpFeatureTemplateResult)(nil)).Elem()
}

func (o LookupCiscoNtpFeatureTemplateResultOutput) ToLookupCiscoNtpFeatureTemplateResultOutput() LookupCiscoNtpFeatureTemplateResultOutput {
	return o
}

func (o LookupCiscoNtpFeatureTemplateResultOutput) ToLookupCiscoNtpFeatureTemplateResultOutputWithContext(ctx context.Context) LookupCiscoNtpFeatureTemplateResultOutput {
	return o
}

// Set MD5 authentication key
func (o LookupCiscoNtpFeatureTemplateResultOutput) AuthenticationKeys() GetCiscoNtpFeatureTemplateAuthenticationKeyArrayOutput {
	return o.ApplyT(func(v LookupCiscoNtpFeatureTemplateResult) []GetCiscoNtpFeatureTemplateAuthenticationKey {
		return v.AuthenticationKeys
	}).(GetCiscoNtpFeatureTemplateAuthenticationKeyArrayOutput)
}

// The description of the feature template
func (o LookupCiscoNtpFeatureTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoNtpFeatureTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
func (o LookupCiscoNtpFeatureTemplateResultOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCiscoNtpFeatureTemplateResult) []string { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// The id of the feature template
func (o LookupCiscoNtpFeatureTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoNtpFeatureTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// Configure device as NTP master
func (o LookupCiscoNtpFeatureTemplateResultOutput) Master() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCiscoNtpFeatureTemplateResult) bool { return v.Master }).(pulumi.BoolOutput)
}

// Set interface for NTP Master
func (o LookupCiscoNtpFeatureTemplateResultOutput) MasterSourceInterface() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoNtpFeatureTemplateResult) string { return v.MasterSourceInterface }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoNtpFeatureTemplateResultOutput) MasterSourceInterfaceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoNtpFeatureTemplateResult) string { return v.MasterSourceInterfaceVariable }).(pulumi.StringOutput)
}

// Master Stratum \n\n
func (o LookupCiscoNtpFeatureTemplateResultOutput) MasterStratum() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoNtpFeatureTemplateResult) int { return v.MasterStratum }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoNtpFeatureTemplateResultOutput) MasterStratumVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoNtpFeatureTemplateResult) string { return v.MasterStratumVariable }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoNtpFeatureTemplateResultOutput) MasterVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoNtpFeatureTemplateResult) string { return v.MasterVariable }).(pulumi.StringOutput)
}

// The name of the feature template
func (o LookupCiscoNtpFeatureTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoNtpFeatureTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// Configure NTP servers
func (o LookupCiscoNtpFeatureTemplateResultOutput) Servers() GetCiscoNtpFeatureTemplateServerArrayOutput {
	return o.ApplyT(func(v LookupCiscoNtpFeatureTemplateResult) []GetCiscoNtpFeatureTemplateServer { return v.Servers }).(GetCiscoNtpFeatureTemplateServerArrayOutput)
}

// The template type
func (o LookupCiscoNtpFeatureTemplateResultOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoNtpFeatureTemplateResult) string { return v.TemplateType }).(pulumi.StringOutput)
}

// Designate authentication key as trustworthy
func (o LookupCiscoNtpFeatureTemplateResultOutput) TrustedKeys() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupCiscoNtpFeatureTemplateResult) []int { return v.TrustedKeys }).(pulumi.IntArrayOutput)
}

// Variable name
func (o LookupCiscoNtpFeatureTemplateResultOutput) TrustedKeysVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoNtpFeatureTemplateResult) string { return v.TrustedKeysVariable }).(pulumi.StringOutput)
}

// The version of the feature template
func (o LookupCiscoNtpFeatureTemplateResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoNtpFeatureTemplateResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCiscoNtpFeatureTemplateResultOutput{})
}
