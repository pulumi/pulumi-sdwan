// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the CLI Device Template .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupCliDeviceTemplate(ctx, &sdwan.LookupCliDeviceTemplateArgs{
//				Id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCliDeviceTemplate(ctx *pulumi.Context, args *LookupCliDeviceTemplateArgs, opts ...pulumi.InvokeOption) (*LookupCliDeviceTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCliDeviceTemplateResult
	err := ctx.Invoke("sdwan:index/getCliDeviceTemplate:getCliDeviceTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCliDeviceTemplate.
type LookupCliDeviceTemplateArgs struct {
	// The id of the object
	Id string `pulumi:"id"`
}

// A collection of values returned by getCliDeviceTemplate.
type LookupCliDeviceTemplateResult struct {
	// CLI configuration
	CliConfiguration string `pulumi:"cliConfiguration"`
	// CLI type
	CliType string `pulumi:"cliType"`
	// The description of the device template
	Description string `pulumi:"description"`
	// The device type (e.g., `vedge-ISR-4331`)
	DeviceType string `pulumi:"deviceType"`
	// The id of the object
	Id string `pulumi:"id"`
	// The name of the device template
	Name string `pulumi:"name"`
	// The version of the object
	Version int `pulumi:"version"`
}

func LookupCliDeviceTemplateOutput(ctx *pulumi.Context, args LookupCliDeviceTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupCliDeviceTemplateResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCliDeviceTemplateResultOutput, error) {
			args := v.(LookupCliDeviceTemplateArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sdwan:index/getCliDeviceTemplate:getCliDeviceTemplate", args, LookupCliDeviceTemplateResultOutput{}, options).(LookupCliDeviceTemplateResultOutput), nil
		}).(LookupCliDeviceTemplateResultOutput)
}

// A collection of arguments for invoking getCliDeviceTemplate.
type LookupCliDeviceTemplateOutputArgs struct {
	// The id of the object
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupCliDeviceTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCliDeviceTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getCliDeviceTemplate.
type LookupCliDeviceTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupCliDeviceTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCliDeviceTemplateResult)(nil)).Elem()
}

func (o LookupCliDeviceTemplateResultOutput) ToLookupCliDeviceTemplateResultOutput() LookupCliDeviceTemplateResultOutput {
	return o
}

func (o LookupCliDeviceTemplateResultOutput) ToLookupCliDeviceTemplateResultOutputWithContext(ctx context.Context) LookupCliDeviceTemplateResultOutput {
	return o
}

// CLI configuration
func (o LookupCliDeviceTemplateResultOutput) CliConfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCliDeviceTemplateResult) string { return v.CliConfiguration }).(pulumi.StringOutput)
}

// CLI type
func (o LookupCliDeviceTemplateResultOutput) CliType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCliDeviceTemplateResult) string { return v.CliType }).(pulumi.StringOutput)
}

// The description of the device template
func (o LookupCliDeviceTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCliDeviceTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// The device type (e.g., `vedge-ISR-4331`)
func (o LookupCliDeviceTemplateResultOutput) DeviceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCliDeviceTemplateResult) string { return v.DeviceType }).(pulumi.StringOutput)
}

// The id of the object
func (o LookupCliDeviceTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCliDeviceTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the device template
func (o LookupCliDeviceTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCliDeviceTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// The version of the object
func (o LookupCliDeviceTemplateResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCliDeviceTemplateResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCliDeviceTemplateResultOutput{})
}
