// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Preferred Color Group Policy Object .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewPreferredColorGroupPolicyObject(ctx, "example", &sdwan.PreferredColorGroupPolicyObjectArgs{
//				Name:                     pulumi.String("Example"),
//				PrimaryColorPreference:   pulumi.String("blue bronze"),
//				PrimaryPathPreference:    pulumi.String("direct-path"),
//				SecondaryColorPreference: pulumi.String("3g"),
//				SecondaryPathPreference:  pulumi.String("multi-hop-path"),
//				TertiaryColorPreference:  pulumi.String("custom1"),
//				TertiaryPathPreference:   pulumi.String("all-paths"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/preferredColorGroupPolicyObject:PreferredColorGroupPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type PreferredColorGroupPolicyObject struct {
	pulumi.CustomResourceState

	// The name of the policy object
	Name pulumi.StringOutput `pulumi:"name"`
	// Color or space separated list of colors
	PrimaryColorPreference pulumi.StringOutput `pulumi:"primaryColorPreference"`
	// Path preference
	//   - Choices: `direct-path`, `multi-hop-path`, `all-paths`
	PrimaryPathPreference pulumi.StringPtrOutput `pulumi:"primaryPathPreference"`
	// Color or space separated list of colors
	SecondaryColorPreference pulumi.StringPtrOutput `pulumi:"secondaryColorPreference"`
	// Path preference
	//   - Choices: `direct-path`, `multi-hop-path`, `all-paths`
	SecondaryPathPreference pulumi.StringPtrOutput `pulumi:"secondaryPathPreference"`
	// Color or space separated list of colors
	TertiaryColorPreference pulumi.StringPtrOutput `pulumi:"tertiaryColorPreference"`
	// Path preference
	//   - Choices: `direct-path`, `multi-hop-path`, `all-paths`
	TertiaryPathPreference pulumi.StringPtrOutput `pulumi:"tertiaryPathPreference"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewPreferredColorGroupPolicyObject registers a new resource with the given unique name, arguments, and options.
func NewPreferredColorGroupPolicyObject(ctx *pulumi.Context,
	name string, args *PreferredColorGroupPolicyObjectArgs, opts ...pulumi.ResourceOption) (*PreferredColorGroupPolicyObject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PrimaryColorPreference == nil {
		return nil, errors.New("invalid value for required argument 'PrimaryColorPreference'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PreferredColorGroupPolicyObject
	err := ctx.RegisterResource("sdwan:index/preferredColorGroupPolicyObject:PreferredColorGroupPolicyObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPreferredColorGroupPolicyObject gets an existing PreferredColorGroupPolicyObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPreferredColorGroupPolicyObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PreferredColorGroupPolicyObjectState, opts ...pulumi.ResourceOption) (*PreferredColorGroupPolicyObject, error) {
	var resource PreferredColorGroupPolicyObject
	err := ctx.ReadResource("sdwan:index/preferredColorGroupPolicyObject:PreferredColorGroupPolicyObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PreferredColorGroupPolicyObject resources.
type preferredColorGroupPolicyObjectState struct {
	// The name of the policy object
	Name *string `pulumi:"name"`
	// Color or space separated list of colors
	PrimaryColorPreference *string `pulumi:"primaryColorPreference"`
	// Path preference
	//   - Choices: `direct-path`, `multi-hop-path`, `all-paths`
	PrimaryPathPreference *string `pulumi:"primaryPathPreference"`
	// Color or space separated list of colors
	SecondaryColorPreference *string `pulumi:"secondaryColorPreference"`
	// Path preference
	//   - Choices: `direct-path`, `multi-hop-path`, `all-paths`
	SecondaryPathPreference *string `pulumi:"secondaryPathPreference"`
	// Color or space separated list of colors
	TertiaryColorPreference *string `pulumi:"tertiaryColorPreference"`
	// Path preference
	//   - Choices: `direct-path`, `multi-hop-path`, `all-paths`
	TertiaryPathPreference *string `pulumi:"tertiaryPathPreference"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type PreferredColorGroupPolicyObjectState struct {
	// The name of the policy object
	Name pulumi.StringPtrInput
	// Color or space separated list of colors
	PrimaryColorPreference pulumi.StringPtrInput
	// Path preference
	//   - Choices: `direct-path`, `multi-hop-path`, `all-paths`
	PrimaryPathPreference pulumi.StringPtrInput
	// Color or space separated list of colors
	SecondaryColorPreference pulumi.StringPtrInput
	// Path preference
	//   - Choices: `direct-path`, `multi-hop-path`, `all-paths`
	SecondaryPathPreference pulumi.StringPtrInput
	// Color or space separated list of colors
	TertiaryColorPreference pulumi.StringPtrInput
	// Path preference
	//   - Choices: `direct-path`, `multi-hop-path`, `all-paths`
	TertiaryPathPreference pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (PreferredColorGroupPolicyObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*preferredColorGroupPolicyObjectState)(nil)).Elem()
}

type preferredColorGroupPolicyObjectArgs struct {
	// The name of the policy object
	Name *string `pulumi:"name"`
	// Color or space separated list of colors
	PrimaryColorPreference string `pulumi:"primaryColorPreference"`
	// Path preference
	//   - Choices: `direct-path`, `multi-hop-path`, `all-paths`
	PrimaryPathPreference *string `pulumi:"primaryPathPreference"`
	// Color or space separated list of colors
	SecondaryColorPreference *string `pulumi:"secondaryColorPreference"`
	// Path preference
	//   - Choices: `direct-path`, `multi-hop-path`, `all-paths`
	SecondaryPathPreference *string `pulumi:"secondaryPathPreference"`
	// Color or space separated list of colors
	TertiaryColorPreference *string `pulumi:"tertiaryColorPreference"`
	// Path preference
	//   - Choices: `direct-path`, `multi-hop-path`, `all-paths`
	TertiaryPathPreference *string `pulumi:"tertiaryPathPreference"`
}

// The set of arguments for constructing a PreferredColorGroupPolicyObject resource.
type PreferredColorGroupPolicyObjectArgs struct {
	// The name of the policy object
	Name pulumi.StringPtrInput
	// Color or space separated list of colors
	PrimaryColorPreference pulumi.StringInput
	// Path preference
	//   - Choices: `direct-path`, `multi-hop-path`, `all-paths`
	PrimaryPathPreference pulumi.StringPtrInput
	// Color or space separated list of colors
	SecondaryColorPreference pulumi.StringPtrInput
	// Path preference
	//   - Choices: `direct-path`, `multi-hop-path`, `all-paths`
	SecondaryPathPreference pulumi.StringPtrInput
	// Color or space separated list of colors
	TertiaryColorPreference pulumi.StringPtrInput
	// Path preference
	//   - Choices: `direct-path`, `multi-hop-path`, `all-paths`
	TertiaryPathPreference pulumi.StringPtrInput
}

func (PreferredColorGroupPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*preferredColorGroupPolicyObjectArgs)(nil)).Elem()
}

type PreferredColorGroupPolicyObjectInput interface {
	pulumi.Input

	ToPreferredColorGroupPolicyObjectOutput() PreferredColorGroupPolicyObjectOutput
	ToPreferredColorGroupPolicyObjectOutputWithContext(ctx context.Context) PreferredColorGroupPolicyObjectOutput
}

func (*PreferredColorGroupPolicyObject) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferredColorGroupPolicyObject)(nil)).Elem()
}

func (i *PreferredColorGroupPolicyObject) ToPreferredColorGroupPolicyObjectOutput() PreferredColorGroupPolicyObjectOutput {
	return i.ToPreferredColorGroupPolicyObjectOutputWithContext(context.Background())
}

func (i *PreferredColorGroupPolicyObject) ToPreferredColorGroupPolicyObjectOutputWithContext(ctx context.Context) PreferredColorGroupPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferredColorGroupPolicyObjectOutput)
}

// PreferredColorGroupPolicyObjectArrayInput is an input type that accepts PreferredColorGroupPolicyObjectArray and PreferredColorGroupPolicyObjectArrayOutput values.
// You can construct a concrete instance of `PreferredColorGroupPolicyObjectArrayInput` via:
//
//	PreferredColorGroupPolicyObjectArray{ PreferredColorGroupPolicyObjectArgs{...} }
type PreferredColorGroupPolicyObjectArrayInput interface {
	pulumi.Input

	ToPreferredColorGroupPolicyObjectArrayOutput() PreferredColorGroupPolicyObjectArrayOutput
	ToPreferredColorGroupPolicyObjectArrayOutputWithContext(context.Context) PreferredColorGroupPolicyObjectArrayOutput
}

type PreferredColorGroupPolicyObjectArray []PreferredColorGroupPolicyObjectInput

func (PreferredColorGroupPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PreferredColorGroupPolicyObject)(nil)).Elem()
}

func (i PreferredColorGroupPolicyObjectArray) ToPreferredColorGroupPolicyObjectArrayOutput() PreferredColorGroupPolicyObjectArrayOutput {
	return i.ToPreferredColorGroupPolicyObjectArrayOutputWithContext(context.Background())
}

func (i PreferredColorGroupPolicyObjectArray) ToPreferredColorGroupPolicyObjectArrayOutputWithContext(ctx context.Context) PreferredColorGroupPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferredColorGroupPolicyObjectArrayOutput)
}

// PreferredColorGroupPolicyObjectMapInput is an input type that accepts PreferredColorGroupPolicyObjectMap and PreferredColorGroupPolicyObjectMapOutput values.
// You can construct a concrete instance of `PreferredColorGroupPolicyObjectMapInput` via:
//
//	PreferredColorGroupPolicyObjectMap{ "key": PreferredColorGroupPolicyObjectArgs{...} }
type PreferredColorGroupPolicyObjectMapInput interface {
	pulumi.Input

	ToPreferredColorGroupPolicyObjectMapOutput() PreferredColorGroupPolicyObjectMapOutput
	ToPreferredColorGroupPolicyObjectMapOutputWithContext(context.Context) PreferredColorGroupPolicyObjectMapOutput
}

type PreferredColorGroupPolicyObjectMap map[string]PreferredColorGroupPolicyObjectInput

func (PreferredColorGroupPolicyObjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PreferredColorGroupPolicyObject)(nil)).Elem()
}

func (i PreferredColorGroupPolicyObjectMap) ToPreferredColorGroupPolicyObjectMapOutput() PreferredColorGroupPolicyObjectMapOutput {
	return i.ToPreferredColorGroupPolicyObjectMapOutputWithContext(context.Background())
}

func (i PreferredColorGroupPolicyObjectMap) ToPreferredColorGroupPolicyObjectMapOutputWithContext(ctx context.Context) PreferredColorGroupPolicyObjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferredColorGroupPolicyObjectMapOutput)
}

type PreferredColorGroupPolicyObjectOutput struct{ *pulumi.OutputState }

func (PreferredColorGroupPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferredColorGroupPolicyObject)(nil)).Elem()
}

func (o PreferredColorGroupPolicyObjectOutput) ToPreferredColorGroupPolicyObjectOutput() PreferredColorGroupPolicyObjectOutput {
	return o
}

func (o PreferredColorGroupPolicyObjectOutput) ToPreferredColorGroupPolicyObjectOutputWithContext(ctx context.Context) PreferredColorGroupPolicyObjectOutput {
	return o
}

// The name of the policy object
func (o PreferredColorGroupPolicyObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PreferredColorGroupPolicyObject) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Color or space separated list of colors
func (o PreferredColorGroupPolicyObjectOutput) PrimaryColorPreference() pulumi.StringOutput {
	return o.ApplyT(func(v *PreferredColorGroupPolicyObject) pulumi.StringOutput { return v.PrimaryColorPreference }).(pulumi.StringOutput)
}

// Path preference
//   - Choices: `direct-path`, `multi-hop-path`, `all-paths`
func (o PreferredColorGroupPolicyObjectOutput) PrimaryPathPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreferredColorGroupPolicyObject) pulumi.StringPtrOutput { return v.PrimaryPathPreference }).(pulumi.StringPtrOutput)
}

// Color or space separated list of colors
func (o PreferredColorGroupPolicyObjectOutput) SecondaryColorPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreferredColorGroupPolicyObject) pulumi.StringPtrOutput { return v.SecondaryColorPreference }).(pulumi.StringPtrOutput)
}

// Path preference
//   - Choices: `direct-path`, `multi-hop-path`, `all-paths`
func (o PreferredColorGroupPolicyObjectOutput) SecondaryPathPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreferredColorGroupPolicyObject) pulumi.StringPtrOutput { return v.SecondaryPathPreference }).(pulumi.StringPtrOutput)
}

// Color or space separated list of colors
func (o PreferredColorGroupPolicyObjectOutput) TertiaryColorPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreferredColorGroupPolicyObject) pulumi.StringPtrOutput { return v.TertiaryColorPreference }).(pulumi.StringPtrOutput)
}

// Path preference
//   - Choices: `direct-path`, `multi-hop-path`, `all-paths`
func (o PreferredColorGroupPolicyObjectOutput) TertiaryPathPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreferredColorGroupPolicyObject) pulumi.StringPtrOutput { return v.TertiaryPathPreference }).(pulumi.StringPtrOutput)
}

// The version of the object
func (o PreferredColorGroupPolicyObjectOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *PreferredColorGroupPolicyObject) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type PreferredColorGroupPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (PreferredColorGroupPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PreferredColorGroupPolicyObject)(nil)).Elem()
}

func (o PreferredColorGroupPolicyObjectArrayOutput) ToPreferredColorGroupPolicyObjectArrayOutput() PreferredColorGroupPolicyObjectArrayOutput {
	return o
}

func (o PreferredColorGroupPolicyObjectArrayOutput) ToPreferredColorGroupPolicyObjectArrayOutputWithContext(ctx context.Context) PreferredColorGroupPolicyObjectArrayOutput {
	return o
}

func (o PreferredColorGroupPolicyObjectArrayOutput) Index(i pulumi.IntInput) PreferredColorGroupPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PreferredColorGroupPolicyObject {
		return vs[0].([]*PreferredColorGroupPolicyObject)[vs[1].(int)]
	}).(PreferredColorGroupPolicyObjectOutput)
}

type PreferredColorGroupPolicyObjectMapOutput struct{ *pulumi.OutputState }

func (PreferredColorGroupPolicyObjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PreferredColorGroupPolicyObject)(nil)).Elem()
}

func (o PreferredColorGroupPolicyObjectMapOutput) ToPreferredColorGroupPolicyObjectMapOutput() PreferredColorGroupPolicyObjectMapOutput {
	return o
}

func (o PreferredColorGroupPolicyObjectMapOutput) ToPreferredColorGroupPolicyObjectMapOutputWithContext(ctx context.Context) PreferredColorGroupPolicyObjectMapOutput {
	return o
}

func (o PreferredColorGroupPolicyObjectMapOutput) MapIndex(k pulumi.StringInput) PreferredColorGroupPolicyObjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PreferredColorGroupPolicyObject {
		return vs[0].(map[string]*PreferredColorGroupPolicyObject)[vs[1].(string)]
	}).(PreferredColorGroupPolicyObjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PreferredColorGroupPolicyObjectInput)(nil)).Elem(), &PreferredColorGroupPolicyObject{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferredColorGroupPolicyObjectArrayInput)(nil)).Elem(), PreferredColorGroupPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferredColorGroupPolicyObjectMapInput)(nil)).Elem(), PreferredColorGroupPolicyObjectMap{})
	pulumi.RegisterOutputType(PreferredColorGroupPolicyObjectOutput{})
	pulumi.RegisterOutputType(PreferredColorGroupPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(PreferredColorGroupPolicyObjectMapOutput{})
}
