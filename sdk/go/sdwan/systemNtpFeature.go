// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a System NTP Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/systemNtpFeature:SystemNtpFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type SystemNtpFeature struct {
	pulumi.CustomResourceState

	// Set MD5 authentication key
	AuthenticationKeys SystemNtpFeatureAuthenticationKeyArrayOutput `pulumi:"authenticationKeys"`
	// Enable device as NTP Leader - Default value: `false`
	AuthoritativeNtpServer pulumi.BoolPtrOutput `pulumi:"authoritativeNtpServer"`
	// Variable name
	AuthoritativeNtpServerVariable pulumi.StringPtrOutput `pulumi:"authoritativeNtpServerVariable"`
	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrOutput `pulumi:"featureProfileId"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// Configure NTP servers
	Servers SystemNtpFeatureServerArrayOutput `pulumi:"servers"`
	// Enable device as NTP Leader
	SourceInterface pulumi.StringPtrOutput `pulumi:"sourceInterface"`
	// Variable name
	SourceInterfaceVariable pulumi.StringPtrOutput `pulumi:"sourceInterfaceVariable"`
	// Enable device as NTP Leader - Range: `1`-`15`
	Stratum pulumi.IntPtrOutput `pulumi:"stratum"`
	// Variable name
	StratumVariable pulumi.StringPtrOutput `pulumi:"stratumVariable"`
	// Designate authentication key as trustworthy
	TrustedKeys pulumi.IntArrayOutput `pulumi:"trustedKeys"`
	// Variable name
	TrustedKeysVariable pulumi.StringPtrOutput `pulumi:"trustedKeysVariable"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewSystemNtpFeature registers a new resource with the given unique name, arguments, and options.
func NewSystemNtpFeature(ctx *pulumi.Context,
	name string, args *SystemNtpFeatureArgs, opts ...pulumi.ResourceOption) (*SystemNtpFeature, error) {
	if args == nil {
		args = &SystemNtpFeatureArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemNtpFeature
	err := ctx.RegisterResource("sdwan:index/systemNtpFeature:SystemNtpFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemNtpFeature gets an existing SystemNtpFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemNtpFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemNtpFeatureState, opts ...pulumi.ResourceOption) (*SystemNtpFeature, error) {
	var resource SystemNtpFeature
	err := ctx.ReadResource("sdwan:index/systemNtpFeature:SystemNtpFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemNtpFeature resources.
type systemNtpFeatureState struct {
	// Set MD5 authentication key
	AuthenticationKeys []SystemNtpFeatureAuthenticationKey `pulumi:"authenticationKeys"`
	// Enable device as NTP Leader - Default value: `false`
	AuthoritativeNtpServer *bool `pulumi:"authoritativeNtpServer"`
	// Variable name
	AuthoritativeNtpServerVariable *string `pulumi:"authoritativeNtpServerVariable"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Configure NTP servers
	Servers []SystemNtpFeatureServer `pulumi:"servers"`
	// Enable device as NTP Leader
	SourceInterface *string `pulumi:"sourceInterface"`
	// Variable name
	SourceInterfaceVariable *string `pulumi:"sourceInterfaceVariable"`
	// Enable device as NTP Leader - Range: `1`-`15`
	Stratum *int `pulumi:"stratum"`
	// Variable name
	StratumVariable *string `pulumi:"stratumVariable"`
	// Designate authentication key as trustworthy
	TrustedKeys []int `pulumi:"trustedKeys"`
	// Variable name
	TrustedKeysVariable *string `pulumi:"trustedKeysVariable"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type SystemNtpFeatureState struct {
	// Set MD5 authentication key
	AuthenticationKeys SystemNtpFeatureAuthenticationKeyArrayInput
	// Enable device as NTP Leader - Default value: `false`
	AuthoritativeNtpServer pulumi.BoolPtrInput
	// Variable name
	AuthoritativeNtpServerVariable pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Configure NTP servers
	Servers SystemNtpFeatureServerArrayInput
	// Enable device as NTP Leader
	SourceInterface pulumi.StringPtrInput
	// Variable name
	SourceInterfaceVariable pulumi.StringPtrInput
	// Enable device as NTP Leader - Range: `1`-`15`
	Stratum pulumi.IntPtrInput
	// Variable name
	StratumVariable pulumi.StringPtrInput
	// Designate authentication key as trustworthy
	TrustedKeys pulumi.IntArrayInput
	// Variable name
	TrustedKeysVariable pulumi.StringPtrInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (SystemNtpFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemNtpFeatureState)(nil)).Elem()
}

type systemNtpFeatureArgs struct {
	// Set MD5 authentication key
	AuthenticationKeys []SystemNtpFeatureAuthenticationKey `pulumi:"authenticationKeys"`
	// Enable device as NTP Leader - Default value: `false`
	AuthoritativeNtpServer *bool `pulumi:"authoritativeNtpServer"`
	// Variable name
	AuthoritativeNtpServerVariable *string `pulumi:"authoritativeNtpServerVariable"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Configure NTP servers
	Servers []SystemNtpFeatureServer `pulumi:"servers"`
	// Enable device as NTP Leader
	SourceInterface *string `pulumi:"sourceInterface"`
	// Variable name
	SourceInterfaceVariable *string `pulumi:"sourceInterfaceVariable"`
	// Enable device as NTP Leader - Range: `1`-`15`
	Stratum *int `pulumi:"stratum"`
	// Variable name
	StratumVariable *string `pulumi:"stratumVariable"`
	// Designate authentication key as trustworthy
	TrustedKeys []int `pulumi:"trustedKeys"`
	// Variable name
	TrustedKeysVariable *string `pulumi:"trustedKeysVariable"`
}

// The set of arguments for constructing a SystemNtpFeature resource.
type SystemNtpFeatureArgs struct {
	// Set MD5 authentication key
	AuthenticationKeys SystemNtpFeatureAuthenticationKeyArrayInput
	// Enable device as NTP Leader - Default value: `false`
	AuthoritativeNtpServer pulumi.BoolPtrInput
	// Variable name
	AuthoritativeNtpServerVariable pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Configure NTP servers
	Servers SystemNtpFeatureServerArrayInput
	// Enable device as NTP Leader
	SourceInterface pulumi.StringPtrInput
	// Variable name
	SourceInterfaceVariable pulumi.StringPtrInput
	// Enable device as NTP Leader - Range: `1`-`15`
	Stratum pulumi.IntPtrInput
	// Variable name
	StratumVariable pulumi.StringPtrInput
	// Designate authentication key as trustworthy
	TrustedKeys pulumi.IntArrayInput
	// Variable name
	TrustedKeysVariable pulumi.StringPtrInput
}

func (SystemNtpFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemNtpFeatureArgs)(nil)).Elem()
}

type SystemNtpFeatureInput interface {
	pulumi.Input

	ToSystemNtpFeatureOutput() SystemNtpFeatureOutput
	ToSystemNtpFeatureOutputWithContext(ctx context.Context) SystemNtpFeatureOutput
}

func (*SystemNtpFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemNtpFeature)(nil)).Elem()
}

func (i *SystemNtpFeature) ToSystemNtpFeatureOutput() SystemNtpFeatureOutput {
	return i.ToSystemNtpFeatureOutputWithContext(context.Background())
}

func (i *SystemNtpFeature) ToSystemNtpFeatureOutputWithContext(ctx context.Context) SystemNtpFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNtpFeatureOutput)
}

// SystemNtpFeatureArrayInput is an input type that accepts SystemNtpFeatureArray and SystemNtpFeatureArrayOutput values.
// You can construct a concrete instance of `SystemNtpFeatureArrayInput` via:
//
//	SystemNtpFeatureArray{ SystemNtpFeatureArgs{...} }
type SystemNtpFeatureArrayInput interface {
	pulumi.Input

	ToSystemNtpFeatureArrayOutput() SystemNtpFeatureArrayOutput
	ToSystemNtpFeatureArrayOutputWithContext(context.Context) SystemNtpFeatureArrayOutput
}

type SystemNtpFeatureArray []SystemNtpFeatureInput

func (SystemNtpFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemNtpFeature)(nil)).Elem()
}

func (i SystemNtpFeatureArray) ToSystemNtpFeatureArrayOutput() SystemNtpFeatureArrayOutput {
	return i.ToSystemNtpFeatureArrayOutputWithContext(context.Background())
}

func (i SystemNtpFeatureArray) ToSystemNtpFeatureArrayOutputWithContext(ctx context.Context) SystemNtpFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNtpFeatureArrayOutput)
}

// SystemNtpFeatureMapInput is an input type that accepts SystemNtpFeatureMap and SystemNtpFeatureMapOutput values.
// You can construct a concrete instance of `SystemNtpFeatureMapInput` via:
//
//	SystemNtpFeatureMap{ "key": SystemNtpFeatureArgs{...} }
type SystemNtpFeatureMapInput interface {
	pulumi.Input

	ToSystemNtpFeatureMapOutput() SystemNtpFeatureMapOutput
	ToSystemNtpFeatureMapOutputWithContext(context.Context) SystemNtpFeatureMapOutput
}

type SystemNtpFeatureMap map[string]SystemNtpFeatureInput

func (SystemNtpFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemNtpFeature)(nil)).Elem()
}

func (i SystemNtpFeatureMap) ToSystemNtpFeatureMapOutput() SystemNtpFeatureMapOutput {
	return i.ToSystemNtpFeatureMapOutputWithContext(context.Background())
}

func (i SystemNtpFeatureMap) ToSystemNtpFeatureMapOutputWithContext(ctx context.Context) SystemNtpFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemNtpFeatureMapOutput)
}

type SystemNtpFeatureOutput struct{ *pulumi.OutputState }

func (SystemNtpFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemNtpFeature)(nil)).Elem()
}

func (o SystemNtpFeatureOutput) ToSystemNtpFeatureOutput() SystemNtpFeatureOutput {
	return o
}

func (o SystemNtpFeatureOutput) ToSystemNtpFeatureOutputWithContext(ctx context.Context) SystemNtpFeatureOutput {
	return o
}

// Set MD5 authentication key
func (o SystemNtpFeatureOutput) AuthenticationKeys() SystemNtpFeatureAuthenticationKeyArrayOutput {
	return o.ApplyT(func(v *SystemNtpFeature) SystemNtpFeatureAuthenticationKeyArrayOutput { return v.AuthenticationKeys }).(SystemNtpFeatureAuthenticationKeyArrayOutput)
}

// Enable device as NTP Leader - Default value: `false`
func (o SystemNtpFeatureOutput) AuthoritativeNtpServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SystemNtpFeature) pulumi.BoolPtrOutput { return v.AuthoritativeNtpServer }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o SystemNtpFeatureOutput) AuthoritativeNtpServerVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNtpFeature) pulumi.StringPtrOutput { return v.AuthoritativeNtpServerVariable }).(pulumi.StringPtrOutput)
}

// The description of the Feature
func (o SystemNtpFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNtpFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o SystemNtpFeatureOutput) FeatureProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNtpFeature) pulumi.StringPtrOutput { return v.FeatureProfileId }).(pulumi.StringPtrOutput)
}

// The name of the Feature
func (o SystemNtpFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemNtpFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Configure NTP servers
func (o SystemNtpFeatureOutput) Servers() SystemNtpFeatureServerArrayOutput {
	return o.ApplyT(func(v *SystemNtpFeature) SystemNtpFeatureServerArrayOutput { return v.Servers }).(SystemNtpFeatureServerArrayOutput)
}

// Enable device as NTP Leader
func (o SystemNtpFeatureOutput) SourceInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNtpFeature) pulumi.StringPtrOutput { return v.SourceInterface }).(pulumi.StringPtrOutput)
}

// Variable name
func (o SystemNtpFeatureOutput) SourceInterfaceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNtpFeature) pulumi.StringPtrOutput { return v.SourceInterfaceVariable }).(pulumi.StringPtrOutput)
}

// Enable device as NTP Leader - Range: `1`-`15`
func (o SystemNtpFeatureOutput) Stratum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemNtpFeature) pulumi.IntPtrOutput { return v.Stratum }).(pulumi.IntPtrOutput)
}

// Variable name
func (o SystemNtpFeatureOutput) StratumVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNtpFeature) pulumi.StringPtrOutput { return v.StratumVariable }).(pulumi.StringPtrOutput)
}

// Designate authentication key as trustworthy
func (o SystemNtpFeatureOutput) TrustedKeys() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *SystemNtpFeature) pulumi.IntArrayOutput { return v.TrustedKeys }).(pulumi.IntArrayOutput)
}

// Variable name
func (o SystemNtpFeatureOutput) TrustedKeysVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemNtpFeature) pulumi.StringPtrOutput { return v.TrustedKeysVariable }).(pulumi.StringPtrOutput)
}

// The version of the Feature
func (o SystemNtpFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemNtpFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type SystemNtpFeatureArrayOutput struct{ *pulumi.OutputState }

func (SystemNtpFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemNtpFeature)(nil)).Elem()
}

func (o SystemNtpFeatureArrayOutput) ToSystemNtpFeatureArrayOutput() SystemNtpFeatureArrayOutput {
	return o
}

func (o SystemNtpFeatureArrayOutput) ToSystemNtpFeatureArrayOutputWithContext(ctx context.Context) SystemNtpFeatureArrayOutput {
	return o
}

func (o SystemNtpFeatureArrayOutput) Index(i pulumi.IntInput) SystemNtpFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemNtpFeature {
		return vs[0].([]*SystemNtpFeature)[vs[1].(int)]
	}).(SystemNtpFeatureOutput)
}

type SystemNtpFeatureMapOutput struct{ *pulumi.OutputState }

func (SystemNtpFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemNtpFeature)(nil)).Elem()
}

func (o SystemNtpFeatureMapOutput) ToSystemNtpFeatureMapOutput() SystemNtpFeatureMapOutput {
	return o
}

func (o SystemNtpFeatureMapOutput) ToSystemNtpFeatureMapOutputWithContext(ctx context.Context) SystemNtpFeatureMapOutput {
	return o
}

func (o SystemNtpFeatureMapOutput) MapIndex(k pulumi.StringInput) SystemNtpFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemNtpFeature {
		return vs[0].(map[string]*SystemNtpFeature)[vs[1].(string)]
	}).(SystemNtpFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNtpFeatureInput)(nil)).Elem(), &SystemNtpFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNtpFeatureArrayInput)(nil)).Elem(), SystemNtpFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemNtpFeatureMapInput)(nil)).Elem(), SystemNtpFeatureMap{})
	pulumi.RegisterOutputType(SystemNtpFeatureOutput{})
	pulumi.RegisterOutputType(SystemNtpFeatureArrayOutput{})
	pulumi.RegisterOutputType(SystemNtpFeatureMapOutput{})
}
