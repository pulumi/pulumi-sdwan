// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Zone List Policy Object .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewZoneListPolicyObject(ctx, "example", &sdwan.ZoneListPolicyObjectArgs{
//				Name: pulumi.String("Example"),
//				Entries: sdwan.ZoneListPolicyObjectEntryArray{
//					&sdwan.ZoneListPolicyObjectEntryArgs{
//						Vpn: pulumi.String("1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/zoneListPolicyObject:ZoneListPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type ZoneListPolicyObject struct {
	pulumi.CustomResourceState

	// List of entries
	Entries ZoneListPolicyObjectEntryArrayOutput `pulumi:"entries"`
	// The name of the policy object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewZoneListPolicyObject registers a new resource with the given unique name, arguments, and options.
func NewZoneListPolicyObject(ctx *pulumi.Context,
	name string, args *ZoneListPolicyObjectArgs, opts ...pulumi.ResourceOption) (*ZoneListPolicyObject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZoneListPolicyObject
	err := ctx.RegisterResource("sdwan:index/zoneListPolicyObject:ZoneListPolicyObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZoneListPolicyObject gets an existing ZoneListPolicyObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZoneListPolicyObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZoneListPolicyObjectState, opts ...pulumi.ResourceOption) (*ZoneListPolicyObject, error) {
	var resource ZoneListPolicyObject
	err := ctx.ReadResource("sdwan:index/zoneListPolicyObject:ZoneListPolicyObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZoneListPolicyObject resources.
type zoneListPolicyObjectState struct {
	// List of entries
	Entries []ZoneListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type ZoneListPolicyObjectState struct {
	// List of entries
	Entries ZoneListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (ZoneListPolicyObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*zoneListPolicyObjectState)(nil)).Elem()
}

type zoneListPolicyObjectArgs struct {
	// List of entries
	Entries []ZoneListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ZoneListPolicyObject resource.
type ZoneListPolicyObjectArgs struct {
	// List of entries
	Entries ZoneListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
}

func (ZoneListPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zoneListPolicyObjectArgs)(nil)).Elem()
}

type ZoneListPolicyObjectInput interface {
	pulumi.Input

	ToZoneListPolicyObjectOutput() ZoneListPolicyObjectOutput
	ToZoneListPolicyObjectOutputWithContext(ctx context.Context) ZoneListPolicyObjectOutput
}

func (*ZoneListPolicyObject) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneListPolicyObject)(nil)).Elem()
}

func (i *ZoneListPolicyObject) ToZoneListPolicyObjectOutput() ZoneListPolicyObjectOutput {
	return i.ToZoneListPolicyObjectOutputWithContext(context.Background())
}

func (i *ZoneListPolicyObject) ToZoneListPolicyObjectOutputWithContext(ctx context.Context) ZoneListPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneListPolicyObjectOutput)
}

// ZoneListPolicyObjectArrayInput is an input type that accepts ZoneListPolicyObjectArray and ZoneListPolicyObjectArrayOutput values.
// You can construct a concrete instance of `ZoneListPolicyObjectArrayInput` via:
//
//	ZoneListPolicyObjectArray{ ZoneListPolicyObjectArgs{...} }
type ZoneListPolicyObjectArrayInput interface {
	pulumi.Input

	ToZoneListPolicyObjectArrayOutput() ZoneListPolicyObjectArrayOutput
	ToZoneListPolicyObjectArrayOutputWithContext(context.Context) ZoneListPolicyObjectArrayOutput
}

type ZoneListPolicyObjectArray []ZoneListPolicyObjectInput

func (ZoneListPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZoneListPolicyObject)(nil)).Elem()
}

func (i ZoneListPolicyObjectArray) ToZoneListPolicyObjectArrayOutput() ZoneListPolicyObjectArrayOutput {
	return i.ToZoneListPolicyObjectArrayOutputWithContext(context.Background())
}

func (i ZoneListPolicyObjectArray) ToZoneListPolicyObjectArrayOutputWithContext(ctx context.Context) ZoneListPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneListPolicyObjectArrayOutput)
}

// ZoneListPolicyObjectMapInput is an input type that accepts ZoneListPolicyObjectMap and ZoneListPolicyObjectMapOutput values.
// You can construct a concrete instance of `ZoneListPolicyObjectMapInput` via:
//
//	ZoneListPolicyObjectMap{ "key": ZoneListPolicyObjectArgs{...} }
type ZoneListPolicyObjectMapInput interface {
	pulumi.Input

	ToZoneListPolicyObjectMapOutput() ZoneListPolicyObjectMapOutput
	ToZoneListPolicyObjectMapOutputWithContext(context.Context) ZoneListPolicyObjectMapOutput
}

type ZoneListPolicyObjectMap map[string]ZoneListPolicyObjectInput

func (ZoneListPolicyObjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZoneListPolicyObject)(nil)).Elem()
}

func (i ZoneListPolicyObjectMap) ToZoneListPolicyObjectMapOutput() ZoneListPolicyObjectMapOutput {
	return i.ToZoneListPolicyObjectMapOutputWithContext(context.Background())
}

func (i ZoneListPolicyObjectMap) ToZoneListPolicyObjectMapOutputWithContext(ctx context.Context) ZoneListPolicyObjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneListPolicyObjectMapOutput)
}

type ZoneListPolicyObjectOutput struct{ *pulumi.OutputState }

func (ZoneListPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneListPolicyObject)(nil)).Elem()
}

func (o ZoneListPolicyObjectOutput) ToZoneListPolicyObjectOutput() ZoneListPolicyObjectOutput {
	return o
}

func (o ZoneListPolicyObjectOutput) ToZoneListPolicyObjectOutputWithContext(ctx context.Context) ZoneListPolicyObjectOutput {
	return o
}

// List of entries
func (o ZoneListPolicyObjectOutput) Entries() ZoneListPolicyObjectEntryArrayOutput {
	return o.ApplyT(func(v *ZoneListPolicyObject) ZoneListPolicyObjectEntryArrayOutput { return v.Entries }).(ZoneListPolicyObjectEntryArrayOutput)
}

// The name of the policy object
func (o ZoneListPolicyObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ZoneListPolicyObject) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the object
func (o ZoneListPolicyObjectOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ZoneListPolicyObject) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ZoneListPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (ZoneListPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ZoneListPolicyObject)(nil)).Elem()
}

func (o ZoneListPolicyObjectArrayOutput) ToZoneListPolicyObjectArrayOutput() ZoneListPolicyObjectArrayOutput {
	return o
}

func (o ZoneListPolicyObjectArrayOutput) ToZoneListPolicyObjectArrayOutputWithContext(ctx context.Context) ZoneListPolicyObjectArrayOutput {
	return o
}

func (o ZoneListPolicyObjectArrayOutput) Index(i pulumi.IntInput) ZoneListPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ZoneListPolicyObject {
		return vs[0].([]*ZoneListPolicyObject)[vs[1].(int)]
	}).(ZoneListPolicyObjectOutput)
}

type ZoneListPolicyObjectMapOutput struct{ *pulumi.OutputState }

func (ZoneListPolicyObjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ZoneListPolicyObject)(nil)).Elem()
}

func (o ZoneListPolicyObjectMapOutput) ToZoneListPolicyObjectMapOutput() ZoneListPolicyObjectMapOutput {
	return o
}

func (o ZoneListPolicyObjectMapOutput) ToZoneListPolicyObjectMapOutputWithContext(ctx context.Context) ZoneListPolicyObjectMapOutput {
	return o
}

func (o ZoneListPolicyObjectMapOutput) MapIndex(k pulumi.StringInput) ZoneListPolicyObjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ZoneListPolicyObject {
		return vs[0].(map[string]*ZoneListPolicyObject)[vs[1].(string)]
	}).(ZoneListPolicyObjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneListPolicyObjectInput)(nil)).Elem(), &ZoneListPolicyObject{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneListPolicyObjectArrayInput)(nil)).Elem(), ZoneListPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneListPolicyObjectMapInput)(nil)).Elem(), ZoneListPolicyObjectMap{})
	pulumi.RegisterOutputType(ZoneListPolicyObjectOutput{})
	pulumi.RegisterOutputType(ZoneListPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(ZoneListPolicyObjectMapOutput{})
}
