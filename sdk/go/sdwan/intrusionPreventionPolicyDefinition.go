// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Intrusion Prevention Policy Definition .
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/intrusionPreventionPolicyDefinition:IntrusionPreventionPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type IntrusionPreventionPolicyDefinition struct {
	pulumi.CustomResourceState

	// Custom signature
	CustomSignature pulumi.BoolPtrOutput `pulumi:"customSignature"`
	// The description of the policy definition
	Description pulumi.StringOutput `pulumi:"description"`
	// The inspection mode - Choices: `protection`, `detection`
	InspectionMode pulumi.StringPtrOutput `pulumi:"inspectionMode"`
	// IPS signature list ID
	IpsSignatureListId pulumi.StringPtrOutput `pulumi:"ipsSignatureListId"`
	// IPS signature list version
	IpsSignatureListVersion pulumi.IntPtrOutput `pulumi:"ipsSignatureListVersion"`
	// Log level - Choices: `emergency`, `alert`, `critical`, `error`, `warning`, `notice`, `info`, `debug`
	LogLevel pulumi.StringPtrOutput                                `pulumi:"logLevel"`
	Loggings IntrusionPreventionPolicyDefinitionLoggingArrayOutput `pulumi:"loggings"`
	// The policy mode - Choices: `security`, `unified`
	Mode pulumi.StringPtrOutput `pulumi:"mode"`
	// The name of the policy definition
	Name pulumi.StringOutput `pulumi:"name"`
	// Signature set - Choices: `balanced`, `connectivity`, `security`
	SignatureSet pulumi.StringPtrOutput `pulumi:"signatureSet"`
	// List of VPN IDs
	TargetVpns pulumi.StringArrayOutput `pulumi:"targetVpns"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewIntrusionPreventionPolicyDefinition registers a new resource with the given unique name, arguments, and options.
func NewIntrusionPreventionPolicyDefinition(ctx *pulumi.Context,
	name string, args *IntrusionPreventionPolicyDefinitionArgs, opts ...pulumi.ResourceOption) (*IntrusionPreventionPolicyDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IntrusionPreventionPolicyDefinition
	err := ctx.RegisterResource("sdwan:index/intrusionPreventionPolicyDefinition:IntrusionPreventionPolicyDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntrusionPreventionPolicyDefinition gets an existing IntrusionPreventionPolicyDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntrusionPreventionPolicyDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntrusionPreventionPolicyDefinitionState, opts ...pulumi.ResourceOption) (*IntrusionPreventionPolicyDefinition, error) {
	var resource IntrusionPreventionPolicyDefinition
	err := ctx.ReadResource("sdwan:index/intrusionPreventionPolicyDefinition:IntrusionPreventionPolicyDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IntrusionPreventionPolicyDefinition resources.
type intrusionPreventionPolicyDefinitionState struct {
	// Custom signature
	CustomSignature *bool `pulumi:"customSignature"`
	// The description of the policy definition
	Description *string `pulumi:"description"`
	// The inspection mode - Choices: `protection`, `detection`
	InspectionMode *string `pulumi:"inspectionMode"`
	// IPS signature list ID
	IpsSignatureListId *string `pulumi:"ipsSignatureListId"`
	// IPS signature list version
	IpsSignatureListVersion *int `pulumi:"ipsSignatureListVersion"`
	// Log level - Choices: `emergency`, `alert`, `critical`, `error`, `warning`, `notice`, `info`, `debug`
	LogLevel *string                                      `pulumi:"logLevel"`
	Loggings []IntrusionPreventionPolicyDefinitionLogging `pulumi:"loggings"`
	// The policy mode - Choices: `security`, `unified`
	Mode *string `pulumi:"mode"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// Signature set - Choices: `balanced`, `connectivity`, `security`
	SignatureSet *string `pulumi:"signatureSet"`
	// List of VPN IDs
	TargetVpns []string `pulumi:"targetVpns"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type IntrusionPreventionPolicyDefinitionState struct {
	// Custom signature
	CustomSignature pulumi.BoolPtrInput
	// The description of the policy definition
	Description pulumi.StringPtrInput
	// The inspection mode - Choices: `protection`, `detection`
	InspectionMode pulumi.StringPtrInput
	// IPS signature list ID
	IpsSignatureListId pulumi.StringPtrInput
	// IPS signature list version
	IpsSignatureListVersion pulumi.IntPtrInput
	// Log level - Choices: `emergency`, `alert`, `critical`, `error`, `warning`, `notice`, `info`, `debug`
	LogLevel pulumi.StringPtrInput
	Loggings IntrusionPreventionPolicyDefinitionLoggingArrayInput
	// The policy mode - Choices: `security`, `unified`
	Mode pulumi.StringPtrInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// Signature set - Choices: `balanced`, `connectivity`, `security`
	SignatureSet pulumi.StringPtrInput
	// List of VPN IDs
	TargetVpns pulumi.StringArrayInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (IntrusionPreventionPolicyDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*intrusionPreventionPolicyDefinitionState)(nil)).Elem()
}

type intrusionPreventionPolicyDefinitionArgs struct {
	// Custom signature
	CustomSignature *bool `pulumi:"customSignature"`
	// The description of the policy definition
	Description string `pulumi:"description"`
	// The inspection mode - Choices: `protection`, `detection`
	InspectionMode *string `pulumi:"inspectionMode"`
	// IPS signature list ID
	IpsSignatureListId *string `pulumi:"ipsSignatureListId"`
	// IPS signature list version
	IpsSignatureListVersion *int `pulumi:"ipsSignatureListVersion"`
	// Log level - Choices: `emergency`, `alert`, `critical`, `error`, `warning`, `notice`, `info`, `debug`
	LogLevel *string                                      `pulumi:"logLevel"`
	Loggings []IntrusionPreventionPolicyDefinitionLogging `pulumi:"loggings"`
	// The policy mode - Choices: `security`, `unified`
	Mode *string `pulumi:"mode"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// Signature set - Choices: `balanced`, `connectivity`, `security`
	SignatureSet *string `pulumi:"signatureSet"`
	// List of VPN IDs
	TargetVpns []string `pulumi:"targetVpns"`
}

// The set of arguments for constructing a IntrusionPreventionPolicyDefinition resource.
type IntrusionPreventionPolicyDefinitionArgs struct {
	// Custom signature
	CustomSignature pulumi.BoolPtrInput
	// The description of the policy definition
	Description pulumi.StringInput
	// The inspection mode - Choices: `protection`, `detection`
	InspectionMode pulumi.StringPtrInput
	// IPS signature list ID
	IpsSignatureListId pulumi.StringPtrInput
	// IPS signature list version
	IpsSignatureListVersion pulumi.IntPtrInput
	// Log level - Choices: `emergency`, `alert`, `critical`, `error`, `warning`, `notice`, `info`, `debug`
	LogLevel pulumi.StringPtrInput
	Loggings IntrusionPreventionPolicyDefinitionLoggingArrayInput
	// The policy mode - Choices: `security`, `unified`
	Mode pulumi.StringPtrInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// Signature set - Choices: `balanced`, `connectivity`, `security`
	SignatureSet pulumi.StringPtrInput
	// List of VPN IDs
	TargetVpns pulumi.StringArrayInput
}

func (IntrusionPreventionPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*intrusionPreventionPolicyDefinitionArgs)(nil)).Elem()
}

type IntrusionPreventionPolicyDefinitionInput interface {
	pulumi.Input

	ToIntrusionPreventionPolicyDefinitionOutput() IntrusionPreventionPolicyDefinitionOutput
	ToIntrusionPreventionPolicyDefinitionOutputWithContext(ctx context.Context) IntrusionPreventionPolicyDefinitionOutput
}

func (*IntrusionPreventionPolicyDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**IntrusionPreventionPolicyDefinition)(nil)).Elem()
}

func (i *IntrusionPreventionPolicyDefinition) ToIntrusionPreventionPolicyDefinitionOutput() IntrusionPreventionPolicyDefinitionOutput {
	return i.ToIntrusionPreventionPolicyDefinitionOutputWithContext(context.Background())
}

func (i *IntrusionPreventionPolicyDefinition) ToIntrusionPreventionPolicyDefinitionOutputWithContext(ctx context.Context) IntrusionPreventionPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntrusionPreventionPolicyDefinitionOutput)
}

// IntrusionPreventionPolicyDefinitionArrayInput is an input type that accepts IntrusionPreventionPolicyDefinitionArray and IntrusionPreventionPolicyDefinitionArrayOutput values.
// You can construct a concrete instance of `IntrusionPreventionPolicyDefinitionArrayInput` via:
//
//	IntrusionPreventionPolicyDefinitionArray{ IntrusionPreventionPolicyDefinitionArgs{...} }
type IntrusionPreventionPolicyDefinitionArrayInput interface {
	pulumi.Input

	ToIntrusionPreventionPolicyDefinitionArrayOutput() IntrusionPreventionPolicyDefinitionArrayOutput
	ToIntrusionPreventionPolicyDefinitionArrayOutputWithContext(context.Context) IntrusionPreventionPolicyDefinitionArrayOutput
}

type IntrusionPreventionPolicyDefinitionArray []IntrusionPreventionPolicyDefinitionInput

func (IntrusionPreventionPolicyDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IntrusionPreventionPolicyDefinition)(nil)).Elem()
}

func (i IntrusionPreventionPolicyDefinitionArray) ToIntrusionPreventionPolicyDefinitionArrayOutput() IntrusionPreventionPolicyDefinitionArrayOutput {
	return i.ToIntrusionPreventionPolicyDefinitionArrayOutputWithContext(context.Background())
}

func (i IntrusionPreventionPolicyDefinitionArray) ToIntrusionPreventionPolicyDefinitionArrayOutputWithContext(ctx context.Context) IntrusionPreventionPolicyDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntrusionPreventionPolicyDefinitionArrayOutput)
}

// IntrusionPreventionPolicyDefinitionMapInput is an input type that accepts IntrusionPreventionPolicyDefinitionMap and IntrusionPreventionPolicyDefinitionMapOutput values.
// You can construct a concrete instance of `IntrusionPreventionPolicyDefinitionMapInput` via:
//
//	IntrusionPreventionPolicyDefinitionMap{ "key": IntrusionPreventionPolicyDefinitionArgs{...} }
type IntrusionPreventionPolicyDefinitionMapInput interface {
	pulumi.Input

	ToIntrusionPreventionPolicyDefinitionMapOutput() IntrusionPreventionPolicyDefinitionMapOutput
	ToIntrusionPreventionPolicyDefinitionMapOutputWithContext(context.Context) IntrusionPreventionPolicyDefinitionMapOutput
}

type IntrusionPreventionPolicyDefinitionMap map[string]IntrusionPreventionPolicyDefinitionInput

func (IntrusionPreventionPolicyDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IntrusionPreventionPolicyDefinition)(nil)).Elem()
}

func (i IntrusionPreventionPolicyDefinitionMap) ToIntrusionPreventionPolicyDefinitionMapOutput() IntrusionPreventionPolicyDefinitionMapOutput {
	return i.ToIntrusionPreventionPolicyDefinitionMapOutputWithContext(context.Background())
}

func (i IntrusionPreventionPolicyDefinitionMap) ToIntrusionPreventionPolicyDefinitionMapOutputWithContext(ctx context.Context) IntrusionPreventionPolicyDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntrusionPreventionPolicyDefinitionMapOutput)
}

type IntrusionPreventionPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (IntrusionPreventionPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntrusionPreventionPolicyDefinition)(nil)).Elem()
}

func (o IntrusionPreventionPolicyDefinitionOutput) ToIntrusionPreventionPolicyDefinitionOutput() IntrusionPreventionPolicyDefinitionOutput {
	return o
}

func (o IntrusionPreventionPolicyDefinitionOutput) ToIntrusionPreventionPolicyDefinitionOutputWithContext(ctx context.Context) IntrusionPreventionPolicyDefinitionOutput {
	return o
}

// Custom signature
func (o IntrusionPreventionPolicyDefinitionOutput) CustomSignature() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IntrusionPreventionPolicyDefinition) pulumi.BoolPtrOutput { return v.CustomSignature }).(pulumi.BoolPtrOutput)
}

// The description of the policy definition
func (o IntrusionPreventionPolicyDefinitionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *IntrusionPreventionPolicyDefinition) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The inspection mode - Choices: `protection`, `detection`
func (o IntrusionPreventionPolicyDefinitionOutput) InspectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntrusionPreventionPolicyDefinition) pulumi.StringPtrOutput { return v.InspectionMode }).(pulumi.StringPtrOutput)
}

// IPS signature list ID
func (o IntrusionPreventionPolicyDefinitionOutput) IpsSignatureListId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntrusionPreventionPolicyDefinition) pulumi.StringPtrOutput { return v.IpsSignatureListId }).(pulumi.StringPtrOutput)
}

// IPS signature list version
func (o IntrusionPreventionPolicyDefinitionOutput) IpsSignatureListVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntrusionPreventionPolicyDefinition) pulumi.IntPtrOutput { return v.IpsSignatureListVersion }).(pulumi.IntPtrOutput)
}

// Log level - Choices: `emergency`, `alert`, `critical`, `error`, `warning`, `notice`, `info`, `debug`
func (o IntrusionPreventionPolicyDefinitionOutput) LogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntrusionPreventionPolicyDefinition) pulumi.StringPtrOutput { return v.LogLevel }).(pulumi.StringPtrOutput)
}

func (o IntrusionPreventionPolicyDefinitionOutput) Loggings() IntrusionPreventionPolicyDefinitionLoggingArrayOutput {
	return o.ApplyT(func(v *IntrusionPreventionPolicyDefinition) IntrusionPreventionPolicyDefinitionLoggingArrayOutput {
		return v.Loggings
	}).(IntrusionPreventionPolicyDefinitionLoggingArrayOutput)
}

// The policy mode - Choices: `security`, `unified`
func (o IntrusionPreventionPolicyDefinitionOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntrusionPreventionPolicyDefinition) pulumi.StringPtrOutput { return v.Mode }).(pulumi.StringPtrOutput)
}

// The name of the policy definition
func (o IntrusionPreventionPolicyDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IntrusionPreventionPolicyDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Signature set - Choices: `balanced`, `connectivity`, `security`
func (o IntrusionPreventionPolicyDefinitionOutput) SignatureSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntrusionPreventionPolicyDefinition) pulumi.StringPtrOutput { return v.SignatureSet }).(pulumi.StringPtrOutput)
}

// List of VPN IDs
func (o IntrusionPreventionPolicyDefinitionOutput) TargetVpns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IntrusionPreventionPolicyDefinition) pulumi.StringArrayOutput { return v.TargetVpns }).(pulumi.StringArrayOutput)
}

// The version of the object
func (o IntrusionPreventionPolicyDefinitionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *IntrusionPreventionPolicyDefinition) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type IntrusionPreventionPolicyDefinitionArrayOutput struct{ *pulumi.OutputState }

func (IntrusionPreventionPolicyDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IntrusionPreventionPolicyDefinition)(nil)).Elem()
}

func (o IntrusionPreventionPolicyDefinitionArrayOutput) ToIntrusionPreventionPolicyDefinitionArrayOutput() IntrusionPreventionPolicyDefinitionArrayOutput {
	return o
}

func (o IntrusionPreventionPolicyDefinitionArrayOutput) ToIntrusionPreventionPolicyDefinitionArrayOutputWithContext(ctx context.Context) IntrusionPreventionPolicyDefinitionArrayOutput {
	return o
}

func (o IntrusionPreventionPolicyDefinitionArrayOutput) Index(i pulumi.IntInput) IntrusionPreventionPolicyDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IntrusionPreventionPolicyDefinition {
		return vs[0].([]*IntrusionPreventionPolicyDefinition)[vs[1].(int)]
	}).(IntrusionPreventionPolicyDefinitionOutput)
}

type IntrusionPreventionPolicyDefinitionMapOutput struct{ *pulumi.OutputState }

func (IntrusionPreventionPolicyDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IntrusionPreventionPolicyDefinition)(nil)).Elem()
}

func (o IntrusionPreventionPolicyDefinitionMapOutput) ToIntrusionPreventionPolicyDefinitionMapOutput() IntrusionPreventionPolicyDefinitionMapOutput {
	return o
}

func (o IntrusionPreventionPolicyDefinitionMapOutput) ToIntrusionPreventionPolicyDefinitionMapOutputWithContext(ctx context.Context) IntrusionPreventionPolicyDefinitionMapOutput {
	return o
}

func (o IntrusionPreventionPolicyDefinitionMapOutput) MapIndex(k pulumi.StringInput) IntrusionPreventionPolicyDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IntrusionPreventionPolicyDefinition {
		return vs[0].(map[string]*IntrusionPreventionPolicyDefinition)[vs[1].(string)]
	}).(IntrusionPreventionPolicyDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IntrusionPreventionPolicyDefinitionInput)(nil)).Elem(), &IntrusionPreventionPolicyDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntrusionPreventionPolicyDefinitionArrayInput)(nil)).Elem(), IntrusionPreventionPolicyDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntrusionPreventionPolicyDefinitionMapInput)(nil)).Elem(), IntrusionPreventionPolicyDefinitionMap{})
	pulumi.RegisterOutputType(IntrusionPreventionPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(IntrusionPreventionPolicyDefinitionArrayOutput{})
	pulumi.RegisterOutputType(IntrusionPreventionPolicyDefinitionMapOutput{})
}
