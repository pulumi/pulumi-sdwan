// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Cisco System feature template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupCiscoSystemFeatureTemplate(ctx, &sdwan.LookupCiscoSystemFeatureTemplateArgs{
//				Id: pulumi.StringRef("f6b2c44c-693c-4763-b010-895aa3d236bd"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCiscoSystemFeatureTemplate(ctx *pulumi.Context, args *LookupCiscoSystemFeatureTemplateArgs, opts ...pulumi.InvokeOption) (*LookupCiscoSystemFeatureTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCiscoSystemFeatureTemplateResult
	err := ctx.Invoke("sdwan:index/getCiscoSystemFeatureTemplate:getCiscoSystemFeatureTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCiscoSystemFeatureTemplate.
type LookupCiscoSystemFeatureTemplateArgs struct {
	// The id of the feature template
	Id *string `pulumi:"id"`
	// The name of the feature template
	Name *string `pulumi:"name"`
}

// A collection of values returned by getCiscoSystemFeatureTemplate.
type LookupCiscoSystemFeatureTemplateResult struct {
	// Collect admin-tech before reboot due to daemon failure
	AdminTechOnFailure bool `pulumi:"adminTechOnFailure"`
	// Variable name
	AdminTechOnFailureVariable string `pulumi:"adminTechOnFailureVariable"`
	// Set the affinity group number for router
	AffinityGroupNumber int `pulumi:"affinityGroupNumber"`
	// Variable name
	AffinityGroupNumberVariable string `pulumi:"affinityGroupNumberVariable"`
	// Variable name
	AffinityGroupPreferenceVariable string `pulumi:"affinityGroupPreferenceVariable"`
	// Set the affinity group preference
	AffinityGroupPreferences []int `pulumi:"affinityGroupPreferences"`
	// Set the console baud rate
	ConsoleBaudRate string `pulumi:"consoleBaudRate"`
	// Variable name
	ConsoleBaudRateVariable string `pulumi:"consoleBaudRateVariable"`
	// Set the policer rate for control sessions
	ControlSessionPps int `pulumi:"controlSessionPps"`
	// Variable name
	ControlSessionPpsVariable string `pulumi:"controlSessionPpsVariable"`
	// Variable name
	ControllerGroupListVariable string `pulumi:"controllerGroupListVariable"`
	// Configure a list of comma-separated device groups
	ControllerGroupLists []int `pulumi:"controllerGroupLists"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// Device groups (Use comma(,) for multiple groups)
	DeviceGroups []string `pulumi:"deviceGroups"`
	// Variable name
	DeviceGroupsVariable string `pulumi:"deviceGroupsVariable"`
	// List of supported device types
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Enable migration mode to Multi-Region Fabric
	EnableMrfMigration string `pulumi:"enableMrfMigration"`
	// Enhanced App Aware Routing
	EnhancedAppAwareRouting string `pulumi:"enhancedAppAwareRouting"`
	// Variable name
	EnhancedAppAwareRoutingVariable string `pulumi:"enhancedAppAwareRoutingVariable"`
	// Enable Geo fencing
	GeoFencing bool `pulumi:"geoFencing"`
	// Set the device’s geo fencing range
	GeoFencingRange int `pulumi:"geoFencingRange"`
	// Variable name
	GeoFencingRangeVariable string `pulumi:"geoFencingRangeVariable"`
	// Enable Geo fencing
	GeoFencingSms bool `pulumi:"geoFencingSms"`
	// Set device’s geo fencing SMS phone number
	GeoFencingSmsPhoneNumbers []GetCiscoSystemFeatureTemplateGeoFencingSmsPhoneNumber `pulumi:"geoFencingSmsPhoneNumbers"`
	// Set the hostname
	Hostname string `pulumi:"hostname"`
	// Variable name
	HostnameVariable string `pulumi:"hostnameVariable"`
	// The id of the feature template
	Id string `pulumi:"id"`
	// Idle CLI timeout in minutes
	IdleTimeout int `pulumi:"idleTimeout"`
	// Variable name
	IdleTimeoutVariable string `pulumi:"idleTimeoutVariable"`
	// Set the device’s physical latitude
	Latitude float64 `pulumi:"latitude"`
	// Variable name
	LatitudeVariable string `pulumi:"latitudeVariable"`
	// Set the location of the device
	Location string `pulumi:"location"`
	// Variable name
	LocationVariable string `pulumi:"locationVariable"`
	// Set the device’s physical longitude
	Longitude float64 `pulumi:"longitude"`
	// Variable name
	LongitudeVariable string `pulumi:"longitudeVariable"`
	// Set the maximum number of OMP sessions \n\n the device can have
	MaxOmpSessions int `pulumi:"maxOmpSessions"`
	// Variable name
	MaxOmpSessionsVariable string `pulumi:"maxOmpSessionsVariable"`
	// Set BGP community during migration from BGP-core based network
	MigrationBgpCommunity int `pulumi:"migrationBgpCommunity"`
	// Device is multi-tenant
	MultiTenant bool `pulumi:"multiTenant"`
	// Variable name
	MultiTenantVariable string `pulumi:"multiTenantVariable"`
	// The name of the feature template
	Name string `pulumi:"name"`
	// Object Track configuration
	ObjectTrackers []GetCiscoSystemFeatureTemplateObjectTracker `pulumi:"objectTrackers"`
	// Enable or disable On-demand Tunnel
	OnDemandTunnel bool `pulumi:"onDemandTunnel"`
	// Idle CLI timeout in minutes
	OnDemandTunnelIdleTimeout int `pulumi:"onDemandTunnelIdleTimeout"`
	// Variable name
	OnDemandTunnelIdleTimeoutVariable string `pulumi:"onDemandTunnelIdleTimeoutVariable"`
	// Variable name
	OnDemandTunnelVariable string `pulumi:"onDemandTunnelVariable"`
	// Set the Overlay ID
	OverlayId int `pulumi:"overlayId"`
	// Variable name
	OverlayIdVariable string `pulumi:"overlayIdVariable"`
	// Enable port hopping
	PortHopping bool `pulumi:"portHopping"`
	// Variable name
	PortHoppingVariable string `pulumi:"portHoppingVariable"`
	// Set the TLOC port offset when multiple devices are behind a NAT
	PortOffset int `pulumi:"portOffset"`
	// Variable name
	PortOffsetVariable string `pulumi:"portOffsetVariable"`
	// Set region ID
	RegionId int `pulumi:"regionId"`
	// Variable name
	RegionIdVariable string `pulumi:"regionIdVariable"`
	// Set the role for router
	Role string `pulumi:"role"`
	// Variable name
	RoleVariable string `pulumi:"roleVariable"`
	// Set secondary region ID
	SecondaryRegionId int `pulumi:"secondaryRegionId"`
	// Variable name
	SecondaryRegionIdVariable string `pulumi:"secondaryRegionIdVariable"`
	// Set the site identifier
	SiteId int `pulumi:"siteId"`
	// Variable name
	SiteIdVariable string `pulumi:"siteIdVariable"`
	// Set a text description of the device
	SystemDescription string `pulumi:"systemDescription"`
	// Variable name
	SystemDescriptionVariable string `pulumi:"systemDescriptionVariable"`
	// Set the system IP address
	SystemIp string `pulumi:"systemIp"`
	// Variable name
	SystemIpVariable string `pulumi:"systemIpVariable"`
	// The template type
	TemplateType string `pulumi:"templateType"`
	// Set the timezone
	Timezone string `pulumi:"timezone"`
	// Variable name
	TimezoneVariable string `pulumi:"timezoneVariable"`
	// Enable or disable default gateway tracking
	TrackDefaultGateway bool `pulumi:"trackDefaultGateway"`
	// Variable name
	TrackDefaultGatewayVariable string `pulumi:"trackDefaultGatewayVariable"`
	// OMP Tag attached to routes based on interface tracking
	TrackInterfaceTag int `pulumi:"trackInterfaceTag"`
	// Variable name
	TrackInterfaceTagVariable string `pulumi:"trackInterfaceTagVariable"`
	// Configure tracking of transport
	TrackTransport bool `pulumi:"trackTransport"`
	// Variable name
	TrackTransportVariable string `pulumi:"trackTransportVariable"`
	// Tracker configuration
	Trackers []GetCiscoSystemFeatureTemplateTracker `pulumi:"trackers"`
	// Enable transport gateway
	TransportGateway bool `pulumi:"transportGateway"`
	// Variable name
	TransportGatewayVariable string `pulumi:"transportGatewayVariable"`
	// The version of the feature template
	Version int `pulumi:"version"`
}

func LookupCiscoSystemFeatureTemplateOutput(ctx *pulumi.Context, args LookupCiscoSystemFeatureTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupCiscoSystemFeatureTemplateResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCiscoSystemFeatureTemplateResultOutput, error) {
			args := v.(LookupCiscoSystemFeatureTemplateArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sdwan:index/getCiscoSystemFeatureTemplate:getCiscoSystemFeatureTemplate", args, LookupCiscoSystemFeatureTemplateResultOutput{}, options).(LookupCiscoSystemFeatureTemplateResultOutput), nil
		}).(LookupCiscoSystemFeatureTemplateResultOutput)
}

// A collection of arguments for invoking getCiscoSystemFeatureTemplate.
type LookupCiscoSystemFeatureTemplateOutputArgs struct {
	// The id of the feature template
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the feature template
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupCiscoSystemFeatureTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCiscoSystemFeatureTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getCiscoSystemFeatureTemplate.
type LookupCiscoSystemFeatureTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupCiscoSystemFeatureTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCiscoSystemFeatureTemplateResult)(nil)).Elem()
}

func (o LookupCiscoSystemFeatureTemplateResultOutput) ToLookupCiscoSystemFeatureTemplateResultOutput() LookupCiscoSystemFeatureTemplateResultOutput {
	return o
}

func (o LookupCiscoSystemFeatureTemplateResultOutput) ToLookupCiscoSystemFeatureTemplateResultOutputWithContext(ctx context.Context) LookupCiscoSystemFeatureTemplateResultOutput {
	return o
}

// Collect admin-tech before reboot due to daemon failure
func (o LookupCiscoSystemFeatureTemplateResultOutput) AdminTechOnFailure() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) bool { return v.AdminTechOnFailure }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) AdminTechOnFailureVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.AdminTechOnFailureVariable }).(pulumi.StringOutput)
}

// Set the affinity group number for router
func (o LookupCiscoSystemFeatureTemplateResultOutput) AffinityGroupNumber() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) int { return v.AffinityGroupNumber }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) AffinityGroupNumberVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.AffinityGroupNumberVariable }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) AffinityGroupPreferenceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.AffinityGroupPreferenceVariable }).(pulumi.StringOutput)
}

// Set the affinity group preference
func (o LookupCiscoSystemFeatureTemplateResultOutput) AffinityGroupPreferences() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) []int { return v.AffinityGroupPreferences }).(pulumi.IntArrayOutput)
}

// Set the console baud rate
func (o LookupCiscoSystemFeatureTemplateResultOutput) ConsoleBaudRate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.ConsoleBaudRate }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) ConsoleBaudRateVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.ConsoleBaudRateVariable }).(pulumi.StringOutput)
}

// Set the policer rate for control sessions
func (o LookupCiscoSystemFeatureTemplateResultOutput) ControlSessionPps() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) int { return v.ControlSessionPps }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) ControlSessionPpsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.ControlSessionPpsVariable }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) ControllerGroupListVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.ControllerGroupListVariable }).(pulumi.StringOutput)
}

// Configure a list of comma-separated device groups
func (o LookupCiscoSystemFeatureTemplateResultOutput) ControllerGroupLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) []int { return v.ControllerGroupLists }).(pulumi.IntArrayOutput)
}

// The description of the feature template
func (o LookupCiscoSystemFeatureTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// Device groups (Use comma(,) for multiple groups)
func (o LookupCiscoSystemFeatureTemplateResultOutput) DeviceGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) []string { return v.DeviceGroups }).(pulumi.StringArrayOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) DeviceGroupsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.DeviceGroupsVariable }).(pulumi.StringOutput)
}

// List of supported device types
func (o LookupCiscoSystemFeatureTemplateResultOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) []string { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Enable migration mode to Multi-Region Fabric
func (o LookupCiscoSystemFeatureTemplateResultOutput) EnableMrfMigration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.EnableMrfMigration }).(pulumi.StringOutput)
}

// Enhanced App Aware Routing
func (o LookupCiscoSystemFeatureTemplateResultOutput) EnhancedAppAwareRouting() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.EnhancedAppAwareRouting }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) EnhancedAppAwareRoutingVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.EnhancedAppAwareRoutingVariable }).(pulumi.StringOutput)
}

// Enable Geo fencing
func (o LookupCiscoSystemFeatureTemplateResultOutput) GeoFencing() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) bool { return v.GeoFencing }).(pulumi.BoolOutput)
}

// Set the device’s geo fencing range
func (o LookupCiscoSystemFeatureTemplateResultOutput) GeoFencingRange() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) int { return v.GeoFencingRange }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) GeoFencingRangeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.GeoFencingRangeVariable }).(pulumi.StringOutput)
}

// Enable Geo fencing
func (o LookupCiscoSystemFeatureTemplateResultOutput) GeoFencingSms() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) bool { return v.GeoFencingSms }).(pulumi.BoolOutput)
}

// Set device’s geo fencing SMS phone number
func (o LookupCiscoSystemFeatureTemplateResultOutput) GeoFencingSmsPhoneNumbers() GetCiscoSystemFeatureTemplateGeoFencingSmsPhoneNumberArrayOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) []GetCiscoSystemFeatureTemplateGeoFencingSmsPhoneNumber {
		return v.GeoFencingSmsPhoneNumbers
	}).(GetCiscoSystemFeatureTemplateGeoFencingSmsPhoneNumberArrayOutput)
}

// Set the hostname
func (o LookupCiscoSystemFeatureTemplateResultOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.Hostname }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) HostnameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.HostnameVariable }).(pulumi.StringOutput)
}

// The id of the feature template
func (o LookupCiscoSystemFeatureTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// Idle CLI timeout in minutes
func (o LookupCiscoSystemFeatureTemplateResultOutput) IdleTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) int { return v.IdleTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) IdleTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.IdleTimeoutVariable }).(pulumi.StringOutput)
}

// Set the device’s physical latitude
func (o LookupCiscoSystemFeatureTemplateResultOutput) Latitude() pulumi.Float64Output {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) float64 { return v.Latitude }).(pulumi.Float64Output)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) LatitudeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.LatitudeVariable }).(pulumi.StringOutput)
}

// Set the location of the device
func (o LookupCiscoSystemFeatureTemplateResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.Location }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) LocationVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.LocationVariable }).(pulumi.StringOutput)
}

// Set the device’s physical longitude
func (o LookupCiscoSystemFeatureTemplateResultOutput) Longitude() pulumi.Float64Output {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) float64 { return v.Longitude }).(pulumi.Float64Output)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) LongitudeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.LongitudeVariable }).(pulumi.StringOutput)
}

// Set the maximum number of OMP sessions \n\n the device can have
func (o LookupCiscoSystemFeatureTemplateResultOutput) MaxOmpSessions() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) int { return v.MaxOmpSessions }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) MaxOmpSessionsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.MaxOmpSessionsVariable }).(pulumi.StringOutput)
}

// Set BGP community during migration from BGP-core based network
func (o LookupCiscoSystemFeatureTemplateResultOutput) MigrationBgpCommunity() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) int { return v.MigrationBgpCommunity }).(pulumi.IntOutput)
}

// Device is multi-tenant
func (o LookupCiscoSystemFeatureTemplateResultOutput) MultiTenant() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) bool { return v.MultiTenant }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) MultiTenantVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.MultiTenantVariable }).(pulumi.StringOutput)
}

// The name of the feature template
func (o LookupCiscoSystemFeatureTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// Object Track configuration
func (o LookupCiscoSystemFeatureTemplateResultOutput) ObjectTrackers() GetCiscoSystemFeatureTemplateObjectTrackerArrayOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) []GetCiscoSystemFeatureTemplateObjectTracker {
		return v.ObjectTrackers
	}).(GetCiscoSystemFeatureTemplateObjectTrackerArrayOutput)
}

// Enable or disable On-demand Tunnel
func (o LookupCiscoSystemFeatureTemplateResultOutput) OnDemandTunnel() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) bool { return v.OnDemandTunnel }).(pulumi.BoolOutput)
}

// Idle CLI timeout in minutes
func (o LookupCiscoSystemFeatureTemplateResultOutput) OnDemandTunnelIdleTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) int { return v.OnDemandTunnelIdleTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) OnDemandTunnelIdleTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.OnDemandTunnelIdleTimeoutVariable }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) OnDemandTunnelVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.OnDemandTunnelVariable }).(pulumi.StringOutput)
}

// Set the Overlay ID
func (o LookupCiscoSystemFeatureTemplateResultOutput) OverlayId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) int { return v.OverlayId }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) OverlayIdVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.OverlayIdVariable }).(pulumi.StringOutput)
}

// Enable port hopping
func (o LookupCiscoSystemFeatureTemplateResultOutput) PortHopping() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) bool { return v.PortHopping }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) PortHoppingVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.PortHoppingVariable }).(pulumi.StringOutput)
}

// Set the TLOC port offset when multiple devices are behind a NAT
func (o LookupCiscoSystemFeatureTemplateResultOutput) PortOffset() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) int { return v.PortOffset }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) PortOffsetVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.PortOffsetVariable }).(pulumi.StringOutput)
}

// Set region ID
func (o LookupCiscoSystemFeatureTemplateResultOutput) RegionId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) int { return v.RegionId }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) RegionIdVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.RegionIdVariable }).(pulumi.StringOutput)
}

// Set the role for router
func (o LookupCiscoSystemFeatureTemplateResultOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.Role }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) RoleVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.RoleVariable }).(pulumi.StringOutput)
}

// Set secondary region ID
func (o LookupCiscoSystemFeatureTemplateResultOutput) SecondaryRegionId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) int { return v.SecondaryRegionId }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) SecondaryRegionIdVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.SecondaryRegionIdVariable }).(pulumi.StringOutput)
}

// Set the site identifier
func (o LookupCiscoSystemFeatureTemplateResultOutput) SiteId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) int { return v.SiteId }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) SiteIdVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.SiteIdVariable }).(pulumi.StringOutput)
}

// Set a text description of the device
func (o LookupCiscoSystemFeatureTemplateResultOutput) SystemDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.SystemDescription }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) SystemDescriptionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.SystemDescriptionVariable }).(pulumi.StringOutput)
}

// Set the system IP address
func (o LookupCiscoSystemFeatureTemplateResultOutput) SystemIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.SystemIp }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) SystemIpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.SystemIpVariable }).(pulumi.StringOutput)
}

// The template type
func (o LookupCiscoSystemFeatureTemplateResultOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.TemplateType }).(pulumi.StringOutput)
}

// Set the timezone
func (o LookupCiscoSystemFeatureTemplateResultOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.Timezone }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) TimezoneVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.TimezoneVariable }).(pulumi.StringOutput)
}

// Enable or disable default gateway tracking
func (o LookupCiscoSystemFeatureTemplateResultOutput) TrackDefaultGateway() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) bool { return v.TrackDefaultGateway }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) TrackDefaultGatewayVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.TrackDefaultGatewayVariable }).(pulumi.StringOutput)
}

// OMP Tag attached to routes based on interface tracking
func (o LookupCiscoSystemFeatureTemplateResultOutput) TrackInterfaceTag() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) int { return v.TrackInterfaceTag }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) TrackInterfaceTagVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.TrackInterfaceTagVariable }).(pulumi.StringOutput)
}

// Configure tracking of transport
func (o LookupCiscoSystemFeatureTemplateResultOutput) TrackTransport() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) bool { return v.TrackTransport }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) TrackTransportVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.TrackTransportVariable }).(pulumi.StringOutput)
}

// Tracker configuration
func (o LookupCiscoSystemFeatureTemplateResultOutput) Trackers() GetCiscoSystemFeatureTemplateTrackerArrayOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) []GetCiscoSystemFeatureTemplateTracker {
		return v.Trackers
	}).(GetCiscoSystemFeatureTemplateTrackerArrayOutput)
}

// Enable transport gateway
func (o LookupCiscoSystemFeatureTemplateResultOutput) TransportGateway() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) bool { return v.TransportGateway }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupCiscoSystemFeatureTemplateResultOutput) TransportGatewayVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) string { return v.TransportGatewayVariable }).(pulumi.StringOutput)
}

// The version of the feature template
func (o LookupCiscoSystemFeatureTemplateResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoSystemFeatureTemplateResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCiscoSystemFeatureTemplateResultOutput{})
}
