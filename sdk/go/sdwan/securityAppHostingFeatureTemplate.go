// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Security App Hosting feature template.
//   - Minimum SD-WAN Manager version: `15.0.0`
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/securityAppHostingFeatureTemplate:SecurityAppHostingFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type SecurityAppHostingFeatureTemplate struct {
	pulumi.CustomResourceState

	// The description of the feature template
	Description pulumi.StringOutput `pulumi:"description"`
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayOutput `pulumi:"deviceTypes"`
	// The name of the feature template
	Name pulumi.StringOutput `pulumi:"name"`
	// The template type
	TemplateType pulumi.StringOutput `pulumi:"templateType"`
	// The version of the feature template
	Version pulumi.IntOutput `pulumi:"version"`
	// Virtual application Instance
	VirtualApplications SecurityAppHostingFeatureTemplateVirtualApplicationArrayOutput `pulumi:"virtualApplications"`
}

// NewSecurityAppHostingFeatureTemplate registers a new resource with the given unique name, arguments, and options.
func NewSecurityAppHostingFeatureTemplate(ctx *pulumi.Context,
	name string, args *SecurityAppHostingFeatureTemplateArgs, opts ...pulumi.ResourceOption) (*SecurityAppHostingFeatureTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.DeviceTypes == nil {
		return nil, errors.New("invalid value for required argument 'DeviceTypes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityAppHostingFeatureTemplate
	err := ctx.RegisterResource("sdwan:index/securityAppHostingFeatureTemplate:SecurityAppHostingFeatureTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityAppHostingFeatureTemplate gets an existing SecurityAppHostingFeatureTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityAppHostingFeatureTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityAppHostingFeatureTemplateState, opts ...pulumi.ResourceOption) (*SecurityAppHostingFeatureTemplate, error) {
	var resource SecurityAppHostingFeatureTemplate
	err := ctx.ReadResource("sdwan:index/securityAppHostingFeatureTemplate:SecurityAppHostingFeatureTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityAppHostingFeatureTemplate resources.
type securityAppHostingFeatureTemplateState struct {
	// The description of the feature template
	Description *string `pulumi:"description"`
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// The template type
	TemplateType *string `pulumi:"templateType"`
	// The version of the feature template
	Version *int `pulumi:"version"`
	// Virtual application Instance
	VirtualApplications []SecurityAppHostingFeatureTemplateVirtualApplication `pulumi:"virtualApplications"`
}

type SecurityAppHostingFeatureTemplateState struct {
	// The description of the feature template
	Description pulumi.StringPtrInput
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// The template type
	TemplateType pulumi.StringPtrInput
	// The version of the feature template
	Version pulumi.IntPtrInput
	// Virtual application Instance
	VirtualApplications SecurityAppHostingFeatureTemplateVirtualApplicationArrayInput
}

func (SecurityAppHostingFeatureTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityAppHostingFeatureTemplateState)(nil)).Elem()
}

type securityAppHostingFeatureTemplateArgs struct {
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Virtual application Instance
	VirtualApplications []SecurityAppHostingFeatureTemplateVirtualApplication `pulumi:"virtualApplications"`
}

// The set of arguments for constructing a SecurityAppHostingFeatureTemplate resource.
type SecurityAppHostingFeatureTemplateArgs struct {
	// The description of the feature template
	Description pulumi.StringInput
	// List of supported device types
	//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Virtual application Instance
	VirtualApplications SecurityAppHostingFeatureTemplateVirtualApplicationArrayInput
}

func (SecurityAppHostingFeatureTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityAppHostingFeatureTemplateArgs)(nil)).Elem()
}

type SecurityAppHostingFeatureTemplateInput interface {
	pulumi.Input

	ToSecurityAppHostingFeatureTemplateOutput() SecurityAppHostingFeatureTemplateOutput
	ToSecurityAppHostingFeatureTemplateOutputWithContext(ctx context.Context) SecurityAppHostingFeatureTemplateOutput
}

func (*SecurityAppHostingFeatureTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityAppHostingFeatureTemplate)(nil)).Elem()
}

func (i *SecurityAppHostingFeatureTemplate) ToSecurityAppHostingFeatureTemplateOutput() SecurityAppHostingFeatureTemplateOutput {
	return i.ToSecurityAppHostingFeatureTemplateOutputWithContext(context.Background())
}

func (i *SecurityAppHostingFeatureTemplate) ToSecurityAppHostingFeatureTemplateOutputWithContext(ctx context.Context) SecurityAppHostingFeatureTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityAppHostingFeatureTemplateOutput)
}

// SecurityAppHostingFeatureTemplateArrayInput is an input type that accepts SecurityAppHostingFeatureTemplateArray and SecurityAppHostingFeatureTemplateArrayOutput values.
// You can construct a concrete instance of `SecurityAppHostingFeatureTemplateArrayInput` via:
//
//	SecurityAppHostingFeatureTemplateArray{ SecurityAppHostingFeatureTemplateArgs{...} }
type SecurityAppHostingFeatureTemplateArrayInput interface {
	pulumi.Input

	ToSecurityAppHostingFeatureTemplateArrayOutput() SecurityAppHostingFeatureTemplateArrayOutput
	ToSecurityAppHostingFeatureTemplateArrayOutputWithContext(context.Context) SecurityAppHostingFeatureTemplateArrayOutput
}

type SecurityAppHostingFeatureTemplateArray []SecurityAppHostingFeatureTemplateInput

func (SecurityAppHostingFeatureTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityAppHostingFeatureTemplate)(nil)).Elem()
}

func (i SecurityAppHostingFeatureTemplateArray) ToSecurityAppHostingFeatureTemplateArrayOutput() SecurityAppHostingFeatureTemplateArrayOutput {
	return i.ToSecurityAppHostingFeatureTemplateArrayOutputWithContext(context.Background())
}

func (i SecurityAppHostingFeatureTemplateArray) ToSecurityAppHostingFeatureTemplateArrayOutputWithContext(ctx context.Context) SecurityAppHostingFeatureTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityAppHostingFeatureTemplateArrayOutput)
}

// SecurityAppHostingFeatureTemplateMapInput is an input type that accepts SecurityAppHostingFeatureTemplateMap and SecurityAppHostingFeatureTemplateMapOutput values.
// You can construct a concrete instance of `SecurityAppHostingFeatureTemplateMapInput` via:
//
//	SecurityAppHostingFeatureTemplateMap{ "key": SecurityAppHostingFeatureTemplateArgs{...} }
type SecurityAppHostingFeatureTemplateMapInput interface {
	pulumi.Input

	ToSecurityAppHostingFeatureTemplateMapOutput() SecurityAppHostingFeatureTemplateMapOutput
	ToSecurityAppHostingFeatureTemplateMapOutputWithContext(context.Context) SecurityAppHostingFeatureTemplateMapOutput
}

type SecurityAppHostingFeatureTemplateMap map[string]SecurityAppHostingFeatureTemplateInput

func (SecurityAppHostingFeatureTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityAppHostingFeatureTemplate)(nil)).Elem()
}

func (i SecurityAppHostingFeatureTemplateMap) ToSecurityAppHostingFeatureTemplateMapOutput() SecurityAppHostingFeatureTemplateMapOutput {
	return i.ToSecurityAppHostingFeatureTemplateMapOutputWithContext(context.Background())
}

func (i SecurityAppHostingFeatureTemplateMap) ToSecurityAppHostingFeatureTemplateMapOutputWithContext(ctx context.Context) SecurityAppHostingFeatureTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityAppHostingFeatureTemplateMapOutput)
}

type SecurityAppHostingFeatureTemplateOutput struct{ *pulumi.OutputState }

func (SecurityAppHostingFeatureTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityAppHostingFeatureTemplate)(nil)).Elem()
}

func (o SecurityAppHostingFeatureTemplateOutput) ToSecurityAppHostingFeatureTemplateOutput() SecurityAppHostingFeatureTemplateOutput {
	return o
}

func (o SecurityAppHostingFeatureTemplateOutput) ToSecurityAppHostingFeatureTemplateOutputWithContext(ctx context.Context) SecurityAppHostingFeatureTemplateOutput {
	return o
}

// The description of the feature template
func (o SecurityAppHostingFeatureTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAppHostingFeatureTemplate) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
//   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
func (o SecurityAppHostingFeatureTemplateOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityAppHostingFeatureTemplate) pulumi.StringArrayOutput { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// The name of the feature template
func (o SecurityAppHostingFeatureTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAppHostingFeatureTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The template type
func (o SecurityAppHostingFeatureTemplateOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAppHostingFeatureTemplate) pulumi.StringOutput { return v.TemplateType }).(pulumi.StringOutput)
}

// The version of the feature template
func (o SecurityAppHostingFeatureTemplateOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *SecurityAppHostingFeatureTemplate) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

// Virtual application Instance
func (o SecurityAppHostingFeatureTemplateOutput) VirtualApplications() SecurityAppHostingFeatureTemplateVirtualApplicationArrayOutput {
	return o.ApplyT(func(v *SecurityAppHostingFeatureTemplate) SecurityAppHostingFeatureTemplateVirtualApplicationArrayOutput {
		return v.VirtualApplications
	}).(SecurityAppHostingFeatureTemplateVirtualApplicationArrayOutput)
}

type SecurityAppHostingFeatureTemplateArrayOutput struct{ *pulumi.OutputState }

func (SecurityAppHostingFeatureTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityAppHostingFeatureTemplate)(nil)).Elem()
}

func (o SecurityAppHostingFeatureTemplateArrayOutput) ToSecurityAppHostingFeatureTemplateArrayOutput() SecurityAppHostingFeatureTemplateArrayOutput {
	return o
}

func (o SecurityAppHostingFeatureTemplateArrayOutput) ToSecurityAppHostingFeatureTemplateArrayOutputWithContext(ctx context.Context) SecurityAppHostingFeatureTemplateArrayOutput {
	return o
}

func (o SecurityAppHostingFeatureTemplateArrayOutput) Index(i pulumi.IntInput) SecurityAppHostingFeatureTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityAppHostingFeatureTemplate {
		return vs[0].([]*SecurityAppHostingFeatureTemplate)[vs[1].(int)]
	}).(SecurityAppHostingFeatureTemplateOutput)
}

type SecurityAppHostingFeatureTemplateMapOutput struct{ *pulumi.OutputState }

func (SecurityAppHostingFeatureTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityAppHostingFeatureTemplate)(nil)).Elem()
}

func (o SecurityAppHostingFeatureTemplateMapOutput) ToSecurityAppHostingFeatureTemplateMapOutput() SecurityAppHostingFeatureTemplateMapOutput {
	return o
}

func (o SecurityAppHostingFeatureTemplateMapOutput) ToSecurityAppHostingFeatureTemplateMapOutputWithContext(ctx context.Context) SecurityAppHostingFeatureTemplateMapOutput {
	return o
}

func (o SecurityAppHostingFeatureTemplateMapOutput) MapIndex(k pulumi.StringInput) SecurityAppHostingFeatureTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityAppHostingFeatureTemplate {
		return vs[0].(map[string]*SecurityAppHostingFeatureTemplate)[vs[1].(string)]
	}).(SecurityAppHostingFeatureTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityAppHostingFeatureTemplateInput)(nil)).Elem(), &SecurityAppHostingFeatureTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityAppHostingFeatureTemplateArrayInput)(nil)).Elem(), SecurityAppHostingFeatureTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityAppHostingFeatureTemplateMapInput)(nil)).Elem(), SecurityAppHostingFeatureTemplateMap{})
	pulumi.RegisterOutputType(SecurityAppHostingFeatureTemplateOutput{})
	pulumi.RegisterOutputType(SecurityAppHostingFeatureTemplateArrayOutput{})
	pulumi.RegisterOutputType(SecurityAppHostingFeatureTemplateMapOutput{})
}
