// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a VPN List Policy Object .
//
// ## Example Usage
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/vpnListPolicyObject:VpnListPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type VpnListPolicyObject struct {
	pulumi.CustomResourceState

	// List of entries
	Entries VpnListPolicyObjectEntryArrayOutput `pulumi:"entries"`
	// The name of the policy object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewVpnListPolicyObject registers a new resource with the given unique name, arguments, and options.
func NewVpnListPolicyObject(ctx *pulumi.Context,
	name string, args *VpnListPolicyObjectArgs, opts ...pulumi.ResourceOption) (*VpnListPolicyObject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpnListPolicyObject
	err := ctx.RegisterResource("sdwan:index/vpnListPolicyObject:VpnListPolicyObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnListPolicyObject gets an existing VpnListPolicyObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnListPolicyObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnListPolicyObjectState, opts ...pulumi.ResourceOption) (*VpnListPolicyObject, error) {
	var resource VpnListPolicyObject
	err := ctx.ReadResource("sdwan:index/vpnListPolicyObject:VpnListPolicyObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnListPolicyObject resources.
type vpnListPolicyObjectState struct {
	// List of entries
	Entries []VpnListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type VpnListPolicyObjectState struct {
	// List of entries
	Entries VpnListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (VpnListPolicyObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnListPolicyObjectState)(nil)).Elem()
}

type vpnListPolicyObjectArgs struct {
	// List of entries
	Entries []VpnListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a VpnListPolicyObject resource.
type VpnListPolicyObjectArgs struct {
	// List of entries
	Entries VpnListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
}

func (VpnListPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnListPolicyObjectArgs)(nil)).Elem()
}

type VpnListPolicyObjectInput interface {
	pulumi.Input

	ToVpnListPolicyObjectOutput() VpnListPolicyObjectOutput
	ToVpnListPolicyObjectOutputWithContext(ctx context.Context) VpnListPolicyObjectOutput
}

func (*VpnListPolicyObject) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnListPolicyObject)(nil)).Elem()
}

func (i *VpnListPolicyObject) ToVpnListPolicyObjectOutput() VpnListPolicyObjectOutput {
	return i.ToVpnListPolicyObjectOutputWithContext(context.Background())
}

func (i *VpnListPolicyObject) ToVpnListPolicyObjectOutputWithContext(ctx context.Context) VpnListPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnListPolicyObjectOutput)
}

// VpnListPolicyObjectArrayInput is an input type that accepts VpnListPolicyObjectArray and VpnListPolicyObjectArrayOutput values.
// You can construct a concrete instance of `VpnListPolicyObjectArrayInput` via:
//
//	VpnListPolicyObjectArray{ VpnListPolicyObjectArgs{...} }
type VpnListPolicyObjectArrayInput interface {
	pulumi.Input

	ToVpnListPolicyObjectArrayOutput() VpnListPolicyObjectArrayOutput
	ToVpnListPolicyObjectArrayOutputWithContext(context.Context) VpnListPolicyObjectArrayOutput
}

type VpnListPolicyObjectArray []VpnListPolicyObjectInput

func (VpnListPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnListPolicyObject)(nil)).Elem()
}

func (i VpnListPolicyObjectArray) ToVpnListPolicyObjectArrayOutput() VpnListPolicyObjectArrayOutput {
	return i.ToVpnListPolicyObjectArrayOutputWithContext(context.Background())
}

func (i VpnListPolicyObjectArray) ToVpnListPolicyObjectArrayOutputWithContext(ctx context.Context) VpnListPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnListPolicyObjectArrayOutput)
}

// VpnListPolicyObjectMapInput is an input type that accepts VpnListPolicyObjectMap and VpnListPolicyObjectMapOutput values.
// You can construct a concrete instance of `VpnListPolicyObjectMapInput` via:
//
//	VpnListPolicyObjectMap{ "key": VpnListPolicyObjectArgs{...} }
type VpnListPolicyObjectMapInput interface {
	pulumi.Input

	ToVpnListPolicyObjectMapOutput() VpnListPolicyObjectMapOutput
	ToVpnListPolicyObjectMapOutputWithContext(context.Context) VpnListPolicyObjectMapOutput
}

type VpnListPolicyObjectMap map[string]VpnListPolicyObjectInput

func (VpnListPolicyObjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnListPolicyObject)(nil)).Elem()
}

func (i VpnListPolicyObjectMap) ToVpnListPolicyObjectMapOutput() VpnListPolicyObjectMapOutput {
	return i.ToVpnListPolicyObjectMapOutputWithContext(context.Background())
}

func (i VpnListPolicyObjectMap) ToVpnListPolicyObjectMapOutputWithContext(ctx context.Context) VpnListPolicyObjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnListPolicyObjectMapOutput)
}

type VpnListPolicyObjectOutput struct{ *pulumi.OutputState }

func (VpnListPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnListPolicyObject)(nil)).Elem()
}

func (o VpnListPolicyObjectOutput) ToVpnListPolicyObjectOutput() VpnListPolicyObjectOutput {
	return o
}

func (o VpnListPolicyObjectOutput) ToVpnListPolicyObjectOutputWithContext(ctx context.Context) VpnListPolicyObjectOutput {
	return o
}

// List of entries
func (o VpnListPolicyObjectOutput) Entries() VpnListPolicyObjectEntryArrayOutput {
	return o.ApplyT(func(v *VpnListPolicyObject) VpnListPolicyObjectEntryArrayOutput { return v.Entries }).(VpnListPolicyObjectEntryArrayOutput)
}

// The name of the policy object
func (o VpnListPolicyObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnListPolicyObject) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the object
func (o VpnListPolicyObjectOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnListPolicyObject) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type VpnListPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (VpnListPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnListPolicyObject)(nil)).Elem()
}

func (o VpnListPolicyObjectArrayOutput) ToVpnListPolicyObjectArrayOutput() VpnListPolicyObjectArrayOutput {
	return o
}

func (o VpnListPolicyObjectArrayOutput) ToVpnListPolicyObjectArrayOutputWithContext(ctx context.Context) VpnListPolicyObjectArrayOutput {
	return o
}

func (o VpnListPolicyObjectArrayOutput) Index(i pulumi.IntInput) VpnListPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpnListPolicyObject {
		return vs[0].([]*VpnListPolicyObject)[vs[1].(int)]
	}).(VpnListPolicyObjectOutput)
}

type VpnListPolicyObjectMapOutput struct{ *pulumi.OutputState }

func (VpnListPolicyObjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnListPolicyObject)(nil)).Elem()
}

func (o VpnListPolicyObjectMapOutput) ToVpnListPolicyObjectMapOutput() VpnListPolicyObjectMapOutput {
	return o
}

func (o VpnListPolicyObjectMapOutput) ToVpnListPolicyObjectMapOutputWithContext(ctx context.Context) VpnListPolicyObjectMapOutput {
	return o
}

func (o VpnListPolicyObjectMapOutput) MapIndex(k pulumi.StringInput) VpnListPolicyObjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpnListPolicyObject {
		return vs[0].(map[string]*VpnListPolicyObject)[vs[1].(string)]
	}).(VpnListPolicyObjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpnListPolicyObjectInput)(nil)).Elem(), &VpnListPolicyObject{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnListPolicyObjectArrayInput)(nil)).Elem(), VpnListPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnListPolicyObjectMapInput)(nil)).Elem(), VpnListPolicyObjectMap{})
	pulumi.RegisterOutputType(VpnListPolicyObjectOutput{})
	pulumi.RegisterOutputType(VpnListPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(VpnListPolicyObjectMapOutput{})
}
