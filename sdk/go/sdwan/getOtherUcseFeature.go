// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Other UCSE Feature.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupOtherUcseFeature(ctx, &sdwan.LookupOtherUcseFeatureArgs{
//				Id:               "f6b2c44c-693c-4763-b010-895aa3d236bd",
//				FeatureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupOtherUcseFeature(ctx *pulumi.Context, args *LookupOtherUcseFeatureArgs, opts ...pulumi.InvokeOption) (*LookupOtherUcseFeatureResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOtherUcseFeatureResult
	err := ctx.Invoke("sdwan:index/getOtherUcseFeature:getOtherUcseFeature", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOtherUcseFeature.
type LookupOtherUcseFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
}

// A collection of values returned by getOtherUcseFeature.
type LookupOtherUcseFeatureResult struct {
	// Dedicated
	AccessPortDedicated          bool   `pulumi:"accessPortDedicated"`
	AccessPortSharedFailoverType string `pulumi:"accessPortSharedFailoverType"`
	AccessPortSharedType         string `pulumi:"accessPortSharedType"`
	// Assign priority
	AssignPriority int `pulumi:"assignPriority"`
	// Variable name
	AssignPriorityVariable string `pulumi:"assignPriorityVariable"`
	// Bay
	Bay int `pulumi:"bay"`
	// Assign default gateway
	DefaultGateway string `pulumi:"defaultGateway"`
	// Variable name
	DefaultGatewayVariable string `pulumi:"defaultGatewayVariable"`
	// The description of the Feature
	Description string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
	// Interface name: GigabitEthernet0/<>/<> when present
	Interfaces []GetOtherUcseFeatureInterface `pulumi:"interfaces"`
	// Assign IPv4 address
	Ipv4Address string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable string `pulumi:"ipv4AddressVariable"`
	// The name of the Feature
	Name string `pulumi:"name"`
	// Slot
	Slot int `pulumi:"slot"`
	// The version of the Feature
	Version int `pulumi:"version"`
	// Assign Vlan Id
	VlanId int `pulumi:"vlanId"`
	// Variable name
	VlanIdVariable string `pulumi:"vlanIdVariable"`
}

func LookupOtherUcseFeatureOutput(ctx *pulumi.Context, args LookupOtherUcseFeatureOutputArgs, opts ...pulumi.InvokeOption) LookupOtherUcseFeatureResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupOtherUcseFeatureResultOutput, error) {
			args := v.(LookupOtherUcseFeatureArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sdwan:index/getOtherUcseFeature:getOtherUcseFeature", args, LookupOtherUcseFeatureResultOutput{}, options).(LookupOtherUcseFeatureResultOutput), nil
		}).(LookupOtherUcseFeatureResultOutput)
}

// A collection of arguments for invoking getOtherUcseFeature.
type LookupOtherUcseFeatureOutputArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput `pulumi:"featureProfileId"`
	// The id of the Feature
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupOtherUcseFeatureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOtherUcseFeatureArgs)(nil)).Elem()
}

// A collection of values returned by getOtherUcseFeature.
type LookupOtherUcseFeatureResultOutput struct{ *pulumi.OutputState }

func (LookupOtherUcseFeatureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOtherUcseFeatureResult)(nil)).Elem()
}

func (o LookupOtherUcseFeatureResultOutput) ToLookupOtherUcseFeatureResultOutput() LookupOtherUcseFeatureResultOutput {
	return o
}

func (o LookupOtherUcseFeatureResultOutput) ToLookupOtherUcseFeatureResultOutputWithContext(ctx context.Context) LookupOtherUcseFeatureResultOutput {
	return o
}

// Dedicated
func (o LookupOtherUcseFeatureResultOutput) AccessPortDedicated() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) bool { return v.AccessPortDedicated }).(pulumi.BoolOutput)
}

func (o LookupOtherUcseFeatureResultOutput) AccessPortSharedFailoverType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) string { return v.AccessPortSharedFailoverType }).(pulumi.StringOutput)
}

func (o LookupOtherUcseFeatureResultOutput) AccessPortSharedType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) string { return v.AccessPortSharedType }).(pulumi.StringOutput)
}

// Assign priority
func (o LookupOtherUcseFeatureResultOutput) AssignPriority() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) int { return v.AssignPriority }).(pulumi.IntOutput)
}

// Variable name
func (o LookupOtherUcseFeatureResultOutput) AssignPriorityVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) string { return v.AssignPriorityVariable }).(pulumi.StringOutput)
}

// Bay
func (o LookupOtherUcseFeatureResultOutput) Bay() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) int { return v.Bay }).(pulumi.IntOutput)
}

// Assign default gateway
func (o LookupOtherUcseFeatureResultOutput) DefaultGateway() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) string { return v.DefaultGateway }).(pulumi.StringOutput)
}

// Variable name
func (o LookupOtherUcseFeatureResultOutput) DefaultGatewayVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) string { return v.DefaultGatewayVariable }).(pulumi.StringOutput)
}

// The description of the Feature
func (o LookupOtherUcseFeatureResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) string { return v.Description }).(pulumi.StringOutput)
}

// Feature Profile ID
func (o LookupOtherUcseFeatureResultOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) string { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The id of the Feature
func (o LookupOtherUcseFeatureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) string { return v.Id }).(pulumi.StringOutput)
}

// Interface name: GigabitEthernet0/<>/<> when present
func (o LookupOtherUcseFeatureResultOutput) Interfaces() GetOtherUcseFeatureInterfaceArrayOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) []GetOtherUcseFeatureInterface { return v.Interfaces }).(GetOtherUcseFeatureInterfaceArrayOutput)
}

// Assign IPv4 address
func (o LookupOtherUcseFeatureResultOutput) Ipv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) string { return v.Ipv4Address }).(pulumi.StringOutput)
}

// Variable name
func (o LookupOtherUcseFeatureResultOutput) Ipv4AddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) string { return v.Ipv4AddressVariable }).(pulumi.StringOutput)
}

// The name of the Feature
func (o LookupOtherUcseFeatureResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) string { return v.Name }).(pulumi.StringOutput)
}

// Slot
func (o LookupOtherUcseFeatureResultOutput) Slot() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) int { return v.Slot }).(pulumi.IntOutput)
}

// The version of the Feature
func (o LookupOtherUcseFeatureResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) int { return v.Version }).(pulumi.IntOutput)
}

// Assign Vlan Id
func (o LookupOtherUcseFeatureResultOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) int { return v.VlanId }).(pulumi.IntOutput)
}

// Variable name
func (o LookupOtherUcseFeatureResultOutput) VlanIdVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOtherUcseFeatureResult) string { return v.VlanIdVariable }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOtherUcseFeatureResultOutput{})
}
