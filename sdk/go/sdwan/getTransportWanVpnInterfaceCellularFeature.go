// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Transport WAN VPN Interface Cellular Feature.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupTransportWanVpnInterfaceCellularFeature(ctx, &sdwan.LookupTransportWanVpnInterfaceCellularFeatureArgs{
//				Id:                       "f6b2c44c-693c-4763-b010-895aa3d236bd",
//				FeatureProfileId:         "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
//				TransportWanVpnFeatureId: "140331f6-5418-4755-a059-13c77eb96037",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTransportWanVpnInterfaceCellularFeature(ctx *pulumi.Context, args *LookupTransportWanVpnInterfaceCellularFeatureArgs, opts ...pulumi.InvokeOption) (*LookupTransportWanVpnInterfaceCellularFeatureResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTransportWanVpnInterfaceCellularFeatureResult
	err := ctx.Invoke("sdwan:index/getTransportWanVpnInterfaceCellularFeature:getTransportWanVpnInterfaceCellularFeature", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTransportWanVpnInterfaceCellularFeature.
type LookupTransportWanVpnInterfaceCellularFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId string `pulumi:"transportWanVpnFeatureId"`
}

// A collection of values returned by getTransportWanVpnInterfaceCellularFeature.
type LookupTransportWanVpnInterfaceCellularFeatureResult struct {
	// Configure ARP entries
	Arps []GetTransportWanVpnInterfaceCellularFeatureArp `pulumi:"arps"`
	// Interface downstream bandwidth capacity, in kbps
	BandwidthDownstream int `pulumi:"bandwidthDownstream"`
	// Variable name
	BandwidthDownstreamVariable string `pulumi:"bandwidthDownstreamVariable"`
	// Interface upstream bandwidth capacity, in kbps
	BandwidthUpstream int `pulumi:"bandwidthUpstream"`
	// Variable name
	BandwidthUpstreamVariable string `pulumi:"bandwidthUpstreamVariable"`
	// The description of the Feature
	Description string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id                   string `pulumi:"id"`
	InterfaceDescription string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable string `pulumi:"interfaceDescriptionVariable"`
	// Interface MTU GigabitEthernet0 \n\n, Other GigabitEthernet \n\n in bytes
	InterfaceMtu int `pulumi:"interfaceMtu"`
	// Variable name
	InterfaceMtuVariable string `pulumi:"interfaceMtuVariable"`
	InterfaceName        string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable string `pulumi:"interfaceNameVariable"`
	// IP Directed-Broadcast
	IpDirectedBroadcast bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable string `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU for GigabitEthernet main \n\n, GigabitEthernet subinterface \n\n, Other Interfaces \n\n in bytes
	IpMtu int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable string `pulumi:"ipMtuVariable"`
	// Variable name
	Ipv4DhcpHelperVariable string `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP IPv4 helper addresses (min 1, max 8)
	Ipv4DhcpHelpers []string `pulumi:"ipv4DhcpHelpers"`
	// The name of the Feature
	Name string `pulumi:"name"`
	// Network Address Translation on this interface
	NatIpv4 bool `pulumi:"natIpv4"`
	// Variable name
	NatIpv4Variable string `pulumi:"natIpv4Variable"`
	// Set NAT TCP session timeout, in minutes
	NatTcpTimeout int `pulumi:"natTcpTimeout"`
	// Variable name
	NatTcpTimeoutVariable string `pulumi:"natTcpTimeoutVariable"`
	// Set NAT UDP session timeout, in minutes
	NatUdpTimeout int `pulumi:"natUdpTimeout"`
	// Variable name
	NatUdpTimeoutVariable string `pulumi:"natUdpTimeoutVariable"`
	// Per-tunnel Qos
	PerTunnelQos bool `pulumi:"perTunnelQos"`
	// Variable name
	PerTunnelQosVariable string `pulumi:"perTunnelQosVariable"`
	// Adaptive QoS
	QosAdaptive bool `pulumi:"qosAdaptive"`
	// Shaping Rate Downstream
	QosAdaptiveBandwidthDownstream bool `pulumi:"qosAdaptiveBandwidthDownstream"`
	// Shaping Rate Upstream
	QosAdaptiveBandwidthUpstream bool `pulumi:"qosAdaptiveBandwidthUpstream"`
	// Adaptive QoS default downstream bandwidth (kbps)
	QosAdaptiveDefaultDownstream int `pulumi:"qosAdaptiveDefaultDownstream"`
	// Variable name
	QosAdaptiveDefaultDownstreamVariable string `pulumi:"qosAdaptiveDefaultDownstreamVariable"`
	// Adaptive QoS default upstream bandwidth (kbps)
	QosAdaptiveDefaultUpstream int `pulumi:"qosAdaptiveDefaultUpstream"`
	// Variable name
	QosAdaptiveDefaultUpstreamVariable string `pulumi:"qosAdaptiveDefaultUpstreamVariable"`
	// Downstream max bandwidth limit (kbps)
	QosAdaptiveMaxDownstream int `pulumi:"qosAdaptiveMaxDownstream"`
	// Variable name
	QosAdaptiveMaxDownstreamVariable string `pulumi:"qosAdaptiveMaxDownstreamVariable"`
	// Upstream max bandwidth limit (kbps)
	QosAdaptiveMaxUpstream int `pulumi:"qosAdaptiveMaxUpstream"`
	// Variable name
	QosAdaptiveMaxUpstreamVariable string `pulumi:"qosAdaptiveMaxUpstreamVariable"`
	// Downstream min bandwidth limit (kbps)
	QosAdaptiveMinDownstream int `pulumi:"qosAdaptiveMinDownstream"`
	// Variable name
	QosAdaptiveMinDownstreamVariable string `pulumi:"qosAdaptiveMinDownstreamVariable"`
	// Upstream min bandwidth limit (kbps)
	QosAdaptiveMinUpstream int `pulumi:"qosAdaptiveMinUpstream"`
	// Variable name
	QosAdaptiveMinUpstreamVariable string `pulumi:"qosAdaptiveMinUpstreamVariable"`
	// Adapt Period(Minutes)
	QosAdaptivePeriod int `pulumi:"qosAdaptivePeriod"`
	// Variable name
	QosAdaptivePeriodVariable string `pulumi:"qosAdaptivePeriodVariable"`
	// Shaping Rate (Kbps)
	QosShapingRate int `pulumi:"qosShapingRate"`
	// Variable name
	QosShapingRateVariable string `pulumi:"qosShapingRateVariable"`
	// Service Provider Name
	ServiceProvider string `pulumi:"serviceProvider"`
	// Variable name
	ServiceProviderVariable string `pulumi:"serviceProviderVariable"`
	Shutdown                bool   `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable string `pulumi:"shutdownVariable"`
	// TCP MSS on SYN packets, in bytes
	TcpMss int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable string `pulumi:"tcpMssVariable"`
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension string `pulumi:"tlocExtension"`
	// Variable name
	TlocExtensionVariable string `pulumi:"tlocExtensionVariable"`
	// Enable tracker for this interface
	Tracker string `pulumi:"tracker"`
	// Variable name
	TrackerVariable string `pulumi:"trackerVariable"`
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId string `pulumi:"transportWanVpnFeatureId"`
	// Tunnels Bandwidth Percent
	TunnelBandwidthPercent int `pulumi:"tunnelBandwidthPercent"`
	// Variable name
	TunnelBandwidthPercentVariable string `pulumi:"tunnelBandwidthPercentVariable"`
	// Tunnel Interface on/off
	TunnelInterface bool `pulumi:"tunnelInterface"`
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set
	TunnelInterfaceAllowAll bool `pulumi:"tunnelInterfaceAllowAll"`
	// Variable name
	TunnelInterfaceAllowAllVariable string `pulumi:"tunnelInterfaceAllowAllVariable"`
	// Allow/Deny BFD
	TunnelInterfaceAllowBfd bool `pulumi:"tunnelInterfaceAllowBfd"`
	// Variable name
	TunnelInterfaceAllowBfdVariable string `pulumi:"tunnelInterfaceAllowBfdVariable"`
	// Allow/deny BGP
	TunnelInterfaceAllowBgp bool `pulumi:"tunnelInterfaceAllowBgp"`
	// Variable name
	TunnelInterfaceAllowBgpVariable string `pulumi:"tunnelInterfaceAllowBgpVariable"`
	// Allow/Deny DHCP
	TunnelInterfaceAllowDhcp bool `pulumi:"tunnelInterfaceAllowDhcp"`
	// Variable name
	TunnelInterfaceAllowDhcpVariable string `pulumi:"tunnelInterfaceAllowDhcpVariable"`
	// Allow/Deny DNS
	TunnelInterfaceAllowDns bool `pulumi:"tunnelInterfaceAllowDns"`
	// Variable name
	TunnelInterfaceAllowDnsVariable string `pulumi:"tunnelInterfaceAllowDnsVariable"`
	// Allow/Deny HTTPS
	TunnelInterfaceAllowHttps bool `pulumi:"tunnelInterfaceAllowHttps"`
	// Variable name
	TunnelInterfaceAllowHttpsVariable string `pulumi:"tunnelInterfaceAllowHttpsVariable"`
	// Allow/Deny ICMP
	TunnelInterfaceAllowIcmp bool `pulumi:"tunnelInterfaceAllowIcmp"`
	// Variable name
	TunnelInterfaceAllowIcmpVariable string `pulumi:"tunnelInterfaceAllowIcmpVariable"`
	// Allow/Deny NETCONF
	TunnelInterfaceAllowNetconf bool `pulumi:"tunnelInterfaceAllowNetconf"`
	// Variable name
	TunnelInterfaceAllowNetconfVariable string `pulumi:"tunnelInterfaceAllowNetconfVariable"`
	// Allow/Deny NTP
	TunnelInterfaceAllowNtp bool `pulumi:"tunnelInterfaceAllowNtp"`
	// Variable name
	TunnelInterfaceAllowNtpVariable string `pulumi:"tunnelInterfaceAllowNtpVariable"`
	// Allow/Deny OSPF
	TunnelInterfaceAllowOspf bool `pulumi:"tunnelInterfaceAllowOspf"`
	// Variable name
	TunnelInterfaceAllowOspfVariable string `pulumi:"tunnelInterfaceAllowOspfVariable"`
	// Allow/Deny SNMP
	TunnelInterfaceAllowSnmp bool `pulumi:"tunnelInterfaceAllowSnmp"`
	// Variable name
	TunnelInterfaceAllowSnmpVariable string `pulumi:"tunnelInterfaceAllowSnmpVariable"`
	// Allow/Deny SSH
	TunnelInterfaceAllowSsh bool `pulumi:"tunnelInterfaceAllowSsh"`
	// Variable name
	TunnelInterfaceAllowSshVariable string `pulumi:"tunnelInterfaceAllowSshVariable"`
	// Allow/Deny STUN
	TunnelInterfaceAllowStun bool `pulumi:"tunnelInterfaceAllowStun"`
	// Variable name
	TunnelInterfaceAllowStunVariable string `pulumi:"tunnelInterfaceAllowStunVariable"`
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel string `pulumi:"tunnelInterfaceBindLoopbackTunnel"`
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable string `pulumi:"tunnelInterfaceBindLoopbackTunnelVariable"`
	// Set TLOC as border TLOC
	TunnelInterfaceBorder bool `pulumi:"tunnelInterfaceBorder"`
	// Variable name
	TunnelInterfaceBorderVariable string `pulumi:"tunnelInterfaceBorderVariable"`
	// Set carrier for TLOC
	TunnelInterfaceCarrier string `pulumi:"tunnelInterfaceCarrier"`
	// Variable name
	TunnelInterfaceCarrierVariable string `pulumi:"tunnelInterfaceCarrierVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
	TunnelInterfaceClearDontFragment bool `pulumi:"tunnelInterfaceClearDontFragment"`
	// Variable name
	TunnelInterfaceClearDontFragmentVariable string `pulumi:"tunnelInterfaceClearDontFragmentVariable"`
	// Set color for TLOC
	TunnelInterfaceColor string `pulumi:"tunnelInterfaceColor"`
	// Restrict this TLOC behavior
	TunnelInterfaceColorRestrict bool `pulumi:"tunnelInterfaceColorRestrict"`
	// Variable name
	TunnelInterfaceColorRestrictVariable string `pulumi:"tunnelInterfaceColorRestrictVariable"`
	// Variable name
	TunnelInterfaceColorVariable string `pulumi:"tunnelInterfaceColorVariable"`
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations []GetTransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulation `pulumi:"tunnelInterfaceEncapsulations"`
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable string `pulumi:"tunnelInterfaceExcludeControllerGroupListVariable"`
	// Exclude the following controller groups defined in this list.
	TunnelInterfaceExcludeControllerGroupLists []int `pulumi:"tunnelInterfaceExcludeControllerGroupLists"`
	// List of groups
	TunnelInterfaceGroups int `pulumi:"tunnelInterfaceGroups"`
	// Variable name
	TunnelInterfaceGroupsVariable string `pulumi:"tunnelInterfaceGroupsVariable"`
	// Set time period of control hello packets \n\n milli seconds
	TunnelInterfaceHelloInterval int `pulumi:"tunnelInterfaceHelloInterval"`
	// Variable name
	TunnelInterfaceHelloIntervalVariable string `pulumi:"tunnelInterfaceHelloIntervalVariable"`
	// Set tolerance of control hello packets \n\n seconds
	TunnelInterfaceHelloTolerance int `pulumi:"tunnelInterfaceHelloTolerance"`
	// Variable name
	TunnelInterfaceHelloToleranceVariable string `pulumi:"tunnelInterfaceHelloToleranceVariable"`
	// Set TLOC as last resort
	TunnelInterfaceLastResortCircuit bool `pulumi:"tunnelInterfaceLastResortCircuit"`
	// Variable name
	TunnelInterfaceLastResortCircuitVariable string `pulumi:"tunnelInterfaceLastResortCircuitVariable"`
	// Set the interface as a low-bandwidth circuit
	TunnelInterfaceLowBandwidthLink bool `pulumi:"tunnelInterfaceLowBandwidthLink"`
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable string `pulumi:"tunnelInterfaceLowBandwidthLinkVariable"`
	// Maximum Control Connections
	TunnelInterfaceMaxControlConnections int `pulumi:"tunnelInterfaceMaxControlConnections"`
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable string `pulumi:"tunnelInterfaceMaxControlConnectionsVariable"`
	// Set time period of nat refresh packets \n\n seconds
	TunnelInterfaceNatRefreshInterval int `pulumi:"tunnelInterfaceNatRefreshInterval"`
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable string `pulumi:"tunnelInterfaceNatRefreshIntervalVariable"`
	// Accept and respond to network-prefix-directed broadcasts
	TunnelInterfaceNetworkBroadcast bool `pulumi:"tunnelInterfaceNetworkBroadcast"`
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable string `pulumi:"tunnelInterfaceNetworkBroadcastVariable"`
	// Disallow port hopping on the tunnel interface
	TunnelInterfacePortHop bool `pulumi:"tunnelInterfacePortHop"`
	// Variable name
	TunnelInterfacePortHopVariable string `pulumi:"tunnelInterfacePortHopVariable"`
	// Tunnel TCP MSS on SYN packets, in bytes
	TunnelInterfaceTunnelTcpMss int `pulumi:"tunnelInterfaceTunnelTcpMss"`
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable string `pulumi:"tunnelInterfaceTunnelTcpMssVariable"`
	// Put this wan interface in STUN mode only
	TunnelInterfaceVbondAsStunServer bool `pulumi:"tunnelInterfaceVbondAsStunServer"`
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable string `pulumi:"tunnelInterfaceVbondAsStunServerVariable"`
	// Set interface preference for control connection to vManage \n\n
	TunnelInterfaceVmanageConnectionPreference int `pulumi:"tunnelInterfaceVmanageConnectionPreference"`
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable string `pulumi:"tunnelInterfaceVmanageConnectionPreferenceVariable"`
	// Set tunnel QoS mode
	TunnelQosMode string `pulumi:"tunnelQosMode"`
	// Variable name
	TunnelQosModeVariable string `pulumi:"tunnelQosModeVariable"`
	// The version of the Feature
	Version int `pulumi:"version"`
}

func LookupTransportWanVpnInterfaceCellularFeatureOutput(ctx *pulumi.Context, args LookupTransportWanVpnInterfaceCellularFeatureOutputArgs, opts ...pulumi.InvokeOption) LookupTransportWanVpnInterfaceCellularFeatureResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTransportWanVpnInterfaceCellularFeatureResultOutput, error) {
			args := v.(LookupTransportWanVpnInterfaceCellularFeatureArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupTransportWanVpnInterfaceCellularFeatureResult
			secret, err := ctx.InvokePackageRaw("sdwan:index/getTransportWanVpnInterfaceCellularFeature:getTransportWanVpnInterfaceCellularFeature", args, &rv, "", opts...)
			if err != nil {
				return LookupTransportWanVpnInterfaceCellularFeatureResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupTransportWanVpnInterfaceCellularFeatureResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupTransportWanVpnInterfaceCellularFeatureResultOutput), nil
			}
			return output, nil
		}).(LookupTransportWanVpnInterfaceCellularFeatureResultOutput)
}

// A collection of arguments for invoking getTransportWanVpnInterfaceCellularFeature.
type LookupTransportWanVpnInterfaceCellularFeatureOutputArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput `pulumi:"featureProfileId"`
	// The id of the Feature
	Id pulumi.StringInput `pulumi:"id"`
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId pulumi.StringInput `pulumi:"transportWanVpnFeatureId"`
}

func (LookupTransportWanVpnInterfaceCellularFeatureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransportWanVpnInterfaceCellularFeatureArgs)(nil)).Elem()
}

// A collection of values returned by getTransportWanVpnInterfaceCellularFeature.
type LookupTransportWanVpnInterfaceCellularFeatureResultOutput struct{ *pulumi.OutputState }

func (LookupTransportWanVpnInterfaceCellularFeatureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransportWanVpnInterfaceCellularFeatureResult)(nil)).Elem()
}

func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) ToLookupTransportWanVpnInterfaceCellularFeatureResultOutput() LookupTransportWanVpnInterfaceCellularFeatureResultOutput {
	return o
}

func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) ToLookupTransportWanVpnInterfaceCellularFeatureResultOutputWithContext(ctx context.Context) LookupTransportWanVpnInterfaceCellularFeatureResultOutput {
	return o
}

// Configure ARP entries
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) Arps() GetTransportWanVpnInterfaceCellularFeatureArpArrayOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) []GetTransportWanVpnInterfaceCellularFeatureArp {
		return v.Arps
	}).(GetTransportWanVpnInterfaceCellularFeatureArpArrayOutput)
}

// Interface downstream bandwidth capacity, in kbps
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) BandwidthDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.BandwidthDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) BandwidthDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.BandwidthDownstreamVariable
	}).(pulumi.StringOutput)
}

// Interface upstream bandwidth capacity, in kbps
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) BandwidthUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.BandwidthUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) BandwidthUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.BandwidthUpstreamVariable }).(pulumi.StringOutput)
}

// The description of the Feature
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.Description }).(pulumi.StringOutput)
}

// Feature Profile ID
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The id of the Feature
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) InterfaceDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.InterfaceDescription }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) InterfaceDescriptionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.InterfaceDescriptionVariable
	}).(pulumi.StringOutput)
}

// Interface MTU GigabitEthernet0 \n\n, Other GigabitEthernet \n\n in bytes
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) InterfaceMtu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.InterfaceMtu }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) InterfaceMtuVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.InterfaceMtuVariable }).(pulumi.StringOutput)
}

func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.InterfaceName }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) InterfaceNameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.InterfaceNameVariable }).(pulumi.StringOutput)
}

// IP Directed-Broadcast
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) IpDirectedBroadcast() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.IpDirectedBroadcast }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) IpDirectedBroadcastVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.IpDirectedBroadcastVariable
	}).(pulumi.StringOutput)
}

// IP MTU for GigabitEthernet main \n\n, GigabitEthernet subinterface \n\n, Other Interfaces \n\n in bytes
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) IpMtu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.IpMtu }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) IpMtuVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.IpMtuVariable }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) Ipv4DhcpHelperVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.Ipv4DhcpHelperVariable }).(pulumi.StringOutput)
}

// List of DHCP IPv4 helper addresses (min 1, max 8)
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) Ipv4DhcpHelpers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) []string { return v.Ipv4DhcpHelpers }).(pulumi.StringArrayOutput)
}

// The name of the Feature
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.Name }).(pulumi.StringOutput)
}

// Network Address Translation on this interface
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) NatIpv4() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.NatIpv4 }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) NatIpv4Variable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.NatIpv4Variable }).(pulumi.StringOutput)
}

// Set NAT TCP session timeout, in minutes
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) NatTcpTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.NatTcpTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) NatTcpTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.NatTcpTimeoutVariable }).(pulumi.StringOutput)
}

// Set NAT UDP session timeout, in minutes
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) NatUdpTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.NatUdpTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) NatUdpTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.NatUdpTimeoutVariable }).(pulumi.StringOutput)
}

// Per-tunnel Qos
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) PerTunnelQos() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.PerTunnelQos }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) PerTunnelQosVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.PerTunnelQosVariable }).(pulumi.StringOutput)
}

// Adaptive QoS
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosAdaptive() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.QosAdaptive }).(pulumi.BoolOutput)
}

// Shaping Rate Downstream
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosAdaptiveBandwidthDownstream() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool {
		return v.QosAdaptiveBandwidthDownstream
	}).(pulumi.BoolOutput)
}

// Shaping Rate Upstream
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosAdaptiveBandwidthUpstream() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool {
		return v.QosAdaptiveBandwidthUpstream
	}).(pulumi.BoolOutput)
}

// Adaptive QoS default downstream bandwidth (kbps)
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosAdaptiveDefaultDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.QosAdaptiveDefaultDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosAdaptiveDefaultDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.QosAdaptiveDefaultDownstreamVariable
	}).(pulumi.StringOutput)
}

// Adaptive QoS default upstream bandwidth (kbps)
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosAdaptiveDefaultUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.QosAdaptiveDefaultUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosAdaptiveDefaultUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.QosAdaptiveDefaultUpstreamVariable
	}).(pulumi.StringOutput)
}

// Downstream max bandwidth limit (kbps)
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosAdaptiveMaxDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.QosAdaptiveMaxDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosAdaptiveMaxDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.QosAdaptiveMaxDownstreamVariable
	}).(pulumi.StringOutput)
}

// Upstream max bandwidth limit (kbps)
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosAdaptiveMaxUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.QosAdaptiveMaxUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosAdaptiveMaxUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.QosAdaptiveMaxUpstreamVariable
	}).(pulumi.StringOutput)
}

// Downstream min bandwidth limit (kbps)
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosAdaptiveMinDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.QosAdaptiveMinDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosAdaptiveMinDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.QosAdaptiveMinDownstreamVariable
	}).(pulumi.StringOutput)
}

// Upstream min bandwidth limit (kbps)
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosAdaptiveMinUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.QosAdaptiveMinUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosAdaptiveMinUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.QosAdaptiveMinUpstreamVariable
	}).(pulumi.StringOutput)
}

// Adapt Period(Minutes)
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosAdaptivePeriod() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.QosAdaptivePeriod }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosAdaptivePeriodVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.QosAdaptivePeriodVariable }).(pulumi.StringOutput)
}

// Shaping Rate (Kbps)
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosShapingRate() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.QosShapingRate }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) QosShapingRateVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.QosShapingRateVariable }).(pulumi.StringOutput)
}

// Service Provider Name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) ServiceProvider() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.ServiceProvider }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) ServiceProviderVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.ServiceProviderVariable }).(pulumi.StringOutput)
}

func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) Shutdown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.Shutdown }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) ShutdownVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.ShutdownVariable }).(pulumi.StringOutput)
}

// TCP MSS on SYN packets, in bytes
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TcpMss() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.TcpMss }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TcpMssVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.TcpMssVariable }).(pulumi.StringOutput)
}

// Extends a local TLOC to a remote node only for vpn 0
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TlocExtension() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.TlocExtension }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TlocExtensionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.TlocExtensionVariable }).(pulumi.StringOutput)
}

// Enable tracker for this interface
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) Tracker() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.Tracker }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TrackerVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.TrackerVariable }).(pulumi.StringOutput)
}

// Transport WAN VPN Feature ID
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TransportWanVpnFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.TransportWanVpnFeatureId }).(pulumi.StringOutput)
}

// Tunnels Bandwidth Percent
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelBandwidthPercent() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.TunnelBandwidthPercent }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelBandwidthPercentVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelBandwidthPercentVariable
	}).(pulumi.StringOutput)
}

// Tunnel Interface on/off
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterface() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.TunnelInterface }).(pulumi.BoolOutput)
}

// Allow all traffic. Overrides all other allow-service options if allow-service all is set
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowAll() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.TunnelInterfaceAllowAll }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowAllVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceAllowAllVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny BFD
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowBfd() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.TunnelInterfaceAllowBfd }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowBfdVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceAllowBfdVariable
	}).(pulumi.StringOutput)
}

// Allow/deny BGP
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowBgp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.TunnelInterfaceAllowBgp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowBgpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceAllowBgpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny DHCP
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowDhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.TunnelInterfaceAllowDhcp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowDhcpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceAllowDhcpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny DNS
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowDns() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.TunnelInterfaceAllowDns }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowDnsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceAllowDnsVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny HTTPS
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowHttps() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.TunnelInterfaceAllowHttps }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowHttpsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceAllowHttpsVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny ICMP
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowIcmp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.TunnelInterfaceAllowIcmp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowIcmpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceAllowIcmpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny NETCONF
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowNetconf() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.TunnelInterfaceAllowNetconf }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowNetconfVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceAllowNetconfVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny NTP
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowNtp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.TunnelInterfaceAllowNtp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowNtpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceAllowNtpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny OSPF
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowOspf() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.TunnelInterfaceAllowOspf }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowOspfVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceAllowOspfVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny SNMP
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowSnmp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.TunnelInterfaceAllowSnmp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowSnmpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceAllowSnmpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny SSH
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowSsh() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.TunnelInterfaceAllowSsh }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowSshVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceAllowSshVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny STUN
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowStun() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.TunnelInterfaceAllowStun }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceAllowStunVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceAllowStunVariable
	}).(pulumi.StringOutput)
}

// Bind loopback tunnel interface to a physical interface
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceBindLoopbackTunnel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceBindLoopbackTunnel
	}).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceBindLoopbackTunnelVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceBindLoopbackTunnelVariable
	}).(pulumi.StringOutput)
}

// Set TLOC as border TLOC
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceBorder() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.TunnelInterfaceBorder }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceBorderVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceBorderVariable
	}).(pulumi.StringOutput)
}

// Set carrier for TLOC
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceCarrier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.TunnelInterfaceCarrier }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceCarrierVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceCarrierVariable
	}).(pulumi.StringOutput)
}

// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceClearDontFragment() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool {
		return v.TunnelInterfaceClearDontFragment
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceClearDontFragmentVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceClearDontFragmentVariable
	}).(pulumi.StringOutput)
}

// Set color for TLOC
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceColor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.TunnelInterfaceColor }).(pulumi.StringOutput)
}

// Restrict this TLOC behavior
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceColorRestrict() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool {
		return v.TunnelInterfaceColorRestrict
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceColorRestrictVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceColorRestrictVariable
	}).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceColorVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceColorVariable
	}).(pulumi.StringOutput)
}

// Encapsulation for TLOC
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceEncapsulations() GetTransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArrayOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) []GetTransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulation {
		return v.TunnelInterfaceEncapsulations
	}).(GetTransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArrayOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceExcludeControllerGroupListVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceExcludeControllerGroupListVariable
	}).(pulumi.StringOutput)
}

// Exclude the following controller groups defined in this list.
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceExcludeControllerGroupLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) []int {
		return v.TunnelInterfaceExcludeControllerGroupLists
	}).(pulumi.IntArrayOutput)
}

// List of groups
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceGroups() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.TunnelInterfaceGroups }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceGroupsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceGroupsVariable
	}).(pulumi.StringOutput)
}

// Set time period of control hello packets \n\n milli seconds
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceHelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.TunnelInterfaceHelloInterval }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceHelloIntervalVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceHelloIntervalVariable
	}).(pulumi.StringOutput)
}

// Set tolerance of control hello packets \n\n seconds
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceHelloTolerance() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int {
		return v.TunnelInterfaceHelloTolerance
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceHelloToleranceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceHelloToleranceVariable
	}).(pulumi.StringOutput)
}

// Set TLOC as last resort
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceLastResortCircuit() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool {
		return v.TunnelInterfaceLastResortCircuit
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceLastResortCircuitVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceLastResortCircuitVariable
	}).(pulumi.StringOutput)
}

// Set the interface as a low-bandwidth circuit
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceLowBandwidthLink() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool {
		return v.TunnelInterfaceLowBandwidthLink
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceLowBandwidthLinkVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceLowBandwidthLinkVariable
	}).(pulumi.StringOutput)
}

// Maximum Control Connections
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceMaxControlConnections() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int {
		return v.TunnelInterfaceMaxControlConnections
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceMaxControlConnectionsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceMaxControlConnectionsVariable
	}).(pulumi.StringOutput)
}

// Set time period of nat refresh packets \n\n seconds
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceNatRefreshInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int {
		return v.TunnelInterfaceNatRefreshInterval
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceNatRefreshIntervalVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceNatRefreshIntervalVariable
	}).(pulumi.StringOutput)
}

// Accept and respond to network-prefix-directed broadcasts
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceNetworkBroadcast() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool {
		return v.TunnelInterfaceNetworkBroadcast
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceNetworkBroadcastVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceNetworkBroadcastVariable
	}).(pulumi.StringOutput)
}

// Disallow port hopping on the tunnel interface
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfacePortHop() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool { return v.TunnelInterfacePortHop }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfacePortHopVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfacePortHopVariable
	}).(pulumi.StringOutput)
}

// Tunnel TCP MSS on SYN packets, in bytes
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceTunnelTcpMss() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.TunnelInterfaceTunnelTcpMss }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceTunnelTcpMssVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceTunnelTcpMssVariable
	}).(pulumi.StringOutput)
}

// Put this wan interface in STUN mode only
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceVbondAsStunServer() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) bool {
		return v.TunnelInterfaceVbondAsStunServer
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceVbondAsStunServerVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceVbondAsStunServerVariable
	}).(pulumi.StringOutput)
}

// Set interface preference for control connection to vManage \n\n
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceVmanageConnectionPreference() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int {
		return v.TunnelInterfaceVmanageConnectionPreference
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelInterfaceVmanageConnectionPreferenceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string {
		return v.TunnelInterfaceVmanageConnectionPreferenceVariable
	}).(pulumi.StringOutput)
}

// Set tunnel QoS mode
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelQosMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.TunnelQosMode }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) TunnelQosModeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) string { return v.TunnelQosModeVariable }).(pulumi.StringOutput)
}

// The version of the Feature
func (o LookupTransportWanVpnInterfaceCellularFeatureResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceCellularFeatureResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTransportWanVpnInterfaceCellularFeatureResultOutput{})
}
