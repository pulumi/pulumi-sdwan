// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Traffic Data Policy Definition .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewTrafficDataPolicyDefinition(ctx, "example", &sdwan.TrafficDataPolicyDefinitionArgs{
//				Name:          pulumi.String("Example"),
//				Description:   pulumi.String("My description"),
//				DefaultAction: pulumi.String("drop"),
//				Sequences: sdwan.TrafficDataPolicyDefinitionSequenceArray{
//					&sdwan.TrafficDataPolicyDefinitionSequenceArgs{
//						Id:          pulumi.Int(1),
//						Name:        pulumi.String("Seq1"),
//						Type:        pulumi.String("applicationFirewall"),
//						Ip_type:     "ipv4",
//						Base_action: "accept",
//						Match_entries: []map[string]interface{}{
//							map[string]interface{}{
//								"type":              "appList",
//								"applicationListId": "e3aad846-abb9-425f-aaa8-9ed17b9c8d7c",
//							},
//						},
//						Action_entries: []map[string]interface{}{
//							map[string]interface{}{
//								"type": "log",
//								"log":  true,
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/trafficDataPolicyDefinition:TrafficDataPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type TrafficDataPolicyDefinition struct {
	pulumi.CustomResourceState

	// Default action, either `accept` or `drop`
	//   - Choices: `accept`, `drop`
	DefaultAction pulumi.StringPtrOutput `pulumi:"defaultAction"`
	// The description of the policy definition
	Description pulumi.StringOutput `pulumi:"description"`
	// The name of the policy definition
	Name pulumi.StringOutput `pulumi:"name"`
	// List of sequences
	Sequences TrafficDataPolicyDefinitionSequenceArrayOutput `pulumi:"sequences"`
	// Type
	Type pulumi.StringOutput `pulumi:"type"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewTrafficDataPolicyDefinition registers a new resource with the given unique name, arguments, and options.
func NewTrafficDataPolicyDefinition(ctx *pulumi.Context,
	name string, args *TrafficDataPolicyDefinitionArgs, opts ...pulumi.ResourceOption) (*TrafficDataPolicyDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Sequences == nil {
		return nil, errors.New("invalid value for required argument 'Sequences'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TrafficDataPolicyDefinition
	err := ctx.RegisterResource("sdwan:index/trafficDataPolicyDefinition:TrafficDataPolicyDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTrafficDataPolicyDefinition gets an existing TrafficDataPolicyDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTrafficDataPolicyDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TrafficDataPolicyDefinitionState, opts ...pulumi.ResourceOption) (*TrafficDataPolicyDefinition, error) {
	var resource TrafficDataPolicyDefinition
	err := ctx.ReadResource("sdwan:index/trafficDataPolicyDefinition:TrafficDataPolicyDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TrafficDataPolicyDefinition resources.
type trafficDataPolicyDefinitionState struct {
	// Default action, either `accept` or `drop`
	//   - Choices: `accept`, `drop`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the policy definition
	Description *string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of sequences
	Sequences []TrafficDataPolicyDefinitionSequence `pulumi:"sequences"`
	// Type
	Type *string `pulumi:"type"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type TrafficDataPolicyDefinitionState struct {
	// Default action, either `accept` or `drop`
	//   - Choices: `accept`, `drop`
	DefaultAction pulumi.StringPtrInput
	// The description of the policy definition
	Description pulumi.StringPtrInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of sequences
	Sequences TrafficDataPolicyDefinitionSequenceArrayInput
	// Type
	Type pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (TrafficDataPolicyDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficDataPolicyDefinitionState)(nil)).Elem()
}

type trafficDataPolicyDefinitionArgs struct {
	// Default action, either `accept` or `drop`
	//   - Choices: `accept`, `drop`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the policy definition
	Description string `pulumi:"description"`
	// The name of the policy definition
	Name *string `pulumi:"name"`
	// List of sequences
	Sequences []TrafficDataPolicyDefinitionSequence `pulumi:"sequences"`
}

// The set of arguments for constructing a TrafficDataPolicyDefinition resource.
type TrafficDataPolicyDefinitionArgs struct {
	// Default action, either `accept` or `drop`
	//   - Choices: `accept`, `drop`
	DefaultAction pulumi.StringPtrInput
	// The description of the policy definition
	Description pulumi.StringInput
	// The name of the policy definition
	Name pulumi.StringPtrInput
	// List of sequences
	Sequences TrafficDataPolicyDefinitionSequenceArrayInput
}

func (TrafficDataPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficDataPolicyDefinitionArgs)(nil)).Elem()
}

type TrafficDataPolicyDefinitionInput interface {
	pulumi.Input

	ToTrafficDataPolicyDefinitionOutput() TrafficDataPolicyDefinitionOutput
	ToTrafficDataPolicyDefinitionOutputWithContext(ctx context.Context) TrafficDataPolicyDefinitionOutput
}

func (*TrafficDataPolicyDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficDataPolicyDefinition)(nil)).Elem()
}

func (i *TrafficDataPolicyDefinition) ToTrafficDataPolicyDefinitionOutput() TrafficDataPolicyDefinitionOutput {
	return i.ToTrafficDataPolicyDefinitionOutputWithContext(context.Background())
}

func (i *TrafficDataPolicyDefinition) ToTrafficDataPolicyDefinitionOutputWithContext(ctx context.Context) TrafficDataPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficDataPolicyDefinitionOutput)
}

// TrafficDataPolicyDefinitionArrayInput is an input type that accepts TrafficDataPolicyDefinitionArray and TrafficDataPolicyDefinitionArrayOutput values.
// You can construct a concrete instance of `TrafficDataPolicyDefinitionArrayInput` via:
//
//	TrafficDataPolicyDefinitionArray{ TrafficDataPolicyDefinitionArgs{...} }
type TrafficDataPolicyDefinitionArrayInput interface {
	pulumi.Input

	ToTrafficDataPolicyDefinitionArrayOutput() TrafficDataPolicyDefinitionArrayOutput
	ToTrafficDataPolicyDefinitionArrayOutputWithContext(context.Context) TrafficDataPolicyDefinitionArrayOutput
}

type TrafficDataPolicyDefinitionArray []TrafficDataPolicyDefinitionInput

func (TrafficDataPolicyDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TrafficDataPolicyDefinition)(nil)).Elem()
}

func (i TrafficDataPolicyDefinitionArray) ToTrafficDataPolicyDefinitionArrayOutput() TrafficDataPolicyDefinitionArrayOutput {
	return i.ToTrafficDataPolicyDefinitionArrayOutputWithContext(context.Background())
}

func (i TrafficDataPolicyDefinitionArray) ToTrafficDataPolicyDefinitionArrayOutputWithContext(ctx context.Context) TrafficDataPolicyDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficDataPolicyDefinitionArrayOutput)
}

// TrafficDataPolicyDefinitionMapInput is an input type that accepts TrafficDataPolicyDefinitionMap and TrafficDataPolicyDefinitionMapOutput values.
// You can construct a concrete instance of `TrafficDataPolicyDefinitionMapInput` via:
//
//	TrafficDataPolicyDefinitionMap{ "key": TrafficDataPolicyDefinitionArgs{...} }
type TrafficDataPolicyDefinitionMapInput interface {
	pulumi.Input

	ToTrafficDataPolicyDefinitionMapOutput() TrafficDataPolicyDefinitionMapOutput
	ToTrafficDataPolicyDefinitionMapOutputWithContext(context.Context) TrafficDataPolicyDefinitionMapOutput
}

type TrafficDataPolicyDefinitionMap map[string]TrafficDataPolicyDefinitionInput

func (TrafficDataPolicyDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TrafficDataPolicyDefinition)(nil)).Elem()
}

func (i TrafficDataPolicyDefinitionMap) ToTrafficDataPolicyDefinitionMapOutput() TrafficDataPolicyDefinitionMapOutput {
	return i.ToTrafficDataPolicyDefinitionMapOutputWithContext(context.Background())
}

func (i TrafficDataPolicyDefinitionMap) ToTrafficDataPolicyDefinitionMapOutputWithContext(ctx context.Context) TrafficDataPolicyDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficDataPolicyDefinitionMapOutput)
}

type TrafficDataPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (TrafficDataPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficDataPolicyDefinition)(nil)).Elem()
}

func (o TrafficDataPolicyDefinitionOutput) ToTrafficDataPolicyDefinitionOutput() TrafficDataPolicyDefinitionOutput {
	return o
}

func (o TrafficDataPolicyDefinitionOutput) ToTrafficDataPolicyDefinitionOutputWithContext(ctx context.Context) TrafficDataPolicyDefinitionOutput {
	return o
}

// Default action, either `accept` or `drop`
//   - Choices: `accept`, `drop`
func (o TrafficDataPolicyDefinitionOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficDataPolicyDefinition) pulumi.StringPtrOutput { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// The description of the policy definition
func (o TrafficDataPolicyDefinitionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficDataPolicyDefinition) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The name of the policy definition
func (o TrafficDataPolicyDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficDataPolicyDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of sequences
func (o TrafficDataPolicyDefinitionOutput) Sequences() TrafficDataPolicyDefinitionSequenceArrayOutput {
	return o.ApplyT(func(v *TrafficDataPolicyDefinition) TrafficDataPolicyDefinitionSequenceArrayOutput {
		return v.Sequences
	}).(TrafficDataPolicyDefinitionSequenceArrayOutput)
}

// Type
func (o TrafficDataPolicyDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficDataPolicyDefinition) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The version of the object
func (o TrafficDataPolicyDefinitionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *TrafficDataPolicyDefinition) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type TrafficDataPolicyDefinitionArrayOutput struct{ *pulumi.OutputState }

func (TrafficDataPolicyDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TrafficDataPolicyDefinition)(nil)).Elem()
}

func (o TrafficDataPolicyDefinitionArrayOutput) ToTrafficDataPolicyDefinitionArrayOutput() TrafficDataPolicyDefinitionArrayOutput {
	return o
}

func (o TrafficDataPolicyDefinitionArrayOutput) ToTrafficDataPolicyDefinitionArrayOutputWithContext(ctx context.Context) TrafficDataPolicyDefinitionArrayOutput {
	return o
}

func (o TrafficDataPolicyDefinitionArrayOutput) Index(i pulumi.IntInput) TrafficDataPolicyDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TrafficDataPolicyDefinition {
		return vs[0].([]*TrafficDataPolicyDefinition)[vs[1].(int)]
	}).(TrafficDataPolicyDefinitionOutput)
}

type TrafficDataPolicyDefinitionMapOutput struct{ *pulumi.OutputState }

func (TrafficDataPolicyDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TrafficDataPolicyDefinition)(nil)).Elem()
}

func (o TrafficDataPolicyDefinitionMapOutput) ToTrafficDataPolicyDefinitionMapOutput() TrafficDataPolicyDefinitionMapOutput {
	return o
}

func (o TrafficDataPolicyDefinitionMapOutput) ToTrafficDataPolicyDefinitionMapOutputWithContext(ctx context.Context) TrafficDataPolicyDefinitionMapOutput {
	return o
}

func (o TrafficDataPolicyDefinitionMapOutput) MapIndex(k pulumi.StringInput) TrafficDataPolicyDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TrafficDataPolicyDefinition {
		return vs[0].(map[string]*TrafficDataPolicyDefinition)[vs[1].(string)]
	}).(TrafficDataPolicyDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficDataPolicyDefinitionInput)(nil)).Elem(), &TrafficDataPolicyDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficDataPolicyDefinitionArrayInput)(nil)).Elem(), TrafficDataPolicyDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficDataPolicyDefinitionMapInput)(nil)).Elem(), TrafficDataPolicyDefinitionMap{})
	pulumi.RegisterOutputType(TrafficDataPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(TrafficDataPolicyDefinitionArrayOutput{})
	pulumi.RegisterOutputType(TrafficDataPolicyDefinitionMapOutput{})
}
