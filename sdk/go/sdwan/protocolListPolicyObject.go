// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Protocol List Policy Object .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewProtocolListPolicyObject(ctx, "example", &sdwan.ProtocolListPolicyObjectArgs{
//				Name: pulumi.String("Example"),
//				Entries: sdwan.ProtocolListPolicyObjectEntryArray{
//					&sdwan.ProtocolListPolicyObjectEntryArgs{
//						Protocol: pulumi.String("cifs"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/protocolListPolicyObject:ProtocolListPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type ProtocolListPolicyObject struct {
	pulumi.CustomResourceState

	// List of entries
	Entries ProtocolListPolicyObjectEntryArrayOutput `pulumi:"entries"`
	// The name of the policy object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewProtocolListPolicyObject registers a new resource with the given unique name, arguments, and options.
func NewProtocolListPolicyObject(ctx *pulumi.Context,
	name string, args *ProtocolListPolicyObjectArgs, opts ...pulumi.ResourceOption) (*ProtocolListPolicyObject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProtocolListPolicyObject
	err := ctx.RegisterResource("sdwan:index/protocolListPolicyObject:ProtocolListPolicyObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProtocolListPolicyObject gets an existing ProtocolListPolicyObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProtocolListPolicyObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProtocolListPolicyObjectState, opts ...pulumi.ResourceOption) (*ProtocolListPolicyObject, error) {
	var resource ProtocolListPolicyObject
	err := ctx.ReadResource("sdwan:index/protocolListPolicyObject:ProtocolListPolicyObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProtocolListPolicyObject resources.
type protocolListPolicyObjectState struct {
	// List of entries
	Entries []ProtocolListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type ProtocolListPolicyObjectState struct {
	// List of entries
	Entries ProtocolListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (ProtocolListPolicyObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*protocolListPolicyObjectState)(nil)).Elem()
}

type protocolListPolicyObjectArgs struct {
	// List of entries
	Entries []ProtocolListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ProtocolListPolicyObject resource.
type ProtocolListPolicyObjectArgs struct {
	// List of entries
	Entries ProtocolListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
}

func (ProtocolListPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*protocolListPolicyObjectArgs)(nil)).Elem()
}

type ProtocolListPolicyObjectInput interface {
	pulumi.Input

	ToProtocolListPolicyObjectOutput() ProtocolListPolicyObjectOutput
	ToProtocolListPolicyObjectOutputWithContext(ctx context.Context) ProtocolListPolicyObjectOutput
}

func (*ProtocolListPolicyObject) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtocolListPolicyObject)(nil)).Elem()
}

func (i *ProtocolListPolicyObject) ToProtocolListPolicyObjectOutput() ProtocolListPolicyObjectOutput {
	return i.ToProtocolListPolicyObjectOutputWithContext(context.Background())
}

func (i *ProtocolListPolicyObject) ToProtocolListPolicyObjectOutputWithContext(ctx context.Context) ProtocolListPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtocolListPolicyObjectOutput)
}

// ProtocolListPolicyObjectArrayInput is an input type that accepts ProtocolListPolicyObjectArray and ProtocolListPolicyObjectArrayOutput values.
// You can construct a concrete instance of `ProtocolListPolicyObjectArrayInput` via:
//
//	ProtocolListPolicyObjectArray{ ProtocolListPolicyObjectArgs{...} }
type ProtocolListPolicyObjectArrayInput interface {
	pulumi.Input

	ToProtocolListPolicyObjectArrayOutput() ProtocolListPolicyObjectArrayOutput
	ToProtocolListPolicyObjectArrayOutputWithContext(context.Context) ProtocolListPolicyObjectArrayOutput
}

type ProtocolListPolicyObjectArray []ProtocolListPolicyObjectInput

func (ProtocolListPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProtocolListPolicyObject)(nil)).Elem()
}

func (i ProtocolListPolicyObjectArray) ToProtocolListPolicyObjectArrayOutput() ProtocolListPolicyObjectArrayOutput {
	return i.ToProtocolListPolicyObjectArrayOutputWithContext(context.Background())
}

func (i ProtocolListPolicyObjectArray) ToProtocolListPolicyObjectArrayOutputWithContext(ctx context.Context) ProtocolListPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtocolListPolicyObjectArrayOutput)
}

// ProtocolListPolicyObjectMapInput is an input type that accepts ProtocolListPolicyObjectMap and ProtocolListPolicyObjectMapOutput values.
// You can construct a concrete instance of `ProtocolListPolicyObjectMapInput` via:
//
//	ProtocolListPolicyObjectMap{ "key": ProtocolListPolicyObjectArgs{...} }
type ProtocolListPolicyObjectMapInput interface {
	pulumi.Input

	ToProtocolListPolicyObjectMapOutput() ProtocolListPolicyObjectMapOutput
	ToProtocolListPolicyObjectMapOutputWithContext(context.Context) ProtocolListPolicyObjectMapOutput
}

type ProtocolListPolicyObjectMap map[string]ProtocolListPolicyObjectInput

func (ProtocolListPolicyObjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProtocolListPolicyObject)(nil)).Elem()
}

func (i ProtocolListPolicyObjectMap) ToProtocolListPolicyObjectMapOutput() ProtocolListPolicyObjectMapOutput {
	return i.ToProtocolListPolicyObjectMapOutputWithContext(context.Background())
}

func (i ProtocolListPolicyObjectMap) ToProtocolListPolicyObjectMapOutputWithContext(ctx context.Context) ProtocolListPolicyObjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtocolListPolicyObjectMapOutput)
}

type ProtocolListPolicyObjectOutput struct{ *pulumi.OutputState }

func (ProtocolListPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtocolListPolicyObject)(nil)).Elem()
}

func (o ProtocolListPolicyObjectOutput) ToProtocolListPolicyObjectOutput() ProtocolListPolicyObjectOutput {
	return o
}

func (o ProtocolListPolicyObjectOutput) ToProtocolListPolicyObjectOutputWithContext(ctx context.Context) ProtocolListPolicyObjectOutput {
	return o
}

// List of entries
func (o ProtocolListPolicyObjectOutput) Entries() ProtocolListPolicyObjectEntryArrayOutput {
	return o.ApplyT(func(v *ProtocolListPolicyObject) ProtocolListPolicyObjectEntryArrayOutput { return v.Entries }).(ProtocolListPolicyObjectEntryArrayOutput)
}

// The name of the policy object
func (o ProtocolListPolicyObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProtocolListPolicyObject) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the object
func (o ProtocolListPolicyObjectOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ProtocolListPolicyObject) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ProtocolListPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (ProtocolListPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProtocolListPolicyObject)(nil)).Elem()
}

func (o ProtocolListPolicyObjectArrayOutput) ToProtocolListPolicyObjectArrayOutput() ProtocolListPolicyObjectArrayOutput {
	return o
}

func (o ProtocolListPolicyObjectArrayOutput) ToProtocolListPolicyObjectArrayOutputWithContext(ctx context.Context) ProtocolListPolicyObjectArrayOutput {
	return o
}

func (o ProtocolListPolicyObjectArrayOutput) Index(i pulumi.IntInput) ProtocolListPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProtocolListPolicyObject {
		return vs[0].([]*ProtocolListPolicyObject)[vs[1].(int)]
	}).(ProtocolListPolicyObjectOutput)
}

type ProtocolListPolicyObjectMapOutput struct{ *pulumi.OutputState }

func (ProtocolListPolicyObjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProtocolListPolicyObject)(nil)).Elem()
}

func (o ProtocolListPolicyObjectMapOutput) ToProtocolListPolicyObjectMapOutput() ProtocolListPolicyObjectMapOutput {
	return o
}

func (o ProtocolListPolicyObjectMapOutput) ToProtocolListPolicyObjectMapOutputWithContext(ctx context.Context) ProtocolListPolicyObjectMapOutput {
	return o
}

func (o ProtocolListPolicyObjectMapOutput) MapIndex(k pulumi.StringInput) ProtocolListPolicyObjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProtocolListPolicyObject {
		return vs[0].(map[string]*ProtocolListPolicyObject)[vs[1].(string)]
	}).(ProtocolListPolicyObjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProtocolListPolicyObjectInput)(nil)).Elem(), &ProtocolListPolicyObject{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtocolListPolicyObjectArrayInput)(nil)).Elem(), ProtocolListPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtocolListPolicyObjectMapInput)(nil)).Elem(), ProtocolListPolicyObjectMap{})
	pulumi.RegisterOutputType(ProtocolListPolicyObjectOutput{})
	pulumi.RegisterOutputType(ProtocolListPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(ProtocolListPolicyObjectMapOutput{})
}
