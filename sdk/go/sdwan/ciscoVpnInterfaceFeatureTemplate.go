// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Cisco VPN Interface feature template.
//   - Minimum SD-WAN Manager version: `15.0.0`
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/ciscoVpnInterfaceFeatureTemplate:CiscoVpnInterfaceFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type CiscoVpnInterfaceFeatureTemplate struct {
	pulumi.CustomResourceState

	// Apply ACL
	AccessLists CiscoVpnInterfaceFeatureTemplateAccessListArrayOutput `pulumi:"accessLists"`
	// Assign IPv4 address
	Address pulumi.StringPtrOutput `pulumi:"address"`
	// Variable name
	AddressVariable pulumi.StringPtrOutput `pulumi:"addressVariable"`
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
	ArpTimeout pulumi.IntPtrOutput `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable pulumi.StringPtrOutput `pulumi:"arpTimeoutVariable"`
	// Interface auto detect bandwidth - Default value: `false`
	AutoBandwidthDetect pulumi.BoolPtrOutput `pulumi:"autoBandwidthDetect"`
	// Variable name
	AutoBandwidthDetectVariable pulumi.StringPtrOutput `pulumi:"autoBandwidthDetectVariable"`
	// Link autonegotiation
	Autonegotiate pulumi.BoolPtrOutput `pulumi:"autonegotiate"`
	// Variable name
	AutonegotiateVariable pulumi.StringPtrOutput `pulumi:"autonegotiateVariable"`
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthDownstream pulumi.IntPtrOutput `pulumi:"bandwidthDownstream"`
	// Variable name
	BandwidthDownstreamVariable pulumi.StringPtrOutput `pulumi:"bandwidthDownstreamVariable"`
	// Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthUpstream pulumi.IntPtrOutput `pulumi:"bandwidthUpstream"`
	// Variable name
	BandwidthUpstreamVariable pulumi.StringPtrOutput `pulumi:"bandwidthUpstreamVariable"`
	// Block packets originating from IP address that is not from this source - Default value: `false`
	BlockNonSourceIp pulumi.BoolPtrOutput `pulumi:"blockNonSourceIp"`
	// Variable name
	BlockNonSourceIpVariable pulumi.StringPtrOutput `pulumi:"blockNonSourceIpVariable"`
	// Enable core region - Choices: `core`, `core-shared` - Default value: `core`
	CoreRegion pulumi.StringPtrOutput `pulumi:"coreRegion"`
	// Variable name
	CoreRegionVariable pulumi.StringPtrOutput `pulumi:"coreRegionVariable"`
	// The description of the feature template
	Description pulumi.StringOutput `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayOutput `pulumi:"deviceTypes"`
	// Enable DHCP - Default value: `false`
	Dhcp pulumi.BoolPtrOutput `pulumi:"dhcp"`
	// Set administrative distance for DHCP default route - Range: `1`-`65536` - Default value: `1`
	DhcpDistance pulumi.IntPtrOutput `pulumi:"dhcpDistance"`
	// Variable name
	DhcpDistanceVariable pulumi.StringPtrOutput `pulumi:"dhcpDistanceVariable"`
	// Variable name
	DhcpVariable pulumi.StringPtrOutput `pulumi:"dhcpVariable"`
	// Enable DHCPv6 - Default value: `false`
	Dhcpv6 pulumi.BoolPtrOutput `pulumi:"dhcpv6"`
	// Variable name
	Dhcpv6Variable pulumi.StringPtrOutput `pulumi:"dhcpv6Variable"`
	// Duplex mode - Choices: `full`, `half`, `auto`
	Duplex pulumi.StringPtrOutput `pulumi:"duplex"`
	// Variable name
	DuplexVariable pulumi.StringPtrOutput `pulumi:"duplexVariable"`
	// Enable core region - Default value: `false`
	EnableCoreRegion pulumi.BoolPtrOutput `pulumi:"enableCoreRegion"`
	// Enables the interface for CTS SGT authorization and forwarding. - Default value: `false`
	EnableSgt pulumi.BoolPtrOutput `pulumi:"enableSgt"`
	// Extend remote TLOC over a GRE tunnel to a local WAN interface
	GreTunnelSourceIp pulumi.StringPtrOutput `pulumi:"greTunnelSourceIp"`
	// Variable name
	GreTunnelSourceIpVariable pulumi.StringPtrOutput `pulumi:"greTunnelSourceIpVariable"`
	// Extend remote TLOC over a GRE tunnel to a local WAN interface
	GreTunnelXconnect pulumi.StringPtrOutput `pulumi:"greTunnelXconnect"`
	// Variable name
	GreTunnelXconnectVariable pulumi.StringPtrOutput `pulumi:"greTunnelXconnectVariable"`
	// Set this option to disable the icmp/icmpv6 redirect packets - Default value: `true`
	IcmpRedirectDisable pulumi.BoolPtrOutput `pulumi:"icmpRedirectDisable"`
	// Variable name
	IcmpRedirectDisableVariable pulumi.StringPtrOutput `pulumi:"icmpRedirectDisableVariable"`
	// Interface description
	InterfaceDescription pulumi.StringPtrOutput `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrOutput `pulumi:"interfaceDescriptionVariable"`
	// Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
	// Default value: `1500`
	InterfaceMtu pulumi.IntPtrOutput `pulumi:"interfaceMtu"`
	// Variable name
	InterfaceMtuVariable pulumi.StringPtrOutput `pulumi:"interfaceMtuVariable"`
	// Interface name: ge0/<0-..> or ge0/<0-..>.vlanid or irb<bridgeid:1-63> or loopback<string> or natpool-<1..31> when
	// present
	InterfaceName pulumi.StringPtrOutput `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable pulumi.StringPtrOutput `pulumi:"interfaceNameVariable"`
	// IP Directed-Broadcast - Default value: `false`
	IpDirectedBroadcast pulumi.BoolPtrOutput `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable pulumi.StringPtrOutput `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
	// <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
	IpMtu pulumi.IntPtrOutput `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable pulumi.StringPtrOutput `pulumi:"ipMtuVariable"`
	// Iperf server for auto bandwidth detect
	IperfServer pulumi.StringPtrOutput `pulumi:"iperfServer"`
	// Variable name
	IperfServerVariable pulumi.StringPtrOutput `pulumi:"iperfServerVariable"`
	// Variable name
	Ipv4DhcpHelperVariable pulumi.StringPtrOutput `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP IPv4 helper addresses
	Ipv4DhcpHelpers pulumi.StringArrayOutput `pulumi:"ipv4DhcpHelpers"`
	// Assign secondary IP addresses
	Ipv4SecondaryAddresses CiscoVpnInterfaceFeatureTemplateIpv4SecondaryAddressArrayOutput `pulumi:"ipv4SecondaryAddresses"`
	// Enable VRRP
	Ipv4Vrrps CiscoVpnInterfaceFeatureTemplateIpv4VrrpArrayOutput `pulumi:"ipv4Vrrps"`
	// Apply IPv6 access list
	Ipv6AccessLists CiscoVpnInterfaceFeatureTemplateIpv6AccessListArrayOutput `pulumi:"ipv6AccessLists"`
	// Assign IPv6 address
	Ipv6Address pulumi.StringPtrOutput `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrOutput `pulumi:"ipv6AddressVariable"`
	// DHCPv6 Helper
	Ipv6DhcpHelpers CiscoVpnInterfaceFeatureTemplateIpv6DhcpHelperArrayOutput `pulumi:"ipv6DhcpHelpers"`
	// NAT64 on this interface - Default value: `false`
	Ipv6Nat pulumi.BoolPtrOutput `pulumi:"ipv6Nat"`
	// Variable name
	Ipv6NatVariable pulumi.StringPtrOutput `pulumi:"ipv6NatVariable"`
	// Assign secondary IPv6 addresses
	Ipv6SecondaryAddresses CiscoVpnInterfaceFeatureTemplateIpv6SecondaryAddressArrayOutput `pulumi:"ipv6SecondaryAddresses"`
	// Enable VRRP
	Ipv6Vrrps CiscoVpnInterfaceFeatureTemplateIpv6VrrpArrayOutput `pulumi:"ipv6Vrrps"`
	// Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
	LoadInterval pulumi.IntPtrOutput `pulumi:"loadInterval"`
	// Variable name
	LoadIntervalVariable pulumi.StringPtrOutput `pulumi:"loadIntervalVariable"`
	// Set MAC-layer address
	MacAddress pulumi.StringPtrOutput `pulumi:"macAddress"`
	// Variable name
	MacAddressVariable pulumi.StringPtrOutput `pulumi:"macAddressVariable"`
	// Media type - Choices: `auto-select`, `rj45`, `sfp`
	MediaType pulumi.StringPtrOutput `pulumi:"mediaType"`
	// Variable name
	MediaTypeVariable pulumi.StringPtrOutput `pulumi:"mediaTypeVariable"`
	// The name of the feature template
	Name pulumi.StringOutput `pulumi:"name"`
	// Network Address Translation on this interface - Default value: `false`
	Nat pulumi.BoolPtrOutput `pulumi:"nat"`
	// NAT64 on this interface - Default value: `false`
	Nat64Interface pulumi.BoolPtrOutput `pulumi:"nat64Interface"`
	// NAT66 on this interface - Default value: `false`
	Nat66Interface pulumi.BoolPtrOutput `pulumi:"nat66Interface"`
	// Configure NAT Inside Loopback Interface
	NatInsideSourceLoopbackInterface pulumi.StringPtrOutput `pulumi:"natInsideSourceLoopbackInterface"`
	// Variable name
	NatInsideSourceLoopbackInterfaceVariable pulumi.StringPtrOutput `pulumi:"natInsideSourceLoopbackInterfaceVariable"`
	// Enable port translation(PAT) - Default value: `true`
	NatOverload pulumi.BoolPtrOutput `pulumi:"natOverload"`
	// Variable name
	NatOverloadVariable pulumi.StringPtrOutput `pulumi:"natOverloadVariable"`
	// Ending IP address of NAT Pool Prefix Length
	NatPoolPrefixLength pulumi.IntPtrOutput `pulumi:"natPoolPrefixLength"`
	// Variable name
	NatPoolPrefixLengthVariable pulumi.StringPtrOutput `pulumi:"natPoolPrefixLengthVariable"`
	// Ending IP address of NAT pool range
	NatPoolRangeEnd pulumi.StringPtrOutput `pulumi:"natPoolRangeEnd"`
	// Variable name
	NatPoolRangeEndVariable pulumi.StringPtrOutput `pulumi:"natPoolRangeEndVariable"`
	// Starting IP address of NAT pool range
	NatPoolRangeStart pulumi.StringPtrOutput `pulumi:"natPoolRangeStart"`
	// Variable name
	NatPoolRangeStartVariable pulumi.StringPtrOutput `pulumi:"natPoolRangeStartVariable"`
	// NAT type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
	NatType pulumi.StringPtrOutput `pulumi:"natType"`
	// Variable name
	NatTypeVariable pulumi.StringPtrOutput `pulumi:"natTypeVariable"`
	// Configure interface as Power-over-Ethernet source - Default value: `false`
	Poe pulumi.BoolPtrOutput `pulumi:"poe"`
	// Variable name
	PoeVariable pulumi.StringPtrOutput `pulumi:"poeVariable"`
	// Enable/Disable CTS SGT propagation on an interface. - Default value: `true`
	PropagateSgt pulumi.BoolPtrOutput `pulumi:"propagateSgt"`
	// Adaptive QoS default downstream bandwidth - Range: `8`-`100000000`
	QosAdaptiveBandwidthDownstream pulumi.IntPtrOutput `pulumi:"qosAdaptiveBandwidthDownstream"`
	// Variable name
	QosAdaptiveBandwidthDownstreamVariable pulumi.StringPtrOutput `pulumi:"qosAdaptiveBandwidthDownstreamVariable"`
	// Adaptive QoS default upstream bandwidth - Range: `8`-`100000000`
	QosAdaptiveBandwidthUpstream pulumi.IntPtrOutput `pulumi:"qosAdaptiveBandwidthUpstream"`
	// Variable name
	QosAdaptiveBandwidthUpstreamVariable pulumi.StringPtrOutput `pulumi:"qosAdaptiveBandwidthUpstreamVariable"`
	// Downstream max bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMaxDownstream pulumi.IntPtrOutput `pulumi:"qosAdaptiveMaxDownstream"`
	// Variable name
	QosAdaptiveMaxDownstreamVariable pulumi.StringPtrOutput `pulumi:"qosAdaptiveMaxDownstreamVariable"`
	// Upstream max bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMaxUpstream pulumi.IntPtrOutput `pulumi:"qosAdaptiveMaxUpstream"`
	// Variable name
	QosAdaptiveMaxUpstreamVariable pulumi.StringPtrOutput `pulumi:"qosAdaptiveMaxUpstreamVariable"`
	// Downstream min bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMinDownstream pulumi.IntPtrOutput `pulumi:"qosAdaptiveMinDownstream"`
	// Variable name
	QosAdaptiveMinDownstreamVariable pulumi.StringPtrOutput `pulumi:"qosAdaptiveMinDownstreamVariable"`
	// Upstream min bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMinUpstream pulumi.IntPtrOutput `pulumi:"qosAdaptiveMinUpstream"`
	// Variable name
	QosAdaptiveMinUpstreamVariable pulumi.StringPtrOutput `pulumi:"qosAdaptiveMinUpstreamVariable"`
	// Periodic timer for adaptive QoS in minutes - Range: `1`-`720` - Default value: `15`
	QosAdaptivePeriod pulumi.IntPtrOutput `pulumi:"qosAdaptivePeriod"`
	// Variable name
	QosAdaptivePeriodVariable pulumi.StringPtrOutput `pulumi:"qosAdaptivePeriodVariable"`
	// Name of QoS map
	QosMap pulumi.StringPtrOutput `pulumi:"qosMap"`
	// Variable name
	QosMapVariable pulumi.StringPtrOutput `pulumi:"qosMapVariable"`
	// Name of VPN QoS map
	QosMapVpn pulumi.StringPtrOutput `pulumi:"qosMapVpn"`
	// Variable name
	QosMapVpnVariable pulumi.StringPtrOutput `pulumi:"qosMapVpnVariable"`
	// Name of rewrite rule
	RewriteRuleName pulumi.StringPtrOutput `pulumi:"rewriteRuleName"`
	// Variable name
	RewriteRuleNameVariable pulumi.StringPtrOutput `pulumi:"rewriteRuleNameVariable"`
	// Enable secondary region - Choices: `off`, `secondary-only`, `secondary-shared` - Default value: `off`
	SecondaryRegion pulumi.StringPtrOutput `pulumi:"secondaryRegion"`
	// Variable name
	SecondaryRegionVariable pulumi.StringPtrOutput `pulumi:"secondaryRegionVariable"`
	// Enables the interface for CTS SGT authorization and forwarding. - Default value: `false`
	SgtEnforcement pulumi.BoolPtrOutput `pulumi:"sgtEnforcement"`
	// SGT value between 2 and 65519. - Range: `2`-`65519`
	SgtEnforcementSgt pulumi.IntPtrOutput `pulumi:"sgtEnforcementSgt"`
	// Variable name
	SgtEnforcementSgtVariable pulumi.StringPtrOutput `pulumi:"sgtEnforcementSgtVariable"`
	// 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
	ShapingRate pulumi.IntPtrOutput `pulumi:"shapingRate"`
	// Variable name
	ShapingRateVariable pulumi.StringPtrOutput `pulumi:"shapingRateVariable"`
	// Administrative state - Default value: `true`
	Shutdown pulumi.BoolPtrOutput `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable pulumi.StringPtrOutput `pulumi:"shutdownVariable"`
	// Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed pulumi.StringPtrOutput `pulumi:"speed"`
	// Variable name
	SpeedVariable pulumi.StringPtrOutput `pulumi:"speedVariable"`
	// Configure static ARP entries
	StaticArps CiscoVpnInterfaceFeatureTemplateStaticArpArrayOutput `pulumi:"staticArps"`
	// static NAT
	StaticNat66Entries CiscoVpnInterfaceFeatureTemplateStaticNat66EntryArrayOutput `pulumi:"staticNat66Entries"`
	// Configure static NAT entries
	StaticNatEntries CiscoVpnInterfaceFeatureTemplateStaticNatEntryArrayOutput `pulumi:"staticNatEntries"`
	// Configure Port Forward entries
	StaticPortForwardEntries CiscoVpnInterfaceFeatureTemplateStaticPortForwardEntryArrayOutput `pulumi:"staticPortForwardEntries"`
	// SGT value between 2 and 65519. - Range: `2`-`65519`
	StaticSgt pulumi.IntPtrOutput `pulumi:"staticSgt"`
	// Indicates that the interface is trustworthy for CTS. - Default value: `false`
	StaticSgtTrusted pulumi.BoolPtrOutput `pulumi:"staticSgtTrusted"`
	// Variable name
	StaticSgtVariable pulumi.StringPtrOutput `pulumi:"staticSgtVariable"`
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMssAdjust pulumi.IntPtrOutput `pulumi:"tcpMssAdjust"`
	// Variable name
	TcpMssAdjustVariable pulumi.StringPtrOutput `pulumi:"tcpMssAdjustVariable"`
	// Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
	TcpTimeout pulumi.IntPtrOutput `pulumi:"tcpTimeout"`
	// Variable name
	TcpTimeoutVariable pulumi.StringPtrOutput `pulumi:"tcpTimeoutVariable"`
	// The template type
	TemplateType pulumi.StringOutput `pulumi:"templateType"`
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension pulumi.StringPtrOutput `pulumi:"tlocExtension"`
	// Variable name
	TlocExtensionVariable pulumi.StringPtrOutput `pulumi:"tlocExtensionVariable"`
	// Variable name
	TrackerVariable pulumi.StringPtrOutput `pulumi:"trackerVariable"`
	// Enable tracker for this interface
	Trackers pulumi.StringArrayOutput `pulumi:"trackers"`
	// Tunnels Bandwidth Percent - Range: `1`-`99` - Default value: `50`
	TunnelBandwidth pulumi.IntPtrOutput `pulumi:"tunnelBandwidth"`
	// Variable name
	TunnelBandwidthVariable pulumi.StringPtrOutput `pulumi:"tunnelBandwidthVariable"`
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowAll"`
	// Variable name
	TunnelInterfaceAllowAllVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowAllVariable"`
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowBgp"`
	// Variable name
	TunnelInterfaceAllowBgpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowBgpVariable"`
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowDhcp"`
	// Variable name
	TunnelInterfaceAllowDhcpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowDhcpVariable"`
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDns pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowDns"`
	// Variable name
	TunnelInterfaceAllowDnsVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowDnsVariable"`
	// Allow/Deny Https - Default value: `true`
	TunnelInterfaceAllowHttps pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowHttps"`
	// Variable name
	TunnelInterfaceAllowHttpsVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowHttpsVariable"`
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowIcmp"`
	// Variable name
	TunnelInterfaceAllowIcmpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowIcmpVariable"`
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowNetconf"`
	// Variable name
	TunnelInterfaceAllowNetconfVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowNetconfVariable"`
	// Allow/Deny NTP - Default value: `false`
	TunnelInterfaceAllowNtp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowNtp"`
	// Variable name
	TunnelInterfaceAllowNtpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowNtpVariable"`
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowOspf"`
	// Variable name
	TunnelInterfaceAllowOspfVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowOspfVariable"`
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowSnmp"`
	// Variable name
	TunnelInterfaceAllowSnmpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowSnmpVariable"`
	// Allow/Deny SSH - Default value: `false`
	TunnelInterfaceAllowSsh pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowSsh"`
	// Variable name
	TunnelInterfaceAllowSshVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowSshVariable"`
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowStun"`
	// Variable name
	TunnelInterfaceAllowStunVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowStunVariable"`
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel pulumi.StringPtrOutput `pulumi:"tunnelInterfaceBindLoopbackTunnel"`
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceBindLoopbackTunnelVariable"`
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceBorder"`
	// Variable name
	TunnelInterfaceBorderVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceBorderVariable"`
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier pulumi.StringPtrOutput `pulumi:"tunnelInterfaceCarrier"`
	// Variable name
	TunnelInterfaceCarrierVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceCarrierVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceClearDontFragment"`
	// Variable name
	TunnelInterfaceClearDontFragmentVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceClearDontFragmentVariable"`
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `default`
	TunnelInterfaceColor pulumi.StringPtrOutput `pulumi:"tunnelInterfaceColor"`
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceColorRestrict pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceColorRestrict"`
	// Variable name
	TunnelInterfaceColorRestrictVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceColorRestrictVariable"`
	// Variable name
	TunnelInterfaceColorVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceColorVariable"`
	// Allow Control Connection - Default value: `true`
	TunnelInterfaceControlConnections pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceControlConnections"`
	// Variable name
	TunnelInterfaceControlConnectionsVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceControlConnectionsVariable"`
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations CiscoVpnInterfaceFeatureTemplateTunnelInterfaceEncapsulationArrayOutput `pulumi:"tunnelInterfaceEncapsulations"`
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceExcludeControllerGroupListVariable"`
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists pulumi.IntArrayOutput `pulumi:"tunnelInterfaceExcludeControllerGroupLists"`
	// Extend the TLOC to a remote node over GRE tunnel
	TunnelInterfaceGreTunnelDestinationIp pulumi.StringPtrOutput `pulumi:"tunnelInterfaceGreTunnelDestinationIp"`
	// Variable name
	TunnelInterfaceGreTunnelDestinationIpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceGreTunnelDestinationIpVariable"`
	// List of groups
	TunnelInterfaceGroups pulumi.IntArrayOutput `pulumi:"tunnelInterfaceGroups"`
	// Variable name
	TunnelInterfaceGroupsVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceGroupsVariable"`
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval pulumi.IntPtrOutput `pulumi:"tunnelInterfaceHelloInterval"`
	// Variable name
	TunnelInterfaceHelloIntervalVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceHelloIntervalVariable"`
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance pulumi.IntPtrOutput `pulumi:"tunnelInterfaceHelloTolerance"`
	// Variable name
	TunnelInterfaceHelloToleranceVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceHelloToleranceVariable"`
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceLastResortCircuit"`
	// Variable name
	TunnelInterfaceLastResortCircuitVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceLastResortCircuitVariable"`
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceLowBandwidthLink"`
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceLowBandwidthLinkVariable"`
	// Set the maximum number of control connections for this TLOC - Range: `0`-`100`
	TunnelInterfaceMaxControlConnections pulumi.IntPtrOutput `pulumi:"tunnelInterfaceMaxControlConnections"`
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceMaxControlConnectionsVariable"`
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval pulumi.IntPtrOutput `pulumi:"tunnelInterfaceNatRefreshInterval"`
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceNatRefreshIntervalVariable"`
	// Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
	TunnelInterfaceNetworkBroadcast pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceNetworkBroadcast"`
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceNetworkBroadcastVariable"`
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop pulumi.BoolPtrOutput `pulumi:"tunnelInterfacePortHop"`
	// Variable name
	TunnelInterfacePortHopVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfacePortHopVariable"`
	// CTS SGT Propagation configuration - Default value: `false`
	TunnelInterfacePropagateSgt pulumi.BoolPtrOutput `pulumi:"tunnelInterfacePropagateSgt"`
	// Variable name
	TunnelInterfacePropagateSgtVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfacePropagateSgtVariable"`
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss pulumi.IntPtrOutput `pulumi:"tunnelInterfaceTunnelTcpMss"`
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceTunnelTcpMssVariable"`
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceVbondAsStunServer"`
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceVbondAsStunServerVariable"`
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference pulumi.IntPtrOutput `pulumi:"tunnelInterfaceVmanageConnectionPreference"`
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceVmanageConnectionPreferenceVariable"`
	// Set tunnel QoS mode - Choices: `hub`, `spoke`
	TunnelQosMode pulumi.StringPtrOutput `pulumi:"tunnelQosMode"`
	// Variable name
	TunnelQosModeVariable pulumi.StringPtrOutput `pulumi:"tunnelQosModeVariable"`
	// Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
	UdpTimeout pulumi.IntPtrOutput `pulumi:"udpTimeout"`
	// Variable name
	UdpTimeoutVariable pulumi.StringPtrOutput `pulumi:"udpTimeoutVariable"`
	// The version of the feature template
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewCiscoVpnInterfaceFeatureTemplate registers a new resource with the given unique name, arguments, and options.
func NewCiscoVpnInterfaceFeatureTemplate(ctx *pulumi.Context,
	name string, args *CiscoVpnInterfaceFeatureTemplateArgs, opts ...pulumi.ResourceOption) (*CiscoVpnInterfaceFeatureTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.DeviceTypes == nil {
		return nil, errors.New("invalid value for required argument 'DeviceTypes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CiscoVpnInterfaceFeatureTemplate
	err := ctx.RegisterResource("sdwan:index/ciscoVpnInterfaceFeatureTemplate:CiscoVpnInterfaceFeatureTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCiscoVpnInterfaceFeatureTemplate gets an existing CiscoVpnInterfaceFeatureTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCiscoVpnInterfaceFeatureTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CiscoVpnInterfaceFeatureTemplateState, opts ...pulumi.ResourceOption) (*CiscoVpnInterfaceFeatureTemplate, error) {
	var resource CiscoVpnInterfaceFeatureTemplate
	err := ctx.ReadResource("sdwan:index/ciscoVpnInterfaceFeatureTemplate:CiscoVpnInterfaceFeatureTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CiscoVpnInterfaceFeatureTemplate resources.
type ciscoVpnInterfaceFeatureTemplateState struct {
	// Apply ACL
	AccessLists []CiscoVpnInterfaceFeatureTemplateAccessList `pulumi:"accessLists"`
	// Assign IPv4 address
	Address *string `pulumi:"address"`
	// Variable name
	AddressVariable *string `pulumi:"addressVariable"`
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
	ArpTimeout *int `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable *string `pulumi:"arpTimeoutVariable"`
	// Interface auto detect bandwidth - Default value: `false`
	AutoBandwidthDetect *bool `pulumi:"autoBandwidthDetect"`
	// Variable name
	AutoBandwidthDetectVariable *string `pulumi:"autoBandwidthDetectVariable"`
	// Link autonegotiation
	Autonegotiate *bool `pulumi:"autonegotiate"`
	// Variable name
	AutonegotiateVariable *string `pulumi:"autonegotiateVariable"`
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthDownstream *int `pulumi:"bandwidthDownstream"`
	// Variable name
	BandwidthDownstreamVariable *string `pulumi:"bandwidthDownstreamVariable"`
	// Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthUpstream *int `pulumi:"bandwidthUpstream"`
	// Variable name
	BandwidthUpstreamVariable *string `pulumi:"bandwidthUpstreamVariable"`
	// Block packets originating from IP address that is not from this source - Default value: `false`
	BlockNonSourceIp *bool `pulumi:"blockNonSourceIp"`
	// Variable name
	BlockNonSourceIpVariable *string `pulumi:"blockNonSourceIpVariable"`
	// Enable core region - Choices: `core`, `core-shared` - Default value: `core`
	CoreRegion *string `pulumi:"coreRegion"`
	// Variable name
	CoreRegionVariable *string `pulumi:"coreRegionVariable"`
	// The description of the feature template
	Description *string `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Enable DHCP - Default value: `false`
	Dhcp *bool `pulumi:"dhcp"`
	// Set administrative distance for DHCP default route - Range: `1`-`65536` - Default value: `1`
	DhcpDistance *int `pulumi:"dhcpDistance"`
	// Variable name
	DhcpDistanceVariable *string `pulumi:"dhcpDistanceVariable"`
	// Variable name
	DhcpVariable *string `pulumi:"dhcpVariable"`
	// Enable DHCPv6 - Default value: `false`
	Dhcpv6 *bool `pulumi:"dhcpv6"`
	// Variable name
	Dhcpv6Variable *string `pulumi:"dhcpv6Variable"`
	// Duplex mode - Choices: `full`, `half`, `auto`
	Duplex *string `pulumi:"duplex"`
	// Variable name
	DuplexVariable *string `pulumi:"duplexVariable"`
	// Enable core region - Default value: `false`
	EnableCoreRegion *bool `pulumi:"enableCoreRegion"`
	// Enables the interface for CTS SGT authorization and forwarding. - Default value: `false`
	EnableSgt *bool `pulumi:"enableSgt"`
	// Extend remote TLOC over a GRE tunnel to a local WAN interface
	GreTunnelSourceIp *string `pulumi:"greTunnelSourceIp"`
	// Variable name
	GreTunnelSourceIpVariable *string `pulumi:"greTunnelSourceIpVariable"`
	// Extend remote TLOC over a GRE tunnel to a local WAN interface
	GreTunnelXconnect *string `pulumi:"greTunnelXconnect"`
	// Variable name
	GreTunnelXconnectVariable *string `pulumi:"greTunnelXconnectVariable"`
	// Set this option to disable the icmp/icmpv6 redirect packets - Default value: `true`
	IcmpRedirectDisable *bool `pulumi:"icmpRedirectDisable"`
	// Variable name
	IcmpRedirectDisableVariable *string `pulumi:"icmpRedirectDisableVariable"`
	// Interface description
	InterfaceDescription *string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable *string `pulumi:"interfaceDescriptionVariable"`
	// Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
	// Default value: `1500`
	InterfaceMtu *int `pulumi:"interfaceMtu"`
	// Variable name
	InterfaceMtuVariable *string `pulumi:"interfaceMtuVariable"`
	// Interface name: ge0/<0-..> or ge0/<0-..>.vlanid or irb<bridgeid:1-63> or loopback<string> or natpool-<1..31> when
	// present
	InterfaceName *string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable *string `pulumi:"interfaceNameVariable"`
	// IP Directed-Broadcast - Default value: `false`
	IpDirectedBroadcast *bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable *string `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
	// <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	// Iperf server for auto bandwidth detect
	IperfServer *string `pulumi:"iperfServer"`
	// Variable name
	IperfServerVariable *string `pulumi:"iperfServerVariable"`
	// Variable name
	Ipv4DhcpHelperVariable *string `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP IPv4 helper addresses
	Ipv4DhcpHelpers []string `pulumi:"ipv4DhcpHelpers"`
	// Assign secondary IP addresses
	Ipv4SecondaryAddresses []CiscoVpnInterfaceFeatureTemplateIpv4SecondaryAddress `pulumi:"ipv4SecondaryAddresses"`
	// Enable VRRP
	Ipv4Vrrps []CiscoVpnInterfaceFeatureTemplateIpv4Vrrp `pulumi:"ipv4Vrrps"`
	// Apply IPv6 access list
	Ipv6AccessLists []CiscoVpnInterfaceFeatureTemplateIpv6AccessList `pulumi:"ipv6AccessLists"`
	// Assign IPv6 address
	Ipv6Address *string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable *string `pulumi:"ipv6AddressVariable"`
	// DHCPv6 Helper
	Ipv6DhcpHelpers []CiscoVpnInterfaceFeatureTemplateIpv6DhcpHelper `pulumi:"ipv6DhcpHelpers"`
	// NAT64 on this interface - Default value: `false`
	Ipv6Nat *bool `pulumi:"ipv6Nat"`
	// Variable name
	Ipv6NatVariable *string `pulumi:"ipv6NatVariable"`
	// Assign secondary IPv6 addresses
	Ipv6SecondaryAddresses []CiscoVpnInterfaceFeatureTemplateIpv6SecondaryAddress `pulumi:"ipv6SecondaryAddresses"`
	// Enable VRRP
	Ipv6Vrrps []CiscoVpnInterfaceFeatureTemplateIpv6Vrrp `pulumi:"ipv6Vrrps"`
	// Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
	LoadInterval *int `pulumi:"loadInterval"`
	// Variable name
	LoadIntervalVariable *string `pulumi:"loadIntervalVariable"`
	// Set MAC-layer address
	MacAddress *string `pulumi:"macAddress"`
	// Variable name
	MacAddressVariable *string `pulumi:"macAddressVariable"`
	// Media type - Choices: `auto-select`, `rj45`, `sfp`
	MediaType *string `pulumi:"mediaType"`
	// Variable name
	MediaTypeVariable *string `pulumi:"mediaTypeVariable"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Network Address Translation on this interface - Default value: `false`
	Nat *bool `pulumi:"nat"`
	// NAT64 on this interface - Default value: `false`
	Nat64Interface *bool `pulumi:"nat64Interface"`
	// NAT66 on this interface - Default value: `false`
	Nat66Interface *bool `pulumi:"nat66Interface"`
	// Configure NAT Inside Loopback Interface
	NatInsideSourceLoopbackInterface *string `pulumi:"natInsideSourceLoopbackInterface"`
	// Variable name
	NatInsideSourceLoopbackInterfaceVariable *string `pulumi:"natInsideSourceLoopbackInterfaceVariable"`
	// Enable port translation(PAT) - Default value: `true`
	NatOverload *bool `pulumi:"natOverload"`
	// Variable name
	NatOverloadVariable *string `pulumi:"natOverloadVariable"`
	// Ending IP address of NAT Pool Prefix Length
	NatPoolPrefixLength *int `pulumi:"natPoolPrefixLength"`
	// Variable name
	NatPoolPrefixLengthVariable *string `pulumi:"natPoolPrefixLengthVariable"`
	// Ending IP address of NAT pool range
	NatPoolRangeEnd *string `pulumi:"natPoolRangeEnd"`
	// Variable name
	NatPoolRangeEndVariable *string `pulumi:"natPoolRangeEndVariable"`
	// Starting IP address of NAT pool range
	NatPoolRangeStart *string `pulumi:"natPoolRangeStart"`
	// Variable name
	NatPoolRangeStartVariable *string `pulumi:"natPoolRangeStartVariable"`
	// NAT type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
	NatType *string `pulumi:"natType"`
	// Variable name
	NatTypeVariable *string `pulumi:"natTypeVariable"`
	// Configure interface as Power-over-Ethernet source - Default value: `false`
	Poe *bool `pulumi:"poe"`
	// Variable name
	PoeVariable *string `pulumi:"poeVariable"`
	// Enable/Disable CTS SGT propagation on an interface. - Default value: `true`
	PropagateSgt *bool `pulumi:"propagateSgt"`
	// Adaptive QoS default downstream bandwidth - Range: `8`-`100000000`
	QosAdaptiveBandwidthDownstream *int `pulumi:"qosAdaptiveBandwidthDownstream"`
	// Variable name
	QosAdaptiveBandwidthDownstreamVariable *string `pulumi:"qosAdaptiveBandwidthDownstreamVariable"`
	// Adaptive QoS default upstream bandwidth - Range: `8`-`100000000`
	QosAdaptiveBandwidthUpstream *int `pulumi:"qosAdaptiveBandwidthUpstream"`
	// Variable name
	QosAdaptiveBandwidthUpstreamVariable *string `pulumi:"qosAdaptiveBandwidthUpstreamVariable"`
	// Downstream max bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMaxDownstream *int `pulumi:"qosAdaptiveMaxDownstream"`
	// Variable name
	QosAdaptiveMaxDownstreamVariable *string `pulumi:"qosAdaptiveMaxDownstreamVariable"`
	// Upstream max bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMaxUpstream *int `pulumi:"qosAdaptiveMaxUpstream"`
	// Variable name
	QosAdaptiveMaxUpstreamVariable *string `pulumi:"qosAdaptiveMaxUpstreamVariable"`
	// Downstream min bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMinDownstream *int `pulumi:"qosAdaptiveMinDownstream"`
	// Variable name
	QosAdaptiveMinDownstreamVariable *string `pulumi:"qosAdaptiveMinDownstreamVariable"`
	// Upstream min bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMinUpstream *int `pulumi:"qosAdaptiveMinUpstream"`
	// Variable name
	QosAdaptiveMinUpstreamVariable *string `pulumi:"qosAdaptiveMinUpstreamVariable"`
	// Periodic timer for adaptive QoS in minutes - Range: `1`-`720` - Default value: `15`
	QosAdaptivePeriod *int `pulumi:"qosAdaptivePeriod"`
	// Variable name
	QosAdaptivePeriodVariable *string `pulumi:"qosAdaptivePeriodVariable"`
	// Name of QoS map
	QosMap *string `pulumi:"qosMap"`
	// Variable name
	QosMapVariable *string `pulumi:"qosMapVariable"`
	// Name of VPN QoS map
	QosMapVpn *string `pulumi:"qosMapVpn"`
	// Variable name
	QosMapVpnVariable *string `pulumi:"qosMapVpnVariable"`
	// Name of rewrite rule
	RewriteRuleName *string `pulumi:"rewriteRuleName"`
	// Variable name
	RewriteRuleNameVariable *string `pulumi:"rewriteRuleNameVariable"`
	// Enable secondary region - Choices: `off`, `secondary-only`, `secondary-shared` - Default value: `off`
	SecondaryRegion *string `pulumi:"secondaryRegion"`
	// Variable name
	SecondaryRegionVariable *string `pulumi:"secondaryRegionVariable"`
	// Enables the interface for CTS SGT authorization and forwarding. - Default value: `false`
	SgtEnforcement *bool `pulumi:"sgtEnforcement"`
	// SGT value between 2 and 65519. - Range: `2`-`65519`
	SgtEnforcementSgt *int `pulumi:"sgtEnforcementSgt"`
	// Variable name
	SgtEnforcementSgtVariable *string `pulumi:"sgtEnforcementSgtVariable"`
	// 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
	ShapingRate *int `pulumi:"shapingRate"`
	// Variable name
	ShapingRateVariable *string `pulumi:"shapingRateVariable"`
	// Administrative state - Default value: `true`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed *string `pulumi:"speed"`
	// Variable name
	SpeedVariable *string `pulumi:"speedVariable"`
	// Configure static ARP entries
	StaticArps []CiscoVpnInterfaceFeatureTemplateStaticArp `pulumi:"staticArps"`
	// static NAT
	StaticNat66Entries []CiscoVpnInterfaceFeatureTemplateStaticNat66Entry `pulumi:"staticNat66Entries"`
	// Configure static NAT entries
	StaticNatEntries []CiscoVpnInterfaceFeatureTemplateStaticNatEntry `pulumi:"staticNatEntries"`
	// Configure Port Forward entries
	StaticPortForwardEntries []CiscoVpnInterfaceFeatureTemplateStaticPortForwardEntry `pulumi:"staticPortForwardEntries"`
	// SGT value between 2 and 65519. - Range: `2`-`65519`
	StaticSgt *int `pulumi:"staticSgt"`
	// Indicates that the interface is trustworthy for CTS. - Default value: `false`
	StaticSgtTrusted *bool `pulumi:"staticSgtTrusted"`
	// Variable name
	StaticSgtVariable *string `pulumi:"staticSgtVariable"`
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMssAdjust *int `pulumi:"tcpMssAdjust"`
	// Variable name
	TcpMssAdjustVariable *string `pulumi:"tcpMssAdjustVariable"`
	// Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
	TcpTimeout *int `pulumi:"tcpTimeout"`
	// Variable name
	TcpTimeoutVariable *string `pulumi:"tcpTimeoutVariable"`
	// The template type
	TemplateType *string `pulumi:"templateType"`
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension *string `pulumi:"tlocExtension"`
	// Variable name
	TlocExtensionVariable *string `pulumi:"tlocExtensionVariable"`
	// Variable name
	TrackerVariable *string `pulumi:"trackerVariable"`
	// Enable tracker for this interface
	Trackers []string `pulumi:"trackers"`
	// Tunnels Bandwidth Percent - Range: `1`-`99` - Default value: `50`
	TunnelBandwidth *int `pulumi:"tunnelBandwidth"`
	// Variable name
	TunnelBandwidthVariable *string `pulumi:"tunnelBandwidthVariable"`
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll *bool `pulumi:"tunnelInterfaceAllowAll"`
	// Variable name
	TunnelInterfaceAllowAllVariable *string `pulumi:"tunnelInterfaceAllowAllVariable"`
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp *bool `pulumi:"tunnelInterfaceAllowBgp"`
	// Variable name
	TunnelInterfaceAllowBgpVariable *string `pulumi:"tunnelInterfaceAllowBgpVariable"`
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp *bool `pulumi:"tunnelInterfaceAllowDhcp"`
	// Variable name
	TunnelInterfaceAllowDhcpVariable *string `pulumi:"tunnelInterfaceAllowDhcpVariable"`
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDns *bool `pulumi:"tunnelInterfaceAllowDns"`
	// Variable name
	TunnelInterfaceAllowDnsVariable *string `pulumi:"tunnelInterfaceAllowDnsVariable"`
	// Allow/Deny Https - Default value: `true`
	TunnelInterfaceAllowHttps *bool `pulumi:"tunnelInterfaceAllowHttps"`
	// Variable name
	TunnelInterfaceAllowHttpsVariable *string `pulumi:"tunnelInterfaceAllowHttpsVariable"`
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp *bool `pulumi:"tunnelInterfaceAllowIcmp"`
	// Variable name
	TunnelInterfaceAllowIcmpVariable *string `pulumi:"tunnelInterfaceAllowIcmpVariable"`
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf *bool `pulumi:"tunnelInterfaceAllowNetconf"`
	// Variable name
	TunnelInterfaceAllowNetconfVariable *string `pulumi:"tunnelInterfaceAllowNetconfVariable"`
	// Allow/Deny NTP - Default value: `false`
	TunnelInterfaceAllowNtp *bool `pulumi:"tunnelInterfaceAllowNtp"`
	// Variable name
	TunnelInterfaceAllowNtpVariable *string `pulumi:"tunnelInterfaceAllowNtpVariable"`
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf *bool `pulumi:"tunnelInterfaceAllowOspf"`
	// Variable name
	TunnelInterfaceAllowOspfVariable *string `pulumi:"tunnelInterfaceAllowOspfVariable"`
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp *bool `pulumi:"tunnelInterfaceAllowSnmp"`
	// Variable name
	TunnelInterfaceAllowSnmpVariable *string `pulumi:"tunnelInterfaceAllowSnmpVariable"`
	// Allow/Deny SSH - Default value: `false`
	TunnelInterfaceAllowSsh *bool `pulumi:"tunnelInterfaceAllowSsh"`
	// Variable name
	TunnelInterfaceAllowSshVariable *string `pulumi:"tunnelInterfaceAllowSshVariable"`
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun *bool `pulumi:"tunnelInterfaceAllowStun"`
	// Variable name
	TunnelInterfaceAllowStunVariable *string `pulumi:"tunnelInterfaceAllowStunVariable"`
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel *string `pulumi:"tunnelInterfaceBindLoopbackTunnel"`
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable *string `pulumi:"tunnelInterfaceBindLoopbackTunnelVariable"`
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder *bool `pulumi:"tunnelInterfaceBorder"`
	// Variable name
	TunnelInterfaceBorderVariable *string `pulumi:"tunnelInterfaceBorderVariable"`
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier *string `pulumi:"tunnelInterfaceCarrier"`
	// Variable name
	TunnelInterfaceCarrierVariable *string `pulumi:"tunnelInterfaceCarrierVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment *bool `pulumi:"tunnelInterfaceClearDontFragment"`
	// Variable name
	TunnelInterfaceClearDontFragmentVariable *string `pulumi:"tunnelInterfaceClearDontFragmentVariable"`
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `default`
	TunnelInterfaceColor *string `pulumi:"tunnelInterfaceColor"`
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceColorRestrict *bool `pulumi:"tunnelInterfaceColorRestrict"`
	// Variable name
	TunnelInterfaceColorRestrictVariable *string `pulumi:"tunnelInterfaceColorRestrictVariable"`
	// Variable name
	TunnelInterfaceColorVariable *string `pulumi:"tunnelInterfaceColorVariable"`
	// Allow Control Connection - Default value: `true`
	TunnelInterfaceControlConnections *bool `pulumi:"tunnelInterfaceControlConnections"`
	// Variable name
	TunnelInterfaceControlConnectionsVariable *string `pulumi:"tunnelInterfaceControlConnectionsVariable"`
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations []CiscoVpnInterfaceFeatureTemplateTunnelInterfaceEncapsulation `pulumi:"tunnelInterfaceEncapsulations"`
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable *string `pulumi:"tunnelInterfaceExcludeControllerGroupListVariable"`
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists []int `pulumi:"tunnelInterfaceExcludeControllerGroupLists"`
	// Extend the TLOC to a remote node over GRE tunnel
	TunnelInterfaceGreTunnelDestinationIp *string `pulumi:"tunnelInterfaceGreTunnelDestinationIp"`
	// Variable name
	TunnelInterfaceGreTunnelDestinationIpVariable *string `pulumi:"tunnelInterfaceGreTunnelDestinationIpVariable"`
	// List of groups
	TunnelInterfaceGroups []int `pulumi:"tunnelInterfaceGroups"`
	// Variable name
	TunnelInterfaceGroupsVariable *string `pulumi:"tunnelInterfaceGroupsVariable"`
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval *int `pulumi:"tunnelInterfaceHelloInterval"`
	// Variable name
	TunnelInterfaceHelloIntervalVariable *string `pulumi:"tunnelInterfaceHelloIntervalVariable"`
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance *int `pulumi:"tunnelInterfaceHelloTolerance"`
	// Variable name
	TunnelInterfaceHelloToleranceVariable *string `pulumi:"tunnelInterfaceHelloToleranceVariable"`
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit *bool `pulumi:"tunnelInterfaceLastResortCircuit"`
	// Variable name
	TunnelInterfaceLastResortCircuitVariable *string `pulumi:"tunnelInterfaceLastResortCircuitVariable"`
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink *bool `pulumi:"tunnelInterfaceLowBandwidthLink"`
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable *string `pulumi:"tunnelInterfaceLowBandwidthLinkVariable"`
	// Set the maximum number of control connections for this TLOC - Range: `0`-`100`
	TunnelInterfaceMaxControlConnections *int `pulumi:"tunnelInterfaceMaxControlConnections"`
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable *string `pulumi:"tunnelInterfaceMaxControlConnectionsVariable"`
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval *int `pulumi:"tunnelInterfaceNatRefreshInterval"`
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable *string `pulumi:"tunnelInterfaceNatRefreshIntervalVariable"`
	// Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
	TunnelInterfaceNetworkBroadcast *bool `pulumi:"tunnelInterfaceNetworkBroadcast"`
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable *string `pulumi:"tunnelInterfaceNetworkBroadcastVariable"`
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop *bool `pulumi:"tunnelInterfacePortHop"`
	// Variable name
	TunnelInterfacePortHopVariable *string `pulumi:"tunnelInterfacePortHopVariable"`
	// CTS SGT Propagation configuration - Default value: `false`
	TunnelInterfacePropagateSgt *bool `pulumi:"tunnelInterfacePropagateSgt"`
	// Variable name
	TunnelInterfacePropagateSgtVariable *string `pulumi:"tunnelInterfacePropagateSgtVariable"`
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss *int `pulumi:"tunnelInterfaceTunnelTcpMss"`
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable *string `pulumi:"tunnelInterfaceTunnelTcpMssVariable"`
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer *bool `pulumi:"tunnelInterfaceVbondAsStunServer"`
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable *string `pulumi:"tunnelInterfaceVbondAsStunServerVariable"`
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference *int `pulumi:"tunnelInterfaceVmanageConnectionPreference"`
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable *string `pulumi:"tunnelInterfaceVmanageConnectionPreferenceVariable"`
	// Set tunnel QoS mode - Choices: `hub`, `spoke`
	TunnelQosMode *string `pulumi:"tunnelQosMode"`
	// Variable name
	TunnelQosModeVariable *string `pulumi:"tunnelQosModeVariable"`
	// Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
	UdpTimeout *int `pulumi:"udpTimeout"`
	// Variable name
	UdpTimeoutVariable *string `pulumi:"udpTimeoutVariable"`
	// The version of the feature template
	Version *int `pulumi:"version"`
}

type CiscoVpnInterfaceFeatureTemplateState struct {
	// Apply ACL
	AccessLists CiscoVpnInterfaceFeatureTemplateAccessListArrayInput
	// Assign IPv4 address
	Address pulumi.StringPtrInput
	// Variable name
	AddressVariable pulumi.StringPtrInput
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
	ArpTimeout pulumi.IntPtrInput
	// Variable name
	ArpTimeoutVariable pulumi.StringPtrInput
	// Interface auto detect bandwidth - Default value: `false`
	AutoBandwidthDetect pulumi.BoolPtrInput
	// Variable name
	AutoBandwidthDetectVariable pulumi.StringPtrInput
	// Link autonegotiation
	Autonegotiate pulumi.BoolPtrInput
	// Variable name
	AutonegotiateVariable pulumi.StringPtrInput
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthDownstream pulumi.IntPtrInput
	// Variable name
	BandwidthDownstreamVariable pulumi.StringPtrInput
	// Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthUpstream pulumi.IntPtrInput
	// Variable name
	BandwidthUpstreamVariable pulumi.StringPtrInput
	// Block packets originating from IP address that is not from this source - Default value: `false`
	BlockNonSourceIp pulumi.BoolPtrInput
	// Variable name
	BlockNonSourceIpVariable pulumi.StringPtrInput
	// Enable core region - Choices: `core`, `core-shared` - Default value: `core`
	CoreRegion pulumi.StringPtrInput
	// Variable name
	CoreRegionVariable pulumi.StringPtrInput
	// The description of the feature template
	Description pulumi.StringPtrInput
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Enable DHCP - Default value: `false`
	Dhcp pulumi.BoolPtrInput
	// Set administrative distance for DHCP default route - Range: `1`-`65536` - Default value: `1`
	DhcpDistance pulumi.IntPtrInput
	// Variable name
	DhcpDistanceVariable pulumi.StringPtrInput
	// Variable name
	DhcpVariable pulumi.StringPtrInput
	// Enable DHCPv6 - Default value: `false`
	Dhcpv6 pulumi.BoolPtrInput
	// Variable name
	Dhcpv6Variable pulumi.StringPtrInput
	// Duplex mode - Choices: `full`, `half`, `auto`
	Duplex pulumi.StringPtrInput
	// Variable name
	DuplexVariable pulumi.StringPtrInput
	// Enable core region - Default value: `false`
	EnableCoreRegion pulumi.BoolPtrInput
	// Enables the interface for CTS SGT authorization and forwarding. - Default value: `false`
	EnableSgt pulumi.BoolPtrInput
	// Extend remote TLOC over a GRE tunnel to a local WAN interface
	GreTunnelSourceIp pulumi.StringPtrInput
	// Variable name
	GreTunnelSourceIpVariable pulumi.StringPtrInput
	// Extend remote TLOC over a GRE tunnel to a local WAN interface
	GreTunnelXconnect pulumi.StringPtrInput
	// Variable name
	GreTunnelXconnectVariable pulumi.StringPtrInput
	// Set this option to disable the icmp/icmpv6 redirect packets - Default value: `true`
	IcmpRedirectDisable pulumi.BoolPtrInput
	// Variable name
	IcmpRedirectDisableVariable pulumi.StringPtrInput
	// Interface description
	InterfaceDescription pulumi.StringPtrInput
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrInput
	// Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
	// Default value: `1500`
	InterfaceMtu pulumi.IntPtrInput
	// Variable name
	InterfaceMtuVariable pulumi.StringPtrInput
	// Interface name: ge0/<0-..> or ge0/<0-..>.vlanid or irb<bridgeid:1-63> or loopback<string> or natpool-<1..31> when
	// present
	InterfaceName pulumi.StringPtrInput
	// Variable name
	InterfaceNameVariable pulumi.StringPtrInput
	// IP Directed-Broadcast - Default value: `false`
	IpDirectedBroadcast pulumi.BoolPtrInput
	// Variable name
	IpDirectedBroadcastVariable pulumi.StringPtrInput
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
	// <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	// Iperf server for auto bandwidth detect
	IperfServer pulumi.StringPtrInput
	// Variable name
	IperfServerVariable pulumi.StringPtrInput
	// Variable name
	Ipv4DhcpHelperVariable pulumi.StringPtrInput
	// List of DHCP IPv4 helper addresses
	Ipv4DhcpHelpers pulumi.StringArrayInput
	// Assign secondary IP addresses
	Ipv4SecondaryAddresses CiscoVpnInterfaceFeatureTemplateIpv4SecondaryAddressArrayInput
	// Enable VRRP
	Ipv4Vrrps CiscoVpnInterfaceFeatureTemplateIpv4VrrpArrayInput
	// Apply IPv6 access list
	Ipv6AccessLists CiscoVpnInterfaceFeatureTemplateIpv6AccessListArrayInput
	// Assign IPv6 address
	Ipv6Address pulumi.StringPtrInput
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrInput
	// DHCPv6 Helper
	Ipv6DhcpHelpers CiscoVpnInterfaceFeatureTemplateIpv6DhcpHelperArrayInput
	// NAT64 on this interface - Default value: `false`
	Ipv6Nat pulumi.BoolPtrInput
	// Variable name
	Ipv6NatVariable pulumi.StringPtrInput
	// Assign secondary IPv6 addresses
	Ipv6SecondaryAddresses CiscoVpnInterfaceFeatureTemplateIpv6SecondaryAddressArrayInput
	// Enable VRRP
	Ipv6Vrrps CiscoVpnInterfaceFeatureTemplateIpv6VrrpArrayInput
	// Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
	LoadInterval pulumi.IntPtrInput
	// Variable name
	LoadIntervalVariable pulumi.StringPtrInput
	// Set MAC-layer address
	MacAddress pulumi.StringPtrInput
	// Variable name
	MacAddressVariable pulumi.StringPtrInput
	// Media type - Choices: `auto-select`, `rj45`, `sfp`
	MediaType pulumi.StringPtrInput
	// Variable name
	MediaTypeVariable pulumi.StringPtrInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Network Address Translation on this interface - Default value: `false`
	Nat pulumi.BoolPtrInput
	// NAT64 on this interface - Default value: `false`
	Nat64Interface pulumi.BoolPtrInput
	// NAT66 on this interface - Default value: `false`
	Nat66Interface pulumi.BoolPtrInput
	// Configure NAT Inside Loopback Interface
	NatInsideSourceLoopbackInterface pulumi.StringPtrInput
	// Variable name
	NatInsideSourceLoopbackInterfaceVariable pulumi.StringPtrInput
	// Enable port translation(PAT) - Default value: `true`
	NatOverload pulumi.BoolPtrInput
	// Variable name
	NatOverloadVariable pulumi.StringPtrInput
	// Ending IP address of NAT Pool Prefix Length
	NatPoolPrefixLength pulumi.IntPtrInput
	// Variable name
	NatPoolPrefixLengthVariable pulumi.StringPtrInput
	// Ending IP address of NAT pool range
	NatPoolRangeEnd pulumi.StringPtrInput
	// Variable name
	NatPoolRangeEndVariable pulumi.StringPtrInput
	// Starting IP address of NAT pool range
	NatPoolRangeStart pulumi.StringPtrInput
	// Variable name
	NatPoolRangeStartVariable pulumi.StringPtrInput
	// NAT type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
	NatType pulumi.StringPtrInput
	// Variable name
	NatTypeVariable pulumi.StringPtrInput
	// Configure interface as Power-over-Ethernet source - Default value: `false`
	Poe pulumi.BoolPtrInput
	// Variable name
	PoeVariable pulumi.StringPtrInput
	// Enable/Disable CTS SGT propagation on an interface. - Default value: `true`
	PropagateSgt pulumi.BoolPtrInput
	// Adaptive QoS default downstream bandwidth - Range: `8`-`100000000`
	QosAdaptiveBandwidthDownstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveBandwidthDownstreamVariable pulumi.StringPtrInput
	// Adaptive QoS default upstream bandwidth - Range: `8`-`100000000`
	QosAdaptiveBandwidthUpstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveBandwidthUpstreamVariable pulumi.StringPtrInput
	// Downstream max bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMaxDownstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveMaxDownstreamVariable pulumi.StringPtrInput
	// Upstream max bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMaxUpstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveMaxUpstreamVariable pulumi.StringPtrInput
	// Downstream min bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMinDownstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveMinDownstreamVariable pulumi.StringPtrInput
	// Upstream min bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMinUpstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveMinUpstreamVariable pulumi.StringPtrInput
	// Periodic timer for adaptive QoS in minutes - Range: `1`-`720` - Default value: `15`
	QosAdaptivePeriod pulumi.IntPtrInput
	// Variable name
	QosAdaptivePeriodVariable pulumi.StringPtrInput
	// Name of QoS map
	QosMap pulumi.StringPtrInput
	// Variable name
	QosMapVariable pulumi.StringPtrInput
	// Name of VPN QoS map
	QosMapVpn pulumi.StringPtrInput
	// Variable name
	QosMapVpnVariable pulumi.StringPtrInput
	// Name of rewrite rule
	RewriteRuleName pulumi.StringPtrInput
	// Variable name
	RewriteRuleNameVariable pulumi.StringPtrInput
	// Enable secondary region - Choices: `off`, `secondary-only`, `secondary-shared` - Default value: `off`
	SecondaryRegion pulumi.StringPtrInput
	// Variable name
	SecondaryRegionVariable pulumi.StringPtrInput
	// Enables the interface for CTS SGT authorization and forwarding. - Default value: `false`
	SgtEnforcement pulumi.BoolPtrInput
	// SGT value between 2 and 65519. - Range: `2`-`65519`
	SgtEnforcementSgt pulumi.IntPtrInput
	// Variable name
	SgtEnforcementSgtVariable pulumi.StringPtrInput
	// 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
	ShapingRate pulumi.IntPtrInput
	// Variable name
	ShapingRateVariable pulumi.StringPtrInput
	// Administrative state - Default value: `true`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed pulumi.StringPtrInput
	// Variable name
	SpeedVariable pulumi.StringPtrInput
	// Configure static ARP entries
	StaticArps CiscoVpnInterfaceFeatureTemplateStaticArpArrayInput
	// static NAT
	StaticNat66Entries CiscoVpnInterfaceFeatureTemplateStaticNat66EntryArrayInput
	// Configure static NAT entries
	StaticNatEntries CiscoVpnInterfaceFeatureTemplateStaticNatEntryArrayInput
	// Configure Port Forward entries
	StaticPortForwardEntries CiscoVpnInterfaceFeatureTemplateStaticPortForwardEntryArrayInput
	// SGT value between 2 and 65519. - Range: `2`-`65519`
	StaticSgt pulumi.IntPtrInput
	// Indicates that the interface is trustworthy for CTS. - Default value: `false`
	StaticSgtTrusted pulumi.BoolPtrInput
	// Variable name
	StaticSgtVariable pulumi.StringPtrInput
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMssAdjust pulumi.IntPtrInput
	// Variable name
	TcpMssAdjustVariable pulumi.StringPtrInput
	// Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
	TcpTimeout pulumi.IntPtrInput
	// Variable name
	TcpTimeoutVariable pulumi.StringPtrInput
	// The template type
	TemplateType pulumi.StringPtrInput
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension pulumi.StringPtrInput
	// Variable name
	TlocExtensionVariable pulumi.StringPtrInput
	// Variable name
	TrackerVariable pulumi.StringPtrInput
	// Enable tracker for this interface
	Trackers pulumi.StringArrayInput
	// Tunnels Bandwidth Percent - Range: `1`-`99` - Default value: `50`
	TunnelBandwidth pulumi.IntPtrInput
	// Variable name
	TunnelBandwidthVariable pulumi.StringPtrInput
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowAllVariable pulumi.StringPtrInput
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowBgpVariable pulumi.StringPtrInput
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowDhcpVariable pulumi.StringPtrInput
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDns pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowDnsVariable pulumi.StringPtrInput
	// Allow/Deny Https - Default value: `true`
	TunnelInterfaceAllowHttps pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowHttpsVariable pulumi.StringPtrInput
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowIcmpVariable pulumi.StringPtrInput
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowNetconfVariable pulumi.StringPtrInput
	// Allow/Deny NTP - Default value: `false`
	TunnelInterfaceAllowNtp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowNtpVariable pulumi.StringPtrInput
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowOspfVariable pulumi.StringPtrInput
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowSnmpVariable pulumi.StringPtrInput
	// Allow/Deny SSH - Default value: `false`
	TunnelInterfaceAllowSsh pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowSshVariable pulumi.StringPtrInput
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowStunVariable pulumi.StringPtrInput
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable pulumi.StringPtrInput
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceBorderVariable pulumi.StringPtrInput
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceCarrierVariable pulumi.StringPtrInput
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceClearDontFragmentVariable pulumi.StringPtrInput
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `default`
	TunnelInterfaceColor pulumi.StringPtrInput
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceColorRestrict pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceColorRestrictVariable pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceColorVariable pulumi.StringPtrInput
	// Allow Control Connection - Default value: `true`
	TunnelInterfaceControlConnections pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceControlConnectionsVariable pulumi.StringPtrInput
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations CiscoVpnInterfaceFeatureTemplateTunnelInterfaceEncapsulationArrayInput
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable pulumi.StringPtrInput
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists pulumi.IntArrayInput
	// Extend the TLOC to a remote node over GRE tunnel
	TunnelInterfaceGreTunnelDestinationIp pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceGreTunnelDestinationIpVariable pulumi.StringPtrInput
	// List of groups
	TunnelInterfaceGroups pulumi.IntArrayInput
	// Variable name
	TunnelInterfaceGroupsVariable pulumi.StringPtrInput
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceHelloIntervalVariable pulumi.StringPtrInput
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceHelloToleranceVariable pulumi.StringPtrInput
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceLastResortCircuitVariable pulumi.StringPtrInput
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable pulumi.StringPtrInput
	// Set the maximum number of control connections for this TLOC - Range: `0`-`100`
	TunnelInterfaceMaxControlConnections pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable pulumi.StringPtrInput
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable pulumi.StringPtrInput
	// Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
	TunnelInterfaceNetworkBroadcast pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable pulumi.StringPtrInput
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop pulumi.BoolPtrInput
	// Variable name
	TunnelInterfacePortHopVariable pulumi.StringPtrInput
	// CTS SGT Propagation configuration - Default value: `false`
	TunnelInterfacePropagateSgt pulumi.BoolPtrInput
	// Variable name
	TunnelInterfacePropagateSgtVariable pulumi.StringPtrInput
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable pulumi.StringPtrInput
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable pulumi.StringPtrInput
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable pulumi.StringPtrInput
	// Set tunnel QoS mode - Choices: `hub`, `spoke`
	TunnelQosMode pulumi.StringPtrInput
	// Variable name
	TunnelQosModeVariable pulumi.StringPtrInput
	// Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
	UdpTimeout pulumi.IntPtrInput
	// Variable name
	UdpTimeoutVariable pulumi.StringPtrInput
	// The version of the feature template
	Version pulumi.IntPtrInput
}

func (CiscoVpnInterfaceFeatureTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*ciscoVpnInterfaceFeatureTemplateState)(nil)).Elem()
}

type ciscoVpnInterfaceFeatureTemplateArgs struct {
	// Apply ACL
	AccessLists []CiscoVpnInterfaceFeatureTemplateAccessList `pulumi:"accessLists"`
	// Assign IPv4 address
	Address *string `pulumi:"address"`
	// Variable name
	AddressVariable *string `pulumi:"addressVariable"`
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
	ArpTimeout *int `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable *string `pulumi:"arpTimeoutVariable"`
	// Interface auto detect bandwidth - Default value: `false`
	AutoBandwidthDetect *bool `pulumi:"autoBandwidthDetect"`
	// Variable name
	AutoBandwidthDetectVariable *string `pulumi:"autoBandwidthDetectVariable"`
	// Link autonegotiation
	Autonegotiate *bool `pulumi:"autonegotiate"`
	// Variable name
	AutonegotiateVariable *string `pulumi:"autonegotiateVariable"`
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthDownstream *int `pulumi:"bandwidthDownstream"`
	// Variable name
	BandwidthDownstreamVariable *string `pulumi:"bandwidthDownstreamVariable"`
	// Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthUpstream *int `pulumi:"bandwidthUpstream"`
	// Variable name
	BandwidthUpstreamVariable *string `pulumi:"bandwidthUpstreamVariable"`
	// Block packets originating from IP address that is not from this source - Default value: `false`
	BlockNonSourceIp *bool `pulumi:"blockNonSourceIp"`
	// Variable name
	BlockNonSourceIpVariable *string `pulumi:"blockNonSourceIpVariable"`
	// Enable core region - Choices: `core`, `core-shared` - Default value: `core`
	CoreRegion *string `pulumi:"coreRegion"`
	// Variable name
	CoreRegionVariable *string `pulumi:"coreRegionVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Enable DHCP - Default value: `false`
	Dhcp *bool `pulumi:"dhcp"`
	// Set administrative distance for DHCP default route - Range: `1`-`65536` - Default value: `1`
	DhcpDistance *int `pulumi:"dhcpDistance"`
	// Variable name
	DhcpDistanceVariable *string `pulumi:"dhcpDistanceVariable"`
	// Variable name
	DhcpVariable *string `pulumi:"dhcpVariable"`
	// Enable DHCPv6 - Default value: `false`
	Dhcpv6 *bool `pulumi:"dhcpv6"`
	// Variable name
	Dhcpv6Variable *string `pulumi:"dhcpv6Variable"`
	// Duplex mode - Choices: `full`, `half`, `auto`
	Duplex *string `pulumi:"duplex"`
	// Variable name
	DuplexVariable *string `pulumi:"duplexVariable"`
	// Enable core region - Default value: `false`
	EnableCoreRegion *bool `pulumi:"enableCoreRegion"`
	// Enables the interface for CTS SGT authorization and forwarding. - Default value: `false`
	EnableSgt *bool `pulumi:"enableSgt"`
	// Extend remote TLOC over a GRE tunnel to a local WAN interface
	GreTunnelSourceIp *string `pulumi:"greTunnelSourceIp"`
	// Variable name
	GreTunnelSourceIpVariable *string `pulumi:"greTunnelSourceIpVariable"`
	// Extend remote TLOC over a GRE tunnel to a local WAN interface
	GreTunnelXconnect *string `pulumi:"greTunnelXconnect"`
	// Variable name
	GreTunnelXconnectVariable *string `pulumi:"greTunnelXconnectVariable"`
	// Set this option to disable the icmp/icmpv6 redirect packets - Default value: `true`
	IcmpRedirectDisable *bool `pulumi:"icmpRedirectDisable"`
	// Variable name
	IcmpRedirectDisableVariable *string `pulumi:"icmpRedirectDisableVariable"`
	// Interface description
	InterfaceDescription *string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable *string `pulumi:"interfaceDescriptionVariable"`
	// Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
	// Default value: `1500`
	InterfaceMtu *int `pulumi:"interfaceMtu"`
	// Variable name
	InterfaceMtuVariable *string `pulumi:"interfaceMtuVariable"`
	// Interface name: ge0/<0-..> or ge0/<0-..>.vlanid or irb<bridgeid:1-63> or loopback<string> or natpool-<1..31> when
	// present
	InterfaceName *string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable *string `pulumi:"interfaceNameVariable"`
	// IP Directed-Broadcast - Default value: `false`
	IpDirectedBroadcast *bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable *string `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
	// <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	// Iperf server for auto bandwidth detect
	IperfServer *string `pulumi:"iperfServer"`
	// Variable name
	IperfServerVariable *string `pulumi:"iperfServerVariable"`
	// Variable name
	Ipv4DhcpHelperVariable *string `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP IPv4 helper addresses
	Ipv4DhcpHelpers []string `pulumi:"ipv4DhcpHelpers"`
	// Assign secondary IP addresses
	Ipv4SecondaryAddresses []CiscoVpnInterfaceFeatureTemplateIpv4SecondaryAddress `pulumi:"ipv4SecondaryAddresses"`
	// Enable VRRP
	Ipv4Vrrps []CiscoVpnInterfaceFeatureTemplateIpv4Vrrp `pulumi:"ipv4Vrrps"`
	// Apply IPv6 access list
	Ipv6AccessLists []CiscoVpnInterfaceFeatureTemplateIpv6AccessList `pulumi:"ipv6AccessLists"`
	// Assign IPv6 address
	Ipv6Address *string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable *string `pulumi:"ipv6AddressVariable"`
	// DHCPv6 Helper
	Ipv6DhcpHelpers []CiscoVpnInterfaceFeatureTemplateIpv6DhcpHelper `pulumi:"ipv6DhcpHelpers"`
	// NAT64 on this interface - Default value: `false`
	Ipv6Nat *bool `pulumi:"ipv6Nat"`
	// Variable name
	Ipv6NatVariable *string `pulumi:"ipv6NatVariable"`
	// Assign secondary IPv6 addresses
	Ipv6SecondaryAddresses []CiscoVpnInterfaceFeatureTemplateIpv6SecondaryAddress `pulumi:"ipv6SecondaryAddresses"`
	// Enable VRRP
	Ipv6Vrrps []CiscoVpnInterfaceFeatureTemplateIpv6Vrrp `pulumi:"ipv6Vrrps"`
	// Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
	LoadInterval *int `pulumi:"loadInterval"`
	// Variable name
	LoadIntervalVariable *string `pulumi:"loadIntervalVariable"`
	// Set MAC-layer address
	MacAddress *string `pulumi:"macAddress"`
	// Variable name
	MacAddressVariable *string `pulumi:"macAddressVariable"`
	// Media type - Choices: `auto-select`, `rj45`, `sfp`
	MediaType *string `pulumi:"mediaType"`
	// Variable name
	MediaTypeVariable *string `pulumi:"mediaTypeVariable"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Network Address Translation on this interface - Default value: `false`
	Nat *bool `pulumi:"nat"`
	// NAT64 on this interface - Default value: `false`
	Nat64Interface *bool `pulumi:"nat64Interface"`
	// NAT66 on this interface - Default value: `false`
	Nat66Interface *bool `pulumi:"nat66Interface"`
	// Configure NAT Inside Loopback Interface
	NatInsideSourceLoopbackInterface *string `pulumi:"natInsideSourceLoopbackInterface"`
	// Variable name
	NatInsideSourceLoopbackInterfaceVariable *string `pulumi:"natInsideSourceLoopbackInterfaceVariable"`
	// Enable port translation(PAT) - Default value: `true`
	NatOverload *bool `pulumi:"natOverload"`
	// Variable name
	NatOverloadVariable *string `pulumi:"natOverloadVariable"`
	// Ending IP address of NAT Pool Prefix Length
	NatPoolPrefixLength *int `pulumi:"natPoolPrefixLength"`
	// Variable name
	NatPoolPrefixLengthVariable *string `pulumi:"natPoolPrefixLengthVariable"`
	// Ending IP address of NAT pool range
	NatPoolRangeEnd *string `pulumi:"natPoolRangeEnd"`
	// Variable name
	NatPoolRangeEndVariable *string `pulumi:"natPoolRangeEndVariable"`
	// Starting IP address of NAT pool range
	NatPoolRangeStart *string `pulumi:"natPoolRangeStart"`
	// Variable name
	NatPoolRangeStartVariable *string `pulumi:"natPoolRangeStartVariable"`
	// NAT type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
	NatType *string `pulumi:"natType"`
	// Variable name
	NatTypeVariable *string `pulumi:"natTypeVariable"`
	// Configure interface as Power-over-Ethernet source - Default value: `false`
	Poe *bool `pulumi:"poe"`
	// Variable name
	PoeVariable *string `pulumi:"poeVariable"`
	// Enable/Disable CTS SGT propagation on an interface. - Default value: `true`
	PropagateSgt *bool `pulumi:"propagateSgt"`
	// Adaptive QoS default downstream bandwidth - Range: `8`-`100000000`
	QosAdaptiveBandwidthDownstream *int `pulumi:"qosAdaptiveBandwidthDownstream"`
	// Variable name
	QosAdaptiveBandwidthDownstreamVariable *string `pulumi:"qosAdaptiveBandwidthDownstreamVariable"`
	// Adaptive QoS default upstream bandwidth - Range: `8`-`100000000`
	QosAdaptiveBandwidthUpstream *int `pulumi:"qosAdaptiveBandwidthUpstream"`
	// Variable name
	QosAdaptiveBandwidthUpstreamVariable *string `pulumi:"qosAdaptiveBandwidthUpstreamVariable"`
	// Downstream max bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMaxDownstream *int `pulumi:"qosAdaptiveMaxDownstream"`
	// Variable name
	QosAdaptiveMaxDownstreamVariable *string `pulumi:"qosAdaptiveMaxDownstreamVariable"`
	// Upstream max bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMaxUpstream *int `pulumi:"qosAdaptiveMaxUpstream"`
	// Variable name
	QosAdaptiveMaxUpstreamVariable *string `pulumi:"qosAdaptiveMaxUpstreamVariable"`
	// Downstream min bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMinDownstream *int `pulumi:"qosAdaptiveMinDownstream"`
	// Variable name
	QosAdaptiveMinDownstreamVariable *string `pulumi:"qosAdaptiveMinDownstreamVariable"`
	// Upstream min bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMinUpstream *int `pulumi:"qosAdaptiveMinUpstream"`
	// Variable name
	QosAdaptiveMinUpstreamVariable *string `pulumi:"qosAdaptiveMinUpstreamVariable"`
	// Periodic timer for adaptive QoS in minutes - Range: `1`-`720` - Default value: `15`
	QosAdaptivePeriod *int `pulumi:"qosAdaptivePeriod"`
	// Variable name
	QosAdaptivePeriodVariable *string `pulumi:"qosAdaptivePeriodVariable"`
	// Name of QoS map
	QosMap *string `pulumi:"qosMap"`
	// Variable name
	QosMapVariable *string `pulumi:"qosMapVariable"`
	// Name of VPN QoS map
	QosMapVpn *string `pulumi:"qosMapVpn"`
	// Variable name
	QosMapVpnVariable *string `pulumi:"qosMapVpnVariable"`
	// Name of rewrite rule
	RewriteRuleName *string `pulumi:"rewriteRuleName"`
	// Variable name
	RewriteRuleNameVariable *string `pulumi:"rewriteRuleNameVariable"`
	// Enable secondary region - Choices: `off`, `secondary-only`, `secondary-shared` - Default value: `off`
	SecondaryRegion *string `pulumi:"secondaryRegion"`
	// Variable name
	SecondaryRegionVariable *string `pulumi:"secondaryRegionVariable"`
	// Enables the interface for CTS SGT authorization and forwarding. - Default value: `false`
	SgtEnforcement *bool `pulumi:"sgtEnforcement"`
	// SGT value between 2 and 65519. - Range: `2`-`65519`
	SgtEnforcementSgt *int `pulumi:"sgtEnforcementSgt"`
	// Variable name
	SgtEnforcementSgtVariable *string `pulumi:"sgtEnforcementSgtVariable"`
	// 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
	ShapingRate *int `pulumi:"shapingRate"`
	// Variable name
	ShapingRateVariable *string `pulumi:"shapingRateVariable"`
	// Administrative state - Default value: `true`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed *string `pulumi:"speed"`
	// Variable name
	SpeedVariable *string `pulumi:"speedVariable"`
	// Configure static ARP entries
	StaticArps []CiscoVpnInterfaceFeatureTemplateStaticArp `pulumi:"staticArps"`
	// static NAT
	StaticNat66Entries []CiscoVpnInterfaceFeatureTemplateStaticNat66Entry `pulumi:"staticNat66Entries"`
	// Configure static NAT entries
	StaticNatEntries []CiscoVpnInterfaceFeatureTemplateStaticNatEntry `pulumi:"staticNatEntries"`
	// Configure Port Forward entries
	StaticPortForwardEntries []CiscoVpnInterfaceFeatureTemplateStaticPortForwardEntry `pulumi:"staticPortForwardEntries"`
	// SGT value between 2 and 65519. - Range: `2`-`65519`
	StaticSgt *int `pulumi:"staticSgt"`
	// Indicates that the interface is trustworthy for CTS. - Default value: `false`
	StaticSgtTrusted *bool `pulumi:"staticSgtTrusted"`
	// Variable name
	StaticSgtVariable *string `pulumi:"staticSgtVariable"`
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMssAdjust *int `pulumi:"tcpMssAdjust"`
	// Variable name
	TcpMssAdjustVariable *string `pulumi:"tcpMssAdjustVariable"`
	// Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
	TcpTimeout *int `pulumi:"tcpTimeout"`
	// Variable name
	TcpTimeoutVariable *string `pulumi:"tcpTimeoutVariable"`
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension *string `pulumi:"tlocExtension"`
	// Variable name
	TlocExtensionVariable *string `pulumi:"tlocExtensionVariable"`
	// Variable name
	TrackerVariable *string `pulumi:"trackerVariable"`
	// Enable tracker for this interface
	Trackers []string `pulumi:"trackers"`
	// Tunnels Bandwidth Percent - Range: `1`-`99` - Default value: `50`
	TunnelBandwidth *int `pulumi:"tunnelBandwidth"`
	// Variable name
	TunnelBandwidthVariable *string `pulumi:"tunnelBandwidthVariable"`
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll *bool `pulumi:"tunnelInterfaceAllowAll"`
	// Variable name
	TunnelInterfaceAllowAllVariable *string `pulumi:"tunnelInterfaceAllowAllVariable"`
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp *bool `pulumi:"tunnelInterfaceAllowBgp"`
	// Variable name
	TunnelInterfaceAllowBgpVariable *string `pulumi:"tunnelInterfaceAllowBgpVariable"`
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp *bool `pulumi:"tunnelInterfaceAllowDhcp"`
	// Variable name
	TunnelInterfaceAllowDhcpVariable *string `pulumi:"tunnelInterfaceAllowDhcpVariable"`
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDns *bool `pulumi:"tunnelInterfaceAllowDns"`
	// Variable name
	TunnelInterfaceAllowDnsVariable *string `pulumi:"tunnelInterfaceAllowDnsVariable"`
	// Allow/Deny Https - Default value: `true`
	TunnelInterfaceAllowHttps *bool `pulumi:"tunnelInterfaceAllowHttps"`
	// Variable name
	TunnelInterfaceAllowHttpsVariable *string `pulumi:"tunnelInterfaceAllowHttpsVariable"`
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp *bool `pulumi:"tunnelInterfaceAllowIcmp"`
	// Variable name
	TunnelInterfaceAllowIcmpVariable *string `pulumi:"tunnelInterfaceAllowIcmpVariable"`
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf *bool `pulumi:"tunnelInterfaceAllowNetconf"`
	// Variable name
	TunnelInterfaceAllowNetconfVariable *string `pulumi:"tunnelInterfaceAllowNetconfVariable"`
	// Allow/Deny NTP - Default value: `false`
	TunnelInterfaceAllowNtp *bool `pulumi:"tunnelInterfaceAllowNtp"`
	// Variable name
	TunnelInterfaceAllowNtpVariable *string `pulumi:"tunnelInterfaceAllowNtpVariable"`
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf *bool `pulumi:"tunnelInterfaceAllowOspf"`
	// Variable name
	TunnelInterfaceAllowOspfVariable *string `pulumi:"tunnelInterfaceAllowOspfVariable"`
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp *bool `pulumi:"tunnelInterfaceAllowSnmp"`
	// Variable name
	TunnelInterfaceAllowSnmpVariable *string `pulumi:"tunnelInterfaceAllowSnmpVariable"`
	// Allow/Deny SSH - Default value: `false`
	TunnelInterfaceAllowSsh *bool `pulumi:"tunnelInterfaceAllowSsh"`
	// Variable name
	TunnelInterfaceAllowSshVariable *string `pulumi:"tunnelInterfaceAllowSshVariable"`
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun *bool `pulumi:"tunnelInterfaceAllowStun"`
	// Variable name
	TunnelInterfaceAllowStunVariable *string `pulumi:"tunnelInterfaceAllowStunVariable"`
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel *string `pulumi:"tunnelInterfaceBindLoopbackTunnel"`
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable *string `pulumi:"tunnelInterfaceBindLoopbackTunnelVariable"`
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder *bool `pulumi:"tunnelInterfaceBorder"`
	// Variable name
	TunnelInterfaceBorderVariable *string `pulumi:"tunnelInterfaceBorderVariable"`
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier *string `pulumi:"tunnelInterfaceCarrier"`
	// Variable name
	TunnelInterfaceCarrierVariable *string `pulumi:"tunnelInterfaceCarrierVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment *bool `pulumi:"tunnelInterfaceClearDontFragment"`
	// Variable name
	TunnelInterfaceClearDontFragmentVariable *string `pulumi:"tunnelInterfaceClearDontFragmentVariable"`
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `default`
	TunnelInterfaceColor *string `pulumi:"tunnelInterfaceColor"`
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceColorRestrict *bool `pulumi:"tunnelInterfaceColorRestrict"`
	// Variable name
	TunnelInterfaceColorRestrictVariable *string `pulumi:"tunnelInterfaceColorRestrictVariable"`
	// Variable name
	TunnelInterfaceColorVariable *string `pulumi:"tunnelInterfaceColorVariable"`
	// Allow Control Connection - Default value: `true`
	TunnelInterfaceControlConnections *bool `pulumi:"tunnelInterfaceControlConnections"`
	// Variable name
	TunnelInterfaceControlConnectionsVariable *string `pulumi:"tunnelInterfaceControlConnectionsVariable"`
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations []CiscoVpnInterfaceFeatureTemplateTunnelInterfaceEncapsulation `pulumi:"tunnelInterfaceEncapsulations"`
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable *string `pulumi:"tunnelInterfaceExcludeControllerGroupListVariable"`
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists []int `pulumi:"tunnelInterfaceExcludeControllerGroupLists"`
	// Extend the TLOC to a remote node over GRE tunnel
	TunnelInterfaceGreTunnelDestinationIp *string `pulumi:"tunnelInterfaceGreTunnelDestinationIp"`
	// Variable name
	TunnelInterfaceGreTunnelDestinationIpVariable *string `pulumi:"tunnelInterfaceGreTunnelDestinationIpVariable"`
	// List of groups
	TunnelInterfaceGroups []int `pulumi:"tunnelInterfaceGroups"`
	// Variable name
	TunnelInterfaceGroupsVariable *string `pulumi:"tunnelInterfaceGroupsVariable"`
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval *int `pulumi:"tunnelInterfaceHelloInterval"`
	// Variable name
	TunnelInterfaceHelloIntervalVariable *string `pulumi:"tunnelInterfaceHelloIntervalVariable"`
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance *int `pulumi:"tunnelInterfaceHelloTolerance"`
	// Variable name
	TunnelInterfaceHelloToleranceVariable *string `pulumi:"tunnelInterfaceHelloToleranceVariable"`
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit *bool `pulumi:"tunnelInterfaceLastResortCircuit"`
	// Variable name
	TunnelInterfaceLastResortCircuitVariable *string `pulumi:"tunnelInterfaceLastResortCircuitVariable"`
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink *bool `pulumi:"tunnelInterfaceLowBandwidthLink"`
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable *string `pulumi:"tunnelInterfaceLowBandwidthLinkVariable"`
	// Set the maximum number of control connections for this TLOC - Range: `0`-`100`
	TunnelInterfaceMaxControlConnections *int `pulumi:"tunnelInterfaceMaxControlConnections"`
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable *string `pulumi:"tunnelInterfaceMaxControlConnectionsVariable"`
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval *int `pulumi:"tunnelInterfaceNatRefreshInterval"`
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable *string `pulumi:"tunnelInterfaceNatRefreshIntervalVariable"`
	// Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
	TunnelInterfaceNetworkBroadcast *bool `pulumi:"tunnelInterfaceNetworkBroadcast"`
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable *string `pulumi:"tunnelInterfaceNetworkBroadcastVariable"`
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop *bool `pulumi:"tunnelInterfacePortHop"`
	// Variable name
	TunnelInterfacePortHopVariable *string `pulumi:"tunnelInterfacePortHopVariable"`
	// CTS SGT Propagation configuration - Default value: `false`
	TunnelInterfacePropagateSgt *bool `pulumi:"tunnelInterfacePropagateSgt"`
	// Variable name
	TunnelInterfacePropagateSgtVariable *string `pulumi:"tunnelInterfacePropagateSgtVariable"`
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss *int `pulumi:"tunnelInterfaceTunnelTcpMss"`
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable *string `pulumi:"tunnelInterfaceTunnelTcpMssVariable"`
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer *bool `pulumi:"tunnelInterfaceVbondAsStunServer"`
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable *string `pulumi:"tunnelInterfaceVbondAsStunServerVariable"`
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference *int `pulumi:"tunnelInterfaceVmanageConnectionPreference"`
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable *string `pulumi:"tunnelInterfaceVmanageConnectionPreferenceVariable"`
	// Set tunnel QoS mode - Choices: `hub`, `spoke`
	TunnelQosMode *string `pulumi:"tunnelQosMode"`
	// Variable name
	TunnelQosModeVariable *string `pulumi:"tunnelQosModeVariable"`
	// Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
	UdpTimeout *int `pulumi:"udpTimeout"`
	// Variable name
	UdpTimeoutVariable *string `pulumi:"udpTimeoutVariable"`
}

// The set of arguments for constructing a CiscoVpnInterfaceFeatureTemplate resource.
type CiscoVpnInterfaceFeatureTemplateArgs struct {
	// Apply ACL
	AccessLists CiscoVpnInterfaceFeatureTemplateAccessListArrayInput
	// Assign IPv4 address
	Address pulumi.StringPtrInput
	// Variable name
	AddressVariable pulumi.StringPtrInput
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
	ArpTimeout pulumi.IntPtrInput
	// Variable name
	ArpTimeoutVariable pulumi.StringPtrInput
	// Interface auto detect bandwidth - Default value: `false`
	AutoBandwidthDetect pulumi.BoolPtrInput
	// Variable name
	AutoBandwidthDetectVariable pulumi.StringPtrInput
	// Link autonegotiation
	Autonegotiate pulumi.BoolPtrInput
	// Variable name
	AutonegotiateVariable pulumi.StringPtrInput
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthDownstream pulumi.IntPtrInput
	// Variable name
	BandwidthDownstreamVariable pulumi.StringPtrInput
	// Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	BandwidthUpstream pulumi.IntPtrInput
	// Variable name
	BandwidthUpstreamVariable pulumi.StringPtrInput
	// Block packets originating from IP address that is not from this source - Default value: `false`
	BlockNonSourceIp pulumi.BoolPtrInput
	// Variable name
	BlockNonSourceIpVariable pulumi.StringPtrInput
	// Enable core region - Choices: `core`, `core-shared` - Default value: `core`
	CoreRegion pulumi.StringPtrInput
	// Variable name
	CoreRegionVariable pulumi.StringPtrInput
	// The description of the feature template
	Description pulumi.StringInput
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Enable DHCP - Default value: `false`
	Dhcp pulumi.BoolPtrInput
	// Set administrative distance for DHCP default route - Range: `1`-`65536` - Default value: `1`
	DhcpDistance pulumi.IntPtrInput
	// Variable name
	DhcpDistanceVariable pulumi.StringPtrInput
	// Variable name
	DhcpVariable pulumi.StringPtrInput
	// Enable DHCPv6 - Default value: `false`
	Dhcpv6 pulumi.BoolPtrInput
	// Variable name
	Dhcpv6Variable pulumi.StringPtrInput
	// Duplex mode - Choices: `full`, `half`, `auto`
	Duplex pulumi.StringPtrInput
	// Variable name
	DuplexVariable pulumi.StringPtrInput
	// Enable core region - Default value: `false`
	EnableCoreRegion pulumi.BoolPtrInput
	// Enables the interface for CTS SGT authorization and forwarding. - Default value: `false`
	EnableSgt pulumi.BoolPtrInput
	// Extend remote TLOC over a GRE tunnel to a local WAN interface
	GreTunnelSourceIp pulumi.StringPtrInput
	// Variable name
	GreTunnelSourceIpVariable pulumi.StringPtrInput
	// Extend remote TLOC over a GRE tunnel to a local WAN interface
	GreTunnelXconnect pulumi.StringPtrInput
	// Variable name
	GreTunnelXconnectVariable pulumi.StringPtrInput
	// Set this option to disable the icmp/icmpv6 redirect packets - Default value: `true`
	IcmpRedirectDisable pulumi.BoolPtrInput
	// Variable name
	IcmpRedirectDisableVariable pulumi.StringPtrInput
	// Interface description
	InterfaceDescription pulumi.StringPtrInput
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrInput
	// Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
	// Default value: `1500`
	InterfaceMtu pulumi.IntPtrInput
	// Variable name
	InterfaceMtuVariable pulumi.StringPtrInput
	// Interface name: ge0/<0-..> or ge0/<0-..>.vlanid or irb<bridgeid:1-63> or loopback<string> or natpool-<1..31> when
	// present
	InterfaceName pulumi.StringPtrInput
	// Variable name
	InterfaceNameVariable pulumi.StringPtrInput
	// IP Directed-Broadcast - Default value: `false`
	IpDirectedBroadcast pulumi.BoolPtrInput
	// Variable name
	IpDirectedBroadcastVariable pulumi.StringPtrInput
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
	// <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	// Iperf server for auto bandwidth detect
	IperfServer pulumi.StringPtrInput
	// Variable name
	IperfServerVariable pulumi.StringPtrInput
	// Variable name
	Ipv4DhcpHelperVariable pulumi.StringPtrInput
	// List of DHCP IPv4 helper addresses
	Ipv4DhcpHelpers pulumi.StringArrayInput
	// Assign secondary IP addresses
	Ipv4SecondaryAddresses CiscoVpnInterfaceFeatureTemplateIpv4SecondaryAddressArrayInput
	// Enable VRRP
	Ipv4Vrrps CiscoVpnInterfaceFeatureTemplateIpv4VrrpArrayInput
	// Apply IPv6 access list
	Ipv6AccessLists CiscoVpnInterfaceFeatureTemplateIpv6AccessListArrayInput
	// Assign IPv6 address
	Ipv6Address pulumi.StringPtrInput
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrInput
	// DHCPv6 Helper
	Ipv6DhcpHelpers CiscoVpnInterfaceFeatureTemplateIpv6DhcpHelperArrayInput
	// NAT64 on this interface - Default value: `false`
	Ipv6Nat pulumi.BoolPtrInput
	// Variable name
	Ipv6NatVariable pulumi.StringPtrInput
	// Assign secondary IPv6 addresses
	Ipv6SecondaryAddresses CiscoVpnInterfaceFeatureTemplateIpv6SecondaryAddressArrayInput
	// Enable VRRP
	Ipv6Vrrps CiscoVpnInterfaceFeatureTemplateIpv6VrrpArrayInput
	// Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
	LoadInterval pulumi.IntPtrInput
	// Variable name
	LoadIntervalVariable pulumi.StringPtrInput
	// Set MAC-layer address
	MacAddress pulumi.StringPtrInput
	// Variable name
	MacAddressVariable pulumi.StringPtrInput
	// Media type - Choices: `auto-select`, `rj45`, `sfp`
	MediaType pulumi.StringPtrInput
	// Variable name
	MediaTypeVariable pulumi.StringPtrInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Network Address Translation on this interface - Default value: `false`
	Nat pulumi.BoolPtrInput
	// NAT64 on this interface - Default value: `false`
	Nat64Interface pulumi.BoolPtrInput
	// NAT66 on this interface - Default value: `false`
	Nat66Interface pulumi.BoolPtrInput
	// Configure NAT Inside Loopback Interface
	NatInsideSourceLoopbackInterface pulumi.StringPtrInput
	// Variable name
	NatInsideSourceLoopbackInterfaceVariable pulumi.StringPtrInput
	// Enable port translation(PAT) - Default value: `true`
	NatOverload pulumi.BoolPtrInput
	// Variable name
	NatOverloadVariable pulumi.StringPtrInput
	// Ending IP address of NAT Pool Prefix Length
	NatPoolPrefixLength pulumi.IntPtrInput
	// Variable name
	NatPoolPrefixLengthVariable pulumi.StringPtrInput
	// Ending IP address of NAT pool range
	NatPoolRangeEnd pulumi.StringPtrInput
	// Variable name
	NatPoolRangeEndVariable pulumi.StringPtrInput
	// Starting IP address of NAT pool range
	NatPoolRangeStart pulumi.StringPtrInput
	// Variable name
	NatPoolRangeStartVariable pulumi.StringPtrInput
	// NAT type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
	NatType pulumi.StringPtrInput
	// Variable name
	NatTypeVariable pulumi.StringPtrInput
	// Configure interface as Power-over-Ethernet source - Default value: `false`
	Poe pulumi.BoolPtrInput
	// Variable name
	PoeVariable pulumi.StringPtrInput
	// Enable/Disable CTS SGT propagation on an interface. - Default value: `true`
	PropagateSgt pulumi.BoolPtrInput
	// Adaptive QoS default downstream bandwidth - Range: `8`-`100000000`
	QosAdaptiveBandwidthDownstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveBandwidthDownstreamVariable pulumi.StringPtrInput
	// Adaptive QoS default upstream bandwidth - Range: `8`-`100000000`
	QosAdaptiveBandwidthUpstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveBandwidthUpstreamVariable pulumi.StringPtrInput
	// Downstream max bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMaxDownstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveMaxDownstreamVariable pulumi.StringPtrInput
	// Upstream max bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMaxUpstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveMaxUpstreamVariable pulumi.StringPtrInput
	// Downstream min bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMinDownstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveMinDownstreamVariable pulumi.StringPtrInput
	// Upstream min bandwidth limit - Range: `8`-`100000000`
	QosAdaptiveMinUpstream pulumi.IntPtrInput
	// Variable name
	QosAdaptiveMinUpstreamVariable pulumi.StringPtrInput
	// Periodic timer for adaptive QoS in minutes - Range: `1`-`720` - Default value: `15`
	QosAdaptivePeriod pulumi.IntPtrInput
	// Variable name
	QosAdaptivePeriodVariable pulumi.StringPtrInput
	// Name of QoS map
	QosMap pulumi.StringPtrInput
	// Variable name
	QosMapVariable pulumi.StringPtrInput
	// Name of VPN QoS map
	QosMapVpn pulumi.StringPtrInput
	// Variable name
	QosMapVpnVariable pulumi.StringPtrInput
	// Name of rewrite rule
	RewriteRuleName pulumi.StringPtrInput
	// Variable name
	RewriteRuleNameVariable pulumi.StringPtrInput
	// Enable secondary region - Choices: `off`, `secondary-only`, `secondary-shared` - Default value: `off`
	SecondaryRegion pulumi.StringPtrInput
	// Variable name
	SecondaryRegionVariable pulumi.StringPtrInput
	// Enables the interface for CTS SGT authorization and forwarding. - Default value: `false`
	SgtEnforcement pulumi.BoolPtrInput
	// SGT value between 2 and 65519. - Range: `2`-`65519`
	SgtEnforcementSgt pulumi.IntPtrInput
	// Variable name
	SgtEnforcementSgtVariable pulumi.StringPtrInput
	// 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
	ShapingRate pulumi.IntPtrInput
	// Variable name
	ShapingRateVariable pulumi.StringPtrInput
	// Administrative state - Default value: `true`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed pulumi.StringPtrInput
	// Variable name
	SpeedVariable pulumi.StringPtrInput
	// Configure static ARP entries
	StaticArps CiscoVpnInterfaceFeatureTemplateStaticArpArrayInput
	// static NAT
	StaticNat66Entries CiscoVpnInterfaceFeatureTemplateStaticNat66EntryArrayInput
	// Configure static NAT entries
	StaticNatEntries CiscoVpnInterfaceFeatureTemplateStaticNatEntryArrayInput
	// Configure Port Forward entries
	StaticPortForwardEntries CiscoVpnInterfaceFeatureTemplateStaticPortForwardEntryArrayInput
	// SGT value between 2 and 65519. - Range: `2`-`65519`
	StaticSgt pulumi.IntPtrInput
	// Indicates that the interface is trustworthy for CTS. - Default value: `false`
	StaticSgtTrusted pulumi.BoolPtrInput
	// Variable name
	StaticSgtVariable pulumi.StringPtrInput
	// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TcpMssAdjust pulumi.IntPtrInput
	// Variable name
	TcpMssAdjustVariable pulumi.StringPtrInput
	// Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
	TcpTimeout pulumi.IntPtrInput
	// Variable name
	TcpTimeoutVariable pulumi.StringPtrInput
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension pulumi.StringPtrInput
	// Variable name
	TlocExtensionVariable pulumi.StringPtrInput
	// Variable name
	TrackerVariable pulumi.StringPtrInput
	// Enable tracker for this interface
	Trackers pulumi.StringArrayInput
	// Tunnels Bandwidth Percent - Range: `1`-`99` - Default value: `50`
	TunnelBandwidth pulumi.IntPtrInput
	// Variable name
	TunnelBandwidthVariable pulumi.StringPtrInput
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowAllVariable pulumi.StringPtrInput
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowBgpVariable pulumi.StringPtrInput
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowDhcpVariable pulumi.StringPtrInput
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDns pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowDnsVariable pulumi.StringPtrInput
	// Allow/Deny Https - Default value: `true`
	TunnelInterfaceAllowHttps pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowHttpsVariable pulumi.StringPtrInput
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowIcmpVariable pulumi.StringPtrInput
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowNetconfVariable pulumi.StringPtrInput
	// Allow/Deny NTP - Default value: `false`
	TunnelInterfaceAllowNtp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowNtpVariable pulumi.StringPtrInput
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowOspfVariable pulumi.StringPtrInput
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowSnmpVariable pulumi.StringPtrInput
	// Allow/Deny SSH - Default value: `false`
	TunnelInterfaceAllowSsh pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowSshVariable pulumi.StringPtrInput
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowStunVariable pulumi.StringPtrInput
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable pulumi.StringPtrInput
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceBorderVariable pulumi.StringPtrInput
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceCarrierVariable pulumi.StringPtrInput
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceClearDontFragmentVariable pulumi.StringPtrInput
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `default`
	TunnelInterfaceColor pulumi.StringPtrInput
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceColorRestrict pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceColorRestrictVariable pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceColorVariable pulumi.StringPtrInput
	// Allow Control Connection - Default value: `true`
	TunnelInterfaceControlConnections pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceControlConnectionsVariable pulumi.StringPtrInput
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations CiscoVpnInterfaceFeatureTemplateTunnelInterfaceEncapsulationArrayInput
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable pulumi.StringPtrInput
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists pulumi.IntArrayInput
	// Extend the TLOC to a remote node over GRE tunnel
	TunnelInterfaceGreTunnelDestinationIp pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceGreTunnelDestinationIpVariable pulumi.StringPtrInput
	// List of groups
	TunnelInterfaceGroups pulumi.IntArrayInput
	// Variable name
	TunnelInterfaceGroupsVariable pulumi.StringPtrInput
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceHelloIntervalVariable pulumi.StringPtrInput
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceHelloToleranceVariable pulumi.StringPtrInput
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceLastResortCircuitVariable pulumi.StringPtrInput
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable pulumi.StringPtrInput
	// Set the maximum number of control connections for this TLOC - Range: `0`-`100`
	TunnelInterfaceMaxControlConnections pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable pulumi.StringPtrInput
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable pulumi.StringPtrInput
	// Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
	TunnelInterfaceNetworkBroadcast pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable pulumi.StringPtrInput
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop pulumi.BoolPtrInput
	// Variable name
	TunnelInterfacePortHopVariable pulumi.StringPtrInput
	// CTS SGT Propagation configuration - Default value: `false`
	TunnelInterfacePropagateSgt pulumi.BoolPtrInput
	// Variable name
	TunnelInterfacePropagateSgtVariable pulumi.StringPtrInput
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable pulumi.StringPtrInput
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable pulumi.StringPtrInput
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable pulumi.StringPtrInput
	// Set tunnel QoS mode - Choices: `hub`, `spoke`
	TunnelQosMode pulumi.StringPtrInput
	// Variable name
	TunnelQosModeVariable pulumi.StringPtrInput
	// Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
	UdpTimeout pulumi.IntPtrInput
	// Variable name
	UdpTimeoutVariable pulumi.StringPtrInput
}

func (CiscoVpnInterfaceFeatureTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ciscoVpnInterfaceFeatureTemplateArgs)(nil)).Elem()
}

type CiscoVpnInterfaceFeatureTemplateInput interface {
	pulumi.Input

	ToCiscoVpnInterfaceFeatureTemplateOutput() CiscoVpnInterfaceFeatureTemplateOutput
	ToCiscoVpnInterfaceFeatureTemplateOutputWithContext(ctx context.Context) CiscoVpnInterfaceFeatureTemplateOutput
}

func (*CiscoVpnInterfaceFeatureTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**CiscoVpnInterfaceFeatureTemplate)(nil)).Elem()
}

func (i *CiscoVpnInterfaceFeatureTemplate) ToCiscoVpnInterfaceFeatureTemplateOutput() CiscoVpnInterfaceFeatureTemplateOutput {
	return i.ToCiscoVpnInterfaceFeatureTemplateOutputWithContext(context.Background())
}

func (i *CiscoVpnInterfaceFeatureTemplate) ToCiscoVpnInterfaceFeatureTemplateOutputWithContext(ctx context.Context) CiscoVpnInterfaceFeatureTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CiscoVpnInterfaceFeatureTemplateOutput)
}

// CiscoVpnInterfaceFeatureTemplateArrayInput is an input type that accepts CiscoVpnInterfaceFeatureTemplateArray and CiscoVpnInterfaceFeatureTemplateArrayOutput values.
// You can construct a concrete instance of `CiscoVpnInterfaceFeatureTemplateArrayInput` via:
//
//	CiscoVpnInterfaceFeatureTemplateArray{ CiscoVpnInterfaceFeatureTemplateArgs{...} }
type CiscoVpnInterfaceFeatureTemplateArrayInput interface {
	pulumi.Input

	ToCiscoVpnInterfaceFeatureTemplateArrayOutput() CiscoVpnInterfaceFeatureTemplateArrayOutput
	ToCiscoVpnInterfaceFeatureTemplateArrayOutputWithContext(context.Context) CiscoVpnInterfaceFeatureTemplateArrayOutput
}

type CiscoVpnInterfaceFeatureTemplateArray []CiscoVpnInterfaceFeatureTemplateInput

func (CiscoVpnInterfaceFeatureTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CiscoVpnInterfaceFeatureTemplate)(nil)).Elem()
}

func (i CiscoVpnInterfaceFeatureTemplateArray) ToCiscoVpnInterfaceFeatureTemplateArrayOutput() CiscoVpnInterfaceFeatureTemplateArrayOutput {
	return i.ToCiscoVpnInterfaceFeatureTemplateArrayOutputWithContext(context.Background())
}

func (i CiscoVpnInterfaceFeatureTemplateArray) ToCiscoVpnInterfaceFeatureTemplateArrayOutputWithContext(ctx context.Context) CiscoVpnInterfaceFeatureTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CiscoVpnInterfaceFeatureTemplateArrayOutput)
}

// CiscoVpnInterfaceFeatureTemplateMapInput is an input type that accepts CiscoVpnInterfaceFeatureTemplateMap and CiscoVpnInterfaceFeatureTemplateMapOutput values.
// You can construct a concrete instance of `CiscoVpnInterfaceFeatureTemplateMapInput` via:
//
//	CiscoVpnInterfaceFeatureTemplateMap{ "key": CiscoVpnInterfaceFeatureTemplateArgs{...} }
type CiscoVpnInterfaceFeatureTemplateMapInput interface {
	pulumi.Input

	ToCiscoVpnInterfaceFeatureTemplateMapOutput() CiscoVpnInterfaceFeatureTemplateMapOutput
	ToCiscoVpnInterfaceFeatureTemplateMapOutputWithContext(context.Context) CiscoVpnInterfaceFeatureTemplateMapOutput
}

type CiscoVpnInterfaceFeatureTemplateMap map[string]CiscoVpnInterfaceFeatureTemplateInput

func (CiscoVpnInterfaceFeatureTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CiscoVpnInterfaceFeatureTemplate)(nil)).Elem()
}

func (i CiscoVpnInterfaceFeatureTemplateMap) ToCiscoVpnInterfaceFeatureTemplateMapOutput() CiscoVpnInterfaceFeatureTemplateMapOutput {
	return i.ToCiscoVpnInterfaceFeatureTemplateMapOutputWithContext(context.Background())
}

func (i CiscoVpnInterfaceFeatureTemplateMap) ToCiscoVpnInterfaceFeatureTemplateMapOutputWithContext(ctx context.Context) CiscoVpnInterfaceFeatureTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CiscoVpnInterfaceFeatureTemplateMapOutput)
}

type CiscoVpnInterfaceFeatureTemplateOutput struct{ *pulumi.OutputState }

func (CiscoVpnInterfaceFeatureTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CiscoVpnInterfaceFeatureTemplate)(nil)).Elem()
}

func (o CiscoVpnInterfaceFeatureTemplateOutput) ToCiscoVpnInterfaceFeatureTemplateOutput() CiscoVpnInterfaceFeatureTemplateOutput {
	return o
}

func (o CiscoVpnInterfaceFeatureTemplateOutput) ToCiscoVpnInterfaceFeatureTemplateOutputWithContext(ctx context.Context) CiscoVpnInterfaceFeatureTemplateOutput {
	return o
}

// Apply ACL
func (o CiscoVpnInterfaceFeatureTemplateOutput) AccessLists() CiscoVpnInterfaceFeatureTemplateAccessListArrayOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) CiscoVpnInterfaceFeatureTemplateAccessListArrayOutput {
		return v.AccessLists
	}).(CiscoVpnInterfaceFeatureTemplateAccessListArrayOutput)
}

// Assign IPv4 address
func (o CiscoVpnInterfaceFeatureTemplateOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.Address }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.AddressVariable }).(pulumi.StringPtrOutput)
}

// Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
func (o CiscoVpnInterfaceFeatureTemplateOutput) ArpTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.ArpTimeout }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) ArpTimeoutVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.ArpTimeoutVariable }).(pulumi.StringPtrOutput)
}

// Interface auto detect bandwidth - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) AutoBandwidthDetect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.AutoBandwidthDetect }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) AutoBandwidthDetectVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.AutoBandwidthDetectVariable }).(pulumi.StringPtrOutput)
}

// Link autonegotiation
func (o CiscoVpnInterfaceFeatureTemplateOutput) Autonegotiate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.Autonegotiate }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) AutonegotiateVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.AutonegotiateVariable }).(pulumi.StringPtrOutput)
}

// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
func (o CiscoVpnInterfaceFeatureTemplateOutput) BandwidthDownstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.BandwidthDownstream }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) BandwidthDownstreamVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.BandwidthDownstreamVariable }).(pulumi.StringPtrOutput)
}

// Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
func (o CiscoVpnInterfaceFeatureTemplateOutput) BandwidthUpstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.BandwidthUpstream }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) BandwidthUpstreamVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.BandwidthUpstreamVariable }).(pulumi.StringPtrOutput)
}

// Block packets originating from IP address that is not from this source - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) BlockNonSourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.BlockNonSourceIp }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) BlockNonSourceIpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.BlockNonSourceIpVariable }).(pulumi.StringPtrOutput)
}

// Enable core region - Choices: `core`, `core-shared` - Default value: `core`
func (o CiscoVpnInterfaceFeatureTemplateOutput) CoreRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.CoreRegion }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) CoreRegionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.CoreRegionVariable }).(pulumi.StringPtrOutput)
}

// The description of the feature template
func (o CiscoVpnInterfaceFeatureTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
func (o CiscoVpnInterfaceFeatureTemplateOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringArrayOutput { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Enable DHCP - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) Dhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.Dhcp }).(pulumi.BoolPtrOutput)
}

// Set administrative distance for DHCP default route - Range: `1`-`65536` - Default value: `1`
func (o CiscoVpnInterfaceFeatureTemplateOutput) DhcpDistance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.DhcpDistance }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) DhcpDistanceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.DhcpDistanceVariable }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) DhcpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.DhcpVariable }).(pulumi.StringPtrOutput)
}

// Enable DHCPv6 - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) Dhcpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.Dhcpv6 }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) Dhcpv6Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.Dhcpv6Variable }).(pulumi.StringPtrOutput)
}

// Duplex mode - Choices: `full`, `half`, `auto`
func (o CiscoVpnInterfaceFeatureTemplateOutput) Duplex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.Duplex }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) DuplexVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.DuplexVariable }).(pulumi.StringPtrOutput)
}

// Enable core region - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) EnableCoreRegion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.EnableCoreRegion }).(pulumi.BoolPtrOutput)
}

// Enables the interface for CTS SGT authorization and forwarding. - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) EnableSgt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.EnableSgt }).(pulumi.BoolPtrOutput)
}

// Extend remote TLOC over a GRE tunnel to a local WAN interface
func (o CiscoVpnInterfaceFeatureTemplateOutput) GreTunnelSourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.GreTunnelSourceIp }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) GreTunnelSourceIpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.GreTunnelSourceIpVariable }).(pulumi.StringPtrOutput)
}

// Extend remote TLOC over a GRE tunnel to a local WAN interface
func (o CiscoVpnInterfaceFeatureTemplateOutput) GreTunnelXconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.GreTunnelXconnect }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) GreTunnelXconnectVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.GreTunnelXconnectVariable }).(pulumi.StringPtrOutput)
}

// Set this option to disable the icmp/icmpv6 redirect packets - Default value: `true`
func (o CiscoVpnInterfaceFeatureTemplateOutput) IcmpRedirectDisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.IcmpRedirectDisable }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) IcmpRedirectDisableVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.IcmpRedirectDisableVariable }).(pulumi.StringPtrOutput)
}

// Interface description
func (o CiscoVpnInterfaceFeatureTemplateOutput) InterfaceDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.InterfaceDescription }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) InterfaceDescriptionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.InterfaceDescriptionVariable
	}).(pulumi.StringPtrOutput)
}

// Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
// Default value: `1500`
func (o CiscoVpnInterfaceFeatureTemplateOutput) InterfaceMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.InterfaceMtu }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) InterfaceMtuVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.InterfaceMtuVariable }).(pulumi.StringPtrOutput)
}

// Interface name: ge0/<0-..> or ge0/<0-..>.vlanid or irb<bridgeid:1-63> or loopback<string> or natpool-<1..31> when
// present
func (o CiscoVpnInterfaceFeatureTemplateOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) InterfaceNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.InterfaceNameVariable }).(pulumi.StringPtrOutput)
}

// IP Directed-Broadcast - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) IpDirectedBroadcast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.IpDirectedBroadcast }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) IpDirectedBroadcastVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.IpDirectedBroadcastVariable }).(pulumi.StringPtrOutput)
}

// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
// <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
func (o CiscoVpnInterfaceFeatureTemplateOutput) IpMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.IpMtu }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) IpMtuVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.IpMtuVariable }).(pulumi.StringPtrOutput)
}

// Iperf server for auto bandwidth detect
func (o CiscoVpnInterfaceFeatureTemplateOutput) IperfServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.IperfServer }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) IperfServerVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.IperfServerVariable }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) Ipv4DhcpHelperVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.Ipv4DhcpHelperVariable }).(pulumi.StringPtrOutput)
}

// List of DHCP IPv4 helper addresses
func (o CiscoVpnInterfaceFeatureTemplateOutput) Ipv4DhcpHelpers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringArrayOutput { return v.Ipv4DhcpHelpers }).(pulumi.StringArrayOutput)
}

// Assign secondary IP addresses
func (o CiscoVpnInterfaceFeatureTemplateOutput) Ipv4SecondaryAddresses() CiscoVpnInterfaceFeatureTemplateIpv4SecondaryAddressArrayOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) CiscoVpnInterfaceFeatureTemplateIpv4SecondaryAddressArrayOutput {
		return v.Ipv4SecondaryAddresses
	}).(CiscoVpnInterfaceFeatureTemplateIpv4SecondaryAddressArrayOutput)
}

// Enable VRRP
func (o CiscoVpnInterfaceFeatureTemplateOutput) Ipv4Vrrps() CiscoVpnInterfaceFeatureTemplateIpv4VrrpArrayOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) CiscoVpnInterfaceFeatureTemplateIpv4VrrpArrayOutput {
		return v.Ipv4Vrrps
	}).(CiscoVpnInterfaceFeatureTemplateIpv4VrrpArrayOutput)
}

// Apply IPv6 access list
func (o CiscoVpnInterfaceFeatureTemplateOutput) Ipv6AccessLists() CiscoVpnInterfaceFeatureTemplateIpv6AccessListArrayOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) CiscoVpnInterfaceFeatureTemplateIpv6AccessListArrayOutput {
		return v.Ipv6AccessLists
	}).(CiscoVpnInterfaceFeatureTemplateIpv6AccessListArrayOutput)
}

// Assign IPv6 address
func (o CiscoVpnInterfaceFeatureTemplateOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) Ipv6AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.Ipv6AddressVariable }).(pulumi.StringPtrOutput)
}

// DHCPv6 Helper
func (o CiscoVpnInterfaceFeatureTemplateOutput) Ipv6DhcpHelpers() CiscoVpnInterfaceFeatureTemplateIpv6DhcpHelperArrayOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) CiscoVpnInterfaceFeatureTemplateIpv6DhcpHelperArrayOutput {
		return v.Ipv6DhcpHelpers
	}).(CiscoVpnInterfaceFeatureTemplateIpv6DhcpHelperArrayOutput)
}

// NAT64 on this interface - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) Ipv6Nat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.Ipv6Nat }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) Ipv6NatVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.Ipv6NatVariable }).(pulumi.StringPtrOutput)
}

// Assign secondary IPv6 addresses
func (o CiscoVpnInterfaceFeatureTemplateOutput) Ipv6SecondaryAddresses() CiscoVpnInterfaceFeatureTemplateIpv6SecondaryAddressArrayOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) CiscoVpnInterfaceFeatureTemplateIpv6SecondaryAddressArrayOutput {
		return v.Ipv6SecondaryAddresses
	}).(CiscoVpnInterfaceFeatureTemplateIpv6SecondaryAddressArrayOutput)
}

// Enable VRRP
func (o CiscoVpnInterfaceFeatureTemplateOutput) Ipv6Vrrps() CiscoVpnInterfaceFeatureTemplateIpv6VrrpArrayOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) CiscoVpnInterfaceFeatureTemplateIpv6VrrpArrayOutput {
		return v.Ipv6Vrrps
	}).(CiscoVpnInterfaceFeatureTemplateIpv6VrrpArrayOutput)
}

// Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
func (o CiscoVpnInterfaceFeatureTemplateOutput) LoadInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.LoadInterval }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) LoadIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.LoadIntervalVariable }).(pulumi.StringPtrOutput)
}

// Set MAC-layer address
func (o CiscoVpnInterfaceFeatureTemplateOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) MacAddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.MacAddressVariable }).(pulumi.StringPtrOutput)
}

// Media type - Choices: `auto-select`, `rj45`, `sfp`
func (o CiscoVpnInterfaceFeatureTemplateOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.MediaType }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) MediaTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.MediaTypeVariable }).(pulumi.StringPtrOutput)
}

// The name of the feature template
func (o CiscoVpnInterfaceFeatureTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Network Address Translation on this interface - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) Nat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.Nat }).(pulumi.BoolPtrOutput)
}

// NAT64 on this interface - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) Nat64Interface() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.Nat64Interface }).(pulumi.BoolPtrOutput)
}

// NAT66 on this interface - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) Nat66Interface() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.Nat66Interface }).(pulumi.BoolPtrOutput)
}

// Configure NAT Inside Loopback Interface
func (o CiscoVpnInterfaceFeatureTemplateOutput) NatInsideSourceLoopbackInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.NatInsideSourceLoopbackInterface
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) NatInsideSourceLoopbackInterfaceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.NatInsideSourceLoopbackInterfaceVariable
	}).(pulumi.StringPtrOutput)
}

// Enable port translation(PAT) - Default value: `true`
func (o CiscoVpnInterfaceFeatureTemplateOutput) NatOverload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.NatOverload }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) NatOverloadVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.NatOverloadVariable }).(pulumi.StringPtrOutput)
}

// Ending IP address of NAT Pool Prefix Length
func (o CiscoVpnInterfaceFeatureTemplateOutput) NatPoolPrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.NatPoolPrefixLength }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) NatPoolPrefixLengthVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.NatPoolPrefixLengthVariable }).(pulumi.StringPtrOutput)
}

// Ending IP address of NAT pool range
func (o CiscoVpnInterfaceFeatureTemplateOutput) NatPoolRangeEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.NatPoolRangeEnd }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) NatPoolRangeEndVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.NatPoolRangeEndVariable }).(pulumi.StringPtrOutput)
}

// Starting IP address of NAT pool range
func (o CiscoVpnInterfaceFeatureTemplateOutput) NatPoolRangeStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.NatPoolRangeStart }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) NatPoolRangeStartVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.NatPoolRangeStartVariable }).(pulumi.StringPtrOutput)
}

// NAT type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
func (o CiscoVpnInterfaceFeatureTemplateOutput) NatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.NatType }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) NatTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.NatTypeVariable }).(pulumi.StringPtrOutput)
}

// Configure interface as Power-over-Ethernet source - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) Poe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.Poe }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) PoeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.PoeVariable }).(pulumi.StringPtrOutput)
}

// Enable/Disable CTS SGT propagation on an interface. - Default value: `true`
func (o CiscoVpnInterfaceFeatureTemplateOutput) PropagateSgt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.PropagateSgt }).(pulumi.BoolPtrOutput)
}

// Adaptive QoS default downstream bandwidth - Range: `8`-`100000000`
func (o CiscoVpnInterfaceFeatureTemplateOutput) QosAdaptiveBandwidthDownstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.QosAdaptiveBandwidthDownstream }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) QosAdaptiveBandwidthDownstreamVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.QosAdaptiveBandwidthDownstreamVariable
	}).(pulumi.StringPtrOutput)
}

// Adaptive QoS default upstream bandwidth - Range: `8`-`100000000`
func (o CiscoVpnInterfaceFeatureTemplateOutput) QosAdaptiveBandwidthUpstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.QosAdaptiveBandwidthUpstream }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) QosAdaptiveBandwidthUpstreamVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.QosAdaptiveBandwidthUpstreamVariable
	}).(pulumi.StringPtrOutput)
}

// Downstream max bandwidth limit - Range: `8`-`100000000`
func (o CiscoVpnInterfaceFeatureTemplateOutput) QosAdaptiveMaxDownstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.QosAdaptiveMaxDownstream }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) QosAdaptiveMaxDownstreamVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.QosAdaptiveMaxDownstreamVariable
	}).(pulumi.StringPtrOutput)
}

// Upstream max bandwidth limit - Range: `8`-`100000000`
func (o CiscoVpnInterfaceFeatureTemplateOutput) QosAdaptiveMaxUpstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.QosAdaptiveMaxUpstream }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) QosAdaptiveMaxUpstreamVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.QosAdaptiveMaxUpstreamVariable
	}).(pulumi.StringPtrOutput)
}

// Downstream min bandwidth limit - Range: `8`-`100000000`
func (o CiscoVpnInterfaceFeatureTemplateOutput) QosAdaptiveMinDownstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.QosAdaptiveMinDownstream }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) QosAdaptiveMinDownstreamVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.QosAdaptiveMinDownstreamVariable
	}).(pulumi.StringPtrOutput)
}

// Upstream min bandwidth limit - Range: `8`-`100000000`
func (o CiscoVpnInterfaceFeatureTemplateOutput) QosAdaptiveMinUpstream() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.QosAdaptiveMinUpstream }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) QosAdaptiveMinUpstreamVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.QosAdaptiveMinUpstreamVariable
	}).(pulumi.StringPtrOutput)
}

// Periodic timer for adaptive QoS in minutes - Range: `1`-`720` - Default value: `15`
func (o CiscoVpnInterfaceFeatureTemplateOutput) QosAdaptivePeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.QosAdaptivePeriod }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) QosAdaptivePeriodVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.QosAdaptivePeriodVariable }).(pulumi.StringPtrOutput)
}

// Name of QoS map
func (o CiscoVpnInterfaceFeatureTemplateOutput) QosMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.QosMap }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) QosMapVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.QosMapVariable }).(pulumi.StringPtrOutput)
}

// Name of VPN QoS map
func (o CiscoVpnInterfaceFeatureTemplateOutput) QosMapVpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.QosMapVpn }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) QosMapVpnVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.QosMapVpnVariable }).(pulumi.StringPtrOutput)
}

// Name of rewrite rule
func (o CiscoVpnInterfaceFeatureTemplateOutput) RewriteRuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.RewriteRuleName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) RewriteRuleNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.RewriteRuleNameVariable }).(pulumi.StringPtrOutput)
}

// Enable secondary region - Choices: `off`, `secondary-only`, `secondary-shared` - Default value: `off`
func (o CiscoVpnInterfaceFeatureTemplateOutput) SecondaryRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.SecondaryRegion }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) SecondaryRegionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.SecondaryRegionVariable }).(pulumi.StringPtrOutput)
}

// Enables the interface for CTS SGT authorization and forwarding. - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) SgtEnforcement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.SgtEnforcement }).(pulumi.BoolPtrOutput)
}

// SGT value between 2 and 65519. - Range: `2`-`65519`
func (o CiscoVpnInterfaceFeatureTemplateOutput) SgtEnforcementSgt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.SgtEnforcementSgt }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) SgtEnforcementSgtVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.SgtEnforcementSgtVariable }).(pulumi.StringPtrOutput)
}

// 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
func (o CiscoVpnInterfaceFeatureTemplateOutput) ShapingRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.ShapingRate }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) ShapingRateVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.ShapingRateVariable }).(pulumi.StringPtrOutput)
}

// Administrative state - Default value: `true`
func (o CiscoVpnInterfaceFeatureTemplateOutput) Shutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.Shutdown }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) ShutdownVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.ShutdownVariable }).(pulumi.StringPtrOutput)
}

// Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
func (o CiscoVpnInterfaceFeatureTemplateOutput) Speed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.Speed }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) SpeedVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.SpeedVariable }).(pulumi.StringPtrOutput)
}

// Configure static ARP entries
func (o CiscoVpnInterfaceFeatureTemplateOutput) StaticArps() CiscoVpnInterfaceFeatureTemplateStaticArpArrayOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) CiscoVpnInterfaceFeatureTemplateStaticArpArrayOutput {
		return v.StaticArps
	}).(CiscoVpnInterfaceFeatureTemplateStaticArpArrayOutput)
}

// static NAT
func (o CiscoVpnInterfaceFeatureTemplateOutput) StaticNat66Entries() CiscoVpnInterfaceFeatureTemplateStaticNat66EntryArrayOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) CiscoVpnInterfaceFeatureTemplateStaticNat66EntryArrayOutput {
		return v.StaticNat66Entries
	}).(CiscoVpnInterfaceFeatureTemplateStaticNat66EntryArrayOutput)
}

// Configure static NAT entries
func (o CiscoVpnInterfaceFeatureTemplateOutput) StaticNatEntries() CiscoVpnInterfaceFeatureTemplateStaticNatEntryArrayOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) CiscoVpnInterfaceFeatureTemplateStaticNatEntryArrayOutput {
		return v.StaticNatEntries
	}).(CiscoVpnInterfaceFeatureTemplateStaticNatEntryArrayOutput)
}

// Configure Port Forward entries
func (o CiscoVpnInterfaceFeatureTemplateOutput) StaticPortForwardEntries() CiscoVpnInterfaceFeatureTemplateStaticPortForwardEntryArrayOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) CiscoVpnInterfaceFeatureTemplateStaticPortForwardEntryArrayOutput {
		return v.StaticPortForwardEntries
	}).(CiscoVpnInterfaceFeatureTemplateStaticPortForwardEntryArrayOutput)
}

// SGT value between 2 and 65519. - Range: `2`-`65519`
func (o CiscoVpnInterfaceFeatureTemplateOutput) StaticSgt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.StaticSgt }).(pulumi.IntPtrOutput)
}

// Indicates that the interface is trustworthy for CTS. - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) StaticSgtTrusted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.StaticSgtTrusted }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) StaticSgtVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.StaticSgtVariable }).(pulumi.StringPtrOutput)
}

// TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TcpMssAdjust() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.TcpMssAdjust }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TcpMssAdjustVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.TcpMssAdjustVariable }).(pulumi.StringPtrOutput)
}

// Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TcpTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.TcpTimeout }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TcpTimeoutVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.TcpTimeoutVariable }).(pulumi.StringPtrOutput)
}

// The template type
func (o CiscoVpnInterfaceFeatureTemplateOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringOutput { return v.TemplateType }).(pulumi.StringOutput)
}

// Extends a local TLOC to a remote node only for vpn 0
func (o CiscoVpnInterfaceFeatureTemplateOutput) TlocExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.TlocExtension }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TlocExtensionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.TlocExtensionVariable }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TrackerVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.TrackerVariable }).(pulumi.StringPtrOutput)
}

// Enable tracker for this interface
func (o CiscoVpnInterfaceFeatureTemplateOutput) Trackers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringArrayOutput { return v.Trackers }).(pulumi.StringArrayOutput)
}

// Tunnels Bandwidth Percent - Range: `1`-`99` - Default value: `50`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.TunnelBandwidth }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelBandwidthVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.TunnelBandwidthVariable }).(pulumi.StringPtrOutput)
}

// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowAll }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowAllVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowAllVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/deny BGP - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowBgp }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowBgpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowBgpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny DHCP - Default value: `true`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowDhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowDhcp }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowDhcpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowDhcpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny DNS - Default value: `true`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowDns() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowDns }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowDnsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowDnsVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny Https - Default value: `true`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowHttps }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowHttpsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowHttpsVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny ICMP - Default value: `true`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowIcmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowIcmp }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowIcmpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowIcmpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny NETCONF - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowNetconf() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowNetconf }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowNetconfVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowNetconfVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny NTP - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowNtp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowNtp }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowNtpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowNtpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny OSPF - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowOspf() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowOspf }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowOspfVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowOspfVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny SNMP - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowSnmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowSnmp }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowSnmpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowSnmpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny SSH - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowSsh() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowSsh }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowSshVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowSshVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny STUN - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowStun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowStun }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceAllowStunVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowStunVariable
	}).(pulumi.StringPtrOutput)
}

// Bind loopback tunnel interface to a physical interface
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceBindLoopbackTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceBindLoopbackTunnel
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceBindLoopbackTunnelVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceBindLoopbackTunnelVariable
	}).(pulumi.StringPtrOutput)
}

// Set TLOC as border TLOC - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceBorder() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceBorder }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceBorderVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceBorderVariable
	}).(pulumi.StringPtrOutput)
}

// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
// `carrier7`, `carrier8` - Default value: `default`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.TunnelInterfaceCarrier }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceCarrierVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceCarrierVariable
	}).(pulumi.StringPtrOutput)
}

// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceClearDontFragment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceClearDontFragment
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceClearDontFragmentVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceClearDontFragmentVariable
	}).(pulumi.StringPtrOutput)
}

// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
// `private4`, `private5`, `private6` - Default value: `default`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.TunnelInterfaceColor }).(pulumi.StringPtrOutput)
}

// Restrict this TLOC behavior - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceColorRestrict() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceColorRestrict }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceColorRestrictVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceColorRestrictVariable
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceColorVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceColorVariable
	}).(pulumi.StringPtrOutput)
}

// Allow Control Connection - Default value: `true`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceControlConnections() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceControlConnections
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceControlConnectionsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceControlConnectionsVariable
	}).(pulumi.StringPtrOutput)
}

// Encapsulation for TLOC
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceEncapsulations() CiscoVpnInterfaceFeatureTemplateTunnelInterfaceEncapsulationArrayOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) CiscoVpnInterfaceFeatureTemplateTunnelInterfaceEncapsulationArrayOutput {
		return v.TunnelInterfaceEncapsulations
	}).(CiscoVpnInterfaceFeatureTemplateTunnelInterfaceEncapsulationArrayOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceExcludeControllerGroupListVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceExcludeControllerGroupListVariable
	}).(pulumi.StringPtrOutput)
}

// Exclude the following controller groups defined in this list
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceExcludeControllerGroupLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntArrayOutput {
		return v.TunnelInterfaceExcludeControllerGroupLists
	}).(pulumi.IntArrayOutput)
}

// Extend the TLOC to a remote node over GRE tunnel
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceGreTunnelDestinationIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceGreTunnelDestinationIp
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceGreTunnelDestinationIpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceGreTunnelDestinationIpVariable
	}).(pulumi.StringPtrOutput)
}

// List of groups
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceGroups() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntArrayOutput { return v.TunnelInterfaceGroups }).(pulumi.IntArrayOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceGroupsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceGroupsVariable
	}).(pulumi.StringPtrOutput)
}

// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceHelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.TunnelInterfaceHelloInterval }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceHelloIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceHelloIntervalVariable
	}).(pulumi.StringPtrOutput)
}

// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceHelloTolerance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.TunnelInterfaceHelloTolerance }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceHelloToleranceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceHelloToleranceVariable
	}).(pulumi.StringPtrOutput)
}

// Set TLOC as last resort - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceLastResortCircuit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceLastResortCircuit
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceLastResortCircuitVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceLastResortCircuitVariable
	}).(pulumi.StringPtrOutput)
}

// Set the interface as a low-bandwidth circuit - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceLowBandwidthLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceLowBandwidthLink
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceLowBandwidthLinkVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceLowBandwidthLinkVariable
	}).(pulumi.StringPtrOutput)
}

// Set the maximum number of control connections for this TLOC - Range: `0`-`100`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceMaxControlConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput {
		return v.TunnelInterfaceMaxControlConnections
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceMaxControlConnectionsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceMaxControlConnectionsVariable
	}).(pulumi.StringPtrOutput)
}

// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceNatRefreshInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput {
		return v.TunnelInterfaceNatRefreshInterval
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceNatRefreshIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceNatRefreshIntervalVariable
	}).(pulumi.StringPtrOutput)
}

// Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceNetworkBroadcast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceNetworkBroadcast
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceNetworkBroadcastVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceNetworkBroadcastVariable
	}).(pulumi.StringPtrOutput)
}

// Disallow port hopping on the tunnel interface - Default value: `true`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfacePortHop() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfacePortHop }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfacePortHopVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfacePortHopVariable
	}).(pulumi.StringPtrOutput)
}

// CTS SGT Propagation configuration - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfacePropagateSgt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfacePropagateSgt }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfacePropagateSgtVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfacePropagateSgtVariable
	}).(pulumi.StringPtrOutput)
}

// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceTunnelTcpMss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.TunnelInterfaceTunnelTcpMss }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceTunnelTcpMssVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceTunnelTcpMssVariable
	}).(pulumi.StringPtrOutput)
}

// Put this wan interface in STUN mode only - Default value: `false`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceVbondAsStunServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceVbondAsStunServer
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceVbondAsStunServerVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceVbondAsStunServerVariable
	}).(pulumi.StringPtrOutput)
}

// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceVmanageConnectionPreference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput {
		return v.TunnelInterfaceVmanageConnectionPreference
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelInterfaceVmanageConnectionPreferenceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceVmanageConnectionPreferenceVariable
	}).(pulumi.StringPtrOutput)
}

// Set tunnel QoS mode - Choices: `hub`, `spoke`
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelQosMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.TunnelQosMode }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) TunnelQosModeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.TunnelQosModeVariable }).(pulumi.StringPtrOutput)
}

// Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
func (o CiscoVpnInterfaceFeatureTemplateOutput) UdpTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntPtrOutput { return v.UdpTimeout }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CiscoVpnInterfaceFeatureTemplateOutput) UdpTimeoutVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.StringPtrOutput { return v.UdpTimeoutVariable }).(pulumi.StringPtrOutput)
}

// The version of the feature template
func (o CiscoVpnInterfaceFeatureTemplateOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *CiscoVpnInterfaceFeatureTemplate) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type CiscoVpnInterfaceFeatureTemplateArrayOutput struct{ *pulumi.OutputState }

func (CiscoVpnInterfaceFeatureTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CiscoVpnInterfaceFeatureTemplate)(nil)).Elem()
}

func (o CiscoVpnInterfaceFeatureTemplateArrayOutput) ToCiscoVpnInterfaceFeatureTemplateArrayOutput() CiscoVpnInterfaceFeatureTemplateArrayOutput {
	return o
}

func (o CiscoVpnInterfaceFeatureTemplateArrayOutput) ToCiscoVpnInterfaceFeatureTemplateArrayOutputWithContext(ctx context.Context) CiscoVpnInterfaceFeatureTemplateArrayOutput {
	return o
}

func (o CiscoVpnInterfaceFeatureTemplateArrayOutput) Index(i pulumi.IntInput) CiscoVpnInterfaceFeatureTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CiscoVpnInterfaceFeatureTemplate {
		return vs[0].([]*CiscoVpnInterfaceFeatureTemplate)[vs[1].(int)]
	}).(CiscoVpnInterfaceFeatureTemplateOutput)
}

type CiscoVpnInterfaceFeatureTemplateMapOutput struct{ *pulumi.OutputState }

func (CiscoVpnInterfaceFeatureTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CiscoVpnInterfaceFeatureTemplate)(nil)).Elem()
}

func (o CiscoVpnInterfaceFeatureTemplateMapOutput) ToCiscoVpnInterfaceFeatureTemplateMapOutput() CiscoVpnInterfaceFeatureTemplateMapOutput {
	return o
}

func (o CiscoVpnInterfaceFeatureTemplateMapOutput) ToCiscoVpnInterfaceFeatureTemplateMapOutputWithContext(ctx context.Context) CiscoVpnInterfaceFeatureTemplateMapOutput {
	return o
}

func (o CiscoVpnInterfaceFeatureTemplateMapOutput) MapIndex(k pulumi.StringInput) CiscoVpnInterfaceFeatureTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CiscoVpnInterfaceFeatureTemplate {
		return vs[0].(map[string]*CiscoVpnInterfaceFeatureTemplate)[vs[1].(string)]
	}).(CiscoVpnInterfaceFeatureTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CiscoVpnInterfaceFeatureTemplateInput)(nil)).Elem(), &CiscoVpnInterfaceFeatureTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*CiscoVpnInterfaceFeatureTemplateArrayInput)(nil)).Elem(), CiscoVpnInterfaceFeatureTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CiscoVpnInterfaceFeatureTemplateMapInput)(nil)).Elem(), CiscoVpnInterfaceFeatureTemplateMap{})
	pulumi.RegisterOutputType(CiscoVpnInterfaceFeatureTemplateOutput{})
	pulumi.RegisterOutputType(CiscoVpnInterfaceFeatureTemplateArrayOutput{})
	pulumi.RegisterOutputType(CiscoVpnInterfaceFeatureTemplateMapOutput{})
}
