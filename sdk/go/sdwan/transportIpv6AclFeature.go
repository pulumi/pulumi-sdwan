// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Transport IPv6 ACL Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "transport_ipv6_acl_feature_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/transportIpv6AclFeature:TransportIpv6AclFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type TransportIpv6AclFeature struct {
	pulumi.CustomResourceState

	// Default Action
	//   - Choices: `drop`, `accept`
	//   - Default value: `drop`
	DefaultAction pulumi.StringPtrOutput `pulumi:"defaultAction"`
	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// Access Control List
	Sequences TransportIpv6AclFeatureSequenceArrayOutput `pulumi:"sequences"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewTransportIpv6AclFeature registers a new resource with the given unique name, arguments, and options.
func NewTransportIpv6AclFeature(ctx *pulumi.Context,
	name string, args *TransportIpv6AclFeatureArgs, opts ...pulumi.ResourceOption) (*TransportIpv6AclFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransportIpv6AclFeature
	err := ctx.RegisterResource("sdwan:index/transportIpv6AclFeature:TransportIpv6AclFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransportIpv6AclFeature gets an existing TransportIpv6AclFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransportIpv6AclFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransportIpv6AclFeatureState, opts ...pulumi.ResourceOption) (*TransportIpv6AclFeature, error) {
	var resource TransportIpv6AclFeature
	err := ctx.ReadResource("sdwan:index/transportIpv6AclFeature:TransportIpv6AclFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransportIpv6AclFeature resources.
type transportIpv6AclFeatureState struct {
	// Default Action
	//   - Choices: `drop`, `accept`
	//   - Default value: `drop`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Access Control List
	Sequences []TransportIpv6AclFeatureSequence `pulumi:"sequences"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type TransportIpv6AclFeatureState struct {
	// Default Action
	//   - Choices: `drop`, `accept`
	//   - Default value: `drop`
	DefaultAction pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Access Control List
	Sequences TransportIpv6AclFeatureSequenceArrayInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (TransportIpv6AclFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*transportIpv6AclFeatureState)(nil)).Elem()
}

type transportIpv6AclFeatureArgs struct {
	// Default Action
	//   - Choices: `drop`, `accept`
	//   - Default value: `drop`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Access Control List
	Sequences []TransportIpv6AclFeatureSequence `pulumi:"sequences"`
}

// The set of arguments for constructing a TransportIpv6AclFeature resource.
type TransportIpv6AclFeatureArgs struct {
	// Default Action
	//   - Choices: `drop`, `accept`
	//   - Default value: `drop`
	DefaultAction pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Access Control List
	Sequences TransportIpv6AclFeatureSequenceArrayInput
}

func (TransportIpv6AclFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transportIpv6AclFeatureArgs)(nil)).Elem()
}

type TransportIpv6AclFeatureInput interface {
	pulumi.Input

	ToTransportIpv6AclFeatureOutput() TransportIpv6AclFeatureOutput
	ToTransportIpv6AclFeatureOutputWithContext(ctx context.Context) TransportIpv6AclFeatureOutput
}

func (*TransportIpv6AclFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportIpv6AclFeature)(nil)).Elem()
}

func (i *TransportIpv6AclFeature) ToTransportIpv6AclFeatureOutput() TransportIpv6AclFeatureOutput {
	return i.ToTransportIpv6AclFeatureOutputWithContext(context.Background())
}

func (i *TransportIpv6AclFeature) ToTransportIpv6AclFeatureOutputWithContext(ctx context.Context) TransportIpv6AclFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportIpv6AclFeatureOutput)
}

// TransportIpv6AclFeatureArrayInput is an input type that accepts TransportIpv6AclFeatureArray and TransportIpv6AclFeatureArrayOutput values.
// You can construct a concrete instance of `TransportIpv6AclFeatureArrayInput` via:
//
//	TransportIpv6AclFeatureArray{ TransportIpv6AclFeatureArgs{...} }
type TransportIpv6AclFeatureArrayInput interface {
	pulumi.Input

	ToTransportIpv6AclFeatureArrayOutput() TransportIpv6AclFeatureArrayOutput
	ToTransportIpv6AclFeatureArrayOutputWithContext(context.Context) TransportIpv6AclFeatureArrayOutput
}

type TransportIpv6AclFeatureArray []TransportIpv6AclFeatureInput

func (TransportIpv6AclFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportIpv6AclFeature)(nil)).Elem()
}

func (i TransportIpv6AclFeatureArray) ToTransportIpv6AclFeatureArrayOutput() TransportIpv6AclFeatureArrayOutput {
	return i.ToTransportIpv6AclFeatureArrayOutputWithContext(context.Background())
}

func (i TransportIpv6AclFeatureArray) ToTransportIpv6AclFeatureArrayOutputWithContext(ctx context.Context) TransportIpv6AclFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportIpv6AclFeatureArrayOutput)
}

// TransportIpv6AclFeatureMapInput is an input type that accepts TransportIpv6AclFeatureMap and TransportIpv6AclFeatureMapOutput values.
// You can construct a concrete instance of `TransportIpv6AclFeatureMapInput` via:
//
//	TransportIpv6AclFeatureMap{ "key": TransportIpv6AclFeatureArgs{...} }
type TransportIpv6AclFeatureMapInput interface {
	pulumi.Input

	ToTransportIpv6AclFeatureMapOutput() TransportIpv6AclFeatureMapOutput
	ToTransportIpv6AclFeatureMapOutputWithContext(context.Context) TransportIpv6AclFeatureMapOutput
}

type TransportIpv6AclFeatureMap map[string]TransportIpv6AclFeatureInput

func (TransportIpv6AclFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportIpv6AclFeature)(nil)).Elem()
}

func (i TransportIpv6AclFeatureMap) ToTransportIpv6AclFeatureMapOutput() TransportIpv6AclFeatureMapOutput {
	return i.ToTransportIpv6AclFeatureMapOutputWithContext(context.Background())
}

func (i TransportIpv6AclFeatureMap) ToTransportIpv6AclFeatureMapOutputWithContext(ctx context.Context) TransportIpv6AclFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportIpv6AclFeatureMapOutput)
}

type TransportIpv6AclFeatureOutput struct{ *pulumi.OutputState }

func (TransportIpv6AclFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportIpv6AclFeature)(nil)).Elem()
}

func (o TransportIpv6AclFeatureOutput) ToTransportIpv6AclFeatureOutput() TransportIpv6AclFeatureOutput {
	return o
}

func (o TransportIpv6AclFeatureOutput) ToTransportIpv6AclFeatureOutputWithContext(ctx context.Context) TransportIpv6AclFeatureOutput {
	return o
}

// Default Action
//   - Choices: `drop`, `accept`
//   - Default value: `drop`
func (o TransportIpv6AclFeatureOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6AclFeature) pulumi.StringPtrOutput { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// The description of the Feature
func (o TransportIpv6AclFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6AclFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o TransportIpv6AclFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportIpv6AclFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The name of the Feature
func (o TransportIpv6AclFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportIpv6AclFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Access Control List
func (o TransportIpv6AclFeatureOutput) Sequences() TransportIpv6AclFeatureSequenceArrayOutput {
	return o.ApplyT(func(v *TransportIpv6AclFeature) TransportIpv6AclFeatureSequenceArrayOutput { return v.Sequences }).(TransportIpv6AclFeatureSequenceArrayOutput)
}

// The version of the Feature
func (o TransportIpv6AclFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *TransportIpv6AclFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type TransportIpv6AclFeatureArrayOutput struct{ *pulumi.OutputState }

func (TransportIpv6AclFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportIpv6AclFeature)(nil)).Elem()
}

func (o TransportIpv6AclFeatureArrayOutput) ToTransportIpv6AclFeatureArrayOutput() TransportIpv6AclFeatureArrayOutput {
	return o
}

func (o TransportIpv6AclFeatureArrayOutput) ToTransportIpv6AclFeatureArrayOutputWithContext(ctx context.Context) TransportIpv6AclFeatureArrayOutput {
	return o
}

func (o TransportIpv6AclFeatureArrayOutput) Index(i pulumi.IntInput) TransportIpv6AclFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransportIpv6AclFeature {
		return vs[0].([]*TransportIpv6AclFeature)[vs[1].(int)]
	}).(TransportIpv6AclFeatureOutput)
}

type TransportIpv6AclFeatureMapOutput struct{ *pulumi.OutputState }

func (TransportIpv6AclFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportIpv6AclFeature)(nil)).Elem()
}

func (o TransportIpv6AclFeatureMapOutput) ToTransportIpv6AclFeatureMapOutput() TransportIpv6AclFeatureMapOutput {
	return o
}

func (o TransportIpv6AclFeatureMapOutput) ToTransportIpv6AclFeatureMapOutputWithContext(ctx context.Context) TransportIpv6AclFeatureMapOutput {
	return o
}

func (o TransportIpv6AclFeatureMapOutput) MapIndex(k pulumi.StringInput) TransportIpv6AclFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransportIpv6AclFeature {
		return vs[0].(map[string]*TransportIpv6AclFeature)[vs[1].(string)]
	}).(TransportIpv6AclFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransportIpv6AclFeatureInput)(nil)).Elem(), &TransportIpv6AclFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportIpv6AclFeatureArrayInput)(nil)).Elem(), TransportIpv6AclFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportIpv6AclFeatureMapInput)(nil)).Elem(), TransportIpv6AclFeatureMap{})
	pulumi.RegisterOutputType(TransportIpv6AclFeatureOutput{})
	pulumi.RegisterOutputType(TransportIpv6AclFeatureArrayOutput{})
	pulumi.RegisterOutputType(TransportIpv6AclFeatureMapOutput{})
}
