// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Service LAN VPN Interface GRE Feature.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupServiceLanVpnInterfaceGreFeature(ctx, &sdwan.LookupServiceLanVpnInterfaceGreFeatureArgs{
//				Id:                     "f6b2c44c-693c-4763-b010-895aa3d236bd",
//				FeatureProfileId:       "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
//				ServiceLanVpnFeatureId: "140331f6-5418-4755-a059-13c77eb96037",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupServiceLanVpnInterfaceGreFeature(ctx *pulumi.Context, args *LookupServiceLanVpnInterfaceGreFeatureArgs, opts ...pulumi.InvokeOption) (*LookupServiceLanVpnInterfaceGreFeatureResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceLanVpnInterfaceGreFeatureResult
	err := ctx.Invoke("sdwan:index/getServiceLanVpnInterfaceGreFeature:getServiceLanVpnInterfaceGreFeature", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceLanVpnInterfaceGreFeature.
type LookupServiceLanVpnInterfaceGreFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId string `pulumi:"serviceLanVpnFeatureId"`
}

// A collection of values returned by getServiceLanVpnInterfaceGreFeature.
type LookupServiceLanVpnInterfaceGreFeatureResult struct {
	// Enable Application Tunnel Type
	ApplicationTunnelType string `pulumi:"applicationTunnelType"`
	// Variable name
	ApplicationTunnelTypeVariable string `pulumi:"applicationTunnelTypeVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
	ClearDontFragment bool `pulumi:"clearDontFragment"`
	// Variable name
	ClearDontFragmentVariable string `pulumi:"clearDontFragmentVariable"`
	// The description of the Feature
	Description string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
	// Interface description
	InterfaceDescription string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable string `pulumi:"interfaceDescriptionVariable"`
	// Interface name (1..255)
	InterfaceName string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable string `pulumi:"interfaceNameVariable"`
	// Interface MTU \n\n, in bytes
	IpMtu int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable string `pulumi:"ipMtuVariable"`
	Ipv4Address   string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable string `pulumi:"ipv4AddressVariable"`
	Ipv4SubnetMask      string `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable string `pulumi:"ipv4SubnetMaskVariable"`
	// The name of the Feature
	Name string `pulumi:"name"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId string `pulumi:"serviceLanVpnFeatureId"`
	// Administrative state
	Shutdown bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable string `pulumi:"shutdownVariable"`
	// TCP MSS on SYN packets, in bytes
	TcpMss int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable string `pulumi:"tcpMssVariable"`
	// Tunnel destination IP Address
	TunnelDestinationIpv4Address string `pulumi:"tunnelDestinationIpv4Address"`
	// Variable name
	TunnelDestinationIpv4AddressVariable string `pulumi:"tunnelDestinationIpv4AddressVariable"`
	// \n\n Interface name, can't be Loopback interface
	TunnelRouteViaLoopback string `pulumi:"tunnelRouteViaLoopback"`
	// Variable name
	TunnelRouteViaLoopbackVariable string `pulumi:"tunnelRouteViaLoopbackVariable"`
	// \n\n Interface name
	TunnelSourceInterface string `pulumi:"tunnelSourceInterface"`
	// \n\n Interface name
	TunnelSourceInterfaceLoopback string `pulumi:"tunnelSourceInterfaceLoopback"`
	// Variable name
	TunnelSourceInterfaceLoopbackVariable string `pulumi:"tunnelSourceInterfaceLoopbackVariable"`
	// Variable name
	TunnelSourceInterfaceVariable string `pulumi:"tunnelSourceInterfaceVariable"`
	// Tunnel source IP Address
	TunnelSourceIpv4Address string `pulumi:"tunnelSourceIpv4Address"`
	// Variable name
	TunnelSourceIpv4AddressVariable string `pulumi:"tunnelSourceIpv4AddressVariable"`
	// The version of the Feature
	Version int `pulumi:"version"`
}

func LookupServiceLanVpnInterfaceGreFeatureOutput(ctx *pulumi.Context, args LookupServiceLanVpnInterfaceGreFeatureOutputArgs, opts ...pulumi.InvokeOption) LookupServiceLanVpnInterfaceGreFeatureResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceLanVpnInterfaceGreFeatureResult, error) {
			args := v.(LookupServiceLanVpnInterfaceGreFeatureArgs)
			r, err := LookupServiceLanVpnInterfaceGreFeature(ctx, &args, opts...)
			var s LookupServiceLanVpnInterfaceGreFeatureResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServiceLanVpnInterfaceGreFeatureResultOutput)
}

// A collection of arguments for invoking getServiceLanVpnInterfaceGreFeature.
type LookupServiceLanVpnInterfaceGreFeatureOutputArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput `pulumi:"featureProfileId"`
	// The id of the Feature
	Id pulumi.StringInput `pulumi:"id"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringInput `pulumi:"serviceLanVpnFeatureId"`
}

func (LookupServiceLanVpnInterfaceGreFeatureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceLanVpnInterfaceGreFeatureArgs)(nil)).Elem()
}

// A collection of values returned by getServiceLanVpnInterfaceGreFeature.
type LookupServiceLanVpnInterfaceGreFeatureResultOutput struct{ *pulumi.OutputState }

func (LookupServiceLanVpnInterfaceGreFeatureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceLanVpnInterfaceGreFeatureResult)(nil)).Elem()
}

func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) ToLookupServiceLanVpnInterfaceGreFeatureResultOutput() LookupServiceLanVpnInterfaceGreFeatureResultOutput {
	return o
}

func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) ToLookupServiceLanVpnInterfaceGreFeatureResultOutputWithContext(ctx context.Context) LookupServiceLanVpnInterfaceGreFeatureResultOutput {
	return o
}

// Enable Application Tunnel Type
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) ApplicationTunnelType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.ApplicationTunnelType }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) ApplicationTunnelTypeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.ApplicationTunnelTypeVariable }).(pulumi.StringOutput)
}

// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) ClearDontFragment() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) bool { return v.ClearDontFragment }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) ClearDontFragmentVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.ClearDontFragmentVariable }).(pulumi.StringOutput)
}

// The description of the Feature
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.Description }).(pulumi.StringOutput)
}

// Feature Profile ID
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The id of the Feature
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.Id }).(pulumi.StringOutput)
}

// Interface description
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) InterfaceDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.InterfaceDescription }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) InterfaceDescriptionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.InterfaceDescriptionVariable }).(pulumi.StringOutput)
}

// Interface name (1..255)
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.InterfaceName }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) InterfaceNameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.InterfaceNameVariable }).(pulumi.StringOutput)
}

// Interface MTU \n\n, in bytes
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) IpMtu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) int { return v.IpMtu }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) IpMtuVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.IpMtuVariable }).(pulumi.StringOutput)
}

func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) Ipv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.Ipv4Address }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) Ipv4AddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.Ipv4AddressVariable }).(pulumi.StringOutput)
}

func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) Ipv4SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.Ipv4SubnetMask }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) Ipv4SubnetMaskVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.Ipv4SubnetMaskVariable }).(pulumi.StringOutput)
}

// The name of the Feature
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.Name }).(pulumi.StringOutput)
}

// Service LAN VPN Feature ID
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) ServiceLanVpnFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.ServiceLanVpnFeatureId }).(pulumi.StringOutput)
}

// Administrative state
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) Shutdown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) bool { return v.Shutdown }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) ShutdownVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.ShutdownVariable }).(pulumi.StringOutput)
}

// TCP MSS on SYN packets, in bytes
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) TcpMss() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) int { return v.TcpMss }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) TcpMssVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.TcpMssVariable }).(pulumi.StringOutput)
}

// Tunnel destination IP Address
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) TunnelDestinationIpv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.TunnelDestinationIpv4Address }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) TunnelDestinationIpv4AddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string {
		return v.TunnelDestinationIpv4AddressVariable
	}).(pulumi.StringOutput)
}

// \n\n Interface name, can't be Loopback interface
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) TunnelRouteViaLoopback() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.TunnelRouteViaLoopback }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) TunnelRouteViaLoopbackVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.TunnelRouteViaLoopbackVariable }).(pulumi.StringOutput)
}

// \n\n Interface name
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) TunnelSourceInterface() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.TunnelSourceInterface }).(pulumi.StringOutput)
}

// \n\n Interface name
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) TunnelSourceInterfaceLoopback() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.TunnelSourceInterfaceLoopback }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) TunnelSourceInterfaceLoopbackVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string {
		return v.TunnelSourceInterfaceLoopbackVariable
	}).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) TunnelSourceInterfaceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.TunnelSourceInterfaceVariable }).(pulumi.StringOutput)
}

// Tunnel source IP Address
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) TunnelSourceIpv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.TunnelSourceIpv4Address }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) TunnelSourceIpv4AddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) string { return v.TunnelSourceIpv4AddressVariable }).(pulumi.StringOutput)
}

// The version of the Feature
func (o LookupServiceLanVpnInterfaceGreFeatureResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceGreFeatureResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceLanVpnInterfaceGreFeatureResultOutput{})
}
