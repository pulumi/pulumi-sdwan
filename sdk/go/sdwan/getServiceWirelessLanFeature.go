// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Service Wireless LAN Feature.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupServiceWirelessLanFeature(ctx, &sdwan.LookupServiceWirelessLanFeatureArgs{
//				Id:               "f6b2c44c-693c-4763-b010-895aa3d236bd",
//				FeatureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupServiceWirelessLanFeature(ctx *pulumi.Context, args *LookupServiceWirelessLanFeatureArgs, opts ...pulumi.InvokeOption) (*LookupServiceWirelessLanFeatureResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceWirelessLanFeatureResult
	err := ctx.Invoke("sdwan:index/getServiceWirelessLanFeature:getServiceWirelessLanFeature", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceWirelessLanFeature.
type LookupServiceWirelessLanFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
}

// A collection of values returned by getServiceWirelessLanFeature.
type LookupServiceWirelessLanFeatureResult struct {
	// Select country
	Country string `pulumi:"country"`
	// Variable name
	CountryVariable string `pulumi:"countryVariable"`
	// The description of the Feature
	Description string `pulumi:"description"`
	// 2.4GHz Enabled
	Enable24g bool `pulumi:"enable24g"`
	// Variable name
	Enable24gVariable string `pulumi:"enable24gVariable"`
	// 5GHz Enabled
	Enable5g bool `pulumi:"enable5g"`
	// Variable name
	Enable5gVariable string `pulumi:"enable5gVariable"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
	// Set mobile express default gateway
	MeDefaultGateway string `pulumi:"meDefaultGateway"`
	// Variable name
	MeDefaultGatewayVariable string `pulumi:"meDefaultGatewayVariable"`
	// ME management IP dynamic allocated by DHCP
	MeDynamicIpEnabled bool `pulumi:"meDynamicIpEnabled"`
	// Set mobile express controller address
	MeIpv4Address string `pulumi:"meIpv4Address"`
	// Variable name
	MeIpv4AddressVariable string `pulumi:"meIpv4AddressVariable"`
	// Set mobile express controller subnet mask
	MeSubnetMask string `pulumi:"meSubnetMask"`
	// Variable name
	MeSubnetMaskVariable string `pulumi:"meSubnetMaskVariable"`
	// The name of the Feature
	Name string `pulumi:"name"`
	// Set management password,the password must contains characters from all of the following classes,lowercase letters,uppercase letters,digits,and special characters. No character in the password can be repeated more than three times consecutively. The password must not be the same as the associated username or the username reversed. The password must not be cisco,ocsic,or any variant obtained by changing the capitalization of the letters in word cisco. In addition,you can't substitute 1,l,or ! for i,0 for o,$ for s.
	Password string `pulumi:"password"`
	// Variable name
	PasswordVariable string `pulumi:"passwordVariable"`
	// Configure Wi-Fi SSID profile
	Ssids []GetServiceWirelessLanFeatureSsid `pulumi:"ssids"`
	// Set management username
	Username string `pulumi:"username"`
	// Variable name
	UsernameVariable string `pulumi:"usernameVariable"`
	// The version of the Feature
	Version int `pulumi:"version"`
}

func LookupServiceWirelessLanFeatureOutput(ctx *pulumi.Context, args LookupServiceWirelessLanFeatureOutputArgs, opts ...pulumi.InvokeOption) LookupServiceWirelessLanFeatureResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupServiceWirelessLanFeatureResultOutput, error) {
			args := v.(LookupServiceWirelessLanFeatureArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sdwan:index/getServiceWirelessLanFeature:getServiceWirelessLanFeature", args, LookupServiceWirelessLanFeatureResultOutput{}, options).(LookupServiceWirelessLanFeatureResultOutput), nil
		}).(LookupServiceWirelessLanFeatureResultOutput)
}

// A collection of arguments for invoking getServiceWirelessLanFeature.
type LookupServiceWirelessLanFeatureOutputArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput `pulumi:"featureProfileId"`
	// The id of the Feature
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupServiceWirelessLanFeatureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceWirelessLanFeatureArgs)(nil)).Elem()
}

// A collection of values returned by getServiceWirelessLanFeature.
type LookupServiceWirelessLanFeatureResultOutput struct{ *pulumi.OutputState }

func (LookupServiceWirelessLanFeatureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceWirelessLanFeatureResult)(nil)).Elem()
}

func (o LookupServiceWirelessLanFeatureResultOutput) ToLookupServiceWirelessLanFeatureResultOutput() LookupServiceWirelessLanFeatureResultOutput {
	return o
}

func (o LookupServiceWirelessLanFeatureResultOutput) ToLookupServiceWirelessLanFeatureResultOutputWithContext(ctx context.Context) LookupServiceWirelessLanFeatureResultOutput {
	return o
}

// Select country
func (o LookupServiceWirelessLanFeatureResultOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) string { return v.Country }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceWirelessLanFeatureResultOutput) CountryVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) string { return v.CountryVariable }).(pulumi.StringOutput)
}

// The description of the Feature
func (o LookupServiceWirelessLanFeatureResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) string { return v.Description }).(pulumi.StringOutput)
}

// 2.4GHz Enabled
func (o LookupServiceWirelessLanFeatureResultOutput) Enable24g() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) bool { return v.Enable24g }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceWirelessLanFeatureResultOutput) Enable24gVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) string { return v.Enable24gVariable }).(pulumi.StringOutput)
}

// 5GHz Enabled
func (o LookupServiceWirelessLanFeatureResultOutput) Enable5g() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) bool { return v.Enable5g }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceWirelessLanFeatureResultOutput) Enable5gVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) string { return v.Enable5gVariable }).(pulumi.StringOutput)
}

// Feature Profile ID
func (o LookupServiceWirelessLanFeatureResultOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) string { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The id of the Feature
func (o LookupServiceWirelessLanFeatureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) string { return v.Id }).(pulumi.StringOutput)
}

// Set mobile express default gateway
func (o LookupServiceWirelessLanFeatureResultOutput) MeDefaultGateway() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) string { return v.MeDefaultGateway }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceWirelessLanFeatureResultOutput) MeDefaultGatewayVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) string { return v.MeDefaultGatewayVariable }).(pulumi.StringOutput)
}

// ME management IP dynamic allocated by DHCP
func (o LookupServiceWirelessLanFeatureResultOutput) MeDynamicIpEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) bool { return v.MeDynamicIpEnabled }).(pulumi.BoolOutput)
}

// Set mobile express controller address
func (o LookupServiceWirelessLanFeatureResultOutput) MeIpv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) string { return v.MeIpv4Address }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceWirelessLanFeatureResultOutput) MeIpv4AddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) string { return v.MeIpv4AddressVariable }).(pulumi.StringOutput)
}

// Set mobile express controller subnet mask
func (o LookupServiceWirelessLanFeatureResultOutput) MeSubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) string { return v.MeSubnetMask }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceWirelessLanFeatureResultOutput) MeSubnetMaskVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) string { return v.MeSubnetMaskVariable }).(pulumi.StringOutput)
}

// The name of the Feature
func (o LookupServiceWirelessLanFeatureResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) string { return v.Name }).(pulumi.StringOutput)
}

// Set management password,the password must contains characters from all of the following classes,lowercase letters,uppercase letters,digits,and special characters. No character in the password can be repeated more than three times consecutively. The password must not be the same as the associated username or the username reversed. The password must not be cisco,ocsic,or any variant obtained by changing the capitalization of the letters in word cisco. In addition,you can't substitute 1,l,or ! for i,0 for o,$ for s.
func (o LookupServiceWirelessLanFeatureResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) string { return v.Password }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceWirelessLanFeatureResultOutput) PasswordVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) string { return v.PasswordVariable }).(pulumi.StringOutput)
}

// Configure Wi-Fi SSID profile
func (o LookupServiceWirelessLanFeatureResultOutput) Ssids() GetServiceWirelessLanFeatureSsidArrayOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) []GetServiceWirelessLanFeatureSsid { return v.Ssids }).(GetServiceWirelessLanFeatureSsidArrayOutput)
}

// Set management username
func (o LookupServiceWirelessLanFeatureResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) string { return v.Username }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceWirelessLanFeatureResultOutput) UsernameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) string { return v.UsernameVariable }).(pulumi.StringOutput)
}

// The version of the Feature
func (o LookupServiceWirelessLanFeatureResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceWirelessLanFeatureResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceWirelessLanFeatureResultOutput{})
}
