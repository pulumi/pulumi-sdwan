// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Service Route Policy Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/serviceRoutePolicyFeature:ServiceRoutePolicyFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type ServiceRoutePolicyFeature struct {
	pulumi.CustomResourceState

	// Default Action - Choices: `reject`, `accept` - Default value: `reject`
	DefaultAction pulumi.StringPtrOutput `pulumi:"defaultAction"`
	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// Route Policy List
	Sequences ServiceRoutePolicyFeatureSequenceArrayOutput `pulumi:"sequences"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewServiceRoutePolicyFeature registers a new resource with the given unique name, arguments, and options.
func NewServiceRoutePolicyFeature(ctx *pulumi.Context,
	name string, args *ServiceRoutePolicyFeatureArgs, opts ...pulumi.ResourceOption) (*ServiceRoutePolicyFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceRoutePolicyFeature
	err := ctx.RegisterResource("sdwan:index/serviceRoutePolicyFeature:ServiceRoutePolicyFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceRoutePolicyFeature gets an existing ServiceRoutePolicyFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceRoutePolicyFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceRoutePolicyFeatureState, opts ...pulumi.ResourceOption) (*ServiceRoutePolicyFeature, error) {
	var resource ServiceRoutePolicyFeature
	err := ctx.ReadResource("sdwan:index/serviceRoutePolicyFeature:ServiceRoutePolicyFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceRoutePolicyFeature resources.
type serviceRoutePolicyFeatureState struct {
	// Default Action - Choices: `reject`, `accept` - Default value: `reject`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Route Policy List
	Sequences []ServiceRoutePolicyFeatureSequence `pulumi:"sequences"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type ServiceRoutePolicyFeatureState struct {
	// Default Action - Choices: `reject`, `accept` - Default value: `reject`
	DefaultAction pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Route Policy List
	Sequences ServiceRoutePolicyFeatureSequenceArrayInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (ServiceRoutePolicyFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceRoutePolicyFeatureState)(nil)).Elem()
}

type serviceRoutePolicyFeatureArgs struct {
	// Default Action - Choices: `reject`, `accept` - Default value: `reject`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Route Policy List
	Sequences []ServiceRoutePolicyFeatureSequence `pulumi:"sequences"`
}

// The set of arguments for constructing a ServiceRoutePolicyFeature resource.
type ServiceRoutePolicyFeatureArgs struct {
	// Default Action - Choices: `reject`, `accept` - Default value: `reject`
	DefaultAction pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Route Policy List
	Sequences ServiceRoutePolicyFeatureSequenceArrayInput
}

func (ServiceRoutePolicyFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceRoutePolicyFeatureArgs)(nil)).Elem()
}

type ServiceRoutePolicyFeatureInput interface {
	pulumi.Input

	ToServiceRoutePolicyFeatureOutput() ServiceRoutePolicyFeatureOutput
	ToServiceRoutePolicyFeatureOutputWithContext(ctx context.Context) ServiceRoutePolicyFeatureOutput
}

func (*ServiceRoutePolicyFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceRoutePolicyFeature)(nil)).Elem()
}

func (i *ServiceRoutePolicyFeature) ToServiceRoutePolicyFeatureOutput() ServiceRoutePolicyFeatureOutput {
	return i.ToServiceRoutePolicyFeatureOutputWithContext(context.Background())
}

func (i *ServiceRoutePolicyFeature) ToServiceRoutePolicyFeatureOutputWithContext(ctx context.Context) ServiceRoutePolicyFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRoutePolicyFeatureOutput)
}

// ServiceRoutePolicyFeatureArrayInput is an input type that accepts ServiceRoutePolicyFeatureArray and ServiceRoutePolicyFeatureArrayOutput values.
// You can construct a concrete instance of `ServiceRoutePolicyFeatureArrayInput` via:
//
//	ServiceRoutePolicyFeatureArray{ ServiceRoutePolicyFeatureArgs{...} }
type ServiceRoutePolicyFeatureArrayInput interface {
	pulumi.Input

	ToServiceRoutePolicyFeatureArrayOutput() ServiceRoutePolicyFeatureArrayOutput
	ToServiceRoutePolicyFeatureArrayOutputWithContext(context.Context) ServiceRoutePolicyFeatureArrayOutput
}

type ServiceRoutePolicyFeatureArray []ServiceRoutePolicyFeatureInput

func (ServiceRoutePolicyFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceRoutePolicyFeature)(nil)).Elem()
}

func (i ServiceRoutePolicyFeatureArray) ToServiceRoutePolicyFeatureArrayOutput() ServiceRoutePolicyFeatureArrayOutput {
	return i.ToServiceRoutePolicyFeatureArrayOutputWithContext(context.Background())
}

func (i ServiceRoutePolicyFeatureArray) ToServiceRoutePolicyFeatureArrayOutputWithContext(ctx context.Context) ServiceRoutePolicyFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRoutePolicyFeatureArrayOutput)
}

// ServiceRoutePolicyFeatureMapInput is an input type that accepts ServiceRoutePolicyFeatureMap and ServiceRoutePolicyFeatureMapOutput values.
// You can construct a concrete instance of `ServiceRoutePolicyFeatureMapInput` via:
//
//	ServiceRoutePolicyFeatureMap{ "key": ServiceRoutePolicyFeatureArgs{...} }
type ServiceRoutePolicyFeatureMapInput interface {
	pulumi.Input

	ToServiceRoutePolicyFeatureMapOutput() ServiceRoutePolicyFeatureMapOutput
	ToServiceRoutePolicyFeatureMapOutputWithContext(context.Context) ServiceRoutePolicyFeatureMapOutput
}

type ServiceRoutePolicyFeatureMap map[string]ServiceRoutePolicyFeatureInput

func (ServiceRoutePolicyFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceRoutePolicyFeature)(nil)).Elem()
}

func (i ServiceRoutePolicyFeatureMap) ToServiceRoutePolicyFeatureMapOutput() ServiceRoutePolicyFeatureMapOutput {
	return i.ToServiceRoutePolicyFeatureMapOutputWithContext(context.Background())
}

func (i ServiceRoutePolicyFeatureMap) ToServiceRoutePolicyFeatureMapOutputWithContext(ctx context.Context) ServiceRoutePolicyFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRoutePolicyFeatureMapOutput)
}

type ServiceRoutePolicyFeatureOutput struct{ *pulumi.OutputState }

func (ServiceRoutePolicyFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceRoutePolicyFeature)(nil)).Elem()
}

func (o ServiceRoutePolicyFeatureOutput) ToServiceRoutePolicyFeatureOutput() ServiceRoutePolicyFeatureOutput {
	return o
}

func (o ServiceRoutePolicyFeatureOutput) ToServiceRoutePolicyFeatureOutputWithContext(ctx context.Context) ServiceRoutePolicyFeatureOutput {
	return o
}

// Default Action - Choices: `reject`, `accept` - Default value: `reject`
func (o ServiceRoutePolicyFeatureOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRoutePolicyFeature) pulumi.StringPtrOutput { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// The description of the Feature
func (o ServiceRoutePolicyFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRoutePolicyFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o ServiceRoutePolicyFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceRoutePolicyFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The name of the Feature
func (o ServiceRoutePolicyFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceRoutePolicyFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Route Policy List
func (o ServiceRoutePolicyFeatureOutput) Sequences() ServiceRoutePolicyFeatureSequenceArrayOutput {
	return o.ApplyT(func(v *ServiceRoutePolicyFeature) ServiceRoutePolicyFeatureSequenceArrayOutput { return v.Sequences }).(ServiceRoutePolicyFeatureSequenceArrayOutput)
}

// The version of the Feature
func (o ServiceRoutePolicyFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceRoutePolicyFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ServiceRoutePolicyFeatureArrayOutput struct{ *pulumi.OutputState }

func (ServiceRoutePolicyFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceRoutePolicyFeature)(nil)).Elem()
}

func (o ServiceRoutePolicyFeatureArrayOutput) ToServiceRoutePolicyFeatureArrayOutput() ServiceRoutePolicyFeatureArrayOutput {
	return o
}

func (o ServiceRoutePolicyFeatureArrayOutput) ToServiceRoutePolicyFeatureArrayOutputWithContext(ctx context.Context) ServiceRoutePolicyFeatureArrayOutput {
	return o
}

func (o ServiceRoutePolicyFeatureArrayOutput) Index(i pulumi.IntInput) ServiceRoutePolicyFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceRoutePolicyFeature {
		return vs[0].([]*ServiceRoutePolicyFeature)[vs[1].(int)]
	}).(ServiceRoutePolicyFeatureOutput)
}

type ServiceRoutePolicyFeatureMapOutput struct{ *pulumi.OutputState }

func (ServiceRoutePolicyFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceRoutePolicyFeature)(nil)).Elem()
}

func (o ServiceRoutePolicyFeatureMapOutput) ToServiceRoutePolicyFeatureMapOutput() ServiceRoutePolicyFeatureMapOutput {
	return o
}

func (o ServiceRoutePolicyFeatureMapOutput) ToServiceRoutePolicyFeatureMapOutputWithContext(ctx context.Context) ServiceRoutePolicyFeatureMapOutput {
	return o
}

func (o ServiceRoutePolicyFeatureMapOutput) MapIndex(k pulumi.StringInput) ServiceRoutePolicyFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceRoutePolicyFeature {
		return vs[0].(map[string]*ServiceRoutePolicyFeature)[vs[1].(string)]
	}).(ServiceRoutePolicyFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceRoutePolicyFeatureInput)(nil)).Elem(), &ServiceRoutePolicyFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceRoutePolicyFeatureArrayInput)(nil)).Elem(), ServiceRoutePolicyFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceRoutePolicyFeatureMapInput)(nil)).Elem(), ServiceRoutePolicyFeatureMap{})
	pulumi.RegisterOutputType(ServiceRoutePolicyFeatureOutput{})
	pulumi.RegisterOutputType(ServiceRoutePolicyFeatureArrayOutput{})
	pulumi.RegisterOutputType(ServiceRoutePolicyFeatureMapOutput{})
}
