// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Service LAN VPN Interface Ethernet profile parcel.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupServiceLanVpnInterfaceEthernetProfileParcel(ctx, &sdwan.LookupServiceLanVpnInterfaceEthernetProfileParcelArgs{
//				Id:                           "f6b2c44c-693c-4763-b010-895aa3d236bd",
//				FeatureProfileId:             "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
//				ServiceLanVpnProfileParcelId: "140331f6-5418-4755-a059-13c77eb96037",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupServiceLanVpnInterfaceEthernetProfileParcel(ctx *pulumi.Context, args *LookupServiceLanVpnInterfaceEthernetProfileParcelArgs, opts ...pulumi.InvokeOption) (*LookupServiceLanVpnInterfaceEthernetProfileParcelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceLanVpnInterfaceEthernetProfileParcelResult
	err := ctx.Invoke("sdwan:index/getServiceLanVpnInterfaceEthernetProfileParcel:getServiceLanVpnInterfaceEthernetProfileParcel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceLanVpnInterfaceEthernetProfileParcel.
type LookupServiceLanVpnInterfaceEthernetProfileParcelArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the profile parcel
	Id string `pulumi:"id"`
	// Service LAN VPN Profile Profile ID
	ServiceLanVpnProfileParcelId string `pulumi:"serviceLanVpnProfileParcelId"`
}

// A collection of values returned by getServiceLanVpnInterfaceEthernetProfileParcel.
type LookupServiceLanVpnInterfaceEthernetProfileParcelResult struct {
	AclIpv4EgressPolicyId  string `pulumi:"aclIpv4EgressPolicyId"`
	AclIpv4IngressPolicyId string `pulumi:"aclIpv4IngressPolicyId"`
	AclIpv6EgressPolicyId  string `pulumi:"aclIpv6EgressPolicyId"`
	AclIpv6IngressPolicyId string `pulumi:"aclIpv6IngressPolicyId"`
	// Shaping Rate (Kbps)
	AclShapingRate int `pulumi:"aclShapingRate"`
	// Variable name
	AclShapingRateVariable string `pulumi:"aclShapingRateVariable"`
	// Timeout value for dynamically learned ARP entries, \n\n seconds
	ArpTimeout int `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable string `pulumi:"arpTimeoutVariable"`
	// Configure ARP entries
	Arps []GetServiceLanVpnInterfaceEthernetProfileParcelArp `pulumi:"arps"`
	// Link autonegotiation
	Autonegotiate bool `pulumi:"autonegotiate"`
	// Variable name
	AutonegotiateVariable string `pulumi:"autonegotiateVariable"`
	ConfigDescription     string `pulumi:"configDescription"`
	// Variable name
	ConfigDescriptionVariable string `pulumi:"configDescriptionVariable"`
	// The description of the profile parcel
	Description string `pulumi:"description"`
	// Duplex mode
	Duplex string `pulumi:"duplex"`
	// Variable name
	DuplexVariable string `pulumi:"duplexVariable"`
	// Enable DHCPv6
	EnableDhcpv6 bool `pulumi:"enableDhcpv6"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// ICMP/ICMPv6 Redirect Disable
	IcmpRedirectDisable bool `pulumi:"icmpRedirectDisable"`
	// Variable name
	IcmpRedirectDisableVariable string `pulumi:"icmpRedirectDisableVariable"`
	// The id of the profile parcel
	Id string `pulumi:"id"`
	// Interface MTU
	InterfaceMtu int `pulumi:"interfaceMtu"`
	// Variable name
	InterfaceMtuVariable string `pulumi:"interfaceMtuVariable"`
	InterfaceName        string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable string `pulumi:"interfaceNameVariable"`
	// IP Directed-Broadcast
	IpDirectedBroadcast bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable string `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU for GigabitEthernet main \n\n, GigabitEthernet subinterface \n\n, Other Interfaces \n\n in bytes
	IpMtu int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable string `pulumi:"ipMtuVariable"`
	// IP Address
	Ipv4Address string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable string `pulumi:"ipv4AddressVariable"`
	// DHCP Distance
	Ipv4DhcpDistance int `pulumi:"ipv4DhcpDistance"`
	// Variable name
	Ipv4DhcpDistanceVariable string `pulumi:"ipv4DhcpDistanceVariable"`
	// Variable name
	Ipv4DhcpHelperVariable string `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP IPv4 helper addresses (min 1, max 8)
	Ipv4DhcpHelpers []string `pulumi:"ipv4DhcpHelpers"`
	// enable Network Address Translation on this interface
	Ipv4Nat bool `pulumi:"ipv4Nat"`
	// NAT Inside Source Loopback Interface
	Ipv4NatLoopback string `pulumi:"ipv4NatLoopback"`
	// Variable name
	Ipv4NatLoopbackVariable string `pulumi:"ipv4NatLoopbackVariable"`
	// NAT Overload
	Ipv4NatOverload bool `pulumi:"ipv4NatOverload"`
	// Variable name
	Ipv4NatOverloadVariable string `pulumi:"ipv4NatOverloadVariable"`
	// NAT Pool Prefix Length
	Ipv4NatPrefixLength int `pulumi:"ipv4NatPrefixLength"`
	// Variable name
	Ipv4NatPrefixLengthVariable string `pulumi:"ipv4NatPrefixLengthVariable"`
	// NAT Pool Range End
	Ipv4NatRangeEnd string `pulumi:"ipv4NatRangeEnd"`
	// Variable name
	Ipv4NatRangeEndVariable string `pulumi:"ipv4NatRangeEndVariable"`
	// NAT Pool Range Start
	Ipv4NatRangeStart string `pulumi:"ipv4NatRangeStart"`
	// Variable name
	Ipv4NatRangeStartVariable string `pulumi:"ipv4NatRangeStartVariable"`
	// Set NAT TCP session timeout, in minutes
	Ipv4NatTcpTimeout int `pulumi:"ipv4NatTcpTimeout"`
	// Variable name
	Ipv4NatTcpTimeoutVariable string `pulumi:"ipv4NatTcpTimeoutVariable"`
	// NAT Type
	Ipv4NatType string `pulumi:"ipv4NatType"`
	// Variable name
	Ipv4NatTypeVariable string `pulumi:"ipv4NatTypeVariable"`
	// Set NAT UDP session timeout, in minutes
	Ipv4NatUdpTimeout int `pulumi:"ipv4NatUdpTimeout"`
	// Variable name
	Ipv4NatUdpTimeoutVariable string `pulumi:"ipv4NatUdpTimeoutVariable"`
	// Secondary IpV4 Addresses
	Ipv4SecondaryAddresses []GetServiceLanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddress `pulumi:"ipv4SecondaryAddresses"`
	// Subnet Mask
	Ipv4SubnetMask string `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable string `pulumi:"ipv4SubnetMaskVariable"`
	// Enable VRRP
	Ipv4Vrrps []GetServiceLanVpnInterfaceEthernetProfileParcelIpv4Vrrp `pulumi:"ipv4Vrrps"`
	// IPv6 Address Secondary
	Ipv6Address string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable string `pulumi:"ipv6AddressVariable"`
	// DHCPv6 Helper
	Ipv6DhcpHelpers []GetServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpHelper `pulumi:"ipv6DhcpHelpers"`
	// secondary IPv6 addresses
	Ipv6DhcpSecondaryAddresses []GetServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddress `pulumi:"ipv6DhcpSecondaryAddresses"`
	// enable Network Address Translation ipv6 on this interface
	Ipv6Nat bool `pulumi:"ipv6Nat"`
	// Static secondary IPv6 addresses
	Ipv6SecondaryAddresses []GetServiceLanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddress `pulumi:"ipv6SecondaryAddresses"`
	// Enable VRRP Ipv6
	Ipv6Vrrps []GetServiceLanVpnInterfaceEthernetProfileParcelIpv6Vrrp `pulumi:"ipv6Vrrps"`
	// Interval for interface load calculation
	LoadInterval int `pulumi:"loadInterval"`
	// Variable name
	LoadIntervalVariable string `pulumi:"loadIntervalVariable"`
	// MAC Address
	MacAddress string `pulumi:"macAddress"`
	// Variable name
	MacAddressVariable string `pulumi:"macAddressVariable"`
	// Media type
	MediaType string `pulumi:"mediaType"`
	// Variable name
	MediaTypeVariable string `pulumi:"mediaTypeVariable"`
	// The name of the profile parcel
	Name string `pulumi:"name"`
	// NAT64 on this interface
	Nat64 bool `pulumi:"nat64"`
	// Service LAN VPN Profile Profile ID
	ServiceLanVpnProfileParcelId string `pulumi:"serviceLanVpnProfileParcelId"`
	Shutdown                     bool   `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable string `pulumi:"shutdownVariable"`
	// Set interface speed
	Speed string `pulumi:"speed"`
	// Variable name
	SpeedVariable string `pulumi:"speedVariable"`
	// static NAT
	StaticNats []GetServiceLanVpnInterfaceEthernetProfileParcelStaticNat `pulumi:"staticNats"`
	// TCP MSS on SYN packets, in bytes
	TcpMss int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable string `pulumi:"tcpMssVariable"`
	// Enable tracker for this interface
	Tracker string `pulumi:"tracker"`
	// Variable name
	TrackerVariable string `pulumi:"trackerVariable"`
	// Enable/Disable SGT Enforcement on an interface
	TrustsecEnableEnforcedPropogation bool `pulumi:"trustsecEnableEnforcedPropogation"`
	// Indicates that the interface is trustworthy for CTS
	TrustsecEnableSgtPropogation bool `pulumi:"trustsecEnableSgtPropogation"`
	// SGT value between 2 and 65519
	TrustsecEnforcedSecurityGroupTag int `pulumi:"trustsecEnforcedSecurityGroupTag"`
	// Variable name
	TrustsecEnforcedSecurityGroupTagVariable string `pulumi:"trustsecEnforcedSecurityGroupTagVariable"`
	// Enables the interface for CTS SGT authorization and forwarding
	TrustsecPropogate bool `pulumi:"trustsecPropogate"`
	// SGT value between 2 and 65519
	TrustsecSecurityGroupTag int `pulumi:"trustsecSecurityGroupTag"`
	// Variable name
	TrustsecSecurityGroupTagVariable string `pulumi:"trustsecSecurityGroupTagVariable"`
	// The version of the profile parcel
	Version int `pulumi:"version"`
	// Extend remote TLOC over a GRE tunnel to a local LAN interface
	Xconnect string `pulumi:"xconnect"`
	// Variable name
	XconnectVariable string `pulumi:"xconnectVariable"`
}

func LookupServiceLanVpnInterfaceEthernetProfileParcelOutput(ctx *pulumi.Context, args LookupServiceLanVpnInterfaceEthernetProfileParcelOutputArgs, opts ...pulumi.InvokeOption) LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceLanVpnInterfaceEthernetProfileParcelResult, error) {
			args := v.(LookupServiceLanVpnInterfaceEthernetProfileParcelArgs)
			r, err := LookupServiceLanVpnInterfaceEthernetProfileParcel(ctx, &args, opts...)
			var s LookupServiceLanVpnInterfaceEthernetProfileParcelResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput)
}

// A collection of arguments for invoking getServiceLanVpnInterfaceEthernetProfileParcel.
type LookupServiceLanVpnInterfaceEthernetProfileParcelOutputArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput `pulumi:"featureProfileId"`
	// The id of the profile parcel
	Id pulumi.StringInput `pulumi:"id"`
	// Service LAN VPN Profile Profile ID
	ServiceLanVpnProfileParcelId pulumi.StringInput `pulumi:"serviceLanVpnProfileParcelId"`
}

func (LookupServiceLanVpnInterfaceEthernetProfileParcelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceLanVpnInterfaceEthernetProfileParcelArgs)(nil)).Elem()
}

// A collection of values returned by getServiceLanVpnInterfaceEthernetProfileParcel.
type LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput struct{ *pulumi.OutputState }

func (LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceLanVpnInterfaceEthernetProfileParcelResult)(nil)).Elem()
}

func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) ToLookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput() LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput {
	return o
}

func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) ToLookupServiceLanVpnInterfaceEthernetProfileParcelResultOutputWithContext(ctx context.Context) LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput {
	return o
}

func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) AclIpv4EgressPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.AclIpv4EgressPolicyId }).(pulumi.StringOutput)
}

func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) AclIpv4IngressPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.AclIpv4IngressPolicyId
	}).(pulumi.StringOutput)
}

func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) AclIpv6EgressPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.AclIpv6EgressPolicyId }).(pulumi.StringOutput)
}

func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) AclIpv6IngressPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.AclIpv6IngressPolicyId
	}).(pulumi.StringOutput)
}

// Shaping Rate (Kbps)
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) AclShapingRate() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) int { return v.AclShapingRate }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) AclShapingRateVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.AclShapingRateVariable
	}).(pulumi.StringOutput)
}

// Timeout value for dynamically learned ARP entries, \n\n seconds
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) ArpTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) int { return v.ArpTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) ArpTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.ArpTimeoutVariable }).(pulumi.StringOutput)
}

// Configure ARP entries
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Arps() GetServiceLanVpnInterfaceEthernetProfileParcelArpArrayOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) []GetServiceLanVpnInterfaceEthernetProfileParcelArp {
		return v.Arps
	}).(GetServiceLanVpnInterfaceEthernetProfileParcelArpArrayOutput)
}

// Link autonegotiation
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Autonegotiate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) bool { return v.Autonegotiate }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) AutonegotiateVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.AutonegotiateVariable }).(pulumi.StringOutput)
}

func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) ConfigDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.ConfigDescription }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) ConfigDescriptionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.ConfigDescriptionVariable
	}).(pulumi.StringOutput)
}

// The description of the profile parcel
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.Description }).(pulumi.StringOutput)
}

// Duplex mode
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Duplex() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.Duplex }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) DuplexVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.DuplexVariable }).(pulumi.StringOutput)
}

// Enable DHCPv6
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) EnableDhcpv6() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) bool { return v.EnableDhcpv6 }).(pulumi.BoolOutput)
}

// Feature Profile ID
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// ICMP/ICMPv6 Redirect Disable
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) IcmpRedirectDisable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) bool { return v.IcmpRedirectDisable }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) IcmpRedirectDisableVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.IcmpRedirectDisableVariable
	}).(pulumi.StringOutput)
}

// The id of the profile parcel
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.Id }).(pulumi.StringOutput)
}

// Interface MTU
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) InterfaceMtu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) int { return v.InterfaceMtu }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) InterfaceMtuVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.InterfaceMtuVariable }).(pulumi.StringOutput)
}

func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.InterfaceName }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) InterfaceNameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.InterfaceNameVariable }).(pulumi.StringOutput)
}

// IP Directed-Broadcast
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) IpDirectedBroadcast() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) bool { return v.IpDirectedBroadcast }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) IpDirectedBroadcastVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.IpDirectedBroadcastVariable
	}).(pulumi.StringOutput)
}

// IP MTU for GigabitEthernet main \n\n, GigabitEthernet subinterface \n\n, Other Interfaces \n\n in bytes
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) IpMtu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) int { return v.IpMtu }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) IpMtuVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.IpMtuVariable }).(pulumi.StringOutput)
}

// IP Address
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.Ipv4Address }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4AddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.Ipv4AddressVariable }).(pulumi.StringOutput)
}

// DHCP Distance
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4DhcpDistance() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) int { return v.Ipv4DhcpDistance }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4DhcpDistanceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.Ipv4DhcpDistanceVariable
	}).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4DhcpHelperVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.Ipv4DhcpHelperVariable
	}).(pulumi.StringOutput)
}

// List of DHCP IPv4 helper addresses (min 1, max 8)
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4DhcpHelpers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) []string { return v.Ipv4DhcpHelpers }).(pulumi.StringArrayOutput)
}

// enable Network Address Translation on this interface
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4Nat() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) bool { return v.Ipv4Nat }).(pulumi.BoolOutput)
}

// NAT Inside Source Loopback Interface
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4NatLoopback() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.Ipv4NatLoopback }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4NatLoopbackVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.Ipv4NatLoopbackVariable
	}).(pulumi.StringOutput)
}

// NAT Overload
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4NatOverload() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) bool { return v.Ipv4NatOverload }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4NatOverloadVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.Ipv4NatOverloadVariable
	}).(pulumi.StringOutput)
}

// NAT Pool Prefix Length
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4NatPrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) int { return v.Ipv4NatPrefixLength }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4NatPrefixLengthVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.Ipv4NatPrefixLengthVariable
	}).(pulumi.StringOutput)
}

// NAT Pool Range End
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4NatRangeEnd() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.Ipv4NatRangeEnd }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4NatRangeEndVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.Ipv4NatRangeEndVariable
	}).(pulumi.StringOutput)
}

// NAT Pool Range Start
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4NatRangeStart() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.Ipv4NatRangeStart }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4NatRangeStartVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.Ipv4NatRangeStartVariable
	}).(pulumi.StringOutput)
}

// Set NAT TCP session timeout, in minutes
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4NatTcpTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) int { return v.Ipv4NatTcpTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4NatTcpTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.Ipv4NatTcpTimeoutVariable
	}).(pulumi.StringOutput)
}

// NAT Type
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4NatType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.Ipv4NatType }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4NatTypeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.Ipv4NatTypeVariable }).(pulumi.StringOutput)
}

// Set NAT UDP session timeout, in minutes
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4NatUdpTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) int { return v.Ipv4NatUdpTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4NatUdpTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.Ipv4NatUdpTimeoutVariable
	}).(pulumi.StringOutput)
}

// Secondary IpV4 Addresses
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4SecondaryAddresses() GetServiceLanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArrayOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) []GetServiceLanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddress {
		return v.Ipv4SecondaryAddresses
	}).(GetServiceLanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArrayOutput)
}

// Subnet Mask
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.Ipv4SubnetMask }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4SubnetMaskVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.Ipv4SubnetMaskVariable
	}).(pulumi.StringOutput)
}

// Enable VRRP
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv4Vrrps() GetServiceLanVpnInterfaceEthernetProfileParcelIpv4VrrpArrayOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) []GetServiceLanVpnInterfaceEthernetProfileParcelIpv4Vrrp {
		return v.Ipv4Vrrps
	}).(GetServiceLanVpnInterfaceEthernetProfileParcelIpv4VrrpArrayOutput)
}

// IPv6 Address Secondary
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv6AddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.Ipv6AddressVariable }).(pulumi.StringOutput)
}

// DHCPv6 Helper
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv6DhcpHelpers() GetServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpHelperArrayOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) []GetServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpHelper {
		return v.Ipv6DhcpHelpers
	}).(GetServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpHelperArrayOutput)
}

// secondary IPv6 addresses
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv6DhcpSecondaryAddresses() GetServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArrayOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) []GetServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddress {
		return v.Ipv6DhcpSecondaryAddresses
	}).(GetServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArrayOutput)
}

// enable Network Address Translation ipv6 on this interface
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv6Nat() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) bool { return v.Ipv6Nat }).(pulumi.BoolOutput)
}

// Static secondary IPv6 addresses
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv6SecondaryAddresses() GetServiceLanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArrayOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) []GetServiceLanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddress {
		return v.Ipv6SecondaryAddresses
	}).(GetServiceLanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArrayOutput)
}

// Enable VRRP Ipv6
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Ipv6Vrrps() GetServiceLanVpnInterfaceEthernetProfileParcelIpv6VrrpArrayOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) []GetServiceLanVpnInterfaceEthernetProfileParcelIpv6Vrrp {
		return v.Ipv6Vrrps
	}).(GetServiceLanVpnInterfaceEthernetProfileParcelIpv6VrrpArrayOutput)
}

// Interval for interface load calculation
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) LoadInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) int { return v.LoadInterval }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) LoadIntervalVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.LoadIntervalVariable }).(pulumi.StringOutput)
}

// MAC Address
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.MacAddress }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) MacAddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.MacAddressVariable }).(pulumi.StringOutput)
}

// Media type
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.MediaType }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) MediaTypeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.MediaTypeVariable }).(pulumi.StringOutput)
}

// The name of the profile parcel
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.Name }).(pulumi.StringOutput)
}

// NAT64 on this interface
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Nat64() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) bool { return v.Nat64 }).(pulumi.BoolOutput)
}

// Service LAN VPN Profile Profile ID
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) ServiceLanVpnProfileParcelId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.ServiceLanVpnProfileParcelId
	}).(pulumi.StringOutput)
}

func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Shutdown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) bool { return v.Shutdown }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) ShutdownVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.ShutdownVariable }).(pulumi.StringOutput)
}

// Set interface speed
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Speed() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.Speed }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) SpeedVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.SpeedVariable }).(pulumi.StringOutput)
}

// static NAT
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) StaticNats() GetServiceLanVpnInterfaceEthernetProfileParcelStaticNatArrayOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) []GetServiceLanVpnInterfaceEthernetProfileParcelStaticNat {
		return v.StaticNats
	}).(GetServiceLanVpnInterfaceEthernetProfileParcelStaticNatArrayOutput)
}

// TCP MSS on SYN packets, in bytes
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) TcpMss() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) int { return v.TcpMss }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) TcpMssVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.TcpMssVariable }).(pulumi.StringOutput)
}

// Enable tracker for this interface
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Tracker() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.Tracker }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) TrackerVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.TrackerVariable }).(pulumi.StringOutput)
}

// Enable/Disable SGT Enforcement on an interface
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) TrustsecEnableEnforcedPropogation() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) bool {
		return v.TrustsecEnableEnforcedPropogation
	}).(pulumi.BoolOutput)
}

// Indicates that the interface is trustworthy for CTS
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) TrustsecEnableSgtPropogation() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) bool {
		return v.TrustsecEnableSgtPropogation
	}).(pulumi.BoolOutput)
}

// SGT value between 2 and 65519
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) TrustsecEnforcedSecurityGroupTag() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) int {
		return v.TrustsecEnforcedSecurityGroupTag
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) TrustsecEnforcedSecurityGroupTagVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.TrustsecEnforcedSecurityGroupTagVariable
	}).(pulumi.StringOutput)
}

// Enables the interface for CTS SGT authorization and forwarding
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) TrustsecPropogate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) bool { return v.TrustsecPropogate }).(pulumi.BoolOutput)
}

// SGT value between 2 and 65519
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) TrustsecSecurityGroupTag() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) int { return v.TrustsecSecurityGroupTag }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) TrustsecSecurityGroupTagVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string {
		return v.TrustsecSecurityGroupTagVariable
	}).(pulumi.StringOutput)
}

// The version of the profile parcel
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) int { return v.Version }).(pulumi.IntOutput)
}

// Extend remote TLOC over a GRE tunnel to a local LAN interface
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) Xconnect() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.Xconnect }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput) XconnectVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLanVpnInterfaceEthernetProfileParcelResult) string { return v.XconnectVariable }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceLanVpnInterfaceEthernetProfileParcelResultOutput{})
}
