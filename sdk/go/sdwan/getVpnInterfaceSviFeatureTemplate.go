// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the VPN Interface SVI feature template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupVpnInterfaceSviFeatureTemplate(ctx, &sdwan.LookupVpnInterfaceSviFeatureTemplateArgs{
//				Id: pulumi.StringRef("f6b2c44c-693c-4763-b010-895aa3d236bd"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVpnInterfaceSviFeatureTemplate(ctx *pulumi.Context, args *LookupVpnInterfaceSviFeatureTemplateArgs, opts ...pulumi.InvokeOption) (*LookupVpnInterfaceSviFeatureTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpnInterfaceSviFeatureTemplateResult
	err := ctx.Invoke("sdwan:index/getVpnInterfaceSviFeatureTemplate:getVpnInterfaceSviFeatureTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpnInterfaceSviFeatureTemplate.
type LookupVpnInterfaceSviFeatureTemplateArgs struct {
	// The id of the feature template
	Id *string `pulumi:"id"`
	// The name of the feature template
	Name *string `pulumi:"name"`
}

// A collection of values returned by getVpnInterfaceSviFeatureTemplate.
type LookupVpnInterfaceSviFeatureTemplateResult struct {
	// Timeout value for dynamically learned ARP entries, \n\n seconds
	ArpTimeout int `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable string `pulumi:"arpTimeoutVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	DeviceTypes []string `pulumi:"deviceTypes"`
	// The id of the feature template
	Id string `pulumi:"id"`
	// Interface name: VLAN 1 - VLAN 4094 when present
	IfName string `pulumi:"ifName"`
	// Variable name
	IfNameVariable string `pulumi:"ifNameVariable"`
	// Interface description
	InterfaceDescription string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable string `pulumi:"interfaceDescriptionVariable"`
	// IP Directed-Broadcast
	IpDirectedBroadcast bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable string `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU \n\n, in bytes
	IpMtu int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable string `pulumi:"ipMtuVariable"`
	// Apply ACL
	Ipv4AccessLists []GetVpnInterfaceSviFeatureTemplateIpv4AccessList `pulumi:"ipv4AccessLists"`
	// Assign IPv4 address
	Ipv4Address string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable string `pulumi:"ipv4AddressVariable"`
	// Variable name
	Ipv4DhcpHelperVariable string `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP helper addresses
	Ipv4DhcpHelpers []string `pulumi:"ipv4DhcpHelpers"`
	// Assign secondary IP addresses
	Ipv4SecondaryAddresses []GetVpnInterfaceSviFeatureTemplateIpv4SecondaryAddress `pulumi:"ipv4SecondaryAddresses"`
	// Enable VRRP
	Ipv4Vrrps []GetVpnInterfaceSviFeatureTemplateIpv4Vrrp `pulumi:"ipv4Vrrps"`
	// Apply ACL
	Ipv6AccessLists []GetVpnInterfaceSviFeatureTemplateIpv6AccessList `pulumi:"ipv6AccessLists"`
	// Assign IPv6 address
	Ipv6Address string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable string `pulumi:"ipv6AddressVariable"`
	// Enable DHCPv6
	Ipv6DhcpClient bool `pulumi:"ipv6DhcpClient"`
	// Variable name
	Ipv6DhcpClientVariable string `pulumi:"ipv6DhcpClientVariable"`
	// Set administrative distance for DHCP default route
	Ipv6DhcpDistance int `pulumi:"ipv6DhcpDistance"`
	// Variable name
	Ipv6DhcpDistanceVariable string `pulumi:"ipv6DhcpDistanceVariable"`
	// DHCPv6 Helper
	Ipv6DhcpHelpers []GetVpnInterfaceSviFeatureTemplateIpv6DhcpHelper `pulumi:"ipv6DhcpHelpers"`
	// Enable DHCPv6 rapid commit
	Ipv6DhcpRapidCommit bool `pulumi:"ipv6DhcpRapidCommit"`
	// Variable name
	Ipv6DhcpRapidCommitVariable string `pulumi:"ipv6DhcpRapidCommitVariable"`
	// Assign secondary IPv6 addresses
	Ipv6SecondaryAddresses []GetVpnInterfaceSviFeatureTemplateIpv6SecondaryAddress `pulumi:"ipv6SecondaryAddresses"`
	// Enable VRRP
	Ipv6Vrrps []GetVpnInterfaceSviFeatureTemplateIpv6Vrrp `pulumi:"ipv6Vrrps"`
	// Interface MTU \n\n in bytes
	Mtu int `pulumi:"mtu"`
	// Variable name
	MtuVariable string `pulumi:"mtuVariable"`
	// The name of the feature template
	Name string `pulumi:"name"`
	// Enable policer
	Policers []GetVpnInterfaceSviFeatureTemplatePolicer `pulumi:"policers"`
	// Administrative state
	Shutdown bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable string `pulumi:"shutdownVariable"`
	// Configure static ARP entries
	StaticArpEntries []GetVpnInterfaceSviFeatureTemplateStaticArpEntry `pulumi:"staticArpEntries"`
	// TCP MSS on SYN packets, in bytes
	TcpMssAdjust int `pulumi:"tcpMssAdjust"`
	// Variable name
	TcpMssAdjustVariable string `pulumi:"tcpMssAdjustVariable"`
	// The template type
	TemplateType string `pulumi:"templateType"`
	// The version of the feature template
	Version int `pulumi:"version"`
}

func LookupVpnInterfaceSviFeatureTemplateOutput(ctx *pulumi.Context, args LookupVpnInterfaceSviFeatureTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupVpnInterfaceSviFeatureTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVpnInterfaceSviFeatureTemplateResult, error) {
			args := v.(LookupVpnInterfaceSviFeatureTemplateArgs)
			r, err := LookupVpnInterfaceSviFeatureTemplate(ctx, &args, opts...)
			var s LookupVpnInterfaceSviFeatureTemplateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVpnInterfaceSviFeatureTemplateResultOutput)
}

// A collection of arguments for invoking getVpnInterfaceSviFeatureTemplate.
type LookupVpnInterfaceSviFeatureTemplateOutputArgs struct {
	// The id of the feature template
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the feature template
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupVpnInterfaceSviFeatureTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnInterfaceSviFeatureTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getVpnInterfaceSviFeatureTemplate.
type LookupVpnInterfaceSviFeatureTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupVpnInterfaceSviFeatureTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnInterfaceSviFeatureTemplateResult)(nil)).Elem()
}

func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) ToLookupVpnInterfaceSviFeatureTemplateResultOutput() LookupVpnInterfaceSviFeatureTemplateResultOutput {
	return o
}

func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) ToLookupVpnInterfaceSviFeatureTemplateResultOutputWithContext(ctx context.Context) LookupVpnInterfaceSviFeatureTemplateResultOutput {
	return o
}

// Timeout value for dynamically learned ARP entries, \n\n seconds
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) ArpTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) int { return v.ArpTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) ArpTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.ArpTimeoutVariable }).(pulumi.StringOutput)
}

// The description of the feature template
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) []string { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// The id of the feature template
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// Interface name: VLAN 1 - VLAN 4094 when present
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) IfName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.IfName }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) IfNameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.IfNameVariable }).(pulumi.StringOutput)
}

// Interface description
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) InterfaceDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.InterfaceDescription }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) InterfaceDescriptionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.InterfaceDescriptionVariable }).(pulumi.StringOutput)
}

// IP Directed-Broadcast
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) IpDirectedBroadcast() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) bool { return v.IpDirectedBroadcast }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) IpDirectedBroadcastVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.IpDirectedBroadcastVariable }).(pulumi.StringOutput)
}

// IP MTU \n\n, in bytes
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) IpMtu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) int { return v.IpMtu }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) IpMtuVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.IpMtuVariable }).(pulumi.StringOutput)
}

// Apply ACL
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv4AccessLists() GetVpnInterfaceSviFeatureTemplateIpv4AccessListArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) []GetVpnInterfaceSviFeatureTemplateIpv4AccessList {
		return v.Ipv4AccessLists
	}).(GetVpnInterfaceSviFeatureTemplateIpv4AccessListArrayOutput)
}

// Assign IPv4 address
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.Ipv4Address }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv4AddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.Ipv4AddressVariable }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv4DhcpHelperVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.Ipv4DhcpHelperVariable }).(pulumi.StringOutput)
}

// List of DHCP helper addresses
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv4DhcpHelpers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) []string { return v.Ipv4DhcpHelpers }).(pulumi.StringArrayOutput)
}

// Assign secondary IP addresses
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv4SecondaryAddresses() GetVpnInterfaceSviFeatureTemplateIpv4SecondaryAddressArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) []GetVpnInterfaceSviFeatureTemplateIpv4SecondaryAddress {
		return v.Ipv4SecondaryAddresses
	}).(GetVpnInterfaceSviFeatureTemplateIpv4SecondaryAddressArrayOutput)
}

// Enable VRRP
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv4Vrrps() GetVpnInterfaceSviFeatureTemplateIpv4VrrpArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) []GetVpnInterfaceSviFeatureTemplateIpv4Vrrp {
		return v.Ipv4Vrrps
	}).(GetVpnInterfaceSviFeatureTemplateIpv4VrrpArrayOutput)
}

// Apply ACL
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv6AccessLists() GetVpnInterfaceSviFeatureTemplateIpv6AccessListArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) []GetVpnInterfaceSviFeatureTemplateIpv6AccessList {
		return v.Ipv6AccessLists
	}).(GetVpnInterfaceSviFeatureTemplateIpv6AccessListArrayOutput)
}

// Assign IPv6 address
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv6AddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.Ipv6AddressVariable }).(pulumi.StringOutput)
}

// Enable DHCPv6
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv6DhcpClient() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) bool { return v.Ipv6DhcpClient }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv6DhcpClientVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.Ipv6DhcpClientVariable }).(pulumi.StringOutput)
}

// Set administrative distance for DHCP default route
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv6DhcpDistance() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) int { return v.Ipv6DhcpDistance }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv6DhcpDistanceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.Ipv6DhcpDistanceVariable }).(pulumi.StringOutput)
}

// DHCPv6 Helper
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv6DhcpHelpers() GetVpnInterfaceSviFeatureTemplateIpv6DhcpHelperArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) []GetVpnInterfaceSviFeatureTemplateIpv6DhcpHelper {
		return v.Ipv6DhcpHelpers
	}).(GetVpnInterfaceSviFeatureTemplateIpv6DhcpHelperArrayOutput)
}

// Enable DHCPv6 rapid commit
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv6DhcpRapidCommit() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) bool { return v.Ipv6DhcpRapidCommit }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv6DhcpRapidCommitVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.Ipv6DhcpRapidCommitVariable }).(pulumi.StringOutput)
}

// Assign secondary IPv6 addresses
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv6SecondaryAddresses() GetVpnInterfaceSviFeatureTemplateIpv6SecondaryAddressArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) []GetVpnInterfaceSviFeatureTemplateIpv6SecondaryAddress {
		return v.Ipv6SecondaryAddresses
	}).(GetVpnInterfaceSviFeatureTemplateIpv6SecondaryAddressArrayOutput)
}

// Enable VRRP
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Ipv6Vrrps() GetVpnInterfaceSviFeatureTemplateIpv6VrrpArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) []GetVpnInterfaceSviFeatureTemplateIpv6Vrrp {
		return v.Ipv6Vrrps
	}).(GetVpnInterfaceSviFeatureTemplateIpv6VrrpArrayOutput)
}

// Interface MTU \n\n in bytes
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Mtu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) int { return v.Mtu }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) MtuVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.MtuVariable }).(pulumi.StringOutput)
}

// The name of the feature template
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// Enable policer
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Policers() GetVpnInterfaceSviFeatureTemplatePolicerArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) []GetVpnInterfaceSviFeatureTemplatePolicer {
		return v.Policers
	}).(GetVpnInterfaceSviFeatureTemplatePolicerArrayOutput)
}

// Administrative state
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Shutdown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) bool { return v.Shutdown }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) ShutdownVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.ShutdownVariable }).(pulumi.StringOutput)
}

// Configure static ARP entries
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) StaticArpEntries() GetVpnInterfaceSviFeatureTemplateStaticArpEntryArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) []GetVpnInterfaceSviFeatureTemplateStaticArpEntry {
		return v.StaticArpEntries
	}).(GetVpnInterfaceSviFeatureTemplateStaticArpEntryArrayOutput)
}

// TCP MSS on SYN packets, in bytes
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) TcpMssAdjust() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) int { return v.TcpMssAdjust }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) TcpMssAdjustVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.TcpMssAdjustVariable }).(pulumi.StringOutput)
}

// The template type
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) string { return v.TemplateType }).(pulumi.StringOutput)
}

// The version of the feature template
func (o LookupVpnInterfaceSviFeatureTemplateResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceSviFeatureTemplateResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpnInterfaceSviFeatureTemplateResultOutput{})
}
