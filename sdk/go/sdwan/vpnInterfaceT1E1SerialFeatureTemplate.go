// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a VPN Interface T1 E1 Serial feature template.
//   - Minimum SD-WAN Manager version: `15.0.0`
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/vpnInterfaceT1E1SerialFeatureTemplate:VpnInterfaceT1E1SerialFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type VpnInterfaceT1E1SerialFeatureTemplate struct {
	pulumi.CustomResourceState

	// Link autonegotiation - Default value: `true`
	Autonegotiate pulumi.BoolPtrOutput `pulumi:"autonegotiate"`
	// Variable name
	AutonegotiateVariable pulumi.StringPtrOutput `pulumi:"autonegotiateVariable"`
	// Clear don't fragment bit - Default value: `false`
	ClearDontFragmentBit pulumi.BoolPtrOutput `pulumi:"clearDontFragmentBit"`
	// Variable name
	ClearDontFragmentBitVariable pulumi.StringPtrOutput `pulumi:"clearDontFragmentBitVariable"`
	// Set preference for interface Clock speed - Choices: `1200`, `2400`, `3600`, `4800`, `9600`, `14400`, `19200`, `28800`,
	// `32000`, `38400`, `48000`, `56000`, `57600`, `64000`, `72000`, `115200`, `125000`, `148000`, `192000`, `250000`,
	// `256000`, `384000`, `500000`, `512000`, `768000`, `800000`, `1000000`, `2000000`, `4000000`, `5300000`, `8000000`
	ClockRate pulumi.StringPtrOutput `pulumi:"clockRate"`
	// Variable name
	ClockRateVariable pulumi.StringPtrOutput `pulumi:"clockRateVariable"`
	// Enable core region - Choices: `core`, `core-shared` - Default value: `core`
	CoreRegion pulumi.StringPtrOutput `pulumi:"coreRegion"`
	// Variable name
	CoreRegionVariable pulumi.StringPtrOutput `pulumi:"coreRegionVariable"`
	// The description of the feature template
	Description pulumi.StringOutput `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayOutput `pulumi:"deviceTypes"`
	// Enable core region - Default value: `false`
	EnableCoreRegion pulumi.BoolPtrOutput `pulumi:"enableCoreRegion"`
	// Variable name
	EnableCoreRegionVariable pulumi.StringPtrOutput `pulumi:"enableCoreRegionVariable"`
	// Configure Encapsulation for interface - Choices: `hdlc`, `ppp`, `frame-relay`
	Encapsulation pulumi.StringPtrOutput `pulumi:"encapsulation"`
	// Variable name
	EncapsulationVariable pulumi.StringPtrOutput `pulumi:"encapsulationVariable"`
	// Interface bandwidth capacity, in kbps - Range: `1`-`128`
	InterfaceBandwidthCapacity pulumi.IntPtrOutput `pulumi:"interfaceBandwidthCapacity"`
	// Variable name
	InterfaceBandwidthCapacityVariable pulumi.StringPtrOutput `pulumi:"interfaceBandwidthCapacityVariable"`
	// Interface description
	InterfaceDescription pulumi.StringPtrOutput `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrOutput `pulumi:"interfaceDescriptionVariable"`
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	InterfaceDownstreamBandwidthCapacity pulumi.IntPtrOutput `pulumi:"interfaceDownstreamBandwidthCapacity"`
	// Variable name
	InterfaceDownstreamBandwidthCapacityVariable pulumi.StringPtrOutput `pulumi:"interfaceDownstreamBandwidthCapacityVariable"`
	// Interface MTU <68...2000>, in bytes - Range: `68`-`2000` - Default value: `1500`
	IpMtu pulumi.IntPtrOutput `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable pulumi.StringPtrOutput `pulumi:"ipMtuVariable"`
	// Apply ACL
	Ipv4AccessLists VpnInterfaceT1E1SerialFeatureTemplateIpv4AccessListArrayOutput `pulumi:"ipv4AccessLists"`
	// Assign IPv4 address
	Ipv4Address pulumi.StringPtrOutput `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrOutput `pulumi:"ipv4AddressVariable"`
	// Apply IPv6 access list
	Ipv6AccessLists VpnInterfaceT1E1SerialFeatureTemplateIpv6AccessListArrayOutput `pulumi:"ipv6AccessLists"`
	// Assign IPv6 address
	Ipv6Address pulumi.StringPtrOutput `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrOutput `pulumi:"ipv6AddressVariable"`
	// The name of the feature template
	Name pulumi.StringOutput `pulumi:"name"`
	// Per-tunnel Qos - Default value: `false`
	PerTunnelQos pulumi.BoolPtrOutput `pulumi:"perTunnelQos"`
	// Per-tunnel QoS Aggregator - Default value: `false`
	PerTunnelQosAggregator pulumi.BoolPtrOutput `pulumi:"perTunnelQosAggregator"`
	// Variable name
	PerTunnelQosAggregatorVariable pulumi.StringPtrOutput `pulumi:"perTunnelQosAggregatorVariable"`
	// Variable name
	PerTunnelQosVariable pulumi.StringPtrOutput `pulumi:"perTunnelQosVariable"`
	// Path MTU Discovery - Default value: `false`
	PmtuDiscovery pulumi.BoolPtrOutput `pulumi:"pmtuDiscovery"`
	// Variable name
	PmtuDiscoveryVariable pulumi.StringPtrOutput `pulumi:"pmtuDiscoveryVariable"`
	// Name of QoS map
	QosMap pulumi.StringPtrOutput `pulumi:"qosMap"`
	// Variable name
	QosMapVariable pulumi.StringPtrOutput `pulumi:"qosMapVariable"`
	// Name of VPN QoS map
	QosMapVpn pulumi.StringPtrOutput `pulumi:"qosMapVpn"`
	// Variable name
	QosMapVpnVariable pulumi.StringPtrOutput `pulumi:"qosMapVpnVariable"`
	// Enable secondary region - Choices: `off`, `secondary-only`, `secondary-shared` - Default value: `off`
	SecondaryRegion pulumi.StringPtrOutput `pulumi:"secondaryRegion"`
	// Variable name
	SecondaryRegionVariable pulumi.StringPtrOutput `pulumi:"secondaryRegionVariable"`
	// Serial Interface Name - slot/subslot/port:channel-group for T1/E1, slot/subslot/port for NIM-1T
	SerialInterfaceName pulumi.StringPtrOutput `pulumi:"serialInterfaceName"`
	// Variable name
	SerialInterfaceNameVariable pulumi.StringPtrOutput `pulumi:"serialInterfaceNameVariable"`
	// 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
	ShapingRate pulumi.IntPtrOutput `pulumi:"shapingRate"`
	// Variable name
	ShapingRateVariable pulumi.StringPtrOutput `pulumi:"shapingRateVariable"`
	// Administrative state - Default value: `true`
	Shutdown pulumi.BoolPtrOutput `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable pulumi.StringPtrOutput `pulumi:"shutdownVariable"`
	// Static ingress QoS for the port - Range: `0`-`7`
	StaticIngressQos pulumi.IntPtrOutput `pulumi:"staticIngressQos"`
	// Variable name
	StaticIngressQosVariable pulumi.StringPtrOutput `pulumi:"staticIngressQosVariable"`
	// TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
	TcpMss pulumi.IntPtrOutput `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable pulumi.StringPtrOutput `pulumi:"tcpMssVariable"`
	// The template type
	TemplateType pulumi.StringOutput `pulumi:"templateType"`
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension pulumi.StringPtrOutput `pulumi:"tlocExtension"`
	// Variable name
	TlocExtensionVariable pulumi.StringPtrOutput `pulumi:"tlocExtensionVariable"`
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowAll"`
	// Variable name
	TunnelInterfaceAllowAllVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowAllVariable"`
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowBgp"`
	// Variable name
	TunnelInterfaceAllowBgpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowBgpVariable"`
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowDhcp"`
	// Variable name
	TunnelInterfaceAllowDhcpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowDhcpVariable"`
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDns pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowDns"`
	// Variable name
	TunnelInterfaceAllowDnsVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowDnsVariable"`
	// Allow/Deny Https - Default value: `true`
	TunnelInterfaceAllowHttps pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowHttps"`
	// Variable name
	TunnelInterfaceAllowHttpsVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowHttpsVariable"`
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowIcmp"`
	// Variable name
	TunnelInterfaceAllowIcmpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowIcmpVariable"`
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowNetconf"`
	// Variable name
	TunnelInterfaceAllowNetconfVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowNetconfVariable"`
	// Allow/Deny NTP - Default value: `false`
	TunnelInterfaceAllowNtp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowNtp"`
	// Variable name
	TunnelInterfaceAllowNtpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowNtpVariable"`
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowOspf"`
	// Variable name
	TunnelInterfaceAllowOspfVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowOspfVariable"`
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowSnmp"`
	// Variable name
	TunnelInterfaceAllowSnmpVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowSnmpVariable"`
	// Allow/Deny SSH - Default value: `false`
	TunnelInterfaceAllowSsh pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowSsh"`
	// Variable name
	TunnelInterfaceAllowSshVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowSshVariable"`
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceAllowStun"`
	// Variable name
	TunnelInterfaceAllowStunVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceAllowStunVariable"`
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel pulumi.StringPtrOutput `pulumi:"tunnelInterfaceBindLoopbackTunnel"`
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceBindLoopbackTunnelVariable"`
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceBorder"`
	// Variable name
	TunnelInterfaceBorderVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceBorderVariable"`
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier pulumi.StringPtrOutput `pulumi:"tunnelInterfaceCarrier"`
	// Variable name
	TunnelInterfaceCarrierVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceCarrierVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceClearDontFragment"`
	// Variable name
	TunnelInterfaceClearDontFragmentVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceClearDontFragmentVariable"`
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `default`
	TunnelInterfaceColor pulumi.StringPtrOutput `pulumi:"tunnelInterfaceColor"`
	// Variable name
	TunnelInterfaceColorVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceColorVariable"`
	// Set the maximum number of control connections for this TLOC - Range: `0`-`8`
	TunnelInterfaceControlConnections pulumi.IntPtrOutput `pulumi:"tunnelInterfaceControlConnections"`
	// Variable name
	TunnelInterfaceControlConnectionsVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceControlConnectionsVariable"`
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations VpnInterfaceT1E1SerialFeatureTemplateTunnelInterfaceEncapsulationArrayOutput `pulumi:"tunnelInterfaceEncapsulations"`
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceExcludeControllerGroupListVariable"`
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists pulumi.IntArrayOutput `pulumi:"tunnelInterfaceExcludeControllerGroupLists"`
	// List of groups
	TunnelInterfaceGroups pulumi.IntArrayOutput `pulumi:"tunnelInterfaceGroups"`
	// Variable name
	TunnelInterfaceGroupsVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceGroupsVariable"`
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval pulumi.IntPtrOutput `pulumi:"tunnelInterfaceHelloInterval"`
	// Variable name
	TunnelInterfaceHelloIntervalVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceHelloIntervalVariable"`
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance pulumi.IntPtrOutput `pulumi:"tunnelInterfaceHelloTolerance"`
	// Variable name
	TunnelInterfaceHelloToleranceVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceHelloToleranceVariable"`
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceLastResortCircuit"`
	// Variable name
	TunnelInterfaceLastResortCircuitVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceLastResortCircuitVariable"`
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceLowBandwidthLink"`
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceLowBandwidthLinkVariable"`
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval pulumi.IntPtrOutput `pulumi:"tunnelInterfaceNatRefreshInterval"`
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceNatRefreshIntervalVariable"`
	// Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
	TunnelInterfaceNetworkBroadcast pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceNetworkBroadcast"`
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceNetworkBroadcastVariable"`
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop pulumi.BoolPtrOutput `pulumi:"tunnelInterfacePortHop"`
	// Variable name
	TunnelInterfacePortHopVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfacePortHopVariable"`
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceRestrict pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceRestrict"`
	// Variable name
	TunnelInterfaceRestrictVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceRestrictVariable"`
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss pulumi.IntPtrOutput `pulumi:"tunnelInterfaceTunnelTcpMss"`
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceTunnelTcpMssVariable"`
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer pulumi.BoolPtrOutput `pulumi:"tunnelInterfaceVbondAsStunServer"`
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceVbondAsStunServerVariable"`
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference pulumi.IntPtrOutput `pulumi:"tunnelInterfaceVmanageConnectionPreference"`
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable pulumi.StringPtrOutput `pulumi:"tunnelInterfaceVmanageConnectionPreferenceVariable"`
	// Set tunnel QoS mode - Choices: `spoke`
	TunnelQosMode pulumi.StringPtrOutput `pulumi:"tunnelQosMode"`
	// Variable name
	TunnelQosModeVariable pulumi.StringPtrOutput `pulumi:"tunnelQosModeVariable"`
	// The version of the feature template
	Version pulumi.IntOutput `pulumi:"version"`
	// Name of rewrite rule
	WriteRule pulumi.StringPtrOutput `pulumi:"writeRule"`
	// Variable name
	WriteRuleVariable pulumi.StringPtrOutput `pulumi:"writeRuleVariable"`
}

// NewVpnInterfaceT1E1SerialFeatureTemplate registers a new resource with the given unique name, arguments, and options.
func NewVpnInterfaceT1E1SerialFeatureTemplate(ctx *pulumi.Context,
	name string, args *VpnInterfaceT1E1SerialFeatureTemplateArgs, opts ...pulumi.ResourceOption) (*VpnInterfaceT1E1SerialFeatureTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.DeviceTypes == nil {
		return nil, errors.New("invalid value for required argument 'DeviceTypes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpnInterfaceT1E1SerialFeatureTemplate
	err := ctx.RegisterResource("sdwan:index/vpnInterfaceT1E1SerialFeatureTemplate:VpnInterfaceT1E1SerialFeatureTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnInterfaceT1E1SerialFeatureTemplate gets an existing VpnInterfaceT1E1SerialFeatureTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnInterfaceT1E1SerialFeatureTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnInterfaceT1E1SerialFeatureTemplateState, opts ...pulumi.ResourceOption) (*VpnInterfaceT1E1SerialFeatureTemplate, error) {
	var resource VpnInterfaceT1E1SerialFeatureTemplate
	err := ctx.ReadResource("sdwan:index/vpnInterfaceT1E1SerialFeatureTemplate:VpnInterfaceT1E1SerialFeatureTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnInterfaceT1E1SerialFeatureTemplate resources.
type vpnInterfaceT1E1SerialFeatureTemplateState struct {
	// Link autonegotiation - Default value: `true`
	Autonegotiate *bool `pulumi:"autonegotiate"`
	// Variable name
	AutonegotiateVariable *string `pulumi:"autonegotiateVariable"`
	// Clear don't fragment bit - Default value: `false`
	ClearDontFragmentBit *bool `pulumi:"clearDontFragmentBit"`
	// Variable name
	ClearDontFragmentBitVariable *string `pulumi:"clearDontFragmentBitVariable"`
	// Set preference for interface Clock speed - Choices: `1200`, `2400`, `3600`, `4800`, `9600`, `14400`, `19200`, `28800`,
	// `32000`, `38400`, `48000`, `56000`, `57600`, `64000`, `72000`, `115200`, `125000`, `148000`, `192000`, `250000`,
	// `256000`, `384000`, `500000`, `512000`, `768000`, `800000`, `1000000`, `2000000`, `4000000`, `5300000`, `8000000`
	ClockRate *string `pulumi:"clockRate"`
	// Variable name
	ClockRateVariable *string `pulumi:"clockRateVariable"`
	// Enable core region - Choices: `core`, `core-shared` - Default value: `core`
	CoreRegion *string `pulumi:"coreRegion"`
	// Variable name
	CoreRegionVariable *string `pulumi:"coreRegionVariable"`
	// The description of the feature template
	Description *string `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Enable core region - Default value: `false`
	EnableCoreRegion *bool `pulumi:"enableCoreRegion"`
	// Variable name
	EnableCoreRegionVariable *string `pulumi:"enableCoreRegionVariable"`
	// Configure Encapsulation for interface - Choices: `hdlc`, `ppp`, `frame-relay`
	Encapsulation *string `pulumi:"encapsulation"`
	// Variable name
	EncapsulationVariable *string `pulumi:"encapsulationVariable"`
	// Interface bandwidth capacity, in kbps - Range: `1`-`128`
	InterfaceBandwidthCapacity *int `pulumi:"interfaceBandwidthCapacity"`
	// Variable name
	InterfaceBandwidthCapacityVariable *string `pulumi:"interfaceBandwidthCapacityVariable"`
	// Interface description
	InterfaceDescription *string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable *string `pulumi:"interfaceDescriptionVariable"`
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	InterfaceDownstreamBandwidthCapacity *int `pulumi:"interfaceDownstreamBandwidthCapacity"`
	// Variable name
	InterfaceDownstreamBandwidthCapacityVariable *string `pulumi:"interfaceDownstreamBandwidthCapacityVariable"`
	// Interface MTU <68...2000>, in bytes - Range: `68`-`2000` - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	// Apply ACL
	Ipv4AccessLists []VpnInterfaceT1E1SerialFeatureTemplateIpv4AccessList `pulumi:"ipv4AccessLists"`
	// Assign IPv4 address
	Ipv4Address *string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable *string `pulumi:"ipv4AddressVariable"`
	// Apply IPv6 access list
	Ipv6AccessLists []VpnInterfaceT1E1SerialFeatureTemplateIpv6AccessList `pulumi:"ipv6AccessLists"`
	// Assign IPv6 address
	Ipv6Address *string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable *string `pulumi:"ipv6AddressVariable"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Per-tunnel Qos - Default value: `false`
	PerTunnelQos *bool `pulumi:"perTunnelQos"`
	// Per-tunnel QoS Aggregator - Default value: `false`
	PerTunnelQosAggregator *bool `pulumi:"perTunnelQosAggregator"`
	// Variable name
	PerTunnelQosAggregatorVariable *string `pulumi:"perTunnelQosAggregatorVariable"`
	// Variable name
	PerTunnelQosVariable *string `pulumi:"perTunnelQosVariable"`
	// Path MTU Discovery - Default value: `false`
	PmtuDiscovery *bool `pulumi:"pmtuDiscovery"`
	// Variable name
	PmtuDiscoveryVariable *string `pulumi:"pmtuDiscoveryVariable"`
	// Name of QoS map
	QosMap *string `pulumi:"qosMap"`
	// Variable name
	QosMapVariable *string `pulumi:"qosMapVariable"`
	// Name of VPN QoS map
	QosMapVpn *string `pulumi:"qosMapVpn"`
	// Variable name
	QosMapVpnVariable *string `pulumi:"qosMapVpnVariable"`
	// Enable secondary region - Choices: `off`, `secondary-only`, `secondary-shared` - Default value: `off`
	SecondaryRegion *string `pulumi:"secondaryRegion"`
	// Variable name
	SecondaryRegionVariable *string `pulumi:"secondaryRegionVariable"`
	// Serial Interface Name - slot/subslot/port:channel-group for T1/E1, slot/subslot/port for NIM-1T
	SerialInterfaceName *string `pulumi:"serialInterfaceName"`
	// Variable name
	SerialInterfaceNameVariable *string `pulumi:"serialInterfaceNameVariable"`
	// 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
	ShapingRate *int `pulumi:"shapingRate"`
	// Variable name
	ShapingRateVariable *string `pulumi:"shapingRateVariable"`
	// Administrative state - Default value: `true`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// Static ingress QoS for the port - Range: `0`-`7`
	StaticIngressQos *int `pulumi:"staticIngressQos"`
	// Variable name
	StaticIngressQosVariable *string `pulumi:"staticIngressQosVariable"`
	// TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
	TcpMss *int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable *string `pulumi:"tcpMssVariable"`
	// The template type
	TemplateType *string `pulumi:"templateType"`
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension *string `pulumi:"tlocExtension"`
	// Variable name
	TlocExtensionVariable *string `pulumi:"tlocExtensionVariable"`
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll *bool `pulumi:"tunnelInterfaceAllowAll"`
	// Variable name
	TunnelInterfaceAllowAllVariable *string `pulumi:"tunnelInterfaceAllowAllVariable"`
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp *bool `pulumi:"tunnelInterfaceAllowBgp"`
	// Variable name
	TunnelInterfaceAllowBgpVariable *string `pulumi:"tunnelInterfaceAllowBgpVariable"`
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp *bool `pulumi:"tunnelInterfaceAllowDhcp"`
	// Variable name
	TunnelInterfaceAllowDhcpVariable *string `pulumi:"tunnelInterfaceAllowDhcpVariable"`
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDns *bool `pulumi:"tunnelInterfaceAllowDns"`
	// Variable name
	TunnelInterfaceAllowDnsVariable *string `pulumi:"tunnelInterfaceAllowDnsVariable"`
	// Allow/Deny Https - Default value: `true`
	TunnelInterfaceAllowHttps *bool `pulumi:"tunnelInterfaceAllowHttps"`
	// Variable name
	TunnelInterfaceAllowHttpsVariable *string `pulumi:"tunnelInterfaceAllowHttpsVariable"`
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp *bool `pulumi:"tunnelInterfaceAllowIcmp"`
	// Variable name
	TunnelInterfaceAllowIcmpVariable *string `pulumi:"tunnelInterfaceAllowIcmpVariable"`
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf *bool `pulumi:"tunnelInterfaceAllowNetconf"`
	// Variable name
	TunnelInterfaceAllowNetconfVariable *string `pulumi:"tunnelInterfaceAllowNetconfVariable"`
	// Allow/Deny NTP - Default value: `false`
	TunnelInterfaceAllowNtp *bool `pulumi:"tunnelInterfaceAllowNtp"`
	// Variable name
	TunnelInterfaceAllowNtpVariable *string `pulumi:"tunnelInterfaceAllowNtpVariable"`
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf *bool `pulumi:"tunnelInterfaceAllowOspf"`
	// Variable name
	TunnelInterfaceAllowOspfVariable *string `pulumi:"tunnelInterfaceAllowOspfVariable"`
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp *bool `pulumi:"tunnelInterfaceAllowSnmp"`
	// Variable name
	TunnelInterfaceAllowSnmpVariable *string `pulumi:"tunnelInterfaceAllowSnmpVariable"`
	// Allow/Deny SSH - Default value: `false`
	TunnelInterfaceAllowSsh *bool `pulumi:"tunnelInterfaceAllowSsh"`
	// Variable name
	TunnelInterfaceAllowSshVariable *string `pulumi:"tunnelInterfaceAllowSshVariable"`
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun *bool `pulumi:"tunnelInterfaceAllowStun"`
	// Variable name
	TunnelInterfaceAllowStunVariable *string `pulumi:"tunnelInterfaceAllowStunVariable"`
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel *string `pulumi:"tunnelInterfaceBindLoopbackTunnel"`
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable *string `pulumi:"tunnelInterfaceBindLoopbackTunnelVariable"`
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder *bool `pulumi:"tunnelInterfaceBorder"`
	// Variable name
	TunnelInterfaceBorderVariable *string `pulumi:"tunnelInterfaceBorderVariable"`
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier *string `pulumi:"tunnelInterfaceCarrier"`
	// Variable name
	TunnelInterfaceCarrierVariable *string `pulumi:"tunnelInterfaceCarrierVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment *bool `pulumi:"tunnelInterfaceClearDontFragment"`
	// Variable name
	TunnelInterfaceClearDontFragmentVariable *string `pulumi:"tunnelInterfaceClearDontFragmentVariable"`
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `default`
	TunnelInterfaceColor *string `pulumi:"tunnelInterfaceColor"`
	// Variable name
	TunnelInterfaceColorVariable *string `pulumi:"tunnelInterfaceColorVariable"`
	// Set the maximum number of control connections for this TLOC - Range: `0`-`8`
	TunnelInterfaceControlConnections *int `pulumi:"tunnelInterfaceControlConnections"`
	// Variable name
	TunnelInterfaceControlConnectionsVariable *string `pulumi:"tunnelInterfaceControlConnectionsVariable"`
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations []VpnInterfaceT1E1SerialFeatureTemplateTunnelInterfaceEncapsulation `pulumi:"tunnelInterfaceEncapsulations"`
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable *string `pulumi:"tunnelInterfaceExcludeControllerGroupListVariable"`
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists []int `pulumi:"tunnelInterfaceExcludeControllerGroupLists"`
	// List of groups
	TunnelInterfaceGroups []int `pulumi:"tunnelInterfaceGroups"`
	// Variable name
	TunnelInterfaceGroupsVariable *string `pulumi:"tunnelInterfaceGroupsVariable"`
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval *int `pulumi:"tunnelInterfaceHelloInterval"`
	// Variable name
	TunnelInterfaceHelloIntervalVariable *string `pulumi:"tunnelInterfaceHelloIntervalVariable"`
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance *int `pulumi:"tunnelInterfaceHelloTolerance"`
	// Variable name
	TunnelInterfaceHelloToleranceVariable *string `pulumi:"tunnelInterfaceHelloToleranceVariable"`
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit *bool `pulumi:"tunnelInterfaceLastResortCircuit"`
	// Variable name
	TunnelInterfaceLastResortCircuitVariable *string `pulumi:"tunnelInterfaceLastResortCircuitVariable"`
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink *bool `pulumi:"tunnelInterfaceLowBandwidthLink"`
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable *string `pulumi:"tunnelInterfaceLowBandwidthLinkVariable"`
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval *int `pulumi:"tunnelInterfaceNatRefreshInterval"`
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable *string `pulumi:"tunnelInterfaceNatRefreshIntervalVariable"`
	// Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
	TunnelInterfaceNetworkBroadcast *bool `pulumi:"tunnelInterfaceNetworkBroadcast"`
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable *string `pulumi:"tunnelInterfaceNetworkBroadcastVariable"`
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop *bool `pulumi:"tunnelInterfacePortHop"`
	// Variable name
	TunnelInterfacePortHopVariable *string `pulumi:"tunnelInterfacePortHopVariable"`
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceRestrict *bool `pulumi:"tunnelInterfaceRestrict"`
	// Variable name
	TunnelInterfaceRestrictVariable *string `pulumi:"tunnelInterfaceRestrictVariable"`
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss *int `pulumi:"tunnelInterfaceTunnelTcpMss"`
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable *string `pulumi:"tunnelInterfaceTunnelTcpMssVariable"`
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer *bool `pulumi:"tunnelInterfaceVbondAsStunServer"`
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable *string `pulumi:"tunnelInterfaceVbondAsStunServerVariable"`
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference *int `pulumi:"tunnelInterfaceVmanageConnectionPreference"`
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable *string `pulumi:"tunnelInterfaceVmanageConnectionPreferenceVariable"`
	// Set tunnel QoS mode - Choices: `spoke`
	TunnelQosMode *string `pulumi:"tunnelQosMode"`
	// Variable name
	TunnelQosModeVariable *string `pulumi:"tunnelQosModeVariable"`
	// The version of the feature template
	Version *int `pulumi:"version"`
	// Name of rewrite rule
	WriteRule *string `pulumi:"writeRule"`
	// Variable name
	WriteRuleVariable *string `pulumi:"writeRuleVariable"`
}

type VpnInterfaceT1E1SerialFeatureTemplateState struct {
	// Link autonegotiation - Default value: `true`
	Autonegotiate pulumi.BoolPtrInput
	// Variable name
	AutonegotiateVariable pulumi.StringPtrInput
	// Clear don't fragment bit - Default value: `false`
	ClearDontFragmentBit pulumi.BoolPtrInput
	// Variable name
	ClearDontFragmentBitVariable pulumi.StringPtrInput
	// Set preference for interface Clock speed - Choices: `1200`, `2400`, `3600`, `4800`, `9600`, `14400`, `19200`, `28800`,
	// `32000`, `38400`, `48000`, `56000`, `57600`, `64000`, `72000`, `115200`, `125000`, `148000`, `192000`, `250000`,
	// `256000`, `384000`, `500000`, `512000`, `768000`, `800000`, `1000000`, `2000000`, `4000000`, `5300000`, `8000000`
	ClockRate pulumi.StringPtrInput
	// Variable name
	ClockRateVariable pulumi.StringPtrInput
	// Enable core region - Choices: `core`, `core-shared` - Default value: `core`
	CoreRegion pulumi.StringPtrInput
	// Variable name
	CoreRegionVariable pulumi.StringPtrInput
	// The description of the feature template
	Description pulumi.StringPtrInput
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Enable core region - Default value: `false`
	EnableCoreRegion pulumi.BoolPtrInput
	// Variable name
	EnableCoreRegionVariable pulumi.StringPtrInput
	// Configure Encapsulation for interface - Choices: `hdlc`, `ppp`, `frame-relay`
	Encapsulation pulumi.StringPtrInput
	// Variable name
	EncapsulationVariable pulumi.StringPtrInput
	// Interface bandwidth capacity, in kbps - Range: `1`-`128`
	InterfaceBandwidthCapacity pulumi.IntPtrInput
	// Variable name
	InterfaceBandwidthCapacityVariable pulumi.StringPtrInput
	// Interface description
	InterfaceDescription pulumi.StringPtrInput
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrInput
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	InterfaceDownstreamBandwidthCapacity pulumi.IntPtrInput
	// Variable name
	InterfaceDownstreamBandwidthCapacityVariable pulumi.StringPtrInput
	// Interface MTU <68...2000>, in bytes - Range: `68`-`2000` - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	// Apply ACL
	Ipv4AccessLists VpnInterfaceT1E1SerialFeatureTemplateIpv4AccessListArrayInput
	// Assign IPv4 address
	Ipv4Address pulumi.StringPtrInput
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrInput
	// Apply IPv6 access list
	Ipv6AccessLists VpnInterfaceT1E1SerialFeatureTemplateIpv6AccessListArrayInput
	// Assign IPv6 address
	Ipv6Address pulumi.StringPtrInput
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Per-tunnel Qos - Default value: `false`
	PerTunnelQos pulumi.BoolPtrInput
	// Per-tunnel QoS Aggregator - Default value: `false`
	PerTunnelQosAggregator pulumi.BoolPtrInput
	// Variable name
	PerTunnelQosAggregatorVariable pulumi.StringPtrInput
	// Variable name
	PerTunnelQosVariable pulumi.StringPtrInput
	// Path MTU Discovery - Default value: `false`
	PmtuDiscovery pulumi.BoolPtrInput
	// Variable name
	PmtuDiscoveryVariable pulumi.StringPtrInput
	// Name of QoS map
	QosMap pulumi.StringPtrInput
	// Variable name
	QosMapVariable pulumi.StringPtrInput
	// Name of VPN QoS map
	QosMapVpn pulumi.StringPtrInput
	// Variable name
	QosMapVpnVariable pulumi.StringPtrInput
	// Enable secondary region - Choices: `off`, `secondary-only`, `secondary-shared` - Default value: `off`
	SecondaryRegion pulumi.StringPtrInput
	// Variable name
	SecondaryRegionVariable pulumi.StringPtrInput
	// Serial Interface Name - slot/subslot/port:channel-group for T1/E1, slot/subslot/port for NIM-1T
	SerialInterfaceName pulumi.StringPtrInput
	// Variable name
	SerialInterfaceNameVariable pulumi.StringPtrInput
	// 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
	ShapingRate pulumi.IntPtrInput
	// Variable name
	ShapingRateVariable pulumi.StringPtrInput
	// Administrative state - Default value: `true`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// Static ingress QoS for the port - Range: `0`-`7`
	StaticIngressQos pulumi.IntPtrInput
	// Variable name
	StaticIngressQosVariable pulumi.StringPtrInput
	// TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
	TcpMss pulumi.IntPtrInput
	// Variable name
	TcpMssVariable pulumi.StringPtrInput
	// The template type
	TemplateType pulumi.StringPtrInput
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension pulumi.StringPtrInput
	// Variable name
	TlocExtensionVariable pulumi.StringPtrInput
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowAllVariable pulumi.StringPtrInput
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowBgpVariable pulumi.StringPtrInput
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowDhcpVariable pulumi.StringPtrInput
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDns pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowDnsVariable pulumi.StringPtrInput
	// Allow/Deny Https - Default value: `true`
	TunnelInterfaceAllowHttps pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowHttpsVariable pulumi.StringPtrInput
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowIcmpVariable pulumi.StringPtrInput
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowNetconfVariable pulumi.StringPtrInput
	// Allow/Deny NTP - Default value: `false`
	TunnelInterfaceAllowNtp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowNtpVariable pulumi.StringPtrInput
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowOspfVariable pulumi.StringPtrInput
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowSnmpVariable pulumi.StringPtrInput
	// Allow/Deny SSH - Default value: `false`
	TunnelInterfaceAllowSsh pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowSshVariable pulumi.StringPtrInput
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowStunVariable pulumi.StringPtrInput
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable pulumi.StringPtrInput
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceBorderVariable pulumi.StringPtrInput
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceCarrierVariable pulumi.StringPtrInput
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceClearDontFragmentVariable pulumi.StringPtrInput
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `default`
	TunnelInterfaceColor pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceColorVariable pulumi.StringPtrInput
	// Set the maximum number of control connections for this TLOC - Range: `0`-`8`
	TunnelInterfaceControlConnections pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceControlConnectionsVariable pulumi.StringPtrInput
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations VpnInterfaceT1E1SerialFeatureTemplateTunnelInterfaceEncapsulationArrayInput
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable pulumi.StringPtrInput
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists pulumi.IntArrayInput
	// List of groups
	TunnelInterfaceGroups pulumi.IntArrayInput
	// Variable name
	TunnelInterfaceGroupsVariable pulumi.StringPtrInput
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceHelloIntervalVariable pulumi.StringPtrInput
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceHelloToleranceVariable pulumi.StringPtrInput
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceLastResortCircuitVariable pulumi.StringPtrInput
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable pulumi.StringPtrInput
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable pulumi.StringPtrInput
	// Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
	TunnelInterfaceNetworkBroadcast pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable pulumi.StringPtrInput
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop pulumi.BoolPtrInput
	// Variable name
	TunnelInterfacePortHopVariable pulumi.StringPtrInput
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceRestrict pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceRestrictVariable pulumi.StringPtrInput
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable pulumi.StringPtrInput
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable pulumi.StringPtrInput
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable pulumi.StringPtrInput
	// Set tunnel QoS mode - Choices: `spoke`
	TunnelQosMode pulumi.StringPtrInput
	// Variable name
	TunnelQosModeVariable pulumi.StringPtrInput
	// The version of the feature template
	Version pulumi.IntPtrInput
	// Name of rewrite rule
	WriteRule pulumi.StringPtrInput
	// Variable name
	WriteRuleVariable pulumi.StringPtrInput
}

func (VpnInterfaceT1E1SerialFeatureTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnInterfaceT1E1SerialFeatureTemplateState)(nil)).Elem()
}

type vpnInterfaceT1E1SerialFeatureTemplateArgs struct {
	// Link autonegotiation - Default value: `true`
	Autonegotiate *bool `pulumi:"autonegotiate"`
	// Variable name
	AutonegotiateVariable *string `pulumi:"autonegotiateVariable"`
	// Clear don't fragment bit - Default value: `false`
	ClearDontFragmentBit *bool `pulumi:"clearDontFragmentBit"`
	// Variable name
	ClearDontFragmentBitVariable *string `pulumi:"clearDontFragmentBitVariable"`
	// Set preference for interface Clock speed - Choices: `1200`, `2400`, `3600`, `4800`, `9600`, `14400`, `19200`, `28800`,
	// `32000`, `38400`, `48000`, `56000`, `57600`, `64000`, `72000`, `115200`, `125000`, `148000`, `192000`, `250000`,
	// `256000`, `384000`, `500000`, `512000`, `768000`, `800000`, `1000000`, `2000000`, `4000000`, `5300000`, `8000000`
	ClockRate *string `pulumi:"clockRate"`
	// Variable name
	ClockRateVariable *string `pulumi:"clockRateVariable"`
	// Enable core region - Choices: `core`, `core-shared` - Default value: `core`
	CoreRegion *string `pulumi:"coreRegion"`
	// Variable name
	CoreRegionVariable *string `pulumi:"coreRegionVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Enable core region - Default value: `false`
	EnableCoreRegion *bool `pulumi:"enableCoreRegion"`
	// Variable name
	EnableCoreRegionVariable *string `pulumi:"enableCoreRegionVariable"`
	// Configure Encapsulation for interface - Choices: `hdlc`, `ppp`, `frame-relay`
	Encapsulation *string `pulumi:"encapsulation"`
	// Variable name
	EncapsulationVariable *string `pulumi:"encapsulationVariable"`
	// Interface bandwidth capacity, in kbps - Range: `1`-`128`
	InterfaceBandwidthCapacity *int `pulumi:"interfaceBandwidthCapacity"`
	// Variable name
	InterfaceBandwidthCapacityVariable *string `pulumi:"interfaceBandwidthCapacityVariable"`
	// Interface description
	InterfaceDescription *string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable *string `pulumi:"interfaceDescriptionVariable"`
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	InterfaceDownstreamBandwidthCapacity *int `pulumi:"interfaceDownstreamBandwidthCapacity"`
	// Variable name
	InterfaceDownstreamBandwidthCapacityVariable *string `pulumi:"interfaceDownstreamBandwidthCapacityVariable"`
	// Interface MTU <68...2000>, in bytes - Range: `68`-`2000` - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	// Apply ACL
	Ipv4AccessLists []VpnInterfaceT1E1SerialFeatureTemplateIpv4AccessList `pulumi:"ipv4AccessLists"`
	// Assign IPv4 address
	Ipv4Address *string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable *string `pulumi:"ipv4AddressVariable"`
	// Apply IPv6 access list
	Ipv6AccessLists []VpnInterfaceT1E1SerialFeatureTemplateIpv6AccessList `pulumi:"ipv6AccessLists"`
	// Assign IPv6 address
	Ipv6Address *string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable *string `pulumi:"ipv6AddressVariable"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Per-tunnel Qos - Default value: `false`
	PerTunnelQos *bool `pulumi:"perTunnelQos"`
	// Per-tunnel QoS Aggregator - Default value: `false`
	PerTunnelQosAggregator *bool `pulumi:"perTunnelQosAggregator"`
	// Variable name
	PerTunnelQosAggregatorVariable *string `pulumi:"perTunnelQosAggregatorVariable"`
	// Variable name
	PerTunnelQosVariable *string `pulumi:"perTunnelQosVariable"`
	// Path MTU Discovery - Default value: `false`
	PmtuDiscovery *bool `pulumi:"pmtuDiscovery"`
	// Variable name
	PmtuDiscoveryVariable *string `pulumi:"pmtuDiscoveryVariable"`
	// Name of QoS map
	QosMap *string `pulumi:"qosMap"`
	// Variable name
	QosMapVariable *string `pulumi:"qosMapVariable"`
	// Name of VPN QoS map
	QosMapVpn *string `pulumi:"qosMapVpn"`
	// Variable name
	QosMapVpnVariable *string `pulumi:"qosMapVpnVariable"`
	// Enable secondary region - Choices: `off`, `secondary-only`, `secondary-shared` - Default value: `off`
	SecondaryRegion *string `pulumi:"secondaryRegion"`
	// Variable name
	SecondaryRegionVariable *string `pulumi:"secondaryRegionVariable"`
	// Serial Interface Name - slot/subslot/port:channel-group for T1/E1, slot/subslot/port for NIM-1T
	SerialInterfaceName *string `pulumi:"serialInterfaceName"`
	// Variable name
	SerialInterfaceNameVariable *string `pulumi:"serialInterfaceNameVariable"`
	// 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
	ShapingRate *int `pulumi:"shapingRate"`
	// Variable name
	ShapingRateVariable *string `pulumi:"shapingRateVariable"`
	// Administrative state - Default value: `true`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// Static ingress QoS for the port - Range: `0`-`7`
	StaticIngressQos *int `pulumi:"staticIngressQos"`
	// Variable name
	StaticIngressQosVariable *string `pulumi:"staticIngressQosVariable"`
	// TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
	TcpMss *int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable *string `pulumi:"tcpMssVariable"`
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension *string `pulumi:"tlocExtension"`
	// Variable name
	TlocExtensionVariable *string `pulumi:"tlocExtensionVariable"`
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll *bool `pulumi:"tunnelInterfaceAllowAll"`
	// Variable name
	TunnelInterfaceAllowAllVariable *string `pulumi:"tunnelInterfaceAllowAllVariable"`
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp *bool `pulumi:"tunnelInterfaceAllowBgp"`
	// Variable name
	TunnelInterfaceAllowBgpVariable *string `pulumi:"tunnelInterfaceAllowBgpVariable"`
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp *bool `pulumi:"tunnelInterfaceAllowDhcp"`
	// Variable name
	TunnelInterfaceAllowDhcpVariable *string `pulumi:"tunnelInterfaceAllowDhcpVariable"`
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDns *bool `pulumi:"tunnelInterfaceAllowDns"`
	// Variable name
	TunnelInterfaceAllowDnsVariable *string `pulumi:"tunnelInterfaceAllowDnsVariable"`
	// Allow/Deny Https - Default value: `true`
	TunnelInterfaceAllowHttps *bool `pulumi:"tunnelInterfaceAllowHttps"`
	// Variable name
	TunnelInterfaceAllowHttpsVariable *string `pulumi:"tunnelInterfaceAllowHttpsVariable"`
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp *bool `pulumi:"tunnelInterfaceAllowIcmp"`
	// Variable name
	TunnelInterfaceAllowIcmpVariable *string `pulumi:"tunnelInterfaceAllowIcmpVariable"`
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf *bool `pulumi:"tunnelInterfaceAllowNetconf"`
	// Variable name
	TunnelInterfaceAllowNetconfVariable *string `pulumi:"tunnelInterfaceAllowNetconfVariable"`
	// Allow/Deny NTP - Default value: `false`
	TunnelInterfaceAllowNtp *bool `pulumi:"tunnelInterfaceAllowNtp"`
	// Variable name
	TunnelInterfaceAllowNtpVariable *string `pulumi:"tunnelInterfaceAllowNtpVariable"`
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf *bool `pulumi:"tunnelInterfaceAllowOspf"`
	// Variable name
	TunnelInterfaceAllowOspfVariable *string `pulumi:"tunnelInterfaceAllowOspfVariable"`
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp *bool `pulumi:"tunnelInterfaceAllowSnmp"`
	// Variable name
	TunnelInterfaceAllowSnmpVariable *string `pulumi:"tunnelInterfaceAllowSnmpVariable"`
	// Allow/Deny SSH - Default value: `false`
	TunnelInterfaceAllowSsh *bool `pulumi:"tunnelInterfaceAllowSsh"`
	// Variable name
	TunnelInterfaceAllowSshVariable *string `pulumi:"tunnelInterfaceAllowSshVariable"`
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun *bool `pulumi:"tunnelInterfaceAllowStun"`
	// Variable name
	TunnelInterfaceAllowStunVariable *string `pulumi:"tunnelInterfaceAllowStunVariable"`
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel *string `pulumi:"tunnelInterfaceBindLoopbackTunnel"`
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable *string `pulumi:"tunnelInterfaceBindLoopbackTunnelVariable"`
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder *bool `pulumi:"tunnelInterfaceBorder"`
	// Variable name
	TunnelInterfaceBorderVariable *string `pulumi:"tunnelInterfaceBorderVariable"`
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier *string `pulumi:"tunnelInterfaceCarrier"`
	// Variable name
	TunnelInterfaceCarrierVariable *string `pulumi:"tunnelInterfaceCarrierVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment *bool `pulumi:"tunnelInterfaceClearDontFragment"`
	// Variable name
	TunnelInterfaceClearDontFragmentVariable *string `pulumi:"tunnelInterfaceClearDontFragmentVariable"`
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `default`
	TunnelInterfaceColor *string `pulumi:"tunnelInterfaceColor"`
	// Variable name
	TunnelInterfaceColorVariable *string `pulumi:"tunnelInterfaceColorVariable"`
	// Set the maximum number of control connections for this TLOC - Range: `0`-`8`
	TunnelInterfaceControlConnections *int `pulumi:"tunnelInterfaceControlConnections"`
	// Variable name
	TunnelInterfaceControlConnectionsVariable *string `pulumi:"tunnelInterfaceControlConnectionsVariable"`
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations []VpnInterfaceT1E1SerialFeatureTemplateTunnelInterfaceEncapsulation `pulumi:"tunnelInterfaceEncapsulations"`
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable *string `pulumi:"tunnelInterfaceExcludeControllerGroupListVariable"`
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists []int `pulumi:"tunnelInterfaceExcludeControllerGroupLists"`
	// List of groups
	TunnelInterfaceGroups []int `pulumi:"tunnelInterfaceGroups"`
	// Variable name
	TunnelInterfaceGroupsVariable *string `pulumi:"tunnelInterfaceGroupsVariable"`
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval *int `pulumi:"tunnelInterfaceHelloInterval"`
	// Variable name
	TunnelInterfaceHelloIntervalVariable *string `pulumi:"tunnelInterfaceHelloIntervalVariable"`
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance *int `pulumi:"tunnelInterfaceHelloTolerance"`
	// Variable name
	TunnelInterfaceHelloToleranceVariable *string `pulumi:"tunnelInterfaceHelloToleranceVariable"`
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit *bool `pulumi:"tunnelInterfaceLastResortCircuit"`
	// Variable name
	TunnelInterfaceLastResortCircuitVariable *string `pulumi:"tunnelInterfaceLastResortCircuitVariable"`
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink *bool `pulumi:"tunnelInterfaceLowBandwidthLink"`
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable *string `pulumi:"tunnelInterfaceLowBandwidthLinkVariable"`
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval *int `pulumi:"tunnelInterfaceNatRefreshInterval"`
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable *string `pulumi:"tunnelInterfaceNatRefreshIntervalVariable"`
	// Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
	TunnelInterfaceNetworkBroadcast *bool `pulumi:"tunnelInterfaceNetworkBroadcast"`
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable *string `pulumi:"tunnelInterfaceNetworkBroadcastVariable"`
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop *bool `pulumi:"tunnelInterfacePortHop"`
	// Variable name
	TunnelInterfacePortHopVariable *string `pulumi:"tunnelInterfacePortHopVariable"`
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceRestrict *bool `pulumi:"tunnelInterfaceRestrict"`
	// Variable name
	TunnelInterfaceRestrictVariable *string `pulumi:"tunnelInterfaceRestrictVariable"`
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss *int `pulumi:"tunnelInterfaceTunnelTcpMss"`
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable *string `pulumi:"tunnelInterfaceTunnelTcpMssVariable"`
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer *bool `pulumi:"tunnelInterfaceVbondAsStunServer"`
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable *string `pulumi:"tunnelInterfaceVbondAsStunServerVariable"`
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference *int `pulumi:"tunnelInterfaceVmanageConnectionPreference"`
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable *string `pulumi:"tunnelInterfaceVmanageConnectionPreferenceVariable"`
	// Set tunnel QoS mode - Choices: `spoke`
	TunnelQosMode *string `pulumi:"tunnelQosMode"`
	// Variable name
	TunnelQosModeVariable *string `pulumi:"tunnelQosModeVariable"`
	// Name of rewrite rule
	WriteRule *string `pulumi:"writeRule"`
	// Variable name
	WriteRuleVariable *string `pulumi:"writeRuleVariable"`
}

// The set of arguments for constructing a VpnInterfaceT1E1SerialFeatureTemplate resource.
type VpnInterfaceT1E1SerialFeatureTemplateArgs struct {
	// Link autonegotiation - Default value: `true`
	Autonegotiate pulumi.BoolPtrInput
	// Variable name
	AutonegotiateVariable pulumi.StringPtrInput
	// Clear don't fragment bit - Default value: `false`
	ClearDontFragmentBit pulumi.BoolPtrInput
	// Variable name
	ClearDontFragmentBitVariable pulumi.StringPtrInput
	// Set preference for interface Clock speed - Choices: `1200`, `2400`, `3600`, `4800`, `9600`, `14400`, `19200`, `28800`,
	// `32000`, `38400`, `48000`, `56000`, `57600`, `64000`, `72000`, `115200`, `125000`, `148000`, `192000`, `250000`,
	// `256000`, `384000`, `500000`, `512000`, `768000`, `800000`, `1000000`, `2000000`, `4000000`, `5300000`, `8000000`
	ClockRate pulumi.StringPtrInput
	// Variable name
	ClockRateVariable pulumi.StringPtrInput
	// Enable core region - Choices: `core`, `core-shared` - Default value: `core`
	CoreRegion pulumi.StringPtrInput
	// Variable name
	CoreRegionVariable pulumi.StringPtrInput
	// The description of the feature template
	Description pulumi.StringInput
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Enable core region - Default value: `false`
	EnableCoreRegion pulumi.BoolPtrInput
	// Variable name
	EnableCoreRegionVariable pulumi.StringPtrInput
	// Configure Encapsulation for interface - Choices: `hdlc`, `ppp`, `frame-relay`
	Encapsulation pulumi.StringPtrInput
	// Variable name
	EncapsulationVariable pulumi.StringPtrInput
	// Interface bandwidth capacity, in kbps - Range: `1`-`128`
	InterfaceBandwidthCapacity pulumi.IntPtrInput
	// Variable name
	InterfaceBandwidthCapacityVariable pulumi.StringPtrInput
	// Interface description
	InterfaceDescription pulumi.StringPtrInput
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrInput
	// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
	InterfaceDownstreamBandwidthCapacity pulumi.IntPtrInput
	// Variable name
	InterfaceDownstreamBandwidthCapacityVariable pulumi.StringPtrInput
	// Interface MTU <68...2000>, in bytes - Range: `68`-`2000` - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	// Apply ACL
	Ipv4AccessLists VpnInterfaceT1E1SerialFeatureTemplateIpv4AccessListArrayInput
	// Assign IPv4 address
	Ipv4Address pulumi.StringPtrInput
	// Variable name
	Ipv4AddressVariable pulumi.StringPtrInput
	// Apply IPv6 access list
	Ipv6AccessLists VpnInterfaceT1E1SerialFeatureTemplateIpv6AccessListArrayInput
	// Assign IPv6 address
	Ipv6Address pulumi.StringPtrInput
	// Variable name
	Ipv6AddressVariable pulumi.StringPtrInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Per-tunnel Qos - Default value: `false`
	PerTunnelQos pulumi.BoolPtrInput
	// Per-tunnel QoS Aggregator - Default value: `false`
	PerTunnelQosAggregator pulumi.BoolPtrInput
	// Variable name
	PerTunnelQosAggregatorVariable pulumi.StringPtrInput
	// Variable name
	PerTunnelQosVariable pulumi.StringPtrInput
	// Path MTU Discovery - Default value: `false`
	PmtuDiscovery pulumi.BoolPtrInput
	// Variable name
	PmtuDiscoveryVariable pulumi.StringPtrInput
	// Name of QoS map
	QosMap pulumi.StringPtrInput
	// Variable name
	QosMapVariable pulumi.StringPtrInput
	// Name of VPN QoS map
	QosMapVpn pulumi.StringPtrInput
	// Variable name
	QosMapVpnVariable pulumi.StringPtrInput
	// Enable secondary region - Choices: `off`, `secondary-only`, `secondary-shared` - Default value: `off`
	SecondaryRegion pulumi.StringPtrInput
	// Variable name
	SecondaryRegionVariable pulumi.StringPtrInput
	// Serial Interface Name - slot/subslot/port:channel-group for T1/E1, slot/subslot/port for NIM-1T
	SerialInterfaceName pulumi.StringPtrInput
	// Variable name
	SerialInterfaceNameVariable pulumi.StringPtrInput
	// 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
	ShapingRate pulumi.IntPtrInput
	// Variable name
	ShapingRateVariable pulumi.StringPtrInput
	// Administrative state - Default value: `true`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// Static ingress QoS for the port - Range: `0`-`7`
	StaticIngressQos pulumi.IntPtrInput
	// Variable name
	StaticIngressQosVariable pulumi.StringPtrInput
	// TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
	TcpMss pulumi.IntPtrInput
	// Variable name
	TcpMssVariable pulumi.StringPtrInput
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension pulumi.StringPtrInput
	// Variable name
	TlocExtensionVariable pulumi.StringPtrInput
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
	TunnelInterfaceAllowAll pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowAllVariable pulumi.StringPtrInput
	// Allow/deny BGP - Default value: `false`
	TunnelInterfaceAllowBgp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowBgpVariable pulumi.StringPtrInput
	// Allow/Deny DHCP - Default value: `true`
	TunnelInterfaceAllowDhcp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowDhcpVariable pulumi.StringPtrInput
	// Allow/Deny DNS - Default value: `true`
	TunnelInterfaceAllowDns pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowDnsVariable pulumi.StringPtrInput
	// Allow/Deny Https - Default value: `true`
	TunnelInterfaceAllowHttps pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowHttpsVariable pulumi.StringPtrInput
	// Allow/Deny ICMP - Default value: `true`
	TunnelInterfaceAllowIcmp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowIcmpVariable pulumi.StringPtrInput
	// Allow/Deny NETCONF - Default value: `false`
	TunnelInterfaceAllowNetconf pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowNetconfVariable pulumi.StringPtrInput
	// Allow/Deny NTP - Default value: `false`
	TunnelInterfaceAllowNtp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowNtpVariable pulumi.StringPtrInput
	// Allow/Deny OSPF - Default value: `false`
	TunnelInterfaceAllowOspf pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowOspfVariable pulumi.StringPtrInput
	// Allow/Deny SNMP - Default value: `false`
	TunnelInterfaceAllowSnmp pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowSnmpVariable pulumi.StringPtrInput
	// Allow/Deny SSH - Default value: `false`
	TunnelInterfaceAllowSsh pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowSshVariable pulumi.StringPtrInput
	// Allow/Deny STUN - Default value: `false`
	TunnelInterfaceAllowStun pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceAllowStunVariable pulumi.StringPtrInput
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable pulumi.StringPtrInput
	// Set TLOC as border TLOC - Default value: `false`
	TunnelInterfaceBorder pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceBorderVariable pulumi.StringPtrInput
	// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
	// `carrier7`, `carrier8` - Default value: `default`
	TunnelInterfaceCarrier pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceCarrierVariable pulumi.StringPtrInput
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
	TunnelInterfaceClearDontFragment pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceClearDontFragmentVariable pulumi.StringPtrInput
	// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
	// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
	// `private4`, `private5`, `private6` - Default value: `default`
	TunnelInterfaceColor pulumi.StringPtrInput
	// Variable name
	TunnelInterfaceColorVariable pulumi.StringPtrInput
	// Set the maximum number of control connections for this TLOC - Range: `0`-`8`
	TunnelInterfaceControlConnections pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceControlConnectionsVariable pulumi.StringPtrInput
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations VpnInterfaceT1E1SerialFeatureTemplateTunnelInterfaceEncapsulationArrayInput
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable pulumi.StringPtrInput
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists pulumi.IntArrayInput
	// List of groups
	TunnelInterfaceGroups pulumi.IntArrayInput
	// Variable name
	TunnelInterfaceGroupsVariable pulumi.StringPtrInput
	// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
	TunnelInterfaceHelloInterval pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceHelloIntervalVariable pulumi.StringPtrInput
	// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
	TunnelInterfaceHelloTolerance pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceHelloToleranceVariable pulumi.StringPtrInput
	// Set TLOC as last resort - Default value: `false`
	TunnelInterfaceLastResortCircuit pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceLastResortCircuitVariable pulumi.StringPtrInput
	// Set the interface as a low-bandwidth circuit - Default value: `false`
	TunnelInterfaceLowBandwidthLink pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable pulumi.StringPtrInput
	// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
	TunnelInterfaceNatRefreshInterval pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable pulumi.StringPtrInput
	// Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
	TunnelInterfaceNetworkBroadcast pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable pulumi.StringPtrInput
	// Disallow port hopping on the tunnel interface - Default value: `true`
	TunnelInterfacePortHop pulumi.BoolPtrInput
	// Variable name
	TunnelInterfacePortHopVariable pulumi.StringPtrInput
	// Restrict this TLOC behavior - Default value: `false`
	TunnelInterfaceRestrict pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceRestrictVariable pulumi.StringPtrInput
	// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
	TunnelInterfaceTunnelTcpMss pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable pulumi.StringPtrInput
	// Put this wan interface in STUN mode only - Default value: `false`
	TunnelInterfaceVbondAsStunServer pulumi.BoolPtrInput
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable pulumi.StringPtrInput
	// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
	TunnelInterfaceVmanageConnectionPreference pulumi.IntPtrInput
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable pulumi.StringPtrInput
	// Set tunnel QoS mode - Choices: `spoke`
	TunnelQosMode pulumi.StringPtrInput
	// Variable name
	TunnelQosModeVariable pulumi.StringPtrInput
	// Name of rewrite rule
	WriteRule pulumi.StringPtrInput
	// Variable name
	WriteRuleVariable pulumi.StringPtrInput
}

func (VpnInterfaceT1E1SerialFeatureTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnInterfaceT1E1SerialFeatureTemplateArgs)(nil)).Elem()
}

type VpnInterfaceT1E1SerialFeatureTemplateInput interface {
	pulumi.Input

	ToVpnInterfaceT1E1SerialFeatureTemplateOutput() VpnInterfaceT1E1SerialFeatureTemplateOutput
	ToVpnInterfaceT1E1SerialFeatureTemplateOutputWithContext(ctx context.Context) VpnInterfaceT1E1SerialFeatureTemplateOutput
}

func (*VpnInterfaceT1E1SerialFeatureTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnInterfaceT1E1SerialFeatureTemplate)(nil)).Elem()
}

func (i *VpnInterfaceT1E1SerialFeatureTemplate) ToVpnInterfaceT1E1SerialFeatureTemplateOutput() VpnInterfaceT1E1SerialFeatureTemplateOutput {
	return i.ToVpnInterfaceT1E1SerialFeatureTemplateOutputWithContext(context.Background())
}

func (i *VpnInterfaceT1E1SerialFeatureTemplate) ToVpnInterfaceT1E1SerialFeatureTemplateOutputWithContext(ctx context.Context) VpnInterfaceT1E1SerialFeatureTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnInterfaceT1E1SerialFeatureTemplateOutput)
}

// VpnInterfaceT1E1SerialFeatureTemplateArrayInput is an input type that accepts VpnInterfaceT1E1SerialFeatureTemplateArray and VpnInterfaceT1E1SerialFeatureTemplateArrayOutput values.
// You can construct a concrete instance of `VpnInterfaceT1E1SerialFeatureTemplateArrayInput` via:
//
//	VpnInterfaceT1E1SerialFeatureTemplateArray{ VpnInterfaceT1E1SerialFeatureTemplateArgs{...} }
type VpnInterfaceT1E1SerialFeatureTemplateArrayInput interface {
	pulumi.Input

	ToVpnInterfaceT1E1SerialFeatureTemplateArrayOutput() VpnInterfaceT1E1SerialFeatureTemplateArrayOutput
	ToVpnInterfaceT1E1SerialFeatureTemplateArrayOutputWithContext(context.Context) VpnInterfaceT1E1SerialFeatureTemplateArrayOutput
}

type VpnInterfaceT1E1SerialFeatureTemplateArray []VpnInterfaceT1E1SerialFeatureTemplateInput

func (VpnInterfaceT1E1SerialFeatureTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnInterfaceT1E1SerialFeatureTemplate)(nil)).Elem()
}

func (i VpnInterfaceT1E1SerialFeatureTemplateArray) ToVpnInterfaceT1E1SerialFeatureTemplateArrayOutput() VpnInterfaceT1E1SerialFeatureTemplateArrayOutput {
	return i.ToVpnInterfaceT1E1SerialFeatureTemplateArrayOutputWithContext(context.Background())
}

func (i VpnInterfaceT1E1SerialFeatureTemplateArray) ToVpnInterfaceT1E1SerialFeatureTemplateArrayOutputWithContext(ctx context.Context) VpnInterfaceT1E1SerialFeatureTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnInterfaceT1E1SerialFeatureTemplateArrayOutput)
}

// VpnInterfaceT1E1SerialFeatureTemplateMapInput is an input type that accepts VpnInterfaceT1E1SerialFeatureTemplateMap and VpnInterfaceT1E1SerialFeatureTemplateMapOutput values.
// You can construct a concrete instance of `VpnInterfaceT1E1SerialFeatureTemplateMapInput` via:
//
//	VpnInterfaceT1E1SerialFeatureTemplateMap{ "key": VpnInterfaceT1E1SerialFeatureTemplateArgs{...} }
type VpnInterfaceT1E1SerialFeatureTemplateMapInput interface {
	pulumi.Input

	ToVpnInterfaceT1E1SerialFeatureTemplateMapOutput() VpnInterfaceT1E1SerialFeatureTemplateMapOutput
	ToVpnInterfaceT1E1SerialFeatureTemplateMapOutputWithContext(context.Context) VpnInterfaceT1E1SerialFeatureTemplateMapOutput
}

type VpnInterfaceT1E1SerialFeatureTemplateMap map[string]VpnInterfaceT1E1SerialFeatureTemplateInput

func (VpnInterfaceT1E1SerialFeatureTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnInterfaceT1E1SerialFeatureTemplate)(nil)).Elem()
}

func (i VpnInterfaceT1E1SerialFeatureTemplateMap) ToVpnInterfaceT1E1SerialFeatureTemplateMapOutput() VpnInterfaceT1E1SerialFeatureTemplateMapOutput {
	return i.ToVpnInterfaceT1E1SerialFeatureTemplateMapOutputWithContext(context.Background())
}

func (i VpnInterfaceT1E1SerialFeatureTemplateMap) ToVpnInterfaceT1E1SerialFeatureTemplateMapOutputWithContext(ctx context.Context) VpnInterfaceT1E1SerialFeatureTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnInterfaceT1E1SerialFeatureTemplateMapOutput)
}

type VpnInterfaceT1E1SerialFeatureTemplateOutput struct{ *pulumi.OutputState }

func (VpnInterfaceT1E1SerialFeatureTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnInterfaceT1E1SerialFeatureTemplate)(nil)).Elem()
}

func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) ToVpnInterfaceT1E1SerialFeatureTemplateOutput() VpnInterfaceT1E1SerialFeatureTemplateOutput {
	return o
}

func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) ToVpnInterfaceT1E1SerialFeatureTemplateOutputWithContext(ctx context.Context) VpnInterfaceT1E1SerialFeatureTemplateOutput {
	return o
}

// Link autonegotiation - Default value: `true`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) Autonegotiate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.Autonegotiate }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) AutonegotiateVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.AutonegotiateVariable }).(pulumi.StringPtrOutput)
}

// Clear don't fragment bit - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) ClearDontFragmentBit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.ClearDontFragmentBit }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) ClearDontFragmentBitVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.ClearDontFragmentBitVariable
	}).(pulumi.StringPtrOutput)
}

// Set preference for interface Clock speed - Choices: `1200`, `2400`, `3600`, `4800`, `9600`, `14400`, `19200`, `28800`,
// `32000`, `38400`, `48000`, `56000`, `57600`, `64000`, `72000`, `115200`, `125000`, `148000`, `192000`, `250000`,
// `256000`, `384000`, `500000`, `512000`, `768000`, `800000`, `1000000`, `2000000`, `4000000`, `5300000`, `8000000`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) ClockRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.ClockRate }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) ClockRateVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.ClockRateVariable }).(pulumi.StringPtrOutput)
}

// Enable core region - Choices: `core`, `core-shared` - Default value: `core`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) CoreRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.CoreRegion }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) CoreRegionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.CoreRegionVariable }).(pulumi.StringPtrOutput)
}

// The description of the feature template
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringArrayOutput { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Enable core region - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) EnableCoreRegion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.EnableCoreRegion }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) EnableCoreRegionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.EnableCoreRegionVariable
	}).(pulumi.StringPtrOutput)
}

// Configure Encapsulation for interface - Choices: `hdlc`, `ppp`, `frame-relay`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) Encapsulation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.Encapsulation }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) EncapsulationVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.EncapsulationVariable }).(pulumi.StringPtrOutput)
}

// Interface bandwidth capacity, in kbps - Range: `1`-`128`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) InterfaceBandwidthCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.IntPtrOutput {
		return v.InterfaceBandwidthCapacity
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) InterfaceBandwidthCapacityVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.InterfaceBandwidthCapacityVariable
	}).(pulumi.StringPtrOutput)
}

// Interface description
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) InterfaceDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.InterfaceDescription }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) InterfaceDescriptionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.InterfaceDescriptionVariable
	}).(pulumi.StringPtrOutput)
}

// Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) InterfaceDownstreamBandwidthCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.IntPtrOutput {
		return v.InterfaceDownstreamBandwidthCapacity
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) InterfaceDownstreamBandwidthCapacityVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.InterfaceDownstreamBandwidthCapacityVariable
	}).(pulumi.StringPtrOutput)
}

// Interface MTU <68...2000>, in bytes - Range: `68`-`2000` - Default value: `1500`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) IpMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.IntPtrOutput { return v.IpMtu }).(pulumi.IntPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) IpMtuVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.IpMtuVariable }).(pulumi.StringPtrOutput)
}

// Apply ACL
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) Ipv4AccessLists() VpnInterfaceT1E1SerialFeatureTemplateIpv4AccessListArrayOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) VpnInterfaceT1E1SerialFeatureTemplateIpv4AccessListArrayOutput {
		return v.Ipv4AccessLists
	}).(VpnInterfaceT1E1SerialFeatureTemplateIpv4AccessListArrayOutput)
}

// Assign IPv4 address
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) Ipv4AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.Ipv4AddressVariable }).(pulumi.StringPtrOutput)
}

// Apply IPv6 access list
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) Ipv6AccessLists() VpnInterfaceT1E1SerialFeatureTemplateIpv6AccessListArrayOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) VpnInterfaceT1E1SerialFeatureTemplateIpv6AccessListArrayOutput {
		return v.Ipv6AccessLists
	}).(VpnInterfaceT1E1SerialFeatureTemplateIpv6AccessListArrayOutput)
}

// Assign IPv6 address
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) Ipv6AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.Ipv6AddressVariable }).(pulumi.StringPtrOutput)
}

// The name of the feature template
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Per-tunnel Qos - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) PerTunnelQos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.PerTunnelQos }).(pulumi.BoolPtrOutput)
}

// Per-tunnel QoS Aggregator - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) PerTunnelQosAggregator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.PerTunnelQosAggregator }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) PerTunnelQosAggregatorVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.PerTunnelQosAggregatorVariable
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) PerTunnelQosVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.PerTunnelQosVariable }).(pulumi.StringPtrOutput)
}

// Path MTU Discovery - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) PmtuDiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.PmtuDiscovery }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) PmtuDiscoveryVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.PmtuDiscoveryVariable }).(pulumi.StringPtrOutput)
}

// Name of QoS map
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) QosMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.QosMap }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) QosMapVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.QosMapVariable }).(pulumi.StringPtrOutput)
}

// Name of VPN QoS map
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) QosMapVpn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.QosMapVpn }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) QosMapVpnVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.QosMapVpnVariable }).(pulumi.StringPtrOutput)
}

// Enable secondary region - Choices: `off`, `secondary-only`, `secondary-shared` - Default value: `off`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) SecondaryRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.SecondaryRegion }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) SecondaryRegionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.SecondaryRegionVariable
	}).(pulumi.StringPtrOutput)
}

// Serial Interface Name - slot/subslot/port:channel-group for T1/E1, slot/subslot/port for NIM-1T
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) SerialInterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.SerialInterfaceName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) SerialInterfaceNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.SerialInterfaceNameVariable
	}).(pulumi.StringPtrOutput)
}

// 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) ShapingRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.IntPtrOutput { return v.ShapingRate }).(pulumi.IntPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) ShapingRateVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.ShapingRateVariable }).(pulumi.StringPtrOutput)
}

// Administrative state - Default value: `true`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) Shutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.Shutdown }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) ShutdownVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.ShutdownVariable }).(pulumi.StringPtrOutput)
}

// Static ingress QoS for the port - Range: `0`-`7`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) StaticIngressQos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.IntPtrOutput { return v.StaticIngressQos }).(pulumi.IntPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) StaticIngressQosVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.StaticIngressQosVariable
	}).(pulumi.StringPtrOutput)
}

// TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TcpMss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.IntPtrOutput { return v.TcpMss }).(pulumi.IntPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TcpMssVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.TcpMssVariable }).(pulumi.StringPtrOutput)
}

// The template type
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringOutput { return v.TemplateType }).(pulumi.StringOutput)
}

// Extends a local TLOC to a remote node only for vpn 0
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TlocExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.TlocExtension }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TlocExtensionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.TlocExtensionVariable }).(pulumi.StringPtrOutput)
}

// Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowAll }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowAllVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowAllVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/deny BGP - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowBgp }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowBgpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowBgpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny DHCP - Default value: `true`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowDhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowDhcp }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowDhcpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowDhcpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny DNS - Default value: `true`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowDns() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowDns }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowDnsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowDnsVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny Https - Default value: `true`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowHttps
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowHttpsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowHttpsVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny ICMP - Default value: `true`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowIcmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowIcmp }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowIcmpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowIcmpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny NETCONF - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowNetconf() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceAllowNetconf
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowNetconfVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowNetconfVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny NTP - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowNtp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowNtp }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowNtpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowNtpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny OSPF - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowOspf() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowOspf }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowOspfVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowOspfVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny SNMP - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowSnmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowSnmp }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowSnmpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowSnmpVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny SSH - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowSsh() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowSsh }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowSshVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowSshVariable
	}).(pulumi.StringPtrOutput)
}

// Allow/Deny STUN - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowStun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceAllowStun }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceAllowStunVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceAllowStunVariable
	}).(pulumi.StringPtrOutput)
}

// Bind loopback tunnel interface to a physical interface
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceBindLoopbackTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceBindLoopbackTunnel
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceBindLoopbackTunnelVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceBindLoopbackTunnelVariable
	}).(pulumi.StringPtrOutput)
}

// Set TLOC as border TLOC - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceBorder() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceBorder }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceBorderVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceBorderVariable
	}).(pulumi.StringPtrOutput)
}

// Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
// `carrier7`, `carrier8` - Default value: `default`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceCarrier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.TunnelInterfaceCarrier }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceCarrierVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceCarrierVariable
	}).(pulumi.StringPtrOutput)
}

// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceClearDontFragment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceClearDontFragment
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceClearDontFragmentVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceClearDontFragmentVariable
	}).(pulumi.StringPtrOutput)
}

// Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
// `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
// `private4`, `private5`, `private6` - Default value: `default`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.TunnelInterfaceColor }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceColorVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceColorVariable
	}).(pulumi.StringPtrOutput)
}

// Set the maximum number of control connections for this TLOC - Range: `0`-`8`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceControlConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.IntPtrOutput {
		return v.TunnelInterfaceControlConnections
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceControlConnectionsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceControlConnectionsVariable
	}).(pulumi.StringPtrOutput)
}

// Encapsulation for TLOC
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceEncapsulations() VpnInterfaceT1E1SerialFeatureTemplateTunnelInterfaceEncapsulationArrayOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) VpnInterfaceT1E1SerialFeatureTemplateTunnelInterfaceEncapsulationArrayOutput {
		return v.TunnelInterfaceEncapsulations
	}).(VpnInterfaceT1E1SerialFeatureTemplateTunnelInterfaceEncapsulationArrayOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceExcludeControllerGroupListVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceExcludeControllerGroupListVariable
	}).(pulumi.StringPtrOutput)
}

// Exclude the following controller groups defined in this list
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceExcludeControllerGroupLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.IntArrayOutput {
		return v.TunnelInterfaceExcludeControllerGroupLists
	}).(pulumi.IntArrayOutput)
}

// List of groups
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceGroups() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.IntArrayOutput { return v.TunnelInterfaceGroups }).(pulumi.IntArrayOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceGroupsVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceGroupsVariable
	}).(pulumi.StringPtrOutput)
}

// Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceHelloInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.IntPtrOutput {
		return v.TunnelInterfaceHelloInterval
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceHelloIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceHelloIntervalVariable
	}).(pulumi.StringPtrOutput)
}

// Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceHelloTolerance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.IntPtrOutput {
		return v.TunnelInterfaceHelloTolerance
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceHelloToleranceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceHelloToleranceVariable
	}).(pulumi.StringPtrOutput)
}

// Set TLOC as last resort - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceLastResortCircuit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceLastResortCircuit
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceLastResortCircuitVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceLastResortCircuitVariable
	}).(pulumi.StringPtrOutput)
}

// Set the interface as a low-bandwidth circuit - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceLowBandwidthLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceLowBandwidthLink
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceLowBandwidthLinkVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceLowBandwidthLinkVariable
	}).(pulumi.StringPtrOutput)
}

// Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceNatRefreshInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.IntPtrOutput {
		return v.TunnelInterfaceNatRefreshInterval
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceNatRefreshIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceNatRefreshIntervalVariable
	}).(pulumi.StringPtrOutput)
}

// Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceNetworkBroadcast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceNetworkBroadcast
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceNetworkBroadcastVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceNetworkBroadcastVariable
	}).(pulumi.StringPtrOutput)
}

// Disallow port hopping on the tunnel interface - Default value: `true`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfacePortHop() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfacePortHop }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfacePortHopVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfacePortHopVariable
	}).(pulumi.StringPtrOutput)
}

// Restrict this TLOC behavior - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceRestrict() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput { return v.TunnelInterfaceRestrict }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceRestrictVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceRestrictVariable
	}).(pulumi.StringPtrOutput)
}

// Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceTunnelTcpMss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.IntPtrOutput {
		return v.TunnelInterfaceTunnelTcpMss
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceTunnelTcpMssVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceTunnelTcpMssVariable
	}).(pulumi.StringPtrOutput)
}

// Put this wan interface in STUN mode only - Default value: `false`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceVbondAsStunServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.BoolPtrOutput {
		return v.TunnelInterfaceVbondAsStunServer
	}).(pulumi.BoolPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceVbondAsStunServerVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceVbondAsStunServerVariable
	}).(pulumi.StringPtrOutput)
}

// Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceVmanageConnectionPreference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.IntPtrOutput {
		return v.TunnelInterfaceVmanageConnectionPreference
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelInterfaceVmanageConnectionPreferenceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput {
		return v.TunnelInterfaceVmanageConnectionPreferenceVariable
	}).(pulumi.StringPtrOutput)
}

// Set tunnel QoS mode - Choices: `spoke`
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelQosMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.TunnelQosMode }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) TunnelQosModeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.TunnelQosModeVariable }).(pulumi.StringPtrOutput)
}

// The version of the feature template
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

// Name of rewrite rule
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) WriteRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.WriteRule }).(pulumi.StringPtrOutput)
}

// Variable name
func (o VpnInterfaceT1E1SerialFeatureTemplateOutput) WriteRuleVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnInterfaceT1E1SerialFeatureTemplate) pulumi.StringPtrOutput { return v.WriteRuleVariable }).(pulumi.StringPtrOutput)
}

type VpnInterfaceT1E1SerialFeatureTemplateArrayOutput struct{ *pulumi.OutputState }

func (VpnInterfaceT1E1SerialFeatureTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnInterfaceT1E1SerialFeatureTemplate)(nil)).Elem()
}

func (o VpnInterfaceT1E1SerialFeatureTemplateArrayOutput) ToVpnInterfaceT1E1SerialFeatureTemplateArrayOutput() VpnInterfaceT1E1SerialFeatureTemplateArrayOutput {
	return o
}

func (o VpnInterfaceT1E1SerialFeatureTemplateArrayOutput) ToVpnInterfaceT1E1SerialFeatureTemplateArrayOutputWithContext(ctx context.Context) VpnInterfaceT1E1SerialFeatureTemplateArrayOutput {
	return o
}

func (o VpnInterfaceT1E1SerialFeatureTemplateArrayOutput) Index(i pulumi.IntInput) VpnInterfaceT1E1SerialFeatureTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpnInterfaceT1E1SerialFeatureTemplate {
		return vs[0].([]*VpnInterfaceT1E1SerialFeatureTemplate)[vs[1].(int)]
	}).(VpnInterfaceT1E1SerialFeatureTemplateOutput)
}

type VpnInterfaceT1E1SerialFeatureTemplateMapOutput struct{ *pulumi.OutputState }

func (VpnInterfaceT1E1SerialFeatureTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnInterfaceT1E1SerialFeatureTemplate)(nil)).Elem()
}

func (o VpnInterfaceT1E1SerialFeatureTemplateMapOutput) ToVpnInterfaceT1E1SerialFeatureTemplateMapOutput() VpnInterfaceT1E1SerialFeatureTemplateMapOutput {
	return o
}

func (o VpnInterfaceT1E1SerialFeatureTemplateMapOutput) ToVpnInterfaceT1E1SerialFeatureTemplateMapOutputWithContext(ctx context.Context) VpnInterfaceT1E1SerialFeatureTemplateMapOutput {
	return o
}

func (o VpnInterfaceT1E1SerialFeatureTemplateMapOutput) MapIndex(k pulumi.StringInput) VpnInterfaceT1E1SerialFeatureTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpnInterfaceT1E1SerialFeatureTemplate {
		return vs[0].(map[string]*VpnInterfaceT1E1SerialFeatureTemplate)[vs[1].(string)]
	}).(VpnInterfaceT1E1SerialFeatureTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpnInterfaceT1E1SerialFeatureTemplateInput)(nil)).Elem(), &VpnInterfaceT1E1SerialFeatureTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnInterfaceT1E1SerialFeatureTemplateArrayInput)(nil)).Elem(), VpnInterfaceT1E1SerialFeatureTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnInterfaceT1E1SerialFeatureTemplateMapInput)(nil)).Elem(), VpnInterfaceT1E1SerialFeatureTemplateMap{})
	pulumi.RegisterOutputType(VpnInterfaceT1E1SerialFeatureTemplateOutput{})
	pulumi.RegisterOutputType(VpnInterfaceT1E1SerialFeatureTemplateArrayOutput{})
	pulumi.RegisterOutputType(VpnInterfaceT1E1SerialFeatureTemplateMapOutput{})
}
