// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the VPN Interface DSL PPPoE feature template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupVpnInterfaceDslPppoeFeatureTemplate(ctx, &sdwan.LookupVpnInterfaceDslPppoeFeatureTemplateArgs{
//				Id: pulumi.StringRef("f6b2c44c-693c-4763-b010-895aa3d236bd"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVpnInterfaceDslPppoeFeatureTemplate(ctx *pulumi.Context, args *LookupVpnInterfaceDslPppoeFeatureTemplateArgs, opts ...pulumi.InvokeOption) (*LookupVpnInterfaceDslPppoeFeatureTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpnInterfaceDslPppoeFeatureTemplateResult
	err := ctx.Invoke("sdwan:index/getVpnInterfaceDslPppoeFeatureTemplate:getVpnInterfaceDslPppoeFeatureTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpnInterfaceDslPppoeFeatureTemplate.
type LookupVpnInterfaceDslPppoeFeatureTemplateArgs struct {
	// The id of the feature template
	Id *string `pulumi:"id"`
	// The name of the feature template
	Name *string `pulumi:"name"`
}

// A collection of values returned by getVpnInterfaceDslPppoeFeatureTemplate.
type LookupVpnInterfaceDslPppoeFeatureTemplateResult struct {
	// Apply ACL
	AccessLists []GetVpnInterfaceDslPppoeFeatureTemplateAccessList `pulumi:"accessLists"`
	// Interface downstream bandwidth capacity, in kbps
	BandwidthDownstream int `pulumi:"bandwidthDownstream"`
	// Variable name
	BandwidthDownstreamVariable string `pulumi:"bandwidthDownstreamVariable"`
	// Interface upstream bandwidth capacity, in kbps
	BandwidthUpstream int `pulumi:"bandwidthUpstream"`
	// Variable name
	BandwidthUpstreamVariable string `pulumi:"bandwidthUpstreamVariable"`
	// CHAP Hostname
	ChapHostname string `pulumi:"chapHostname"`
	// Variable name
	ChapHostnameVariable string `pulumi:"chapHostnameVariable"`
	// Specify ppp chap authentication Password
	ChapPppAuthPassword string `pulumi:"chapPppAuthPassword"`
	// Variable name
	ChapPppAuthPasswordVariable string `pulumi:"chapPppAuthPasswordVariable"`
	// Enable core region
	CoreRegion string `pulumi:"coreRegion"`
	// Variable name
	CoreRegionVariable string `pulumi:"coreRegionVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Enable core region
	EnableCoreRegion bool `pulumi:"enableCoreRegion"`
	// Variable name
	EnableCoreRegionVariable string `pulumi:"enableCoreRegionVariable"`
	// Interface description
	EthernetDescription string `pulumi:"ethernetDescription"`
	// Variable name
	EthernetDescriptionVariable string `pulumi:"ethernetDescriptionVariable"`
	// Dialer IP Negotiated
	EthernetDialerAddressNegotiated bool `pulumi:"ethernetDialerAddressNegotiated"`
	// Dialer pool number
	EthernetDialerPoolNumber int `pulumi:"ethernetDialerPoolNumber"`
	// Variable name
	EthernetDialerPoolNumberVariable string `pulumi:"ethernetDialerPoolNumberVariable"`
	// Ethernet Interface/Sub Interface Name including sub interface number
	EthernetInterfaceName string `pulumi:"ethernetInterfaceName"`
	// Variable name
	EthernetInterfaceNameVariable string `pulumi:"ethernetInterfaceNameVariable"`
	// Maximum MRU to be negotiated during PPP LCP negotiation
	EthernetPppMaximumPayload int `pulumi:"ethernetPppMaximumPayload"`
	// Variable name
	EthernetPppMaximumPayloadVariable string `pulumi:"ethernetPppMaximumPayloadVariable"`
	// Dialer IP Unnumbered Loopback interface name
	EthernetUnnumberedLoopbackInterface string `pulumi:"ethernetUnnumberedLoopbackInterface"`
	// Variable name
	EthernetUnnumberedLoopbackInterfaceVariable string `pulumi:"ethernetUnnumberedLoopbackInterfaceVariable"`
	// Encapsulation VLAN id
	EthernetVlanId int `pulumi:"ethernetVlanId"`
	// Variable name
	EthernetVlanIdVariable string `pulumi:"ethernetVlanIdVariable"`
	// The id of the feature template
	Id string `pulumi:"id"`
	// IP Directed-Broadcast
	IpDirectedBroadcast bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable string `pulumi:"ipDirectedBroadcastVariable"`
	// Interface MTU \n\n, in bytes
	IpMtu int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable string `pulumi:"ipMtuVariable"`
	// The name of the feature template
	Name string `pulumi:"name"`
	// Network Address Translation on this interface
	Nat bool `pulumi:"nat"`
	// Block inbound ICMP error messages
	NatBlockIcmpError bool `pulumi:"natBlockIcmpError"`
	// Variable name
	NatBlockIcmpErrorVariable string `pulumi:"natBlockIcmpErrorVariable"`
	// Set port-forwarding rules for NAT on this interface
	NatPortForwards []GetVpnInterfaceDslPppoeFeatureTemplateNatPortForward `pulumi:"natPortForwards"`
	// Set NAT refresh mode
	NatRefreshMode string `pulumi:"natRefreshMode"`
	// Variable name
	NatRefreshModeVariable string `pulumi:"natRefreshModeVariable"`
	// Respond to ping requests to NAT interface ip address from the public side
	NatResponseToPing bool `pulumi:"natResponseToPing"`
	// Variable name
	NatResponseToPingVariable string `pulumi:"natResponseToPingVariable"`
	// Set NAT TCP session timeout, in minutes
	NatTcpTimeout int `pulumi:"natTcpTimeout"`
	// Variable name
	NatTcpTimeoutVariable string `pulumi:"natTcpTimeoutVariable"`
	// Set NAT UDP session timeout, in minutes
	NatUdpTimeout int `pulumi:"natUdpTimeout"`
	// Variable name
	NatUdpTimeoutVariable string `pulumi:"natUdpTimeoutVariable"`
	// PAP outbound Password
	PapPassword bool `pulumi:"papPassword"`
	// Specify ppp pap authentication Password
	PapPppAuthPassword string `pulumi:"papPppAuthPassword"`
	// Variable name
	PapPppAuthPasswordVariable string `pulumi:"papPppAuthPasswordVariable"`
	// PAP outbound Sent Username
	PapUsername string `pulumi:"papUsername"`
	// Variable name
	PapUsernameVariable string `pulumi:"papUsernameVariable"`
	// Per-tunnel Qos
	PerTunnelQos bool `pulumi:"perTunnelQos"`
	// Per-tunnel QoS Aggregator
	PerTunnelQosAggregator bool `pulumi:"perTunnelQosAggregator"`
	// Variable name
	PerTunnelQosAggregatorVariable string `pulumi:"perTunnelQosAggregatorVariable"`
	// Variable name
	PerTunnelQosVariable string `pulumi:"perTunnelQosVariable"`
	// Enable policer
	Policers []GetVpnInterfaceDslPppoeFeatureTemplatePolicer `pulumi:"policers"`
	// PPP Link Authentication Protocol
	PppAuthenticationProtocol string `pulumi:"pppAuthenticationProtocol"`
	// PPP Authentication Protocol PAP
	PppAuthenticationProtocolPap bool `pulumi:"pppAuthenticationProtocolPap"`
	// Variable name
	PppAuthenticationProtocolVariable string `pulumi:"pppAuthenticationProtocolVariable"`
	// Authenticate remote on incoming call only
	PppAuthenticationType string `pulumi:"pppAuthenticationType"`
	// Adaptive QoS default downstream bandwidth
	QosAdaptiveBandwidthDownstream int `pulumi:"qosAdaptiveBandwidthDownstream"`
	// Variable name
	QosAdaptiveBandwidthDownstreamVariable string `pulumi:"qosAdaptiveBandwidthDownstreamVariable"`
	// Adaptive QoS default upstream bandwidth
	QosAdaptiveBandwidthUpstream int `pulumi:"qosAdaptiveBandwidthUpstream"`
	// Variable name
	QosAdaptiveBandwidthUpstreamVariable string `pulumi:"qosAdaptiveBandwidthUpstreamVariable"`
	// Downstream max bandwidth limit
	QosAdaptiveMaxDownstream int `pulumi:"qosAdaptiveMaxDownstream"`
	// Variable name
	QosAdaptiveMaxDownstreamVariable string `pulumi:"qosAdaptiveMaxDownstreamVariable"`
	// Upstream max bandwidth limit
	QosAdaptiveMaxUpstream int `pulumi:"qosAdaptiveMaxUpstream"`
	// Variable name
	QosAdaptiveMaxUpstreamVariable string `pulumi:"qosAdaptiveMaxUpstreamVariable"`
	// Downstream min bandwidth limit
	QosAdaptiveMinDownstream int `pulumi:"qosAdaptiveMinDownstream"`
	// Variable name
	QosAdaptiveMinDownstreamVariable string `pulumi:"qosAdaptiveMinDownstreamVariable"`
	// Upstream min bandwidth limit
	QosAdaptiveMinUpstream int `pulumi:"qosAdaptiveMinUpstream"`
	// Variable name
	QosAdaptiveMinUpstreamVariable string `pulumi:"qosAdaptiveMinUpstreamVariable"`
	// Periodic timer for adaptive QoS in minutes
	QosAdaptivePeriod int `pulumi:"qosAdaptivePeriod"`
	// Variable name
	QosAdaptivePeriodVariable string `pulumi:"qosAdaptivePeriodVariable"`
	// Name of QoS map
	QosMap string `pulumi:"qosMap"`
	// Variable name
	QosMapVariable string `pulumi:"qosMapVariable"`
	// Enable secondary region
	SecondaryRegion string `pulumi:"secondaryRegion"`
	// Variable name
	SecondaryRegionVariable string `pulumi:"secondaryRegionVariable"`
	// 1ge  interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps
	ShapingRate int `pulumi:"shapingRate"`
	// Variable name
	ShapingRateVariable string `pulumi:"shapingRateVariable"`
	// Administrative state
	Shutdown bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable string `pulumi:"shutdownVariable"`
	// TCP MSS on SYN packets, in bytes
	TcpMss int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable string `pulumi:"tcpMssVariable"`
	// The template type
	TemplateType string `pulumi:"templateType"`
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension string `pulumi:"tlocExtension"`
	// Variable name
	TlocExtensionVariable string `pulumi:"tlocExtensionVariable"`
	// Variable name
	TrackerVariable string `pulumi:"trackerVariable"`
	// Enable tracker for this interface
	Trackers []string `pulumi:"trackers"`
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set
	TunnelInterfaceAllowAll bool `pulumi:"tunnelInterfaceAllowAll"`
	// Variable name
	TunnelInterfaceAllowAllVariable string `pulumi:"tunnelInterfaceAllowAllVariable"`
	// Allow/deny BGP
	TunnelInterfaceAllowBgp bool `pulumi:"tunnelInterfaceAllowBgp"`
	// Variable name
	TunnelInterfaceAllowBgpVariable string `pulumi:"tunnelInterfaceAllowBgpVariable"`
	// Allow/Deny DHCP
	TunnelInterfaceAllowDhcp bool `pulumi:"tunnelInterfaceAllowDhcp"`
	// Variable name
	TunnelInterfaceAllowDhcpVariable string `pulumi:"tunnelInterfaceAllowDhcpVariable"`
	// Allow/Deny DNS
	TunnelInterfaceAllowDns bool `pulumi:"tunnelInterfaceAllowDns"`
	// Variable name
	TunnelInterfaceAllowDnsVariable string `pulumi:"tunnelInterfaceAllowDnsVariable"`
	// Allow/Deny Https
	TunnelInterfaceAllowHttps bool `pulumi:"tunnelInterfaceAllowHttps"`
	// Variable name
	TunnelInterfaceAllowHttpsVariable string `pulumi:"tunnelInterfaceAllowHttpsVariable"`
	// Allow/Deny ICMP
	TunnelInterfaceAllowIcmp bool `pulumi:"tunnelInterfaceAllowIcmp"`
	// Variable name
	TunnelInterfaceAllowIcmpVariable string `pulumi:"tunnelInterfaceAllowIcmpVariable"`
	// Allow/Deny NETCONF
	TunnelInterfaceAllowNetconf bool `pulumi:"tunnelInterfaceAllowNetconf"`
	// Variable name
	TunnelInterfaceAllowNetconfVariable string `pulumi:"tunnelInterfaceAllowNetconfVariable"`
	// Allow/Deny NTP
	TunnelInterfaceAllowNtp bool `pulumi:"tunnelInterfaceAllowNtp"`
	// Variable name
	TunnelInterfaceAllowNtpVariable string `pulumi:"tunnelInterfaceAllowNtpVariable"`
	// Allow/Deny OSPF
	TunnelInterfaceAllowOspf bool `pulumi:"tunnelInterfaceAllowOspf"`
	// Variable name
	TunnelInterfaceAllowOspfVariable string `pulumi:"tunnelInterfaceAllowOspfVariable"`
	// Allow/Deny SNMP
	TunnelInterfaceAllowSnmp bool `pulumi:"tunnelInterfaceAllowSnmp"`
	// Variable name
	TunnelInterfaceAllowSnmpVariable string `pulumi:"tunnelInterfaceAllowSnmpVariable"`
	// Allow/Deny SSH
	TunnelInterfaceAllowSsh bool `pulumi:"tunnelInterfaceAllowSsh"`
	// Variable name
	TunnelInterfaceAllowSshVariable string `pulumi:"tunnelInterfaceAllowSshVariable"`
	// Allow/Deny STUN
	TunnelInterfaceAllowStun bool `pulumi:"tunnelInterfaceAllowStun"`
	// Variable name
	TunnelInterfaceAllowStunVariable string `pulumi:"tunnelInterfaceAllowStunVariable"`
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel string `pulumi:"tunnelInterfaceBindLoopbackTunnel"`
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable string `pulumi:"tunnelInterfaceBindLoopbackTunnelVariable"`
	// Set TLOC as border TLOC
	TunnelInterfaceBorder bool `pulumi:"tunnelInterfaceBorder"`
	// Variable name
	TunnelInterfaceBorderVariable string `pulumi:"tunnelInterfaceBorderVariable"`
	// Set carrier for TLOC
	TunnelInterfaceCarrier string `pulumi:"tunnelInterfaceCarrier"`
	// Variable name
	TunnelInterfaceCarrierVariable string `pulumi:"tunnelInterfaceCarrierVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
	TunnelInterfaceClearDontFragment bool `pulumi:"tunnelInterfaceClearDontFragment"`
	// Variable name
	TunnelInterfaceClearDontFragmentVariable string `pulumi:"tunnelInterfaceClearDontFragmentVariable"`
	// Set color for TLOC
	TunnelInterfaceColor string `pulumi:"tunnelInterfaceColor"`
	// Restrict this TLOC behavior
	TunnelInterfaceColorRestrict bool `pulumi:"tunnelInterfaceColorRestrict"`
	// Variable name
	TunnelInterfaceColorVariable string `pulumi:"tunnelInterfaceColorVariable"`
	// Allow Control Connection
	TunnelInterfaceControlConnections bool `pulumi:"tunnelInterfaceControlConnections"`
	// Variable name
	TunnelInterfaceControlConnectionsVariable string `pulumi:"tunnelInterfaceControlConnectionsVariable"`
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations []GetVpnInterfaceDslPppoeFeatureTemplateTunnelInterfaceEncapsulation `pulumi:"tunnelInterfaceEncapsulations"`
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable string `pulumi:"tunnelInterfaceExcludeControllerGroupListVariable"`
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists []int `pulumi:"tunnelInterfaceExcludeControllerGroupLists"`
	// List of groups
	TunnelInterfaceGroups []int `pulumi:"tunnelInterfaceGroups"`
	// Variable name
	TunnelInterfaceGroupsVariable string `pulumi:"tunnelInterfaceGroupsVariable"`
	// Set time period of control hello packets \n\n milli seconds
	TunnelInterfaceHelloInterval int `pulumi:"tunnelInterfaceHelloInterval"`
	// Variable name
	TunnelInterfaceHelloIntervalVariable string `pulumi:"tunnelInterfaceHelloIntervalVariable"`
	// Set tolerance of control hello packets \n\n seconds
	TunnelInterfaceHelloTolerance int `pulumi:"tunnelInterfaceHelloTolerance"`
	// Variable name
	TunnelInterfaceHelloToleranceVariable string `pulumi:"tunnelInterfaceHelloToleranceVariable"`
	// Set TLOC as last resort
	TunnelInterfaceLastResortCircuit bool `pulumi:"tunnelInterfaceLastResortCircuit"`
	// Variable name
	TunnelInterfaceLastResortCircuitVariable string `pulumi:"tunnelInterfaceLastResortCircuitVariable"`
	// Set the interface as a low-bandwidth circuit
	TunnelInterfaceLowBandwidthLink bool `pulumi:"tunnelInterfaceLowBandwidthLink"`
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable string `pulumi:"tunnelInterfaceLowBandwidthLinkVariable"`
	// Set the maximum number of control connections for this TLOC
	TunnelInterfaceMaxControlConnections int `pulumi:"tunnelInterfaceMaxControlConnections"`
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable string `pulumi:"tunnelInterfaceMaxControlConnectionsVariable"`
	// Set time period of nat refresh packets \n\n seconds
	TunnelInterfaceNatRefreshInterval int `pulumi:"tunnelInterfaceNatRefreshInterval"`
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable string `pulumi:"tunnelInterfaceNatRefreshIntervalVariable"`
	// Accept and respond to network-prefix-directed broadcasts)
	TunnelInterfaceNetworkBroadcast bool `pulumi:"tunnelInterfaceNetworkBroadcast"`
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable string `pulumi:"tunnelInterfaceNetworkBroadcastVariable"`
	// Disallow port hopping on the tunnel interface
	TunnelInterfacePortHop bool `pulumi:"tunnelInterfacePortHop"`
	// Variable name
	TunnelInterfacePortHopVariable string `pulumi:"tunnelInterfacePortHopVariable"`
	// Tunnel TCP MSS on SYN packets, in bytes
	TunnelInterfaceTunnelTcpMss int `pulumi:"tunnelInterfaceTunnelTcpMss"`
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable string `pulumi:"tunnelInterfaceTunnelTcpMssVariable"`
	// Put this wan interface in STUN mode only
	TunnelInterfaceVbondAsStunServer bool `pulumi:"tunnelInterfaceVbondAsStunServer"`
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable string `pulumi:"tunnelInterfaceVbondAsStunServerVariable"`
	// Set interface preference for control connection to vManage \n\n
	TunnelInterfaceVmanageConnectionPreference int `pulumi:"tunnelInterfaceVmanageConnectionPreference"`
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable string `pulumi:"tunnelInterfaceVmanageConnectionPreferenceVariable"`
	// Set tunnel QoS mode
	TunnelQosMode string `pulumi:"tunnelQosMode"`
	// Variable name
	TunnelQosModeVariable string `pulumi:"tunnelQosModeVariable"`
	// vdsl
	VdslConfigurations []GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration `pulumi:"vdslConfigurations"`
	// The version of the feature template
	Version int `pulumi:"version"`
	// Name of VPN QoS map
	VpnQosMap string `pulumi:"vpnQosMap"`
	// Variable name
	VpnQosMapVariable string `pulumi:"vpnQosMapVariable"`
	// Name of rewrite rule
	WriteRule string `pulumi:"writeRule"`
	// Variable name
	WriteRuleVariable string `pulumi:"writeRuleVariable"`
}

func LookupVpnInterfaceDslPppoeFeatureTemplateOutput(ctx *pulumi.Context, args LookupVpnInterfaceDslPppoeFeatureTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput, error) {
			args := v.(LookupVpnInterfaceDslPppoeFeatureTemplateArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupVpnInterfaceDslPppoeFeatureTemplateResult
			secret, err := ctx.InvokePackageRaw("sdwan:index/getVpnInterfaceDslPppoeFeatureTemplate:getVpnInterfaceDslPppoeFeatureTemplate", args, &rv, "", opts...)
			if err != nil {
				return LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput), nil
			}
			return output, nil
		}).(LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput)
}

// A collection of arguments for invoking getVpnInterfaceDslPppoeFeatureTemplate.
type LookupVpnInterfaceDslPppoeFeatureTemplateOutputArgs struct {
	// The id of the feature template
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the feature template
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupVpnInterfaceDslPppoeFeatureTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnInterfaceDslPppoeFeatureTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getVpnInterfaceDslPppoeFeatureTemplate.
type LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnInterfaceDslPppoeFeatureTemplateResult)(nil)).Elem()
}

func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) ToLookupVpnInterfaceDslPppoeFeatureTemplateResultOutput() LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput {
	return o
}

func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) ToLookupVpnInterfaceDslPppoeFeatureTemplateResultOutputWithContext(ctx context.Context) LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput {
	return o
}

// Apply ACL
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) AccessLists() GetVpnInterfaceDslPppoeFeatureTemplateAccessListArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) []GetVpnInterfaceDslPppoeFeatureTemplateAccessList {
		return v.AccessLists
	}).(GetVpnInterfaceDslPppoeFeatureTemplateAccessListArrayOutput)
}

// Interface downstream bandwidth capacity, in kbps
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) BandwidthDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.BandwidthDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) BandwidthDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.BandwidthDownstreamVariable }).(pulumi.StringOutput)
}

// Interface upstream bandwidth capacity, in kbps
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) BandwidthUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.BandwidthUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) BandwidthUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.BandwidthUpstreamVariable }).(pulumi.StringOutput)
}

// CHAP Hostname
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) ChapHostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.ChapHostname }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) ChapHostnameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.ChapHostnameVariable }).(pulumi.StringOutput)
}

// Specify ppp chap authentication Password
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) ChapPppAuthPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.ChapPppAuthPassword }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) ChapPppAuthPasswordVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.ChapPppAuthPasswordVariable }).(pulumi.StringOutput)
}

// Enable core region
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) CoreRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.CoreRegion }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) CoreRegionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.CoreRegionVariable }).(pulumi.StringOutput)
}

// The description of the feature template
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) []string { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Enable core region
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) EnableCoreRegion() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.EnableCoreRegion }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) EnableCoreRegionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.EnableCoreRegionVariable }).(pulumi.StringOutput)
}

// Interface description
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) EthernetDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.EthernetDescription }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) EthernetDescriptionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.EthernetDescriptionVariable }).(pulumi.StringOutput)
}

// Dialer IP Negotiated
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) EthernetDialerAddressNegotiated() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.EthernetDialerAddressNegotiated }).(pulumi.BoolOutput)
}

// Dialer pool number
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) EthernetDialerPoolNumber() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.EthernetDialerPoolNumber }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) EthernetDialerPoolNumberVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.EthernetDialerPoolNumberVariable
	}).(pulumi.StringOutput)
}

// Ethernet Interface/Sub Interface Name including sub interface number
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) EthernetInterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.EthernetInterfaceName }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) EthernetInterfaceNameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.EthernetInterfaceNameVariable }).(pulumi.StringOutput)
}

// Maximum MRU to be negotiated during PPP LCP negotiation
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) EthernetPppMaximumPayload() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.EthernetPppMaximumPayload }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) EthernetPppMaximumPayloadVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.EthernetPppMaximumPayloadVariable
	}).(pulumi.StringOutput)
}

// Dialer IP Unnumbered Loopback interface name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) EthernetUnnumberedLoopbackInterface() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.EthernetUnnumberedLoopbackInterface
	}).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) EthernetUnnumberedLoopbackInterfaceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.EthernetUnnumberedLoopbackInterfaceVariable
	}).(pulumi.StringOutput)
}

// Encapsulation VLAN id
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) EthernetVlanId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.EthernetVlanId }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) EthernetVlanIdVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.EthernetVlanIdVariable }).(pulumi.StringOutput)
}

// The id of the feature template
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// IP Directed-Broadcast
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) IpDirectedBroadcast() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.IpDirectedBroadcast }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) IpDirectedBroadcastVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.IpDirectedBroadcastVariable }).(pulumi.StringOutput)
}

// Interface MTU \n\n, in bytes
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) IpMtu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.IpMtu }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) IpMtuVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.IpMtuVariable }).(pulumi.StringOutput)
}

// The name of the feature template
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// Network Address Translation on this interface
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) Nat() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.Nat }).(pulumi.BoolOutput)
}

// Block inbound ICMP error messages
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) NatBlockIcmpError() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.NatBlockIcmpError }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) NatBlockIcmpErrorVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.NatBlockIcmpErrorVariable }).(pulumi.StringOutput)
}

// Set port-forwarding rules for NAT on this interface
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) NatPortForwards() GetVpnInterfaceDslPppoeFeatureTemplateNatPortForwardArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) []GetVpnInterfaceDslPppoeFeatureTemplateNatPortForward {
		return v.NatPortForwards
	}).(GetVpnInterfaceDslPppoeFeatureTemplateNatPortForwardArrayOutput)
}

// Set NAT refresh mode
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) NatRefreshMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.NatRefreshMode }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) NatRefreshModeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.NatRefreshModeVariable }).(pulumi.StringOutput)
}

// Respond to ping requests to NAT interface ip address from the public side
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) NatResponseToPing() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.NatResponseToPing }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) NatResponseToPingVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.NatResponseToPingVariable }).(pulumi.StringOutput)
}

// Set NAT TCP session timeout, in minutes
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) NatTcpTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.NatTcpTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) NatTcpTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.NatTcpTimeoutVariable }).(pulumi.StringOutput)
}

// Set NAT UDP session timeout, in minutes
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) NatUdpTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.NatUdpTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) NatUdpTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.NatUdpTimeoutVariable }).(pulumi.StringOutput)
}

// PAP outbound Password
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) PapPassword() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.PapPassword }).(pulumi.BoolOutput)
}

// Specify ppp pap authentication Password
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) PapPppAuthPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.PapPppAuthPassword }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) PapPppAuthPasswordVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.PapPppAuthPasswordVariable }).(pulumi.StringOutput)
}

// PAP outbound Sent Username
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) PapUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.PapUsername }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) PapUsernameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.PapUsernameVariable }).(pulumi.StringOutput)
}

// Per-tunnel Qos
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) PerTunnelQos() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.PerTunnelQos }).(pulumi.BoolOutput)
}

// Per-tunnel QoS Aggregator
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) PerTunnelQosAggregator() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.PerTunnelQosAggregator }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) PerTunnelQosAggregatorVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.PerTunnelQosAggregatorVariable
	}).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) PerTunnelQosVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.PerTunnelQosVariable }).(pulumi.StringOutput)
}

// Enable policer
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) Policers() GetVpnInterfaceDslPppoeFeatureTemplatePolicerArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) []GetVpnInterfaceDslPppoeFeatureTemplatePolicer {
		return v.Policers
	}).(GetVpnInterfaceDslPppoeFeatureTemplatePolicerArrayOutput)
}

// PPP Link Authentication Protocol
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) PppAuthenticationProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.PppAuthenticationProtocol }).(pulumi.StringOutput)
}

// PPP Authentication Protocol PAP
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) PppAuthenticationProtocolPap() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.PppAuthenticationProtocolPap }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) PppAuthenticationProtocolVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.PppAuthenticationProtocolVariable
	}).(pulumi.StringOutput)
}

// Authenticate remote on incoming call only
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) PppAuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.PppAuthenticationType }).(pulumi.StringOutput)
}

// Adaptive QoS default downstream bandwidth
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) QosAdaptiveBandwidthDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.QosAdaptiveBandwidthDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) QosAdaptiveBandwidthDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.QosAdaptiveBandwidthDownstreamVariable
	}).(pulumi.StringOutput)
}

// Adaptive QoS default upstream bandwidth
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) QosAdaptiveBandwidthUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.QosAdaptiveBandwidthUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) QosAdaptiveBandwidthUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.QosAdaptiveBandwidthUpstreamVariable
	}).(pulumi.StringOutput)
}

// Downstream max bandwidth limit
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) QosAdaptiveMaxDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.QosAdaptiveMaxDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) QosAdaptiveMaxDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.QosAdaptiveMaxDownstreamVariable
	}).(pulumi.StringOutput)
}

// Upstream max bandwidth limit
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) QosAdaptiveMaxUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.QosAdaptiveMaxUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) QosAdaptiveMaxUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.QosAdaptiveMaxUpstreamVariable
	}).(pulumi.StringOutput)
}

// Downstream min bandwidth limit
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) QosAdaptiveMinDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.QosAdaptiveMinDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) QosAdaptiveMinDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.QosAdaptiveMinDownstreamVariable
	}).(pulumi.StringOutput)
}

// Upstream min bandwidth limit
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) QosAdaptiveMinUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.QosAdaptiveMinUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) QosAdaptiveMinUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.QosAdaptiveMinUpstreamVariable
	}).(pulumi.StringOutput)
}

// Periodic timer for adaptive QoS in minutes
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) QosAdaptivePeriod() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.QosAdaptivePeriod }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) QosAdaptivePeriodVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.QosAdaptivePeriodVariable }).(pulumi.StringOutput)
}

// Name of QoS map
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) QosMap() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.QosMap }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) QosMapVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.QosMapVariable }).(pulumi.StringOutput)
}

// Enable secondary region
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) SecondaryRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.SecondaryRegion }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) SecondaryRegionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.SecondaryRegionVariable }).(pulumi.StringOutput)
}

// 1ge  interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) ShapingRate() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.ShapingRate }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) ShapingRateVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.ShapingRateVariable }).(pulumi.StringOutput)
}

// Administrative state
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) Shutdown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.Shutdown }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) ShutdownVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.ShutdownVariable }).(pulumi.StringOutput)
}

// TCP MSS on SYN packets, in bytes
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TcpMss() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.TcpMss }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TcpMssVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.TcpMssVariable }).(pulumi.StringOutput)
}

// The template type
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.TemplateType }).(pulumi.StringOutput)
}

// Extends a local TLOC to a remote node only for vpn 0
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TlocExtension() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.TlocExtension }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TlocExtensionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.TlocExtensionVariable }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TrackerVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.TrackerVariable }).(pulumi.StringOutput)
}

// Enable tracker for this interface
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) Trackers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) []string { return v.Trackers }).(pulumi.StringArrayOutput)
}

// Allow all traffic. Overrides all other allow-service options if allow-service all is set
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowAll() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowAll }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowAllVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowAllVariable
	}).(pulumi.StringOutput)
}

// Allow/deny BGP
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowBgp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowBgp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowBgpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowBgpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny DHCP
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowDhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowDhcp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowDhcpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowDhcpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny DNS
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowDns() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowDns }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowDnsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowDnsVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny Https
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowHttps() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowHttps }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowHttpsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowHttpsVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny ICMP
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowIcmp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowIcmp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowIcmpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowIcmpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny NETCONF
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowNetconf() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowNetconf }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowNetconfVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowNetconfVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny NTP
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowNtp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowNtp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowNtpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowNtpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny OSPF
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowOspf() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowOspf }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowOspfVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowOspfVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny SNMP
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowSnmp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowSnmp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowSnmpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowSnmpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny SSH
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowSsh() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowSsh }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowSshVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowSshVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny STUN
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowStun() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowStun }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowStunVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowStunVariable
	}).(pulumi.StringOutput)
}

// Bind loopback tunnel interface to a physical interface
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceBindLoopbackTunnel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceBindLoopbackTunnel
	}).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceBindLoopbackTunnelVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceBindLoopbackTunnelVariable
	}).(pulumi.StringOutput)
}

// Set TLOC as border TLOC
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceBorder() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceBorder }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceBorderVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.TunnelInterfaceBorderVariable }).(pulumi.StringOutput)
}

// Set carrier for TLOC
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceCarrier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.TunnelInterfaceCarrier }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceCarrierVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceCarrierVariable
	}).(pulumi.StringOutput)
}

// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceClearDontFragment() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool {
		return v.TunnelInterfaceClearDontFragment
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceClearDontFragmentVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceClearDontFragmentVariable
	}).(pulumi.StringOutput)
}

// Set color for TLOC
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceColor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.TunnelInterfaceColor }).(pulumi.StringOutput)
}

// Restrict this TLOC behavior
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceColorRestrict() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceColorRestrict }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceColorVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.TunnelInterfaceColorVariable }).(pulumi.StringOutput)
}

// Allow Control Connection
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceControlConnections() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool {
		return v.TunnelInterfaceControlConnections
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceControlConnectionsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceControlConnectionsVariable
	}).(pulumi.StringOutput)
}

// Encapsulation for TLOC
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceEncapsulations() GetVpnInterfaceDslPppoeFeatureTemplateTunnelInterfaceEncapsulationArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) []GetVpnInterfaceDslPppoeFeatureTemplateTunnelInterfaceEncapsulation {
		return v.TunnelInterfaceEncapsulations
	}).(GetVpnInterfaceDslPppoeFeatureTemplateTunnelInterfaceEncapsulationArrayOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceExcludeControllerGroupListVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceExcludeControllerGroupListVariable
	}).(pulumi.StringOutput)
}

// Exclude the following controller groups defined in this list
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceExcludeControllerGroupLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) []int {
		return v.TunnelInterfaceExcludeControllerGroupLists
	}).(pulumi.IntArrayOutput)
}

// List of groups
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceGroups() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) []int { return v.TunnelInterfaceGroups }).(pulumi.IntArrayOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceGroupsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.TunnelInterfaceGroupsVariable }).(pulumi.StringOutput)
}

// Set time period of control hello packets \n\n milli seconds
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceHelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.TunnelInterfaceHelloInterval }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceHelloIntervalVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceHelloIntervalVariable
	}).(pulumi.StringOutput)
}

// Set tolerance of control hello packets \n\n seconds
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceHelloTolerance() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.TunnelInterfaceHelloTolerance }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceHelloToleranceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceHelloToleranceVariable
	}).(pulumi.StringOutput)
}

// Set TLOC as last resort
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceLastResortCircuit() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool {
		return v.TunnelInterfaceLastResortCircuit
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceLastResortCircuitVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceLastResortCircuitVariable
	}).(pulumi.StringOutput)
}

// Set the interface as a low-bandwidth circuit
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceLowBandwidthLink() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceLowBandwidthLink }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceLowBandwidthLinkVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceLowBandwidthLinkVariable
	}).(pulumi.StringOutput)
}

// Set the maximum number of control connections for this TLOC
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceMaxControlConnections() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int {
		return v.TunnelInterfaceMaxControlConnections
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceMaxControlConnectionsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceMaxControlConnectionsVariable
	}).(pulumi.StringOutput)
}

// Set time period of nat refresh packets \n\n seconds
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceNatRefreshInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int {
		return v.TunnelInterfaceNatRefreshInterval
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceNatRefreshIntervalVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceNatRefreshIntervalVariable
	}).(pulumi.StringOutput)
}

// Accept and respond to network-prefix-directed broadcasts)
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceNetworkBroadcast() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceNetworkBroadcast }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceNetworkBroadcastVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceNetworkBroadcastVariable
	}).(pulumi.StringOutput)
}

// Disallow port hopping on the tunnel interface
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfacePortHop() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool { return v.TunnelInterfacePortHop }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfacePortHopVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfacePortHopVariable
	}).(pulumi.StringOutput)
}

// Tunnel TCP MSS on SYN packets, in bytes
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceTunnelTcpMss() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.TunnelInterfaceTunnelTcpMss }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceTunnelTcpMssVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceTunnelTcpMssVariable
	}).(pulumi.StringOutput)
}

// Put this wan interface in STUN mode only
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceVbondAsStunServer() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) bool {
		return v.TunnelInterfaceVbondAsStunServer
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceVbondAsStunServerVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceVbondAsStunServerVariable
	}).(pulumi.StringOutput)
}

// Set interface preference for control connection to vManage \n\n
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceVmanageConnectionPreference() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int {
		return v.TunnelInterfaceVmanageConnectionPreference
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelInterfaceVmanageConnectionPreferenceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceVmanageConnectionPreferenceVariable
	}).(pulumi.StringOutput)
}

// Set tunnel QoS mode
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelQosMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.TunnelQosMode }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) TunnelQosModeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.TunnelQosModeVariable }).(pulumi.StringOutput)
}

// vdsl
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) VdslConfigurations() GetVpnInterfaceDslPppoeFeatureTemplateVdslConfigurationArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) []GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration {
		return v.VdslConfigurations
	}).(GetVpnInterfaceDslPppoeFeatureTemplateVdslConfigurationArrayOutput)
}

// The version of the feature template
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) int { return v.Version }).(pulumi.IntOutput)
}

// Name of VPN QoS map
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) VpnQosMap() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.VpnQosMap }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) VpnQosMapVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.VpnQosMapVariable }).(pulumi.StringOutput)
}

// Name of rewrite rule
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) WriteRule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.WriteRule }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput) WriteRuleVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceDslPppoeFeatureTemplateResult) string { return v.WriteRuleVariable }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpnInterfaceDslPppoeFeatureTemplateResultOutput{})
}
