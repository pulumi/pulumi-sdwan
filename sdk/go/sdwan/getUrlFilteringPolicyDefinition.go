// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the URL Filtering Policy Definition .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupUrlFilteringPolicyDefinition(ctx, &sdwan.LookupUrlFilteringPolicyDefinitionArgs{
//				Id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupUrlFilteringPolicyDefinition(ctx *pulumi.Context, args *LookupUrlFilteringPolicyDefinitionArgs, opts ...pulumi.InvokeOption) (*LookupUrlFilteringPolicyDefinitionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUrlFilteringPolicyDefinitionResult
	err := ctx.Invoke("sdwan:index/getUrlFilteringPolicyDefinition:getUrlFilteringPolicyDefinition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUrlFilteringPolicyDefinition.
type LookupUrlFilteringPolicyDefinitionArgs struct {
	// The id of the object
	Id string `pulumi:"id"`
}

// A collection of values returned by getUrlFilteringPolicyDefinition.
type LookupUrlFilteringPolicyDefinitionResult struct {
	// List of alerts options that will be exported as syslog messages
	Alerts []string `pulumi:"alerts"`
	// Allow URL list ID
	AllowUrlListId string `pulumi:"allowUrlListId"`
	// Allow URL list version
	AllowUrlListVersion int `pulumi:"allowUrlListVersion"`
	// Redirect to a URL or display a message when a blocked page is accessed.
	BlockPageAction string `pulumi:"blockPageAction"`
	// The message displayed or URL redirected to when a blocked page is accessed.
	BlockPageContents string `pulumi:"blockPageContents"`
	// Block URL list ID
	BlockUrlListId string `pulumi:"blockUrlListId"`
	// Block URL list version
	BlockUrlListVersion int `pulumi:"blockUrlListVersion"`
	// The description of the policy definition.
	Description string `pulumi:"description"`
	// The id of the object
	Id string `pulumi:"id"`
	// The policy mode
	Mode string `pulumi:"mode"`
	// The name of the policy definition.
	Name string `pulumi:"name"`
	// List of VPN IDs
	TargetVpns []string `pulumi:"targetVpns"`
	// The version of the object
	Version int `pulumi:"version"`
	// List of categories to block or allow
	WebCategories []string `pulumi:"webCategories"`
	// whether the selected web categories should be blocked or allowed.
	WebCategoriesAction string `pulumi:"webCategoriesAction"`
	// The web reputation of the policy definition
	WebReputation string `pulumi:"webReputation"`
}

func LookupUrlFilteringPolicyDefinitionOutput(ctx *pulumi.Context, args LookupUrlFilteringPolicyDefinitionOutputArgs, opts ...pulumi.InvokeOption) LookupUrlFilteringPolicyDefinitionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupUrlFilteringPolicyDefinitionResult, error) {
			args := v.(LookupUrlFilteringPolicyDefinitionArgs)
			r, err := LookupUrlFilteringPolicyDefinition(ctx, &args, opts...)
			var s LookupUrlFilteringPolicyDefinitionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupUrlFilteringPolicyDefinitionResultOutput)
}

// A collection of arguments for invoking getUrlFilteringPolicyDefinition.
type LookupUrlFilteringPolicyDefinitionOutputArgs struct {
	// The id of the object
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupUrlFilteringPolicyDefinitionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUrlFilteringPolicyDefinitionArgs)(nil)).Elem()
}

// A collection of values returned by getUrlFilteringPolicyDefinition.
type LookupUrlFilteringPolicyDefinitionResultOutput struct{ *pulumi.OutputState }

func (LookupUrlFilteringPolicyDefinitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUrlFilteringPolicyDefinitionResult)(nil)).Elem()
}

func (o LookupUrlFilteringPolicyDefinitionResultOutput) ToLookupUrlFilteringPolicyDefinitionResultOutput() LookupUrlFilteringPolicyDefinitionResultOutput {
	return o
}

func (o LookupUrlFilteringPolicyDefinitionResultOutput) ToLookupUrlFilteringPolicyDefinitionResultOutputWithContext(ctx context.Context) LookupUrlFilteringPolicyDefinitionResultOutput {
	return o
}

// List of alerts options that will be exported as syslog messages
func (o LookupUrlFilteringPolicyDefinitionResultOutput) Alerts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUrlFilteringPolicyDefinitionResult) []string { return v.Alerts }).(pulumi.StringArrayOutput)
}

// Allow URL list ID
func (o LookupUrlFilteringPolicyDefinitionResultOutput) AllowUrlListId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUrlFilteringPolicyDefinitionResult) string { return v.AllowUrlListId }).(pulumi.StringOutput)
}

// Allow URL list version
func (o LookupUrlFilteringPolicyDefinitionResultOutput) AllowUrlListVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupUrlFilteringPolicyDefinitionResult) int { return v.AllowUrlListVersion }).(pulumi.IntOutput)
}

// Redirect to a URL or display a message when a blocked page is accessed.
func (o LookupUrlFilteringPolicyDefinitionResultOutput) BlockPageAction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUrlFilteringPolicyDefinitionResult) string { return v.BlockPageAction }).(pulumi.StringOutput)
}

// The message displayed or URL redirected to when a blocked page is accessed.
func (o LookupUrlFilteringPolicyDefinitionResultOutput) BlockPageContents() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUrlFilteringPolicyDefinitionResult) string { return v.BlockPageContents }).(pulumi.StringOutput)
}

// Block URL list ID
func (o LookupUrlFilteringPolicyDefinitionResultOutput) BlockUrlListId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUrlFilteringPolicyDefinitionResult) string { return v.BlockUrlListId }).(pulumi.StringOutput)
}

// Block URL list version
func (o LookupUrlFilteringPolicyDefinitionResultOutput) BlockUrlListVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupUrlFilteringPolicyDefinitionResult) int { return v.BlockUrlListVersion }).(pulumi.IntOutput)
}

// The description of the policy definition.
func (o LookupUrlFilteringPolicyDefinitionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUrlFilteringPolicyDefinitionResult) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the object
func (o LookupUrlFilteringPolicyDefinitionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUrlFilteringPolicyDefinitionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The policy mode
func (o LookupUrlFilteringPolicyDefinitionResultOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUrlFilteringPolicyDefinitionResult) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the policy definition.
func (o LookupUrlFilteringPolicyDefinitionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUrlFilteringPolicyDefinitionResult) string { return v.Name }).(pulumi.StringOutput)
}

// List of VPN IDs
func (o LookupUrlFilteringPolicyDefinitionResultOutput) TargetVpns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUrlFilteringPolicyDefinitionResult) []string { return v.TargetVpns }).(pulumi.StringArrayOutput)
}

// The version of the object
func (o LookupUrlFilteringPolicyDefinitionResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupUrlFilteringPolicyDefinitionResult) int { return v.Version }).(pulumi.IntOutput)
}

// List of categories to block or allow
func (o LookupUrlFilteringPolicyDefinitionResultOutput) WebCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUrlFilteringPolicyDefinitionResult) []string { return v.WebCategories }).(pulumi.StringArrayOutput)
}

// whether the selected web categories should be blocked or allowed.
func (o LookupUrlFilteringPolicyDefinitionResultOutput) WebCategoriesAction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUrlFilteringPolicyDefinitionResult) string { return v.WebCategoriesAction }).(pulumi.StringOutput)
}

// The web reputation of the policy definition
func (o LookupUrlFilteringPolicyDefinitionResultOutput) WebReputation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUrlFilteringPolicyDefinitionResult) string { return v.WebReputation }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUrlFilteringPolicyDefinitionResultOutput{})
}
