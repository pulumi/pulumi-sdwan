// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a SLA Class Policy Object .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewSlaClassPolicyObject(ctx, "example", &sdwan.SlaClassPolicyObjectArgs{
//				Name:                       pulumi.String("Example"),
//				Jitter:                     pulumi.Int(100),
//				Latency:                    pulumi.Int(10),
//				Loss:                       pulumi.Int(1),
//				FallbackBestTunnelCriteria: pulumi.String("jitter-loss-latency"),
//				FallbackBestTunnelJitter:   pulumi.Int(100),
//				FallbackBestTunnelLatency:  pulumi.Int(10),
//				FallbackBestTunnelLoss:     pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/slaClassPolicyObject:SlaClassPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type SlaClassPolicyObject struct {
	pulumi.CustomResourceState

	// App Probe Class Policy Object ID
	AppProbeClassId pulumi.StringPtrOutput `pulumi:"appProbeClassId"`
	// App Probe Class Policy Object version
	AppProbeClassVersion pulumi.IntPtrOutput `pulumi:"appProbeClassVersion"`
	// - Choices: `loss`, `latency`, `jitter`, `loss-latency`, `loss-jitter`, `latency-loss`, `latency-jitter`, `jitter-latency`, `jitter-loss`, `loss-latency-jitter`, `loss-jitter-latency`, `latency-loss-jitter`, `latency-jitter-loss`, `jitter-latency-loss`, `jitter-loss-latency`
	FallbackBestTunnelCriteria pulumi.StringPtrOutput `pulumi:"fallbackBestTunnelCriteria"`
	// Jitter variance in ms
	//   - Range: `1`-`1000`
	FallbackBestTunnelJitter pulumi.IntPtrOutput `pulumi:"fallbackBestTunnelJitter"`
	// Latency variance in ms
	//   - Range: `1`-`1000`
	FallbackBestTunnelLatency pulumi.IntPtrOutput `pulumi:"fallbackBestTunnelLatency"`
	// Loss variance in percent
	//   - Range: `1`-`100`
	FallbackBestTunnelLoss pulumi.IntPtrOutput `pulumi:"fallbackBestTunnelLoss"`
	// Jitter in ms
	//   - Range: `1`-`1000`
	Jitter pulumi.IntPtrOutput `pulumi:"jitter"`
	// Latency in ms
	//   - Range: `1`-`1000`
	Latency pulumi.IntPtrOutput `pulumi:"latency"`
	// Loss in percent
	//   - Range: `1`-`100`
	Loss pulumi.IntPtrOutput `pulumi:"loss"`
	// The name of the policy object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewSlaClassPolicyObject registers a new resource with the given unique name, arguments, and options.
func NewSlaClassPolicyObject(ctx *pulumi.Context,
	name string, args *SlaClassPolicyObjectArgs, opts ...pulumi.ResourceOption) (*SlaClassPolicyObject, error) {
	if args == nil {
		args = &SlaClassPolicyObjectArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SlaClassPolicyObject
	err := ctx.RegisterResource("sdwan:index/slaClassPolicyObject:SlaClassPolicyObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSlaClassPolicyObject gets an existing SlaClassPolicyObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSlaClassPolicyObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SlaClassPolicyObjectState, opts ...pulumi.ResourceOption) (*SlaClassPolicyObject, error) {
	var resource SlaClassPolicyObject
	err := ctx.ReadResource("sdwan:index/slaClassPolicyObject:SlaClassPolicyObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SlaClassPolicyObject resources.
type slaClassPolicyObjectState struct {
	// App Probe Class Policy Object ID
	AppProbeClassId *string `pulumi:"appProbeClassId"`
	// App Probe Class Policy Object version
	AppProbeClassVersion *int `pulumi:"appProbeClassVersion"`
	// - Choices: `loss`, `latency`, `jitter`, `loss-latency`, `loss-jitter`, `latency-loss`, `latency-jitter`, `jitter-latency`, `jitter-loss`, `loss-latency-jitter`, `loss-jitter-latency`, `latency-loss-jitter`, `latency-jitter-loss`, `jitter-latency-loss`, `jitter-loss-latency`
	FallbackBestTunnelCriteria *string `pulumi:"fallbackBestTunnelCriteria"`
	// Jitter variance in ms
	//   - Range: `1`-`1000`
	FallbackBestTunnelJitter *int `pulumi:"fallbackBestTunnelJitter"`
	// Latency variance in ms
	//   - Range: `1`-`1000`
	FallbackBestTunnelLatency *int `pulumi:"fallbackBestTunnelLatency"`
	// Loss variance in percent
	//   - Range: `1`-`100`
	FallbackBestTunnelLoss *int `pulumi:"fallbackBestTunnelLoss"`
	// Jitter in ms
	//   - Range: `1`-`1000`
	Jitter *int `pulumi:"jitter"`
	// Latency in ms
	//   - Range: `1`-`1000`
	Latency *int `pulumi:"latency"`
	// Loss in percent
	//   - Range: `1`-`100`
	Loss *int `pulumi:"loss"`
	// The name of the policy object
	Name *string `pulumi:"name"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type SlaClassPolicyObjectState struct {
	// App Probe Class Policy Object ID
	AppProbeClassId pulumi.StringPtrInput
	// App Probe Class Policy Object version
	AppProbeClassVersion pulumi.IntPtrInput
	// - Choices: `loss`, `latency`, `jitter`, `loss-latency`, `loss-jitter`, `latency-loss`, `latency-jitter`, `jitter-latency`, `jitter-loss`, `loss-latency-jitter`, `loss-jitter-latency`, `latency-loss-jitter`, `latency-jitter-loss`, `jitter-latency-loss`, `jitter-loss-latency`
	FallbackBestTunnelCriteria pulumi.StringPtrInput
	// Jitter variance in ms
	//   - Range: `1`-`1000`
	FallbackBestTunnelJitter pulumi.IntPtrInput
	// Latency variance in ms
	//   - Range: `1`-`1000`
	FallbackBestTunnelLatency pulumi.IntPtrInput
	// Loss variance in percent
	//   - Range: `1`-`100`
	FallbackBestTunnelLoss pulumi.IntPtrInput
	// Jitter in ms
	//   - Range: `1`-`1000`
	Jitter pulumi.IntPtrInput
	// Latency in ms
	//   - Range: `1`-`1000`
	Latency pulumi.IntPtrInput
	// Loss in percent
	//   - Range: `1`-`100`
	Loss pulumi.IntPtrInput
	// The name of the policy object
	Name pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (SlaClassPolicyObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*slaClassPolicyObjectState)(nil)).Elem()
}

type slaClassPolicyObjectArgs struct {
	// App Probe Class Policy Object ID
	AppProbeClassId *string `pulumi:"appProbeClassId"`
	// App Probe Class Policy Object version
	AppProbeClassVersion *int `pulumi:"appProbeClassVersion"`
	// - Choices: `loss`, `latency`, `jitter`, `loss-latency`, `loss-jitter`, `latency-loss`, `latency-jitter`, `jitter-latency`, `jitter-loss`, `loss-latency-jitter`, `loss-jitter-latency`, `latency-loss-jitter`, `latency-jitter-loss`, `jitter-latency-loss`, `jitter-loss-latency`
	FallbackBestTunnelCriteria *string `pulumi:"fallbackBestTunnelCriteria"`
	// Jitter variance in ms
	//   - Range: `1`-`1000`
	FallbackBestTunnelJitter *int `pulumi:"fallbackBestTunnelJitter"`
	// Latency variance in ms
	//   - Range: `1`-`1000`
	FallbackBestTunnelLatency *int `pulumi:"fallbackBestTunnelLatency"`
	// Loss variance in percent
	//   - Range: `1`-`100`
	FallbackBestTunnelLoss *int `pulumi:"fallbackBestTunnelLoss"`
	// Jitter in ms
	//   - Range: `1`-`1000`
	Jitter *int `pulumi:"jitter"`
	// Latency in ms
	//   - Range: `1`-`1000`
	Latency *int `pulumi:"latency"`
	// Loss in percent
	//   - Range: `1`-`100`
	Loss *int `pulumi:"loss"`
	// The name of the policy object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a SlaClassPolicyObject resource.
type SlaClassPolicyObjectArgs struct {
	// App Probe Class Policy Object ID
	AppProbeClassId pulumi.StringPtrInput
	// App Probe Class Policy Object version
	AppProbeClassVersion pulumi.IntPtrInput
	// - Choices: `loss`, `latency`, `jitter`, `loss-latency`, `loss-jitter`, `latency-loss`, `latency-jitter`, `jitter-latency`, `jitter-loss`, `loss-latency-jitter`, `loss-jitter-latency`, `latency-loss-jitter`, `latency-jitter-loss`, `jitter-latency-loss`, `jitter-loss-latency`
	FallbackBestTunnelCriteria pulumi.StringPtrInput
	// Jitter variance in ms
	//   - Range: `1`-`1000`
	FallbackBestTunnelJitter pulumi.IntPtrInput
	// Latency variance in ms
	//   - Range: `1`-`1000`
	FallbackBestTunnelLatency pulumi.IntPtrInput
	// Loss variance in percent
	//   - Range: `1`-`100`
	FallbackBestTunnelLoss pulumi.IntPtrInput
	// Jitter in ms
	//   - Range: `1`-`1000`
	Jitter pulumi.IntPtrInput
	// Latency in ms
	//   - Range: `1`-`1000`
	Latency pulumi.IntPtrInput
	// Loss in percent
	//   - Range: `1`-`100`
	Loss pulumi.IntPtrInput
	// The name of the policy object
	Name pulumi.StringPtrInput
}

func (SlaClassPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*slaClassPolicyObjectArgs)(nil)).Elem()
}

type SlaClassPolicyObjectInput interface {
	pulumi.Input

	ToSlaClassPolicyObjectOutput() SlaClassPolicyObjectOutput
	ToSlaClassPolicyObjectOutputWithContext(ctx context.Context) SlaClassPolicyObjectOutput
}

func (*SlaClassPolicyObject) ElementType() reflect.Type {
	return reflect.TypeOf((**SlaClassPolicyObject)(nil)).Elem()
}

func (i *SlaClassPolicyObject) ToSlaClassPolicyObjectOutput() SlaClassPolicyObjectOutput {
	return i.ToSlaClassPolicyObjectOutputWithContext(context.Background())
}

func (i *SlaClassPolicyObject) ToSlaClassPolicyObjectOutputWithContext(ctx context.Context) SlaClassPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlaClassPolicyObjectOutput)
}

// SlaClassPolicyObjectArrayInput is an input type that accepts SlaClassPolicyObjectArray and SlaClassPolicyObjectArrayOutput values.
// You can construct a concrete instance of `SlaClassPolicyObjectArrayInput` via:
//
//	SlaClassPolicyObjectArray{ SlaClassPolicyObjectArgs{...} }
type SlaClassPolicyObjectArrayInput interface {
	pulumi.Input

	ToSlaClassPolicyObjectArrayOutput() SlaClassPolicyObjectArrayOutput
	ToSlaClassPolicyObjectArrayOutputWithContext(context.Context) SlaClassPolicyObjectArrayOutput
}

type SlaClassPolicyObjectArray []SlaClassPolicyObjectInput

func (SlaClassPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SlaClassPolicyObject)(nil)).Elem()
}

func (i SlaClassPolicyObjectArray) ToSlaClassPolicyObjectArrayOutput() SlaClassPolicyObjectArrayOutput {
	return i.ToSlaClassPolicyObjectArrayOutputWithContext(context.Background())
}

func (i SlaClassPolicyObjectArray) ToSlaClassPolicyObjectArrayOutputWithContext(ctx context.Context) SlaClassPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlaClassPolicyObjectArrayOutput)
}

// SlaClassPolicyObjectMapInput is an input type that accepts SlaClassPolicyObjectMap and SlaClassPolicyObjectMapOutput values.
// You can construct a concrete instance of `SlaClassPolicyObjectMapInput` via:
//
//	SlaClassPolicyObjectMap{ "key": SlaClassPolicyObjectArgs{...} }
type SlaClassPolicyObjectMapInput interface {
	pulumi.Input

	ToSlaClassPolicyObjectMapOutput() SlaClassPolicyObjectMapOutput
	ToSlaClassPolicyObjectMapOutputWithContext(context.Context) SlaClassPolicyObjectMapOutput
}

type SlaClassPolicyObjectMap map[string]SlaClassPolicyObjectInput

func (SlaClassPolicyObjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SlaClassPolicyObject)(nil)).Elem()
}

func (i SlaClassPolicyObjectMap) ToSlaClassPolicyObjectMapOutput() SlaClassPolicyObjectMapOutput {
	return i.ToSlaClassPolicyObjectMapOutputWithContext(context.Background())
}

func (i SlaClassPolicyObjectMap) ToSlaClassPolicyObjectMapOutputWithContext(ctx context.Context) SlaClassPolicyObjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlaClassPolicyObjectMapOutput)
}

type SlaClassPolicyObjectOutput struct{ *pulumi.OutputState }

func (SlaClassPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlaClassPolicyObject)(nil)).Elem()
}

func (o SlaClassPolicyObjectOutput) ToSlaClassPolicyObjectOutput() SlaClassPolicyObjectOutput {
	return o
}

func (o SlaClassPolicyObjectOutput) ToSlaClassPolicyObjectOutputWithContext(ctx context.Context) SlaClassPolicyObjectOutput {
	return o
}

// App Probe Class Policy Object ID
func (o SlaClassPolicyObjectOutput) AppProbeClassId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlaClassPolicyObject) pulumi.StringPtrOutput { return v.AppProbeClassId }).(pulumi.StringPtrOutput)
}

// App Probe Class Policy Object version
func (o SlaClassPolicyObjectOutput) AppProbeClassVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlaClassPolicyObject) pulumi.IntPtrOutput { return v.AppProbeClassVersion }).(pulumi.IntPtrOutput)
}

// - Choices: `loss`, `latency`, `jitter`, `loss-latency`, `loss-jitter`, `latency-loss`, `latency-jitter`, `jitter-latency`, `jitter-loss`, `loss-latency-jitter`, `loss-jitter-latency`, `latency-loss-jitter`, `latency-jitter-loss`, `jitter-latency-loss`, `jitter-loss-latency`
func (o SlaClassPolicyObjectOutput) FallbackBestTunnelCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlaClassPolicyObject) pulumi.StringPtrOutput { return v.FallbackBestTunnelCriteria }).(pulumi.StringPtrOutput)
}

// Jitter variance in ms
//   - Range: `1`-`1000`
func (o SlaClassPolicyObjectOutput) FallbackBestTunnelJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlaClassPolicyObject) pulumi.IntPtrOutput { return v.FallbackBestTunnelJitter }).(pulumi.IntPtrOutput)
}

// Latency variance in ms
//   - Range: `1`-`1000`
func (o SlaClassPolicyObjectOutput) FallbackBestTunnelLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlaClassPolicyObject) pulumi.IntPtrOutput { return v.FallbackBestTunnelLatency }).(pulumi.IntPtrOutput)
}

// Loss variance in percent
//   - Range: `1`-`100`
func (o SlaClassPolicyObjectOutput) FallbackBestTunnelLoss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlaClassPolicyObject) pulumi.IntPtrOutput { return v.FallbackBestTunnelLoss }).(pulumi.IntPtrOutput)
}

// Jitter in ms
//   - Range: `1`-`1000`
func (o SlaClassPolicyObjectOutput) Jitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlaClassPolicyObject) pulumi.IntPtrOutput { return v.Jitter }).(pulumi.IntPtrOutput)
}

// Latency in ms
//   - Range: `1`-`1000`
func (o SlaClassPolicyObjectOutput) Latency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlaClassPolicyObject) pulumi.IntPtrOutput { return v.Latency }).(pulumi.IntPtrOutput)
}

// Loss in percent
//   - Range: `1`-`100`
func (o SlaClassPolicyObjectOutput) Loss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlaClassPolicyObject) pulumi.IntPtrOutput { return v.Loss }).(pulumi.IntPtrOutput)
}

// The name of the policy object
func (o SlaClassPolicyObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SlaClassPolicyObject) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the object
func (o SlaClassPolicyObjectOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *SlaClassPolicyObject) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type SlaClassPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (SlaClassPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SlaClassPolicyObject)(nil)).Elem()
}

func (o SlaClassPolicyObjectArrayOutput) ToSlaClassPolicyObjectArrayOutput() SlaClassPolicyObjectArrayOutput {
	return o
}

func (o SlaClassPolicyObjectArrayOutput) ToSlaClassPolicyObjectArrayOutputWithContext(ctx context.Context) SlaClassPolicyObjectArrayOutput {
	return o
}

func (o SlaClassPolicyObjectArrayOutput) Index(i pulumi.IntInput) SlaClassPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SlaClassPolicyObject {
		return vs[0].([]*SlaClassPolicyObject)[vs[1].(int)]
	}).(SlaClassPolicyObjectOutput)
}

type SlaClassPolicyObjectMapOutput struct{ *pulumi.OutputState }

func (SlaClassPolicyObjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SlaClassPolicyObject)(nil)).Elem()
}

func (o SlaClassPolicyObjectMapOutput) ToSlaClassPolicyObjectMapOutput() SlaClassPolicyObjectMapOutput {
	return o
}

func (o SlaClassPolicyObjectMapOutput) ToSlaClassPolicyObjectMapOutputWithContext(ctx context.Context) SlaClassPolicyObjectMapOutput {
	return o
}

func (o SlaClassPolicyObjectMapOutput) MapIndex(k pulumi.StringInput) SlaClassPolicyObjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SlaClassPolicyObject {
		return vs[0].(map[string]*SlaClassPolicyObject)[vs[1].(string)]
	}).(SlaClassPolicyObjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SlaClassPolicyObjectInput)(nil)).Elem(), &SlaClassPolicyObject{})
	pulumi.RegisterInputType(reflect.TypeOf((*SlaClassPolicyObjectArrayInput)(nil)).Elem(), SlaClassPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SlaClassPolicyObjectMapInput)(nil)).Elem(), SlaClassPolicyObjectMap{})
	pulumi.RegisterOutputType(SlaClassPolicyObjectOutput{})
	pulumi.RegisterOutputType(SlaClassPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(SlaClassPolicyObjectMapOutput{})
}
