// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Site List Policy Object .
//
// ## Example Usage
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/siteListPolicyObject:SiteListPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type SiteListPolicyObject struct {
	pulumi.CustomResourceState

	// List of entries
	Entries SiteListPolicyObjectEntryArrayOutput `pulumi:"entries"`
	// The name of the policy object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewSiteListPolicyObject registers a new resource with the given unique name, arguments, and options.
func NewSiteListPolicyObject(ctx *pulumi.Context,
	name string, args *SiteListPolicyObjectArgs, opts ...pulumi.ResourceOption) (*SiteListPolicyObject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SiteListPolicyObject
	err := ctx.RegisterResource("sdwan:index/siteListPolicyObject:SiteListPolicyObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSiteListPolicyObject gets an existing SiteListPolicyObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSiteListPolicyObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SiteListPolicyObjectState, opts ...pulumi.ResourceOption) (*SiteListPolicyObject, error) {
	var resource SiteListPolicyObject
	err := ctx.ReadResource("sdwan:index/siteListPolicyObject:SiteListPolicyObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SiteListPolicyObject resources.
type siteListPolicyObjectState struct {
	// List of entries
	Entries []SiteListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type SiteListPolicyObjectState struct {
	// List of entries
	Entries SiteListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (SiteListPolicyObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*siteListPolicyObjectState)(nil)).Elem()
}

type siteListPolicyObjectArgs struct {
	// List of entries
	Entries []SiteListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a SiteListPolicyObject resource.
type SiteListPolicyObjectArgs struct {
	// List of entries
	Entries SiteListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
}

func (SiteListPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*siteListPolicyObjectArgs)(nil)).Elem()
}

type SiteListPolicyObjectInput interface {
	pulumi.Input

	ToSiteListPolicyObjectOutput() SiteListPolicyObjectOutput
	ToSiteListPolicyObjectOutputWithContext(ctx context.Context) SiteListPolicyObjectOutput
}

func (*SiteListPolicyObject) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteListPolicyObject)(nil)).Elem()
}

func (i *SiteListPolicyObject) ToSiteListPolicyObjectOutput() SiteListPolicyObjectOutput {
	return i.ToSiteListPolicyObjectOutputWithContext(context.Background())
}

func (i *SiteListPolicyObject) ToSiteListPolicyObjectOutputWithContext(ctx context.Context) SiteListPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteListPolicyObjectOutput)
}

// SiteListPolicyObjectArrayInput is an input type that accepts SiteListPolicyObjectArray and SiteListPolicyObjectArrayOutput values.
// You can construct a concrete instance of `SiteListPolicyObjectArrayInput` via:
//
//	SiteListPolicyObjectArray{ SiteListPolicyObjectArgs{...} }
type SiteListPolicyObjectArrayInput interface {
	pulumi.Input

	ToSiteListPolicyObjectArrayOutput() SiteListPolicyObjectArrayOutput
	ToSiteListPolicyObjectArrayOutputWithContext(context.Context) SiteListPolicyObjectArrayOutput
}

type SiteListPolicyObjectArray []SiteListPolicyObjectInput

func (SiteListPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SiteListPolicyObject)(nil)).Elem()
}

func (i SiteListPolicyObjectArray) ToSiteListPolicyObjectArrayOutput() SiteListPolicyObjectArrayOutput {
	return i.ToSiteListPolicyObjectArrayOutputWithContext(context.Background())
}

func (i SiteListPolicyObjectArray) ToSiteListPolicyObjectArrayOutputWithContext(ctx context.Context) SiteListPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteListPolicyObjectArrayOutput)
}

// SiteListPolicyObjectMapInput is an input type that accepts SiteListPolicyObjectMap and SiteListPolicyObjectMapOutput values.
// You can construct a concrete instance of `SiteListPolicyObjectMapInput` via:
//
//	SiteListPolicyObjectMap{ "key": SiteListPolicyObjectArgs{...} }
type SiteListPolicyObjectMapInput interface {
	pulumi.Input

	ToSiteListPolicyObjectMapOutput() SiteListPolicyObjectMapOutput
	ToSiteListPolicyObjectMapOutputWithContext(context.Context) SiteListPolicyObjectMapOutput
}

type SiteListPolicyObjectMap map[string]SiteListPolicyObjectInput

func (SiteListPolicyObjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SiteListPolicyObject)(nil)).Elem()
}

func (i SiteListPolicyObjectMap) ToSiteListPolicyObjectMapOutput() SiteListPolicyObjectMapOutput {
	return i.ToSiteListPolicyObjectMapOutputWithContext(context.Background())
}

func (i SiteListPolicyObjectMap) ToSiteListPolicyObjectMapOutputWithContext(ctx context.Context) SiteListPolicyObjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteListPolicyObjectMapOutput)
}

type SiteListPolicyObjectOutput struct{ *pulumi.OutputState }

func (SiteListPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteListPolicyObject)(nil)).Elem()
}

func (o SiteListPolicyObjectOutput) ToSiteListPolicyObjectOutput() SiteListPolicyObjectOutput {
	return o
}

func (o SiteListPolicyObjectOutput) ToSiteListPolicyObjectOutputWithContext(ctx context.Context) SiteListPolicyObjectOutput {
	return o
}

// List of entries
func (o SiteListPolicyObjectOutput) Entries() SiteListPolicyObjectEntryArrayOutput {
	return o.ApplyT(func(v *SiteListPolicyObject) SiteListPolicyObjectEntryArrayOutput { return v.Entries }).(SiteListPolicyObjectEntryArrayOutput)
}

// The name of the policy object
func (o SiteListPolicyObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SiteListPolicyObject) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the object
func (o SiteListPolicyObjectOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *SiteListPolicyObject) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type SiteListPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (SiteListPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SiteListPolicyObject)(nil)).Elem()
}

func (o SiteListPolicyObjectArrayOutput) ToSiteListPolicyObjectArrayOutput() SiteListPolicyObjectArrayOutput {
	return o
}

func (o SiteListPolicyObjectArrayOutput) ToSiteListPolicyObjectArrayOutputWithContext(ctx context.Context) SiteListPolicyObjectArrayOutput {
	return o
}

func (o SiteListPolicyObjectArrayOutput) Index(i pulumi.IntInput) SiteListPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SiteListPolicyObject {
		return vs[0].([]*SiteListPolicyObject)[vs[1].(int)]
	}).(SiteListPolicyObjectOutput)
}

type SiteListPolicyObjectMapOutput struct{ *pulumi.OutputState }

func (SiteListPolicyObjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SiteListPolicyObject)(nil)).Elem()
}

func (o SiteListPolicyObjectMapOutput) ToSiteListPolicyObjectMapOutput() SiteListPolicyObjectMapOutput {
	return o
}

func (o SiteListPolicyObjectMapOutput) ToSiteListPolicyObjectMapOutputWithContext(ctx context.Context) SiteListPolicyObjectMapOutput {
	return o
}

func (o SiteListPolicyObjectMapOutput) MapIndex(k pulumi.StringInput) SiteListPolicyObjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SiteListPolicyObject {
		return vs[0].(map[string]*SiteListPolicyObject)[vs[1].(string)]
	}).(SiteListPolicyObjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SiteListPolicyObjectInput)(nil)).Elem(), &SiteListPolicyObject{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteListPolicyObjectArrayInput)(nil)).Elem(), SiteListPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteListPolicyObjectMapInput)(nil)).Elem(), SiteListPolicyObjectMap{})
	pulumi.RegisterOutputType(SiteListPolicyObjectOutput{})
	pulumi.RegisterOutputType(SiteListPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(SiteListPolicyObjectMapOutput{})
}
