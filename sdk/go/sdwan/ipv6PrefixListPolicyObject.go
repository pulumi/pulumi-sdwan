// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a IPv6 Prefix List Policy Object .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewIpv6PrefixListPolicyObject(ctx, "example", &sdwan.Ipv6PrefixListPolicyObjectArgs{
//				Name: pulumi.String("Example"),
//				Entries: sdwan.Ipv6PrefixListPolicyObjectEntryArray{
//					&sdwan.Ipv6PrefixListPolicyObjectEntryArgs{
//						Prefix: pulumi.String("2001:1:1:2::/64"),
//						Le:     pulumi.Int(80),
//						Ge:     pulumi.Int(128),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/ipv6PrefixListPolicyObject:Ipv6PrefixListPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type Ipv6PrefixListPolicyObject struct {
	pulumi.CustomResourceState

	// List of entries
	Entries Ipv6PrefixListPolicyObjectEntryArrayOutput `pulumi:"entries"`
	// The name of the policy object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewIpv6PrefixListPolicyObject registers a new resource with the given unique name, arguments, and options.
func NewIpv6PrefixListPolicyObject(ctx *pulumi.Context,
	name string, args *Ipv6PrefixListPolicyObjectArgs, opts ...pulumi.ResourceOption) (*Ipv6PrefixListPolicyObject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ipv6PrefixListPolicyObject
	err := ctx.RegisterResource("sdwan:index/ipv6PrefixListPolicyObject:Ipv6PrefixListPolicyObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpv6PrefixListPolicyObject gets an existing Ipv6PrefixListPolicyObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpv6PrefixListPolicyObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Ipv6PrefixListPolicyObjectState, opts ...pulumi.ResourceOption) (*Ipv6PrefixListPolicyObject, error) {
	var resource Ipv6PrefixListPolicyObject
	err := ctx.ReadResource("sdwan:index/ipv6PrefixListPolicyObject:Ipv6PrefixListPolicyObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ipv6PrefixListPolicyObject resources.
type ipv6PrefixListPolicyObjectState struct {
	// List of entries
	Entries []Ipv6PrefixListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type Ipv6PrefixListPolicyObjectState struct {
	// List of entries
	Entries Ipv6PrefixListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (Ipv6PrefixListPolicyObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipv6PrefixListPolicyObjectState)(nil)).Elem()
}

type ipv6PrefixListPolicyObjectArgs struct {
	// List of entries
	Entries []Ipv6PrefixListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a Ipv6PrefixListPolicyObject resource.
type Ipv6PrefixListPolicyObjectArgs struct {
	// List of entries
	Entries Ipv6PrefixListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
}

func (Ipv6PrefixListPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipv6PrefixListPolicyObjectArgs)(nil)).Elem()
}

type Ipv6PrefixListPolicyObjectInput interface {
	pulumi.Input

	ToIpv6PrefixListPolicyObjectOutput() Ipv6PrefixListPolicyObjectOutput
	ToIpv6PrefixListPolicyObjectOutputWithContext(ctx context.Context) Ipv6PrefixListPolicyObjectOutput
}

func (*Ipv6PrefixListPolicyObject) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6PrefixListPolicyObject)(nil)).Elem()
}

func (i *Ipv6PrefixListPolicyObject) ToIpv6PrefixListPolicyObjectOutput() Ipv6PrefixListPolicyObjectOutput {
	return i.ToIpv6PrefixListPolicyObjectOutputWithContext(context.Background())
}

func (i *Ipv6PrefixListPolicyObject) ToIpv6PrefixListPolicyObjectOutputWithContext(ctx context.Context) Ipv6PrefixListPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6PrefixListPolicyObjectOutput)
}

// Ipv6PrefixListPolicyObjectArrayInput is an input type that accepts Ipv6PrefixListPolicyObjectArray and Ipv6PrefixListPolicyObjectArrayOutput values.
// You can construct a concrete instance of `Ipv6PrefixListPolicyObjectArrayInput` via:
//
//	Ipv6PrefixListPolicyObjectArray{ Ipv6PrefixListPolicyObjectArgs{...} }
type Ipv6PrefixListPolicyObjectArrayInput interface {
	pulumi.Input

	ToIpv6PrefixListPolicyObjectArrayOutput() Ipv6PrefixListPolicyObjectArrayOutput
	ToIpv6PrefixListPolicyObjectArrayOutputWithContext(context.Context) Ipv6PrefixListPolicyObjectArrayOutput
}

type Ipv6PrefixListPolicyObjectArray []Ipv6PrefixListPolicyObjectInput

func (Ipv6PrefixListPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ipv6PrefixListPolicyObject)(nil)).Elem()
}

func (i Ipv6PrefixListPolicyObjectArray) ToIpv6PrefixListPolicyObjectArrayOutput() Ipv6PrefixListPolicyObjectArrayOutput {
	return i.ToIpv6PrefixListPolicyObjectArrayOutputWithContext(context.Background())
}

func (i Ipv6PrefixListPolicyObjectArray) ToIpv6PrefixListPolicyObjectArrayOutputWithContext(ctx context.Context) Ipv6PrefixListPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6PrefixListPolicyObjectArrayOutput)
}

// Ipv6PrefixListPolicyObjectMapInput is an input type that accepts Ipv6PrefixListPolicyObjectMap and Ipv6PrefixListPolicyObjectMapOutput values.
// You can construct a concrete instance of `Ipv6PrefixListPolicyObjectMapInput` via:
//
//	Ipv6PrefixListPolicyObjectMap{ "key": Ipv6PrefixListPolicyObjectArgs{...} }
type Ipv6PrefixListPolicyObjectMapInput interface {
	pulumi.Input

	ToIpv6PrefixListPolicyObjectMapOutput() Ipv6PrefixListPolicyObjectMapOutput
	ToIpv6PrefixListPolicyObjectMapOutputWithContext(context.Context) Ipv6PrefixListPolicyObjectMapOutput
}

type Ipv6PrefixListPolicyObjectMap map[string]Ipv6PrefixListPolicyObjectInput

func (Ipv6PrefixListPolicyObjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ipv6PrefixListPolicyObject)(nil)).Elem()
}

func (i Ipv6PrefixListPolicyObjectMap) ToIpv6PrefixListPolicyObjectMapOutput() Ipv6PrefixListPolicyObjectMapOutput {
	return i.ToIpv6PrefixListPolicyObjectMapOutputWithContext(context.Background())
}

func (i Ipv6PrefixListPolicyObjectMap) ToIpv6PrefixListPolicyObjectMapOutputWithContext(ctx context.Context) Ipv6PrefixListPolicyObjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6PrefixListPolicyObjectMapOutput)
}

type Ipv6PrefixListPolicyObjectOutput struct{ *pulumi.OutputState }

func (Ipv6PrefixListPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6PrefixListPolicyObject)(nil)).Elem()
}

func (o Ipv6PrefixListPolicyObjectOutput) ToIpv6PrefixListPolicyObjectOutput() Ipv6PrefixListPolicyObjectOutput {
	return o
}

func (o Ipv6PrefixListPolicyObjectOutput) ToIpv6PrefixListPolicyObjectOutputWithContext(ctx context.Context) Ipv6PrefixListPolicyObjectOutput {
	return o
}

// List of entries
func (o Ipv6PrefixListPolicyObjectOutput) Entries() Ipv6PrefixListPolicyObjectEntryArrayOutput {
	return o.ApplyT(func(v *Ipv6PrefixListPolicyObject) Ipv6PrefixListPolicyObjectEntryArrayOutput { return v.Entries }).(Ipv6PrefixListPolicyObjectEntryArrayOutput)
}

// The name of the policy object
func (o Ipv6PrefixListPolicyObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Ipv6PrefixListPolicyObject) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the object
func (o Ipv6PrefixListPolicyObjectOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *Ipv6PrefixListPolicyObject) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type Ipv6PrefixListPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (Ipv6PrefixListPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ipv6PrefixListPolicyObject)(nil)).Elem()
}

func (o Ipv6PrefixListPolicyObjectArrayOutput) ToIpv6PrefixListPolicyObjectArrayOutput() Ipv6PrefixListPolicyObjectArrayOutput {
	return o
}

func (o Ipv6PrefixListPolicyObjectArrayOutput) ToIpv6PrefixListPolicyObjectArrayOutputWithContext(ctx context.Context) Ipv6PrefixListPolicyObjectArrayOutput {
	return o
}

func (o Ipv6PrefixListPolicyObjectArrayOutput) Index(i pulumi.IntInput) Ipv6PrefixListPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ipv6PrefixListPolicyObject {
		return vs[0].([]*Ipv6PrefixListPolicyObject)[vs[1].(int)]
	}).(Ipv6PrefixListPolicyObjectOutput)
}

type Ipv6PrefixListPolicyObjectMapOutput struct{ *pulumi.OutputState }

func (Ipv6PrefixListPolicyObjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ipv6PrefixListPolicyObject)(nil)).Elem()
}

func (o Ipv6PrefixListPolicyObjectMapOutput) ToIpv6PrefixListPolicyObjectMapOutput() Ipv6PrefixListPolicyObjectMapOutput {
	return o
}

func (o Ipv6PrefixListPolicyObjectMapOutput) ToIpv6PrefixListPolicyObjectMapOutputWithContext(ctx context.Context) Ipv6PrefixListPolicyObjectMapOutput {
	return o
}

func (o Ipv6PrefixListPolicyObjectMapOutput) MapIndex(k pulumi.StringInput) Ipv6PrefixListPolicyObjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ipv6PrefixListPolicyObject {
		return vs[0].(map[string]*Ipv6PrefixListPolicyObject)[vs[1].(string)]
	}).(Ipv6PrefixListPolicyObjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6PrefixListPolicyObjectInput)(nil)).Elem(), &Ipv6PrefixListPolicyObject{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6PrefixListPolicyObjectArrayInput)(nil)).Elem(), Ipv6PrefixListPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6PrefixListPolicyObjectMapInput)(nil)).Elem(), Ipv6PrefixListPolicyObjectMap{})
	pulumi.RegisterOutputType(Ipv6PrefixListPolicyObjectOutput{})
	pulumi.RegisterOutputType(Ipv6PrefixListPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(Ipv6PrefixListPolicyObjectMapOutput{})
}
