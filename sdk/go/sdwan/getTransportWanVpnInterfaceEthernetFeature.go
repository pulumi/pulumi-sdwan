// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Transport WAN VPN Interface Ethernet Feature.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupTransportWanVpnInterfaceEthernetFeature(ctx, &sdwan.LookupTransportWanVpnInterfaceEthernetFeatureArgs{
//				Id:                       "f6b2c44c-693c-4763-b010-895aa3d236bd",
//				FeatureProfileId:         "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
//				TransportWanVpnFeatureId: "140331f6-5418-4755-a059-13c77eb96037",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTransportWanVpnInterfaceEthernetFeature(ctx *pulumi.Context, args *LookupTransportWanVpnInterfaceEthernetFeatureArgs, opts ...pulumi.InvokeOption) (*LookupTransportWanVpnInterfaceEthernetFeatureResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTransportWanVpnInterfaceEthernetFeatureResult
	err := ctx.Invoke("sdwan:index/getTransportWanVpnInterfaceEthernetFeature:getTransportWanVpnInterfaceEthernetFeature", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTransportWanVpnInterfaceEthernetFeature.
type LookupTransportWanVpnInterfaceEthernetFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId string `pulumi:"transportWanVpnFeatureId"`
}

// A collection of values returned by getTransportWanVpnInterfaceEthernetFeature.
type LookupTransportWanVpnInterfaceEthernetFeatureResult struct {
	// Timeout value for dynamically learned ARP entries, \n\n seconds
	ArpTimeout int `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable string `pulumi:"arpTimeoutVariable"`
	// Configure ARP entries
	Arps []GetTransportWanVpnInterfaceEthernetFeatureArp `pulumi:"arps"`
	// Interface auto detect bandwidth
	AutoDetectBandwidth bool `pulumi:"autoDetectBandwidth"`
	// Variable name
	AutoDetectBandwidthVariable string `pulumi:"autoDetectBandwidthVariable"`
	// Link autonegotiation
	Autonegotiate bool `pulumi:"autonegotiate"`
	// Variable name
	AutonegotiateVariable string `pulumi:"autonegotiateVariable"`
	// Interface downstream bandwidth capacity, in kbps
	BandwidthDownstream int `pulumi:"bandwidthDownstream"`
	// Variable name
	BandwidthDownstreamVariable string `pulumi:"bandwidthDownstreamVariable"`
	// Interface upstream bandwidth capacity, in kbps
	BandwidthUpstream int `pulumi:"bandwidthUpstream"`
	// Variable name
	BandwidthUpstreamVariable string `pulumi:"bandwidthUpstreamVariable"`
	// Block packets originating from IP address that is not from this source
	BlockNonSourceIp bool `pulumi:"blockNonSourceIp"`
	// Variable name
	BlockNonSourceIpVariable string `pulumi:"blockNonSourceIpVariable"`
	// The description of the Feature
	Description string `pulumi:"description"`
	// Duplex mode
	Duplex string `pulumi:"duplex"`
	// Variable name
	DuplexVariable string `pulumi:"duplexVariable"`
	// Enable DHCPv6
	EnableDhcpv6 bool `pulumi:"enableDhcpv6"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// GRE tunnel source IP
	GreTunnelSourceIp string `pulumi:"greTunnelSourceIp"`
	// Variable name
	GreTunnelSourceIpVariable string `pulumi:"greTunnelSourceIpVariable"`
	// ICMP/ICMPv6 Redirect Disable
	IcmpRedirectDisable bool `pulumi:"icmpRedirectDisable"`
	// Variable name
	IcmpRedirectDisableVariable string `pulumi:"icmpRedirectDisableVariable"`
	// The id of the Feature
	Id                   string `pulumi:"id"`
	InterfaceDescription string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable string `pulumi:"interfaceDescriptionVariable"`
	// Interface MTU GigabitEthernet0 \n\n, Other GigabitEthernet \n\n in bytes
	InterfaceMtu int `pulumi:"interfaceMtu"`
	// Variable name
	InterfaceMtuVariable string `pulumi:"interfaceMtuVariable"`
	InterfaceName        string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable string `pulumi:"interfaceNameVariable"`
	// IP Directed-Broadcast
	IpDirectedBroadcast bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable string `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU for GigabitEthernet main \n\n, GigabitEthernet subinterface \n\n, Other Interfaces \n\n in bytes
	IpMtu int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable string `pulumi:"ipMtuVariable"`
	// Iperf server for auto bandwidth detect
	IperfServer string `pulumi:"iperfServer"`
	// Variable name
	IperfServerVariable string `pulumi:"iperfServerVariable"`
	// IP Address
	Ipv4Address string `pulumi:"ipv4Address"`
	// Variable name
	Ipv4AddressVariable string `pulumi:"ipv4AddressVariable"`
	// DHCP Distance
	Ipv4DhcpDistance int `pulumi:"ipv4DhcpDistance"`
	// Variable name
	Ipv4DhcpDistanceVariable string `pulumi:"ipv4DhcpDistanceVariable"`
	// Variable name
	Ipv4DhcpHelperVariable string `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP IPv4 helper addresses (min 1, max 8)
	Ipv4DhcpHelpers []string `pulumi:"ipv4DhcpHelpers"`
	// Secondary IpV4 Addresses
	Ipv4SecondaryAddresses []GetTransportWanVpnInterfaceEthernetFeatureIpv4SecondaryAddress `pulumi:"ipv4SecondaryAddresses"`
	// Subnet Mask
	Ipv4SubnetMask string `pulumi:"ipv4SubnetMask"`
	// Variable name
	Ipv4SubnetMaskVariable string `pulumi:"ipv4SubnetMaskVariable"`
	// IPv6 Address Secondary
	Ipv6Address string `pulumi:"ipv6Address"`
	// Variable name
	Ipv6AddressVariable string `pulumi:"ipv6AddressVariable"`
	// secondary IPv6 addresses
	Ipv6DhcpSecondaryAddresses []GetTransportWanVpnInterfaceEthernetFeatureIpv6DhcpSecondaryAddress `pulumi:"ipv6DhcpSecondaryAddresses"`
	// Static secondary IPv6 addresses
	Ipv6SecondaryAddresses []GetTransportWanVpnInterfaceEthernetFeatureIpv6SecondaryAddress `pulumi:"ipv6SecondaryAddresses"`
	// Interval for interface load calculation
	LoadInterval int `pulumi:"loadInterval"`
	// Variable name
	LoadIntervalVariable string `pulumi:"loadIntervalVariable"`
	// MAC Address
	MacAddress string `pulumi:"macAddress"`
	// Variable name
	MacAddressVariable string `pulumi:"macAddressVariable"`
	// Media type
	MediaType string `pulumi:"mediaType"`
	// Variable name
	MediaTypeVariable string `pulumi:"mediaTypeVariable"`
	// The name of the Feature
	Name string `pulumi:"name"`
	// NAT64 on this interface
	Nat64 bool `pulumi:"nat64"`
	// NAT66 on this interface
	Nat66 bool `pulumi:"nat66"`
	// enable Network Address Translation on this interface
	NatIpv4 bool `pulumi:"natIpv4"`
	// Variable name
	NatIpv4Variable string `pulumi:"natIpv4Variable"`
	// enable Network Address Translation ipv6 on this interface
	NatIpv6 bool `pulumi:"natIpv6"`
	// Variable name
	NatIpv6Variable string `pulumi:"natIpv6Variable"`
	// NAT Inside Source Loopback Interface
	NatLoopback string `pulumi:"natLoopback"`
	// Variable name
	NatLoopbackVariable string `pulumi:"natLoopbackVariable"`
	// NAT Overload
	NatOverload bool `pulumi:"natOverload"`
	// Variable name
	NatOverloadVariable string `pulumi:"natOverloadVariable"`
	// NAT Pool Prefix Length
	NatPrefixLength int `pulumi:"natPrefixLength"`
	// Variable name
	NatPrefixLengthVariable string `pulumi:"natPrefixLengthVariable"`
	// NAT Pool Range End
	NatRangeEnd string `pulumi:"natRangeEnd"`
	// Variable name
	NatRangeEndVariable string `pulumi:"natRangeEndVariable"`
	// NAT Pool Range Start
	NatRangeStart string `pulumi:"natRangeStart"`
	// Variable name
	NatRangeStartVariable string `pulumi:"natRangeStartVariable"`
	// Set NAT TCP session timeout, in minutes
	NatTcpTimeout int `pulumi:"natTcpTimeout"`
	// Variable name
	NatTcpTimeoutVariable string `pulumi:"natTcpTimeoutVariable"`
	// NAT Type
	NatType string `pulumi:"natType"`
	// Variable name
	NatTypeVariable string `pulumi:"natTypeVariable"`
	// Set NAT UDP session timeout, in minutes
	NatUdpTimeout int `pulumi:"natUdpTimeout"`
	// Variable name
	NatUdpTimeoutVariable string `pulumi:"natUdpTimeoutVariable"`
	// static NAT
	NewStaticNats []GetTransportWanVpnInterfaceEthernetFeatureNewStaticNat `pulumi:"newStaticNats"`
	// Per-tunnel Qos
	PerTunnelQos bool `pulumi:"perTunnelQos"`
	// Variable name
	PerTunnelQosVariable string `pulumi:"perTunnelQosVariable"`
	// Adaptive QoS
	QosAdaptive bool `pulumi:"qosAdaptive"`
	// Shaping Rate Downstream
	QosAdaptiveBandwidthDownstream bool `pulumi:"qosAdaptiveBandwidthDownstream"`
	// Shaping Rate Upstream
	QosAdaptiveBandwidthUpstream bool `pulumi:"qosAdaptiveBandwidthUpstream"`
	// Adaptive QoS default downstream bandwidth (kbps)
	QosAdaptiveDefaultDownstream int `pulumi:"qosAdaptiveDefaultDownstream"`
	// Variable name
	QosAdaptiveDefaultDownstreamVariable string `pulumi:"qosAdaptiveDefaultDownstreamVariable"`
	// Adaptive QoS default upstream bandwidth (kbps)
	QosAdaptiveDefaultUpstream int `pulumi:"qosAdaptiveDefaultUpstream"`
	// Variable name
	QosAdaptiveDefaultUpstreamVariable string `pulumi:"qosAdaptiveDefaultUpstreamVariable"`
	// Downstream max bandwidth limit (kbps)
	QosAdaptiveMaxDownstream int `pulumi:"qosAdaptiveMaxDownstream"`
	// Variable name
	QosAdaptiveMaxDownstreamVariable string `pulumi:"qosAdaptiveMaxDownstreamVariable"`
	// Upstream max bandwidth limit (kbps)
	QosAdaptiveMaxUpstream int `pulumi:"qosAdaptiveMaxUpstream"`
	// Variable name
	QosAdaptiveMaxUpstreamVariable string `pulumi:"qosAdaptiveMaxUpstreamVariable"`
	// Downstream min bandwidth limit (kbps)
	QosAdaptiveMinDownstream int `pulumi:"qosAdaptiveMinDownstream"`
	// Variable name
	QosAdaptiveMinDownstreamVariable string `pulumi:"qosAdaptiveMinDownstreamVariable"`
	// Upstream min bandwidth limit (kbps)
	QosAdaptiveMinUpstream int `pulumi:"qosAdaptiveMinUpstream"`
	// Variable name
	QosAdaptiveMinUpstreamVariable string `pulumi:"qosAdaptiveMinUpstreamVariable"`
	// Adapt Period(Minutes)
	QosAdaptivePeriod int `pulumi:"qosAdaptivePeriod"`
	// Variable name
	QosAdaptivePeriodVariable string `pulumi:"qosAdaptivePeriodVariable"`
	// Shaping Rate (Kbps)
	QosShapingRate int `pulumi:"qosShapingRate"`
	// Variable name
	QosShapingRateVariable string `pulumi:"qosShapingRateVariable"`
	// Service Provider Name
	ServiceProvider string `pulumi:"serviceProvider"`
	// Variable name
	ServiceProviderVariable string `pulumi:"serviceProviderVariable"`
	Shutdown                bool   `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable string `pulumi:"shutdownVariable"`
	// Set interface speed
	Speed string `pulumi:"speed"`
	// Variable name
	SpeedVariable string `pulumi:"speedVariable"`
	// static NAT66
	StaticNat66s []GetTransportWanVpnInterfaceEthernetFeatureStaticNat66 `pulumi:"staticNat66s"`
	// TCP MSS on SYN packets, in bytes
	TcpMss int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable string `pulumi:"tcpMssVariable"`
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension string `pulumi:"tlocExtension"`
	// Variable name
	TlocExtensionVariable string `pulumi:"tlocExtensionVariable"`
	// Enable tracker for this interface
	Tracker string `pulumi:"tracker"`
	// Variable name
	TrackerVariable string `pulumi:"trackerVariable"`
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId string `pulumi:"transportWanVpnFeatureId"`
	// Tunnels Bandwidth Percent
	TunnelBandwidthPercent int `pulumi:"tunnelBandwidthPercent"`
	// Variable name
	TunnelBandwidthPercentVariable string `pulumi:"tunnelBandwidthPercentVariable"`
	// Tunnel Interface on/off
	TunnelInterface bool `pulumi:"tunnelInterface"`
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set
	TunnelInterfaceAllowAll bool `pulumi:"tunnelInterfaceAllowAll"`
	// Variable name
	TunnelInterfaceAllowAllVariable string `pulumi:"tunnelInterfaceAllowAllVariable"`
	// Allow/Deny BFD
	TunnelInterfaceAllowBfd bool `pulumi:"tunnelInterfaceAllowBfd"`
	// Variable name
	TunnelInterfaceAllowBfdVariable string `pulumi:"tunnelInterfaceAllowBfdVariable"`
	// Allow/deny BGP
	TunnelInterfaceAllowBgp bool `pulumi:"tunnelInterfaceAllowBgp"`
	// Variable name
	TunnelInterfaceAllowBgpVariable string `pulumi:"tunnelInterfaceAllowBgpVariable"`
	// Allow/Deny DHCP
	TunnelInterfaceAllowDhcp bool `pulumi:"tunnelInterfaceAllowDhcp"`
	// Variable name
	TunnelInterfaceAllowDhcpVariable string `pulumi:"tunnelInterfaceAllowDhcpVariable"`
	// Allow/Deny DNS
	TunnelInterfaceAllowDns bool `pulumi:"tunnelInterfaceAllowDns"`
	// Variable name
	TunnelInterfaceAllowDnsVariable string `pulumi:"tunnelInterfaceAllowDnsVariable"`
	// Allow/Deny HTTPS
	TunnelInterfaceAllowHttps bool `pulumi:"tunnelInterfaceAllowHttps"`
	// Variable name
	TunnelInterfaceAllowHttpsVariable string `pulumi:"tunnelInterfaceAllowHttpsVariable"`
	// Allow/Deny ICMP
	TunnelInterfaceAllowIcmp bool `pulumi:"tunnelInterfaceAllowIcmp"`
	// Variable name
	TunnelInterfaceAllowIcmpVariable string `pulumi:"tunnelInterfaceAllowIcmpVariable"`
	// Allow/Deny NETCONF
	TunnelInterfaceAllowNetconf bool `pulumi:"tunnelInterfaceAllowNetconf"`
	// Variable name
	TunnelInterfaceAllowNetconfVariable string `pulumi:"tunnelInterfaceAllowNetconfVariable"`
	// Allow/Deny NTP
	TunnelInterfaceAllowNtp bool `pulumi:"tunnelInterfaceAllowNtp"`
	// Variable name
	TunnelInterfaceAllowNtpVariable string `pulumi:"tunnelInterfaceAllowNtpVariable"`
	// Allow/Deny OSPF
	TunnelInterfaceAllowOspf bool `pulumi:"tunnelInterfaceAllowOspf"`
	// Variable name
	TunnelInterfaceAllowOspfVariable string `pulumi:"tunnelInterfaceAllowOspfVariable"`
	// Allow/Deny SNMP
	TunnelInterfaceAllowSnmp bool `pulumi:"tunnelInterfaceAllowSnmp"`
	// Variable name
	TunnelInterfaceAllowSnmpVariable string `pulumi:"tunnelInterfaceAllowSnmpVariable"`
	// Allow/Deny SSH
	TunnelInterfaceAllowSsh bool `pulumi:"tunnelInterfaceAllowSsh"`
	// Variable name
	TunnelInterfaceAllowSshVariable string `pulumi:"tunnelInterfaceAllowSshVariable"`
	// Allow/Deny STUN
	TunnelInterfaceAllowStun bool `pulumi:"tunnelInterfaceAllowStun"`
	// Variable name
	TunnelInterfaceAllowStunVariable string `pulumi:"tunnelInterfaceAllowStunVariable"`
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel string `pulumi:"tunnelInterfaceBindLoopbackTunnel"`
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable string `pulumi:"tunnelInterfaceBindLoopbackTunnelVariable"`
	// Set TLOC as border TLOC
	TunnelInterfaceBorder bool `pulumi:"tunnelInterfaceBorder"`
	// Variable name
	TunnelInterfaceBorderVariable string `pulumi:"tunnelInterfaceBorderVariable"`
	// Set carrier for TLOC
	TunnelInterfaceCarrier string `pulumi:"tunnelInterfaceCarrier"`
	// Variable name
	TunnelInterfaceCarrierVariable string `pulumi:"tunnelInterfaceCarrierVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
	TunnelInterfaceClearDontFragment bool `pulumi:"tunnelInterfaceClearDontFragment"`
	// Variable name
	TunnelInterfaceClearDontFragmentVariable string `pulumi:"tunnelInterfaceClearDontFragmentVariable"`
	// Set color for TLOC
	TunnelInterfaceColor string `pulumi:"tunnelInterfaceColor"`
	// Restrict this TLOC behavior
	TunnelInterfaceColorRestrict bool `pulumi:"tunnelInterfaceColorRestrict"`
	// Variable name
	TunnelInterfaceColorRestrictVariable string `pulumi:"tunnelInterfaceColorRestrictVariable"`
	// Variable name
	TunnelInterfaceColorVariable string `pulumi:"tunnelInterfaceColorVariable"`
	// CTS SGT Propagation configuration
	TunnelInterfaceCtsSgtPropagation bool `pulumi:"tunnelInterfaceCtsSgtPropagation"`
	// Variable name
	TunnelInterfaceCtsSgtPropagationVariable string `pulumi:"tunnelInterfaceCtsSgtPropagationVariable"`
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations []GetTransportWanVpnInterfaceEthernetFeatureTunnelInterfaceEncapsulation `pulumi:"tunnelInterfaceEncapsulations"`
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable string `pulumi:"tunnelInterfaceExcludeControllerGroupListVariable"`
	// Exclude the following controller groups defined in this list.
	TunnelInterfaceExcludeControllerGroupLists []int `pulumi:"tunnelInterfaceExcludeControllerGroupLists"`
	// GRE tunnel destination IP
	TunnelInterfaceGreTunnelDestinationIp string `pulumi:"tunnelInterfaceGreTunnelDestinationIp"`
	// Variable name
	TunnelInterfaceGreTunnelDestinationIpVariable string `pulumi:"tunnelInterfaceGreTunnelDestinationIpVariable"`
	// List of groups
	TunnelInterfaceGroups int `pulumi:"tunnelInterfaceGroups"`
	// Variable name
	TunnelInterfaceGroupsVariable string `pulumi:"tunnelInterfaceGroupsVariable"`
	// Set time period of control hello packets \n\n milli seconds
	TunnelInterfaceHelloInterval int `pulumi:"tunnelInterfaceHelloInterval"`
	// Variable name
	TunnelInterfaceHelloIntervalVariable string `pulumi:"tunnelInterfaceHelloIntervalVariable"`
	// Set tolerance of control hello packets \n\n seconds
	TunnelInterfaceHelloTolerance int `pulumi:"tunnelInterfaceHelloTolerance"`
	// Variable name
	TunnelInterfaceHelloToleranceVariable string `pulumi:"tunnelInterfaceHelloToleranceVariable"`
	// Set TLOC as last resort
	TunnelInterfaceLastResortCircuit bool `pulumi:"tunnelInterfaceLastResortCircuit"`
	// Variable name
	TunnelInterfaceLastResortCircuitVariable string `pulumi:"tunnelInterfaceLastResortCircuitVariable"`
	// Set the interface as a low-bandwidth circuit
	TunnelInterfaceLowBandwidthLink bool `pulumi:"tunnelInterfaceLowBandwidthLink"`
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable string `pulumi:"tunnelInterfaceLowBandwidthLinkVariable"`
	// Maximum Control Connections
	TunnelInterfaceMaxControlConnections int `pulumi:"tunnelInterfaceMaxControlConnections"`
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable string `pulumi:"tunnelInterfaceMaxControlConnectionsVariable"`
	// Set time period of nat refresh packets \n\n seconds
	TunnelInterfaceNatRefreshInterval int `pulumi:"tunnelInterfaceNatRefreshInterval"`
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable string `pulumi:"tunnelInterfaceNatRefreshIntervalVariable"`
	// Accept and respond to network-prefix-directed broadcasts
	TunnelInterfaceNetworkBroadcast bool `pulumi:"tunnelInterfaceNetworkBroadcast"`
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable string `pulumi:"tunnelInterfaceNetworkBroadcastVariable"`
	// Disallow port hopping on the tunnel interface
	TunnelInterfacePortHop bool `pulumi:"tunnelInterfacePortHop"`
	// Variable name
	TunnelInterfacePortHopVariable string `pulumi:"tunnelInterfacePortHopVariable"`
	// Tunnel TCP MSS on SYN packets, in bytes
	TunnelInterfaceTunnelTcpMss int `pulumi:"tunnelInterfaceTunnelTcpMss"`
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable string `pulumi:"tunnelInterfaceTunnelTcpMssVariable"`
	// Put this wan interface in STUN mode only
	TunnelInterfaceVbondAsStunServer bool `pulumi:"tunnelInterfaceVbondAsStunServer"`
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable string `pulumi:"tunnelInterfaceVbondAsStunServerVariable"`
	// Set interface preference for control connection to vManage \n\n
	TunnelInterfaceVmanageConnectionPreference int `pulumi:"tunnelInterfaceVmanageConnectionPreference"`
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable string `pulumi:"tunnelInterfaceVmanageConnectionPreferenceVariable"`
	// Set tunnel QoS mode
	TunnelQosMode string `pulumi:"tunnelQosMode"`
	// Variable name
	TunnelQosModeVariable string `pulumi:"tunnelQosModeVariable"`
	// The version of the Feature
	Version int `pulumi:"version"`
	// Extend remote TLOC over a GRE tunnel to a local WAN interface
	Xconnect string `pulumi:"xconnect"`
	// Variable name
	XconnectVariable string `pulumi:"xconnectVariable"`
}

func LookupTransportWanVpnInterfaceEthernetFeatureOutput(ctx *pulumi.Context, args LookupTransportWanVpnInterfaceEthernetFeatureOutputArgs, opts ...pulumi.InvokeOption) LookupTransportWanVpnInterfaceEthernetFeatureResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTransportWanVpnInterfaceEthernetFeatureResult, error) {
			args := v.(LookupTransportWanVpnInterfaceEthernetFeatureArgs)
			r, err := LookupTransportWanVpnInterfaceEthernetFeature(ctx, &args, opts...)
			var s LookupTransportWanVpnInterfaceEthernetFeatureResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTransportWanVpnInterfaceEthernetFeatureResultOutput)
}

// A collection of arguments for invoking getTransportWanVpnInterfaceEthernetFeature.
type LookupTransportWanVpnInterfaceEthernetFeatureOutputArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput `pulumi:"featureProfileId"`
	// The id of the Feature
	Id pulumi.StringInput `pulumi:"id"`
	// Transport WAN VPN Feature ID
	TransportWanVpnFeatureId pulumi.StringInput `pulumi:"transportWanVpnFeatureId"`
}

func (LookupTransportWanVpnInterfaceEthernetFeatureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransportWanVpnInterfaceEthernetFeatureArgs)(nil)).Elem()
}

// A collection of values returned by getTransportWanVpnInterfaceEthernetFeature.
type LookupTransportWanVpnInterfaceEthernetFeatureResultOutput struct{ *pulumi.OutputState }

func (LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransportWanVpnInterfaceEthernetFeatureResult)(nil)).Elem()
}

func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) ToLookupTransportWanVpnInterfaceEthernetFeatureResultOutput() LookupTransportWanVpnInterfaceEthernetFeatureResultOutput {
	return o
}

func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) ToLookupTransportWanVpnInterfaceEthernetFeatureResultOutputWithContext(ctx context.Context) LookupTransportWanVpnInterfaceEthernetFeatureResultOutput {
	return o
}

// Timeout value for dynamically learned ARP entries, \n\n seconds
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) ArpTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.ArpTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) ArpTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.ArpTimeoutVariable }).(pulumi.StringOutput)
}

// Configure ARP entries
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Arps() GetTransportWanVpnInterfaceEthernetFeatureArpArrayOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) []GetTransportWanVpnInterfaceEthernetFeatureArp {
		return v.Arps
	}).(GetTransportWanVpnInterfaceEthernetFeatureArpArrayOutput)
}

// Interface auto detect bandwidth
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) AutoDetectBandwidth() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.AutoDetectBandwidth }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) AutoDetectBandwidthVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.AutoDetectBandwidthVariable
	}).(pulumi.StringOutput)
}

// Link autonegotiation
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Autonegotiate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.Autonegotiate }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) AutonegotiateVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.AutonegotiateVariable }).(pulumi.StringOutput)
}

// Interface downstream bandwidth capacity, in kbps
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) BandwidthDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.BandwidthDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) BandwidthDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.BandwidthDownstreamVariable
	}).(pulumi.StringOutput)
}

// Interface upstream bandwidth capacity, in kbps
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) BandwidthUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.BandwidthUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) BandwidthUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.BandwidthUpstreamVariable }).(pulumi.StringOutput)
}

// Block packets originating from IP address that is not from this source
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) BlockNonSourceIp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.BlockNonSourceIp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) BlockNonSourceIpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.BlockNonSourceIpVariable }).(pulumi.StringOutput)
}

// The description of the Feature
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.Description }).(pulumi.StringOutput)
}

// Duplex mode
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Duplex() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.Duplex }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) DuplexVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.DuplexVariable }).(pulumi.StringOutput)
}

// Enable DHCPv6
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) EnableDhcpv6() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.EnableDhcpv6 }).(pulumi.BoolOutput)
}

// Feature Profile ID
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// GRE tunnel source IP
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) GreTunnelSourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.GreTunnelSourceIp }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) GreTunnelSourceIpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.GreTunnelSourceIpVariable }).(pulumi.StringOutput)
}

// ICMP/ICMPv6 Redirect Disable
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) IcmpRedirectDisable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.IcmpRedirectDisable }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) IcmpRedirectDisableVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.IcmpRedirectDisableVariable
	}).(pulumi.StringOutput)
}

// The id of the Feature
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) InterfaceDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.InterfaceDescription }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) InterfaceDescriptionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.InterfaceDescriptionVariable
	}).(pulumi.StringOutput)
}

// Interface MTU GigabitEthernet0 \n\n, Other GigabitEthernet \n\n in bytes
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) InterfaceMtu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.InterfaceMtu }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) InterfaceMtuVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.InterfaceMtuVariable }).(pulumi.StringOutput)
}

func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.InterfaceName }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) InterfaceNameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.InterfaceNameVariable }).(pulumi.StringOutput)
}

// IP Directed-Broadcast
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) IpDirectedBroadcast() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.IpDirectedBroadcast }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) IpDirectedBroadcastVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.IpDirectedBroadcastVariable
	}).(pulumi.StringOutput)
}

// IP MTU for GigabitEthernet main \n\n, GigabitEthernet subinterface \n\n, Other Interfaces \n\n in bytes
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) IpMtu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.IpMtu }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) IpMtuVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.IpMtuVariable }).(pulumi.StringOutput)
}

// Iperf server for auto bandwidth detect
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) IperfServer() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.IperfServer }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) IperfServerVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.IperfServerVariable }).(pulumi.StringOutput)
}

// IP Address
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Ipv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.Ipv4Address }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Ipv4AddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.Ipv4AddressVariable }).(pulumi.StringOutput)
}

// DHCP Distance
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Ipv4DhcpDistance() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.Ipv4DhcpDistance }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Ipv4DhcpDistanceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.Ipv4DhcpDistanceVariable }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Ipv4DhcpHelperVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.Ipv4DhcpHelperVariable }).(pulumi.StringOutput)
}

// List of DHCP IPv4 helper addresses (min 1, max 8)
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Ipv4DhcpHelpers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) []string { return v.Ipv4DhcpHelpers }).(pulumi.StringArrayOutput)
}

// Secondary IpV4 Addresses
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Ipv4SecondaryAddresses() GetTransportWanVpnInterfaceEthernetFeatureIpv4SecondaryAddressArrayOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) []GetTransportWanVpnInterfaceEthernetFeatureIpv4SecondaryAddress {
		return v.Ipv4SecondaryAddresses
	}).(GetTransportWanVpnInterfaceEthernetFeatureIpv4SecondaryAddressArrayOutput)
}

// Subnet Mask
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Ipv4SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.Ipv4SubnetMask }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Ipv4SubnetMaskVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.Ipv4SubnetMaskVariable }).(pulumi.StringOutput)
}

// IPv6 Address Secondary
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Ipv6AddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.Ipv6AddressVariable }).(pulumi.StringOutput)
}

// secondary IPv6 addresses
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Ipv6DhcpSecondaryAddresses() GetTransportWanVpnInterfaceEthernetFeatureIpv6DhcpSecondaryAddressArrayOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) []GetTransportWanVpnInterfaceEthernetFeatureIpv6DhcpSecondaryAddress {
		return v.Ipv6DhcpSecondaryAddresses
	}).(GetTransportWanVpnInterfaceEthernetFeatureIpv6DhcpSecondaryAddressArrayOutput)
}

// Static secondary IPv6 addresses
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Ipv6SecondaryAddresses() GetTransportWanVpnInterfaceEthernetFeatureIpv6SecondaryAddressArrayOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) []GetTransportWanVpnInterfaceEthernetFeatureIpv6SecondaryAddress {
		return v.Ipv6SecondaryAddresses
	}).(GetTransportWanVpnInterfaceEthernetFeatureIpv6SecondaryAddressArrayOutput)
}

// Interval for interface load calculation
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) LoadInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.LoadInterval }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) LoadIntervalVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.LoadIntervalVariable }).(pulumi.StringOutput)
}

// MAC Address
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.MacAddress }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) MacAddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.MacAddressVariable }).(pulumi.StringOutput)
}

// Media type
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) MediaType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.MediaType }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) MediaTypeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.MediaTypeVariable }).(pulumi.StringOutput)
}

// The name of the Feature
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.Name }).(pulumi.StringOutput)
}

// NAT64 on this interface
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Nat64() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.Nat64 }).(pulumi.BoolOutput)
}

// NAT66 on this interface
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Nat66() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.Nat66 }).(pulumi.BoolOutput)
}

// enable Network Address Translation on this interface
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatIpv4() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.NatIpv4 }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatIpv4Variable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.NatIpv4Variable }).(pulumi.StringOutput)
}

// enable Network Address Translation ipv6 on this interface
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatIpv6() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.NatIpv6 }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatIpv6Variable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.NatIpv6Variable }).(pulumi.StringOutput)
}

// NAT Inside Source Loopback Interface
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatLoopback() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.NatLoopback }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatLoopbackVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.NatLoopbackVariable }).(pulumi.StringOutput)
}

// NAT Overload
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatOverload() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.NatOverload }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatOverloadVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.NatOverloadVariable }).(pulumi.StringOutput)
}

// NAT Pool Prefix Length
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatPrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.NatPrefixLength }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatPrefixLengthVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.NatPrefixLengthVariable }).(pulumi.StringOutput)
}

// NAT Pool Range End
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatRangeEnd() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.NatRangeEnd }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatRangeEndVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.NatRangeEndVariable }).(pulumi.StringOutput)
}

// NAT Pool Range Start
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatRangeStart() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.NatRangeStart }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatRangeStartVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.NatRangeStartVariable }).(pulumi.StringOutput)
}

// Set NAT TCP session timeout, in minutes
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatTcpTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.NatTcpTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatTcpTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.NatTcpTimeoutVariable }).(pulumi.StringOutput)
}

// NAT Type
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.NatType }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatTypeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.NatTypeVariable }).(pulumi.StringOutput)
}

// Set NAT UDP session timeout, in minutes
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatUdpTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.NatUdpTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NatUdpTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.NatUdpTimeoutVariable }).(pulumi.StringOutput)
}

// static NAT
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) NewStaticNats() GetTransportWanVpnInterfaceEthernetFeatureNewStaticNatArrayOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) []GetTransportWanVpnInterfaceEthernetFeatureNewStaticNat {
		return v.NewStaticNats
	}).(GetTransportWanVpnInterfaceEthernetFeatureNewStaticNatArrayOutput)
}

// Per-tunnel Qos
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) PerTunnelQos() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.PerTunnelQos }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) PerTunnelQosVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.PerTunnelQosVariable }).(pulumi.StringOutput)
}

// Adaptive QoS
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosAdaptive() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.QosAdaptive }).(pulumi.BoolOutput)
}

// Shaping Rate Downstream
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosAdaptiveBandwidthDownstream() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool {
		return v.QosAdaptiveBandwidthDownstream
	}).(pulumi.BoolOutput)
}

// Shaping Rate Upstream
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosAdaptiveBandwidthUpstream() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool {
		return v.QosAdaptiveBandwidthUpstream
	}).(pulumi.BoolOutput)
}

// Adaptive QoS default downstream bandwidth (kbps)
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosAdaptiveDefaultDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.QosAdaptiveDefaultDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosAdaptiveDefaultDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.QosAdaptiveDefaultDownstreamVariable
	}).(pulumi.StringOutput)
}

// Adaptive QoS default upstream bandwidth (kbps)
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosAdaptiveDefaultUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.QosAdaptiveDefaultUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosAdaptiveDefaultUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.QosAdaptiveDefaultUpstreamVariable
	}).(pulumi.StringOutput)
}

// Downstream max bandwidth limit (kbps)
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosAdaptiveMaxDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.QosAdaptiveMaxDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosAdaptiveMaxDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.QosAdaptiveMaxDownstreamVariable
	}).(pulumi.StringOutput)
}

// Upstream max bandwidth limit (kbps)
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosAdaptiveMaxUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.QosAdaptiveMaxUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosAdaptiveMaxUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.QosAdaptiveMaxUpstreamVariable
	}).(pulumi.StringOutput)
}

// Downstream min bandwidth limit (kbps)
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosAdaptiveMinDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.QosAdaptiveMinDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosAdaptiveMinDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.QosAdaptiveMinDownstreamVariable
	}).(pulumi.StringOutput)
}

// Upstream min bandwidth limit (kbps)
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosAdaptiveMinUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.QosAdaptiveMinUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosAdaptiveMinUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.QosAdaptiveMinUpstreamVariable
	}).(pulumi.StringOutput)
}

// Adapt Period(Minutes)
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosAdaptivePeriod() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.QosAdaptivePeriod }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosAdaptivePeriodVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.QosAdaptivePeriodVariable }).(pulumi.StringOutput)
}

// Shaping Rate (Kbps)
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosShapingRate() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.QosShapingRate }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) QosShapingRateVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.QosShapingRateVariable }).(pulumi.StringOutput)
}

// Service Provider Name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) ServiceProvider() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.ServiceProvider }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) ServiceProviderVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.ServiceProviderVariable }).(pulumi.StringOutput)
}

func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Shutdown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.Shutdown }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) ShutdownVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.ShutdownVariable }).(pulumi.StringOutput)
}

// Set interface speed
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Speed() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.Speed }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) SpeedVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.SpeedVariable }).(pulumi.StringOutput)
}

// static NAT66
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) StaticNat66s() GetTransportWanVpnInterfaceEthernetFeatureStaticNat66ArrayOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) []GetTransportWanVpnInterfaceEthernetFeatureStaticNat66 {
		return v.StaticNat66s
	}).(GetTransportWanVpnInterfaceEthernetFeatureStaticNat66ArrayOutput)
}

// TCP MSS on SYN packets, in bytes
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TcpMss() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.TcpMss }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TcpMssVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.TcpMssVariable }).(pulumi.StringOutput)
}

// Extends a local TLOC to a remote node only for vpn 0
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TlocExtension() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.TlocExtension }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TlocExtensionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.TlocExtensionVariable }).(pulumi.StringOutput)
}

// Enable tracker for this interface
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Tracker() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.Tracker }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TrackerVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.TrackerVariable }).(pulumi.StringOutput)
}

// Transport WAN VPN Feature ID
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TransportWanVpnFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.TransportWanVpnFeatureId }).(pulumi.StringOutput)
}

// Tunnels Bandwidth Percent
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelBandwidthPercent() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.TunnelBandwidthPercent }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelBandwidthPercentVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelBandwidthPercentVariable
	}).(pulumi.StringOutput)
}

// Tunnel Interface on/off
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterface() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.TunnelInterface }).(pulumi.BoolOutput)
}

// Allow all traffic. Overrides all other allow-service options if allow-service all is set
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowAll() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.TunnelInterfaceAllowAll }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowAllVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceAllowAllVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny BFD
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowBfd() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.TunnelInterfaceAllowBfd }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowBfdVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceAllowBfdVariable
	}).(pulumi.StringOutput)
}

// Allow/deny BGP
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowBgp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.TunnelInterfaceAllowBgp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowBgpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceAllowBgpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny DHCP
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowDhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.TunnelInterfaceAllowDhcp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowDhcpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceAllowDhcpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny DNS
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowDns() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.TunnelInterfaceAllowDns }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowDnsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceAllowDnsVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny HTTPS
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowHttps() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.TunnelInterfaceAllowHttps }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowHttpsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceAllowHttpsVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny ICMP
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowIcmp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.TunnelInterfaceAllowIcmp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowIcmpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceAllowIcmpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny NETCONF
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowNetconf() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.TunnelInterfaceAllowNetconf }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowNetconfVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceAllowNetconfVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny NTP
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowNtp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.TunnelInterfaceAllowNtp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowNtpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceAllowNtpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny OSPF
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowOspf() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.TunnelInterfaceAllowOspf }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowOspfVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceAllowOspfVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny SNMP
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowSnmp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.TunnelInterfaceAllowSnmp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowSnmpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceAllowSnmpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny SSH
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowSsh() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.TunnelInterfaceAllowSsh }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowSshVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceAllowSshVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny STUN
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowStun() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.TunnelInterfaceAllowStun }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceAllowStunVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceAllowStunVariable
	}).(pulumi.StringOutput)
}

// Bind loopback tunnel interface to a physical interface
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceBindLoopbackTunnel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceBindLoopbackTunnel
	}).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceBindLoopbackTunnelVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceBindLoopbackTunnelVariable
	}).(pulumi.StringOutput)
}

// Set TLOC as border TLOC
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceBorder() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.TunnelInterfaceBorder }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceBorderVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceBorderVariable
	}).(pulumi.StringOutput)
}

// Set carrier for TLOC
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceCarrier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.TunnelInterfaceCarrier }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceCarrierVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceCarrierVariable
	}).(pulumi.StringOutput)
}

// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceClearDontFragment() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool {
		return v.TunnelInterfaceClearDontFragment
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceClearDontFragmentVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceClearDontFragmentVariable
	}).(pulumi.StringOutput)
}

// Set color for TLOC
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceColor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.TunnelInterfaceColor }).(pulumi.StringOutput)
}

// Restrict this TLOC behavior
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceColorRestrict() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool {
		return v.TunnelInterfaceColorRestrict
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceColorRestrictVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceColorRestrictVariable
	}).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceColorVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceColorVariable
	}).(pulumi.StringOutput)
}

// CTS SGT Propagation configuration
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceCtsSgtPropagation() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool {
		return v.TunnelInterfaceCtsSgtPropagation
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceCtsSgtPropagationVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceCtsSgtPropagationVariable
	}).(pulumi.StringOutput)
}

// Encapsulation for TLOC
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceEncapsulations() GetTransportWanVpnInterfaceEthernetFeatureTunnelInterfaceEncapsulationArrayOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) []GetTransportWanVpnInterfaceEthernetFeatureTunnelInterfaceEncapsulation {
		return v.TunnelInterfaceEncapsulations
	}).(GetTransportWanVpnInterfaceEthernetFeatureTunnelInterfaceEncapsulationArrayOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceExcludeControllerGroupListVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceExcludeControllerGroupListVariable
	}).(pulumi.StringOutput)
}

// Exclude the following controller groups defined in this list.
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceExcludeControllerGroupLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) []int {
		return v.TunnelInterfaceExcludeControllerGroupLists
	}).(pulumi.IntArrayOutput)
}

// GRE tunnel destination IP
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceGreTunnelDestinationIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceGreTunnelDestinationIp
	}).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceGreTunnelDestinationIpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceGreTunnelDestinationIpVariable
	}).(pulumi.StringOutput)
}

// List of groups
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceGroups() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.TunnelInterfaceGroups }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceGroupsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceGroupsVariable
	}).(pulumi.StringOutput)
}

// Set time period of control hello packets \n\n milli seconds
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceHelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.TunnelInterfaceHelloInterval }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceHelloIntervalVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceHelloIntervalVariable
	}).(pulumi.StringOutput)
}

// Set tolerance of control hello packets \n\n seconds
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceHelloTolerance() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int {
		return v.TunnelInterfaceHelloTolerance
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceHelloToleranceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceHelloToleranceVariable
	}).(pulumi.StringOutput)
}

// Set TLOC as last resort
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceLastResortCircuit() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool {
		return v.TunnelInterfaceLastResortCircuit
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceLastResortCircuitVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceLastResortCircuitVariable
	}).(pulumi.StringOutput)
}

// Set the interface as a low-bandwidth circuit
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceLowBandwidthLink() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool {
		return v.TunnelInterfaceLowBandwidthLink
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceLowBandwidthLinkVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceLowBandwidthLinkVariable
	}).(pulumi.StringOutput)
}

// Maximum Control Connections
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceMaxControlConnections() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int {
		return v.TunnelInterfaceMaxControlConnections
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceMaxControlConnectionsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceMaxControlConnectionsVariable
	}).(pulumi.StringOutput)
}

// Set time period of nat refresh packets \n\n seconds
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceNatRefreshInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int {
		return v.TunnelInterfaceNatRefreshInterval
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceNatRefreshIntervalVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceNatRefreshIntervalVariable
	}).(pulumi.StringOutput)
}

// Accept and respond to network-prefix-directed broadcasts
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceNetworkBroadcast() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool {
		return v.TunnelInterfaceNetworkBroadcast
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceNetworkBroadcastVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceNetworkBroadcastVariable
	}).(pulumi.StringOutput)
}

// Disallow port hopping on the tunnel interface
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfacePortHop() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool { return v.TunnelInterfacePortHop }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfacePortHopVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfacePortHopVariable
	}).(pulumi.StringOutput)
}

// Tunnel TCP MSS on SYN packets, in bytes
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceTunnelTcpMss() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.TunnelInterfaceTunnelTcpMss }).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceTunnelTcpMssVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceTunnelTcpMssVariable
	}).(pulumi.StringOutput)
}

// Put this wan interface in STUN mode only
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceVbondAsStunServer() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) bool {
		return v.TunnelInterfaceVbondAsStunServer
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceVbondAsStunServerVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceVbondAsStunServerVariable
	}).(pulumi.StringOutput)
}

// Set interface preference for control connection to vManage \n\n
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceVmanageConnectionPreference() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int {
		return v.TunnelInterfaceVmanageConnectionPreference
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelInterfaceVmanageConnectionPreferenceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string {
		return v.TunnelInterfaceVmanageConnectionPreferenceVariable
	}).(pulumi.StringOutput)
}

// Set tunnel QoS mode
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelQosMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.TunnelQosMode }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) TunnelQosModeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.TunnelQosModeVariable }).(pulumi.StringOutput)
}

// The version of the Feature
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) int { return v.Version }).(pulumi.IntOutput)
}

// Extend remote TLOC over a GRE tunnel to a local WAN interface
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) Xconnect() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.Xconnect }).(pulumi.StringOutput)
}

// Variable name
func (o LookupTransportWanVpnInterfaceEthernetFeatureResultOutput) XconnectVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransportWanVpnInterfaceEthernetFeatureResult) string { return v.XconnectVariable }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTransportWanVpnInterfaceEthernetFeatureResultOutput{})
}
