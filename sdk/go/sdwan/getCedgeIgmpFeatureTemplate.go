// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the cEdge IGMP feature template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupCedgeIgmpFeatureTemplate(ctx, &sdwan.LookupCedgeIgmpFeatureTemplateArgs{
//				Id: pulumi.StringRef("f6b2c44c-693c-4763-b010-895aa3d236bd"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCedgeIgmpFeatureTemplate(ctx *pulumi.Context, args *LookupCedgeIgmpFeatureTemplateArgs, opts ...pulumi.InvokeOption) (*LookupCedgeIgmpFeatureTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCedgeIgmpFeatureTemplateResult
	err := ctx.Invoke("sdwan:index/getCedgeIgmpFeatureTemplate:getCedgeIgmpFeatureTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCedgeIgmpFeatureTemplate.
type LookupCedgeIgmpFeatureTemplateArgs struct {
	// The id of the feature template
	Id *string `pulumi:"id"`
	// The name of the feature template
	Name *string `pulumi:"name"`
}

// A collection of values returned by getCedgeIgmpFeatureTemplate.
type LookupCedgeIgmpFeatureTemplateResult struct {
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	DeviceTypes []string `pulumi:"deviceTypes"`
	// The id of the feature template
	Id string `pulumi:"id"`
	// Set IGMP interface parameters
	Interfaces []GetCedgeIgmpFeatureTemplateInterface `pulumi:"interfaces"`
	// The name of the feature template
	Name string `pulumi:"name"`
	// The template type
	TemplateType string `pulumi:"templateType"`
	// The version of the feature template
	Version int `pulumi:"version"`
}

func LookupCedgeIgmpFeatureTemplateOutput(ctx *pulumi.Context, args LookupCedgeIgmpFeatureTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupCedgeIgmpFeatureTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCedgeIgmpFeatureTemplateResultOutput, error) {
			args := v.(LookupCedgeIgmpFeatureTemplateArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupCedgeIgmpFeatureTemplateResult
			secret, err := ctx.InvokePackageRaw("sdwan:index/getCedgeIgmpFeatureTemplate:getCedgeIgmpFeatureTemplate", args, &rv, "", opts...)
			if err != nil {
				return LookupCedgeIgmpFeatureTemplateResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupCedgeIgmpFeatureTemplateResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupCedgeIgmpFeatureTemplateResultOutput), nil
			}
			return output, nil
		}).(LookupCedgeIgmpFeatureTemplateResultOutput)
}

// A collection of arguments for invoking getCedgeIgmpFeatureTemplate.
type LookupCedgeIgmpFeatureTemplateOutputArgs struct {
	// The id of the feature template
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the feature template
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupCedgeIgmpFeatureTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCedgeIgmpFeatureTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getCedgeIgmpFeatureTemplate.
type LookupCedgeIgmpFeatureTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupCedgeIgmpFeatureTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCedgeIgmpFeatureTemplateResult)(nil)).Elem()
}

func (o LookupCedgeIgmpFeatureTemplateResultOutput) ToLookupCedgeIgmpFeatureTemplateResultOutput() LookupCedgeIgmpFeatureTemplateResultOutput {
	return o
}

func (o LookupCedgeIgmpFeatureTemplateResultOutput) ToLookupCedgeIgmpFeatureTemplateResultOutputWithContext(ctx context.Context) LookupCedgeIgmpFeatureTemplateResultOutput {
	return o
}

// The description of the feature template
func (o LookupCedgeIgmpFeatureTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCedgeIgmpFeatureTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
func (o LookupCedgeIgmpFeatureTemplateResultOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCedgeIgmpFeatureTemplateResult) []string { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// The id of the feature template
func (o LookupCedgeIgmpFeatureTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCedgeIgmpFeatureTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// Set IGMP interface parameters
func (o LookupCedgeIgmpFeatureTemplateResultOutput) Interfaces() GetCedgeIgmpFeatureTemplateInterfaceArrayOutput {
	return o.ApplyT(func(v LookupCedgeIgmpFeatureTemplateResult) []GetCedgeIgmpFeatureTemplateInterface {
		return v.Interfaces
	}).(GetCedgeIgmpFeatureTemplateInterfaceArrayOutput)
}

// The name of the feature template
func (o LookupCedgeIgmpFeatureTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCedgeIgmpFeatureTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// The template type
func (o LookupCedgeIgmpFeatureTemplateResultOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCedgeIgmpFeatureTemplateResult) string { return v.TemplateType }).(pulumi.StringOutput)
}

// The version of the feature template
func (o LookupCedgeIgmpFeatureTemplateResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCedgeIgmpFeatureTemplateResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCedgeIgmpFeatureTemplateResultOutput{})
}
