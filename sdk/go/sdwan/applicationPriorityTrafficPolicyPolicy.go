// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Application Priority Traffic Policy Policy.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Import
//
// Expected import identifier with the format: "application_priority_traffic_policy_policy_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/applicationPriorityTrafficPolicyPolicy:ApplicationPriorityTrafficPolicyPolicy example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type ApplicationPriorityTrafficPolicyPolicy struct {
	pulumi.CustomResourceState

	// - Choices: `drop`, `accept`
	DefaultAction pulumi.StringOutput `pulumi:"defaultAction"`
	// The description of the Policy
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// - Choices: `service`, `tunnel`, `all`
	Direction pulumi.StringOutput `pulumi:"direction"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// The name of the Policy
	Name pulumi.StringOutput `pulumi:"name"`
	// Traffic policy sequence list
	Sequences ApplicationPriorityTrafficPolicyPolicySequenceArrayOutput `pulumi:"sequences"`
	// The version of the Policy
	Version pulumi.IntOutput         `pulumi:"version"`
	Vpns    pulumi.StringArrayOutput `pulumi:"vpns"`
}

// NewApplicationPriorityTrafficPolicyPolicy registers a new resource with the given unique name, arguments, and options.
func NewApplicationPriorityTrafficPolicyPolicy(ctx *pulumi.Context,
	name string, args *ApplicationPriorityTrafficPolicyPolicyArgs, opts ...pulumi.ResourceOption) (*ApplicationPriorityTrafficPolicyPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultAction == nil {
		return nil, errors.New("invalid value for required argument 'DefaultAction'")
	}
	if args.Direction == nil {
		return nil, errors.New("invalid value for required argument 'Direction'")
	}
	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	if args.Vpns == nil {
		return nil, errors.New("invalid value for required argument 'Vpns'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplicationPriorityTrafficPolicyPolicy
	err := ctx.RegisterResource("sdwan:index/applicationPriorityTrafficPolicyPolicy:ApplicationPriorityTrafficPolicyPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationPriorityTrafficPolicyPolicy gets an existing ApplicationPriorityTrafficPolicyPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationPriorityTrafficPolicyPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationPriorityTrafficPolicyPolicyState, opts ...pulumi.ResourceOption) (*ApplicationPriorityTrafficPolicyPolicy, error) {
	var resource ApplicationPriorityTrafficPolicyPolicy
	err := ctx.ReadResource("sdwan:index/applicationPriorityTrafficPolicyPolicy:ApplicationPriorityTrafficPolicyPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationPriorityTrafficPolicyPolicy resources.
type applicationPriorityTrafficPolicyPolicyState struct {
	// - Choices: `drop`, `accept`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the Policy
	Description *string `pulumi:"description"`
	// - Choices: `service`, `tunnel`, `all`
	Direction *string `pulumi:"direction"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Policy
	Name *string `pulumi:"name"`
	// Traffic policy sequence list
	Sequences []ApplicationPriorityTrafficPolicyPolicySequence `pulumi:"sequences"`
	// The version of the Policy
	Version *int     `pulumi:"version"`
	Vpns    []string `pulumi:"vpns"`
}

type ApplicationPriorityTrafficPolicyPolicyState struct {
	// - Choices: `drop`, `accept`
	DefaultAction pulumi.StringPtrInput
	// The description of the Policy
	Description pulumi.StringPtrInput
	// - Choices: `service`, `tunnel`, `all`
	Direction pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Policy
	Name pulumi.StringPtrInput
	// Traffic policy sequence list
	Sequences ApplicationPriorityTrafficPolicyPolicySequenceArrayInput
	// The version of the Policy
	Version pulumi.IntPtrInput
	Vpns    pulumi.StringArrayInput
}

func (ApplicationPriorityTrafficPolicyPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationPriorityTrafficPolicyPolicyState)(nil)).Elem()
}

type applicationPriorityTrafficPolicyPolicyArgs struct {
	// - Choices: `drop`, `accept`
	DefaultAction string `pulumi:"defaultAction"`
	// The description of the Policy
	Description *string `pulumi:"description"`
	// - Choices: `service`, `tunnel`, `all`
	Direction string `pulumi:"direction"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The name of the Policy
	Name *string `pulumi:"name"`
	// Traffic policy sequence list
	Sequences []ApplicationPriorityTrafficPolicyPolicySequence `pulumi:"sequences"`
	Vpns      []string                                         `pulumi:"vpns"`
}

// The set of arguments for constructing a ApplicationPriorityTrafficPolicyPolicy resource.
type ApplicationPriorityTrafficPolicyPolicyArgs struct {
	// - Choices: `drop`, `accept`
	DefaultAction pulumi.StringInput
	// The description of the Policy
	Description pulumi.StringPtrInput
	// - Choices: `service`, `tunnel`, `all`
	Direction pulumi.StringInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// The name of the Policy
	Name pulumi.StringPtrInput
	// Traffic policy sequence list
	Sequences ApplicationPriorityTrafficPolicyPolicySequenceArrayInput
	Vpns      pulumi.StringArrayInput
}

func (ApplicationPriorityTrafficPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationPriorityTrafficPolicyPolicyArgs)(nil)).Elem()
}

type ApplicationPriorityTrafficPolicyPolicyInput interface {
	pulumi.Input

	ToApplicationPriorityTrafficPolicyPolicyOutput() ApplicationPriorityTrafficPolicyPolicyOutput
	ToApplicationPriorityTrafficPolicyPolicyOutputWithContext(ctx context.Context) ApplicationPriorityTrafficPolicyPolicyOutput
}

func (*ApplicationPriorityTrafficPolicyPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationPriorityTrafficPolicyPolicy)(nil)).Elem()
}

func (i *ApplicationPriorityTrafficPolicyPolicy) ToApplicationPriorityTrafficPolicyPolicyOutput() ApplicationPriorityTrafficPolicyPolicyOutput {
	return i.ToApplicationPriorityTrafficPolicyPolicyOutputWithContext(context.Background())
}

func (i *ApplicationPriorityTrafficPolicyPolicy) ToApplicationPriorityTrafficPolicyPolicyOutputWithContext(ctx context.Context) ApplicationPriorityTrafficPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPriorityTrafficPolicyPolicyOutput)
}

// ApplicationPriorityTrafficPolicyPolicyArrayInput is an input type that accepts ApplicationPriorityTrafficPolicyPolicyArray and ApplicationPriorityTrafficPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `ApplicationPriorityTrafficPolicyPolicyArrayInput` via:
//
//	ApplicationPriorityTrafficPolicyPolicyArray{ ApplicationPriorityTrafficPolicyPolicyArgs{...} }
type ApplicationPriorityTrafficPolicyPolicyArrayInput interface {
	pulumi.Input

	ToApplicationPriorityTrafficPolicyPolicyArrayOutput() ApplicationPriorityTrafficPolicyPolicyArrayOutput
	ToApplicationPriorityTrafficPolicyPolicyArrayOutputWithContext(context.Context) ApplicationPriorityTrafficPolicyPolicyArrayOutput
}

type ApplicationPriorityTrafficPolicyPolicyArray []ApplicationPriorityTrafficPolicyPolicyInput

func (ApplicationPriorityTrafficPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationPriorityTrafficPolicyPolicy)(nil)).Elem()
}

func (i ApplicationPriorityTrafficPolicyPolicyArray) ToApplicationPriorityTrafficPolicyPolicyArrayOutput() ApplicationPriorityTrafficPolicyPolicyArrayOutput {
	return i.ToApplicationPriorityTrafficPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i ApplicationPriorityTrafficPolicyPolicyArray) ToApplicationPriorityTrafficPolicyPolicyArrayOutputWithContext(ctx context.Context) ApplicationPriorityTrafficPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPriorityTrafficPolicyPolicyArrayOutput)
}

// ApplicationPriorityTrafficPolicyPolicyMapInput is an input type that accepts ApplicationPriorityTrafficPolicyPolicyMap and ApplicationPriorityTrafficPolicyPolicyMapOutput values.
// You can construct a concrete instance of `ApplicationPriorityTrafficPolicyPolicyMapInput` via:
//
//	ApplicationPriorityTrafficPolicyPolicyMap{ "key": ApplicationPriorityTrafficPolicyPolicyArgs{...} }
type ApplicationPriorityTrafficPolicyPolicyMapInput interface {
	pulumi.Input

	ToApplicationPriorityTrafficPolicyPolicyMapOutput() ApplicationPriorityTrafficPolicyPolicyMapOutput
	ToApplicationPriorityTrafficPolicyPolicyMapOutputWithContext(context.Context) ApplicationPriorityTrafficPolicyPolicyMapOutput
}

type ApplicationPriorityTrafficPolicyPolicyMap map[string]ApplicationPriorityTrafficPolicyPolicyInput

func (ApplicationPriorityTrafficPolicyPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationPriorityTrafficPolicyPolicy)(nil)).Elem()
}

func (i ApplicationPriorityTrafficPolicyPolicyMap) ToApplicationPriorityTrafficPolicyPolicyMapOutput() ApplicationPriorityTrafficPolicyPolicyMapOutput {
	return i.ToApplicationPriorityTrafficPolicyPolicyMapOutputWithContext(context.Background())
}

func (i ApplicationPriorityTrafficPolicyPolicyMap) ToApplicationPriorityTrafficPolicyPolicyMapOutputWithContext(ctx context.Context) ApplicationPriorityTrafficPolicyPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPriorityTrafficPolicyPolicyMapOutput)
}

type ApplicationPriorityTrafficPolicyPolicyOutput struct{ *pulumi.OutputState }

func (ApplicationPriorityTrafficPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationPriorityTrafficPolicyPolicy)(nil)).Elem()
}

func (o ApplicationPriorityTrafficPolicyPolicyOutput) ToApplicationPriorityTrafficPolicyPolicyOutput() ApplicationPriorityTrafficPolicyPolicyOutput {
	return o
}

func (o ApplicationPriorityTrafficPolicyPolicyOutput) ToApplicationPriorityTrafficPolicyPolicyOutputWithContext(ctx context.Context) ApplicationPriorityTrafficPolicyPolicyOutput {
	return o
}

// - Choices: `drop`, `accept`
func (o ApplicationPriorityTrafficPolicyPolicyOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationPriorityTrafficPolicyPolicy) pulumi.StringOutput { return v.DefaultAction }).(pulumi.StringOutput)
}

// The description of the Policy
func (o ApplicationPriorityTrafficPolicyPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationPriorityTrafficPolicyPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// - Choices: `service`, `tunnel`, `all`
func (o ApplicationPriorityTrafficPolicyPolicyOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationPriorityTrafficPolicyPolicy) pulumi.StringOutput { return v.Direction }).(pulumi.StringOutput)
}

// Feature Profile ID
func (o ApplicationPriorityTrafficPolicyPolicyOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationPriorityTrafficPolicyPolicy) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The name of the Policy
func (o ApplicationPriorityTrafficPolicyPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationPriorityTrafficPolicyPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Traffic policy sequence list
func (o ApplicationPriorityTrafficPolicyPolicyOutput) Sequences() ApplicationPriorityTrafficPolicyPolicySequenceArrayOutput {
	return o.ApplyT(func(v *ApplicationPriorityTrafficPolicyPolicy) ApplicationPriorityTrafficPolicyPolicySequenceArrayOutput {
		return v.Sequences
	}).(ApplicationPriorityTrafficPolicyPolicySequenceArrayOutput)
}

// The version of the Policy
func (o ApplicationPriorityTrafficPolicyPolicyOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ApplicationPriorityTrafficPolicyPolicy) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

func (o ApplicationPriorityTrafficPolicyPolicyOutput) Vpns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationPriorityTrafficPolicyPolicy) pulumi.StringArrayOutput { return v.Vpns }).(pulumi.StringArrayOutput)
}

type ApplicationPriorityTrafficPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (ApplicationPriorityTrafficPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationPriorityTrafficPolicyPolicy)(nil)).Elem()
}

func (o ApplicationPriorityTrafficPolicyPolicyArrayOutput) ToApplicationPriorityTrafficPolicyPolicyArrayOutput() ApplicationPriorityTrafficPolicyPolicyArrayOutput {
	return o
}

func (o ApplicationPriorityTrafficPolicyPolicyArrayOutput) ToApplicationPriorityTrafficPolicyPolicyArrayOutputWithContext(ctx context.Context) ApplicationPriorityTrafficPolicyPolicyArrayOutput {
	return o
}

func (o ApplicationPriorityTrafficPolicyPolicyArrayOutput) Index(i pulumi.IntInput) ApplicationPriorityTrafficPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplicationPriorityTrafficPolicyPolicy {
		return vs[0].([]*ApplicationPriorityTrafficPolicyPolicy)[vs[1].(int)]
	}).(ApplicationPriorityTrafficPolicyPolicyOutput)
}

type ApplicationPriorityTrafficPolicyPolicyMapOutput struct{ *pulumi.OutputState }

func (ApplicationPriorityTrafficPolicyPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationPriorityTrafficPolicyPolicy)(nil)).Elem()
}

func (o ApplicationPriorityTrafficPolicyPolicyMapOutput) ToApplicationPriorityTrafficPolicyPolicyMapOutput() ApplicationPriorityTrafficPolicyPolicyMapOutput {
	return o
}

func (o ApplicationPriorityTrafficPolicyPolicyMapOutput) ToApplicationPriorityTrafficPolicyPolicyMapOutputWithContext(ctx context.Context) ApplicationPriorityTrafficPolicyPolicyMapOutput {
	return o
}

func (o ApplicationPriorityTrafficPolicyPolicyMapOutput) MapIndex(k pulumi.StringInput) ApplicationPriorityTrafficPolicyPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplicationPriorityTrafficPolicyPolicy {
		return vs[0].(map[string]*ApplicationPriorityTrafficPolicyPolicy)[vs[1].(string)]
	}).(ApplicationPriorityTrafficPolicyPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationPriorityTrafficPolicyPolicyInput)(nil)).Elem(), &ApplicationPriorityTrafficPolicyPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationPriorityTrafficPolicyPolicyArrayInput)(nil)).Elem(), ApplicationPriorityTrafficPolicyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationPriorityTrafficPolicyPolicyMapInput)(nil)).Elem(), ApplicationPriorityTrafficPolicyPolicyMap{})
	pulumi.RegisterOutputType(ApplicationPriorityTrafficPolicyPolicyOutput{})
	pulumi.RegisterOutputType(ApplicationPriorityTrafficPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(ApplicationPriorityTrafficPolicyPolicyMapOutput{})
}
