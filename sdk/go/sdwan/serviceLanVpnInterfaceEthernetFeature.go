// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Service LAN VPN Interface Ethernet Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "service_lan_vpn_interface_ethernet_feature_id,feature_profile_id,service_lan_vpn_feature_id"
//
// ```sh
// $ pulumi import sdwan:index/serviceLanVpnInterfaceEthernetFeature:ServiceLanVpnInterfaceEthernetFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037"
// ```
type ServiceLanVpnInterfaceEthernetFeature struct {
	pulumi.CustomResourceState

	AclIpv4EgressPolicyId  pulumi.StringPtrOutput `pulumi:"aclIpv4EgressPolicyId"`
	AclIpv4IngressPolicyId pulumi.StringPtrOutput `pulumi:"aclIpv4IngressPolicyId"`
	AclIpv6EgressPolicyId  pulumi.StringPtrOutput `pulumi:"aclIpv6EgressPolicyId"`
	AclIpv6IngressPolicyId pulumi.StringPtrOutput `pulumi:"aclIpv6IngressPolicyId"`
	// Shaping Rate (Kbps)
	//   - Range: `8`-`100000000`
	AclShapingRate pulumi.IntPtrOutput `pulumi:"aclShapingRate"`
	// Variable name
	AclShapingRateVariable pulumi.StringPtrOutput `pulumi:"aclShapingRateVariable"`
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds
	//   - Range: `0`-`2147483`
	//   - Default value: `1200`
	ArpTimeout pulumi.IntPtrOutput `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable pulumi.StringPtrOutput `pulumi:"arpTimeoutVariable"`
	// Configure ARP entries
	Arps ServiceLanVpnInterfaceEthernetFeatureArpArrayOutput `pulumi:"arps"`
	// Link autonegotiation
	Autonegotiate pulumi.BoolPtrOutput `pulumi:"autonegotiate"`
	// Variable name
	AutonegotiateVariable pulumi.StringPtrOutput `pulumi:"autonegotiateVariable"`
	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Duplex mode
	//   - Choices: `full`, `half`, `auto`
	Duplex pulumi.StringPtrOutput `pulumi:"duplex"`
	// Variable name
	DuplexVariable pulumi.StringPtrOutput `pulumi:"duplexVariable"`
	// Enable DHCPv6, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
	EnableDhcpv6 pulumi.BoolPtrOutput `pulumi:"enableDhcpv6"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// ICMP/ICMPv6 Redirect Disable
	//   - Default value: `true`
	IcmpRedirectDisable pulumi.BoolPtrOutput `pulumi:"icmpRedirectDisable"`
	// Variable name
	IcmpRedirectDisableVariable pulumi.StringPtrOutput `pulumi:"icmpRedirectDisableVariable"`
	InterfaceDescription        pulumi.StringPtrOutput `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrOutput `pulumi:"interfaceDescriptionVariable"`
	// Interface MTU
	//   - Range: `1500`-`9216`
	//   - Default value: `1500`
	InterfaceMtu pulumi.IntPtrOutput `pulumi:"interfaceMtu"`
	// Variable name
	InterfaceMtuVariable pulumi.StringPtrOutput `pulumi:"interfaceMtuVariable"`
	InterfaceName        pulumi.StringPtrOutput `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable pulumi.StringPtrOutput `pulumi:"interfaceNameVariable"`
	// IP Directed-Broadcast
	//   - Default value: `false`
	IpDirectedBroadcast pulumi.BoolPtrOutput `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable pulumi.StringPtrOutput `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces <576..2000> in bytes
	//   - Range: `576`-`9216`
	//   - Default value: `1500`
	IpMtu pulumi.IntPtrOutput `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable pulumi.StringPtrOutput `pulumi:"ipMtuVariable"`
	// IP Address, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4Address pulumi.StringPtrOutput `pulumi:"ipv4Address"`
	// Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4AddressVariable pulumi.StringPtrOutput `pulumi:"ipv4AddressVariable"`
	// IPv4 Configuration Type
	//   - Choices: `dynamic`, `static`
	//   - Default value: `dynamic`
	Ipv4ConfigurationType pulumi.StringPtrOutput `pulumi:"ipv4ConfigurationType"`
	// DHCP Distance, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic`
	//   - Range: `1`-`65536`
	//   - Default value: `1`
	Ipv4DhcpDistance pulumi.IntPtrOutput `pulumi:"ipv4DhcpDistance"`
	// Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic`
	Ipv4DhcpDistanceVariable pulumi.StringPtrOutput `pulumi:"ipv4DhcpDistanceVariable"`
	// Variable name
	Ipv4DhcpHelperVariable pulumi.StringPtrOutput `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP IPv4 helper addresses (min 1, max 8)
	Ipv4DhcpHelpers pulumi.StringArrayOutput `pulumi:"ipv4DhcpHelpers"`
	// enable Network Address Translation on this interface
	//   - Default value: `false`
	Ipv4Nat pulumi.BoolPtrOutput `pulumi:"ipv4Nat"`
	// NAT Inside Source Loopback Interface
	Ipv4NatLoopback pulumi.StringPtrOutput `pulumi:"ipv4NatLoopback"`
	// Variable name
	Ipv4NatLoopbackVariable pulumi.StringPtrOutput `pulumi:"ipv4NatLoopbackVariable"`
	// NAT Overload
	//   - Default value: `true`
	Ipv4NatOverload pulumi.BoolPtrOutput `pulumi:"ipv4NatOverload"`
	// Variable name
	Ipv4NatOverloadVariable pulumi.StringPtrOutput `pulumi:"ipv4NatOverloadVariable"`
	// NAT Pool Prefix Length
	//   - Range: `1`-`32`
	Ipv4NatPrefixLength pulumi.IntPtrOutput `pulumi:"ipv4NatPrefixLength"`
	// Variable name
	Ipv4NatPrefixLengthVariable pulumi.StringPtrOutput `pulumi:"ipv4NatPrefixLengthVariable"`
	// NAT Pool Range End
	Ipv4NatRangeEnd pulumi.StringPtrOutput `pulumi:"ipv4NatRangeEnd"`
	// Variable name
	Ipv4NatRangeEndVariable pulumi.StringPtrOutput `pulumi:"ipv4NatRangeEndVariable"`
	// NAT Pool Range Start
	Ipv4NatRangeStart pulumi.StringPtrOutput `pulumi:"ipv4NatRangeStart"`
	// Variable name
	Ipv4NatRangeStartVariable pulumi.StringPtrOutput `pulumi:"ipv4NatRangeStartVariable"`
	// Set NAT TCP session timeout, in minutes
	//   - Range: `1`-`8947`
	//   - Default value: `60`
	Ipv4NatTcpTimeout pulumi.IntPtrOutput `pulumi:"ipv4NatTcpTimeout"`
	// Variable name
	Ipv4NatTcpTimeoutVariable pulumi.StringPtrOutput `pulumi:"ipv4NatTcpTimeoutVariable"`
	// Set NAT UDP session timeout, in minutes
	//   - Range: `1`-`8947`
	//   - Default value: `1`
	Ipv4NatUdpTimeout pulumi.IntPtrOutput `pulumi:"ipv4NatUdpTimeout"`
	// Variable name
	Ipv4NatUdpTimeoutVariable pulumi.StringPtrOutput `pulumi:"ipv4NatUdpTimeoutVariable"`
	// Secondary IpV4 Addresses, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4SecondaryAddresses ServiceLanVpnInterfaceEthernetFeatureIpv4SecondaryAddressArrayOutput `pulumi:"ipv4SecondaryAddresses"`
	// Subnet Mask, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	//   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrOutput `pulumi:"ipv4SubnetMask"`
	// Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4SubnetMaskVariable pulumi.StringPtrOutput `pulumi:"ipv4SubnetMaskVariable"`
	// Enable VRRP
	Ipv4Vrrps ServiceLanVpnInterfaceEthernetFeatureIpv4VrrpArrayOutput `pulumi:"ipv4Vrrps"`
	// IPv6 Address Secondary, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6Address pulumi.StringPtrOutput `pulumi:"ipv6Address"`
	// Variable name, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6AddressVariable pulumi.StringPtrOutput `pulumi:"ipv6AddressVariable"`
	// IPv6 Configuration Type
	//   - Choices: `dynamic`, `static`, `none`
	//   - Default value: `none`
	Ipv6ConfigurationType pulumi.StringPtrOutput `pulumi:"ipv6ConfigurationType"`
	// DHCPv6 Helper, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6DhcpHelpers ServiceLanVpnInterfaceEthernetFeatureIpv6DhcpHelperArrayOutput `pulumi:"ipv6DhcpHelpers"`
	// secondary IPv6 addresses, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
	Ipv6DhcpSecondaryAddresses ServiceLanVpnInterfaceEthernetFeatureIpv6DhcpSecondaryAddressArrayOutput `pulumi:"ipv6DhcpSecondaryAddresses"`
	// enable Network Address Translation ipv6 on this interface
	//   - Default value: `false`
	Ipv6Nat pulumi.BoolPtrOutput `pulumi:"ipv6Nat"`
	// Static secondary IPv6 addresses, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6SecondaryAddresses ServiceLanVpnInterfaceEthernetFeatureIpv6SecondaryAddressArrayOutput `pulumi:"ipv6SecondaryAddresses"`
	// Enable VRRP Ipv6
	Ipv6Vrrps ServiceLanVpnInterfaceEthernetFeatureIpv6VrrpArrayOutput `pulumi:"ipv6Vrrps"`
	// Interval for interface load calculation
	//   - Range: `30`-`600`
	//   - Default value: `30`
	LoadInterval pulumi.IntPtrOutput `pulumi:"loadInterval"`
	// Variable name
	LoadIntervalVariable pulumi.StringPtrOutput `pulumi:"loadIntervalVariable"`
	// MAC Address
	MacAddress pulumi.StringPtrOutput `pulumi:"macAddress"`
	// Variable name
	MacAddressVariable pulumi.StringPtrOutput `pulumi:"macAddressVariable"`
	// Media type
	//   - Choices: `auto-select`, `rj45`, `sfp`
	MediaType pulumi.StringPtrOutput `pulumi:"mediaType"`
	// Variable name
	MediaTypeVariable pulumi.StringPtrOutput `pulumi:"mediaTypeVariable"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// NAT64 on this interface
	//   - Default value: `false`
	Nat64 pulumi.BoolPtrOutput `pulumi:"nat64"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringOutput `pulumi:"serviceLanVpnFeatureId"`
	// - Default value: `true`
	Shutdown pulumi.BoolPtrOutput `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable pulumi.StringPtrOutput `pulumi:"shutdownVariable"`
	// Set interface speed
	//   - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed pulumi.StringPtrOutput `pulumi:"speed"`
	// Variable name
	SpeedVariable pulumi.StringPtrOutput `pulumi:"speedVariable"`
	// static NAT
	StaticNats ServiceLanVpnInterfaceEthernetFeatureStaticNatArrayOutput `pulumi:"staticNats"`
	// TCP MSS on SYN packets, in bytes
	//   - Range: `500`-`1460`
	TcpMss pulumi.IntPtrOutput `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable pulumi.StringPtrOutput `pulumi:"tcpMssVariable"`
	// Enable tracker for this interface
	Tracker pulumi.StringPtrOutput `pulumi:"tracker"`
	// Variable name
	TrackerVariable pulumi.StringPtrOutput `pulumi:"trackerVariable"`
	// Enable/Disable SGT Enforcement on an interface
	TrustsecEnableEnforcedPropogation pulumi.BoolPtrOutput `pulumi:"trustsecEnableEnforcedPropogation"`
	// Indicates that the interface is trustworthy for CTS
	//   - Default value: `false`
	TrustsecEnableSgtPropogation pulumi.BoolPtrOutput `pulumi:"trustsecEnableSgtPropogation"`
	// SGT value between 2 and 65519
	//   - Range: `2`-`65519`
	TrustsecEnforcedSecurityGroupTag pulumi.IntPtrOutput `pulumi:"trustsecEnforcedSecurityGroupTag"`
	// Variable name
	TrustsecEnforcedSecurityGroupTagVariable pulumi.StringPtrOutput `pulumi:"trustsecEnforcedSecurityGroupTagVariable"`
	// Enables the interface for CTS SGT authorization and forwarding
	//   - Default value: `true`
	TrustsecPropogate pulumi.BoolPtrOutput `pulumi:"trustsecPropogate"`
	// SGT value between 2 and 65519
	//   - Range: `2`-`65519`
	TrustsecSecurityGroupTag pulumi.IntPtrOutput `pulumi:"trustsecSecurityGroupTag"`
	// Variable name
	TrustsecSecurityGroupTagVariable pulumi.StringPtrOutput `pulumi:"trustsecSecurityGroupTagVariable"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
	// Extend remote TLOC over a GRE tunnel to a local LAN interface
	Xconnect pulumi.StringPtrOutput `pulumi:"xconnect"`
	// Variable name
	XconnectVariable pulumi.StringPtrOutput `pulumi:"xconnectVariable"`
}

// NewServiceLanVpnInterfaceEthernetFeature registers a new resource with the given unique name, arguments, and options.
func NewServiceLanVpnInterfaceEthernetFeature(ctx *pulumi.Context,
	name string, args *ServiceLanVpnInterfaceEthernetFeatureArgs, opts ...pulumi.ResourceOption) (*ServiceLanVpnInterfaceEthernetFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	if args.ServiceLanVpnFeatureId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceLanVpnFeatureId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceLanVpnInterfaceEthernetFeature
	err := ctx.RegisterResource("sdwan:index/serviceLanVpnInterfaceEthernetFeature:ServiceLanVpnInterfaceEthernetFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceLanVpnInterfaceEthernetFeature gets an existing ServiceLanVpnInterfaceEthernetFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceLanVpnInterfaceEthernetFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceLanVpnInterfaceEthernetFeatureState, opts ...pulumi.ResourceOption) (*ServiceLanVpnInterfaceEthernetFeature, error) {
	var resource ServiceLanVpnInterfaceEthernetFeature
	err := ctx.ReadResource("sdwan:index/serviceLanVpnInterfaceEthernetFeature:ServiceLanVpnInterfaceEthernetFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceLanVpnInterfaceEthernetFeature resources.
type serviceLanVpnInterfaceEthernetFeatureState struct {
	AclIpv4EgressPolicyId  *string `pulumi:"aclIpv4EgressPolicyId"`
	AclIpv4IngressPolicyId *string `pulumi:"aclIpv4IngressPolicyId"`
	AclIpv6EgressPolicyId  *string `pulumi:"aclIpv6EgressPolicyId"`
	AclIpv6IngressPolicyId *string `pulumi:"aclIpv6IngressPolicyId"`
	// Shaping Rate (Kbps)
	//   - Range: `8`-`100000000`
	AclShapingRate *int `pulumi:"aclShapingRate"`
	// Variable name
	AclShapingRateVariable *string `pulumi:"aclShapingRateVariable"`
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds
	//   - Range: `0`-`2147483`
	//   - Default value: `1200`
	ArpTimeout *int `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable *string `pulumi:"arpTimeoutVariable"`
	// Configure ARP entries
	Arps []ServiceLanVpnInterfaceEthernetFeatureArp `pulumi:"arps"`
	// Link autonegotiation
	Autonegotiate *bool `pulumi:"autonegotiate"`
	// Variable name
	AutonegotiateVariable *string `pulumi:"autonegotiateVariable"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Duplex mode
	//   - Choices: `full`, `half`, `auto`
	Duplex *string `pulumi:"duplex"`
	// Variable name
	DuplexVariable *string `pulumi:"duplexVariable"`
	// Enable DHCPv6, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
	EnableDhcpv6 *bool `pulumi:"enableDhcpv6"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// ICMP/ICMPv6 Redirect Disable
	//   - Default value: `true`
	IcmpRedirectDisable *bool `pulumi:"icmpRedirectDisable"`
	// Variable name
	IcmpRedirectDisableVariable *string `pulumi:"icmpRedirectDisableVariable"`
	InterfaceDescription        *string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable *string `pulumi:"interfaceDescriptionVariable"`
	// Interface MTU
	//   - Range: `1500`-`9216`
	//   - Default value: `1500`
	InterfaceMtu *int `pulumi:"interfaceMtu"`
	// Variable name
	InterfaceMtuVariable *string `pulumi:"interfaceMtuVariable"`
	InterfaceName        *string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable *string `pulumi:"interfaceNameVariable"`
	// IP Directed-Broadcast
	//   - Default value: `false`
	IpDirectedBroadcast *bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable *string `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces <576..2000> in bytes
	//   - Range: `576`-`9216`
	//   - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	// IP Address, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4Address *string `pulumi:"ipv4Address"`
	// Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4AddressVariable *string `pulumi:"ipv4AddressVariable"`
	// IPv4 Configuration Type
	//   - Choices: `dynamic`, `static`
	//   - Default value: `dynamic`
	Ipv4ConfigurationType *string `pulumi:"ipv4ConfigurationType"`
	// DHCP Distance, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic`
	//   - Range: `1`-`65536`
	//   - Default value: `1`
	Ipv4DhcpDistance *int `pulumi:"ipv4DhcpDistance"`
	// Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic`
	Ipv4DhcpDistanceVariable *string `pulumi:"ipv4DhcpDistanceVariable"`
	// Variable name
	Ipv4DhcpHelperVariable *string `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP IPv4 helper addresses (min 1, max 8)
	Ipv4DhcpHelpers []string `pulumi:"ipv4DhcpHelpers"`
	// enable Network Address Translation on this interface
	//   - Default value: `false`
	Ipv4Nat *bool `pulumi:"ipv4Nat"`
	// NAT Inside Source Loopback Interface
	Ipv4NatLoopback *string `pulumi:"ipv4NatLoopback"`
	// Variable name
	Ipv4NatLoopbackVariable *string `pulumi:"ipv4NatLoopbackVariable"`
	// NAT Overload
	//   - Default value: `true`
	Ipv4NatOverload *bool `pulumi:"ipv4NatOverload"`
	// Variable name
	Ipv4NatOverloadVariable *string `pulumi:"ipv4NatOverloadVariable"`
	// NAT Pool Prefix Length
	//   - Range: `1`-`32`
	Ipv4NatPrefixLength *int `pulumi:"ipv4NatPrefixLength"`
	// Variable name
	Ipv4NatPrefixLengthVariable *string `pulumi:"ipv4NatPrefixLengthVariable"`
	// NAT Pool Range End
	Ipv4NatRangeEnd *string `pulumi:"ipv4NatRangeEnd"`
	// Variable name
	Ipv4NatRangeEndVariable *string `pulumi:"ipv4NatRangeEndVariable"`
	// NAT Pool Range Start
	Ipv4NatRangeStart *string `pulumi:"ipv4NatRangeStart"`
	// Variable name
	Ipv4NatRangeStartVariable *string `pulumi:"ipv4NatRangeStartVariable"`
	// Set NAT TCP session timeout, in minutes
	//   - Range: `1`-`8947`
	//   - Default value: `60`
	Ipv4NatTcpTimeout *int `pulumi:"ipv4NatTcpTimeout"`
	// Variable name
	Ipv4NatTcpTimeoutVariable *string `pulumi:"ipv4NatTcpTimeoutVariable"`
	// Set NAT UDP session timeout, in minutes
	//   - Range: `1`-`8947`
	//   - Default value: `1`
	Ipv4NatUdpTimeout *int `pulumi:"ipv4NatUdpTimeout"`
	// Variable name
	Ipv4NatUdpTimeoutVariable *string `pulumi:"ipv4NatUdpTimeoutVariable"`
	// Secondary IpV4 Addresses, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4SecondaryAddresses []ServiceLanVpnInterfaceEthernetFeatureIpv4SecondaryAddress `pulumi:"ipv4SecondaryAddresses"`
	// Subnet Mask, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	//   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask *string `pulumi:"ipv4SubnetMask"`
	// Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4SubnetMaskVariable *string `pulumi:"ipv4SubnetMaskVariable"`
	// Enable VRRP
	Ipv4Vrrps []ServiceLanVpnInterfaceEthernetFeatureIpv4Vrrp `pulumi:"ipv4Vrrps"`
	// IPv6 Address Secondary, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6Address *string `pulumi:"ipv6Address"`
	// Variable name, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6AddressVariable *string `pulumi:"ipv6AddressVariable"`
	// IPv6 Configuration Type
	//   - Choices: `dynamic`, `static`, `none`
	//   - Default value: `none`
	Ipv6ConfigurationType *string `pulumi:"ipv6ConfigurationType"`
	// DHCPv6 Helper, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6DhcpHelpers []ServiceLanVpnInterfaceEthernetFeatureIpv6DhcpHelper `pulumi:"ipv6DhcpHelpers"`
	// secondary IPv6 addresses, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
	Ipv6DhcpSecondaryAddresses []ServiceLanVpnInterfaceEthernetFeatureIpv6DhcpSecondaryAddress `pulumi:"ipv6DhcpSecondaryAddresses"`
	// enable Network Address Translation ipv6 on this interface
	//   - Default value: `false`
	Ipv6Nat *bool `pulumi:"ipv6Nat"`
	// Static secondary IPv6 addresses, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6SecondaryAddresses []ServiceLanVpnInterfaceEthernetFeatureIpv6SecondaryAddress `pulumi:"ipv6SecondaryAddresses"`
	// Enable VRRP Ipv6
	Ipv6Vrrps []ServiceLanVpnInterfaceEthernetFeatureIpv6Vrrp `pulumi:"ipv6Vrrps"`
	// Interval for interface load calculation
	//   - Range: `30`-`600`
	//   - Default value: `30`
	LoadInterval *int `pulumi:"loadInterval"`
	// Variable name
	LoadIntervalVariable *string `pulumi:"loadIntervalVariable"`
	// MAC Address
	MacAddress *string `pulumi:"macAddress"`
	// Variable name
	MacAddressVariable *string `pulumi:"macAddressVariable"`
	// Media type
	//   - Choices: `auto-select`, `rj45`, `sfp`
	MediaType *string `pulumi:"mediaType"`
	// Variable name
	MediaTypeVariable *string `pulumi:"mediaTypeVariable"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// NAT64 on this interface
	//   - Default value: `false`
	Nat64 *bool `pulumi:"nat64"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId *string `pulumi:"serviceLanVpnFeatureId"`
	// - Default value: `true`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// Set interface speed
	//   - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed *string `pulumi:"speed"`
	// Variable name
	SpeedVariable *string `pulumi:"speedVariable"`
	// static NAT
	StaticNats []ServiceLanVpnInterfaceEthernetFeatureStaticNat `pulumi:"staticNats"`
	// TCP MSS on SYN packets, in bytes
	//   - Range: `500`-`1460`
	TcpMss *int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable *string `pulumi:"tcpMssVariable"`
	// Enable tracker for this interface
	Tracker *string `pulumi:"tracker"`
	// Variable name
	TrackerVariable *string `pulumi:"trackerVariable"`
	// Enable/Disable SGT Enforcement on an interface
	TrustsecEnableEnforcedPropogation *bool `pulumi:"trustsecEnableEnforcedPropogation"`
	// Indicates that the interface is trustworthy for CTS
	//   - Default value: `false`
	TrustsecEnableSgtPropogation *bool `pulumi:"trustsecEnableSgtPropogation"`
	// SGT value between 2 and 65519
	//   - Range: `2`-`65519`
	TrustsecEnforcedSecurityGroupTag *int `pulumi:"trustsecEnforcedSecurityGroupTag"`
	// Variable name
	TrustsecEnforcedSecurityGroupTagVariable *string `pulumi:"trustsecEnforcedSecurityGroupTagVariable"`
	// Enables the interface for CTS SGT authorization and forwarding
	//   - Default value: `true`
	TrustsecPropogate *bool `pulumi:"trustsecPropogate"`
	// SGT value between 2 and 65519
	//   - Range: `2`-`65519`
	TrustsecSecurityGroupTag *int `pulumi:"trustsecSecurityGroupTag"`
	// Variable name
	TrustsecSecurityGroupTagVariable *string `pulumi:"trustsecSecurityGroupTagVariable"`
	// The version of the Feature
	Version *int `pulumi:"version"`
	// Extend remote TLOC over a GRE tunnel to a local LAN interface
	Xconnect *string `pulumi:"xconnect"`
	// Variable name
	XconnectVariable *string `pulumi:"xconnectVariable"`
}

type ServiceLanVpnInterfaceEthernetFeatureState struct {
	AclIpv4EgressPolicyId  pulumi.StringPtrInput
	AclIpv4IngressPolicyId pulumi.StringPtrInput
	AclIpv6EgressPolicyId  pulumi.StringPtrInput
	AclIpv6IngressPolicyId pulumi.StringPtrInput
	// Shaping Rate (Kbps)
	//   - Range: `8`-`100000000`
	AclShapingRate pulumi.IntPtrInput
	// Variable name
	AclShapingRateVariable pulumi.StringPtrInput
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds
	//   - Range: `0`-`2147483`
	//   - Default value: `1200`
	ArpTimeout pulumi.IntPtrInput
	// Variable name
	ArpTimeoutVariable pulumi.StringPtrInput
	// Configure ARP entries
	Arps ServiceLanVpnInterfaceEthernetFeatureArpArrayInput
	// Link autonegotiation
	Autonegotiate pulumi.BoolPtrInput
	// Variable name
	AutonegotiateVariable pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Duplex mode
	//   - Choices: `full`, `half`, `auto`
	Duplex pulumi.StringPtrInput
	// Variable name
	DuplexVariable pulumi.StringPtrInput
	// Enable DHCPv6, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
	EnableDhcpv6 pulumi.BoolPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// ICMP/ICMPv6 Redirect Disable
	//   - Default value: `true`
	IcmpRedirectDisable pulumi.BoolPtrInput
	// Variable name
	IcmpRedirectDisableVariable pulumi.StringPtrInput
	InterfaceDescription        pulumi.StringPtrInput
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrInput
	// Interface MTU
	//   - Range: `1500`-`9216`
	//   - Default value: `1500`
	InterfaceMtu pulumi.IntPtrInput
	// Variable name
	InterfaceMtuVariable pulumi.StringPtrInput
	InterfaceName        pulumi.StringPtrInput
	// Variable name
	InterfaceNameVariable pulumi.StringPtrInput
	// IP Directed-Broadcast
	//   - Default value: `false`
	IpDirectedBroadcast pulumi.BoolPtrInput
	// Variable name
	IpDirectedBroadcastVariable pulumi.StringPtrInput
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces <576..2000> in bytes
	//   - Range: `576`-`9216`
	//   - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	// IP Address, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4Address pulumi.StringPtrInput
	// Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4AddressVariable pulumi.StringPtrInput
	// IPv4 Configuration Type
	//   - Choices: `dynamic`, `static`
	//   - Default value: `dynamic`
	Ipv4ConfigurationType pulumi.StringPtrInput
	// DHCP Distance, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic`
	//   - Range: `1`-`65536`
	//   - Default value: `1`
	Ipv4DhcpDistance pulumi.IntPtrInput
	// Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic`
	Ipv4DhcpDistanceVariable pulumi.StringPtrInput
	// Variable name
	Ipv4DhcpHelperVariable pulumi.StringPtrInput
	// List of DHCP IPv4 helper addresses (min 1, max 8)
	Ipv4DhcpHelpers pulumi.StringArrayInput
	// enable Network Address Translation on this interface
	//   - Default value: `false`
	Ipv4Nat pulumi.BoolPtrInput
	// NAT Inside Source Loopback Interface
	Ipv4NatLoopback pulumi.StringPtrInput
	// Variable name
	Ipv4NatLoopbackVariable pulumi.StringPtrInput
	// NAT Overload
	//   - Default value: `true`
	Ipv4NatOverload pulumi.BoolPtrInput
	// Variable name
	Ipv4NatOverloadVariable pulumi.StringPtrInput
	// NAT Pool Prefix Length
	//   - Range: `1`-`32`
	Ipv4NatPrefixLength pulumi.IntPtrInput
	// Variable name
	Ipv4NatPrefixLengthVariable pulumi.StringPtrInput
	// NAT Pool Range End
	Ipv4NatRangeEnd pulumi.StringPtrInput
	// Variable name
	Ipv4NatRangeEndVariable pulumi.StringPtrInput
	// NAT Pool Range Start
	Ipv4NatRangeStart pulumi.StringPtrInput
	// Variable name
	Ipv4NatRangeStartVariable pulumi.StringPtrInput
	// Set NAT TCP session timeout, in minutes
	//   - Range: `1`-`8947`
	//   - Default value: `60`
	Ipv4NatTcpTimeout pulumi.IntPtrInput
	// Variable name
	Ipv4NatTcpTimeoutVariable pulumi.StringPtrInput
	// Set NAT UDP session timeout, in minutes
	//   - Range: `1`-`8947`
	//   - Default value: `1`
	Ipv4NatUdpTimeout pulumi.IntPtrInput
	// Variable name
	Ipv4NatUdpTimeoutVariable pulumi.StringPtrInput
	// Secondary IpV4 Addresses, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4SecondaryAddresses ServiceLanVpnInterfaceEthernetFeatureIpv4SecondaryAddressArrayInput
	// Subnet Mask, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	//   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrInput
	// Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4SubnetMaskVariable pulumi.StringPtrInput
	// Enable VRRP
	Ipv4Vrrps ServiceLanVpnInterfaceEthernetFeatureIpv4VrrpArrayInput
	// IPv6 Address Secondary, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6Address pulumi.StringPtrInput
	// Variable name, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6AddressVariable pulumi.StringPtrInput
	// IPv6 Configuration Type
	//   - Choices: `dynamic`, `static`, `none`
	//   - Default value: `none`
	Ipv6ConfigurationType pulumi.StringPtrInput
	// DHCPv6 Helper, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6DhcpHelpers ServiceLanVpnInterfaceEthernetFeatureIpv6DhcpHelperArrayInput
	// secondary IPv6 addresses, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
	Ipv6DhcpSecondaryAddresses ServiceLanVpnInterfaceEthernetFeatureIpv6DhcpSecondaryAddressArrayInput
	// enable Network Address Translation ipv6 on this interface
	//   - Default value: `false`
	Ipv6Nat pulumi.BoolPtrInput
	// Static secondary IPv6 addresses, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6SecondaryAddresses ServiceLanVpnInterfaceEthernetFeatureIpv6SecondaryAddressArrayInput
	// Enable VRRP Ipv6
	Ipv6Vrrps ServiceLanVpnInterfaceEthernetFeatureIpv6VrrpArrayInput
	// Interval for interface load calculation
	//   - Range: `30`-`600`
	//   - Default value: `30`
	LoadInterval pulumi.IntPtrInput
	// Variable name
	LoadIntervalVariable pulumi.StringPtrInput
	// MAC Address
	MacAddress pulumi.StringPtrInput
	// Variable name
	MacAddressVariable pulumi.StringPtrInput
	// Media type
	//   - Choices: `auto-select`, `rj45`, `sfp`
	MediaType pulumi.StringPtrInput
	// Variable name
	MediaTypeVariable pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// NAT64 on this interface
	//   - Default value: `false`
	Nat64 pulumi.BoolPtrInput
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringPtrInput
	// - Default value: `true`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// Set interface speed
	//   - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed pulumi.StringPtrInput
	// Variable name
	SpeedVariable pulumi.StringPtrInput
	// static NAT
	StaticNats ServiceLanVpnInterfaceEthernetFeatureStaticNatArrayInput
	// TCP MSS on SYN packets, in bytes
	//   - Range: `500`-`1460`
	TcpMss pulumi.IntPtrInput
	// Variable name
	TcpMssVariable pulumi.StringPtrInput
	// Enable tracker for this interface
	Tracker pulumi.StringPtrInput
	// Variable name
	TrackerVariable pulumi.StringPtrInput
	// Enable/Disable SGT Enforcement on an interface
	TrustsecEnableEnforcedPropogation pulumi.BoolPtrInput
	// Indicates that the interface is trustworthy for CTS
	//   - Default value: `false`
	TrustsecEnableSgtPropogation pulumi.BoolPtrInput
	// SGT value between 2 and 65519
	//   - Range: `2`-`65519`
	TrustsecEnforcedSecurityGroupTag pulumi.IntPtrInput
	// Variable name
	TrustsecEnforcedSecurityGroupTagVariable pulumi.StringPtrInput
	// Enables the interface for CTS SGT authorization and forwarding
	//   - Default value: `true`
	TrustsecPropogate pulumi.BoolPtrInput
	// SGT value between 2 and 65519
	//   - Range: `2`-`65519`
	TrustsecSecurityGroupTag pulumi.IntPtrInput
	// Variable name
	TrustsecSecurityGroupTagVariable pulumi.StringPtrInput
	// The version of the Feature
	Version pulumi.IntPtrInput
	// Extend remote TLOC over a GRE tunnel to a local LAN interface
	Xconnect pulumi.StringPtrInput
	// Variable name
	XconnectVariable pulumi.StringPtrInput
}

func (ServiceLanVpnInterfaceEthernetFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceLanVpnInterfaceEthernetFeatureState)(nil)).Elem()
}

type serviceLanVpnInterfaceEthernetFeatureArgs struct {
	AclIpv4EgressPolicyId  *string `pulumi:"aclIpv4EgressPolicyId"`
	AclIpv4IngressPolicyId *string `pulumi:"aclIpv4IngressPolicyId"`
	AclIpv6EgressPolicyId  *string `pulumi:"aclIpv6EgressPolicyId"`
	AclIpv6IngressPolicyId *string `pulumi:"aclIpv6IngressPolicyId"`
	// Shaping Rate (Kbps)
	//   - Range: `8`-`100000000`
	AclShapingRate *int `pulumi:"aclShapingRate"`
	// Variable name
	AclShapingRateVariable *string `pulumi:"aclShapingRateVariable"`
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds
	//   - Range: `0`-`2147483`
	//   - Default value: `1200`
	ArpTimeout *int `pulumi:"arpTimeout"`
	// Variable name
	ArpTimeoutVariable *string `pulumi:"arpTimeoutVariable"`
	// Configure ARP entries
	Arps []ServiceLanVpnInterfaceEthernetFeatureArp `pulumi:"arps"`
	// Link autonegotiation
	Autonegotiate *bool `pulumi:"autonegotiate"`
	// Variable name
	AutonegotiateVariable *string `pulumi:"autonegotiateVariable"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Duplex mode
	//   - Choices: `full`, `half`, `auto`
	Duplex *string `pulumi:"duplex"`
	// Variable name
	DuplexVariable *string `pulumi:"duplexVariable"`
	// Enable DHCPv6, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
	EnableDhcpv6 *bool `pulumi:"enableDhcpv6"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// ICMP/ICMPv6 Redirect Disable
	//   - Default value: `true`
	IcmpRedirectDisable *bool `pulumi:"icmpRedirectDisable"`
	// Variable name
	IcmpRedirectDisableVariable *string `pulumi:"icmpRedirectDisableVariable"`
	InterfaceDescription        *string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable *string `pulumi:"interfaceDescriptionVariable"`
	// Interface MTU
	//   - Range: `1500`-`9216`
	//   - Default value: `1500`
	InterfaceMtu *int `pulumi:"interfaceMtu"`
	// Variable name
	InterfaceMtuVariable *string `pulumi:"interfaceMtuVariable"`
	InterfaceName        *string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable *string `pulumi:"interfaceNameVariable"`
	// IP Directed-Broadcast
	//   - Default value: `false`
	IpDirectedBroadcast *bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable *string `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces <576..2000> in bytes
	//   - Range: `576`-`9216`
	//   - Default value: `1500`
	IpMtu *int `pulumi:"ipMtu"`
	// Variable name
	IpMtuVariable *string `pulumi:"ipMtuVariable"`
	// IP Address, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4Address *string `pulumi:"ipv4Address"`
	// Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4AddressVariable *string `pulumi:"ipv4AddressVariable"`
	// IPv4 Configuration Type
	//   - Choices: `dynamic`, `static`
	//   - Default value: `dynamic`
	Ipv4ConfigurationType *string `pulumi:"ipv4ConfigurationType"`
	// DHCP Distance, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic`
	//   - Range: `1`-`65536`
	//   - Default value: `1`
	Ipv4DhcpDistance *int `pulumi:"ipv4DhcpDistance"`
	// Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic`
	Ipv4DhcpDistanceVariable *string `pulumi:"ipv4DhcpDistanceVariable"`
	// Variable name
	Ipv4DhcpHelperVariable *string `pulumi:"ipv4DhcpHelperVariable"`
	// List of DHCP IPv4 helper addresses (min 1, max 8)
	Ipv4DhcpHelpers []string `pulumi:"ipv4DhcpHelpers"`
	// enable Network Address Translation on this interface
	//   - Default value: `false`
	Ipv4Nat *bool `pulumi:"ipv4Nat"`
	// NAT Inside Source Loopback Interface
	Ipv4NatLoopback *string `pulumi:"ipv4NatLoopback"`
	// Variable name
	Ipv4NatLoopbackVariable *string `pulumi:"ipv4NatLoopbackVariable"`
	// NAT Overload
	//   - Default value: `true`
	Ipv4NatOverload *bool `pulumi:"ipv4NatOverload"`
	// Variable name
	Ipv4NatOverloadVariable *string `pulumi:"ipv4NatOverloadVariable"`
	// NAT Pool Prefix Length
	//   - Range: `1`-`32`
	Ipv4NatPrefixLength *int `pulumi:"ipv4NatPrefixLength"`
	// Variable name
	Ipv4NatPrefixLengthVariable *string `pulumi:"ipv4NatPrefixLengthVariable"`
	// NAT Pool Range End
	Ipv4NatRangeEnd *string `pulumi:"ipv4NatRangeEnd"`
	// Variable name
	Ipv4NatRangeEndVariable *string `pulumi:"ipv4NatRangeEndVariable"`
	// NAT Pool Range Start
	Ipv4NatRangeStart *string `pulumi:"ipv4NatRangeStart"`
	// Variable name
	Ipv4NatRangeStartVariable *string `pulumi:"ipv4NatRangeStartVariable"`
	// Set NAT TCP session timeout, in minutes
	//   - Range: `1`-`8947`
	//   - Default value: `60`
	Ipv4NatTcpTimeout *int `pulumi:"ipv4NatTcpTimeout"`
	// Variable name
	Ipv4NatTcpTimeoutVariable *string `pulumi:"ipv4NatTcpTimeoutVariable"`
	// Set NAT UDP session timeout, in minutes
	//   - Range: `1`-`8947`
	//   - Default value: `1`
	Ipv4NatUdpTimeout *int `pulumi:"ipv4NatUdpTimeout"`
	// Variable name
	Ipv4NatUdpTimeoutVariable *string `pulumi:"ipv4NatUdpTimeoutVariable"`
	// Secondary IpV4 Addresses, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4SecondaryAddresses []ServiceLanVpnInterfaceEthernetFeatureIpv4SecondaryAddress `pulumi:"ipv4SecondaryAddresses"`
	// Subnet Mask, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	//   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask *string `pulumi:"ipv4SubnetMask"`
	// Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4SubnetMaskVariable *string `pulumi:"ipv4SubnetMaskVariable"`
	// Enable VRRP
	Ipv4Vrrps []ServiceLanVpnInterfaceEthernetFeatureIpv4Vrrp `pulumi:"ipv4Vrrps"`
	// IPv6 Address Secondary, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6Address *string `pulumi:"ipv6Address"`
	// Variable name, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6AddressVariable *string `pulumi:"ipv6AddressVariable"`
	// IPv6 Configuration Type
	//   - Choices: `dynamic`, `static`, `none`
	//   - Default value: `none`
	Ipv6ConfigurationType *string `pulumi:"ipv6ConfigurationType"`
	// DHCPv6 Helper, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6DhcpHelpers []ServiceLanVpnInterfaceEthernetFeatureIpv6DhcpHelper `pulumi:"ipv6DhcpHelpers"`
	// secondary IPv6 addresses, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
	Ipv6DhcpSecondaryAddresses []ServiceLanVpnInterfaceEthernetFeatureIpv6DhcpSecondaryAddress `pulumi:"ipv6DhcpSecondaryAddresses"`
	// enable Network Address Translation ipv6 on this interface
	//   - Default value: `false`
	Ipv6Nat *bool `pulumi:"ipv6Nat"`
	// Static secondary IPv6 addresses, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6SecondaryAddresses []ServiceLanVpnInterfaceEthernetFeatureIpv6SecondaryAddress `pulumi:"ipv6SecondaryAddresses"`
	// Enable VRRP Ipv6
	Ipv6Vrrps []ServiceLanVpnInterfaceEthernetFeatureIpv6Vrrp `pulumi:"ipv6Vrrps"`
	// Interval for interface load calculation
	//   - Range: `30`-`600`
	//   - Default value: `30`
	LoadInterval *int `pulumi:"loadInterval"`
	// Variable name
	LoadIntervalVariable *string `pulumi:"loadIntervalVariable"`
	// MAC Address
	MacAddress *string `pulumi:"macAddress"`
	// Variable name
	MacAddressVariable *string `pulumi:"macAddressVariable"`
	// Media type
	//   - Choices: `auto-select`, `rj45`, `sfp`
	MediaType *string `pulumi:"mediaType"`
	// Variable name
	MediaTypeVariable *string `pulumi:"mediaTypeVariable"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// NAT64 on this interface
	//   - Default value: `false`
	Nat64 *bool `pulumi:"nat64"`
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId string `pulumi:"serviceLanVpnFeatureId"`
	// - Default value: `true`
	Shutdown *bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable *string `pulumi:"shutdownVariable"`
	// Set interface speed
	//   - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed *string `pulumi:"speed"`
	// Variable name
	SpeedVariable *string `pulumi:"speedVariable"`
	// static NAT
	StaticNats []ServiceLanVpnInterfaceEthernetFeatureStaticNat `pulumi:"staticNats"`
	// TCP MSS on SYN packets, in bytes
	//   - Range: `500`-`1460`
	TcpMss *int `pulumi:"tcpMss"`
	// Variable name
	TcpMssVariable *string `pulumi:"tcpMssVariable"`
	// Enable tracker for this interface
	Tracker *string `pulumi:"tracker"`
	// Variable name
	TrackerVariable *string `pulumi:"trackerVariable"`
	// Enable/Disable SGT Enforcement on an interface
	TrustsecEnableEnforcedPropogation *bool `pulumi:"trustsecEnableEnforcedPropogation"`
	// Indicates that the interface is trustworthy for CTS
	//   - Default value: `false`
	TrustsecEnableSgtPropogation *bool `pulumi:"trustsecEnableSgtPropogation"`
	// SGT value between 2 and 65519
	//   - Range: `2`-`65519`
	TrustsecEnforcedSecurityGroupTag *int `pulumi:"trustsecEnforcedSecurityGroupTag"`
	// Variable name
	TrustsecEnforcedSecurityGroupTagVariable *string `pulumi:"trustsecEnforcedSecurityGroupTagVariable"`
	// Enables the interface for CTS SGT authorization and forwarding
	//   - Default value: `true`
	TrustsecPropogate *bool `pulumi:"trustsecPropogate"`
	// SGT value between 2 and 65519
	//   - Range: `2`-`65519`
	TrustsecSecurityGroupTag *int `pulumi:"trustsecSecurityGroupTag"`
	// Variable name
	TrustsecSecurityGroupTagVariable *string `pulumi:"trustsecSecurityGroupTagVariable"`
	// Extend remote TLOC over a GRE tunnel to a local LAN interface
	Xconnect *string `pulumi:"xconnect"`
	// Variable name
	XconnectVariable *string `pulumi:"xconnectVariable"`
}

// The set of arguments for constructing a ServiceLanVpnInterfaceEthernetFeature resource.
type ServiceLanVpnInterfaceEthernetFeatureArgs struct {
	AclIpv4EgressPolicyId  pulumi.StringPtrInput
	AclIpv4IngressPolicyId pulumi.StringPtrInput
	AclIpv6EgressPolicyId  pulumi.StringPtrInput
	AclIpv6IngressPolicyId pulumi.StringPtrInput
	// Shaping Rate (Kbps)
	//   - Range: `8`-`100000000`
	AclShapingRate pulumi.IntPtrInput
	// Variable name
	AclShapingRateVariable pulumi.StringPtrInput
	// Timeout value for dynamically learned ARP entries, <0..2678400> seconds
	//   - Range: `0`-`2147483`
	//   - Default value: `1200`
	ArpTimeout pulumi.IntPtrInput
	// Variable name
	ArpTimeoutVariable pulumi.StringPtrInput
	// Configure ARP entries
	Arps ServiceLanVpnInterfaceEthernetFeatureArpArrayInput
	// Link autonegotiation
	Autonegotiate pulumi.BoolPtrInput
	// Variable name
	AutonegotiateVariable pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Duplex mode
	//   - Choices: `full`, `half`, `auto`
	Duplex pulumi.StringPtrInput
	// Variable name
	DuplexVariable pulumi.StringPtrInput
	// Enable DHCPv6, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
	EnableDhcpv6 pulumi.BoolPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// ICMP/ICMPv6 Redirect Disable
	//   - Default value: `true`
	IcmpRedirectDisable pulumi.BoolPtrInput
	// Variable name
	IcmpRedirectDisableVariable pulumi.StringPtrInput
	InterfaceDescription        pulumi.StringPtrInput
	// Variable name
	InterfaceDescriptionVariable pulumi.StringPtrInput
	// Interface MTU
	//   - Range: `1500`-`9216`
	//   - Default value: `1500`
	InterfaceMtu pulumi.IntPtrInput
	// Variable name
	InterfaceMtuVariable pulumi.StringPtrInput
	InterfaceName        pulumi.StringPtrInput
	// Variable name
	InterfaceNameVariable pulumi.StringPtrInput
	// IP Directed-Broadcast
	//   - Default value: `false`
	IpDirectedBroadcast pulumi.BoolPtrInput
	// Variable name
	IpDirectedBroadcastVariable pulumi.StringPtrInput
	// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces <576..2000> in bytes
	//   - Range: `576`-`9216`
	//   - Default value: `1500`
	IpMtu pulumi.IntPtrInput
	// Variable name
	IpMtuVariable pulumi.StringPtrInput
	// IP Address, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4Address pulumi.StringPtrInput
	// Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4AddressVariable pulumi.StringPtrInput
	// IPv4 Configuration Type
	//   - Choices: `dynamic`, `static`
	//   - Default value: `dynamic`
	Ipv4ConfigurationType pulumi.StringPtrInput
	// DHCP Distance, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic`
	//   - Range: `1`-`65536`
	//   - Default value: `1`
	Ipv4DhcpDistance pulumi.IntPtrInput
	// Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic`
	Ipv4DhcpDistanceVariable pulumi.StringPtrInput
	// Variable name
	Ipv4DhcpHelperVariable pulumi.StringPtrInput
	// List of DHCP IPv4 helper addresses (min 1, max 8)
	Ipv4DhcpHelpers pulumi.StringArrayInput
	// enable Network Address Translation on this interface
	//   - Default value: `false`
	Ipv4Nat pulumi.BoolPtrInput
	// NAT Inside Source Loopback Interface
	Ipv4NatLoopback pulumi.StringPtrInput
	// Variable name
	Ipv4NatLoopbackVariable pulumi.StringPtrInput
	// NAT Overload
	//   - Default value: `true`
	Ipv4NatOverload pulumi.BoolPtrInput
	// Variable name
	Ipv4NatOverloadVariable pulumi.StringPtrInput
	// NAT Pool Prefix Length
	//   - Range: `1`-`32`
	Ipv4NatPrefixLength pulumi.IntPtrInput
	// Variable name
	Ipv4NatPrefixLengthVariable pulumi.StringPtrInput
	// NAT Pool Range End
	Ipv4NatRangeEnd pulumi.StringPtrInput
	// Variable name
	Ipv4NatRangeEndVariable pulumi.StringPtrInput
	// NAT Pool Range Start
	Ipv4NatRangeStart pulumi.StringPtrInput
	// Variable name
	Ipv4NatRangeStartVariable pulumi.StringPtrInput
	// Set NAT TCP session timeout, in minutes
	//   - Range: `1`-`8947`
	//   - Default value: `60`
	Ipv4NatTcpTimeout pulumi.IntPtrInput
	// Variable name
	Ipv4NatTcpTimeoutVariable pulumi.StringPtrInput
	// Set NAT UDP session timeout, in minutes
	//   - Range: `1`-`8947`
	//   - Default value: `1`
	Ipv4NatUdpTimeout pulumi.IntPtrInput
	// Variable name
	Ipv4NatUdpTimeoutVariable pulumi.StringPtrInput
	// Secondary IpV4 Addresses, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4SecondaryAddresses ServiceLanVpnInterfaceEthernetFeatureIpv4SecondaryAddressArrayInput
	// Subnet Mask, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	//   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
	Ipv4SubnetMask pulumi.StringPtrInput
	// Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
	Ipv4SubnetMaskVariable pulumi.StringPtrInput
	// Enable VRRP
	Ipv4Vrrps ServiceLanVpnInterfaceEthernetFeatureIpv4VrrpArrayInput
	// IPv6 Address Secondary, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6Address pulumi.StringPtrInput
	// Variable name, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6AddressVariable pulumi.StringPtrInput
	// IPv6 Configuration Type
	//   - Choices: `dynamic`, `static`, `none`
	//   - Default value: `none`
	Ipv6ConfigurationType pulumi.StringPtrInput
	// DHCPv6 Helper, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6DhcpHelpers ServiceLanVpnInterfaceEthernetFeatureIpv6DhcpHelperArrayInput
	// secondary IPv6 addresses, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
	Ipv6DhcpSecondaryAddresses ServiceLanVpnInterfaceEthernetFeatureIpv6DhcpSecondaryAddressArrayInput
	// enable Network Address Translation ipv6 on this interface
	//   - Default value: `false`
	Ipv6Nat pulumi.BoolPtrInput
	// Static secondary IPv6 addresses, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
	Ipv6SecondaryAddresses ServiceLanVpnInterfaceEthernetFeatureIpv6SecondaryAddressArrayInput
	// Enable VRRP Ipv6
	Ipv6Vrrps ServiceLanVpnInterfaceEthernetFeatureIpv6VrrpArrayInput
	// Interval for interface load calculation
	//   - Range: `30`-`600`
	//   - Default value: `30`
	LoadInterval pulumi.IntPtrInput
	// Variable name
	LoadIntervalVariable pulumi.StringPtrInput
	// MAC Address
	MacAddress pulumi.StringPtrInput
	// Variable name
	MacAddressVariable pulumi.StringPtrInput
	// Media type
	//   - Choices: `auto-select`, `rj45`, `sfp`
	MediaType pulumi.StringPtrInput
	// Variable name
	MediaTypeVariable pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// NAT64 on this interface
	//   - Default value: `false`
	Nat64 pulumi.BoolPtrInput
	// Service LAN VPN Feature ID
	ServiceLanVpnFeatureId pulumi.StringInput
	// - Default value: `true`
	Shutdown pulumi.BoolPtrInput
	// Variable name
	ShutdownVariable pulumi.StringPtrInput
	// Set interface speed
	//   - Choices: `10`, `100`, `1000`, `2500`, `10000`
	Speed pulumi.StringPtrInput
	// Variable name
	SpeedVariable pulumi.StringPtrInput
	// static NAT
	StaticNats ServiceLanVpnInterfaceEthernetFeatureStaticNatArrayInput
	// TCP MSS on SYN packets, in bytes
	//   - Range: `500`-`1460`
	TcpMss pulumi.IntPtrInput
	// Variable name
	TcpMssVariable pulumi.StringPtrInput
	// Enable tracker for this interface
	Tracker pulumi.StringPtrInput
	// Variable name
	TrackerVariable pulumi.StringPtrInput
	// Enable/Disable SGT Enforcement on an interface
	TrustsecEnableEnforcedPropogation pulumi.BoolPtrInput
	// Indicates that the interface is trustworthy for CTS
	//   - Default value: `false`
	TrustsecEnableSgtPropogation pulumi.BoolPtrInput
	// SGT value between 2 and 65519
	//   - Range: `2`-`65519`
	TrustsecEnforcedSecurityGroupTag pulumi.IntPtrInput
	// Variable name
	TrustsecEnforcedSecurityGroupTagVariable pulumi.StringPtrInput
	// Enables the interface for CTS SGT authorization and forwarding
	//   - Default value: `true`
	TrustsecPropogate pulumi.BoolPtrInput
	// SGT value between 2 and 65519
	//   - Range: `2`-`65519`
	TrustsecSecurityGroupTag pulumi.IntPtrInput
	// Variable name
	TrustsecSecurityGroupTagVariable pulumi.StringPtrInput
	// Extend remote TLOC over a GRE tunnel to a local LAN interface
	Xconnect pulumi.StringPtrInput
	// Variable name
	XconnectVariable pulumi.StringPtrInput
}

func (ServiceLanVpnInterfaceEthernetFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceLanVpnInterfaceEthernetFeatureArgs)(nil)).Elem()
}

type ServiceLanVpnInterfaceEthernetFeatureInput interface {
	pulumi.Input

	ToServiceLanVpnInterfaceEthernetFeatureOutput() ServiceLanVpnInterfaceEthernetFeatureOutput
	ToServiceLanVpnInterfaceEthernetFeatureOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceEthernetFeatureOutput
}

func (*ServiceLanVpnInterfaceEthernetFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLanVpnInterfaceEthernetFeature)(nil)).Elem()
}

func (i *ServiceLanVpnInterfaceEthernetFeature) ToServiceLanVpnInterfaceEthernetFeatureOutput() ServiceLanVpnInterfaceEthernetFeatureOutput {
	return i.ToServiceLanVpnInterfaceEthernetFeatureOutputWithContext(context.Background())
}

func (i *ServiceLanVpnInterfaceEthernetFeature) ToServiceLanVpnInterfaceEthernetFeatureOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceEthernetFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLanVpnInterfaceEthernetFeatureOutput)
}

// ServiceLanVpnInterfaceEthernetFeatureArrayInput is an input type that accepts ServiceLanVpnInterfaceEthernetFeatureArray and ServiceLanVpnInterfaceEthernetFeatureArrayOutput values.
// You can construct a concrete instance of `ServiceLanVpnInterfaceEthernetFeatureArrayInput` via:
//
//	ServiceLanVpnInterfaceEthernetFeatureArray{ ServiceLanVpnInterfaceEthernetFeatureArgs{...} }
type ServiceLanVpnInterfaceEthernetFeatureArrayInput interface {
	pulumi.Input

	ToServiceLanVpnInterfaceEthernetFeatureArrayOutput() ServiceLanVpnInterfaceEthernetFeatureArrayOutput
	ToServiceLanVpnInterfaceEthernetFeatureArrayOutputWithContext(context.Context) ServiceLanVpnInterfaceEthernetFeatureArrayOutput
}

type ServiceLanVpnInterfaceEthernetFeatureArray []ServiceLanVpnInterfaceEthernetFeatureInput

func (ServiceLanVpnInterfaceEthernetFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceLanVpnInterfaceEthernetFeature)(nil)).Elem()
}

func (i ServiceLanVpnInterfaceEthernetFeatureArray) ToServiceLanVpnInterfaceEthernetFeatureArrayOutput() ServiceLanVpnInterfaceEthernetFeatureArrayOutput {
	return i.ToServiceLanVpnInterfaceEthernetFeatureArrayOutputWithContext(context.Background())
}

func (i ServiceLanVpnInterfaceEthernetFeatureArray) ToServiceLanVpnInterfaceEthernetFeatureArrayOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceEthernetFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLanVpnInterfaceEthernetFeatureArrayOutput)
}

// ServiceLanVpnInterfaceEthernetFeatureMapInput is an input type that accepts ServiceLanVpnInterfaceEthernetFeatureMap and ServiceLanVpnInterfaceEthernetFeatureMapOutput values.
// You can construct a concrete instance of `ServiceLanVpnInterfaceEthernetFeatureMapInput` via:
//
//	ServiceLanVpnInterfaceEthernetFeatureMap{ "key": ServiceLanVpnInterfaceEthernetFeatureArgs{...} }
type ServiceLanVpnInterfaceEthernetFeatureMapInput interface {
	pulumi.Input

	ToServiceLanVpnInterfaceEthernetFeatureMapOutput() ServiceLanVpnInterfaceEthernetFeatureMapOutput
	ToServiceLanVpnInterfaceEthernetFeatureMapOutputWithContext(context.Context) ServiceLanVpnInterfaceEthernetFeatureMapOutput
}

type ServiceLanVpnInterfaceEthernetFeatureMap map[string]ServiceLanVpnInterfaceEthernetFeatureInput

func (ServiceLanVpnInterfaceEthernetFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceLanVpnInterfaceEthernetFeature)(nil)).Elem()
}

func (i ServiceLanVpnInterfaceEthernetFeatureMap) ToServiceLanVpnInterfaceEthernetFeatureMapOutput() ServiceLanVpnInterfaceEthernetFeatureMapOutput {
	return i.ToServiceLanVpnInterfaceEthernetFeatureMapOutputWithContext(context.Background())
}

func (i ServiceLanVpnInterfaceEthernetFeatureMap) ToServiceLanVpnInterfaceEthernetFeatureMapOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceEthernetFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLanVpnInterfaceEthernetFeatureMapOutput)
}

type ServiceLanVpnInterfaceEthernetFeatureOutput struct{ *pulumi.OutputState }

func (ServiceLanVpnInterfaceEthernetFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLanVpnInterfaceEthernetFeature)(nil)).Elem()
}

func (o ServiceLanVpnInterfaceEthernetFeatureOutput) ToServiceLanVpnInterfaceEthernetFeatureOutput() ServiceLanVpnInterfaceEthernetFeatureOutput {
	return o
}

func (o ServiceLanVpnInterfaceEthernetFeatureOutput) ToServiceLanVpnInterfaceEthernetFeatureOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceEthernetFeatureOutput {
	return o
}

func (o ServiceLanVpnInterfaceEthernetFeatureOutput) AclIpv4EgressPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.AclIpv4EgressPolicyId }).(pulumi.StringPtrOutput)
}

func (o ServiceLanVpnInterfaceEthernetFeatureOutput) AclIpv4IngressPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.AclIpv4IngressPolicyId }).(pulumi.StringPtrOutput)
}

func (o ServiceLanVpnInterfaceEthernetFeatureOutput) AclIpv6EgressPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.AclIpv6EgressPolicyId }).(pulumi.StringPtrOutput)
}

func (o ServiceLanVpnInterfaceEthernetFeatureOutput) AclIpv6IngressPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.AclIpv6IngressPolicyId }).(pulumi.StringPtrOutput)
}

// Shaping Rate (Kbps)
//   - Range: `8`-`100000000`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) AclShapingRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.IntPtrOutput { return v.AclShapingRate }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) AclShapingRateVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.AclShapingRateVariable }).(pulumi.StringPtrOutput)
}

// Timeout value for dynamically learned ARP entries, <0..2678400> seconds
//   - Range: `0`-`2147483`
//   - Default value: `1200`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) ArpTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.IntPtrOutput { return v.ArpTimeout }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) ArpTimeoutVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.ArpTimeoutVariable }).(pulumi.StringPtrOutput)
}

// Configure ARP entries
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Arps() ServiceLanVpnInterfaceEthernetFeatureArpArrayOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) ServiceLanVpnInterfaceEthernetFeatureArpArrayOutput {
		return v.Arps
	}).(ServiceLanVpnInterfaceEthernetFeatureArpArrayOutput)
}

// Link autonegotiation
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Autonegotiate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.BoolPtrOutput { return v.Autonegotiate }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) AutonegotiateVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.AutonegotiateVariable }).(pulumi.StringPtrOutput)
}

// The description of the Feature
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Duplex mode
//   - Choices: `full`, `half`, `auto`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Duplex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.Duplex }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) DuplexVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.DuplexVariable }).(pulumi.StringPtrOutput)
}

// Enable DHCPv6, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) EnableDhcpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.BoolPtrOutput { return v.EnableDhcpv6 }).(pulumi.BoolPtrOutput)
}

// Feature Profile ID
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// ICMP/ICMPv6 Redirect Disable
//   - Default value: `true`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) IcmpRedirectDisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.BoolPtrOutput { return v.IcmpRedirectDisable }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) IcmpRedirectDisableVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput {
		return v.IcmpRedirectDisableVariable
	}).(pulumi.StringPtrOutput)
}

func (o ServiceLanVpnInterfaceEthernetFeatureOutput) InterfaceDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.InterfaceDescription }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) InterfaceDescriptionVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput {
		return v.InterfaceDescriptionVariable
	}).(pulumi.StringPtrOutput)
}

// Interface MTU
//   - Range: `1500`-`9216`
//   - Default value: `1500`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) InterfaceMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.IntPtrOutput { return v.InterfaceMtu }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) InterfaceMtuVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.InterfaceMtuVariable }).(pulumi.StringPtrOutput)
}

func (o ServiceLanVpnInterfaceEthernetFeatureOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) InterfaceNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.InterfaceNameVariable }).(pulumi.StringPtrOutput)
}

// IP Directed-Broadcast
//   - Default value: `false`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) IpDirectedBroadcast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.BoolPtrOutput { return v.IpDirectedBroadcast }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) IpDirectedBroadcastVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput {
		return v.IpDirectedBroadcastVariable
	}).(pulumi.StringPtrOutput)
}

// IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces <576..2000> in bytes
//   - Range: `576`-`9216`
//   - Default value: `1500`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) IpMtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.IntPtrOutput { return v.IpMtu }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) IpMtuVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.IpMtuVariable }).(pulumi.StringPtrOutput)
}

// IP Address, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

// Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.Ipv4AddressVariable }).(pulumi.StringPtrOutput)
}

// IPv4 Configuration Type
//   - Choices: `dynamic`, `static`
//   - Default value: `dynamic`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4ConfigurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.Ipv4ConfigurationType }).(pulumi.StringPtrOutput)
}

// DHCP Distance, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic`
//   - Range: `1`-`65536`
//   - Default value: `1`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4DhcpDistance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.IntPtrOutput { return v.Ipv4DhcpDistance }).(pulumi.IntPtrOutput)
}

// Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4DhcpDistanceVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput {
		return v.Ipv4DhcpDistanceVariable
	}).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4DhcpHelperVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.Ipv4DhcpHelperVariable }).(pulumi.StringPtrOutput)
}

// List of DHCP IPv4 helper addresses (min 1, max 8)
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4DhcpHelpers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringArrayOutput { return v.Ipv4DhcpHelpers }).(pulumi.StringArrayOutput)
}

// enable Network Address Translation on this interface
//   - Default value: `false`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4Nat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.BoolPtrOutput { return v.Ipv4Nat }).(pulumi.BoolPtrOutput)
}

// NAT Inside Source Loopback Interface
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4NatLoopback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.Ipv4NatLoopback }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4NatLoopbackVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput {
		return v.Ipv4NatLoopbackVariable
	}).(pulumi.StringPtrOutput)
}

// NAT Overload
//   - Default value: `true`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4NatOverload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.BoolPtrOutput { return v.Ipv4NatOverload }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4NatOverloadVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput {
		return v.Ipv4NatOverloadVariable
	}).(pulumi.StringPtrOutput)
}

// NAT Pool Prefix Length
//   - Range: `1`-`32`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4NatPrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.IntPtrOutput { return v.Ipv4NatPrefixLength }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4NatPrefixLengthVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput {
		return v.Ipv4NatPrefixLengthVariable
	}).(pulumi.StringPtrOutput)
}

// NAT Pool Range End
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4NatRangeEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.Ipv4NatRangeEnd }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4NatRangeEndVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput {
		return v.Ipv4NatRangeEndVariable
	}).(pulumi.StringPtrOutput)
}

// NAT Pool Range Start
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4NatRangeStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.Ipv4NatRangeStart }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4NatRangeStartVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput {
		return v.Ipv4NatRangeStartVariable
	}).(pulumi.StringPtrOutput)
}

// Set NAT TCP session timeout, in minutes
//   - Range: `1`-`8947`
//   - Default value: `60`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4NatTcpTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.IntPtrOutput { return v.Ipv4NatTcpTimeout }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4NatTcpTimeoutVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput {
		return v.Ipv4NatTcpTimeoutVariable
	}).(pulumi.StringPtrOutput)
}

// Set NAT UDP session timeout, in minutes
//   - Range: `1`-`8947`
//   - Default value: `1`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4NatUdpTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.IntPtrOutput { return v.Ipv4NatUdpTimeout }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4NatUdpTimeoutVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput {
		return v.Ipv4NatUdpTimeoutVariable
	}).(pulumi.StringPtrOutput)
}

// Secondary IpV4 Addresses, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4SecondaryAddresses() ServiceLanVpnInterfaceEthernetFeatureIpv4SecondaryAddressArrayOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) ServiceLanVpnInterfaceEthernetFeatureIpv4SecondaryAddressArrayOutput {
		return v.Ipv4SecondaryAddresses
	}).(ServiceLanVpnInterfaceEthernetFeatureIpv4SecondaryAddressArrayOutput)
}

// Subnet Mask, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
//   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.Ipv4SubnetMask }).(pulumi.StringPtrOutput)
}

// Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4SubnetMaskVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.Ipv4SubnetMaskVariable }).(pulumi.StringPtrOutput)
}

// Enable VRRP
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv4Vrrps() ServiceLanVpnInterfaceEthernetFeatureIpv4VrrpArrayOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) ServiceLanVpnInterfaceEthernetFeatureIpv4VrrpArrayOutput {
		return v.Ipv4Vrrps
	}).(ServiceLanVpnInterfaceEthernetFeatureIpv4VrrpArrayOutput)
}

// IPv6 Address Secondary, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

// Variable name, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv6AddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.Ipv6AddressVariable }).(pulumi.StringPtrOutput)
}

// IPv6 Configuration Type
//   - Choices: `dynamic`, `static`, `none`
//   - Default value: `none`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv6ConfigurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.Ipv6ConfigurationType }).(pulumi.StringPtrOutput)
}

// DHCPv6 Helper, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv6DhcpHelpers() ServiceLanVpnInterfaceEthernetFeatureIpv6DhcpHelperArrayOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) ServiceLanVpnInterfaceEthernetFeatureIpv6DhcpHelperArrayOutput {
		return v.Ipv6DhcpHelpers
	}).(ServiceLanVpnInterfaceEthernetFeatureIpv6DhcpHelperArrayOutput)
}

// secondary IPv6 addresses, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv6DhcpSecondaryAddresses() ServiceLanVpnInterfaceEthernetFeatureIpv6DhcpSecondaryAddressArrayOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) ServiceLanVpnInterfaceEthernetFeatureIpv6DhcpSecondaryAddressArrayOutput {
		return v.Ipv6DhcpSecondaryAddresses
	}).(ServiceLanVpnInterfaceEthernetFeatureIpv6DhcpSecondaryAddressArrayOutput)
}

// enable Network Address Translation ipv6 on this interface
//   - Default value: `false`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv6Nat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.BoolPtrOutput { return v.Ipv6Nat }).(pulumi.BoolPtrOutput)
}

// Static secondary IPv6 addresses, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv6SecondaryAddresses() ServiceLanVpnInterfaceEthernetFeatureIpv6SecondaryAddressArrayOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) ServiceLanVpnInterfaceEthernetFeatureIpv6SecondaryAddressArrayOutput {
		return v.Ipv6SecondaryAddresses
	}).(ServiceLanVpnInterfaceEthernetFeatureIpv6SecondaryAddressArrayOutput)
}

// Enable VRRP Ipv6
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Ipv6Vrrps() ServiceLanVpnInterfaceEthernetFeatureIpv6VrrpArrayOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) ServiceLanVpnInterfaceEthernetFeatureIpv6VrrpArrayOutput {
		return v.Ipv6Vrrps
	}).(ServiceLanVpnInterfaceEthernetFeatureIpv6VrrpArrayOutput)
}

// Interval for interface load calculation
//   - Range: `30`-`600`
//   - Default value: `30`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) LoadInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.IntPtrOutput { return v.LoadInterval }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) LoadIntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.LoadIntervalVariable }).(pulumi.StringPtrOutput)
}

// MAC Address
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) MacAddressVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.MacAddressVariable }).(pulumi.StringPtrOutput)
}

// Media type
//   - Choices: `auto-select`, `rj45`, `sfp`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.MediaType }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) MediaTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.MediaTypeVariable }).(pulumi.StringPtrOutput)
}

// The name of the Feature
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// NAT64 on this interface
//   - Default value: `false`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Nat64() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.BoolPtrOutput { return v.Nat64 }).(pulumi.BoolPtrOutput)
}

// Service LAN VPN Feature ID
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) ServiceLanVpnFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringOutput { return v.ServiceLanVpnFeatureId }).(pulumi.StringOutput)
}

// - Default value: `true`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Shutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.BoolPtrOutput { return v.Shutdown }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) ShutdownVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.ShutdownVariable }).(pulumi.StringPtrOutput)
}

// Set interface speed
//   - Choices: `10`, `100`, `1000`, `2500`, `10000`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Speed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.Speed }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) SpeedVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.SpeedVariable }).(pulumi.StringPtrOutput)
}

// static NAT
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) StaticNats() ServiceLanVpnInterfaceEthernetFeatureStaticNatArrayOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) ServiceLanVpnInterfaceEthernetFeatureStaticNatArrayOutput {
		return v.StaticNats
	}).(ServiceLanVpnInterfaceEthernetFeatureStaticNatArrayOutput)
}

// TCP MSS on SYN packets, in bytes
//   - Range: `500`-`1460`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) TcpMss() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.IntPtrOutput { return v.TcpMss }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) TcpMssVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.TcpMssVariable }).(pulumi.StringPtrOutput)
}

// Enable tracker for this interface
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Tracker() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.Tracker }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) TrackerVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.TrackerVariable }).(pulumi.StringPtrOutput)
}

// Enable/Disable SGT Enforcement on an interface
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) TrustsecEnableEnforcedPropogation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.BoolPtrOutput {
		return v.TrustsecEnableEnforcedPropogation
	}).(pulumi.BoolPtrOutput)
}

// Indicates that the interface is trustworthy for CTS
//   - Default value: `false`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) TrustsecEnableSgtPropogation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.BoolPtrOutput {
		return v.TrustsecEnableSgtPropogation
	}).(pulumi.BoolPtrOutput)
}

// SGT value between 2 and 65519
//   - Range: `2`-`65519`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) TrustsecEnforcedSecurityGroupTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.IntPtrOutput {
		return v.TrustsecEnforcedSecurityGroupTag
	}).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) TrustsecEnforcedSecurityGroupTagVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput {
		return v.TrustsecEnforcedSecurityGroupTagVariable
	}).(pulumi.StringPtrOutput)
}

// Enables the interface for CTS SGT authorization and forwarding
//   - Default value: `true`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) TrustsecPropogate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.BoolPtrOutput { return v.TrustsecPropogate }).(pulumi.BoolPtrOutput)
}

// SGT value between 2 and 65519
//   - Range: `2`-`65519`
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) TrustsecSecurityGroupTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.IntPtrOutput { return v.TrustsecSecurityGroupTag }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) TrustsecSecurityGroupTagVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput {
		return v.TrustsecSecurityGroupTagVariable
	}).(pulumi.StringPtrOutput)
}

// The version of the Feature
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

// Extend remote TLOC over a GRE tunnel to a local LAN interface
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) Xconnect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.Xconnect }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceLanVpnInterfaceEthernetFeatureOutput) XconnectVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLanVpnInterfaceEthernetFeature) pulumi.StringPtrOutput { return v.XconnectVariable }).(pulumi.StringPtrOutput)
}

type ServiceLanVpnInterfaceEthernetFeatureArrayOutput struct{ *pulumi.OutputState }

func (ServiceLanVpnInterfaceEthernetFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceLanVpnInterfaceEthernetFeature)(nil)).Elem()
}

func (o ServiceLanVpnInterfaceEthernetFeatureArrayOutput) ToServiceLanVpnInterfaceEthernetFeatureArrayOutput() ServiceLanVpnInterfaceEthernetFeatureArrayOutput {
	return o
}

func (o ServiceLanVpnInterfaceEthernetFeatureArrayOutput) ToServiceLanVpnInterfaceEthernetFeatureArrayOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceEthernetFeatureArrayOutput {
	return o
}

func (o ServiceLanVpnInterfaceEthernetFeatureArrayOutput) Index(i pulumi.IntInput) ServiceLanVpnInterfaceEthernetFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceLanVpnInterfaceEthernetFeature {
		return vs[0].([]*ServiceLanVpnInterfaceEthernetFeature)[vs[1].(int)]
	}).(ServiceLanVpnInterfaceEthernetFeatureOutput)
}

type ServiceLanVpnInterfaceEthernetFeatureMapOutput struct{ *pulumi.OutputState }

func (ServiceLanVpnInterfaceEthernetFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceLanVpnInterfaceEthernetFeature)(nil)).Elem()
}

func (o ServiceLanVpnInterfaceEthernetFeatureMapOutput) ToServiceLanVpnInterfaceEthernetFeatureMapOutput() ServiceLanVpnInterfaceEthernetFeatureMapOutput {
	return o
}

func (o ServiceLanVpnInterfaceEthernetFeatureMapOutput) ToServiceLanVpnInterfaceEthernetFeatureMapOutputWithContext(ctx context.Context) ServiceLanVpnInterfaceEthernetFeatureMapOutput {
	return o
}

func (o ServiceLanVpnInterfaceEthernetFeatureMapOutput) MapIndex(k pulumi.StringInput) ServiceLanVpnInterfaceEthernetFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceLanVpnInterfaceEthernetFeature {
		return vs[0].(map[string]*ServiceLanVpnInterfaceEthernetFeature)[vs[1].(string)]
	}).(ServiceLanVpnInterfaceEthernetFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLanVpnInterfaceEthernetFeatureInput)(nil)).Elem(), &ServiceLanVpnInterfaceEthernetFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLanVpnInterfaceEthernetFeatureArrayInput)(nil)).Elem(), ServiceLanVpnInterfaceEthernetFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLanVpnInterfaceEthernetFeatureMapInput)(nil)).Elem(), ServiceLanVpnInterfaceEthernetFeatureMap{})
	pulumi.RegisterOutputType(ServiceLanVpnInterfaceEthernetFeatureOutput{})
	pulumi.RegisterOutputType(ServiceLanVpnInterfaceEthernetFeatureArrayOutput{})
	pulumi.RegisterOutputType(ServiceLanVpnInterfaceEthernetFeatureMapOutput{})
}
