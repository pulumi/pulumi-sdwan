// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Cisco BFD feature template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupCiscoBfdFeatureTemplate(ctx, &sdwan.LookupCiscoBfdFeatureTemplateArgs{
//				Id: pulumi.StringRef("f6b2c44c-693c-4763-b010-895aa3d236bd"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCiscoBfdFeatureTemplate(ctx *pulumi.Context, args *LookupCiscoBfdFeatureTemplateArgs, opts ...pulumi.InvokeOption) (*LookupCiscoBfdFeatureTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCiscoBfdFeatureTemplateResult
	err := ctx.Invoke("sdwan:index/getCiscoBfdFeatureTemplate:getCiscoBfdFeatureTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCiscoBfdFeatureTemplate.
type LookupCiscoBfdFeatureTemplateArgs struct {
	// The id of the feature template
	Id *string `pulumi:"id"`
	// The name of the feature template
	Name *string `pulumi:"name"`
}

// A collection of values returned by getCiscoBfdFeatureTemplate.
type LookupCiscoBfdFeatureTemplateResult struct {
	// Set color that identifies the WAN transport tunnel
	Colors []GetCiscoBfdFeatureTemplateColor `pulumi:"colors"`
	// Set default DSCP value for BFD packets
	DefaultDscp int `pulumi:"defaultDscp"`
	// Variable name
	DefaultDscpVariable string `pulumi:"defaultDscpVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	DeviceTypes []string `pulumi:"deviceTypes"`
	// The id of the feature template
	Id string `pulumi:"id"`
	// Set the number of polling intervals used to determine tunnel SLA class
	Multiplier int `pulumi:"multiplier"`
	// Variable name
	MultiplierVariable string `pulumi:"multiplierVariable"`
	// The name of the feature template
	Name string `pulumi:"name"`
	// Set how often BFD polls tunnels to collect packet latency, loss, and statistics
	PollInterval int `pulumi:"pollInterval"`
	// Variable name
	PollIntervalVariable string `pulumi:"pollIntervalVariable"`
	// The template type
	TemplateType string `pulumi:"templateType"`
	// The version of the feature template
	Version int `pulumi:"version"`
}

func LookupCiscoBfdFeatureTemplateOutput(ctx *pulumi.Context, args LookupCiscoBfdFeatureTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupCiscoBfdFeatureTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCiscoBfdFeatureTemplateResult, error) {
			args := v.(LookupCiscoBfdFeatureTemplateArgs)
			r, err := LookupCiscoBfdFeatureTemplate(ctx, &args, opts...)
			var s LookupCiscoBfdFeatureTemplateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCiscoBfdFeatureTemplateResultOutput)
}

// A collection of arguments for invoking getCiscoBfdFeatureTemplate.
type LookupCiscoBfdFeatureTemplateOutputArgs struct {
	// The id of the feature template
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the feature template
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupCiscoBfdFeatureTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCiscoBfdFeatureTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getCiscoBfdFeatureTemplate.
type LookupCiscoBfdFeatureTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupCiscoBfdFeatureTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCiscoBfdFeatureTemplateResult)(nil)).Elem()
}

func (o LookupCiscoBfdFeatureTemplateResultOutput) ToLookupCiscoBfdFeatureTemplateResultOutput() LookupCiscoBfdFeatureTemplateResultOutput {
	return o
}

func (o LookupCiscoBfdFeatureTemplateResultOutput) ToLookupCiscoBfdFeatureTemplateResultOutputWithContext(ctx context.Context) LookupCiscoBfdFeatureTemplateResultOutput {
	return o
}

// Set color that identifies the WAN transport tunnel
func (o LookupCiscoBfdFeatureTemplateResultOutput) Colors() GetCiscoBfdFeatureTemplateColorArrayOutput {
	return o.ApplyT(func(v LookupCiscoBfdFeatureTemplateResult) []GetCiscoBfdFeatureTemplateColor { return v.Colors }).(GetCiscoBfdFeatureTemplateColorArrayOutput)
}

// Set default DSCP value for BFD packets
func (o LookupCiscoBfdFeatureTemplateResultOutput) DefaultDscp() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoBfdFeatureTemplateResult) int { return v.DefaultDscp }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoBfdFeatureTemplateResultOutput) DefaultDscpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoBfdFeatureTemplateResult) string { return v.DefaultDscpVariable }).(pulumi.StringOutput)
}

// The description of the feature template
func (o LookupCiscoBfdFeatureTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoBfdFeatureTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
func (o LookupCiscoBfdFeatureTemplateResultOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCiscoBfdFeatureTemplateResult) []string { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// The id of the feature template
func (o LookupCiscoBfdFeatureTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoBfdFeatureTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// Set the number of polling intervals used to determine tunnel SLA class
func (o LookupCiscoBfdFeatureTemplateResultOutput) Multiplier() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoBfdFeatureTemplateResult) int { return v.Multiplier }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoBfdFeatureTemplateResultOutput) MultiplierVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoBfdFeatureTemplateResult) string { return v.MultiplierVariable }).(pulumi.StringOutput)
}

// The name of the feature template
func (o LookupCiscoBfdFeatureTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoBfdFeatureTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// Set how often BFD polls tunnels to collect packet latency, loss, and statistics
func (o LookupCiscoBfdFeatureTemplateResultOutput) PollInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoBfdFeatureTemplateResult) int { return v.PollInterval }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoBfdFeatureTemplateResultOutput) PollIntervalVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoBfdFeatureTemplateResult) string { return v.PollIntervalVariable }).(pulumi.StringOutput)
}

// The template type
func (o LookupCiscoBfdFeatureTemplateResultOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoBfdFeatureTemplateResult) string { return v.TemplateType }).(pulumi.StringOutput)
}

// The version of the feature template
func (o LookupCiscoBfdFeatureTemplateResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoBfdFeatureTemplateResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCiscoBfdFeatureTemplateResultOutput{})
}
