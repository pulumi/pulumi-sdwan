// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Transport IPv6 Tracker Group Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewTransportIpv6TrackerGroupFeature(ctx, "example", &sdwan.TransportIpv6TrackerGroupFeatureArgs{
//				Name:             pulumi.String("Example"),
//				Description:      pulumi.String("My Example"),
//				FeatureProfileId: pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				TrackerName:      pulumi.String("TRACKER_GROUP_1"),
//				TrackerElements: sdwan.TransportIpv6TrackerGroupFeatureTrackerElementArray{
//					&sdwan.TransportIpv6TrackerGroupFeatureTrackerElementArgs{
//						Tracker_id: "615d948f-34ee-4a2e-810e-a9bd8d3d48ec",
//					},
//				},
//				TrackerBoolean: pulumi.String("or"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "transport_ipv6_tracker_group_feature_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/transportIpv6TrackerGroupFeature:TransportIpv6TrackerGroupFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type TransportIpv6TrackerGroupFeature struct {
	pulumi.CustomResourceState

	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// tracker ref list combine boolean and or
	//   - Choices: `and`, `or`
	//   - Default value: `or`
	TrackerBoolean pulumi.StringPtrOutput `pulumi:"trackerBoolean"`
	// Variable name
	TrackerBooleanVariable pulumi.StringPtrOutput `pulumi:"trackerBooleanVariable"`
	// trackers ref list
	TrackerElements TransportIpv6TrackerGroupFeatureTrackerElementArrayOutput `pulumi:"trackerElements"`
	// Tracker Name
	TrackerName pulumi.StringOutput `pulumi:"trackerName"`
	// Variable name
	TrackerNameVariable pulumi.StringPtrOutput `pulumi:"trackerNameVariable"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewTransportIpv6TrackerGroupFeature registers a new resource with the given unique name, arguments, and options.
func NewTransportIpv6TrackerGroupFeature(ctx *pulumi.Context,
	name string, args *TransportIpv6TrackerGroupFeatureArgs, opts ...pulumi.ResourceOption) (*TransportIpv6TrackerGroupFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	if args.TrackerName == nil {
		return nil, errors.New("invalid value for required argument 'TrackerName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransportIpv6TrackerGroupFeature
	err := ctx.RegisterResource("sdwan:index/transportIpv6TrackerGroupFeature:TransportIpv6TrackerGroupFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransportIpv6TrackerGroupFeature gets an existing TransportIpv6TrackerGroupFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransportIpv6TrackerGroupFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransportIpv6TrackerGroupFeatureState, opts ...pulumi.ResourceOption) (*TransportIpv6TrackerGroupFeature, error) {
	var resource TransportIpv6TrackerGroupFeature
	err := ctx.ReadResource("sdwan:index/transportIpv6TrackerGroupFeature:TransportIpv6TrackerGroupFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransportIpv6TrackerGroupFeature resources.
type transportIpv6TrackerGroupFeatureState struct {
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// tracker ref list combine boolean and or
	//   - Choices: `and`, `or`
	//   - Default value: `or`
	TrackerBoolean *string `pulumi:"trackerBoolean"`
	// Variable name
	TrackerBooleanVariable *string `pulumi:"trackerBooleanVariable"`
	// trackers ref list
	TrackerElements []TransportIpv6TrackerGroupFeatureTrackerElement `pulumi:"trackerElements"`
	// Tracker Name
	TrackerName *string `pulumi:"trackerName"`
	// Variable name
	TrackerNameVariable *string `pulumi:"trackerNameVariable"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type TransportIpv6TrackerGroupFeatureState struct {
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// tracker ref list combine boolean and or
	//   - Choices: `and`, `or`
	//   - Default value: `or`
	TrackerBoolean pulumi.StringPtrInput
	// Variable name
	TrackerBooleanVariable pulumi.StringPtrInput
	// trackers ref list
	TrackerElements TransportIpv6TrackerGroupFeatureTrackerElementArrayInput
	// Tracker Name
	TrackerName pulumi.StringPtrInput
	// Variable name
	TrackerNameVariable pulumi.StringPtrInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (TransportIpv6TrackerGroupFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*transportIpv6TrackerGroupFeatureState)(nil)).Elem()
}

type transportIpv6TrackerGroupFeatureArgs struct {
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// tracker ref list combine boolean and or
	//   - Choices: `and`, `or`
	//   - Default value: `or`
	TrackerBoolean *string `pulumi:"trackerBoolean"`
	// Variable name
	TrackerBooleanVariable *string `pulumi:"trackerBooleanVariable"`
	// trackers ref list
	TrackerElements []TransportIpv6TrackerGroupFeatureTrackerElement `pulumi:"trackerElements"`
	// Tracker Name
	TrackerName string `pulumi:"trackerName"`
	// Variable name
	TrackerNameVariable *string `pulumi:"trackerNameVariable"`
}

// The set of arguments for constructing a TransportIpv6TrackerGroupFeature resource.
type TransportIpv6TrackerGroupFeatureArgs struct {
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// tracker ref list combine boolean and or
	//   - Choices: `and`, `or`
	//   - Default value: `or`
	TrackerBoolean pulumi.StringPtrInput
	// Variable name
	TrackerBooleanVariable pulumi.StringPtrInput
	// trackers ref list
	TrackerElements TransportIpv6TrackerGroupFeatureTrackerElementArrayInput
	// Tracker Name
	TrackerName pulumi.StringInput
	// Variable name
	TrackerNameVariable pulumi.StringPtrInput
}

func (TransportIpv6TrackerGroupFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transportIpv6TrackerGroupFeatureArgs)(nil)).Elem()
}

type TransportIpv6TrackerGroupFeatureInput interface {
	pulumi.Input

	ToTransportIpv6TrackerGroupFeatureOutput() TransportIpv6TrackerGroupFeatureOutput
	ToTransportIpv6TrackerGroupFeatureOutputWithContext(ctx context.Context) TransportIpv6TrackerGroupFeatureOutput
}

func (*TransportIpv6TrackerGroupFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportIpv6TrackerGroupFeature)(nil)).Elem()
}

func (i *TransportIpv6TrackerGroupFeature) ToTransportIpv6TrackerGroupFeatureOutput() TransportIpv6TrackerGroupFeatureOutput {
	return i.ToTransportIpv6TrackerGroupFeatureOutputWithContext(context.Background())
}

func (i *TransportIpv6TrackerGroupFeature) ToTransportIpv6TrackerGroupFeatureOutputWithContext(ctx context.Context) TransportIpv6TrackerGroupFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportIpv6TrackerGroupFeatureOutput)
}

// TransportIpv6TrackerGroupFeatureArrayInput is an input type that accepts TransportIpv6TrackerGroupFeatureArray and TransportIpv6TrackerGroupFeatureArrayOutput values.
// You can construct a concrete instance of `TransportIpv6TrackerGroupFeatureArrayInput` via:
//
//	TransportIpv6TrackerGroupFeatureArray{ TransportIpv6TrackerGroupFeatureArgs{...} }
type TransportIpv6TrackerGroupFeatureArrayInput interface {
	pulumi.Input

	ToTransportIpv6TrackerGroupFeatureArrayOutput() TransportIpv6TrackerGroupFeatureArrayOutput
	ToTransportIpv6TrackerGroupFeatureArrayOutputWithContext(context.Context) TransportIpv6TrackerGroupFeatureArrayOutput
}

type TransportIpv6TrackerGroupFeatureArray []TransportIpv6TrackerGroupFeatureInput

func (TransportIpv6TrackerGroupFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportIpv6TrackerGroupFeature)(nil)).Elem()
}

func (i TransportIpv6TrackerGroupFeatureArray) ToTransportIpv6TrackerGroupFeatureArrayOutput() TransportIpv6TrackerGroupFeatureArrayOutput {
	return i.ToTransportIpv6TrackerGroupFeatureArrayOutputWithContext(context.Background())
}

func (i TransportIpv6TrackerGroupFeatureArray) ToTransportIpv6TrackerGroupFeatureArrayOutputWithContext(ctx context.Context) TransportIpv6TrackerGroupFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportIpv6TrackerGroupFeatureArrayOutput)
}

// TransportIpv6TrackerGroupFeatureMapInput is an input type that accepts TransportIpv6TrackerGroupFeatureMap and TransportIpv6TrackerGroupFeatureMapOutput values.
// You can construct a concrete instance of `TransportIpv6TrackerGroupFeatureMapInput` via:
//
//	TransportIpv6TrackerGroupFeatureMap{ "key": TransportIpv6TrackerGroupFeatureArgs{...} }
type TransportIpv6TrackerGroupFeatureMapInput interface {
	pulumi.Input

	ToTransportIpv6TrackerGroupFeatureMapOutput() TransportIpv6TrackerGroupFeatureMapOutput
	ToTransportIpv6TrackerGroupFeatureMapOutputWithContext(context.Context) TransportIpv6TrackerGroupFeatureMapOutput
}

type TransportIpv6TrackerGroupFeatureMap map[string]TransportIpv6TrackerGroupFeatureInput

func (TransportIpv6TrackerGroupFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportIpv6TrackerGroupFeature)(nil)).Elem()
}

func (i TransportIpv6TrackerGroupFeatureMap) ToTransportIpv6TrackerGroupFeatureMapOutput() TransportIpv6TrackerGroupFeatureMapOutput {
	return i.ToTransportIpv6TrackerGroupFeatureMapOutputWithContext(context.Background())
}

func (i TransportIpv6TrackerGroupFeatureMap) ToTransportIpv6TrackerGroupFeatureMapOutputWithContext(ctx context.Context) TransportIpv6TrackerGroupFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportIpv6TrackerGroupFeatureMapOutput)
}

type TransportIpv6TrackerGroupFeatureOutput struct{ *pulumi.OutputState }

func (TransportIpv6TrackerGroupFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportIpv6TrackerGroupFeature)(nil)).Elem()
}

func (o TransportIpv6TrackerGroupFeatureOutput) ToTransportIpv6TrackerGroupFeatureOutput() TransportIpv6TrackerGroupFeatureOutput {
	return o
}

func (o TransportIpv6TrackerGroupFeatureOutput) ToTransportIpv6TrackerGroupFeatureOutputWithContext(ctx context.Context) TransportIpv6TrackerGroupFeatureOutput {
	return o
}

// The description of the Feature
func (o TransportIpv6TrackerGroupFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerGroupFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o TransportIpv6TrackerGroupFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerGroupFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The name of the Feature
func (o TransportIpv6TrackerGroupFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerGroupFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// tracker ref list combine boolean and or
//   - Choices: `and`, `or`
//   - Default value: `or`
func (o TransportIpv6TrackerGroupFeatureOutput) TrackerBoolean() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerGroupFeature) pulumi.StringPtrOutput { return v.TrackerBoolean }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportIpv6TrackerGroupFeatureOutput) TrackerBooleanVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerGroupFeature) pulumi.StringPtrOutput { return v.TrackerBooleanVariable }).(pulumi.StringPtrOutput)
}

// trackers ref list
func (o TransportIpv6TrackerGroupFeatureOutput) TrackerElements() TransportIpv6TrackerGroupFeatureTrackerElementArrayOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerGroupFeature) TransportIpv6TrackerGroupFeatureTrackerElementArrayOutput {
		return v.TrackerElements
	}).(TransportIpv6TrackerGroupFeatureTrackerElementArrayOutput)
}

// Tracker Name
func (o TransportIpv6TrackerGroupFeatureOutput) TrackerName() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerGroupFeature) pulumi.StringOutput { return v.TrackerName }).(pulumi.StringOutput)
}

// Variable name
func (o TransportIpv6TrackerGroupFeatureOutput) TrackerNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerGroupFeature) pulumi.StringPtrOutput { return v.TrackerNameVariable }).(pulumi.StringPtrOutput)
}

// The version of the Feature
func (o TransportIpv6TrackerGroupFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *TransportIpv6TrackerGroupFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type TransportIpv6TrackerGroupFeatureArrayOutput struct{ *pulumi.OutputState }

func (TransportIpv6TrackerGroupFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportIpv6TrackerGroupFeature)(nil)).Elem()
}

func (o TransportIpv6TrackerGroupFeatureArrayOutput) ToTransportIpv6TrackerGroupFeatureArrayOutput() TransportIpv6TrackerGroupFeatureArrayOutput {
	return o
}

func (o TransportIpv6TrackerGroupFeatureArrayOutput) ToTransportIpv6TrackerGroupFeatureArrayOutputWithContext(ctx context.Context) TransportIpv6TrackerGroupFeatureArrayOutput {
	return o
}

func (o TransportIpv6TrackerGroupFeatureArrayOutput) Index(i pulumi.IntInput) TransportIpv6TrackerGroupFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransportIpv6TrackerGroupFeature {
		return vs[0].([]*TransportIpv6TrackerGroupFeature)[vs[1].(int)]
	}).(TransportIpv6TrackerGroupFeatureOutput)
}

type TransportIpv6TrackerGroupFeatureMapOutput struct{ *pulumi.OutputState }

func (TransportIpv6TrackerGroupFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportIpv6TrackerGroupFeature)(nil)).Elem()
}

func (o TransportIpv6TrackerGroupFeatureMapOutput) ToTransportIpv6TrackerGroupFeatureMapOutput() TransportIpv6TrackerGroupFeatureMapOutput {
	return o
}

func (o TransportIpv6TrackerGroupFeatureMapOutput) ToTransportIpv6TrackerGroupFeatureMapOutputWithContext(ctx context.Context) TransportIpv6TrackerGroupFeatureMapOutput {
	return o
}

func (o TransportIpv6TrackerGroupFeatureMapOutput) MapIndex(k pulumi.StringInput) TransportIpv6TrackerGroupFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransportIpv6TrackerGroupFeature {
		return vs[0].(map[string]*TransportIpv6TrackerGroupFeature)[vs[1].(string)]
	}).(TransportIpv6TrackerGroupFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransportIpv6TrackerGroupFeatureInput)(nil)).Elem(), &TransportIpv6TrackerGroupFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportIpv6TrackerGroupFeatureArrayInput)(nil)).Elem(), TransportIpv6TrackerGroupFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportIpv6TrackerGroupFeatureMapInput)(nil)).Elem(), TransportIpv6TrackerGroupFeatureMap{})
	pulumi.RegisterOutputType(TransportIpv6TrackerGroupFeatureOutput{})
	pulumi.RegisterOutputType(TransportIpv6TrackerGroupFeatureArrayOutput{})
	pulumi.RegisterOutputType(TransportIpv6TrackerGroupFeatureMapOutput{})
}
