// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a TLOC List Policy Object .
//
// ## Example Usage
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import sdwan:index/tlocListPolicyObject:TlocListPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type TlocListPolicyObject struct {
	pulumi.CustomResourceState

	// List of entries
	Entries TlocListPolicyObjectEntryArrayOutput `pulumi:"entries"`
	// The name of the policy object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewTlocListPolicyObject registers a new resource with the given unique name, arguments, and options.
func NewTlocListPolicyObject(ctx *pulumi.Context,
	name string, args *TlocListPolicyObjectArgs, opts ...pulumi.ResourceOption) (*TlocListPolicyObject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TlocListPolicyObject
	err := ctx.RegisterResource("sdwan:index/tlocListPolicyObject:TlocListPolicyObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTlocListPolicyObject gets an existing TlocListPolicyObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTlocListPolicyObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TlocListPolicyObjectState, opts ...pulumi.ResourceOption) (*TlocListPolicyObject, error) {
	var resource TlocListPolicyObject
	err := ctx.ReadResource("sdwan:index/tlocListPolicyObject:TlocListPolicyObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TlocListPolicyObject resources.
type tlocListPolicyObjectState struct {
	// List of entries
	Entries []TlocListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type TlocListPolicyObjectState struct {
	// List of entries
	Entries TlocListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (TlocListPolicyObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*tlocListPolicyObjectState)(nil)).Elem()
}

type tlocListPolicyObjectArgs struct {
	// List of entries
	Entries []TlocListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a TlocListPolicyObject resource.
type TlocListPolicyObjectArgs struct {
	// List of entries
	Entries TlocListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
}

func (TlocListPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tlocListPolicyObjectArgs)(nil)).Elem()
}

type TlocListPolicyObjectInput interface {
	pulumi.Input

	ToTlocListPolicyObjectOutput() TlocListPolicyObjectOutput
	ToTlocListPolicyObjectOutputWithContext(ctx context.Context) TlocListPolicyObjectOutput
}

func (*TlocListPolicyObject) ElementType() reflect.Type {
	return reflect.TypeOf((**TlocListPolicyObject)(nil)).Elem()
}

func (i *TlocListPolicyObject) ToTlocListPolicyObjectOutput() TlocListPolicyObjectOutput {
	return i.ToTlocListPolicyObjectOutputWithContext(context.Background())
}

func (i *TlocListPolicyObject) ToTlocListPolicyObjectOutputWithContext(ctx context.Context) TlocListPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlocListPolicyObjectOutput)
}

// TlocListPolicyObjectArrayInput is an input type that accepts TlocListPolicyObjectArray and TlocListPolicyObjectArrayOutput values.
// You can construct a concrete instance of `TlocListPolicyObjectArrayInput` via:
//
//	TlocListPolicyObjectArray{ TlocListPolicyObjectArgs{...} }
type TlocListPolicyObjectArrayInput interface {
	pulumi.Input

	ToTlocListPolicyObjectArrayOutput() TlocListPolicyObjectArrayOutput
	ToTlocListPolicyObjectArrayOutputWithContext(context.Context) TlocListPolicyObjectArrayOutput
}

type TlocListPolicyObjectArray []TlocListPolicyObjectInput

func (TlocListPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TlocListPolicyObject)(nil)).Elem()
}

func (i TlocListPolicyObjectArray) ToTlocListPolicyObjectArrayOutput() TlocListPolicyObjectArrayOutput {
	return i.ToTlocListPolicyObjectArrayOutputWithContext(context.Background())
}

func (i TlocListPolicyObjectArray) ToTlocListPolicyObjectArrayOutputWithContext(ctx context.Context) TlocListPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlocListPolicyObjectArrayOutput)
}

// TlocListPolicyObjectMapInput is an input type that accepts TlocListPolicyObjectMap and TlocListPolicyObjectMapOutput values.
// You can construct a concrete instance of `TlocListPolicyObjectMapInput` via:
//
//	TlocListPolicyObjectMap{ "key": TlocListPolicyObjectArgs{...} }
type TlocListPolicyObjectMapInput interface {
	pulumi.Input

	ToTlocListPolicyObjectMapOutput() TlocListPolicyObjectMapOutput
	ToTlocListPolicyObjectMapOutputWithContext(context.Context) TlocListPolicyObjectMapOutput
}

type TlocListPolicyObjectMap map[string]TlocListPolicyObjectInput

func (TlocListPolicyObjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TlocListPolicyObject)(nil)).Elem()
}

func (i TlocListPolicyObjectMap) ToTlocListPolicyObjectMapOutput() TlocListPolicyObjectMapOutput {
	return i.ToTlocListPolicyObjectMapOutputWithContext(context.Background())
}

func (i TlocListPolicyObjectMap) ToTlocListPolicyObjectMapOutputWithContext(ctx context.Context) TlocListPolicyObjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlocListPolicyObjectMapOutput)
}

type TlocListPolicyObjectOutput struct{ *pulumi.OutputState }

func (TlocListPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TlocListPolicyObject)(nil)).Elem()
}

func (o TlocListPolicyObjectOutput) ToTlocListPolicyObjectOutput() TlocListPolicyObjectOutput {
	return o
}

func (o TlocListPolicyObjectOutput) ToTlocListPolicyObjectOutputWithContext(ctx context.Context) TlocListPolicyObjectOutput {
	return o
}

// List of entries
func (o TlocListPolicyObjectOutput) Entries() TlocListPolicyObjectEntryArrayOutput {
	return o.ApplyT(func(v *TlocListPolicyObject) TlocListPolicyObjectEntryArrayOutput { return v.Entries }).(TlocListPolicyObjectEntryArrayOutput)
}

// The name of the policy object
func (o TlocListPolicyObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TlocListPolicyObject) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the object
func (o TlocListPolicyObjectOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *TlocListPolicyObject) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type TlocListPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (TlocListPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TlocListPolicyObject)(nil)).Elem()
}

func (o TlocListPolicyObjectArrayOutput) ToTlocListPolicyObjectArrayOutput() TlocListPolicyObjectArrayOutput {
	return o
}

func (o TlocListPolicyObjectArrayOutput) ToTlocListPolicyObjectArrayOutputWithContext(ctx context.Context) TlocListPolicyObjectArrayOutput {
	return o
}

func (o TlocListPolicyObjectArrayOutput) Index(i pulumi.IntInput) TlocListPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TlocListPolicyObject {
		return vs[0].([]*TlocListPolicyObject)[vs[1].(int)]
	}).(TlocListPolicyObjectOutput)
}

type TlocListPolicyObjectMapOutput struct{ *pulumi.OutputState }

func (TlocListPolicyObjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TlocListPolicyObject)(nil)).Elem()
}

func (o TlocListPolicyObjectMapOutput) ToTlocListPolicyObjectMapOutput() TlocListPolicyObjectMapOutput {
	return o
}

func (o TlocListPolicyObjectMapOutput) ToTlocListPolicyObjectMapOutputWithContext(ctx context.Context) TlocListPolicyObjectMapOutput {
	return o
}

func (o TlocListPolicyObjectMapOutput) MapIndex(k pulumi.StringInput) TlocListPolicyObjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TlocListPolicyObject {
		return vs[0].(map[string]*TlocListPolicyObject)[vs[1].(string)]
	}).(TlocListPolicyObjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TlocListPolicyObjectInput)(nil)).Elem(), &TlocListPolicyObject{})
	pulumi.RegisterInputType(reflect.TypeOf((*TlocListPolicyObjectArrayInput)(nil)).Elem(), TlocListPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TlocListPolicyObjectMapInput)(nil)).Elem(), TlocListPolicyObjectMap{})
	pulumi.RegisterOutputType(TlocListPolicyObjectOutput{})
	pulumi.RegisterOutputType(TlocListPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(TlocListPolicyObjectMapOutput{})
}
