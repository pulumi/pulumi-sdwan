// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Transport Cellular Profile Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewTransportCellularProfileFeature(ctx, "example", &sdwan.TransportCellularProfileFeatureArgs{
//				Name:                   pulumi.String("Example"),
//				Description:            pulumi.String("My Example"),
//				FeatureProfileId:       pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				ProfileId:              pulumi.Int(1),
//				AccessPointName:        pulumi.String("apn1"),
//				RequiresAuthentication: pulumi.Bool(true),
//				AuthenticationType:     pulumi.String("pap"),
//				ProfileUsername:        pulumi.String("example"),
//				ProfilePassword:        pulumi.String("example123!"),
//				PacketDataNetworkType:  pulumi.String("ipv4"),
//				NoOverwrite:            pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "transport_cellular_profile_feature_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/transportCellularProfileFeature:TransportCellularProfileFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type TransportCellularProfileFeature struct {
	pulumi.CustomResourceState

	// Set access point name
	AccessPointName pulumi.StringPtrOutput `pulumi:"accessPointName"`
	// Variable name
	AccessPointNameVariable pulumi.StringPtrOutput `pulumi:"accessPointNameVariable"`
	// Set authentication type, Attribute conditional on `requiresAuthentication` being equal to `true`
	//   - Choices: `pap`, `chap`, `papChap`
	AuthenticationType pulumi.StringPtrOutput `pulumi:"authenticationType"`
	// Variable name, Attribute conditional on `requiresAuthentication` being equal to `true`
	AuthenticationTypeVariable pulumi.StringPtrOutput `pulumi:"authenticationTypeVariable"`
	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// No Overwrite
	NoOverwrite pulumi.BoolPtrOutput `pulumi:"noOverwrite"`
	// Variable name
	NoOverwriteVariable pulumi.StringPtrOutput `pulumi:"noOverwriteVariable"`
	// Set packet data network type
	//   - Choices: `ipv4`, `ipv4v6`, `ipv6`
	//   - Default value: `ipv4`
	PacketDataNetworkType pulumi.StringPtrOutput `pulumi:"packetDataNetworkType"`
	// Variable name
	PacketDataNetworkTypeVariable pulumi.StringPtrOutput `pulumi:"packetDataNetworkTypeVariable"`
	// Set Profile ID
	//   - Range: `1`-`16`
	ProfileId pulumi.IntPtrOutput `pulumi:"profileId"`
	// Variable name
	ProfileIdVariable pulumi.StringPtrOutput `pulumi:"profileIdVariable"`
	// Set the profile password, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfilePassword pulumi.StringPtrOutput `pulumi:"profilePassword"`
	// Variable name, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfilePasswordVariable pulumi.StringPtrOutput `pulumi:"profilePasswordVariable"`
	// Set the profile username, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfileUsername pulumi.StringPtrOutput `pulumi:"profileUsername"`
	// Variable name, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfileUsernameVariable pulumi.StringPtrOutput `pulumi:"profileUsernameVariable"`
	// Require authentication type
	//   - Default value: `false`
	RequiresAuthentication pulumi.BoolPtrOutput `pulumi:"requiresAuthentication"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewTransportCellularProfileFeature registers a new resource with the given unique name, arguments, and options.
func NewTransportCellularProfileFeature(ctx *pulumi.Context,
	name string, args *TransportCellularProfileFeatureArgs, opts ...pulumi.ResourceOption) (*TransportCellularProfileFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransportCellularProfileFeature
	err := ctx.RegisterResource("sdwan:index/transportCellularProfileFeature:TransportCellularProfileFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransportCellularProfileFeature gets an existing TransportCellularProfileFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransportCellularProfileFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransportCellularProfileFeatureState, opts ...pulumi.ResourceOption) (*TransportCellularProfileFeature, error) {
	var resource TransportCellularProfileFeature
	err := ctx.ReadResource("sdwan:index/transportCellularProfileFeature:TransportCellularProfileFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransportCellularProfileFeature resources.
type transportCellularProfileFeatureState struct {
	// Set access point name
	AccessPointName *string `pulumi:"accessPointName"`
	// Variable name
	AccessPointNameVariable *string `pulumi:"accessPointNameVariable"`
	// Set authentication type, Attribute conditional on `requiresAuthentication` being equal to `true`
	//   - Choices: `pap`, `chap`, `papChap`
	AuthenticationType *string `pulumi:"authenticationType"`
	// Variable name, Attribute conditional on `requiresAuthentication` being equal to `true`
	AuthenticationTypeVariable *string `pulumi:"authenticationTypeVariable"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// No Overwrite
	NoOverwrite *bool `pulumi:"noOverwrite"`
	// Variable name
	NoOverwriteVariable *string `pulumi:"noOverwriteVariable"`
	// Set packet data network type
	//   - Choices: `ipv4`, `ipv4v6`, `ipv6`
	//   - Default value: `ipv4`
	PacketDataNetworkType *string `pulumi:"packetDataNetworkType"`
	// Variable name
	PacketDataNetworkTypeVariable *string `pulumi:"packetDataNetworkTypeVariable"`
	// Set Profile ID
	//   - Range: `1`-`16`
	ProfileId *int `pulumi:"profileId"`
	// Variable name
	ProfileIdVariable *string `pulumi:"profileIdVariable"`
	// Set the profile password, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfilePassword *string `pulumi:"profilePassword"`
	// Variable name, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfilePasswordVariable *string `pulumi:"profilePasswordVariable"`
	// Set the profile username, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfileUsername *string `pulumi:"profileUsername"`
	// Variable name, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfileUsernameVariable *string `pulumi:"profileUsernameVariable"`
	// Require authentication type
	//   - Default value: `false`
	RequiresAuthentication *bool `pulumi:"requiresAuthentication"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type TransportCellularProfileFeatureState struct {
	// Set access point name
	AccessPointName pulumi.StringPtrInput
	// Variable name
	AccessPointNameVariable pulumi.StringPtrInput
	// Set authentication type, Attribute conditional on `requiresAuthentication` being equal to `true`
	//   - Choices: `pap`, `chap`, `papChap`
	AuthenticationType pulumi.StringPtrInput
	// Variable name, Attribute conditional on `requiresAuthentication` being equal to `true`
	AuthenticationTypeVariable pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// No Overwrite
	NoOverwrite pulumi.BoolPtrInput
	// Variable name
	NoOverwriteVariable pulumi.StringPtrInput
	// Set packet data network type
	//   - Choices: `ipv4`, `ipv4v6`, `ipv6`
	//   - Default value: `ipv4`
	PacketDataNetworkType pulumi.StringPtrInput
	// Variable name
	PacketDataNetworkTypeVariable pulumi.StringPtrInput
	// Set Profile ID
	//   - Range: `1`-`16`
	ProfileId pulumi.IntPtrInput
	// Variable name
	ProfileIdVariable pulumi.StringPtrInput
	// Set the profile password, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfilePassword pulumi.StringPtrInput
	// Variable name, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfilePasswordVariable pulumi.StringPtrInput
	// Set the profile username, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfileUsername pulumi.StringPtrInput
	// Variable name, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfileUsernameVariable pulumi.StringPtrInput
	// Require authentication type
	//   - Default value: `false`
	RequiresAuthentication pulumi.BoolPtrInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (TransportCellularProfileFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*transportCellularProfileFeatureState)(nil)).Elem()
}

type transportCellularProfileFeatureArgs struct {
	// Set access point name
	AccessPointName *string `pulumi:"accessPointName"`
	// Variable name
	AccessPointNameVariable *string `pulumi:"accessPointNameVariable"`
	// Set authentication type, Attribute conditional on `requiresAuthentication` being equal to `true`
	//   - Choices: `pap`, `chap`, `papChap`
	AuthenticationType *string `pulumi:"authenticationType"`
	// Variable name, Attribute conditional on `requiresAuthentication` being equal to `true`
	AuthenticationTypeVariable *string `pulumi:"authenticationTypeVariable"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// No Overwrite
	NoOverwrite *bool `pulumi:"noOverwrite"`
	// Variable name
	NoOverwriteVariable *string `pulumi:"noOverwriteVariable"`
	// Set packet data network type
	//   - Choices: `ipv4`, `ipv4v6`, `ipv6`
	//   - Default value: `ipv4`
	PacketDataNetworkType *string `pulumi:"packetDataNetworkType"`
	// Variable name
	PacketDataNetworkTypeVariable *string `pulumi:"packetDataNetworkTypeVariable"`
	// Set Profile ID
	//   - Range: `1`-`16`
	ProfileId *int `pulumi:"profileId"`
	// Variable name
	ProfileIdVariable *string `pulumi:"profileIdVariable"`
	// Set the profile password, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfilePassword *string `pulumi:"profilePassword"`
	// Variable name, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfilePasswordVariable *string `pulumi:"profilePasswordVariable"`
	// Set the profile username, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfileUsername *string `pulumi:"profileUsername"`
	// Variable name, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfileUsernameVariable *string `pulumi:"profileUsernameVariable"`
	// Require authentication type
	//   - Default value: `false`
	RequiresAuthentication *bool `pulumi:"requiresAuthentication"`
}

// The set of arguments for constructing a TransportCellularProfileFeature resource.
type TransportCellularProfileFeatureArgs struct {
	// Set access point name
	AccessPointName pulumi.StringPtrInput
	// Variable name
	AccessPointNameVariable pulumi.StringPtrInput
	// Set authentication type, Attribute conditional on `requiresAuthentication` being equal to `true`
	//   - Choices: `pap`, `chap`, `papChap`
	AuthenticationType pulumi.StringPtrInput
	// Variable name, Attribute conditional on `requiresAuthentication` being equal to `true`
	AuthenticationTypeVariable pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// No Overwrite
	NoOverwrite pulumi.BoolPtrInput
	// Variable name
	NoOverwriteVariable pulumi.StringPtrInput
	// Set packet data network type
	//   - Choices: `ipv4`, `ipv4v6`, `ipv6`
	//   - Default value: `ipv4`
	PacketDataNetworkType pulumi.StringPtrInput
	// Variable name
	PacketDataNetworkTypeVariable pulumi.StringPtrInput
	// Set Profile ID
	//   - Range: `1`-`16`
	ProfileId pulumi.IntPtrInput
	// Variable name
	ProfileIdVariable pulumi.StringPtrInput
	// Set the profile password, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfilePassword pulumi.StringPtrInput
	// Variable name, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfilePasswordVariable pulumi.StringPtrInput
	// Set the profile username, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfileUsername pulumi.StringPtrInput
	// Variable name, Attribute conditional on `requiresAuthentication` being equal to `true`
	ProfileUsernameVariable pulumi.StringPtrInput
	// Require authentication type
	//   - Default value: `false`
	RequiresAuthentication pulumi.BoolPtrInput
}

func (TransportCellularProfileFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transportCellularProfileFeatureArgs)(nil)).Elem()
}

type TransportCellularProfileFeatureInput interface {
	pulumi.Input

	ToTransportCellularProfileFeatureOutput() TransportCellularProfileFeatureOutput
	ToTransportCellularProfileFeatureOutputWithContext(ctx context.Context) TransportCellularProfileFeatureOutput
}

func (*TransportCellularProfileFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportCellularProfileFeature)(nil)).Elem()
}

func (i *TransportCellularProfileFeature) ToTransportCellularProfileFeatureOutput() TransportCellularProfileFeatureOutput {
	return i.ToTransportCellularProfileFeatureOutputWithContext(context.Background())
}

func (i *TransportCellularProfileFeature) ToTransportCellularProfileFeatureOutputWithContext(ctx context.Context) TransportCellularProfileFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportCellularProfileFeatureOutput)
}

// TransportCellularProfileFeatureArrayInput is an input type that accepts TransportCellularProfileFeatureArray and TransportCellularProfileFeatureArrayOutput values.
// You can construct a concrete instance of `TransportCellularProfileFeatureArrayInput` via:
//
//	TransportCellularProfileFeatureArray{ TransportCellularProfileFeatureArgs{...} }
type TransportCellularProfileFeatureArrayInput interface {
	pulumi.Input

	ToTransportCellularProfileFeatureArrayOutput() TransportCellularProfileFeatureArrayOutput
	ToTransportCellularProfileFeatureArrayOutputWithContext(context.Context) TransportCellularProfileFeatureArrayOutput
}

type TransportCellularProfileFeatureArray []TransportCellularProfileFeatureInput

func (TransportCellularProfileFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportCellularProfileFeature)(nil)).Elem()
}

func (i TransportCellularProfileFeatureArray) ToTransportCellularProfileFeatureArrayOutput() TransportCellularProfileFeatureArrayOutput {
	return i.ToTransportCellularProfileFeatureArrayOutputWithContext(context.Background())
}

func (i TransportCellularProfileFeatureArray) ToTransportCellularProfileFeatureArrayOutputWithContext(ctx context.Context) TransportCellularProfileFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportCellularProfileFeatureArrayOutput)
}

// TransportCellularProfileFeatureMapInput is an input type that accepts TransportCellularProfileFeatureMap and TransportCellularProfileFeatureMapOutput values.
// You can construct a concrete instance of `TransportCellularProfileFeatureMapInput` via:
//
//	TransportCellularProfileFeatureMap{ "key": TransportCellularProfileFeatureArgs{...} }
type TransportCellularProfileFeatureMapInput interface {
	pulumi.Input

	ToTransportCellularProfileFeatureMapOutput() TransportCellularProfileFeatureMapOutput
	ToTransportCellularProfileFeatureMapOutputWithContext(context.Context) TransportCellularProfileFeatureMapOutput
}

type TransportCellularProfileFeatureMap map[string]TransportCellularProfileFeatureInput

func (TransportCellularProfileFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportCellularProfileFeature)(nil)).Elem()
}

func (i TransportCellularProfileFeatureMap) ToTransportCellularProfileFeatureMapOutput() TransportCellularProfileFeatureMapOutput {
	return i.ToTransportCellularProfileFeatureMapOutputWithContext(context.Background())
}

func (i TransportCellularProfileFeatureMap) ToTransportCellularProfileFeatureMapOutputWithContext(ctx context.Context) TransportCellularProfileFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportCellularProfileFeatureMapOutput)
}

type TransportCellularProfileFeatureOutput struct{ *pulumi.OutputState }

func (TransportCellularProfileFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportCellularProfileFeature)(nil)).Elem()
}

func (o TransportCellularProfileFeatureOutput) ToTransportCellularProfileFeatureOutput() TransportCellularProfileFeatureOutput {
	return o
}

func (o TransportCellularProfileFeatureOutput) ToTransportCellularProfileFeatureOutputWithContext(ctx context.Context) TransportCellularProfileFeatureOutput {
	return o
}

// Set access point name
func (o TransportCellularProfileFeatureOutput) AccessPointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.StringPtrOutput { return v.AccessPointName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportCellularProfileFeatureOutput) AccessPointNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.StringPtrOutput { return v.AccessPointNameVariable }).(pulumi.StringPtrOutput)
}

// Set authentication type, Attribute conditional on `requiresAuthentication` being equal to `true`
//   - Choices: `pap`, `chap`, `papChap`
func (o TransportCellularProfileFeatureOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.StringPtrOutput { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// Variable name, Attribute conditional on `requiresAuthentication` being equal to `true`
func (o TransportCellularProfileFeatureOutput) AuthenticationTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.StringPtrOutput { return v.AuthenticationTypeVariable }).(pulumi.StringPtrOutput)
}

// The description of the Feature
func (o TransportCellularProfileFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o TransportCellularProfileFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The name of the Feature
func (o TransportCellularProfileFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// No Overwrite
func (o TransportCellularProfileFeatureOutput) NoOverwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.BoolPtrOutput { return v.NoOverwrite }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o TransportCellularProfileFeatureOutput) NoOverwriteVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.StringPtrOutput { return v.NoOverwriteVariable }).(pulumi.StringPtrOutput)
}

// Set packet data network type
//   - Choices: `ipv4`, `ipv4v6`, `ipv6`
//   - Default value: `ipv4`
func (o TransportCellularProfileFeatureOutput) PacketDataNetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.StringPtrOutput { return v.PacketDataNetworkType }).(pulumi.StringPtrOutput)
}

// Variable name
func (o TransportCellularProfileFeatureOutput) PacketDataNetworkTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.StringPtrOutput {
		return v.PacketDataNetworkTypeVariable
	}).(pulumi.StringPtrOutput)
}

// Set Profile ID
//   - Range: `1`-`16`
func (o TransportCellularProfileFeatureOutput) ProfileId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.IntPtrOutput { return v.ProfileId }).(pulumi.IntPtrOutput)
}

// Variable name
func (o TransportCellularProfileFeatureOutput) ProfileIdVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.StringPtrOutput { return v.ProfileIdVariable }).(pulumi.StringPtrOutput)
}

// Set the profile password, Attribute conditional on `requiresAuthentication` being equal to `true`
func (o TransportCellularProfileFeatureOutput) ProfilePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.StringPtrOutput { return v.ProfilePassword }).(pulumi.StringPtrOutput)
}

// Variable name, Attribute conditional on `requiresAuthentication` being equal to `true`
func (o TransportCellularProfileFeatureOutput) ProfilePasswordVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.StringPtrOutput { return v.ProfilePasswordVariable }).(pulumi.StringPtrOutput)
}

// Set the profile username, Attribute conditional on `requiresAuthentication` being equal to `true`
func (o TransportCellularProfileFeatureOutput) ProfileUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.StringPtrOutput { return v.ProfileUsername }).(pulumi.StringPtrOutput)
}

// Variable name, Attribute conditional on `requiresAuthentication` being equal to `true`
func (o TransportCellularProfileFeatureOutput) ProfileUsernameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.StringPtrOutput { return v.ProfileUsernameVariable }).(pulumi.StringPtrOutput)
}

// Require authentication type
//   - Default value: `false`
func (o TransportCellularProfileFeatureOutput) RequiresAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.BoolPtrOutput { return v.RequiresAuthentication }).(pulumi.BoolPtrOutput)
}

// The version of the Feature
func (o TransportCellularProfileFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *TransportCellularProfileFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type TransportCellularProfileFeatureArrayOutput struct{ *pulumi.OutputState }

func (TransportCellularProfileFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransportCellularProfileFeature)(nil)).Elem()
}

func (o TransportCellularProfileFeatureArrayOutput) ToTransportCellularProfileFeatureArrayOutput() TransportCellularProfileFeatureArrayOutput {
	return o
}

func (o TransportCellularProfileFeatureArrayOutput) ToTransportCellularProfileFeatureArrayOutputWithContext(ctx context.Context) TransportCellularProfileFeatureArrayOutput {
	return o
}

func (o TransportCellularProfileFeatureArrayOutput) Index(i pulumi.IntInput) TransportCellularProfileFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransportCellularProfileFeature {
		return vs[0].([]*TransportCellularProfileFeature)[vs[1].(int)]
	}).(TransportCellularProfileFeatureOutput)
}

type TransportCellularProfileFeatureMapOutput struct{ *pulumi.OutputState }

func (TransportCellularProfileFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransportCellularProfileFeature)(nil)).Elem()
}

func (o TransportCellularProfileFeatureMapOutput) ToTransportCellularProfileFeatureMapOutput() TransportCellularProfileFeatureMapOutput {
	return o
}

func (o TransportCellularProfileFeatureMapOutput) ToTransportCellularProfileFeatureMapOutputWithContext(ctx context.Context) TransportCellularProfileFeatureMapOutput {
	return o
}

func (o TransportCellularProfileFeatureMapOutput) MapIndex(k pulumi.StringInput) TransportCellularProfileFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransportCellularProfileFeature {
		return vs[0].(map[string]*TransportCellularProfileFeature)[vs[1].(string)]
	}).(TransportCellularProfileFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransportCellularProfileFeatureInput)(nil)).Elem(), &TransportCellularProfileFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportCellularProfileFeatureArrayInput)(nil)).Elem(), TransportCellularProfileFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransportCellularProfileFeatureMapInput)(nil)).Elem(), TransportCellularProfileFeatureMap{})
	pulumi.RegisterOutputType(TransportCellularProfileFeatureOutput{})
	pulumi.RegisterOutputType(TransportCellularProfileFeatureArrayOutput{})
	pulumi.RegisterOutputType(TransportCellularProfileFeatureMapOutput{})
}
