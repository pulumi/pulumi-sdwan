// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Service Tracker Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewServiceTrackerFeature(ctx, "example", &sdwan.ServiceTrackerFeatureArgs{
//				Name:                pulumi.String("Example"),
//				Description:         pulumi.String("My Example"),
//				FeatureProfileId:    pulumi.String("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"),
//				TrackerName:         pulumi.String("TRACKER_2"),
//				EndpointApiUrl:      pulumi.String("google.com"),
//				EndpointDnsName:     pulumi.String("google.com"),
//				EndpointIp:          pulumi.String("1.2.3.4"),
//				Protocol:            pulumi.String("tcp"),
//				Port:                pulumi.Int(123),
//				Interval:            pulumi.Int(30),
//				Multiplier:          pulumi.Int(3),
//				Threshold:           pulumi.Int(300),
//				EndpointTrackerType: pulumi.String("static-route"),
//				TrackerType:         pulumi.String("endpoint"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "service_tracker_feature_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/serviceTrackerFeature:ServiceTrackerFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type ServiceTrackerFeature struct {
	pulumi.CustomResourceState

	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// API url of endpoint
	EndpointApiUrl pulumi.StringPtrOutput `pulumi:"endpointApiUrl"`
	// Variable name
	EndpointApiUrlVariable pulumi.StringPtrOutput `pulumi:"endpointApiUrlVariable"`
	// Endpoint DNS Name
	EndpointDnsName pulumi.StringPtrOutput `pulumi:"endpointDnsName"`
	// Variable name
	EndpointDnsNameVariable pulumi.StringPtrOutput `pulumi:"endpointDnsNameVariable"`
	// Endpoint IP
	EndpointIp pulumi.StringPtrOutput `pulumi:"endpointIp"`
	// Variable name
	EndpointIpVariable pulumi.StringPtrOutput `pulumi:"endpointIpVariable"`
	// Endpoint Tracker Type - Choices: `static-route` - Default value: `static-route`
	EndpointTrackerType pulumi.StringPtrOutput `pulumi:"endpointTrackerType"`
	// Variable name
	EndpointTrackerTypeVariable pulumi.StringPtrOutput `pulumi:"endpointTrackerTypeVariable"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// Interval - Range: `20`-`600` - Default value: `60`
	Interval pulumi.IntPtrOutput `pulumi:"interval"`
	// Variable name
	IntervalVariable pulumi.StringPtrOutput `pulumi:"intervalVariable"`
	// Multiplier - Range: `1`-`10` - Default value: `3`
	Multiplier pulumi.IntPtrOutput `pulumi:"multiplier"`
	// Variable name
	MultiplierVariable pulumi.StringPtrOutput `pulumi:"multiplierVariable"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// - Range: `1`-`65535`
	Port pulumi.IntPtrOutput `pulumi:"port"`
	// Variable name
	PortVariable pulumi.StringPtrOutput `pulumi:"portVariable"`
	// - Choices: `tcp`, `udp`
	Protocol pulumi.StringPtrOutput `pulumi:"protocol"`
	// Variable name
	ProtocolVariable pulumi.StringPtrOutput `pulumi:"protocolVariable"`
	// Threshold - Range: `100`-`1000` - Default value: `300`
	Threshold pulumi.IntPtrOutput `pulumi:"threshold"`
	// Variable name
	ThresholdVariable pulumi.StringPtrOutput `pulumi:"thresholdVariable"`
	// Tracker Name
	TrackerName pulumi.StringPtrOutput `pulumi:"trackerName"`
	// Variable name
	TrackerNameVariable pulumi.StringPtrOutput `pulumi:"trackerNameVariable"`
	// Tracker Type - Choices: `endpoint` - Default value: `endpoint`
	TrackerType pulumi.StringPtrOutput `pulumi:"trackerType"`
	// Variable name
	TrackerTypeVariable pulumi.StringPtrOutput `pulumi:"trackerTypeVariable"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewServiceTrackerFeature registers a new resource with the given unique name, arguments, and options.
func NewServiceTrackerFeature(ctx *pulumi.Context,
	name string, args *ServiceTrackerFeatureArgs, opts ...pulumi.ResourceOption) (*ServiceTrackerFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceTrackerFeature
	err := ctx.RegisterResource("sdwan:index/serviceTrackerFeature:ServiceTrackerFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceTrackerFeature gets an existing ServiceTrackerFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceTrackerFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceTrackerFeatureState, opts ...pulumi.ResourceOption) (*ServiceTrackerFeature, error) {
	var resource ServiceTrackerFeature
	err := ctx.ReadResource("sdwan:index/serviceTrackerFeature:ServiceTrackerFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceTrackerFeature resources.
type serviceTrackerFeatureState struct {
	// The description of the Feature
	Description *string `pulumi:"description"`
	// API url of endpoint
	EndpointApiUrl *string `pulumi:"endpointApiUrl"`
	// Variable name
	EndpointApiUrlVariable *string `pulumi:"endpointApiUrlVariable"`
	// Endpoint DNS Name
	EndpointDnsName *string `pulumi:"endpointDnsName"`
	// Variable name
	EndpointDnsNameVariable *string `pulumi:"endpointDnsNameVariable"`
	// Endpoint IP
	EndpointIp *string `pulumi:"endpointIp"`
	// Variable name
	EndpointIpVariable *string `pulumi:"endpointIpVariable"`
	// Endpoint Tracker Type - Choices: `static-route` - Default value: `static-route`
	EndpointTrackerType *string `pulumi:"endpointTrackerType"`
	// Variable name
	EndpointTrackerTypeVariable *string `pulumi:"endpointTrackerTypeVariable"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// Interval - Range: `20`-`600` - Default value: `60`
	Interval *int `pulumi:"interval"`
	// Variable name
	IntervalVariable *string `pulumi:"intervalVariable"`
	// Multiplier - Range: `1`-`10` - Default value: `3`
	Multiplier *int `pulumi:"multiplier"`
	// Variable name
	MultiplierVariable *string `pulumi:"multiplierVariable"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// - Range: `1`-`65535`
	Port *int `pulumi:"port"`
	// Variable name
	PortVariable *string `pulumi:"portVariable"`
	// - Choices: `tcp`, `udp`
	Protocol *string `pulumi:"protocol"`
	// Variable name
	ProtocolVariable *string `pulumi:"protocolVariable"`
	// Threshold - Range: `100`-`1000` - Default value: `300`
	Threshold *int `pulumi:"threshold"`
	// Variable name
	ThresholdVariable *string `pulumi:"thresholdVariable"`
	// Tracker Name
	TrackerName *string `pulumi:"trackerName"`
	// Variable name
	TrackerNameVariable *string `pulumi:"trackerNameVariable"`
	// Tracker Type - Choices: `endpoint` - Default value: `endpoint`
	TrackerType *string `pulumi:"trackerType"`
	// Variable name
	TrackerTypeVariable *string `pulumi:"trackerTypeVariable"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type ServiceTrackerFeatureState struct {
	// The description of the Feature
	Description pulumi.StringPtrInput
	// API url of endpoint
	EndpointApiUrl pulumi.StringPtrInput
	// Variable name
	EndpointApiUrlVariable pulumi.StringPtrInput
	// Endpoint DNS Name
	EndpointDnsName pulumi.StringPtrInput
	// Variable name
	EndpointDnsNameVariable pulumi.StringPtrInput
	// Endpoint IP
	EndpointIp pulumi.StringPtrInput
	// Variable name
	EndpointIpVariable pulumi.StringPtrInput
	// Endpoint Tracker Type - Choices: `static-route` - Default value: `static-route`
	EndpointTrackerType pulumi.StringPtrInput
	// Variable name
	EndpointTrackerTypeVariable pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// Interval - Range: `20`-`600` - Default value: `60`
	Interval pulumi.IntPtrInput
	// Variable name
	IntervalVariable pulumi.StringPtrInput
	// Multiplier - Range: `1`-`10` - Default value: `3`
	Multiplier pulumi.IntPtrInput
	// Variable name
	MultiplierVariable pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// - Range: `1`-`65535`
	Port pulumi.IntPtrInput
	// Variable name
	PortVariable pulumi.StringPtrInput
	// - Choices: `tcp`, `udp`
	Protocol pulumi.StringPtrInput
	// Variable name
	ProtocolVariable pulumi.StringPtrInput
	// Threshold - Range: `100`-`1000` - Default value: `300`
	Threshold pulumi.IntPtrInput
	// Variable name
	ThresholdVariable pulumi.StringPtrInput
	// Tracker Name
	TrackerName pulumi.StringPtrInput
	// Variable name
	TrackerNameVariable pulumi.StringPtrInput
	// Tracker Type - Choices: `endpoint` - Default value: `endpoint`
	TrackerType pulumi.StringPtrInput
	// Variable name
	TrackerTypeVariable pulumi.StringPtrInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (ServiceTrackerFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceTrackerFeatureState)(nil)).Elem()
}

type serviceTrackerFeatureArgs struct {
	// The description of the Feature
	Description *string `pulumi:"description"`
	// API url of endpoint
	EndpointApiUrl *string `pulumi:"endpointApiUrl"`
	// Variable name
	EndpointApiUrlVariable *string `pulumi:"endpointApiUrlVariable"`
	// Endpoint DNS Name
	EndpointDnsName *string `pulumi:"endpointDnsName"`
	// Variable name
	EndpointDnsNameVariable *string `pulumi:"endpointDnsNameVariable"`
	// Endpoint IP
	EndpointIp *string `pulumi:"endpointIp"`
	// Variable name
	EndpointIpVariable *string `pulumi:"endpointIpVariable"`
	// Endpoint Tracker Type - Choices: `static-route` - Default value: `static-route`
	EndpointTrackerType *string `pulumi:"endpointTrackerType"`
	// Variable name
	EndpointTrackerTypeVariable *string `pulumi:"endpointTrackerTypeVariable"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// Interval - Range: `20`-`600` - Default value: `60`
	Interval *int `pulumi:"interval"`
	// Variable name
	IntervalVariable *string `pulumi:"intervalVariable"`
	// Multiplier - Range: `1`-`10` - Default value: `3`
	Multiplier *int `pulumi:"multiplier"`
	// Variable name
	MultiplierVariable *string `pulumi:"multiplierVariable"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// - Range: `1`-`65535`
	Port *int `pulumi:"port"`
	// Variable name
	PortVariable *string `pulumi:"portVariable"`
	// - Choices: `tcp`, `udp`
	Protocol *string `pulumi:"protocol"`
	// Variable name
	ProtocolVariable *string `pulumi:"protocolVariable"`
	// Threshold - Range: `100`-`1000` - Default value: `300`
	Threshold *int `pulumi:"threshold"`
	// Variable name
	ThresholdVariable *string `pulumi:"thresholdVariable"`
	// Tracker Name
	TrackerName *string `pulumi:"trackerName"`
	// Variable name
	TrackerNameVariable *string `pulumi:"trackerNameVariable"`
	// Tracker Type - Choices: `endpoint` - Default value: `endpoint`
	TrackerType *string `pulumi:"trackerType"`
	// Variable name
	TrackerTypeVariable *string `pulumi:"trackerTypeVariable"`
}

// The set of arguments for constructing a ServiceTrackerFeature resource.
type ServiceTrackerFeatureArgs struct {
	// The description of the Feature
	Description pulumi.StringPtrInput
	// API url of endpoint
	EndpointApiUrl pulumi.StringPtrInput
	// Variable name
	EndpointApiUrlVariable pulumi.StringPtrInput
	// Endpoint DNS Name
	EndpointDnsName pulumi.StringPtrInput
	// Variable name
	EndpointDnsNameVariable pulumi.StringPtrInput
	// Endpoint IP
	EndpointIp pulumi.StringPtrInput
	// Variable name
	EndpointIpVariable pulumi.StringPtrInput
	// Endpoint Tracker Type - Choices: `static-route` - Default value: `static-route`
	EndpointTrackerType pulumi.StringPtrInput
	// Variable name
	EndpointTrackerTypeVariable pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// Interval - Range: `20`-`600` - Default value: `60`
	Interval pulumi.IntPtrInput
	// Variable name
	IntervalVariable pulumi.StringPtrInput
	// Multiplier - Range: `1`-`10` - Default value: `3`
	Multiplier pulumi.IntPtrInput
	// Variable name
	MultiplierVariable pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// - Range: `1`-`65535`
	Port pulumi.IntPtrInput
	// Variable name
	PortVariable pulumi.StringPtrInput
	// - Choices: `tcp`, `udp`
	Protocol pulumi.StringPtrInput
	// Variable name
	ProtocolVariable pulumi.StringPtrInput
	// Threshold - Range: `100`-`1000` - Default value: `300`
	Threshold pulumi.IntPtrInput
	// Variable name
	ThresholdVariable pulumi.StringPtrInput
	// Tracker Name
	TrackerName pulumi.StringPtrInput
	// Variable name
	TrackerNameVariable pulumi.StringPtrInput
	// Tracker Type - Choices: `endpoint` - Default value: `endpoint`
	TrackerType pulumi.StringPtrInput
	// Variable name
	TrackerTypeVariable pulumi.StringPtrInput
}

func (ServiceTrackerFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceTrackerFeatureArgs)(nil)).Elem()
}

type ServiceTrackerFeatureInput interface {
	pulumi.Input

	ToServiceTrackerFeatureOutput() ServiceTrackerFeatureOutput
	ToServiceTrackerFeatureOutputWithContext(ctx context.Context) ServiceTrackerFeatureOutput
}

func (*ServiceTrackerFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTrackerFeature)(nil)).Elem()
}

func (i *ServiceTrackerFeature) ToServiceTrackerFeatureOutput() ServiceTrackerFeatureOutput {
	return i.ToServiceTrackerFeatureOutputWithContext(context.Background())
}

func (i *ServiceTrackerFeature) ToServiceTrackerFeatureOutputWithContext(ctx context.Context) ServiceTrackerFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTrackerFeatureOutput)
}

// ServiceTrackerFeatureArrayInput is an input type that accepts ServiceTrackerFeatureArray and ServiceTrackerFeatureArrayOutput values.
// You can construct a concrete instance of `ServiceTrackerFeatureArrayInput` via:
//
//	ServiceTrackerFeatureArray{ ServiceTrackerFeatureArgs{...} }
type ServiceTrackerFeatureArrayInput interface {
	pulumi.Input

	ToServiceTrackerFeatureArrayOutput() ServiceTrackerFeatureArrayOutput
	ToServiceTrackerFeatureArrayOutputWithContext(context.Context) ServiceTrackerFeatureArrayOutput
}

type ServiceTrackerFeatureArray []ServiceTrackerFeatureInput

func (ServiceTrackerFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceTrackerFeature)(nil)).Elem()
}

func (i ServiceTrackerFeatureArray) ToServiceTrackerFeatureArrayOutput() ServiceTrackerFeatureArrayOutput {
	return i.ToServiceTrackerFeatureArrayOutputWithContext(context.Background())
}

func (i ServiceTrackerFeatureArray) ToServiceTrackerFeatureArrayOutputWithContext(ctx context.Context) ServiceTrackerFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTrackerFeatureArrayOutput)
}

// ServiceTrackerFeatureMapInput is an input type that accepts ServiceTrackerFeatureMap and ServiceTrackerFeatureMapOutput values.
// You can construct a concrete instance of `ServiceTrackerFeatureMapInput` via:
//
//	ServiceTrackerFeatureMap{ "key": ServiceTrackerFeatureArgs{...} }
type ServiceTrackerFeatureMapInput interface {
	pulumi.Input

	ToServiceTrackerFeatureMapOutput() ServiceTrackerFeatureMapOutput
	ToServiceTrackerFeatureMapOutputWithContext(context.Context) ServiceTrackerFeatureMapOutput
}

type ServiceTrackerFeatureMap map[string]ServiceTrackerFeatureInput

func (ServiceTrackerFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceTrackerFeature)(nil)).Elem()
}

func (i ServiceTrackerFeatureMap) ToServiceTrackerFeatureMapOutput() ServiceTrackerFeatureMapOutput {
	return i.ToServiceTrackerFeatureMapOutputWithContext(context.Background())
}

func (i ServiceTrackerFeatureMap) ToServiceTrackerFeatureMapOutputWithContext(ctx context.Context) ServiceTrackerFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTrackerFeatureMapOutput)
}

type ServiceTrackerFeatureOutput struct{ *pulumi.OutputState }

func (ServiceTrackerFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTrackerFeature)(nil)).Elem()
}

func (o ServiceTrackerFeatureOutput) ToServiceTrackerFeatureOutput() ServiceTrackerFeatureOutput {
	return o
}

func (o ServiceTrackerFeatureOutput) ToServiceTrackerFeatureOutputWithContext(ctx context.Context) ServiceTrackerFeatureOutput {
	return o
}

// The description of the Feature
func (o ServiceTrackerFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// API url of endpoint
func (o ServiceTrackerFeatureOutput) EndpointApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.EndpointApiUrl }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceTrackerFeatureOutput) EndpointApiUrlVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.EndpointApiUrlVariable }).(pulumi.StringPtrOutput)
}

// Endpoint DNS Name
func (o ServiceTrackerFeatureOutput) EndpointDnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.EndpointDnsName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceTrackerFeatureOutput) EndpointDnsNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.EndpointDnsNameVariable }).(pulumi.StringPtrOutput)
}

// Endpoint IP
func (o ServiceTrackerFeatureOutput) EndpointIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.EndpointIp }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceTrackerFeatureOutput) EndpointIpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.EndpointIpVariable }).(pulumi.StringPtrOutput)
}

// Endpoint Tracker Type - Choices: `static-route` - Default value: `static-route`
func (o ServiceTrackerFeatureOutput) EndpointTrackerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.EndpointTrackerType }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceTrackerFeatureOutput) EndpointTrackerTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.EndpointTrackerTypeVariable }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o ServiceTrackerFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// Interval - Range: `20`-`600` - Default value: `60`
func (o ServiceTrackerFeatureOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.IntPtrOutput { return v.Interval }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceTrackerFeatureOutput) IntervalVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.IntervalVariable }).(pulumi.StringPtrOutput)
}

// Multiplier - Range: `1`-`10` - Default value: `3`
func (o ServiceTrackerFeatureOutput) Multiplier() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.IntPtrOutput { return v.Multiplier }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceTrackerFeatureOutput) MultiplierVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.MultiplierVariable }).(pulumi.StringPtrOutput)
}

// The name of the Feature
func (o ServiceTrackerFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// - Range: `1`-`65535`
func (o ServiceTrackerFeatureOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.IntPtrOutput { return v.Port }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceTrackerFeatureOutput) PortVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.PortVariable }).(pulumi.StringPtrOutput)
}

// - Choices: `tcp`, `udp`
func (o ServiceTrackerFeatureOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceTrackerFeatureOutput) ProtocolVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.ProtocolVariable }).(pulumi.StringPtrOutput)
}

// Threshold - Range: `100`-`1000` - Default value: `300`
func (o ServiceTrackerFeatureOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.IntPtrOutput { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Variable name
func (o ServiceTrackerFeatureOutput) ThresholdVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.ThresholdVariable }).(pulumi.StringPtrOutput)
}

// Tracker Name
func (o ServiceTrackerFeatureOutput) TrackerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.TrackerName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceTrackerFeatureOutput) TrackerNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.TrackerNameVariable }).(pulumi.StringPtrOutput)
}

// Tracker Type - Choices: `endpoint` - Default value: `endpoint`
func (o ServiceTrackerFeatureOutput) TrackerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.TrackerType }).(pulumi.StringPtrOutput)
}

// Variable name
func (o ServiceTrackerFeatureOutput) TrackerTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.StringPtrOutput { return v.TrackerTypeVariable }).(pulumi.StringPtrOutput)
}

// The version of the Feature
func (o ServiceTrackerFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceTrackerFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ServiceTrackerFeatureArrayOutput struct{ *pulumi.OutputState }

func (ServiceTrackerFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceTrackerFeature)(nil)).Elem()
}

func (o ServiceTrackerFeatureArrayOutput) ToServiceTrackerFeatureArrayOutput() ServiceTrackerFeatureArrayOutput {
	return o
}

func (o ServiceTrackerFeatureArrayOutput) ToServiceTrackerFeatureArrayOutputWithContext(ctx context.Context) ServiceTrackerFeatureArrayOutput {
	return o
}

func (o ServiceTrackerFeatureArrayOutput) Index(i pulumi.IntInput) ServiceTrackerFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceTrackerFeature {
		return vs[0].([]*ServiceTrackerFeature)[vs[1].(int)]
	}).(ServiceTrackerFeatureOutput)
}

type ServiceTrackerFeatureMapOutput struct{ *pulumi.OutputState }

func (ServiceTrackerFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceTrackerFeature)(nil)).Elem()
}

func (o ServiceTrackerFeatureMapOutput) ToServiceTrackerFeatureMapOutput() ServiceTrackerFeatureMapOutput {
	return o
}

func (o ServiceTrackerFeatureMapOutput) ToServiceTrackerFeatureMapOutputWithContext(ctx context.Context) ServiceTrackerFeatureMapOutput {
	return o
}

func (o ServiceTrackerFeatureMapOutput) MapIndex(k pulumi.StringInput) ServiceTrackerFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceTrackerFeature {
		return vs[0].(map[string]*ServiceTrackerFeature)[vs[1].(string)]
	}).(ServiceTrackerFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTrackerFeatureInput)(nil)).Elem(), &ServiceTrackerFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTrackerFeatureArrayInput)(nil)).Elem(), ServiceTrackerFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTrackerFeatureMapInput)(nil)).Elem(), ServiceTrackerFeatureMap{})
	pulumi.RegisterOutputType(ServiceTrackerFeatureOutput{})
	pulumi.RegisterOutputType(ServiceTrackerFeatureArrayOutput{})
	pulumi.RegisterOutputType(ServiceTrackerFeatureMapOutput{})
}
