// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Service IPv4 ACL Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Import
//
// Expected import identifier with the format: "service_ipv4_acl_feature_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/serviceIpv4AclFeature:ServiceIpv4AclFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type ServiceIpv4AclFeature struct {
	pulumi.CustomResourceState

	// Default Action - Choices: `drop`, `accept` - Default value: `drop`
	DefaultAction pulumi.StringPtrOutput `pulumi:"defaultAction"`
	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrOutput `pulumi:"featureProfileId"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// Access Control List
	Sequences ServiceIpv4AclFeatureSequenceArrayOutput `pulumi:"sequences"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewServiceIpv4AclFeature registers a new resource with the given unique name, arguments, and options.
func NewServiceIpv4AclFeature(ctx *pulumi.Context,
	name string, args *ServiceIpv4AclFeatureArgs, opts ...pulumi.ResourceOption) (*ServiceIpv4AclFeature, error) {
	if args == nil {
		args = &ServiceIpv4AclFeatureArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceIpv4AclFeature
	err := ctx.RegisterResource("sdwan:index/serviceIpv4AclFeature:ServiceIpv4AclFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceIpv4AclFeature gets an existing ServiceIpv4AclFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceIpv4AclFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceIpv4AclFeatureState, opts ...pulumi.ResourceOption) (*ServiceIpv4AclFeature, error) {
	var resource ServiceIpv4AclFeature
	err := ctx.ReadResource("sdwan:index/serviceIpv4AclFeature:ServiceIpv4AclFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceIpv4AclFeature resources.
type serviceIpv4AclFeatureState struct {
	// Default Action - Choices: `drop`, `accept` - Default value: `drop`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Access Control List
	Sequences []ServiceIpv4AclFeatureSequence `pulumi:"sequences"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type ServiceIpv4AclFeatureState struct {
	// Default Action - Choices: `drop`, `accept` - Default value: `drop`
	DefaultAction pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Access Control List
	Sequences ServiceIpv4AclFeatureSequenceArrayInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (ServiceIpv4AclFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceIpv4AclFeatureState)(nil)).Elem()
}

type serviceIpv4AclFeatureArgs struct {
	// Default Action - Choices: `drop`, `accept` - Default value: `drop`
	DefaultAction *string `pulumi:"defaultAction"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Access Control List
	Sequences []ServiceIpv4AclFeatureSequence `pulumi:"sequences"`
}

// The set of arguments for constructing a ServiceIpv4AclFeature resource.
type ServiceIpv4AclFeatureArgs struct {
	// Default Action - Choices: `drop`, `accept` - Default value: `drop`
	DefaultAction pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Access Control List
	Sequences ServiceIpv4AclFeatureSequenceArrayInput
}

func (ServiceIpv4AclFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceIpv4AclFeatureArgs)(nil)).Elem()
}

type ServiceIpv4AclFeatureInput interface {
	pulumi.Input

	ToServiceIpv4AclFeatureOutput() ServiceIpv4AclFeatureOutput
	ToServiceIpv4AclFeatureOutputWithContext(ctx context.Context) ServiceIpv4AclFeatureOutput
}

func (*ServiceIpv4AclFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIpv4AclFeature)(nil)).Elem()
}

func (i *ServiceIpv4AclFeature) ToServiceIpv4AclFeatureOutput() ServiceIpv4AclFeatureOutput {
	return i.ToServiceIpv4AclFeatureOutputWithContext(context.Background())
}

func (i *ServiceIpv4AclFeature) ToServiceIpv4AclFeatureOutputWithContext(ctx context.Context) ServiceIpv4AclFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIpv4AclFeatureOutput)
}

// ServiceIpv4AclFeatureArrayInput is an input type that accepts ServiceIpv4AclFeatureArray and ServiceIpv4AclFeatureArrayOutput values.
// You can construct a concrete instance of `ServiceIpv4AclFeatureArrayInput` via:
//
//	ServiceIpv4AclFeatureArray{ ServiceIpv4AclFeatureArgs{...} }
type ServiceIpv4AclFeatureArrayInput interface {
	pulumi.Input

	ToServiceIpv4AclFeatureArrayOutput() ServiceIpv4AclFeatureArrayOutput
	ToServiceIpv4AclFeatureArrayOutputWithContext(context.Context) ServiceIpv4AclFeatureArrayOutput
}

type ServiceIpv4AclFeatureArray []ServiceIpv4AclFeatureInput

func (ServiceIpv4AclFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceIpv4AclFeature)(nil)).Elem()
}

func (i ServiceIpv4AclFeatureArray) ToServiceIpv4AclFeatureArrayOutput() ServiceIpv4AclFeatureArrayOutput {
	return i.ToServiceIpv4AclFeatureArrayOutputWithContext(context.Background())
}

func (i ServiceIpv4AclFeatureArray) ToServiceIpv4AclFeatureArrayOutputWithContext(ctx context.Context) ServiceIpv4AclFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIpv4AclFeatureArrayOutput)
}

// ServiceIpv4AclFeatureMapInput is an input type that accepts ServiceIpv4AclFeatureMap and ServiceIpv4AclFeatureMapOutput values.
// You can construct a concrete instance of `ServiceIpv4AclFeatureMapInput` via:
//
//	ServiceIpv4AclFeatureMap{ "key": ServiceIpv4AclFeatureArgs{...} }
type ServiceIpv4AclFeatureMapInput interface {
	pulumi.Input

	ToServiceIpv4AclFeatureMapOutput() ServiceIpv4AclFeatureMapOutput
	ToServiceIpv4AclFeatureMapOutputWithContext(context.Context) ServiceIpv4AclFeatureMapOutput
}

type ServiceIpv4AclFeatureMap map[string]ServiceIpv4AclFeatureInput

func (ServiceIpv4AclFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceIpv4AclFeature)(nil)).Elem()
}

func (i ServiceIpv4AclFeatureMap) ToServiceIpv4AclFeatureMapOutput() ServiceIpv4AclFeatureMapOutput {
	return i.ToServiceIpv4AclFeatureMapOutputWithContext(context.Background())
}

func (i ServiceIpv4AclFeatureMap) ToServiceIpv4AclFeatureMapOutputWithContext(ctx context.Context) ServiceIpv4AclFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIpv4AclFeatureMapOutput)
}

type ServiceIpv4AclFeatureOutput struct{ *pulumi.OutputState }

func (ServiceIpv4AclFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIpv4AclFeature)(nil)).Elem()
}

func (o ServiceIpv4AclFeatureOutput) ToServiceIpv4AclFeatureOutput() ServiceIpv4AclFeatureOutput {
	return o
}

func (o ServiceIpv4AclFeatureOutput) ToServiceIpv4AclFeatureOutputWithContext(ctx context.Context) ServiceIpv4AclFeatureOutput {
	return o
}

// Default Action - Choices: `drop`, `accept` - Default value: `drop`
func (o ServiceIpv4AclFeatureOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIpv4AclFeature) pulumi.StringPtrOutput { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// The description of the Feature
func (o ServiceIpv4AclFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIpv4AclFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o ServiceIpv4AclFeatureOutput) FeatureProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIpv4AclFeature) pulumi.StringPtrOutput { return v.FeatureProfileId }).(pulumi.StringPtrOutput)
}

// The name of the Feature
func (o ServiceIpv4AclFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceIpv4AclFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Access Control List
func (o ServiceIpv4AclFeatureOutput) Sequences() ServiceIpv4AclFeatureSequenceArrayOutput {
	return o.ApplyT(func(v *ServiceIpv4AclFeature) ServiceIpv4AclFeatureSequenceArrayOutput { return v.Sequences }).(ServiceIpv4AclFeatureSequenceArrayOutput)
}

// The version of the Feature
func (o ServiceIpv4AclFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceIpv4AclFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ServiceIpv4AclFeatureArrayOutput struct{ *pulumi.OutputState }

func (ServiceIpv4AclFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceIpv4AclFeature)(nil)).Elem()
}

func (o ServiceIpv4AclFeatureArrayOutput) ToServiceIpv4AclFeatureArrayOutput() ServiceIpv4AclFeatureArrayOutput {
	return o
}

func (o ServiceIpv4AclFeatureArrayOutput) ToServiceIpv4AclFeatureArrayOutputWithContext(ctx context.Context) ServiceIpv4AclFeatureArrayOutput {
	return o
}

func (o ServiceIpv4AclFeatureArrayOutput) Index(i pulumi.IntInput) ServiceIpv4AclFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceIpv4AclFeature {
		return vs[0].([]*ServiceIpv4AclFeature)[vs[1].(int)]
	}).(ServiceIpv4AclFeatureOutput)
}

type ServiceIpv4AclFeatureMapOutput struct{ *pulumi.OutputState }

func (ServiceIpv4AclFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceIpv4AclFeature)(nil)).Elem()
}

func (o ServiceIpv4AclFeatureMapOutput) ToServiceIpv4AclFeatureMapOutput() ServiceIpv4AclFeatureMapOutput {
	return o
}

func (o ServiceIpv4AclFeatureMapOutput) ToServiceIpv4AclFeatureMapOutputWithContext(ctx context.Context) ServiceIpv4AclFeatureMapOutput {
	return o
}

func (o ServiceIpv4AclFeatureMapOutput) MapIndex(k pulumi.StringInput) ServiceIpv4AclFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceIpv4AclFeature {
		return vs[0].(map[string]*ServiceIpv4AclFeature)[vs[1].(string)]
	}).(ServiceIpv4AclFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceIpv4AclFeatureInput)(nil)).Elem(), &ServiceIpv4AclFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceIpv4AclFeatureArrayInput)(nil)).Elem(), ServiceIpv4AclFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceIpv4AclFeatureMapInput)(nil)).Elem(), ServiceIpv4AclFeatureMap{})
	pulumi.RegisterOutputType(ServiceIpv4AclFeatureOutput{})
	pulumi.RegisterOutputType(ServiceIpv4AclFeatureArrayOutput{})
	pulumi.RegisterOutputType(ServiceIpv4AclFeatureMapOutput{})
}
