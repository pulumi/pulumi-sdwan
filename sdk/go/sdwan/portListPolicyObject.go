// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Port List Policy Object .
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.NewPortListPolicyObject(ctx, "example", &sdwan.PortListPolicyObjectArgs{
//				Name: pulumi.String("Example"),
//				Entries: sdwan.PortListPolicyObjectEntryArray{
//					&sdwan.PortListPolicyObjectEntryArgs{
//						Port: pulumi.Int(80),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/portListPolicyObject:PortListPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type PortListPolicyObject struct {
	pulumi.CustomResourceState

	// List of entries
	Entries PortListPolicyObjectEntryArrayOutput `pulumi:"entries"`
	// The name of the policy object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewPortListPolicyObject registers a new resource with the given unique name, arguments, and options.
func NewPortListPolicyObject(ctx *pulumi.Context,
	name string, args *PortListPolicyObjectArgs, opts ...pulumi.ResourceOption) (*PortListPolicyObject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PortListPolicyObject
	err := ctx.RegisterResource("sdwan:index/portListPolicyObject:PortListPolicyObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPortListPolicyObject gets an existing PortListPolicyObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPortListPolicyObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PortListPolicyObjectState, opts ...pulumi.ResourceOption) (*PortListPolicyObject, error) {
	var resource PortListPolicyObject
	err := ctx.ReadResource("sdwan:index/portListPolicyObject:PortListPolicyObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PortListPolicyObject resources.
type portListPolicyObjectState struct {
	// List of entries
	Entries []PortListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
	// The version of the object
	Version *int `pulumi:"version"`
}

type PortListPolicyObjectState struct {
	// List of entries
	Entries PortListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
	// The version of the object
	Version pulumi.IntPtrInput
}

func (PortListPolicyObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*portListPolicyObjectState)(nil)).Elem()
}

type portListPolicyObjectArgs struct {
	// List of entries
	Entries []PortListPolicyObjectEntry `pulumi:"entries"`
	// The name of the policy object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a PortListPolicyObject resource.
type PortListPolicyObjectArgs struct {
	// List of entries
	Entries PortListPolicyObjectEntryArrayInput
	// The name of the policy object
	Name pulumi.StringPtrInput
}

func (PortListPolicyObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*portListPolicyObjectArgs)(nil)).Elem()
}

type PortListPolicyObjectInput interface {
	pulumi.Input

	ToPortListPolicyObjectOutput() PortListPolicyObjectOutput
	ToPortListPolicyObjectOutputWithContext(ctx context.Context) PortListPolicyObjectOutput
}

func (*PortListPolicyObject) ElementType() reflect.Type {
	return reflect.TypeOf((**PortListPolicyObject)(nil)).Elem()
}

func (i *PortListPolicyObject) ToPortListPolicyObjectOutput() PortListPolicyObjectOutput {
	return i.ToPortListPolicyObjectOutputWithContext(context.Background())
}

func (i *PortListPolicyObject) ToPortListPolicyObjectOutputWithContext(ctx context.Context) PortListPolicyObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortListPolicyObjectOutput)
}

// PortListPolicyObjectArrayInput is an input type that accepts PortListPolicyObjectArray and PortListPolicyObjectArrayOutput values.
// You can construct a concrete instance of `PortListPolicyObjectArrayInput` via:
//
//	PortListPolicyObjectArray{ PortListPolicyObjectArgs{...} }
type PortListPolicyObjectArrayInput interface {
	pulumi.Input

	ToPortListPolicyObjectArrayOutput() PortListPolicyObjectArrayOutput
	ToPortListPolicyObjectArrayOutputWithContext(context.Context) PortListPolicyObjectArrayOutput
}

type PortListPolicyObjectArray []PortListPolicyObjectInput

func (PortListPolicyObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PortListPolicyObject)(nil)).Elem()
}

func (i PortListPolicyObjectArray) ToPortListPolicyObjectArrayOutput() PortListPolicyObjectArrayOutput {
	return i.ToPortListPolicyObjectArrayOutputWithContext(context.Background())
}

func (i PortListPolicyObjectArray) ToPortListPolicyObjectArrayOutputWithContext(ctx context.Context) PortListPolicyObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortListPolicyObjectArrayOutput)
}

// PortListPolicyObjectMapInput is an input type that accepts PortListPolicyObjectMap and PortListPolicyObjectMapOutput values.
// You can construct a concrete instance of `PortListPolicyObjectMapInput` via:
//
//	PortListPolicyObjectMap{ "key": PortListPolicyObjectArgs{...} }
type PortListPolicyObjectMapInput interface {
	pulumi.Input

	ToPortListPolicyObjectMapOutput() PortListPolicyObjectMapOutput
	ToPortListPolicyObjectMapOutputWithContext(context.Context) PortListPolicyObjectMapOutput
}

type PortListPolicyObjectMap map[string]PortListPolicyObjectInput

func (PortListPolicyObjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PortListPolicyObject)(nil)).Elem()
}

func (i PortListPolicyObjectMap) ToPortListPolicyObjectMapOutput() PortListPolicyObjectMapOutput {
	return i.ToPortListPolicyObjectMapOutputWithContext(context.Background())
}

func (i PortListPolicyObjectMap) ToPortListPolicyObjectMapOutputWithContext(ctx context.Context) PortListPolicyObjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortListPolicyObjectMapOutput)
}

type PortListPolicyObjectOutput struct{ *pulumi.OutputState }

func (PortListPolicyObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PortListPolicyObject)(nil)).Elem()
}

func (o PortListPolicyObjectOutput) ToPortListPolicyObjectOutput() PortListPolicyObjectOutput {
	return o
}

func (o PortListPolicyObjectOutput) ToPortListPolicyObjectOutputWithContext(ctx context.Context) PortListPolicyObjectOutput {
	return o
}

// List of entries
func (o PortListPolicyObjectOutput) Entries() PortListPolicyObjectEntryArrayOutput {
	return o.ApplyT(func(v *PortListPolicyObject) PortListPolicyObjectEntryArrayOutput { return v.Entries }).(PortListPolicyObjectEntryArrayOutput)
}

// The name of the policy object
func (o PortListPolicyObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PortListPolicyObject) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the object
func (o PortListPolicyObjectOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *PortListPolicyObject) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type PortListPolicyObjectArrayOutput struct{ *pulumi.OutputState }

func (PortListPolicyObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PortListPolicyObject)(nil)).Elem()
}

func (o PortListPolicyObjectArrayOutput) ToPortListPolicyObjectArrayOutput() PortListPolicyObjectArrayOutput {
	return o
}

func (o PortListPolicyObjectArrayOutput) ToPortListPolicyObjectArrayOutputWithContext(ctx context.Context) PortListPolicyObjectArrayOutput {
	return o
}

func (o PortListPolicyObjectArrayOutput) Index(i pulumi.IntInput) PortListPolicyObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PortListPolicyObject {
		return vs[0].([]*PortListPolicyObject)[vs[1].(int)]
	}).(PortListPolicyObjectOutput)
}

type PortListPolicyObjectMapOutput struct{ *pulumi.OutputState }

func (PortListPolicyObjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PortListPolicyObject)(nil)).Elem()
}

func (o PortListPolicyObjectMapOutput) ToPortListPolicyObjectMapOutput() PortListPolicyObjectMapOutput {
	return o
}

func (o PortListPolicyObjectMapOutput) ToPortListPolicyObjectMapOutputWithContext(ctx context.Context) PortListPolicyObjectMapOutput {
	return o
}

func (o PortListPolicyObjectMapOutput) MapIndex(k pulumi.StringInput) PortListPolicyObjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PortListPolicyObject {
		return vs[0].(map[string]*PortListPolicyObject)[vs[1].(string)]
	}).(PortListPolicyObjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PortListPolicyObjectInput)(nil)).Elem(), &PortListPolicyObject{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortListPolicyObjectArrayInput)(nil)).Elem(), PortListPolicyObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PortListPolicyObjectMapInput)(nil)).Elem(), PortListPolicyObjectMap{})
	pulumi.RegisterOutputType(PortListPolicyObjectOutput{})
	pulumi.RegisterOutputType(PortListPolicyObjectArrayOutput{})
	pulumi.RegisterOutputType(PortListPolicyObjectMapOutput{})
}
