// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Cellular Controller feature template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupCellularControllerFeatureTemplate(ctx, &sdwan.LookupCellularControllerFeatureTemplateArgs{
//				Id: pulumi.StringRef("f6b2c44c-693c-4763-b010-895aa3d236bd"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCellularControllerFeatureTemplate(ctx *pulumi.Context, args *LookupCellularControllerFeatureTemplateArgs, opts ...pulumi.InvokeOption) (*LookupCellularControllerFeatureTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCellularControllerFeatureTemplateResult
	err := ctx.Invoke("sdwan:index/getCellularControllerFeatureTemplate:getCellularControllerFeatureTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCellularControllerFeatureTemplate.
type LookupCellularControllerFeatureTemplateArgs struct {
	// The id of the feature template
	Id *string `pulumi:"id"`
	// The name of the feature template
	Name *string `pulumi:"name"`
}

// A collection of values returned by getCellularControllerFeatureTemplate.
type LookupCellularControllerFeatureTemplateResult struct {
	// Cellular interface name
	CellularInterfaceId string `pulumi:"cellularInterfaceId"`
	// Variable name
	CellularInterfaceIdVariable string `pulumi:"cellularInterfaceIdVariable"`
	// Data Profile List
	DataProfiles []GetCellularControllerFeatureTemplateDataProfile `pulumi:"dataProfiles"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Enable/Disable Firmware Auto Sim
	FirmwareAutoSim bool `pulumi:"firmwareAutoSim"`
	// Variable name
	FirmwareAutoSimVariable string `pulumi:"firmwareAutoSimVariable"`
	// The id of the feature template
	Id string `pulumi:"id"`
	// The name of the feature template
	Name string `pulumi:"name"`
	// Set primary SIM slot
	PrimarySimSlot int `pulumi:"primarySimSlot"`
	// Variable name
	PrimarySimSlotVariable string `pulumi:"primarySimSlotVariable"`
	// Set SIM failover retries
	SimFailoverRetries int `pulumi:"simFailoverRetries"`
	// Variable name
	SimFailoverRetriesVariable string `pulumi:"simFailoverRetriesVariable"`
	// Set SIM failover timeout in minutes
	SimFailoverTimeout int `pulumi:"simFailoverTimeout"`
	// Variable name
	SimFailoverTimeoutVariable string `pulumi:"simFailoverTimeoutVariable"`
	// The template type
	TemplateType string `pulumi:"templateType"`
	// The version of the feature template
	Version int `pulumi:"version"`
}

func LookupCellularControllerFeatureTemplateOutput(ctx *pulumi.Context, args LookupCellularControllerFeatureTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupCellularControllerFeatureTemplateResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCellularControllerFeatureTemplateResultOutput, error) {
			args := v.(LookupCellularControllerFeatureTemplateArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sdwan:index/getCellularControllerFeatureTemplate:getCellularControllerFeatureTemplate", args, LookupCellularControllerFeatureTemplateResultOutput{}, options).(LookupCellularControllerFeatureTemplateResultOutput), nil
		}).(LookupCellularControllerFeatureTemplateResultOutput)
}

// A collection of arguments for invoking getCellularControllerFeatureTemplate.
type LookupCellularControllerFeatureTemplateOutputArgs struct {
	// The id of the feature template
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the feature template
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupCellularControllerFeatureTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCellularControllerFeatureTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getCellularControllerFeatureTemplate.
type LookupCellularControllerFeatureTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupCellularControllerFeatureTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCellularControllerFeatureTemplateResult)(nil)).Elem()
}

func (o LookupCellularControllerFeatureTemplateResultOutput) ToLookupCellularControllerFeatureTemplateResultOutput() LookupCellularControllerFeatureTemplateResultOutput {
	return o
}

func (o LookupCellularControllerFeatureTemplateResultOutput) ToLookupCellularControllerFeatureTemplateResultOutputWithContext(ctx context.Context) LookupCellularControllerFeatureTemplateResultOutput {
	return o
}

// Cellular interface name
func (o LookupCellularControllerFeatureTemplateResultOutput) CellularInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCellularControllerFeatureTemplateResult) string { return v.CellularInterfaceId }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCellularControllerFeatureTemplateResultOutput) CellularInterfaceIdVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCellularControllerFeatureTemplateResult) string { return v.CellularInterfaceIdVariable }).(pulumi.StringOutput)
}

// Data Profile List
func (o LookupCellularControllerFeatureTemplateResultOutput) DataProfiles() GetCellularControllerFeatureTemplateDataProfileArrayOutput {
	return o.ApplyT(func(v LookupCellularControllerFeatureTemplateResult) []GetCellularControllerFeatureTemplateDataProfile {
		return v.DataProfiles
	}).(GetCellularControllerFeatureTemplateDataProfileArrayOutput)
}

// The description of the feature template
func (o LookupCellularControllerFeatureTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCellularControllerFeatureTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
func (o LookupCellularControllerFeatureTemplateResultOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCellularControllerFeatureTemplateResult) []string { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Enable/Disable Firmware Auto Sim
func (o LookupCellularControllerFeatureTemplateResultOutput) FirmwareAutoSim() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCellularControllerFeatureTemplateResult) bool { return v.FirmwareAutoSim }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupCellularControllerFeatureTemplateResultOutput) FirmwareAutoSimVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCellularControllerFeatureTemplateResult) string { return v.FirmwareAutoSimVariable }).(pulumi.StringOutput)
}

// The id of the feature template
func (o LookupCellularControllerFeatureTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCellularControllerFeatureTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the feature template
func (o LookupCellularControllerFeatureTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCellularControllerFeatureTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// Set primary SIM slot
func (o LookupCellularControllerFeatureTemplateResultOutput) PrimarySimSlot() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCellularControllerFeatureTemplateResult) int { return v.PrimarySimSlot }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCellularControllerFeatureTemplateResultOutput) PrimarySimSlotVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCellularControllerFeatureTemplateResult) string { return v.PrimarySimSlotVariable }).(pulumi.StringOutput)
}

// Set SIM failover retries
func (o LookupCellularControllerFeatureTemplateResultOutput) SimFailoverRetries() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCellularControllerFeatureTemplateResult) int { return v.SimFailoverRetries }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCellularControllerFeatureTemplateResultOutput) SimFailoverRetriesVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCellularControllerFeatureTemplateResult) string { return v.SimFailoverRetriesVariable }).(pulumi.StringOutput)
}

// Set SIM failover timeout in minutes
func (o LookupCellularControllerFeatureTemplateResultOutput) SimFailoverTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCellularControllerFeatureTemplateResult) int { return v.SimFailoverTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCellularControllerFeatureTemplateResultOutput) SimFailoverTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCellularControllerFeatureTemplateResult) string { return v.SimFailoverTimeoutVariable }).(pulumi.StringOutput)
}

// The template type
func (o LookupCellularControllerFeatureTemplateResultOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCellularControllerFeatureTemplateResult) string { return v.TemplateType }).(pulumi.StringOutput)
}

// The version of the feature template
func (o LookupCellularControllerFeatureTemplateResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCellularControllerFeatureTemplateResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCellularControllerFeatureTemplateResultOutput{})
}
