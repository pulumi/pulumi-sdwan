// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the System Logging profile parcel.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupSystemLoggingProfileParcel(ctx, &sdwan.LookupSystemLoggingProfileParcelArgs{
//				Id:               "f6b2c44c-693c-4763-b010-895aa3d236bd",
//				FeatureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSystemLoggingProfileParcel(ctx *pulumi.Context, args *LookupSystemLoggingProfileParcelArgs, opts ...pulumi.InvokeOption) (*LookupSystemLoggingProfileParcelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSystemLoggingProfileParcelResult
	err := ctx.Invoke("sdwan:index/getSystemLoggingProfileParcel:getSystemLoggingProfileParcel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSystemLoggingProfileParcel.
type LookupSystemLoggingProfileParcelArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the profile parcel
	Id string `pulumi:"id"`
}

// A collection of values returned by getSystemLoggingProfileParcel.
type LookupSystemLoggingProfileParcelResult struct {
	// The description of the profile parcel
	Description string `pulumi:"description"`
	// Enable logging to local disk
	DiskEnable bool `pulumi:"diskEnable"`
	// Variable name
	DiskEnableVariable string `pulumi:"diskEnableVariable"`
	// Set number of syslog files to create before discarding oldest files
	DiskFileRotate int `pulumi:"diskFileRotate"`
	// Variable name
	DiskFileRotateVariable string `pulumi:"diskFileRotateVariable"`
	// Set maximum size of file before it is rotated
	DiskFileSize int `pulumi:"diskFileSize"`
	// Variable name
	DiskFileSizeVariable string `pulumi:"diskFileSizeVariable"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the profile parcel
	Id string `pulumi:"id"`
	// Enable logging to remote server
	Ipv4Servers []GetSystemLoggingProfileParcelIpv4Server `pulumi:"ipv4Servers"`
	// Enable logging to remote ipv6 server
	Ipv6Servers []GetSystemLoggingProfileParcelIpv6Server `pulumi:"ipv6Servers"`
	// The name of the profile parcel
	Name string `pulumi:"name"`
	// Configure a TLS profile
	TlsProfiles []GetSystemLoggingProfileParcelTlsProfile `pulumi:"tlsProfiles"`
	// The version of the profile parcel
	Version int `pulumi:"version"`
}

func LookupSystemLoggingProfileParcelOutput(ctx *pulumi.Context, args LookupSystemLoggingProfileParcelOutputArgs, opts ...pulumi.InvokeOption) LookupSystemLoggingProfileParcelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSystemLoggingProfileParcelResult, error) {
			args := v.(LookupSystemLoggingProfileParcelArgs)
			r, err := LookupSystemLoggingProfileParcel(ctx, &args, opts...)
			var s LookupSystemLoggingProfileParcelResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSystemLoggingProfileParcelResultOutput)
}

// A collection of arguments for invoking getSystemLoggingProfileParcel.
type LookupSystemLoggingProfileParcelOutputArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput `pulumi:"featureProfileId"`
	// The id of the profile parcel
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupSystemLoggingProfileParcelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemLoggingProfileParcelArgs)(nil)).Elem()
}

// A collection of values returned by getSystemLoggingProfileParcel.
type LookupSystemLoggingProfileParcelResultOutput struct{ *pulumi.OutputState }

func (LookupSystemLoggingProfileParcelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemLoggingProfileParcelResult)(nil)).Elem()
}

func (o LookupSystemLoggingProfileParcelResultOutput) ToLookupSystemLoggingProfileParcelResultOutput() LookupSystemLoggingProfileParcelResultOutput {
	return o
}

func (o LookupSystemLoggingProfileParcelResultOutput) ToLookupSystemLoggingProfileParcelResultOutputWithContext(ctx context.Context) LookupSystemLoggingProfileParcelResultOutput {
	return o
}

// The description of the profile parcel
func (o LookupSystemLoggingProfileParcelResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemLoggingProfileParcelResult) string { return v.Description }).(pulumi.StringOutput)
}

// Enable logging to local disk
func (o LookupSystemLoggingProfileParcelResultOutput) DiskEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSystemLoggingProfileParcelResult) bool { return v.DiskEnable }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupSystemLoggingProfileParcelResultOutput) DiskEnableVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemLoggingProfileParcelResult) string { return v.DiskEnableVariable }).(pulumi.StringOutput)
}

// Set number of syslog files to create before discarding oldest files
func (o LookupSystemLoggingProfileParcelResultOutput) DiskFileRotate() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemLoggingProfileParcelResult) int { return v.DiskFileRotate }).(pulumi.IntOutput)
}

// Variable name
func (o LookupSystemLoggingProfileParcelResultOutput) DiskFileRotateVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemLoggingProfileParcelResult) string { return v.DiskFileRotateVariable }).(pulumi.StringOutput)
}

// Set maximum size of file before it is rotated
func (o LookupSystemLoggingProfileParcelResultOutput) DiskFileSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemLoggingProfileParcelResult) int { return v.DiskFileSize }).(pulumi.IntOutput)
}

// Variable name
func (o LookupSystemLoggingProfileParcelResultOutput) DiskFileSizeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemLoggingProfileParcelResult) string { return v.DiskFileSizeVariable }).(pulumi.StringOutput)
}

// Feature Profile ID
func (o LookupSystemLoggingProfileParcelResultOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemLoggingProfileParcelResult) string { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The id of the profile parcel
func (o LookupSystemLoggingProfileParcelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemLoggingProfileParcelResult) string { return v.Id }).(pulumi.StringOutput)
}

// Enable logging to remote server
func (o LookupSystemLoggingProfileParcelResultOutput) Ipv4Servers() GetSystemLoggingProfileParcelIpv4ServerArrayOutput {
	return o.ApplyT(func(v LookupSystemLoggingProfileParcelResult) []GetSystemLoggingProfileParcelIpv4Server {
		return v.Ipv4Servers
	}).(GetSystemLoggingProfileParcelIpv4ServerArrayOutput)
}

// Enable logging to remote ipv6 server
func (o LookupSystemLoggingProfileParcelResultOutput) Ipv6Servers() GetSystemLoggingProfileParcelIpv6ServerArrayOutput {
	return o.ApplyT(func(v LookupSystemLoggingProfileParcelResult) []GetSystemLoggingProfileParcelIpv6Server {
		return v.Ipv6Servers
	}).(GetSystemLoggingProfileParcelIpv6ServerArrayOutput)
}

// The name of the profile parcel
func (o LookupSystemLoggingProfileParcelResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemLoggingProfileParcelResult) string { return v.Name }).(pulumi.StringOutput)
}

// Configure a TLS profile
func (o LookupSystemLoggingProfileParcelResultOutput) TlsProfiles() GetSystemLoggingProfileParcelTlsProfileArrayOutput {
	return o.ApplyT(func(v LookupSystemLoggingProfileParcelResult) []GetSystemLoggingProfileParcelTlsProfile {
		return v.TlsProfiles
	}).(GetSystemLoggingProfileParcelTlsProfileArrayOutput)
}

// The version of the profile parcel
func (o LookupSystemLoggingProfileParcelResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemLoggingProfileParcelResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSystemLoggingProfileParcelResultOutput{})
}
