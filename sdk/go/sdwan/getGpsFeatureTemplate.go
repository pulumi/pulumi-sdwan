// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the gps feature template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupGpsFeatureTemplate(ctx, &sdwan.LookupGpsFeatureTemplateArgs{
//				Id: pulumi.StringRef("f6b2c44c-693c-4763-b010-895aa3d236bd"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupGpsFeatureTemplate(ctx *pulumi.Context, args *LookupGpsFeatureTemplateArgs, opts ...pulumi.InvokeOption) (*LookupGpsFeatureTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGpsFeatureTemplateResult
	err := ctx.Invoke("sdwan:index/getGpsFeatureTemplate:getGpsFeatureTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGpsFeatureTemplate.
type LookupGpsFeatureTemplateArgs struct {
	// The id of the feature template
	Id *string `pulumi:"id"`
	// The name of the feature template
	Name *string `pulumi:"name"`
}

// A collection of values returned by getGpsFeatureTemplate.
type LookupGpsFeatureTemplateResult struct {
	// The description of the feature template
	Description string `pulumi:"description"`
	// Destination address
	DestinationAddress string `pulumi:"destinationAddress"`
	// Variable name
	DestinationAddressVariable string `pulumi:"destinationAddressVariable"`
	// Destination port
	DestinationPort int `pulumi:"destinationPort"`
	// Variable name
	DestinationPortVariable string `pulumi:"destinationPortVariable"`
	// List of supported device types
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Enable/disable GPS
	Enable bool `pulumi:"enable"`
	// Variable name
	EnableVariable string `pulumi:"enableVariable"`
	// Select GPS mode
	GpsMode string `pulumi:"gpsMode"`
	// Variable name
	GpsModeVariable string `pulumi:"gpsModeVariable"`
	// The id of the feature template
	Id string `pulumi:"id"`
	// The name of the feature template
	Name string `pulumi:"name"`
	// Enable/disable NMEA data
	Nmea bool `pulumi:"nmea"`
	// Variable name
	NmeaVariable string `pulumi:"nmeaVariable"`
	// Source address
	SourceAddress string `pulumi:"sourceAddress"`
	// Variable name
	SourceAddressVariable string `pulumi:"sourceAddressVariable"`
	// The template type
	TemplateType string `pulumi:"templateType"`
	// The version of the feature template
	Version int `pulumi:"version"`
}

func LookupGpsFeatureTemplateOutput(ctx *pulumi.Context, args LookupGpsFeatureTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupGpsFeatureTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGpsFeatureTemplateResult, error) {
			args := v.(LookupGpsFeatureTemplateArgs)
			r, err := LookupGpsFeatureTemplate(ctx, &args, opts...)
			var s LookupGpsFeatureTemplateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGpsFeatureTemplateResultOutput)
}

// A collection of arguments for invoking getGpsFeatureTemplate.
type LookupGpsFeatureTemplateOutputArgs struct {
	// The id of the feature template
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the feature template
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupGpsFeatureTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGpsFeatureTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getGpsFeatureTemplate.
type LookupGpsFeatureTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupGpsFeatureTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGpsFeatureTemplateResult)(nil)).Elem()
}

func (o LookupGpsFeatureTemplateResultOutput) ToLookupGpsFeatureTemplateResultOutput() LookupGpsFeatureTemplateResultOutput {
	return o
}

func (o LookupGpsFeatureTemplateResultOutput) ToLookupGpsFeatureTemplateResultOutputWithContext(ctx context.Context) LookupGpsFeatureTemplateResultOutput {
	return o
}

// The description of the feature template
func (o LookupGpsFeatureTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGpsFeatureTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// Destination address
func (o LookupGpsFeatureTemplateResultOutput) DestinationAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGpsFeatureTemplateResult) string { return v.DestinationAddress }).(pulumi.StringOutput)
}

// Variable name
func (o LookupGpsFeatureTemplateResultOutput) DestinationAddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGpsFeatureTemplateResult) string { return v.DestinationAddressVariable }).(pulumi.StringOutput)
}

// Destination port
func (o LookupGpsFeatureTemplateResultOutput) DestinationPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupGpsFeatureTemplateResult) int { return v.DestinationPort }).(pulumi.IntOutput)
}

// Variable name
func (o LookupGpsFeatureTemplateResultOutput) DestinationPortVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGpsFeatureTemplateResult) string { return v.DestinationPortVariable }).(pulumi.StringOutput)
}

// List of supported device types
func (o LookupGpsFeatureTemplateResultOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGpsFeatureTemplateResult) []string { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Enable/disable GPS
func (o LookupGpsFeatureTemplateResultOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGpsFeatureTemplateResult) bool { return v.Enable }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupGpsFeatureTemplateResultOutput) EnableVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGpsFeatureTemplateResult) string { return v.EnableVariable }).(pulumi.StringOutput)
}

// Select GPS mode
func (o LookupGpsFeatureTemplateResultOutput) GpsMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGpsFeatureTemplateResult) string { return v.GpsMode }).(pulumi.StringOutput)
}

// Variable name
func (o LookupGpsFeatureTemplateResultOutput) GpsModeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGpsFeatureTemplateResult) string { return v.GpsModeVariable }).(pulumi.StringOutput)
}

// The id of the feature template
func (o LookupGpsFeatureTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGpsFeatureTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the feature template
func (o LookupGpsFeatureTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGpsFeatureTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// Enable/disable NMEA data
func (o LookupGpsFeatureTemplateResultOutput) Nmea() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGpsFeatureTemplateResult) bool { return v.Nmea }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupGpsFeatureTemplateResultOutput) NmeaVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGpsFeatureTemplateResult) string { return v.NmeaVariable }).(pulumi.StringOutput)
}

// Source address
func (o LookupGpsFeatureTemplateResultOutput) SourceAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGpsFeatureTemplateResult) string { return v.SourceAddress }).(pulumi.StringOutput)
}

// Variable name
func (o LookupGpsFeatureTemplateResultOutput) SourceAddressVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGpsFeatureTemplateResult) string { return v.SourceAddressVariable }).(pulumi.StringOutput)
}

// The template type
func (o LookupGpsFeatureTemplateResultOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGpsFeatureTemplateResult) string { return v.TemplateType }).(pulumi.StringOutput)
}

// The version of the feature template
func (o LookupGpsFeatureTemplateResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupGpsFeatureTemplateResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGpsFeatureTemplateResultOutput{})
}
