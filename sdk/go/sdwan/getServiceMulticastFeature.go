// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Service Multicast Feature.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupServiceMulticastFeature(ctx, &sdwan.LookupServiceMulticastFeatureArgs{
//				Id:               "f6b2c44c-693c-4763-b010-895aa3d236bd",
//				FeatureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupServiceMulticastFeature(ctx *pulumi.Context, args *LookupServiceMulticastFeatureArgs, opts ...pulumi.InvokeOption) (*LookupServiceMulticastFeatureResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceMulticastFeatureResult
	err := ctx.Invoke("sdwan:index/getServiceMulticastFeature:getServiceMulticastFeature", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceMulticastFeature.
type LookupServiceMulticastFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
}

// A collection of values returned by getServiceMulticastFeature.
type LookupServiceMulticastFeatureResult struct {
	// Enable or disable RP Announce
	AutoRpAnnounces []GetServiceMulticastFeatureAutoRpAnnounce `pulumi:"autoRpAnnounces"`
	// Enable or disable RP Discovery
	AutoRpDiscoveries []GetServiceMulticastFeatureAutoRpDiscovery `pulumi:"autoRpDiscoveries"`
	// The description of the Feature
	Description string `pulumi:"description"`
	// Enable or disable auto-RP
	EnableAutoRp bool `pulumi:"enableAutoRp"`
	// Variable name
	EnableAutoRpVariable string `pulumi:"enableAutoRpVariable"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
	// Set IGMP interface parameters
	IgmpInterfaces []GetServiceMulticastFeatureIgmpInterface `pulumi:"igmpInterfaces"`
	// Replicator is local to this device
	LocalReplicator bool `pulumi:"localReplicator"`
	// Set number of joins per group the router supports
	LocalReplicatorThreshold int `pulumi:"localReplicatorThreshold"`
	// Variable name
	LocalReplicatorThresholdVariable string `pulumi:"localReplicatorThresholdVariable"`
	// Variable name
	LocalReplicatorVariable string `pulumi:"localReplicatorVariable"`
	// Set MSDP refresh timer
	MsdpConnectionRetryInterval int `pulumi:"msdpConnectionRetryInterval"`
	// Variable name
	MsdpConnectionRetryIntervalVariable string `pulumi:"msdpConnectionRetryIntervalVariable"`
	// multicast MSDP peer
	MsdpGroups []GetServiceMulticastFeatureMsdpGroup `pulumi:"msdpGroups"`
	// Set MSDP originator ID
	MsdpOriginatorId string `pulumi:"msdpOriginatorId"`
	// Variable name
	MsdpOriginatorIdVariable string `pulumi:"msdpOriginatorIdVariable"`
	// The name of the Feature
	Name string `pulumi:"name"`
	// bsr candidate Attributes
	PimBsrCandidates []GetServiceMulticastFeaturePimBsrCandidate `pulumi:"pimBsrCandidates"`
	// Set RP Discovery Scope
	PimBsrRpCandidates []GetServiceMulticastFeaturePimBsrRpCandidate `pulumi:"pimBsrRpCandidates"`
	// Set PIM interface parameters
	PimInterfaces []GetServiceMulticastFeaturePimInterface `pulumi:"pimInterfaces"`
	// Set Access List for PIM SSM
	PimSourceSpecificMulticastAccessList string `pulumi:"pimSourceSpecificMulticastAccessList"`
	// Variable name
	PimSourceSpecificMulticastAccessListVariable string `pulumi:"pimSourceSpecificMulticastAccessListVariable"`
	// turn SSM on/off
	PimSourceSpecificMulticastEnable bool `pulumi:"pimSourceSpecificMulticastEnable"`
	// Set when PIM router joins the SPT (kbps)
	PimSptThreshold string `pulumi:"pimSptThreshold"`
	// Variable name
	PimSptThresholdVariable string `pulumi:"pimSptThresholdVariable"`
	// Shortest Path Tree (SPT) Only Mode
	SptOnly bool `pulumi:"sptOnly"`
	// Variable name
	SptOnlyVariable string `pulumi:"sptOnlyVariable"`
	// Set Static RP Address(es)
	StaticRpAddresses []GetServiceMulticastFeatureStaticRpAddress `pulumi:"staticRpAddresses"`
	// The version of the Feature
	Version int `pulumi:"version"`
}

func LookupServiceMulticastFeatureOutput(ctx *pulumi.Context, args LookupServiceMulticastFeatureOutputArgs, opts ...pulumi.InvokeOption) LookupServiceMulticastFeatureResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupServiceMulticastFeatureResultOutput, error) {
			args := v.(LookupServiceMulticastFeatureArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sdwan:index/getServiceMulticastFeature:getServiceMulticastFeature", args, LookupServiceMulticastFeatureResultOutput{}, options).(LookupServiceMulticastFeatureResultOutput), nil
		}).(LookupServiceMulticastFeatureResultOutput)
}

// A collection of arguments for invoking getServiceMulticastFeature.
type LookupServiceMulticastFeatureOutputArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput `pulumi:"featureProfileId"`
	// The id of the Feature
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupServiceMulticastFeatureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceMulticastFeatureArgs)(nil)).Elem()
}

// A collection of values returned by getServiceMulticastFeature.
type LookupServiceMulticastFeatureResultOutput struct{ *pulumi.OutputState }

func (LookupServiceMulticastFeatureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceMulticastFeatureResult)(nil)).Elem()
}

func (o LookupServiceMulticastFeatureResultOutput) ToLookupServiceMulticastFeatureResultOutput() LookupServiceMulticastFeatureResultOutput {
	return o
}

func (o LookupServiceMulticastFeatureResultOutput) ToLookupServiceMulticastFeatureResultOutputWithContext(ctx context.Context) LookupServiceMulticastFeatureResultOutput {
	return o
}

// Enable or disable RP Announce
func (o LookupServiceMulticastFeatureResultOutput) AutoRpAnnounces() GetServiceMulticastFeatureAutoRpAnnounceArrayOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) []GetServiceMulticastFeatureAutoRpAnnounce {
		return v.AutoRpAnnounces
	}).(GetServiceMulticastFeatureAutoRpAnnounceArrayOutput)
}

// Enable or disable RP Discovery
func (o LookupServiceMulticastFeatureResultOutput) AutoRpDiscoveries() GetServiceMulticastFeatureAutoRpDiscoveryArrayOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) []GetServiceMulticastFeatureAutoRpDiscovery {
		return v.AutoRpDiscoveries
	}).(GetServiceMulticastFeatureAutoRpDiscoveryArrayOutput)
}

// The description of the Feature
func (o LookupServiceMulticastFeatureResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) string { return v.Description }).(pulumi.StringOutput)
}

// Enable or disable auto-RP
func (o LookupServiceMulticastFeatureResultOutput) EnableAutoRp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) bool { return v.EnableAutoRp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceMulticastFeatureResultOutput) EnableAutoRpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) string { return v.EnableAutoRpVariable }).(pulumi.StringOutput)
}

// Feature Profile ID
func (o LookupServiceMulticastFeatureResultOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) string { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The id of the Feature
func (o LookupServiceMulticastFeatureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) string { return v.Id }).(pulumi.StringOutput)
}

// Set IGMP interface parameters
func (o LookupServiceMulticastFeatureResultOutput) IgmpInterfaces() GetServiceMulticastFeatureIgmpInterfaceArrayOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) []GetServiceMulticastFeatureIgmpInterface {
		return v.IgmpInterfaces
	}).(GetServiceMulticastFeatureIgmpInterfaceArrayOutput)
}

// Replicator is local to this device
func (o LookupServiceMulticastFeatureResultOutput) LocalReplicator() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) bool { return v.LocalReplicator }).(pulumi.BoolOutput)
}

// Set number of joins per group the router supports
func (o LookupServiceMulticastFeatureResultOutput) LocalReplicatorThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) int { return v.LocalReplicatorThreshold }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceMulticastFeatureResultOutput) LocalReplicatorThresholdVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) string { return v.LocalReplicatorThresholdVariable }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceMulticastFeatureResultOutput) LocalReplicatorVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) string { return v.LocalReplicatorVariable }).(pulumi.StringOutput)
}

// Set MSDP refresh timer
func (o LookupServiceMulticastFeatureResultOutput) MsdpConnectionRetryInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) int { return v.MsdpConnectionRetryInterval }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceMulticastFeatureResultOutput) MsdpConnectionRetryIntervalVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) string { return v.MsdpConnectionRetryIntervalVariable }).(pulumi.StringOutput)
}

// multicast MSDP peer
func (o LookupServiceMulticastFeatureResultOutput) MsdpGroups() GetServiceMulticastFeatureMsdpGroupArrayOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) []GetServiceMulticastFeatureMsdpGroup { return v.MsdpGroups }).(GetServiceMulticastFeatureMsdpGroupArrayOutput)
}

// Set MSDP originator ID
func (o LookupServiceMulticastFeatureResultOutput) MsdpOriginatorId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) string { return v.MsdpOriginatorId }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceMulticastFeatureResultOutput) MsdpOriginatorIdVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) string { return v.MsdpOriginatorIdVariable }).(pulumi.StringOutput)
}

// The name of the Feature
func (o LookupServiceMulticastFeatureResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) string { return v.Name }).(pulumi.StringOutput)
}

// bsr candidate Attributes
func (o LookupServiceMulticastFeatureResultOutput) PimBsrCandidates() GetServiceMulticastFeaturePimBsrCandidateArrayOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) []GetServiceMulticastFeaturePimBsrCandidate {
		return v.PimBsrCandidates
	}).(GetServiceMulticastFeaturePimBsrCandidateArrayOutput)
}

// Set RP Discovery Scope
func (o LookupServiceMulticastFeatureResultOutput) PimBsrRpCandidates() GetServiceMulticastFeaturePimBsrRpCandidateArrayOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) []GetServiceMulticastFeaturePimBsrRpCandidate {
		return v.PimBsrRpCandidates
	}).(GetServiceMulticastFeaturePimBsrRpCandidateArrayOutput)
}

// Set PIM interface parameters
func (o LookupServiceMulticastFeatureResultOutput) PimInterfaces() GetServiceMulticastFeaturePimInterfaceArrayOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) []GetServiceMulticastFeaturePimInterface {
		return v.PimInterfaces
	}).(GetServiceMulticastFeaturePimInterfaceArrayOutput)
}

// Set Access List for PIM SSM
func (o LookupServiceMulticastFeatureResultOutput) PimSourceSpecificMulticastAccessList() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) string { return v.PimSourceSpecificMulticastAccessList }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceMulticastFeatureResultOutput) PimSourceSpecificMulticastAccessListVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) string {
		return v.PimSourceSpecificMulticastAccessListVariable
	}).(pulumi.StringOutput)
}

// turn SSM on/off
func (o LookupServiceMulticastFeatureResultOutput) PimSourceSpecificMulticastEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) bool { return v.PimSourceSpecificMulticastEnable }).(pulumi.BoolOutput)
}

// Set when PIM router joins the SPT (kbps)
func (o LookupServiceMulticastFeatureResultOutput) PimSptThreshold() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) string { return v.PimSptThreshold }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceMulticastFeatureResultOutput) PimSptThresholdVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) string { return v.PimSptThresholdVariable }).(pulumi.StringOutput)
}

// Shortest Path Tree (SPT) Only Mode
func (o LookupServiceMulticastFeatureResultOutput) SptOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) bool { return v.SptOnly }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceMulticastFeatureResultOutput) SptOnlyVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) string { return v.SptOnlyVariable }).(pulumi.StringOutput)
}

// Set Static RP Address(es)
func (o LookupServiceMulticastFeatureResultOutput) StaticRpAddresses() GetServiceMulticastFeatureStaticRpAddressArrayOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) []GetServiceMulticastFeatureStaticRpAddress {
		return v.StaticRpAddresses
	}).(GetServiceMulticastFeatureStaticRpAddressArrayOutput)
}

// The version of the Feature
func (o LookupServiceMulticastFeatureResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceMulticastFeatureResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceMulticastFeatureResultOutput{})
}
