// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Cisco SIG Credentials feature template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupCiscoSigCredentialsFeatureTemplate(ctx, &sdwan.LookupCiscoSigCredentialsFeatureTemplateArgs{
//				Id: pulumi.StringRef("f6b2c44c-693c-4763-b010-895aa3d236bd"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCiscoSigCredentialsFeatureTemplate(ctx *pulumi.Context, args *LookupCiscoSigCredentialsFeatureTemplateArgs, opts ...pulumi.InvokeOption) (*LookupCiscoSigCredentialsFeatureTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCiscoSigCredentialsFeatureTemplateResult
	err := ctx.Invoke("sdwan:index/getCiscoSigCredentialsFeatureTemplate:getCiscoSigCredentialsFeatureTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCiscoSigCredentialsFeatureTemplate.
type LookupCiscoSigCredentialsFeatureTemplateArgs struct {
	// The id of the feature template
	Id *string `pulumi:"id"`
	// The name of the feature template
	Name *string `pulumi:"name"`
}

// A collection of values returned by getCiscoSigCredentialsFeatureTemplate.
type LookupCiscoSigCredentialsFeatureTemplateResult struct {
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	DeviceTypes []string `pulumi:"deviceTypes"`
	// The id of the feature template
	Id string `pulumi:"id"`
	// The name of the feature template
	Name string `pulumi:"name"`
	// The template type
	TemplateType string `pulumi:"templateType"`
	// API Key
	UmbrellaApiKey string `pulumi:"umbrellaApiKey"`
	// Variable name
	UmbrellaApiKeyVariable string `pulumi:"umbrellaApiKeyVariable"`
	// API Secret
	UmbrellaApiSecret string `pulumi:"umbrellaApiSecret"`
	// Variable name
	UmbrellaApiSecretVariable string `pulumi:"umbrellaApiSecretVariable"`
	// Ord ID
	UmbrellaOrganizationId string `pulumi:"umbrellaOrganizationId"`
	// Variable name
	UmbrellaOrganizationIdVariable string `pulumi:"umbrellaOrganizationIdVariable"`
	// The version of the feature template
	Version int `pulumi:"version"`
	// Third Party Cloud Name
	ZscalerCloudName int `pulumi:"zscalerCloudName"`
	// Variable name
	ZscalerCloudNameVariable string `pulumi:"zscalerCloudNameVariable"`
	// Organization Name
	ZscalerOrganization string `pulumi:"zscalerOrganization"`
	// Variable name
	ZscalerOrganizationVariable string `pulumi:"zscalerOrganizationVariable"`
	// Partner API Key
	ZscalerPartnerApiKey string `pulumi:"zscalerPartnerApiKey"`
	// Variable name
	ZscalerPartnerApiKeyVariable string `pulumi:"zscalerPartnerApiKeyVariable"`
	// Partner Base URI to be used in REST calls
	ZscalerPartnerBaseUri string `pulumi:"zscalerPartnerBaseUri"`
	// Variable name
	ZscalerPartnerBaseUriVariable string `pulumi:"zscalerPartnerBaseUriVariable"`
	// Partner Password
	ZscalerPartnerPassword string `pulumi:"zscalerPartnerPassword"`
	// Variable name
	ZscalerPartnerPasswordVariable string `pulumi:"zscalerPartnerPasswordVariable"`
	// Partner User Name
	ZscalerPartnerUsername string `pulumi:"zscalerPartnerUsername"`
	// Variable name
	ZscalerPartnerUsernameVariable string `pulumi:"zscalerPartnerUsernameVariable"`
	// Password of Zscaler partner account
	ZscalerPassword string `pulumi:"zscalerPassword"`
	// Variable name
	ZscalerPasswordVariable string `pulumi:"zscalerPasswordVariable"`
	// Username of Zscaler partner account
	ZscalerUsername string `pulumi:"zscalerUsername"`
	// Variable name
	ZscalerUsernameVariable string `pulumi:"zscalerUsernameVariable"`
}

func LookupCiscoSigCredentialsFeatureTemplateOutput(ctx *pulumi.Context, args LookupCiscoSigCredentialsFeatureTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupCiscoSigCredentialsFeatureTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCiscoSigCredentialsFeatureTemplateResultOutput, error) {
			args := v.(LookupCiscoSigCredentialsFeatureTemplateArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupCiscoSigCredentialsFeatureTemplateResult
			secret, err := ctx.InvokePackageRaw("sdwan:index/getCiscoSigCredentialsFeatureTemplate:getCiscoSigCredentialsFeatureTemplate", args, &rv, "", opts...)
			if err != nil {
				return LookupCiscoSigCredentialsFeatureTemplateResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupCiscoSigCredentialsFeatureTemplateResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupCiscoSigCredentialsFeatureTemplateResultOutput), nil
			}
			return output, nil
		}).(LookupCiscoSigCredentialsFeatureTemplateResultOutput)
}

// A collection of arguments for invoking getCiscoSigCredentialsFeatureTemplate.
type LookupCiscoSigCredentialsFeatureTemplateOutputArgs struct {
	// The id of the feature template
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the feature template
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupCiscoSigCredentialsFeatureTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCiscoSigCredentialsFeatureTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getCiscoSigCredentialsFeatureTemplate.
type LookupCiscoSigCredentialsFeatureTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupCiscoSigCredentialsFeatureTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCiscoSigCredentialsFeatureTemplateResult)(nil)).Elem()
}

func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) ToLookupCiscoSigCredentialsFeatureTemplateResultOutput() LookupCiscoSigCredentialsFeatureTemplateResultOutput {
	return o
}

func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) ToLookupCiscoSigCredentialsFeatureTemplateResultOutputWithContext(ctx context.Context) LookupCiscoSigCredentialsFeatureTemplateResultOutput {
	return o
}

// The description of the feature template
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) []string { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// The id of the feature template
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the feature template
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// The template type
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.TemplateType }).(pulumi.StringOutput)
}

// API Key
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) UmbrellaApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.UmbrellaApiKey }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) UmbrellaApiKeyVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.UmbrellaApiKeyVariable }).(pulumi.StringOutput)
}

// API Secret
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) UmbrellaApiSecret() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.UmbrellaApiSecret }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) UmbrellaApiSecretVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.UmbrellaApiSecretVariable }).(pulumi.StringOutput)
}

// Ord ID
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) UmbrellaOrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.UmbrellaOrganizationId }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) UmbrellaOrganizationIdVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.UmbrellaOrganizationIdVariable }).(pulumi.StringOutput)
}

// The version of the feature template
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) int { return v.Version }).(pulumi.IntOutput)
}

// Third Party Cloud Name
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) ZscalerCloudName() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) int { return v.ZscalerCloudName }).(pulumi.IntOutput)
}

// Variable name
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) ZscalerCloudNameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.ZscalerCloudNameVariable }).(pulumi.StringOutput)
}

// Organization Name
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) ZscalerOrganization() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.ZscalerOrganization }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) ZscalerOrganizationVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.ZscalerOrganizationVariable }).(pulumi.StringOutput)
}

// Partner API Key
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) ZscalerPartnerApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.ZscalerPartnerApiKey }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) ZscalerPartnerApiKeyVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.ZscalerPartnerApiKeyVariable }).(pulumi.StringOutput)
}

// Partner Base URI to be used in REST calls
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) ZscalerPartnerBaseUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.ZscalerPartnerBaseUri }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) ZscalerPartnerBaseUriVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.ZscalerPartnerBaseUriVariable }).(pulumi.StringOutput)
}

// Partner Password
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) ZscalerPartnerPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.ZscalerPartnerPassword }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) ZscalerPartnerPasswordVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.ZscalerPartnerPasswordVariable }).(pulumi.StringOutput)
}

// Partner User Name
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) ZscalerPartnerUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.ZscalerPartnerUsername }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) ZscalerPartnerUsernameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.ZscalerPartnerUsernameVariable }).(pulumi.StringOutput)
}

// Password of Zscaler partner account
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) ZscalerPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.ZscalerPassword }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) ZscalerPasswordVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.ZscalerPasswordVariable }).(pulumi.StringOutput)
}

// Username of Zscaler partner account
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) ZscalerUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.ZscalerUsername }).(pulumi.StringOutput)
}

// Variable name
func (o LookupCiscoSigCredentialsFeatureTemplateResultOutput) ZscalerUsernameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCiscoSigCredentialsFeatureTemplateResult) string { return v.ZscalerUsernameVariable }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCiscoSigCredentialsFeatureTemplateResultOutput{})
}
