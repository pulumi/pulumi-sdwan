// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the Service Routing BGP Feature.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupServiceRoutingBgpFeature(ctx, &sdwan.LookupServiceRoutingBgpFeatureArgs{
//				Id:               "f6b2c44c-693c-4763-b010-895aa3d236bd",
//				FeatureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupServiceRoutingBgpFeature(ctx *pulumi.Context, args *LookupServiceRoutingBgpFeatureArgs, opts ...pulumi.InvokeOption) (*LookupServiceRoutingBgpFeatureResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceRoutingBgpFeatureResult
	err := ctx.Invoke("sdwan:index/getServiceRoutingBgpFeature:getServiceRoutingBgpFeature", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceRoutingBgpFeature.
type LookupServiceRoutingBgpFeatureArgs struct {
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The id of the Feature
	Id string `pulumi:"id"`
}

// A collection of values returned by getServiceRoutingBgpFeature.
type LookupServiceRoutingBgpFeatureResult struct {
	// Compare MEDs from all ASs when selecting active BGP paths
	AlwaysCompareMed bool `pulumi:"alwaysCompareMed"`
	// Variable name
	AlwaysCompareMedVariable string `pulumi:"alwaysCompareMedVariable"`
	// Set autonomous system number \n\n or \n\n
	AsNumber int `pulumi:"asNumber"`
	// Variable name
	AsNumberVariable string `pulumi:"asNumberVariable"`
	// Compare router IDs when selecting active BGP paths
	CompareRouterId bool `pulumi:"compareRouterId"`
	// Variable name
	CompareRouterIdVariable string `pulumi:"compareRouterIdVariable"`
	// The description of the Feature
	Description string `pulumi:"description"`
	// Compare MEDs from all routes from same AS when selecting active BGP paths
	DeterministicMed bool `pulumi:"deterministicMed"`
	// Variable name
	DeterministicMedVariable string `pulumi:"deterministicMedVariable"`
	// Set administrative distance for external BGP routes
	ExternalRoutesDistance int `pulumi:"externalRoutesDistance"`
	// Variable name
	ExternalRoutesDistanceVariable string `pulumi:"externalRoutesDistanceVariable"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// Interval (seconds) not receiving a keepalive message declares a BGP peer down
	HoldTime int `pulumi:"holdTime"`
	// Variable name
	HoldTimeVariable string `pulumi:"holdTimeVariable"`
	// The id of the Feature
	Id string `pulumi:"id"`
	// Set administrative distance for internal BGP routes
	InternalRoutesDistance int `pulumi:"internalRoutesDistance"`
	// Variable name
	InternalRoutesDistanceVariable string `pulumi:"internalRoutesDistanceVariable"`
	// Aggregate prefixes in specific range
	Ipv4AggregateAddresses []GetServiceRoutingBgpFeatureIpv4AggregateAddress `pulumi:"ipv4AggregateAddresses"`
	// Set maximum number of parallel IBGP paths for multipath load sharing
	Ipv4EibgpMaximumPaths int `pulumi:"ipv4EibgpMaximumPaths"`
	// Variable name
	Ipv4EibgpMaximumPathsVariable string `pulumi:"ipv4EibgpMaximumPathsVariable"`
	// Set BGP IPv4 neighbors
	Ipv4Neighbors []GetServiceRoutingBgpFeatureIpv4Neighbor `pulumi:"ipv4Neighbors"`
	// Configure the networks for BGP to advertise
	Ipv4Networks []GetServiceRoutingBgpFeatureIpv4Network `pulumi:"ipv4Networks"`
	// BGP Default Information Originate
	Ipv4Originate bool `pulumi:"ipv4Originate"`
	// Variable name
	Ipv4OriginateVariable string `pulumi:"ipv4OriginateVariable"`
	// Redistribute routes into BGP
	Ipv4Redistributes []GetServiceRoutingBgpFeatureIpv4Redistribute `pulumi:"ipv4Redistributes"`
	// Table map filtered or not
	Ipv4TableMapFilter bool `pulumi:"ipv4TableMapFilter"`
	// Variable name
	Ipv4TableMapFilterVariable string `pulumi:"ipv4TableMapFilterVariable"`
	Ipv4TableMapRoutePolicyId  string `pulumi:"ipv4TableMapRoutePolicyId"`
	// IPv6 Aggregate prefixes in specific range
	Ipv6AggregateAddresses []GetServiceRoutingBgpFeatureIpv6AggregateAddress `pulumi:"ipv6AggregateAddresses"`
	// Set maximum number of parallel IBGP paths for multipath load sharing
	Ipv6EibgpMaximumPaths int `pulumi:"ipv6EibgpMaximumPaths"`
	// Variable name
	Ipv6EibgpMaximumPathsVariable string `pulumi:"ipv6EibgpMaximumPathsVariable"`
	// Set BGP IPv6 neighbors
	Ipv6Neighbors []GetServiceRoutingBgpFeatureIpv6Neighbor `pulumi:"ipv6Neighbors"`
	// Configure the networks for BGP to advertise
	Ipv6Networks []GetServiceRoutingBgpFeatureIpv6Network `pulumi:"ipv6Networks"`
	// BGP Default Information Originate
	Ipv6Originate bool `pulumi:"ipv6Originate"`
	// Variable name
	Ipv6OriginateVariable string `pulumi:"ipv6OriginateVariable"`
	// Redistribute routes into BGP
	Ipv6Redistributes []GetServiceRoutingBgpFeatureIpv6Redistribute `pulumi:"ipv6Redistributes"`
	// Table map filtered or not
	Ipv6TableMapFilter bool `pulumi:"ipv6TableMapFilter"`
	// Variable name
	Ipv6TableMapFilterVariable string `pulumi:"ipv6TableMapFilterVariable"`
	Ipv6TableMapRoutePolicyId  string `pulumi:"ipv6TableMapRoutePolicyId"`
	// Interval (seconds) of keepalive messages sent to its BGP peer
	KeepaliveTime int `pulumi:"keepaliveTime"`
	// Variable name
	KeepaliveTimeVariable string `pulumi:"keepaliveTimeVariable"`
	// Set administrative distance for local BGP routes
	LocalRoutesDistance int `pulumi:"localRoutesDistance"`
	// Variable name
	LocalRoutesDistanceVariable string `pulumi:"localRoutesDistanceVariable"`
	// If path has no MED, consider it to be worst path when selecting active BGP paths
	MissingMedAsWorst bool `pulumi:"missingMedAsWorst"`
	// Variable name
	MissingMedAsWorstVariable string `pulumi:"missingMedAsWorstVariable"`
	// Ignore AS for multipath selection
	MultipathRelax bool `pulumi:"multipathRelax"`
	// Variable name
	MultipathRelaxVariable string `pulumi:"multipathRelaxVariable"`
	// The name of the Feature
	Name string `pulumi:"name"`
	// Propagate AS Path
	PropagateAsPath bool `pulumi:"propagateAsPath"`
	// Variable name
	PropagateAsPathVariable string `pulumi:"propagateAsPathVariable"`
	// Propagate Community
	PropagateCommunity bool `pulumi:"propagateCommunity"`
	// Variable name
	PropagateCommunityVariable string `pulumi:"propagateCommunityVariable"`
	// Configure BGP router identifier
	RouterId string `pulumi:"routerId"`
	// Variable name
	RouterIdVariable string `pulumi:"routerIdVariable"`
	// The version of the Feature
	Version int `pulumi:"version"`
}

func LookupServiceRoutingBgpFeatureOutput(ctx *pulumi.Context, args LookupServiceRoutingBgpFeatureOutputArgs, opts ...pulumi.InvokeOption) LookupServiceRoutingBgpFeatureResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceRoutingBgpFeatureResult, error) {
			args := v.(LookupServiceRoutingBgpFeatureArgs)
			r, err := LookupServiceRoutingBgpFeature(ctx, &args, opts...)
			var s LookupServiceRoutingBgpFeatureResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServiceRoutingBgpFeatureResultOutput)
}

// A collection of arguments for invoking getServiceRoutingBgpFeature.
type LookupServiceRoutingBgpFeatureOutputArgs struct {
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput `pulumi:"featureProfileId"`
	// The id of the Feature
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupServiceRoutingBgpFeatureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceRoutingBgpFeatureArgs)(nil)).Elem()
}

// A collection of values returned by getServiceRoutingBgpFeature.
type LookupServiceRoutingBgpFeatureResultOutput struct{ *pulumi.OutputState }

func (LookupServiceRoutingBgpFeatureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceRoutingBgpFeatureResult)(nil)).Elem()
}

func (o LookupServiceRoutingBgpFeatureResultOutput) ToLookupServiceRoutingBgpFeatureResultOutput() LookupServiceRoutingBgpFeatureResultOutput {
	return o
}

func (o LookupServiceRoutingBgpFeatureResultOutput) ToLookupServiceRoutingBgpFeatureResultOutputWithContext(ctx context.Context) LookupServiceRoutingBgpFeatureResultOutput {
	return o
}

// Compare MEDs from all ASs when selecting active BGP paths
func (o LookupServiceRoutingBgpFeatureResultOutput) AlwaysCompareMed() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) bool { return v.AlwaysCompareMed }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) AlwaysCompareMedVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.AlwaysCompareMedVariable }).(pulumi.StringOutput)
}

// Set autonomous system number \n\n or \n\n
func (o LookupServiceRoutingBgpFeatureResultOutput) AsNumber() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) int { return v.AsNumber }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) AsNumberVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.AsNumberVariable }).(pulumi.StringOutput)
}

// Compare router IDs when selecting active BGP paths
func (o LookupServiceRoutingBgpFeatureResultOutput) CompareRouterId() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) bool { return v.CompareRouterId }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) CompareRouterIdVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.CompareRouterIdVariable }).(pulumi.StringOutput)
}

// The description of the Feature
func (o LookupServiceRoutingBgpFeatureResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.Description }).(pulumi.StringOutput)
}

// Compare MEDs from all routes from same AS when selecting active BGP paths
func (o LookupServiceRoutingBgpFeatureResultOutput) DeterministicMed() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) bool { return v.DeterministicMed }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) DeterministicMedVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.DeterministicMedVariable }).(pulumi.StringOutput)
}

// Set administrative distance for external BGP routes
func (o LookupServiceRoutingBgpFeatureResultOutput) ExternalRoutesDistance() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) int { return v.ExternalRoutesDistance }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) ExternalRoutesDistanceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.ExternalRoutesDistanceVariable }).(pulumi.StringOutput)
}

// Feature Profile ID
func (o LookupServiceRoutingBgpFeatureResultOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// Interval (seconds) not receiving a keepalive message declares a BGP peer down
func (o LookupServiceRoutingBgpFeatureResultOutput) HoldTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) int { return v.HoldTime }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) HoldTimeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.HoldTimeVariable }).(pulumi.StringOutput)
}

// The id of the Feature
func (o LookupServiceRoutingBgpFeatureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.Id }).(pulumi.StringOutput)
}

// Set administrative distance for internal BGP routes
func (o LookupServiceRoutingBgpFeatureResultOutput) InternalRoutesDistance() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) int { return v.InternalRoutesDistance }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) InternalRoutesDistanceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.InternalRoutesDistanceVariable }).(pulumi.StringOutput)
}

// Aggregate prefixes in specific range
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv4AggregateAddresses() GetServiceRoutingBgpFeatureIpv4AggregateAddressArrayOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) []GetServiceRoutingBgpFeatureIpv4AggregateAddress {
		return v.Ipv4AggregateAddresses
	}).(GetServiceRoutingBgpFeatureIpv4AggregateAddressArrayOutput)
}

// Set maximum number of parallel IBGP paths for multipath load sharing
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv4EibgpMaximumPaths() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) int { return v.Ipv4EibgpMaximumPaths }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv4EibgpMaximumPathsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.Ipv4EibgpMaximumPathsVariable }).(pulumi.StringOutput)
}

// Set BGP IPv4 neighbors
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv4Neighbors() GetServiceRoutingBgpFeatureIpv4NeighborArrayOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) []GetServiceRoutingBgpFeatureIpv4Neighbor {
		return v.Ipv4Neighbors
	}).(GetServiceRoutingBgpFeatureIpv4NeighborArrayOutput)
}

// Configure the networks for BGP to advertise
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv4Networks() GetServiceRoutingBgpFeatureIpv4NetworkArrayOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) []GetServiceRoutingBgpFeatureIpv4Network {
		return v.Ipv4Networks
	}).(GetServiceRoutingBgpFeatureIpv4NetworkArrayOutput)
}

// BGP Default Information Originate
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv4Originate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) bool { return v.Ipv4Originate }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv4OriginateVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.Ipv4OriginateVariable }).(pulumi.StringOutput)
}

// Redistribute routes into BGP
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv4Redistributes() GetServiceRoutingBgpFeatureIpv4RedistributeArrayOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) []GetServiceRoutingBgpFeatureIpv4Redistribute {
		return v.Ipv4Redistributes
	}).(GetServiceRoutingBgpFeatureIpv4RedistributeArrayOutput)
}

// Table map filtered or not
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv4TableMapFilter() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) bool { return v.Ipv4TableMapFilter }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv4TableMapFilterVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.Ipv4TableMapFilterVariable }).(pulumi.StringOutput)
}

func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv4TableMapRoutePolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.Ipv4TableMapRoutePolicyId }).(pulumi.StringOutput)
}

// IPv6 Aggregate prefixes in specific range
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv6AggregateAddresses() GetServiceRoutingBgpFeatureIpv6AggregateAddressArrayOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) []GetServiceRoutingBgpFeatureIpv6AggregateAddress {
		return v.Ipv6AggregateAddresses
	}).(GetServiceRoutingBgpFeatureIpv6AggregateAddressArrayOutput)
}

// Set maximum number of parallel IBGP paths for multipath load sharing
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv6EibgpMaximumPaths() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) int { return v.Ipv6EibgpMaximumPaths }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv6EibgpMaximumPathsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.Ipv6EibgpMaximumPathsVariable }).(pulumi.StringOutput)
}

// Set BGP IPv6 neighbors
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv6Neighbors() GetServiceRoutingBgpFeatureIpv6NeighborArrayOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) []GetServiceRoutingBgpFeatureIpv6Neighbor {
		return v.Ipv6Neighbors
	}).(GetServiceRoutingBgpFeatureIpv6NeighborArrayOutput)
}

// Configure the networks for BGP to advertise
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv6Networks() GetServiceRoutingBgpFeatureIpv6NetworkArrayOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) []GetServiceRoutingBgpFeatureIpv6Network {
		return v.Ipv6Networks
	}).(GetServiceRoutingBgpFeatureIpv6NetworkArrayOutput)
}

// BGP Default Information Originate
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv6Originate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) bool { return v.Ipv6Originate }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv6OriginateVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.Ipv6OriginateVariable }).(pulumi.StringOutput)
}

// Redistribute routes into BGP
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv6Redistributes() GetServiceRoutingBgpFeatureIpv6RedistributeArrayOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) []GetServiceRoutingBgpFeatureIpv6Redistribute {
		return v.Ipv6Redistributes
	}).(GetServiceRoutingBgpFeatureIpv6RedistributeArrayOutput)
}

// Table map filtered or not
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv6TableMapFilter() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) bool { return v.Ipv6TableMapFilter }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv6TableMapFilterVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.Ipv6TableMapFilterVariable }).(pulumi.StringOutput)
}

func (o LookupServiceRoutingBgpFeatureResultOutput) Ipv6TableMapRoutePolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.Ipv6TableMapRoutePolicyId }).(pulumi.StringOutput)
}

// Interval (seconds) of keepalive messages sent to its BGP peer
func (o LookupServiceRoutingBgpFeatureResultOutput) KeepaliveTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) int { return v.KeepaliveTime }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) KeepaliveTimeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.KeepaliveTimeVariable }).(pulumi.StringOutput)
}

// Set administrative distance for local BGP routes
func (o LookupServiceRoutingBgpFeatureResultOutput) LocalRoutesDistance() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) int { return v.LocalRoutesDistance }).(pulumi.IntOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) LocalRoutesDistanceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.LocalRoutesDistanceVariable }).(pulumi.StringOutput)
}

// If path has no MED, consider it to be worst path when selecting active BGP paths
func (o LookupServiceRoutingBgpFeatureResultOutput) MissingMedAsWorst() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) bool { return v.MissingMedAsWorst }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) MissingMedAsWorstVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.MissingMedAsWorstVariable }).(pulumi.StringOutput)
}

// Ignore AS for multipath selection
func (o LookupServiceRoutingBgpFeatureResultOutput) MultipathRelax() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) bool { return v.MultipathRelax }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) MultipathRelaxVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.MultipathRelaxVariable }).(pulumi.StringOutput)
}

// The name of the Feature
func (o LookupServiceRoutingBgpFeatureResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.Name }).(pulumi.StringOutput)
}

// Propagate AS Path
func (o LookupServiceRoutingBgpFeatureResultOutput) PropagateAsPath() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) bool { return v.PropagateAsPath }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) PropagateAsPathVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.PropagateAsPathVariable }).(pulumi.StringOutput)
}

// Propagate Community
func (o LookupServiceRoutingBgpFeatureResultOutput) PropagateCommunity() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) bool { return v.PropagateCommunity }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) PropagateCommunityVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.PropagateCommunityVariable }).(pulumi.StringOutput)
}

// Configure BGP router identifier
func (o LookupServiceRoutingBgpFeatureResultOutput) RouterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.RouterId }).(pulumi.StringOutput)
}

// Variable name
func (o LookupServiceRoutingBgpFeatureResultOutput) RouterIdVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) string { return v.RouterIdVariable }).(pulumi.StringOutput)
}

// The version of the Feature
func (o LookupServiceRoutingBgpFeatureResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceRoutingBgpFeatureResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceRoutingBgpFeatureResultOutput{})
}
