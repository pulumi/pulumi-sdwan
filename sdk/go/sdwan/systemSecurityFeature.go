// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a System Security Feature.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Example Usage
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Expected import identifier with the format: "system_security_feature_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/systemSecurityFeature:SystemSecurityFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type SystemSecurityFeature struct {
	pulumi.CustomResourceState

	// Set the sliding replay window size
	//   - Choices: `64`, `128`, `256`, `512`, `1024`, `2048`, `4096`, `8192`
	//   - Default value: `512`
	AntiReplayWindow pulumi.StringPtrOutput `pulumi:"antiReplayWindow"`
	// Variable name
	AntiReplayWindowVariable pulumi.StringPtrOutput `pulumi:"antiReplayWindowVariable"`
	// The description of the Feature
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Extended Anti-Replay Window
	//   - Range: `10`-`2048`
	//   - Default value: `256`
	ExtendedAntiReplayWindow pulumi.IntPtrOutput `pulumi:"extendedAntiReplayWindow"`
	// Variable name
	ExtendedAntiReplayWindowVariable pulumi.StringPtrOutput `pulumi:"extendedAntiReplayWindowVariable"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// Variable name
	IntegrityTypeVariable pulumi.StringPtrOutput `pulumi:"integrityTypeVariable"`
	// Set the authentication type for DTLS connections
	IntegrityTypes pulumi.StringArrayOutput `pulumi:"integrityTypes"`
	// Enable or disable IPsec pairwise-keying
	//   - Default value: `false`
	IpsecPairwiseKeying pulumi.BoolPtrOutput `pulumi:"ipsecPairwiseKeying"`
	// Variable name
	IpsecPairwiseKeyingVariable pulumi.StringPtrOutput `pulumi:"ipsecPairwiseKeyingVariable"`
	// Configure a Keychain
	Keychains SystemSecurityFeatureKeychainArrayOutput `pulumi:"keychains"`
	// Configure a Key
	Keys SystemSecurityFeatureKeyArrayOutput `pulumi:"keys"`
	// The name of the Feature
	Name pulumi.StringOutput `pulumi:"name"`
	// Set how often to change the AES key for DTLS connections
	//   - Range: `10`-`1209600`
	//   - Default value: `86400`
	Rekey pulumi.IntPtrOutput `pulumi:"rekey"`
	// Variable name
	RekeyVariable pulumi.StringPtrOutput `pulumi:"rekeyVariable"`
	// The version of the Feature
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewSystemSecurityFeature registers a new resource with the given unique name, arguments, and options.
func NewSystemSecurityFeature(ctx *pulumi.Context,
	name string, args *SystemSecurityFeatureArgs, opts ...pulumi.ResourceOption) (*SystemSecurityFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemSecurityFeature
	err := ctx.RegisterResource("sdwan:index/systemSecurityFeature:SystemSecurityFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemSecurityFeature gets an existing SystemSecurityFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemSecurityFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemSecurityFeatureState, opts ...pulumi.ResourceOption) (*SystemSecurityFeature, error) {
	var resource SystemSecurityFeature
	err := ctx.ReadResource("sdwan:index/systemSecurityFeature:SystemSecurityFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemSecurityFeature resources.
type systemSecurityFeatureState struct {
	// Set the sliding replay window size
	//   - Choices: `64`, `128`, `256`, `512`, `1024`, `2048`, `4096`, `8192`
	//   - Default value: `512`
	AntiReplayWindow *string `pulumi:"antiReplayWindow"`
	// Variable name
	AntiReplayWindowVariable *string `pulumi:"antiReplayWindowVariable"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Extended Anti-Replay Window
	//   - Range: `10`-`2048`
	//   - Default value: `256`
	ExtendedAntiReplayWindow *int `pulumi:"extendedAntiReplayWindow"`
	// Variable name
	ExtendedAntiReplayWindowVariable *string `pulumi:"extendedAntiReplayWindowVariable"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// Variable name
	IntegrityTypeVariable *string `pulumi:"integrityTypeVariable"`
	// Set the authentication type for DTLS connections
	IntegrityTypes []string `pulumi:"integrityTypes"`
	// Enable or disable IPsec pairwise-keying
	//   - Default value: `false`
	IpsecPairwiseKeying *bool `pulumi:"ipsecPairwiseKeying"`
	// Variable name
	IpsecPairwiseKeyingVariable *string `pulumi:"ipsecPairwiseKeyingVariable"`
	// Configure a Keychain
	Keychains []SystemSecurityFeatureKeychain `pulumi:"keychains"`
	// Configure a Key
	Keys []SystemSecurityFeatureKey `pulumi:"keys"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Set how often to change the AES key for DTLS connections
	//   - Range: `10`-`1209600`
	//   - Default value: `86400`
	Rekey *int `pulumi:"rekey"`
	// Variable name
	RekeyVariable *string `pulumi:"rekeyVariable"`
	// The version of the Feature
	Version *int `pulumi:"version"`
}

type SystemSecurityFeatureState struct {
	// Set the sliding replay window size
	//   - Choices: `64`, `128`, `256`, `512`, `1024`, `2048`, `4096`, `8192`
	//   - Default value: `512`
	AntiReplayWindow pulumi.StringPtrInput
	// Variable name
	AntiReplayWindowVariable pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Extended Anti-Replay Window
	//   - Range: `10`-`2048`
	//   - Default value: `256`
	ExtendedAntiReplayWindow pulumi.IntPtrInput
	// Variable name
	ExtendedAntiReplayWindowVariable pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// Variable name
	IntegrityTypeVariable pulumi.StringPtrInput
	// Set the authentication type for DTLS connections
	IntegrityTypes pulumi.StringArrayInput
	// Enable or disable IPsec pairwise-keying
	//   - Default value: `false`
	IpsecPairwiseKeying pulumi.BoolPtrInput
	// Variable name
	IpsecPairwiseKeyingVariable pulumi.StringPtrInput
	// Configure a Keychain
	Keychains SystemSecurityFeatureKeychainArrayInput
	// Configure a Key
	Keys SystemSecurityFeatureKeyArrayInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Set how often to change the AES key for DTLS connections
	//   - Range: `10`-`1209600`
	//   - Default value: `86400`
	Rekey pulumi.IntPtrInput
	// Variable name
	RekeyVariable pulumi.StringPtrInput
	// The version of the Feature
	Version pulumi.IntPtrInput
}

func (SystemSecurityFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSecurityFeatureState)(nil)).Elem()
}

type systemSecurityFeatureArgs struct {
	// Set the sliding replay window size
	//   - Choices: `64`, `128`, `256`, `512`, `1024`, `2048`, `4096`, `8192`
	//   - Default value: `512`
	AntiReplayWindow *string `pulumi:"antiReplayWindow"`
	// Variable name
	AntiReplayWindowVariable *string `pulumi:"antiReplayWindowVariable"`
	// The description of the Feature
	Description *string `pulumi:"description"`
	// Extended Anti-Replay Window
	//   - Range: `10`-`2048`
	//   - Default value: `256`
	ExtendedAntiReplayWindow *int `pulumi:"extendedAntiReplayWindow"`
	// Variable name
	ExtendedAntiReplayWindowVariable *string `pulumi:"extendedAntiReplayWindowVariable"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// Variable name
	IntegrityTypeVariable *string `pulumi:"integrityTypeVariable"`
	// Set the authentication type for DTLS connections
	IntegrityTypes []string `pulumi:"integrityTypes"`
	// Enable or disable IPsec pairwise-keying
	//   - Default value: `false`
	IpsecPairwiseKeying *bool `pulumi:"ipsecPairwiseKeying"`
	// Variable name
	IpsecPairwiseKeyingVariable *string `pulumi:"ipsecPairwiseKeyingVariable"`
	// Configure a Keychain
	Keychains []SystemSecurityFeatureKeychain `pulumi:"keychains"`
	// Configure a Key
	Keys []SystemSecurityFeatureKey `pulumi:"keys"`
	// The name of the Feature
	Name *string `pulumi:"name"`
	// Set how often to change the AES key for DTLS connections
	//   - Range: `10`-`1209600`
	//   - Default value: `86400`
	Rekey *int `pulumi:"rekey"`
	// Variable name
	RekeyVariable *string `pulumi:"rekeyVariable"`
}

// The set of arguments for constructing a SystemSecurityFeature resource.
type SystemSecurityFeatureArgs struct {
	// Set the sliding replay window size
	//   - Choices: `64`, `128`, `256`, `512`, `1024`, `2048`, `4096`, `8192`
	//   - Default value: `512`
	AntiReplayWindow pulumi.StringPtrInput
	// Variable name
	AntiReplayWindowVariable pulumi.StringPtrInput
	// The description of the Feature
	Description pulumi.StringPtrInput
	// Extended Anti-Replay Window
	//   - Range: `10`-`2048`
	//   - Default value: `256`
	ExtendedAntiReplayWindow pulumi.IntPtrInput
	// Variable name
	ExtendedAntiReplayWindowVariable pulumi.StringPtrInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// Variable name
	IntegrityTypeVariable pulumi.StringPtrInput
	// Set the authentication type for DTLS connections
	IntegrityTypes pulumi.StringArrayInput
	// Enable or disable IPsec pairwise-keying
	//   - Default value: `false`
	IpsecPairwiseKeying pulumi.BoolPtrInput
	// Variable name
	IpsecPairwiseKeyingVariable pulumi.StringPtrInput
	// Configure a Keychain
	Keychains SystemSecurityFeatureKeychainArrayInput
	// Configure a Key
	Keys SystemSecurityFeatureKeyArrayInput
	// The name of the Feature
	Name pulumi.StringPtrInput
	// Set how often to change the AES key for DTLS connections
	//   - Range: `10`-`1209600`
	//   - Default value: `86400`
	Rekey pulumi.IntPtrInput
	// Variable name
	RekeyVariable pulumi.StringPtrInput
}

func (SystemSecurityFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemSecurityFeatureArgs)(nil)).Elem()
}

type SystemSecurityFeatureInput interface {
	pulumi.Input

	ToSystemSecurityFeatureOutput() SystemSecurityFeatureOutput
	ToSystemSecurityFeatureOutputWithContext(ctx context.Context) SystemSecurityFeatureOutput
}

func (*SystemSecurityFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSecurityFeature)(nil)).Elem()
}

func (i *SystemSecurityFeature) ToSystemSecurityFeatureOutput() SystemSecurityFeatureOutput {
	return i.ToSystemSecurityFeatureOutputWithContext(context.Background())
}

func (i *SystemSecurityFeature) ToSystemSecurityFeatureOutputWithContext(ctx context.Context) SystemSecurityFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSecurityFeatureOutput)
}

// SystemSecurityFeatureArrayInput is an input type that accepts SystemSecurityFeatureArray and SystemSecurityFeatureArrayOutput values.
// You can construct a concrete instance of `SystemSecurityFeatureArrayInput` via:
//
//	SystemSecurityFeatureArray{ SystemSecurityFeatureArgs{...} }
type SystemSecurityFeatureArrayInput interface {
	pulumi.Input

	ToSystemSecurityFeatureArrayOutput() SystemSecurityFeatureArrayOutput
	ToSystemSecurityFeatureArrayOutputWithContext(context.Context) SystemSecurityFeatureArrayOutput
}

type SystemSecurityFeatureArray []SystemSecurityFeatureInput

func (SystemSecurityFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSecurityFeature)(nil)).Elem()
}

func (i SystemSecurityFeatureArray) ToSystemSecurityFeatureArrayOutput() SystemSecurityFeatureArrayOutput {
	return i.ToSystemSecurityFeatureArrayOutputWithContext(context.Background())
}

func (i SystemSecurityFeatureArray) ToSystemSecurityFeatureArrayOutputWithContext(ctx context.Context) SystemSecurityFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSecurityFeatureArrayOutput)
}

// SystemSecurityFeatureMapInput is an input type that accepts SystemSecurityFeatureMap and SystemSecurityFeatureMapOutput values.
// You can construct a concrete instance of `SystemSecurityFeatureMapInput` via:
//
//	SystemSecurityFeatureMap{ "key": SystemSecurityFeatureArgs{...} }
type SystemSecurityFeatureMapInput interface {
	pulumi.Input

	ToSystemSecurityFeatureMapOutput() SystemSecurityFeatureMapOutput
	ToSystemSecurityFeatureMapOutputWithContext(context.Context) SystemSecurityFeatureMapOutput
}

type SystemSecurityFeatureMap map[string]SystemSecurityFeatureInput

func (SystemSecurityFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSecurityFeature)(nil)).Elem()
}

func (i SystemSecurityFeatureMap) ToSystemSecurityFeatureMapOutput() SystemSecurityFeatureMapOutput {
	return i.ToSystemSecurityFeatureMapOutputWithContext(context.Background())
}

func (i SystemSecurityFeatureMap) ToSystemSecurityFeatureMapOutputWithContext(ctx context.Context) SystemSecurityFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemSecurityFeatureMapOutput)
}

type SystemSecurityFeatureOutput struct{ *pulumi.OutputState }

func (SystemSecurityFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemSecurityFeature)(nil)).Elem()
}

func (o SystemSecurityFeatureOutput) ToSystemSecurityFeatureOutput() SystemSecurityFeatureOutput {
	return o
}

func (o SystemSecurityFeatureOutput) ToSystemSecurityFeatureOutputWithContext(ctx context.Context) SystemSecurityFeatureOutput {
	return o
}

// Set the sliding replay window size
//   - Choices: `64`, `128`, `256`, `512`, `1024`, `2048`, `4096`, `8192`
//   - Default value: `512`
func (o SystemSecurityFeatureOutput) AntiReplayWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSecurityFeature) pulumi.StringPtrOutput { return v.AntiReplayWindow }).(pulumi.StringPtrOutput)
}

// Variable name
func (o SystemSecurityFeatureOutput) AntiReplayWindowVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSecurityFeature) pulumi.StringPtrOutput { return v.AntiReplayWindowVariable }).(pulumi.StringPtrOutput)
}

// The description of the Feature
func (o SystemSecurityFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSecurityFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Extended Anti-Replay Window
//   - Range: `10`-`2048`
//   - Default value: `256`
func (o SystemSecurityFeatureOutput) ExtendedAntiReplayWindow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemSecurityFeature) pulumi.IntPtrOutput { return v.ExtendedAntiReplayWindow }).(pulumi.IntPtrOutput)
}

// Variable name
func (o SystemSecurityFeatureOutput) ExtendedAntiReplayWindowVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSecurityFeature) pulumi.StringPtrOutput { return v.ExtendedAntiReplayWindowVariable }).(pulumi.StringPtrOutput)
}

// Feature Profile ID
func (o SystemSecurityFeatureOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSecurityFeature) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// Variable name
func (o SystemSecurityFeatureOutput) IntegrityTypeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSecurityFeature) pulumi.StringPtrOutput { return v.IntegrityTypeVariable }).(pulumi.StringPtrOutput)
}

// Set the authentication type for DTLS connections
func (o SystemSecurityFeatureOutput) IntegrityTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SystemSecurityFeature) pulumi.StringArrayOutput { return v.IntegrityTypes }).(pulumi.StringArrayOutput)
}

// Enable or disable IPsec pairwise-keying
//   - Default value: `false`
func (o SystemSecurityFeatureOutput) IpsecPairwiseKeying() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SystemSecurityFeature) pulumi.BoolPtrOutput { return v.IpsecPairwiseKeying }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o SystemSecurityFeatureOutput) IpsecPairwiseKeyingVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSecurityFeature) pulumi.StringPtrOutput { return v.IpsecPairwiseKeyingVariable }).(pulumi.StringPtrOutput)
}

// Configure a Keychain
func (o SystemSecurityFeatureOutput) Keychains() SystemSecurityFeatureKeychainArrayOutput {
	return o.ApplyT(func(v *SystemSecurityFeature) SystemSecurityFeatureKeychainArrayOutput { return v.Keychains }).(SystemSecurityFeatureKeychainArrayOutput)
}

// Configure a Key
func (o SystemSecurityFeatureOutput) Keys() SystemSecurityFeatureKeyArrayOutput {
	return o.ApplyT(func(v *SystemSecurityFeature) SystemSecurityFeatureKeyArrayOutput { return v.Keys }).(SystemSecurityFeatureKeyArrayOutput)
}

// The name of the Feature
func (o SystemSecurityFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemSecurityFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Set how often to change the AES key for DTLS connections
//   - Range: `10`-`1209600`
//   - Default value: `86400`
func (o SystemSecurityFeatureOutput) Rekey() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SystemSecurityFeature) pulumi.IntPtrOutput { return v.Rekey }).(pulumi.IntPtrOutput)
}

// Variable name
func (o SystemSecurityFeatureOutput) RekeyVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemSecurityFeature) pulumi.StringPtrOutput { return v.RekeyVariable }).(pulumi.StringPtrOutput)
}

// The version of the Feature
func (o SystemSecurityFeatureOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *SystemSecurityFeature) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type SystemSecurityFeatureArrayOutput struct{ *pulumi.OutputState }

func (SystemSecurityFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemSecurityFeature)(nil)).Elem()
}

func (o SystemSecurityFeatureArrayOutput) ToSystemSecurityFeatureArrayOutput() SystemSecurityFeatureArrayOutput {
	return o
}

func (o SystemSecurityFeatureArrayOutput) ToSystemSecurityFeatureArrayOutputWithContext(ctx context.Context) SystemSecurityFeatureArrayOutput {
	return o
}

func (o SystemSecurityFeatureArrayOutput) Index(i pulumi.IntInput) SystemSecurityFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemSecurityFeature {
		return vs[0].([]*SystemSecurityFeature)[vs[1].(int)]
	}).(SystemSecurityFeatureOutput)
}

type SystemSecurityFeatureMapOutput struct{ *pulumi.OutputState }

func (SystemSecurityFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemSecurityFeature)(nil)).Elem()
}

func (o SystemSecurityFeatureMapOutput) ToSystemSecurityFeatureMapOutput() SystemSecurityFeatureMapOutput {
	return o
}

func (o SystemSecurityFeatureMapOutput) ToSystemSecurityFeatureMapOutputWithContext(ctx context.Context) SystemSecurityFeatureMapOutput {
	return o
}

func (o SystemSecurityFeatureMapOutput) MapIndex(k pulumi.StringInput) SystemSecurityFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemSecurityFeature {
		return vs[0].(map[string]*SystemSecurityFeature)[vs[1].(string)]
	}).(SystemSecurityFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSecurityFeatureInput)(nil)).Elem(), &SystemSecurityFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSecurityFeatureArrayInput)(nil)).Elem(), SystemSecurityFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemSecurityFeatureMapInput)(nil)).Elem(), SystemSecurityFeatureMap{})
	pulumi.RegisterOutputType(SystemSecurityFeatureOutput{})
	pulumi.RegisterOutputType(SystemSecurityFeatureArrayOutput{})
	pulumi.RegisterOutputType(SystemSecurityFeatureMapOutput{})
}
