// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can read the VPN Interface Ethernet PPPoE feature template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sdwan.LookupVpnInterfaceEthernetPppoeFeatureTemplate(ctx, &sdwan.LookupVpnInterfaceEthernetPppoeFeatureTemplateArgs{
//				Id: pulumi.StringRef("f6b2c44c-693c-4763-b010-895aa3d236bd"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVpnInterfaceEthernetPppoeFeatureTemplate(ctx *pulumi.Context, args *LookupVpnInterfaceEthernetPppoeFeatureTemplateArgs, opts ...pulumi.InvokeOption) (*LookupVpnInterfaceEthernetPppoeFeatureTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpnInterfaceEthernetPppoeFeatureTemplateResult
	err := ctx.Invoke("sdwan:index/getVpnInterfaceEthernetPppoeFeatureTemplate:getVpnInterfaceEthernetPppoeFeatureTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpnInterfaceEthernetPppoeFeatureTemplate.
type LookupVpnInterfaceEthernetPppoeFeatureTemplateArgs struct {
	// The id of the feature template
	Id *string `pulumi:"id"`
	// The name of the feature template
	Name *string `pulumi:"name"`
}

// A collection of values returned by getVpnInterfaceEthernetPppoeFeatureTemplate.
type LookupVpnInterfaceEthernetPppoeFeatureTemplateResult struct {
	// Apply ACL
	AccessLists []GetVpnInterfaceEthernetPppoeFeatureTemplateAccessList `pulumi:"accessLists"`
	// Interface downstream bandwidth capacity, in kbps
	BandwidthDownstream int `pulumi:"bandwidthDownstream"`
	// Variable name
	BandwidthDownstreamVariable string `pulumi:"bandwidthDownstreamVariable"`
	// Interface upstream bandwidth capacity, in kbps
	BandwidthUpstream int `pulumi:"bandwidthUpstream"`
	// Variable name
	BandwidthUpstreamVariable string `pulumi:"bandwidthUpstreamVariable"`
	// CHAP Hostname
	ChapHostname string `pulumi:"chapHostname"`
	// Variable name
	ChapHostnameVariable string `pulumi:"chapHostnameVariable"`
	// Specify ppp chap authentication Password
	ChapPppAuthPassword string `pulumi:"chapPppAuthPassword"`
	// Variable name
	ChapPppAuthPasswordVariable string `pulumi:"chapPppAuthPasswordVariable"`
	// Enable core region
	CoreRegion string `pulumi:"coreRegion"`
	// Variable name
	CoreRegionVariable string `pulumi:"coreRegionVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Dialer IP Negotiated
	DialerAddressNegotiated bool `pulumi:"dialerAddressNegotiated"`
	// Variable name
	DialerAddressNegotiatedVariable string `pulumi:"dialerAddressNegotiatedVariable"`
	// Dialer pool number
	DialerPoolNumber int `pulumi:"dialerPoolNumber"`
	// Variable name
	DialerPoolNumberVariable string `pulumi:"dialerPoolNumberVariable"`
	// Dialer TCP MSS on SYN packets, in bytes
	DialerTcpMss int `pulumi:"dialerTcpMss"`
	// Variable name
	DialerTcpMssVariable string `pulumi:"dialerTcpMssVariable"`
	// Enable core region
	EnableCoreRegion bool `pulumi:"enableCoreRegion"`
	// Encapsulation VLAN id
	Encap int `pulumi:"encap"`
	// Variable name
	EncapVariable string `pulumi:"encapVariable"`
	// Ethernet Interface/Sub Interface Name including sub interface number
	EthernetInterfaceName string `pulumi:"ethernetInterfaceName"`
	// Variable name
	EthernetInterfaceNameVariable string `pulumi:"ethernetInterfaceNameVariable"`
	// The id of the feature template
	Id string `pulumi:"id"`
	// Interface description
	InterfaceDescription string `pulumi:"interfaceDescription"`
	// Variable name
	InterfaceDescriptionVariable string `pulumi:"interfaceDescriptionVariable"`
	// IP Directed-Broadcast
	IpDirectedBroadcast bool `pulumi:"ipDirectedBroadcast"`
	// Variable name
	IpDirectedBroadcastVariable string `pulumi:"ipDirectedBroadcastVariable"`
	// IP MTU \n\n, in bytes
	IpMtuForDialerInterface int `pulumi:"ipMtuForDialerInterface"`
	// Variable name
	IpMtuForDialerInterfaceVariable string `pulumi:"ipMtuForDialerInterfaceVariable"`
	// The name of the feature template
	Name string `pulumi:"name"`
	// Network Address Translation on this interface
	Nat bool `pulumi:"nat"`
	// Block inbound ICMP error messages
	NatBlockIcmpError bool `pulumi:"natBlockIcmpError"`
	// Variable name
	NatBlockIcmpErrorVariable string `pulumi:"natBlockIcmpErrorVariable"`
	// Set port-forwarding rules for NAT on this interface
	NatPortForwards []GetVpnInterfaceEthernetPppoeFeatureTemplateNatPortForward `pulumi:"natPortForwards"`
	// Set NAT refresh mode
	NatRefreshMode string `pulumi:"natRefreshMode"`
	// Variable name
	NatRefreshModeVariable string `pulumi:"natRefreshModeVariable"`
	// Respond to ping requests to NAT interface ip address from the public side
	NatResponseToPing bool `pulumi:"natResponseToPing"`
	// Variable name
	NatResponseToPingVariable string `pulumi:"natResponseToPingVariable"`
	// Set NAT TCP session timeout, in minutes
	NatTcpTimeout int `pulumi:"natTcpTimeout"`
	// Variable name
	NatTcpTimeoutVariable string `pulumi:"natTcpTimeoutVariable"`
	// Set NAT UDP session timeout, in minutes
	NatUdpTimeout int `pulumi:"natUdpTimeout"`
	// Variable name
	NatUdpTimeoutVariable string `pulumi:"natUdpTimeoutVariable"`
	// PAP outbound Password
	PapPassword bool `pulumi:"papPassword"`
	// Specify ppp pap authentication Password
	PapPppAuthPassword string `pulumi:"papPppAuthPassword"`
	// Variable name
	PapPppAuthPasswordVariable string `pulumi:"papPppAuthPasswordVariable"`
	// PAP outbound Sent Username
	PapUsername string `pulumi:"papUsername"`
	// Variable name
	PapUsernameVariable string `pulumi:"papUsernameVariable"`
	// Per-tunnel Qos
	PerTunnelQos bool `pulumi:"perTunnelQos"`
	// Per-tunnel QoS Aggregator
	PerTunnelQosAggregator bool `pulumi:"perTunnelQosAggregator"`
	// Variable name
	PerTunnelQosAggregatorVariable string `pulumi:"perTunnelQosAggregatorVariable"`
	// Variable name
	PerTunnelQosVariable string `pulumi:"perTunnelQosVariable"`
	// Enable policer
	Policers []GetVpnInterfaceEthernetPppoeFeatureTemplatePolicer `pulumi:"policers"`
	// PPP Link Authentication Protocol
	PppAuthenticationProtocol string `pulumi:"pppAuthenticationProtocol"`
	// PPP Authentication Protocol PAP
	PppAuthenticationProtocolPap bool `pulumi:"pppAuthenticationProtocolPap"`
	// Variable name
	PppAuthenticationProtocolVariable string `pulumi:"pppAuthenticationProtocolVariable"`
	// Authenticate remote on incoming call only
	PppAuthenticationType string `pulumi:"pppAuthenticationType"`
	// Maximum MRU to be negotiated during PPP LCP negotiation
	PppMaximumPayload int `pulumi:"pppMaximumPayload"`
	// Variable name
	PppMaximumPayloadVariable string `pulumi:"pppMaximumPayloadVariable"`
	// Adaptive QoS default downstream bandwidth
	QosAdaptiveBandwidthDownstream int `pulumi:"qosAdaptiveBandwidthDownstream"`
	// Variable name
	QosAdaptiveBandwidthDownstreamVariable string `pulumi:"qosAdaptiveBandwidthDownstreamVariable"`
	// Adaptive QoS default upstream bandwidth
	QosAdaptiveBandwidthUpstream int `pulumi:"qosAdaptiveBandwidthUpstream"`
	// Variable name
	QosAdaptiveBandwidthUpstreamVariable string `pulumi:"qosAdaptiveBandwidthUpstreamVariable"`
	// Downstream max bandwidth limit
	QosAdaptiveMaxDownstream int `pulumi:"qosAdaptiveMaxDownstream"`
	// Variable name
	QosAdaptiveMaxDownstreamVariable string `pulumi:"qosAdaptiveMaxDownstreamVariable"`
	// Upstream max bandwidth limit
	QosAdaptiveMaxUpstream int `pulumi:"qosAdaptiveMaxUpstream"`
	// Variable name
	QosAdaptiveMaxUpstreamVariable string `pulumi:"qosAdaptiveMaxUpstreamVariable"`
	// Downstream min bandwidth limit
	QosAdaptiveMinDownstream int `pulumi:"qosAdaptiveMinDownstream"`
	// Variable name
	QosAdaptiveMinDownstreamVariable string `pulumi:"qosAdaptiveMinDownstreamVariable"`
	// Upstream min bandwidth limit
	QosAdaptiveMinUpstream int `pulumi:"qosAdaptiveMinUpstream"`
	// Variable name
	QosAdaptiveMinUpstreamVariable string `pulumi:"qosAdaptiveMinUpstreamVariable"`
	// Periodic timer for adaptive QoS in minutes
	QosAdaptivePeriod int `pulumi:"qosAdaptivePeriod"`
	// Variable name
	QosAdaptivePeriodVariable string `pulumi:"qosAdaptivePeriodVariable"`
	// Name of QoS map
	QosMap string `pulumi:"qosMap"`
	// Variable name
	QosMapVariable string `pulumi:"qosMapVariable"`
	// Name of VPN QoS map
	QosMapVpn string `pulumi:"qosMapVpn"`
	// Variable name
	QosMapVpnVariable string `pulumi:"qosMapVpnVariable"`
	// Enable secondary region
	SecondaryRegion string `pulumi:"secondaryRegion"`
	// Variable name
	SecondaryRegionVariable string `pulumi:"secondaryRegionVariable"`
	// 1ge  interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps
	ShapingRate int `pulumi:"shapingRate"`
	// Variable name
	ShapingRateVariable string `pulumi:"shapingRateVariable"`
	// Administrative state
	Shutdown bool `pulumi:"shutdown"`
	// Variable name
	ShutdownVariable string `pulumi:"shutdownVariable"`
	// The template type
	TemplateType string `pulumi:"templateType"`
	// Extends a local TLOC to a remote node only for vpn 0
	TlocExtension string `pulumi:"tlocExtension"`
	// Variable name
	TlocExtensionVariable string `pulumi:"tlocExtensionVariable"`
	// Variable name
	TrackerVariable string `pulumi:"trackerVariable"`
	// Enable tracker for this interface
	Trackers []string `pulumi:"trackers"`
	// Allow all traffic. Overrides all other allow-service options if allow-service all is set
	TunnelInterfaceAllowAll bool `pulumi:"tunnelInterfaceAllowAll"`
	// Variable name
	TunnelInterfaceAllowAllVariable string `pulumi:"tunnelInterfaceAllowAllVariable"`
	// Allow/deny BGP
	TunnelInterfaceAllowBgp bool `pulumi:"tunnelInterfaceAllowBgp"`
	// Variable name
	TunnelInterfaceAllowBgpVariable string `pulumi:"tunnelInterfaceAllowBgpVariable"`
	// Allow/Deny DHCP
	TunnelInterfaceAllowDhcp bool `pulumi:"tunnelInterfaceAllowDhcp"`
	// Variable name
	TunnelInterfaceAllowDhcpVariable string `pulumi:"tunnelInterfaceAllowDhcpVariable"`
	// Allow/Deny DNS
	TunnelInterfaceAllowDns bool `pulumi:"tunnelInterfaceAllowDns"`
	// Variable name
	TunnelInterfaceAllowDnsVariable string `pulumi:"tunnelInterfaceAllowDnsVariable"`
	// Allow/Deny Https
	TunnelInterfaceAllowHttps bool `pulumi:"tunnelInterfaceAllowHttps"`
	// Variable name
	TunnelInterfaceAllowHttpsVariable string `pulumi:"tunnelInterfaceAllowHttpsVariable"`
	// Allow/Deny ICMP
	TunnelInterfaceAllowIcmp bool `pulumi:"tunnelInterfaceAllowIcmp"`
	// Variable name
	TunnelInterfaceAllowIcmpVariable string `pulumi:"tunnelInterfaceAllowIcmpVariable"`
	// Allow/Deny NETCONF
	TunnelInterfaceAllowNetconf bool `pulumi:"tunnelInterfaceAllowNetconf"`
	// Variable name
	TunnelInterfaceAllowNetconfVariable string `pulumi:"tunnelInterfaceAllowNetconfVariable"`
	// Allow/Deny NTP
	TunnelInterfaceAllowNtp bool `pulumi:"tunnelInterfaceAllowNtp"`
	// Variable name
	TunnelInterfaceAllowNtpVariable string `pulumi:"tunnelInterfaceAllowNtpVariable"`
	// Allow/Deny OSPF
	TunnelInterfaceAllowOspf bool `pulumi:"tunnelInterfaceAllowOspf"`
	// Variable name
	TunnelInterfaceAllowOspfVariable string `pulumi:"tunnelInterfaceAllowOspfVariable"`
	// Allow/Deny SNMP
	TunnelInterfaceAllowSnmp bool `pulumi:"tunnelInterfaceAllowSnmp"`
	// Variable name
	TunnelInterfaceAllowSnmpVariable string `pulumi:"tunnelInterfaceAllowSnmpVariable"`
	// Allow/Deny SSH
	TunnelInterfaceAllowSsh bool `pulumi:"tunnelInterfaceAllowSsh"`
	// Variable name
	TunnelInterfaceAllowSshVariable string `pulumi:"tunnelInterfaceAllowSshVariable"`
	// Allow/Deny STUN
	TunnelInterfaceAllowStun bool `pulumi:"tunnelInterfaceAllowStun"`
	// Variable name
	TunnelInterfaceAllowStunVariable string `pulumi:"tunnelInterfaceAllowStunVariable"`
	// Bind loopback tunnel interface to a physical interface
	TunnelInterfaceBindLoopbackTunnel string `pulumi:"tunnelInterfaceBindLoopbackTunnel"`
	// Variable name
	TunnelInterfaceBindLoopbackTunnelVariable string `pulumi:"tunnelInterfaceBindLoopbackTunnelVariable"`
	// Set TLOC as border TLOC
	TunnelInterfaceBorder bool `pulumi:"tunnelInterfaceBorder"`
	// Variable name
	TunnelInterfaceBorderVariable string `pulumi:"tunnelInterfaceBorderVariable"`
	// Set carrier for TLOC
	TunnelInterfaceCarrier string `pulumi:"tunnelInterfaceCarrier"`
	// Variable name
	TunnelInterfaceCarrierVariable string `pulumi:"tunnelInterfaceCarrierVariable"`
	// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
	TunnelInterfaceClearDontFragment bool `pulumi:"tunnelInterfaceClearDontFragment"`
	// Variable name
	TunnelInterfaceClearDontFragmentVariable string `pulumi:"tunnelInterfaceClearDontFragmentVariable"`
	// Set color for TLOC
	TunnelInterfaceColor string `pulumi:"tunnelInterfaceColor"`
	// Restrict this TLOC behavior
	TunnelInterfaceColorRestrict bool `pulumi:"tunnelInterfaceColorRestrict"`
	// Variable name
	TunnelInterfaceColorVariable string `pulumi:"tunnelInterfaceColorVariable"`
	// Allow Control Connection
	TunnelInterfaceControlConnections bool `pulumi:"tunnelInterfaceControlConnections"`
	// Variable name
	TunnelInterfaceControlConnectionsVariable string `pulumi:"tunnelInterfaceControlConnectionsVariable"`
	// Encapsulation for TLOC
	TunnelInterfaceEncapsulations []GetVpnInterfaceEthernetPppoeFeatureTemplateTunnelInterfaceEncapsulation `pulumi:"tunnelInterfaceEncapsulations"`
	// Variable name
	TunnelInterfaceExcludeControllerGroupListVariable string `pulumi:"tunnelInterfaceExcludeControllerGroupListVariable"`
	// Exclude the following controller groups defined in this list
	TunnelInterfaceExcludeControllerGroupLists []int `pulumi:"tunnelInterfaceExcludeControllerGroupLists"`
	// List of groups
	TunnelInterfaceGroups []int `pulumi:"tunnelInterfaceGroups"`
	// Variable name
	TunnelInterfaceGroupsVariable string `pulumi:"tunnelInterfaceGroupsVariable"`
	// Set time period of control hello packets \n\n milli seconds
	TunnelInterfaceHelloInterval int `pulumi:"tunnelInterfaceHelloInterval"`
	// Variable name
	TunnelInterfaceHelloIntervalVariable string `pulumi:"tunnelInterfaceHelloIntervalVariable"`
	// Set tolerance of control hello packets \n\n seconds
	TunnelInterfaceHelloTolerance int `pulumi:"tunnelInterfaceHelloTolerance"`
	// Variable name
	TunnelInterfaceHelloToleranceVariable string `pulumi:"tunnelInterfaceHelloToleranceVariable"`
	// Set TLOC as last resort
	TunnelInterfaceLastResortCircuit bool `pulumi:"tunnelInterfaceLastResortCircuit"`
	// Variable name
	TunnelInterfaceLastResortCircuitVariable string `pulumi:"tunnelInterfaceLastResortCircuitVariable"`
	// Set the interface as a low-bandwidth circuit
	TunnelInterfaceLowBandwidthLink bool `pulumi:"tunnelInterfaceLowBandwidthLink"`
	// Variable name
	TunnelInterfaceLowBandwidthLinkVariable string `pulumi:"tunnelInterfaceLowBandwidthLinkVariable"`
	// Set the maximum number of control connections for this TLOC
	TunnelInterfaceMaxControlConnections int `pulumi:"tunnelInterfaceMaxControlConnections"`
	// Variable name
	TunnelInterfaceMaxControlConnectionsVariable string `pulumi:"tunnelInterfaceMaxControlConnectionsVariable"`
	// Set time period of nat refresh packets \n\n seconds
	TunnelInterfaceNatRefreshInterval int `pulumi:"tunnelInterfaceNatRefreshInterval"`
	// Variable name
	TunnelInterfaceNatRefreshIntervalVariable string `pulumi:"tunnelInterfaceNatRefreshIntervalVariable"`
	// Accept and respond to network-prefix-directed broadcasts)
	TunnelInterfaceNetworkBroadcast bool `pulumi:"tunnelInterfaceNetworkBroadcast"`
	// Variable name
	TunnelInterfaceNetworkBroadcastVariable string `pulumi:"tunnelInterfaceNetworkBroadcastVariable"`
	// Disallow port hopping on the tunnel interface
	TunnelInterfacePortHop bool `pulumi:"tunnelInterfacePortHop"`
	// Variable name
	TunnelInterfacePortHopVariable string `pulumi:"tunnelInterfacePortHopVariable"`
	// Tunnel TCP MSS on SYN packets, in bytes
	TunnelInterfaceTunnelTcpMss int `pulumi:"tunnelInterfaceTunnelTcpMss"`
	// Variable name
	TunnelInterfaceTunnelTcpMssVariable string `pulumi:"tunnelInterfaceTunnelTcpMssVariable"`
	// Put this wan interface in STUN mode only
	TunnelInterfaceVbondAsStunServer bool `pulumi:"tunnelInterfaceVbondAsStunServer"`
	// Variable name
	TunnelInterfaceVbondAsStunServerVariable string `pulumi:"tunnelInterfaceVbondAsStunServerVariable"`
	// Set interface preference for control connection to vManage \n\n
	TunnelInterfaceVmanageConnectionPreference int `pulumi:"tunnelInterfaceVmanageConnectionPreference"`
	// Variable name
	TunnelInterfaceVmanageConnectionPreferenceVariable string `pulumi:"tunnelInterfaceVmanageConnectionPreferenceVariable"`
	// Set tunnel QoS mode
	TunnelQosMode string `pulumi:"tunnelQosMode"`
	// Variable name
	TunnelQosModeVariable string `pulumi:"tunnelQosModeVariable"`
	// Dialer IP Unnumbered Loopback interface name
	UnnumberedLoopbackInterface string `pulumi:"unnumberedLoopbackInterface"`
	// Variable name
	UnnumberedLoopbackInterfaceVariable string `pulumi:"unnumberedLoopbackInterfaceVariable"`
	// The version of the feature template
	Version int `pulumi:"version"`
	// Name of rewrite rule
	WriteRule string `pulumi:"writeRule"`
	// Variable name
	WriteRuleVariable string `pulumi:"writeRuleVariable"`
}

func LookupVpnInterfaceEthernetPppoeFeatureTemplateOutput(ctx *pulumi.Context, args LookupVpnInterfaceEthernetPppoeFeatureTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput, error) {
			args := v.(LookupVpnInterfaceEthernetPppoeFeatureTemplateArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupVpnInterfaceEthernetPppoeFeatureTemplateResult
			secret, err := ctx.InvokePackageRaw("sdwan:index/getVpnInterfaceEthernetPppoeFeatureTemplate:getVpnInterfaceEthernetPppoeFeatureTemplate", args, &rv, "", opts...)
			if err != nil {
				return LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput), nil
			}
			return output, nil
		}).(LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput)
}

// A collection of arguments for invoking getVpnInterfaceEthernetPppoeFeatureTemplate.
type LookupVpnInterfaceEthernetPppoeFeatureTemplateOutputArgs struct {
	// The id of the feature template
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the feature template
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupVpnInterfaceEthernetPppoeFeatureTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnInterfaceEthernetPppoeFeatureTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getVpnInterfaceEthernetPppoeFeatureTemplate.
type LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnInterfaceEthernetPppoeFeatureTemplateResult)(nil)).Elem()
}

func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) ToLookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput() LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput {
	return o
}

func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) ToLookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutputWithContext(ctx context.Context) LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput {
	return o
}

// Apply ACL
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) AccessLists() GetVpnInterfaceEthernetPppoeFeatureTemplateAccessListArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) []GetVpnInterfaceEthernetPppoeFeatureTemplateAccessList {
		return v.AccessLists
	}).(GetVpnInterfaceEthernetPppoeFeatureTemplateAccessListArrayOutput)
}

// Interface downstream bandwidth capacity, in kbps
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) BandwidthDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int { return v.BandwidthDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) BandwidthDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.BandwidthDownstreamVariable
	}).(pulumi.StringOutput)
}

// Interface upstream bandwidth capacity, in kbps
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) BandwidthUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int { return v.BandwidthUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) BandwidthUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.BandwidthUpstreamVariable
	}).(pulumi.StringOutput)
}

// CHAP Hostname
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) ChapHostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.ChapHostname }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) ChapHostnameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.ChapHostnameVariable }).(pulumi.StringOutput)
}

// Specify ppp chap authentication Password
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) ChapPppAuthPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.ChapPppAuthPassword }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) ChapPppAuthPasswordVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.ChapPppAuthPasswordVariable
	}).(pulumi.StringOutput)
}

// Enable core region
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) CoreRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.CoreRegion }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) CoreRegionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.CoreRegionVariable }).(pulumi.StringOutput)
}

// The description of the feature template
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) []string { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Dialer IP Negotiated
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) DialerAddressNegotiated() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.DialerAddressNegotiated }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) DialerAddressNegotiatedVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.DialerAddressNegotiatedVariable
	}).(pulumi.StringOutput)
}

// Dialer pool number
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) DialerPoolNumber() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int { return v.DialerPoolNumber }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) DialerPoolNumberVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.DialerPoolNumberVariable }).(pulumi.StringOutput)
}

// Dialer TCP MSS on SYN packets, in bytes
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) DialerTcpMss() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int { return v.DialerTcpMss }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) DialerTcpMssVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.DialerTcpMssVariable }).(pulumi.StringOutput)
}

// Enable core region
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) EnableCoreRegion() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.EnableCoreRegion }).(pulumi.BoolOutput)
}

// Encapsulation VLAN id
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) Encap() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int { return v.Encap }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) EncapVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.EncapVariable }).(pulumi.StringOutput)
}

// Ethernet Interface/Sub Interface Name including sub interface number
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) EthernetInterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.EthernetInterfaceName }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) EthernetInterfaceNameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.EthernetInterfaceNameVariable
	}).(pulumi.StringOutput)
}

// The id of the feature template
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// Interface description
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) InterfaceDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.InterfaceDescription }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) InterfaceDescriptionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.InterfaceDescriptionVariable
	}).(pulumi.StringOutput)
}

// IP Directed-Broadcast
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) IpDirectedBroadcast() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.IpDirectedBroadcast }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) IpDirectedBroadcastVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.IpDirectedBroadcastVariable
	}).(pulumi.StringOutput)
}

// IP MTU \n\n, in bytes
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) IpMtuForDialerInterface() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int { return v.IpMtuForDialerInterface }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) IpMtuForDialerInterfaceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.IpMtuForDialerInterfaceVariable
	}).(pulumi.StringOutput)
}

// The name of the feature template
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// Network Address Translation on this interface
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) Nat() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.Nat }).(pulumi.BoolOutput)
}

// Block inbound ICMP error messages
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) NatBlockIcmpError() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.NatBlockIcmpError }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) NatBlockIcmpErrorVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.NatBlockIcmpErrorVariable
	}).(pulumi.StringOutput)
}

// Set port-forwarding rules for NAT on this interface
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) NatPortForwards() GetVpnInterfaceEthernetPppoeFeatureTemplateNatPortForwardArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) []GetVpnInterfaceEthernetPppoeFeatureTemplateNatPortForward {
		return v.NatPortForwards
	}).(GetVpnInterfaceEthernetPppoeFeatureTemplateNatPortForwardArrayOutput)
}

// Set NAT refresh mode
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) NatRefreshMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.NatRefreshMode }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) NatRefreshModeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.NatRefreshModeVariable }).(pulumi.StringOutput)
}

// Respond to ping requests to NAT interface ip address from the public side
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) NatResponseToPing() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.NatResponseToPing }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) NatResponseToPingVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.NatResponseToPingVariable
	}).(pulumi.StringOutput)
}

// Set NAT TCP session timeout, in minutes
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) NatTcpTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int { return v.NatTcpTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) NatTcpTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.NatTcpTimeoutVariable }).(pulumi.StringOutput)
}

// Set NAT UDP session timeout, in minutes
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) NatUdpTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int { return v.NatUdpTimeout }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) NatUdpTimeoutVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.NatUdpTimeoutVariable }).(pulumi.StringOutput)
}

// PAP outbound Password
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) PapPassword() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.PapPassword }).(pulumi.BoolOutput)
}

// Specify ppp pap authentication Password
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) PapPppAuthPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.PapPppAuthPassword }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) PapPppAuthPasswordVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.PapPppAuthPasswordVariable
	}).(pulumi.StringOutput)
}

// PAP outbound Sent Username
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) PapUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.PapUsername }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) PapUsernameVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.PapUsernameVariable }).(pulumi.StringOutput)
}

// Per-tunnel Qos
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) PerTunnelQos() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.PerTunnelQos }).(pulumi.BoolOutput)
}

// Per-tunnel QoS Aggregator
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) PerTunnelQosAggregator() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.PerTunnelQosAggregator }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) PerTunnelQosAggregatorVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.PerTunnelQosAggregatorVariable
	}).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) PerTunnelQosVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.PerTunnelQosVariable }).(pulumi.StringOutput)
}

// Enable policer
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) Policers() GetVpnInterfaceEthernetPppoeFeatureTemplatePolicerArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) []GetVpnInterfaceEthernetPppoeFeatureTemplatePolicer {
		return v.Policers
	}).(GetVpnInterfaceEthernetPppoeFeatureTemplatePolicerArrayOutput)
}

// PPP Link Authentication Protocol
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) PppAuthenticationProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.PppAuthenticationProtocol
	}).(pulumi.StringOutput)
}

// PPP Authentication Protocol PAP
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) PppAuthenticationProtocolPap() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool {
		return v.PppAuthenticationProtocolPap
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) PppAuthenticationProtocolVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.PppAuthenticationProtocolVariable
	}).(pulumi.StringOutput)
}

// Authenticate remote on incoming call only
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) PppAuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.PppAuthenticationType }).(pulumi.StringOutput)
}

// Maximum MRU to be negotiated during PPP LCP negotiation
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) PppMaximumPayload() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int { return v.PppMaximumPayload }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) PppMaximumPayloadVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.PppMaximumPayloadVariable
	}).(pulumi.StringOutput)
}

// Adaptive QoS default downstream bandwidth
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) QosAdaptiveBandwidthDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int {
		return v.QosAdaptiveBandwidthDownstream
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) QosAdaptiveBandwidthDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.QosAdaptiveBandwidthDownstreamVariable
	}).(pulumi.StringOutput)
}

// Adaptive QoS default upstream bandwidth
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) QosAdaptiveBandwidthUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int {
		return v.QosAdaptiveBandwidthUpstream
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) QosAdaptiveBandwidthUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.QosAdaptiveBandwidthUpstreamVariable
	}).(pulumi.StringOutput)
}

// Downstream max bandwidth limit
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) QosAdaptiveMaxDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int { return v.QosAdaptiveMaxDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) QosAdaptiveMaxDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.QosAdaptiveMaxDownstreamVariable
	}).(pulumi.StringOutput)
}

// Upstream max bandwidth limit
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) QosAdaptiveMaxUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int { return v.QosAdaptiveMaxUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) QosAdaptiveMaxUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.QosAdaptiveMaxUpstreamVariable
	}).(pulumi.StringOutput)
}

// Downstream min bandwidth limit
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) QosAdaptiveMinDownstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int { return v.QosAdaptiveMinDownstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) QosAdaptiveMinDownstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.QosAdaptiveMinDownstreamVariable
	}).(pulumi.StringOutput)
}

// Upstream min bandwidth limit
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) QosAdaptiveMinUpstream() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int { return v.QosAdaptiveMinUpstream }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) QosAdaptiveMinUpstreamVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.QosAdaptiveMinUpstreamVariable
	}).(pulumi.StringOutput)
}

// Periodic timer for adaptive QoS in minutes
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) QosAdaptivePeriod() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int { return v.QosAdaptivePeriod }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) QosAdaptivePeriodVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.QosAdaptivePeriodVariable
	}).(pulumi.StringOutput)
}

// Name of QoS map
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) QosMap() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.QosMap }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) QosMapVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.QosMapVariable }).(pulumi.StringOutput)
}

// Name of VPN QoS map
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) QosMapVpn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.QosMapVpn }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) QosMapVpnVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.QosMapVpnVariable }).(pulumi.StringOutput)
}

// Enable secondary region
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) SecondaryRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.SecondaryRegion }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) SecondaryRegionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.SecondaryRegionVariable }).(pulumi.StringOutput)
}

// 1ge  interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) ShapingRate() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int { return v.ShapingRate }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) ShapingRateVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.ShapingRateVariable }).(pulumi.StringOutput)
}

// Administrative state
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) Shutdown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.Shutdown }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) ShutdownVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.ShutdownVariable }).(pulumi.StringOutput)
}

// The template type
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.TemplateType }).(pulumi.StringOutput)
}

// Extends a local TLOC to a remote node only for vpn 0
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TlocExtension() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.TlocExtension }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TlocExtensionVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.TlocExtensionVariable }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TrackerVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.TrackerVariable }).(pulumi.StringOutput)
}

// Enable tracker for this interface
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) Trackers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) []string { return v.Trackers }).(pulumi.StringArrayOutput)
}

// Allow all traffic. Overrides all other allow-service options if allow-service all is set
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowAll() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowAll }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowAllVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowAllVariable
	}).(pulumi.StringOutput)
}

// Allow/deny BGP
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowBgp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowBgp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowBgpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowBgpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny DHCP
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowDhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowDhcp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowDhcpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowDhcpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny DNS
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowDns() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowDns }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowDnsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowDnsVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny Https
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowHttps() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowHttps }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowHttpsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowHttpsVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny ICMP
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowIcmp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowIcmp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowIcmpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowIcmpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny NETCONF
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowNetconf() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool {
		return v.TunnelInterfaceAllowNetconf
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowNetconfVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowNetconfVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny NTP
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowNtp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowNtp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowNtpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowNtpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny OSPF
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowOspf() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowOspf }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowOspfVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowOspfVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny SNMP
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowSnmp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowSnmp }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowSnmpVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowSnmpVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny SSH
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowSsh() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowSsh }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowSshVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowSshVariable
	}).(pulumi.StringOutput)
}

// Allow/Deny STUN
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowStun() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceAllowStun }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceAllowStunVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceAllowStunVariable
	}).(pulumi.StringOutput)
}

// Bind loopback tunnel interface to a physical interface
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceBindLoopbackTunnel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceBindLoopbackTunnel
	}).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceBindLoopbackTunnelVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceBindLoopbackTunnelVariable
	}).(pulumi.StringOutput)
}

// Set TLOC as border TLOC
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceBorder() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.TunnelInterfaceBorder }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceBorderVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceBorderVariable
	}).(pulumi.StringOutput)
}

// Set carrier for TLOC
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceCarrier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.TunnelInterfaceCarrier }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceCarrierVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceCarrierVariable
	}).(pulumi.StringOutput)
}

// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceClearDontFragment() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool {
		return v.TunnelInterfaceClearDontFragment
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceClearDontFragmentVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceClearDontFragmentVariable
	}).(pulumi.StringOutput)
}

// Set color for TLOC
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceColor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.TunnelInterfaceColor }).(pulumi.StringOutput)
}

// Restrict this TLOC behavior
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceColorRestrict() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool {
		return v.TunnelInterfaceColorRestrict
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceColorVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceColorVariable
	}).(pulumi.StringOutput)
}

// Allow Control Connection
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceControlConnections() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool {
		return v.TunnelInterfaceControlConnections
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceControlConnectionsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceControlConnectionsVariable
	}).(pulumi.StringOutput)
}

// Encapsulation for TLOC
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceEncapsulations() GetVpnInterfaceEthernetPppoeFeatureTemplateTunnelInterfaceEncapsulationArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) []GetVpnInterfaceEthernetPppoeFeatureTemplateTunnelInterfaceEncapsulation {
		return v.TunnelInterfaceEncapsulations
	}).(GetVpnInterfaceEthernetPppoeFeatureTemplateTunnelInterfaceEncapsulationArrayOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceExcludeControllerGroupListVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceExcludeControllerGroupListVariable
	}).(pulumi.StringOutput)
}

// Exclude the following controller groups defined in this list
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceExcludeControllerGroupLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) []int {
		return v.TunnelInterfaceExcludeControllerGroupLists
	}).(pulumi.IntArrayOutput)
}

// List of groups
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceGroups() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) []int { return v.TunnelInterfaceGroups }).(pulumi.IntArrayOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceGroupsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceGroupsVariable
	}).(pulumi.StringOutput)
}

// Set time period of control hello packets \n\n milli seconds
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceHelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int {
		return v.TunnelInterfaceHelloInterval
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceHelloIntervalVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceHelloIntervalVariable
	}).(pulumi.StringOutput)
}

// Set tolerance of control hello packets \n\n seconds
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceHelloTolerance() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int {
		return v.TunnelInterfaceHelloTolerance
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceHelloToleranceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceHelloToleranceVariable
	}).(pulumi.StringOutput)
}

// Set TLOC as last resort
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceLastResortCircuit() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool {
		return v.TunnelInterfaceLastResortCircuit
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceLastResortCircuitVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceLastResortCircuitVariable
	}).(pulumi.StringOutput)
}

// Set the interface as a low-bandwidth circuit
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceLowBandwidthLink() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool {
		return v.TunnelInterfaceLowBandwidthLink
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceLowBandwidthLinkVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceLowBandwidthLinkVariable
	}).(pulumi.StringOutput)
}

// Set the maximum number of control connections for this TLOC
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceMaxControlConnections() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int {
		return v.TunnelInterfaceMaxControlConnections
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceMaxControlConnectionsVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceMaxControlConnectionsVariable
	}).(pulumi.StringOutput)
}

// Set time period of nat refresh packets \n\n seconds
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceNatRefreshInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int {
		return v.TunnelInterfaceNatRefreshInterval
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceNatRefreshIntervalVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceNatRefreshIntervalVariable
	}).(pulumi.StringOutput)
}

// Accept and respond to network-prefix-directed broadcasts)
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceNetworkBroadcast() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool {
		return v.TunnelInterfaceNetworkBroadcast
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceNetworkBroadcastVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceNetworkBroadcastVariable
	}).(pulumi.StringOutput)
}

// Disallow port hopping on the tunnel interface
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfacePortHop() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool { return v.TunnelInterfacePortHop }).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfacePortHopVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfacePortHopVariable
	}).(pulumi.StringOutput)
}

// Tunnel TCP MSS on SYN packets, in bytes
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceTunnelTcpMss() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int { return v.TunnelInterfaceTunnelTcpMss }).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceTunnelTcpMssVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceTunnelTcpMssVariable
	}).(pulumi.StringOutput)
}

// Put this wan interface in STUN mode only
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceVbondAsStunServer() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) bool {
		return v.TunnelInterfaceVbondAsStunServer
	}).(pulumi.BoolOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceVbondAsStunServerVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceVbondAsStunServerVariable
	}).(pulumi.StringOutput)
}

// Set interface preference for control connection to vManage \n\n
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceVmanageConnectionPreference() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int {
		return v.TunnelInterfaceVmanageConnectionPreference
	}).(pulumi.IntOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelInterfaceVmanageConnectionPreferenceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.TunnelInterfaceVmanageConnectionPreferenceVariable
	}).(pulumi.StringOutput)
}

// Set tunnel QoS mode
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelQosMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.TunnelQosMode }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) TunnelQosModeVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.TunnelQosModeVariable }).(pulumi.StringOutput)
}

// Dialer IP Unnumbered Loopback interface name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) UnnumberedLoopbackInterface() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.UnnumberedLoopbackInterface
	}).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) UnnumberedLoopbackInterfaceVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string {
		return v.UnnumberedLoopbackInterfaceVariable
	}).(pulumi.StringOutput)
}

// The version of the feature template
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) int { return v.Version }).(pulumi.IntOutput)
}

// Name of rewrite rule
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) WriteRule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.WriteRule }).(pulumi.StringOutput)
}

// Variable name
func (o LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput) WriteRuleVariable() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnInterfaceEthernetPppoeFeatureTemplateResult) string { return v.WriteRuleVariable }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpnInterfaceEthernetPppoeFeatureTemplateResultOutput{})
}
