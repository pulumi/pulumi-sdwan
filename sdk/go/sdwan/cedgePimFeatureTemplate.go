// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a cEdge PIM feature template.
//   - Minimum SD-WAN Manager version: `15.0.0`
//
// ## Import
//
// ```sh
// $ pulumi import sdwan:index/cedgePimFeatureTemplate:CedgePimFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
// ```
type CedgePimFeatureTemplate struct {
	pulumi.CustomResourceState

	// Enable or disable auto-RP - Default value: `false`
	AutoRp pulumi.BoolPtrOutput `pulumi:"autoRp"`
	// Variable name
	AutoRpVariable pulumi.StringPtrOutput `pulumi:"autoRpVariable"`
	// Set Autonomic-Networking virtual interface
	BsrCandidate pulumi.StringPtrOutput `pulumi:"bsrCandidate"`
	// Variable name
	BsrCandidateVariable pulumi.StringPtrOutput `pulumi:"bsrCandidateVariable"`
	// Turn SSM On / Off - Default value: `false`
	Default pulumi.BoolPtrOutput `pulumi:"default"`
	// Variable name
	DefaultVariable pulumi.StringPtrOutput `pulumi:"defaultVariable"`
	// The description of the feature template
	Description pulumi.StringOutput `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayOutput `pulumi:"deviceTypes"`
	// Hash Mask length for RP selection
	HashMaskLength pulumi.StringPtrOutput `pulumi:"hashMaskLength"`
	// Variable name
	HashMaskLengthVariable pulumi.StringPtrOutput `pulumi:"hashMaskLengthVariable"`
	// Set RP Discovery Interface Name
	InterfaceName pulumi.StringPtrOutput `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable pulumi.StringPtrOutput `pulumi:"interfaceNameVariable"`
	// Set PIM interface parameters
	Interfaces CedgePimFeatureTemplateInterfaceArrayOutput `pulumi:"interfaces"`
	// The name of the feature template
	Name pulumi.StringOutput `pulumi:"name"`
	// Set RP candidate priority - Range: `0`-`255`
	Priority pulumi.IntPtrOutput `pulumi:"priority"`
	// Variable name
	PriorityVariable pulumi.StringPtrOutput `pulumi:"priorityVariable"`
	// Set Access List for PIM SSM
	Range pulumi.StringPtrOutput `pulumi:"range"`
	// Variable name
	RangeVariable pulumi.StringPtrOutput `pulumi:"rangeVariable"`
	// Set Static RP Address(es)
	RpAddresses CedgePimFeatureTemplateRpAddressArrayOutput `pulumi:"rpAddresses"`
	// Enable or disable RP Announce
	RpAnnounceFields CedgePimFeatureTemplateRpAnnounceFieldArrayOutput `pulumi:"rpAnnounceFields"`
	// Set BSR RP candidate filter
	RpCandidateAccessList pulumi.StringPtrOutput `pulumi:"rpCandidateAccessList"`
	// Variable name
	RpCandidateAccessListVariable pulumi.StringPtrOutput `pulumi:"rpCandidateAccessListVariable"`
	// Set RP Discovery Scope
	RpCandidates CedgePimFeatureTemplateRpCandidateArrayOutput `pulumi:"rpCandidates"`
	// Set RP Discovery Scope - Range: `1`-`255`
	Scope pulumi.IntPtrOutput `pulumi:"scope"`
	// Variable name
	ScopeVariable pulumi.StringPtrOutput `pulumi:"scopeVariable"`
	// Set when PIM router joins the SPT (kbps) - Choices: `0`, `infinity`
	SptThreshold pulumi.StringPtrOutput `pulumi:"sptThreshold"`
	// Variable name
	SptThresholdVariable pulumi.StringPtrOutput `pulumi:"sptThresholdVariable"`
	// The template type
	TemplateType pulumi.StringOutput `pulumi:"templateType"`
	// The version of the feature template
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewCedgePimFeatureTemplate registers a new resource with the given unique name, arguments, and options.
func NewCedgePimFeatureTemplate(ctx *pulumi.Context,
	name string, args *CedgePimFeatureTemplateArgs, opts ...pulumi.ResourceOption) (*CedgePimFeatureTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.DeviceTypes == nil {
		return nil, errors.New("invalid value for required argument 'DeviceTypes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CedgePimFeatureTemplate
	err := ctx.RegisterResource("sdwan:index/cedgePimFeatureTemplate:CedgePimFeatureTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCedgePimFeatureTemplate gets an existing CedgePimFeatureTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCedgePimFeatureTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CedgePimFeatureTemplateState, opts ...pulumi.ResourceOption) (*CedgePimFeatureTemplate, error) {
	var resource CedgePimFeatureTemplate
	err := ctx.ReadResource("sdwan:index/cedgePimFeatureTemplate:CedgePimFeatureTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CedgePimFeatureTemplate resources.
type cedgePimFeatureTemplateState struct {
	// Enable or disable auto-RP - Default value: `false`
	AutoRp *bool `pulumi:"autoRp"`
	// Variable name
	AutoRpVariable *string `pulumi:"autoRpVariable"`
	// Set Autonomic-Networking virtual interface
	BsrCandidate *string `pulumi:"bsrCandidate"`
	// Variable name
	BsrCandidateVariable *string `pulumi:"bsrCandidateVariable"`
	// Turn SSM On / Off - Default value: `false`
	Default *bool `pulumi:"default"`
	// Variable name
	DefaultVariable *string `pulumi:"defaultVariable"`
	// The description of the feature template
	Description *string `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Hash Mask length for RP selection
	HashMaskLength *string `pulumi:"hashMaskLength"`
	// Variable name
	HashMaskLengthVariable *string `pulumi:"hashMaskLengthVariable"`
	// Set RP Discovery Interface Name
	InterfaceName *string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable *string `pulumi:"interfaceNameVariable"`
	// Set PIM interface parameters
	Interfaces []CedgePimFeatureTemplateInterface `pulumi:"interfaces"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Set RP candidate priority - Range: `0`-`255`
	Priority *int `pulumi:"priority"`
	// Variable name
	PriorityVariable *string `pulumi:"priorityVariable"`
	// Set Access List for PIM SSM
	Range *string `pulumi:"range"`
	// Variable name
	RangeVariable *string `pulumi:"rangeVariable"`
	// Set Static RP Address(es)
	RpAddresses []CedgePimFeatureTemplateRpAddress `pulumi:"rpAddresses"`
	// Enable or disable RP Announce
	RpAnnounceFields []CedgePimFeatureTemplateRpAnnounceField `pulumi:"rpAnnounceFields"`
	// Set BSR RP candidate filter
	RpCandidateAccessList *string `pulumi:"rpCandidateAccessList"`
	// Variable name
	RpCandidateAccessListVariable *string `pulumi:"rpCandidateAccessListVariable"`
	// Set RP Discovery Scope
	RpCandidates []CedgePimFeatureTemplateRpCandidate `pulumi:"rpCandidates"`
	// Set RP Discovery Scope - Range: `1`-`255`
	Scope *int `pulumi:"scope"`
	// Variable name
	ScopeVariable *string `pulumi:"scopeVariable"`
	// Set when PIM router joins the SPT (kbps) - Choices: `0`, `infinity`
	SptThreshold *string `pulumi:"sptThreshold"`
	// Variable name
	SptThresholdVariable *string `pulumi:"sptThresholdVariable"`
	// The template type
	TemplateType *string `pulumi:"templateType"`
	// The version of the feature template
	Version *int `pulumi:"version"`
}

type CedgePimFeatureTemplateState struct {
	// Enable or disable auto-RP - Default value: `false`
	AutoRp pulumi.BoolPtrInput
	// Variable name
	AutoRpVariable pulumi.StringPtrInput
	// Set Autonomic-Networking virtual interface
	BsrCandidate pulumi.StringPtrInput
	// Variable name
	BsrCandidateVariable pulumi.StringPtrInput
	// Turn SSM On / Off - Default value: `false`
	Default pulumi.BoolPtrInput
	// Variable name
	DefaultVariable pulumi.StringPtrInput
	// The description of the feature template
	Description pulumi.StringPtrInput
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Hash Mask length for RP selection
	HashMaskLength pulumi.StringPtrInput
	// Variable name
	HashMaskLengthVariable pulumi.StringPtrInput
	// Set RP Discovery Interface Name
	InterfaceName pulumi.StringPtrInput
	// Variable name
	InterfaceNameVariable pulumi.StringPtrInput
	// Set PIM interface parameters
	Interfaces CedgePimFeatureTemplateInterfaceArrayInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Set RP candidate priority - Range: `0`-`255`
	Priority pulumi.IntPtrInput
	// Variable name
	PriorityVariable pulumi.StringPtrInput
	// Set Access List for PIM SSM
	Range pulumi.StringPtrInput
	// Variable name
	RangeVariable pulumi.StringPtrInput
	// Set Static RP Address(es)
	RpAddresses CedgePimFeatureTemplateRpAddressArrayInput
	// Enable or disable RP Announce
	RpAnnounceFields CedgePimFeatureTemplateRpAnnounceFieldArrayInput
	// Set BSR RP candidate filter
	RpCandidateAccessList pulumi.StringPtrInput
	// Variable name
	RpCandidateAccessListVariable pulumi.StringPtrInput
	// Set RP Discovery Scope
	RpCandidates CedgePimFeatureTemplateRpCandidateArrayInput
	// Set RP Discovery Scope - Range: `1`-`255`
	Scope pulumi.IntPtrInput
	// Variable name
	ScopeVariable pulumi.StringPtrInput
	// Set when PIM router joins the SPT (kbps) - Choices: `0`, `infinity`
	SptThreshold pulumi.StringPtrInput
	// Variable name
	SptThresholdVariable pulumi.StringPtrInput
	// The template type
	TemplateType pulumi.StringPtrInput
	// The version of the feature template
	Version pulumi.IntPtrInput
}

func (CedgePimFeatureTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*cedgePimFeatureTemplateState)(nil)).Elem()
}

type cedgePimFeatureTemplateArgs struct {
	// Enable or disable auto-RP - Default value: `false`
	AutoRp *bool `pulumi:"autoRp"`
	// Variable name
	AutoRpVariable *string `pulumi:"autoRpVariable"`
	// Set Autonomic-Networking virtual interface
	BsrCandidate *string `pulumi:"bsrCandidate"`
	// Variable name
	BsrCandidateVariable *string `pulumi:"bsrCandidateVariable"`
	// Turn SSM On / Off - Default value: `false`
	Default *bool `pulumi:"default"`
	// Variable name
	DefaultVariable *string `pulumi:"defaultVariable"`
	// The description of the feature template
	Description string `pulumi:"description"`
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes []string `pulumi:"deviceTypes"`
	// Hash Mask length for RP selection
	HashMaskLength *string `pulumi:"hashMaskLength"`
	// Variable name
	HashMaskLengthVariable *string `pulumi:"hashMaskLengthVariable"`
	// Set RP Discovery Interface Name
	InterfaceName *string `pulumi:"interfaceName"`
	// Variable name
	InterfaceNameVariable *string `pulumi:"interfaceNameVariable"`
	// Set PIM interface parameters
	Interfaces []CedgePimFeatureTemplateInterface `pulumi:"interfaces"`
	// The name of the feature template
	Name *string `pulumi:"name"`
	// Set RP candidate priority - Range: `0`-`255`
	Priority *int `pulumi:"priority"`
	// Variable name
	PriorityVariable *string `pulumi:"priorityVariable"`
	// Set Access List for PIM SSM
	Range *string `pulumi:"range"`
	// Variable name
	RangeVariable *string `pulumi:"rangeVariable"`
	// Set Static RP Address(es)
	RpAddresses []CedgePimFeatureTemplateRpAddress `pulumi:"rpAddresses"`
	// Enable or disable RP Announce
	RpAnnounceFields []CedgePimFeatureTemplateRpAnnounceField `pulumi:"rpAnnounceFields"`
	// Set BSR RP candidate filter
	RpCandidateAccessList *string `pulumi:"rpCandidateAccessList"`
	// Variable name
	RpCandidateAccessListVariable *string `pulumi:"rpCandidateAccessListVariable"`
	// Set RP Discovery Scope
	RpCandidates []CedgePimFeatureTemplateRpCandidate `pulumi:"rpCandidates"`
	// Set RP Discovery Scope - Range: `1`-`255`
	Scope *int `pulumi:"scope"`
	// Variable name
	ScopeVariable *string `pulumi:"scopeVariable"`
	// Set when PIM router joins the SPT (kbps) - Choices: `0`, `infinity`
	SptThreshold *string `pulumi:"sptThreshold"`
	// Variable name
	SptThresholdVariable *string `pulumi:"sptThresholdVariable"`
}

// The set of arguments for constructing a CedgePimFeatureTemplate resource.
type CedgePimFeatureTemplateArgs struct {
	// Enable or disable auto-RP - Default value: `false`
	AutoRp pulumi.BoolPtrInput
	// Variable name
	AutoRpVariable pulumi.StringPtrInput
	// Set Autonomic-Networking virtual interface
	BsrCandidate pulumi.StringPtrInput
	// Variable name
	BsrCandidateVariable pulumi.StringPtrInput
	// Turn SSM On / Off - Default value: `false`
	Default pulumi.BoolPtrInput
	// Variable name
	DefaultVariable pulumi.StringPtrInput
	// The description of the feature template
	Description pulumi.StringInput
	// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
	// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
	// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
	DeviceTypes pulumi.StringArrayInput
	// Hash Mask length for RP selection
	HashMaskLength pulumi.StringPtrInput
	// Variable name
	HashMaskLengthVariable pulumi.StringPtrInput
	// Set RP Discovery Interface Name
	InterfaceName pulumi.StringPtrInput
	// Variable name
	InterfaceNameVariable pulumi.StringPtrInput
	// Set PIM interface parameters
	Interfaces CedgePimFeatureTemplateInterfaceArrayInput
	// The name of the feature template
	Name pulumi.StringPtrInput
	// Set RP candidate priority - Range: `0`-`255`
	Priority pulumi.IntPtrInput
	// Variable name
	PriorityVariable pulumi.StringPtrInput
	// Set Access List for PIM SSM
	Range pulumi.StringPtrInput
	// Variable name
	RangeVariable pulumi.StringPtrInput
	// Set Static RP Address(es)
	RpAddresses CedgePimFeatureTemplateRpAddressArrayInput
	// Enable or disable RP Announce
	RpAnnounceFields CedgePimFeatureTemplateRpAnnounceFieldArrayInput
	// Set BSR RP candidate filter
	RpCandidateAccessList pulumi.StringPtrInput
	// Variable name
	RpCandidateAccessListVariable pulumi.StringPtrInput
	// Set RP Discovery Scope
	RpCandidates CedgePimFeatureTemplateRpCandidateArrayInput
	// Set RP Discovery Scope - Range: `1`-`255`
	Scope pulumi.IntPtrInput
	// Variable name
	ScopeVariable pulumi.StringPtrInput
	// Set when PIM router joins the SPT (kbps) - Choices: `0`, `infinity`
	SptThreshold pulumi.StringPtrInput
	// Variable name
	SptThresholdVariable pulumi.StringPtrInput
}

func (CedgePimFeatureTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cedgePimFeatureTemplateArgs)(nil)).Elem()
}

type CedgePimFeatureTemplateInput interface {
	pulumi.Input

	ToCedgePimFeatureTemplateOutput() CedgePimFeatureTemplateOutput
	ToCedgePimFeatureTemplateOutputWithContext(ctx context.Context) CedgePimFeatureTemplateOutput
}

func (*CedgePimFeatureTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**CedgePimFeatureTemplate)(nil)).Elem()
}

func (i *CedgePimFeatureTemplate) ToCedgePimFeatureTemplateOutput() CedgePimFeatureTemplateOutput {
	return i.ToCedgePimFeatureTemplateOutputWithContext(context.Background())
}

func (i *CedgePimFeatureTemplate) ToCedgePimFeatureTemplateOutputWithContext(ctx context.Context) CedgePimFeatureTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CedgePimFeatureTemplateOutput)
}

// CedgePimFeatureTemplateArrayInput is an input type that accepts CedgePimFeatureTemplateArray and CedgePimFeatureTemplateArrayOutput values.
// You can construct a concrete instance of `CedgePimFeatureTemplateArrayInput` via:
//
//	CedgePimFeatureTemplateArray{ CedgePimFeatureTemplateArgs{...} }
type CedgePimFeatureTemplateArrayInput interface {
	pulumi.Input

	ToCedgePimFeatureTemplateArrayOutput() CedgePimFeatureTemplateArrayOutput
	ToCedgePimFeatureTemplateArrayOutputWithContext(context.Context) CedgePimFeatureTemplateArrayOutput
}

type CedgePimFeatureTemplateArray []CedgePimFeatureTemplateInput

func (CedgePimFeatureTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CedgePimFeatureTemplate)(nil)).Elem()
}

func (i CedgePimFeatureTemplateArray) ToCedgePimFeatureTemplateArrayOutput() CedgePimFeatureTemplateArrayOutput {
	return i.ToCedgePimFeatureTemplateArrayOutputWithContext(context.Background())
}

func (i CedgePimFeatureTemplateArray) ToCedgePimFeatureTemplateArrayOutputWithContext(ctx context.Context) CedgePimFeatureTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CedgePimFeatureTemplateArrayOutput)
}

// CedgePimFeatureTemplateMapInput is an input type that accepts CedgePimFeatureTemplateMap and CedgePimFeatureTemplateMapOutput values.
// You can construct a concrete instance of `CedgePimFeatureTemplateMapInput` via:
//
//	CedgePimFeatureTemplateMap{ "key": CedgePimFeatureTemplateArgs{...} }
type CedgePimFeatureTemplateMapInput interface {
	pulumi.Input

	ToCedgePimFeatureTemplateMapOutput() CedgePimFeatureTemplateMapOutput
	ToCedgePimFeatureTemplateMapOutputWithContext(context.Context) CedgePimFeatureTemplateMapOutput
}

type CedgePimFeatureTemplateMap map[string]CedgePimFeatureTemplateInput

func (CedgePimFeatureTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CedgePimFeatureTemplate)(nil)).Elem()
}

func (i CedgePimFeatureTemplateMap) ToCedgePimFeatureTemplateMapOutput() CedgePimFeatureTemplateMapOutput {
	return i.ToCedgePimFeatureTemplateMapOutputWithContext(context.Background())
}

func (i CedgePimFeatureTemplateMap) ToCedgePimFeatureTemplateMapOutputWithContext(ctx context.Context) CedgePimFeatureTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CedgePimFeatureTemplateMapOutput)
}

type CedgePimFeatureTemplateOutput struct{ *pulumi.OutputState }

func (CedgePimFeatureTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CedgePimFeatureTemplate)(nil)).Elem()
}

func (o CedgePimFeatureTemplateOutput) ToCedgePimFeatureTemplateOutput() CedgePimFeatureTemplateOutput {
	return o
}

func (o CedgePimFeatureTemplateOutput) ToCedgePimFeatureTemplateOutputWithContext(ctx context.Context) CedgePimFeatureTemplateOutput {
	return o
}

// Enable or disable auto-RP - Default value: `false`
func (o CedgePimFeatureTemplateOutput) AutoRp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.BoolPtrOutput { return v.AutoRp }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgePimFeatureTemplateOutput) AutoRpVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringPtrOutput { return v.AutoRpVariable }).(pulumi.StringPtrOutput)
}

// Set Autonomic-Networking virtual interface
func (o CedgePimFeatureTemplateOutput) BsrCandidate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringPtrOutput { return v.BsrCandidate }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CedgePimFeatureTemplateOutput) BsrCandidateVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringPtrOutput { return v.BsrCandidateVariable }).(pulumi.StringPtrOutput)
}

// Turn SSM On / Off - Default value: `false`
func (o CedgePimFeatureTemplateOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.BoolPtrOutput { return v.Default }).(pulumi.BoolPtrOutput)
}

// Variable name
func (o CedgePimFeatureTemplateOutput) DefaultVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringPtrOutput { return v.DefaultVariable }).(pulumi.StringPtrOutput)
}

// The description of the feature template
func (o CedgePimFeatureTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
func (o CedgePimFeatureTemplateOutput) DeviceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringArrayOutput { return v.DeviceTypes }).(pulumi.StringArrayOutput)
}

// Hash Mask length for RP selection
func (o CedgePimFeatureTemplateOutput) HashMaskLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringPtrOutput { return v.HashMaskLength }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CedgePimFeatureTemplateOutput) HashMaskLengthVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringPtrOutput { return v.HashMaskLengthVariable }).(pulumi.StringPtrOutput)
}

// Set RP Discovery Interface Name
func (o CedgePimFeatureTemplateOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringPtrOutput { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CedgePimFeatureTemplateOutput) InterfaceNameVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringPtrOutput { return v.InterfaceNameVariable }).(pulumi.StringPtrOutput)
}

// Set PIM interface parameters
func (o CedgePimFeatureTemplateOutput) Interfaces() CedgePimFeatureTemplateInterfaceArrayOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) CedgePimFeatureTemplateInterfaceArrayOutput { return v.Interfaces }).(CedgePimFeatureTemplateInterfaceArrayOutput)
}

// The name of the feature template
func (o CedgePimFeatureTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Set RP candidate priority - Range: `0`-`255`
func (o CedgePimFeatureTemplateOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.IntPtrOutput { return v.Priority }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CedgePimFeatureTemplateOutput) PriorityVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringPtrOutput { return v.PriorityVariable }).(pulumi.StringPtrOutput)
}

// Set Access List for PIM SSM
func (o CedgePimFeatureTemplateOutput) Range() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringPtrOutput { return v.Range }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CedgePimFeatureTemplateOutput) RangeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringPtrOutput { return v.RangeVariable }).(pulumi.StringPtrOutput)
}

// Set Static RP Address(es)
func (o CedgePimFeatureTemplateOutput) RpAddresses() CedgePimFeatureTemplateRpAddressArrayOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) CedgePimFeatureTemplateRpAddressArrayOutput { return v.RpAddresses }).(CedgePimFeatureTemplateRpAddressArrayOutput)
}

// Enable or disable RP Announce
func (o CedgePimFeatureTemplateOutput) RpAnnounceFields() CedgePimFeatureTemplateRpAnnounceFieldArrayOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) CedgePimFeatureTemplateRpAnnounceFieldArrayOutput {
		return v.RpAnnounceFields
	}).(CedgePimFeatureTemplateRpAnnounceFieldArrayOutput)
}

// Set BSR RP candidate filter
func (o CedgePimFeatureTemplateOutput) RpCandidateAccessList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringPtrOutput { return v.RpCandidateAccessList }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CedgePimFeatureTemplateOutput) RpCandidateAccessListVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringPtrOutput { return v.RpCandidateAccessListVariable }).(pulumi.StringPtrOutput)
}

// Set RP Discovery Scope
func (o CedgePimFeatureTemplateOutput) RpCandidates() CedgePimFeatureTemplateRpCandidateArrayOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) CedgePimFeatureTemplateRpCandidateArrayOutput { return v.RpCandidates }).(CedgePimFeatureTemplateRpCandidateArrayOutput)
}

// Set RP Discovery Scope - Range: `1`-`255`
func (o CedgePimFeatureTemplateOutput) Scope() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.IntPtrOutput { return v.Scope }).(pulumi.IntPtrOutput)
}

// Variable name
func (o CedgePimFeatureTemplateOutput) ScopeVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringPtrOutput { return v.ScopeVariable }).(pulumi.StringPtrOutput)
}

// Set when PIM router joins the SPT (kbps) - Choices: `0`, `infinity`
func (o CedgePimFeatureTemplateOutput) SptThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringPtrOutput { return v.SptThreshold }).(pulumi.StringPtrOutput)
}

// Variable name
func (o CedgePimFeatureTemplateOutput) SptThresholdVariable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringPtrOutput { return v.SptThresholdVariable }).(pulumi.StringPtrOutput)
}

// The template type
func (o CedgePimFeatureTemplateOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.StringOutput { return v.TemplateType }).(pulumi.StringOutput)
}

// The version of the feature template
func (o CedgePimFeatureTemplateOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *CedgePimFeatureTemplate) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type CedgePimFeatureTemplateArrayOutput struct{ *pulumi.OutputState }

func (CedgePimFeatureTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CedgePimFeatureTemplate)(nil)).Elem()
}

func (o CedgePimFeatureTemplateArrayOutput) ToCedgePimFeatureTemplateArrayOutput() CedgePimFeatureTemplateArrayOutput {
	return o
}

func (o CedgePimFeatureTemplateArrayOutput) ToCedgePimFeatureTemplateArrayOutputWithContext(ctx context.Context) CedgePimFeatureTemplateArrayOutput {
	return o
}

func (o CedgePimFeatureTemplateArrayOutput) Index(i pulumi.IntInput) CedgePimFeatureTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CedgePimFeatureTemplate {
		return vs[0].([]*CedgePimFeatureTemplate)[vs[1].(int)]
	}).(CedgePimFeatureTemplateOutput)
}

type CedgePimFeatureTemplateMapOutput struct{ *pulumi.OutputState }

func (CedgePimFeatureTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CedgePimFeatureTemplate)(nil)).Elem()
}

func (o CedgePimFeatureTemplateMapOutput) ToCedgePimFeatureTemplateMapOutput() CedgePimFeatureTemplateMapOutput {
	return o
}

func (o CedgePimFeatureTemplateMapOutput) ToCedgePimFeatureTemplateMapOutputWithContext(ctx context.Context) CedgePimFeatureTemplateMapOutput {
	return o
}

func (o CedgePimFeatureTemplateMapOutput) MapIndex(k pulumi.StringInput) CedgePimFeatureTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CedgePimFeatureTemplate {
		return vs[0].(map[string]*CedgePimFeatureTemplate)[vs[1].(string)]
	}).(CedgePimFeatureTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CedgePimFeatureTemplateInput)(nil)).Elem(), &CedgePimFeatureTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*CedgePimFeatureTemplateArrayInput)(nil)).Elem(), CedgePimFeatureTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CedgePimFeatureTemplateMapInput)(nil)).Elem(), CedgePimFeatureTemplateMap{})
	pulumi.RegisterOutputType(CedgePimFeatureTemplateOutput{})
	pulumi.RegisterOutputType(CedgePimFeatureTemplateArrayOutput{})
	pulumi.RegisterOutputType(CedgePimFeatureTemplateMapOutput{})
}
