// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdwan

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sdwan/sdk/go/sdwan/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource can manage a Policy Object AS Path List Policy_object.
//   - Minimum SD-WAN Manager version: `20.12.0`
//
// ## Import
//
// Expected import identifier with the format: "policy_object_as_path_list_id,feature_profile_id"
//
// ```sh
// $ pulumi import sdwan:index/policyObjectAsPathList:PolicyObjectAsPathList example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
// ```
type PolicyObjectAsPathList struct {
	pulumi.CustomResourceState

	// As path List Number - Range: `1`-`500`
	AsPathListId pulumi.IntOutput `pulumi:"asPathListId"`
	// The description of the Policy_object
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// AS Path List
	Entries PolicyObjectAsPathListEntryArrayOutput `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId pulumi.StringOutput `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name pulumi.StringOutput `pulumi:"name"`
	// The version of the Policy_object
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewPolicyObjectAsPathList registers a new resource with the given unique name, arguments, and options.
func NewPolicyObjectAsPathList(ctx *pulumi.Context,
	name string, args *PolicyObjectAsPathListArgs, opts ...pulumi.ResourceOption) (*PolicyObjectAsPathList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AsPathListId == nil {
		return nil, errors.New("invalid value for required argument 'AsPathListId'")
	}
	if args.Entries == nil {
		return nil, errors.New("invalid value for required argument 'Entries'")
	}
	if args.FeatureProfileId == nil {
		return nil, errors.New("invalid value for required argument 'FeatureProfileId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyObjectAsPathList
	err := ctx.RegisterResource("sdwan:index/policyObjectAsPathList:PolicyObjectAsPathList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyObjectAsPathList gets an existing PolicyObjectAsPathList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyObjectAsPathList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyObjectAsPathListState, opts ...pulumi.ResourceOption) (*PolicyObjectAsPathList, error) {
	var resource PolicyObjectAsPathList
	err := ctx.ReadResource("sdwan:index/policyObjectAsPathList:PolicyObjectAsPathList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyObjectAsPathList resources.
type policyObjectAsPathListState struct {
	// As path List Number - Range: `1`-`500`
	AsPathListId *int `pulumi:"asPathListId"`
	// The description of the Policy_object
	Description *string `pulumi:"description"`
	// AS Path List
	Entries []PolicyObjectAsPathListEntry `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId *string `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name *string `pulumi:"name"`
	// The version of the Policy_object
	Version *int `pulumi:"version"`
}

type PolicyObjectAsPathListState struct {
	// As path List Number - Range: `1`-`500`
	AsPathListId pulumi.IntPtrInput
	// The description of the Policy_object
	Description pulumi.StringPtrInput
	// AS Path List
	Entries PolicyObjectAsPathListEntryArrayInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringPtrInput
	// The name of the Policy_object
	Name pulumi.StringPtrInput
	// The version of the Policy_object
	Version pulumi.IntPtrInput
}

func (PolicyObjectAsPathListState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyObjectAsPathListState)(nil)).Elem()
}

type policyObjectAsPathListArgs struct {
	// As path List Number - Range: `1`-`500`
	AsPathListId int `pulumi:"asPathListId"`
	// The description of the Policy_object
	Description *string `pulumi:"description"`
	// AS Path List
	Entries []PolicyObjectAsPathListEntry `pulumi:"entries"`
	// Feature Profile ID
	FeatureProfileId string `pulumi:"featureProfileId"`
	// The name of the Policy_object
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a PolicyObjectAsPathList resource.
type PolicyObjectAsPathListArgs struct {
	// As path List Number - Range: `1`-`500`
	AsPathListId pulumi.IntInput
	// The description of the Policy_object
	Description pulumi.StringPtrInput
	// AS Path List
	Entries PolicyObjectAsPathListEntryArrayInput
	// Feature Profile ID
	FeatureProfileId pulumi.StringInput
	// The name of the Policy_object
	Name pulumi.StringPtrInput
}

func (PolicyObjectAsPathListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyObjectAsPathListArgs)(nil)).Elem()
}

type PolicyObjectAsPathListInput interface {
	pulumi.Input

	ToPolicyObjectAsPathListOutput() PolicyObjectAsPathListOutput
	ToPolicyObjectAsPathListOutputWithContext(ctx context.Context) PolicyObjectAsPathListOutput
}

func (*PolicyObjectAsPathList) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyObjectAsPathList)(nil)).Elem()
}

func (i *PolicyObjectAsPathList) ToPolicyObjectAsPathListOutput() PolicyObjectAsPathListOutput {
	return i.ToPolicyObjectAsPathListOutputWithContext(context.Background())
}

func (i *PolicyObjectAsPathList) ToPolicyObjectAsPathListOutputWithContext(ctx context.Context) PolicyObjectAsPathListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectAsPathListOutput)
}

// PolicyObjectAsPathListArrayInput is an input type that accepts PolicyObjectAsPathListArray and PolicyObjectAsPathListArrayOutput values.
// You can construct a concrete instance of `PolicyObjectAsPathListArrayInput` via:
//
//	PolicyObjectAsPathListArray{ PolicyObjectAsPathListArgs{...} }
type PolicyObjectAsPathListArrayInput interface {
	pulumi.Input

	ToPolicyObjectAsPathListArrayOutput() PolicyObjectAsPathListArrayOutput
	ToPolicyObjectAsPathListArrayOutputWithContext(context.Context) PolicyObjectAsPathListArrayOutput
}

type PolicyObjectAsPathListArray []PolicyObjectAsPathListInput

func (PolicyObjectAsPathListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyObjectAsPathList)(nil)).Elem()
}

func (i PolicyObjectAsPathListArray) ToPolicyObjectAsPathListArrayOutput() PolicyObjectAsPathListArrayOutput {
	return i.ToPolicyObjectAsPathListArrayOutputWithContext(context.Background())
}

func (i PolicyObjectAsPathListArray) ToPolicyObjectAsPathListArrayOutputWithContext(ctx context.Context) PolicyObjectAsPathListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectAsPathListArrayOutput)
}

// PolicyObjectAsPathListMapInput is an input type that accepts PolicyObjectAsPathListMap and PolicyObjectAsPathListMapOutput values.
// You can construct a concrete instance of `PolicyObjectAsPathListMapInput` via:
//
//	PolicyObjectAsPathListMap{ "key": PolicyObjectAsPathListArgs{...} }
type PolicyObjectAsPathListMapInput interface {
	pulumi.Input

	ToPolicyObjectAsPathListMapOutput() PolicyObjectAsPathListMapOutput
	ToPolicyObjectAsPathListMapOutputWithContext(context.Context) PolicyObjectAsPathListMapOutput
}

type PolicyObjectAsPathListMap map[string]PolicyObjectAsPathListInput

func (PolicyObjectAsPathListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyObjectAsPathList)(nil)).Elem()
}

func (i PolicyObjectAsPathListMap) ToPolicyObjectAsPathListMapOutput() PolicyObjectAsPathListMapOutput {
	return i.ToPolicyObjectAsPathListMapOutputWithContext(context.Background())
}

func (i PolicyObjectAsPathListMap) ToPolicyObjectAsPathListMapOutputWithContext(ctx context.Context) PolicyObjectAsPathListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyObjectAsPathListMapOutput)
}

type PolicyObjectAsPathListOutput struct{ *pulumi.OutputState }

func (PolicyObjectAsPathListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyObjectAsPathList)(nil)).Elem()
}

func (o PolicyObjectAsPathListOutput) ToPolicyObjectAsPathListOutput() PolicyObjectAsPathListOutput {
	return o
}

func (o PolicyObjectAsPathListOutput) ToPolicyObjectAsPathListOutputWithContext(ctx context.Context) PolicyObjectAsPathListOutput {
	return o
}

// As path List Number - Range: `1`-`500`
func (o PolicyObjectAsPathListOutput) AsPathListId() pulumi.IntOutput {
	return o.ApplyT(func(v *PolicyObjectAsPathList) pulumi.IntOutput { return v.AsPathListId }).(pulumi.IntOutput)
}

// The description of the Policy_object
func (o PolicyObjectAsPathListOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyObjectAsPathList) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// AS Path List
func (o PolicyObjectAsPathListOutput) Entries() PolicyObjectAsPathListEntryArrayOutput {
	return o.ApplyT(func(v *PolicyObjectAsPathList) PolicyObjectAsPathListEntryArrayOutput { return v.Entries }).(PolicyObjectAsPathListEntryArrayOutput)
}

// Feature Profile ID
func (o PolicyObjectAsPathListOutput) FeatureProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectAsPathList) pulumi.StringOutput { return v.FeatureProfileId }).(pulumi.StringOutput)
}

// The name of the Policy_object
func (o PolicyObjectAsPathListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyObjectAsPathList) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The version of the Policy_object
func (o PolicyObjectAsPathListOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *PolicyObjectAsPathList) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type PolicyObjectAsPathListArrayOutput struct{ *pulumi.OutputState }

func (PolicyObjectAsPathListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyObjectAsPathList)(nil)).Elem()
}

func (o PolicyObjectAsPathListArrayOutput) ToPolicyObjectAsPathListArrayOutput() PolicyObjectAsPathListArrayOutput {
	return o
}

func (o PolicyObjectAsPathListArrayOutput) ToPolicyObjectAsPathListArrayOutputWithContext(ctx context.Context) PolicyObjectAsPathListArrayOutput {
	return o
}

func (o PolicyObjectAsPathListArrayOutput) Index(i pulumi.IntInput) PolicyObjectAsPathListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyObjectAsPathList {
		return vs[0].([]*PolicyObjectAsPathList)[vs[1].(int)]
	}).(PolicyObjectAsPathListOutput)
}

type PolicyObjectAsPathListMapOutput struct{ *pulumi.OutputState }

func (PolicyObjectAsPathListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyObjectAsPathList)(nil)).Elem()
}

func (o PolicyObjectAsPathListMapOutput) ToPolicyObjectAsPathListMapOutput() PolicyObjectAsPathListMapOutput {
	return o
}

func (o PolicyObjectAsPathListMapOutput) ToPolicyObjectAsPathListMapOutputWithContext(ctx context.Context) PolicyObjectAsPathListMapOutput {
	return o
}

func (o PolicyObjectAsPathListMapOutput) MapIndex(k pulumi.StringInput) PolicyObjectAsPathListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyObjectAsPathList {
		return vs[0].(map[string]*PolicyObjectAsPathList)[vs[1].(string)]
	}).(PolicyObjectAsPathListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectAsPathListInput)(nil)).Elem(), &PolicyObjectAsPathList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectAsPathListArrayInput)(nil)).Elem(), PolicyObjectAsPathListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyObjectAsPathListMapInput)(nil)).Elem(), PolicyObjectAsPathListMap{})
	pulumi.RegisterOutputType(PolicyObjectAsPathListOutput{})
	pulumi.RegisterOutputType(PolicyObjectAsPathListArrayOutput{})
	pulumi.RegisterOutputType(PolicyObjectAsPathListMapOutput{})
}
