// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.CedgeIgmpFeatureTemplateInterfaceJoinGroupArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CedgeIgmpFeatureTemplateInterfaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final CedgeIgmpFeatureTemplateInterfaceArgs Empty = new CedgeIgmpFeatureTemplateInterfaceArgs();

    /**
     * Configure static joins
     * 
     */
    @Import(name="joinGroups")
    private @Nullable Output<List<CedgeIgmpFeatureTemplateInterfaceJoinGroupArgs>> joinGroups;

    /**
     * @return Configure static joins
     * 
     */
    public Optional<Output<List<CedgeIgmpFeatureTemplateInterfaceJoinGroupArgs>>> joinGroups() {
        return Optional.ofNullable(this.joinGroups);
    }

    /**
     * Set interface name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Set interface name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="nameVariable")
    private @Nullable Output<String> nameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> nameVariable() {
        return Optional.ofNullable(this.nameVariable);
    }

    /**
     * Indicates if list item is considered optional.
     * 
     */
    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    private CedgeIgmpFeatureTemplateInterfaceArgs() {}

    private CedgeIgmpFeatureTemplateInterfaceArgs(CedgeIgmpFeatureTemplateInterfaceArgs $) {
        this.joinGroups = $.joinGroups;
        this.name = $.name;
        this.nameVariable = $.nameVariable;
        this.optional = $.optional;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CedgeIgmpFeatureTemplateInterfaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CedgeIgmpFeatureTemplateInterfaceArgs $;

        public Builder() {
            $ = new CedgeIgmpFeatureTemplateInterfaceArgs();
        }

        public Builder(CedgeIgmpFeatureTemplateInterfaceArgs defaults) {
            $ = new CedgeIgmpFeatureTemplateInterfaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param joinGroups Configure static joins
         * 
         * @return builder
         * 
         */
        public Builder joinGroups(@Nullable Output<List<CedgeIgmpFeatureTemplateInterfaceJoinGroupArgs>> joinGroups) {
            $.joinGroups = joinGroups;
            return this;
        }

        /**
         * @param joinGroups Configure static joins
         * 
         * @return builder
         * 
         */
        public Builder joinGroups(List<CedgeIgmpFeatureTemplateInterfaceJoinGroupArgs> joinGroups) {
            return joinGroups(Output.of(joinGroups));
        }

        /**
         * @param joinGroups Configure static joins
         * 
         * @return builder
         * 
         */
        public Builder joinGroups(CedgeIgmpFeatureTemplateInterfaceJoinGroupArgs... joinGroups) {
            return joinGroups(List.of(joinGroups));
        }

        /**
         * @param name Set interface name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Set interface name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nameVariable(@Nullable Output<String> nameVariable) {
            $.nameVariable = nameVariable;
            return this;
        }

        /**
         * @param nameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nameVariable(String nameVariable) {
            return nameVariable(Output.of(nameVariable));
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        public CedgeIgmpFeatureTemplateInterfaceArgs build() {
            return $;
        }
    }

}
