// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.CustomControlTopologyPolicyDefinitionSequenceActionEntryArgs;
import com.pulumi.sdwan.inputs.CustomControlTopologyPolicyDefinitionSequenceMatchEntryArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomControlTopologyPolicyDefinitionSequenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomControlTopologyPolicyDefinitionSequenceArgs Empty = new CustomControlTopologyPolicyDefinitionSequenceArgs();

    /**
     * List of action entries
     * 
     */
    @Import(name="actionEntries")
    private @Nullable Output<List<CustomControlTopologyPolicyDefinitionSequenceActionEntryArgs>> actionEntries;

    /**
     * @return List of action entries
     * 
     */
    public Optional<Output<List<CustomControlTopologyPolicyDefinitionSequenceActionEntryArgs>>> actionEntries() {
        return Optional.ofNullable(this.actionEntries);
    }

    /**
     * Base action, either `accept` or `reject`
     *   - Choices: `accept`, `reject`
     * 
     */
    @Import(name="baseAction")
    private @Nullable Output<String> baseAction;

    /**
     * @return Base action, either `accept` or `reject`
     *   - Choices: `accept`, `reject`
     * 
     */
    public Optional<Output<String>> baseAction() {
        return Optional.ofNullable(this.baseAction);
    }

    /**
     * Sequence ID
     * 
     */
    @Import(name="id", required=true)
    private Output<Integer> id;

    /**
     * @return Sequence ID
     * 
     */
    public Output<Integer> id() {
        return this.id;
    }

    /**
     * Sequence IP type, either `ipv4`, `ipv6` or `all`
     *   - Choices: `ipv4`, `ipv6`, `all`
     * 
     */
    @Import(name="ipType")
    private @Nullable Output<String> ipType;

    /**
     * @return Sequence IP type, either `ipv4`, `ipv6` or `all`
     *   - Choices: `ipv4`, `ipv6`, `all`
     * 
     */
    public Optional<Output<String>> ipType() {
        return Optional.ofNullable(this.ipType);
    }

    /**
     * List of match entries
     * 
     */
    @Import(name="matchEntries")
    private @Nullable Output<List<CustomControlTopologyPolicyDefinitionSequenceMatchEntryArgs>> matchEntries;

    /**
     * @return List of match entries
     * 
     */
    public Optional<Output<List<CustomControlTopologyPolicyDefinitionSequenceMatchEntryArgs>>> matchEntries() {
        return Optional.ofNullable(this.matchEntries);
    }

    /**
     * Sequence name
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Sequence name
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Sequence type, either `route` or `tloc`
     *   - Choices: `route`, `tloc`
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Sequence type, either `route` or `tloc`
     *   - Choices: `route`, `tloc`
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private CustomControlTopologyPolicyDefinitionSequenceArgs() {}

    private CustomControlTopologyPolicyDefinitionSequenceArgs(CustomControlTopologyPolicyDefinitionSequenceArgs $) {
        this.actionEntries = $.actionEntries;
        this.baseAction = $.baseAction;
        this.id = $.id;
        this.ipType = $.ipType;
        this.matchEntries = $.matchEntries;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomControlTopologyPolicyDefinitionSequenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomControlTopologyPolicyDefinitionSequenceArgs $;

        public Builder() {
            $ = new CustomControlTopologyPolicyDefinitionSequenceArgs();
        }

        public Builder(CustomControlTopologyPolicyDefinitionSequenceArgs defaults) {
            $ = new CustomControlTopologyPolicyDefinitionSequenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionEntries List of action entries
         * 
         * @return builder
         * 
         */
        public Builder actionEntries(@Nullable Output<List<CustomControlTopologyPolicyDefinitionSequenceActionEntryArgs>> actionEntries) {
            $.actionEntries = actionEntries;
            return this;
        }

        /**
         * @param actionEntries List of action entries
         * 
         * @return builder
         * 
         */
        public Builder actionEntries(List<CustomControlTopologyPolicyDefinitionSequenceActionEntryArgs> actionEntries) {
            return actionEntries(Output.of(actionEntries));
        }

        /**
         * @param actionEntries List of action entries
         * 
         * @return builder
         * 
         */
        public Builder actionEntries(CustomControlTopologyPolicyDefinitionSequenceActionEntryArgs... actionEntries) {
            return actionEntries(List.of(actionEntries));
        }

        /**
         * @param baseAction Base action, either `accept` or `reject`
         *   - Choices: `accept`, `reject`
         * 
         * @return builder
         * 
         */
        public Builder baseAction(@Nullable Output<String> baseAction) {
            $.baseAction = baseAction;
            return this;
        }

        /**
         * @param baseAction Base action, either `accept` or `reject`
         *   - Choices: `accept`, `reject`
         * 
         * @return builder
         * 
         */
        public Builder baseAction(String baseAction) {
            return baseAction(Output.of(baseAction));
        }

        /**
         * @param id Sequence ID
         * 
         * @return builder
         * 
         */
        public Builder id(Output<Integer> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Sequence ID
         * 
         * @return builder
         * 
         */
        public Builder id(Integer id) {
            return id(Output.of(id));
        }

        /**
         * @param ipType Sequence IP type, either `ipv4`, `ipv6` or `all`
         *   - Choices: `ipv4`, `ipv6`, `all`
         * 
         * @return builder
         * 
         */
        public Builder ipType(@Nullable Output<String> ipType) {
            $.ipType = ipType;
            return this;
        }

        /**
         * @param ipType Sequence IP type, either `ipv4`, `ipv6` or `all`
         *   - Choices: `ipv4`, `ipv6`, `all`
         * 
         * @return builder
         * 
         */
        public Builder ipType(String ipType) {
            return ipType(Output.of(ipType));
        }

        /**
         * @param matchEntries List of match entries
         * 
         * @return builder
         * 
         */
        public Builder matchEntries(@Nullable Output<List<CustomControlTopologyPolicyDefinitionSequenceMatchEntryArgs>> matchEntries) {
            $.matchEntries = matchEntries;
            return this;
        }

        /**
         * @param matchEntries List of match entries
         * 
         * @return builder
         * 
         */
        public Builder matchEntries(List<CustomControlTopologyPolicyDefinitionSequenceMatchEntryArgs> matchEntries) {
            return matchEntries(Output.of(matchEntries));
        }

        /**
         * @param matchEntries List of match entries
         * 
         * @return builder
         * 
         */
        public Builder matchEntries(CustomControlTopologyPolicyDefinitionSequenceMatchEntryArgs... matchEntries) {
            return matchEntries(List.of(matchEntries));
        }

        /**
         * @param name Sequence name
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Sequence name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type Sequence type, either `route` or `tloc`
         *   - Choices: `route`, `tloc`
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Sequence type, either `route` or `tloc`
         *   - Choices: `route`, `tloc`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public CustomControlTopologyPolicyDefinitionSequenceArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("CustomControlTopologyPolicyDefinitionSequenceArgs", "id");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("CustomControlTopologyPolicyDefinitionSequenceArgs", "name");
            }
            return $;
        }
    }

}
