// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.ServiceLanVpnFeatureArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureState;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureAdvertiseOmpIpv4;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureAdvertiseOmpIpv6;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureGreRoute;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureHostMapping;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureIpsecRoute;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureIpv4ExportRouteTarget;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureIpv4ImportRouteTarget;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureIpv4StaticRoute;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureIpv6ExportRouteTarget;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureIpv6ImportRouteTarget;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureIpv6StaticRoute;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureNat64V4Pool;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureNatPool;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureNatPortForward;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureRouteLeakFromGlobalVpn;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureRouteLeakFromOtherService;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureRouteLeakToGlobalVpn;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureService;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureServiceRoute;
import com.pulumi.sdwan.outputs.ServiceLanVpnFeatureStaticNat;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Service LAN VPN Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * Expected import identifier with the format: &#34;service_lan_vpn_feature_id,feature_profile_id&#34;
 * 
 * ```sh
 * $ pulumi import sdwan:index/serviceLanVpnFeature:ServiceLanVpnFeature example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/serviceLanVpnFeature:ServiceLanVpnFeature")
public class ServiceLanVpnFeature extends com.pulumi.resources.CustomResource {
    /**
     * OMP Advertise IPv4
     * 
     */
    @Export(name="advertiseOmpIpv4s", refs={List.class,ServiceLanVpnFeatureAdvertiseOmpIpv4.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureAdvertiseOmpIpv4>> advertiseOmpIpv4s;

    /**
     * @return OMP Advertise IPv4
     * 
     */
    public Output<Optional<List<ServiceLanVpnFeatureAdvertiseOmpIpv4>>> advertiseOmpIpv4s() {
        return Codegen.optional(this.advertiseOmpIpv4s);
    }
    /**
     * OMP Advertise IPv6
     * 
     */
    @Export(name="advertiseOmpIpv6s", refs={List.class,ServiceLanVpnFeatureAdvertiseOmpIpv6.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureAdvertiseOmpIpv6>> advertiseOmpIpv6s;

    /**
     * @return OMP Advertise IPv6
     * 
     */
    public Output<Optional<List<ServiceLanVpnFeatureAdvertiseOmpIpv6>>> advertiseOmpIpv6s() {
        return Codegen.optional(this.advertiseOmpIpv6s);
    }
    /**
     * Name
     * 
     */
    @Export(name="configDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> configDescription;

    /**
     * @return Name
     * 
     */
    public Output<Optional<String>> configDescription() {
        return Codegen.optional(this.configDescription);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="configDescriptionVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> configDescriptionVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> configDescriptionVariable() {
        return Codegen.optional(this.configDescriptionVariable);
    }
    /**
     * The description of the Feature
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Enable SDWAN Remote Access - Default value: `false`
     * 
     */
    @Export(name="enableSdwanRemoteAccess", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableSdwanRemoteAccess;

    /**
     * @return Enable SDWAN Remote Access - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> enableSdwanRemoteAccess() {
        return Codegen.optional(this.enableSdwanRemoteAccess);
    }
    /**
     * Feature Profile ID
     * 
     */
    @Export(name="featureProfileId", refs={String.class}, tree="[0]")
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * IPv4 Static GRE Route
     * 
     */
    @Export(name="greRoutes", refs={List.class,ServiceLanVpnFeatureGreRoute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureGreRoute>> greRoutes;

    /**
     * @return IPv4 Static GRE Route
     * 
     */
    public Output<Optional<List<ServiceLanVpnFeatureGreRoute>>> greRoutes() {
        return Codegen.optional(this.greRoutes);
    }
    @Export(name="hostMappings", refs={List.class,ServiceLanVpnFeatureHostMapping.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureHostMapping>> hostMappings;

    public Output<Optional<List<ServiceLanVpnFeatureHostMapping>>> hostMappings() {
        return Codegen.optional(this.hostMappings);
    }
    /**
     * IPv4 Static IPSEC Route
     * 
     */
    @Export(name="ipsecRoutes", refs={List.class,ServiceLanVpnFeatureIpsecRoute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureIpsecRoute>> ipsecRoutes;

    /**
     * @return IPv4 Static IPSEC Route
     * 
     */
    public Output<Optional<List<ServiceLanVpnFeatureIpsecRoute>>> ipsecRoutes() {
        return Codegen.optional(this.ipsecRoutes);
    }
    @Export(name="ipv4ExportRouteTargets", refs={List.class,ServiceLanVpnFeatureIpv4ExportRouteTarget.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureIpv4ExportRouteTarget>> ipv4ExportRouteTargets;

    public Output<Optional<List<ServiceLanVpnFeatureIpv4ExportRouteTarget>>> ipv4ExportRouteTargets() {
        return Codegen.optional(this.ipv4ExportRouteTargets);
    }
    @Export(name="ipv4ImportRouteTargets", refs={List.class,ServiceLanVpnFeatureIpv4ImportRouteTarget.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureIpv4ImportRouteTarget>> ipv4ImportRouteTargets;

    public Output<Optional<List<ServiceLanVpnFeatureIpv4ImportRouteTarget>>> ipv4ImportRouteTargets() {
        return Codegen.optional(this.ipv4ImportRouteTargets);
    }
    /**
     * IPv4 Static Route
     * 
     */
    @Export(name="ipv4StaticRoutes", refs={List.class,ServiceLanVpnFeatureIpv4StaticRoute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureIpv4StaticRoute>> ipv4StaticRoutes;

    /**
     * @return IPv4 Static Route
     * 
     */
    public Output<Optional<List<ServiceLanVpnFeatureIpv4StaticRoute>>> ipv4StaticRoutes() {
        return Codegen.optional(this.ipv4StaticRoutes);
    }
    @Export(name="ipv6ExportRouteTargets", refs={List.class,ServiceLanVpnFeatureIpv6ExportRouteTarget.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureIpv6ExportRouteTarget>> ipv6ExportRouteTargets;

    public Output<Optional<List<ServiceLanVpnFeatureIpv6ExportRouteTarget>>> ipv6ExportRouteTargets() {
        return Codegen.optional(this.ipv6ExportRouteTargets);
    }
    @Export(name="ipv6ImportRouteTargets", refs={List.class,ServiceLanVpnFeatureIpv6ImportRouteTarget.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureIpv6ImportRouteTarget>> ipv6ImportRouteTargets;

    public Output<Optional<List<ServiceLanVpnFeatureIpv6ImportRouteTarget>>> ipv6ImportRouteTargets() {
        return Codegen.optional(this.ipv6ImportRouteTargets);
    }
    /**
     * IPv6 Static Route
     * 
     */
    @Export(name="ipv6StaticRoutes", refs={List.class,ServiceLanVpnFeatureIpv6StaticRoute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureIpv6StaticRoute>> ipv6StaticRoutes;

    /**
     * @return IPv6 Static Route
     * 
     */
    public Output<Optional<List<ServiceLanVpnFeatureIpv6StaticRoute>>> ipv6StaticRoutes() {
        return Codegen.optional(this.ipv6StaticRoutes);
    }
    /**
     * The name of the Feature
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * NAT64 V4 Pool
     * 
     */
    @Export(name="nat64V4Pools", refs={List.class,ServiceLanVpnFeatureNat64V4Pool.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureNat64V4Pool>> nat64V4Pools;

    /**
     * @return NAT64 V4 Pool
     * 
     */
    public Output<Optional<List<ServiceLanVpnFeatureNat64V4Pool>>> nat64V4Pools() {
        return Codegen.optional(this.nat64V4Pools);
    }
    /**
     * NAT Pool
     * 
     */
    @Export(name="natPools", refs={List.class,ServiceLanVpnFeatureNatPool.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureNatPool>> natPools;

    /**
     * @return NAT Pool
     * 
     */
    public Output<Optional<List<ServiceLanVpnFeatureNatPool>>> natPools() {
        return Codegen.optional(this.natPools);
    }
    /**
     * NAT Port Forward
     * 
     */
    @Export(name="natPortForwards", refs={List.class,ServiceLanVpnFeatureNatPortForward.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureNatPortForward>> natPortForwards;

    /**
     * @return NAT Port Forward
     * 
     */
    public Output<Optional<List<ServiceLanVpnFeatureNatPortForward>>> natPortForwards() {
        return Codegen.optional(this.natPortForwards);
    }
    /**
     * OMP Admin Distance IPv4 - Range: `1`-`255`
     * 
     */
    @Export(name="ompAdminDistanceIpv4", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ompAdminDistanceIpv4;

    /**
     * @return OMP Admin Distance IPv4 - Range: `1`-`255`
     * 
     */
    public Output<Optional<Integer>> ompAdminDistanceIpv4() {
        return Codegen.optional(this.ompAdminDistanceIpv4);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ompAdminDistanceIpv4Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ompAdminDistanceIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ompAdminDistanceIpv4Variable() {
        return Codegen.optional(this.ompAdminDistanceIpv4Variable);
    }
    /**
     * OMP Admin Distance IPv6 - Range: `1`-`255`
     * 
     */
    @Export(name="ompAdminDistanceIpv6", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ompAdminDistanceIpv6;

    /**
     * @return OMP Admin Distance IPv6 - Range: `1`-`255`
     * 
     */
    public Output<Optional<Integer>> ompAdminDistanceIpv6() {
        return Codegen.optional(this.ompAdminDistanceIpv6);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ompAdminDistanceIpv6Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ompAdminDistanceIpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ompAdminDistanceIpv6Variable() {
        return Codegen.optional(this.ompAdminDistanceIpv6Variable);
    }
    /**
     * Primary DNS Address (IPv4)
     * 
     */
    @Export(name="primaryDnsAddressIpv4", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primaryDnsAddressIpv4;

    /**
     * @return Primary DNS Address (IPv4)
     * 
     */
    public Output<Optional<String>> primaryDnsAddressIpv4() {
        return Codegen.optional(this.primaryDnsAddressIpv4);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="primaryDnsAddressIpv4Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primaryDnsAddressIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> primaryDnsAddressIpv4Variable() {
        return Codegen.optional(this.primaryDnsAddressIpv4Variable);
    }
    /**
     * Primary DNS Address (IPv6)
     * 
     */
    @Export(name="primaryDnsAddressIpv6", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primaryDnsAddressIpv6;

    /**
     * @return Primary DNS Address (IPv6)
     * 
     */
    public Output<Optional<String>> primaryDnsAddressIpv6() {
        return Codegen.optional(this.primaryDnsAddressIpv6);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="primaryDnsAddressIpv6Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primaryDnsAddressIpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> primaryDnsAddressIpv6Variable() {
        return Codegen.optional(this.primaryDnsAddressIpv6Variable);
    }
    /**
     * Enable route leaking from Global to Service VPN
     * 
     */
    @Export(name="routeLeakFromGlobalVpns", refs={List.class,ServiceLanVpnFeatureRouteLeakFromGlobalVpn.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureRouteLeakFromGlobalVpn>> routeLeakFromGlobalVpns;

    /**
     * @return Enable route leaking from Global to Service VPN
     * 
     */
    public Output<Optional<List<ServiceLanVpnFeatureRouteLeakFromGlobalVpn>>> routeLeakFromGlobalVpns() {
        return Codegen.optional(this.routeLeakFromGlobalVpns);
    }
    /**
     * Enable route leak from another Service VPN to current Service VPN
     * 
     */
    @Export(name="routeLeakFromOtherServices", refs={List.class,ServiceLanVpnFeatureRouteLeakFromOtherService.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureRouteLeakFromOtherService>> routeLeakFromOtherServices;

    /**
     * @return Enable route leak from another Service VPN to current Service VPN
     * 
     */
    public Output<Optional<List<ServiceLanVpnFeatureRouteLeakFromOtherService>>> routeLeakFromOtherServices() {
        return Codegen.optional(this.routeLeakFromOtherServices);
    }
    /**
     * Enable route leaking from Service to Global VPN
     * 
     */
    @Export(name="routeLeakToGlobalVpns", refs={List.class,ServiceLanVpnFeatureRouteLeakToGlobalVpn.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureRouteLeakToGlobalVpn>> routeLeakToGlobalVpns;

    /**
     * @return Enable route leaking from Service to Global VPN
     * 
     */
    public Output<Optional<List<ServiceLanVpnFeatureRouteLeakToGlobalVpn>>> routeLeakToGlobalVpns() {
        return Codegen.optional(this.routeLeakToGlobalVpns);
    }
    /**
     * Secondary DNS Address (IPv4)
     * 
     */
    @Export(name="secondaryDnsAddressIpv4", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryDnsAddressIpv4;

    /**
     * @return Secondary DNS Address (IPv4)
     * 
     */
    public Output<Optional<String>> secondaryDnsAddressIpv4() {
        return Codegen.optional(this.secondaryDnsAddressIpv4);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="secondaryDnsAddressIpv4Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryDnsAddressIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> secondaryDnsAddressIpv4Variable() {
        return Codegen.optional(this.secondaryDnsAddressIpv4Variable);
    }
    /**
     * Secondary DNS Address (IPv6)
     * 
     */
    @Export(name="secondaryDnsAddressIpv6", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryDnsAddressIpv6;

    /**
     * @return Secondary DNS Address (IPv6)
     * 
     */
    public Output<Optional<String>> secondaryDnsAddressIpv6() {
        return Codegen.optional(this.secondaryDnsAddressIpv6);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="secondaryDnsAddressIpv6Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryDnsAddressIpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> secondaryDnsAddressIpv6Variable() {
        return Codegen.optional(this.secondaryDnsAddressIpv6Variable);
    }
    /**
     * Service
     * 
     */
    @Export(name="serviceRoutes", refs={List.class,ServiceLanVpnFeatureServiceRoute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureServiceRoute>> serviceRoutes;

    /**
     * @return Service
     * 
     */
    public Output<Optional<List<ServiceLanVpnFeatureServiceRoute>>> serviceRoutes() {
        return Codegen.optional(this.serviceRoutes);
    }
    /**
     * Service
     * 
     */
    @Export(name="services", refs={List.class,ServiceLanVpnFeatureService.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureService>> services;

    /**
     * @return Service
     * 
     */
    public Output<Optional<List<ServiceLanVpnFeatureService>>> services() {
        return Codegen.optional(this.services);
    }
    /**
     * Static NAT Rules
     * 
     */
    @Export(name="staticNats", refs={List.class,ServiceLanVpnFeatureStaticNat.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnFeatureStaticNat>> staticNats;

    /**
     * @return Static NAT Rules
     * 
     */
    public Output<Optional<List<ServiceLanVpnFeatureStaticNat>>> staticNats() {
        return Codegen.optional(this.staticNats);
    }
    /**
     * The version of the Feature
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the Feature
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }
    /**
     * VPN - Range: `1`-`65527` - Default value: `0`
     * 
     */
    @Export(name="vpn", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> vpn;

    /**
     * @return VPN - Range: `1`-`65527` - Default value: `0`
     * 
     */
    public Output<Optional<Integer>> vpn() {
        return Codegen.optional(this.vpn);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="vpnVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpnVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> vpnVariable() {
        return Codegen.optional(this.vpnVariable);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServiceLanVpnFeature(java.lang.String name) {
        this(name, ServiceLanVpnFeatureArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServiceLanVpnFeature(java.lang.String name, ServiceLanVpnFeatureArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServiceLanVpnFeature(java.lang.String name, ServiceLanVpnFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/serviceLanVpnFeature:ServiceLanVpnFeature", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ServiceLanVpnFeature(java.lang.String name, Output<java.lang.String> id, @Nullable ServiceLanVpnFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/serviceLanVpnFeature:ServiceLanVpnFeature", name, state, makeResourceOptions(options, id), false);
    }

    private static ServiceLanVpnFeatureArgs makeArgs(ServiceLanVpnFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ServiceLanVpnFeatureArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServiceLanVpnFeature get(java.lang.String name, Output<java.lang.String> id, @Nullable ServiceLanVpnFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServiceLanVpnFeature(name, id, state, options);
    }
}
