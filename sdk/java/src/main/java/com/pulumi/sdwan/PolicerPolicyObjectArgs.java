// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicerPolicyObjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicerPolicyObjectArgs Empty = new PolicerPolicyObjectArgs();

    /**
     * Burst in bytes
     *   - Range: `15000`-`10000000`
     * 
     */
    @Import(name="burst", required=true)
    private Output<Integer> burst;

    /**
     * @return Burst in bytes
     *   - Range: `15000`-`10000000`
     * 
     */
    public Output<Integer> burst() {
        return this.burst;
    }

    /**
     * Exceed action
     *   - Choices: `drop`, `remark`
     * 
     */
    @Import(name="exceedAction", required=true)
    private Output<String> exceedAction;

    /**
     * @return Exceed action
     *   - Choices: `drop`, `remark`
     * 
     */
    public Output<String> exceedAction() {
        return this.exceedAction;
    }

    /**
     * The name of the policy object
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the policy object
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Rate in bps
     *   - Range: `8`-`100000000000`
     * 
     */
    @Import(name="rate", required=true)
    private Output<Integer> rate;

    /**
     * @return Rate in bps
     *   - Range: `8`-`100000000000`
     * 
     */
    public Output<Integer> rate() {
        return this.rate;
    }

    private PolicerPolicyObjectArgs() {}

    private PolicerPolicyObjectArgs(PolicerPolicyObjectArgs $) {
        this.burst = $.burst;
        this.exceedAction = $.exceedAction;
        this.name = $.name;
        this.rate = $.rate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicerPolicyObjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicerPolicyObjectArgs $;

        public Builder() {
            $ = new PolicerPolicyObjectArgs();
        }

        public Builder(PolicerPolicyObjectArgs defaults) {
            $ = new PolicerPolicyObjectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param burst Burst in bytes
         *   - Range: `15000`-`10000000`
         * 
         * @return builder
         * 
         */
        public Builder burst(Output<Integer> burst) {
            $.burst = burst;
            return this;
        }

        /**
         * @param burst Burst in bytes
         *   - Range: `15000`-`10000000`
         * 
         * @return builder
         * 
         */
        public Builder burst(Integer burst) {
            return burst(Output.of(burst));
        }

        /**
         * @param exceedAction Exceed action
         *   - Choices: `drop`, `remark`
         * 
         * @return builder
         * 
         */
        public Builder exceedAction(Output<String> exceedAction) {
            $.exceedAction = exceedAction;
            return this;
        }

        /**
         * @param exceedAction Exceed action
         *   - Choices: `drop`, `remark`
         * 
         * @return builder
         * 
         */
        public Builder exceedAction(String exceedAction) {
            return exceedAction(Output.of(exceedAction));
        }

        /**
         * @param name The name of the policy object
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the policy object
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param rate Rate in bps
         *   - Range: `8`-`100000000000`
         * 
         * @return builder
         * 
         */
        public Builder rate(Output<Integer> rate) {
            $.rate = rate;
            return this;
        }

        /**
         * @param rate Rate in bps
         *   - Range: `8`-`100000000000`
         * 
         * @return builder
         * 
         */
        public Builder rate(Integer rate) {
            return rate(Output.of(rate));
        }

        public PolicerPolicyObjectArgs build() {
            if ($.burst == null) {
                throw new MissingRequiredPropertyException("PolicerPolicyObjectArgs", "burst");
            }
            if ($.exceedAction == null) {
                throw new MissingRequiredPropertyException("PolicerPolicyObjectArgs", "exceedAction");
            }
            if ($.rate == null) {
                throw new MissingRequiredPropertyException("PolicerPolicyObjectArgs", "rate");
            }
            return $;
        }
    }

}
