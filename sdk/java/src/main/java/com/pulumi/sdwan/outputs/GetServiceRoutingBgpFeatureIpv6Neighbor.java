// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetServiceRoutingBgpFeatureIpv6NeighborAddressFamily;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceRoutingBgpFeatureIpv6Neighbor {
    /**
     * @return Set IPv6 neighbor address
     * 
     */
    private String address;
    /**
     * @return Set IPv6 BGP address family
     * 
     */
    private List<GetServiceRoutingBgpFeatureIpv6NeighborAddressFamily> addressFamilies;
    /**
     * @return Variable name
     * 
     */
    private String addressVariable;
    /**
     * @return The number of accept as-path with my AS present in it
     * 
     */
    private Integer allowasInNumber;
    /**
     * @return Variable name
     * 
     */
    private String allowasInNumberVariable;
    /**
     * @return Override matching AS-number while sending update
     * 
     */
    private Boolean asOverride;
    /**
     * @return Variable name
     * 
     */
    private String asOverrideVariable;
    /**
     * @return Set description
     * 
     */
    private String description;
    /**
     * @return Variable name
     * 
     */
    private String descriptionVariable;
    /**
     * @return Set TTL value for peers that are not directly connected
     * 
     */
    private Integer ebgpMultihop;
    /**
     * @return Variable name
     * 
     */
    private String ebgpMultihopVariable;
    /**
     * @return Set how long to wait since receiving a keepalive message to consider BGP peer unavailable
     * 
     */
    private Integer holdTime;
    /**
     * @return Variable name
     * 
     */
    private String holdTimeVariable;
    /**
     * @return Set how often to advertise keepalive messages to BGP peer
     * 
     */
    private Integer keepaliveTime;
    /**
     * @return Variable name
     * 
     */
    private String keepaliveTimeVariable;
    /**
     * @return Set local autonomous number,Local-AS cannot have the local BGP protocol AS number or the AS number of the remote peer.The local-as is valid only if the peer is a true eBGP peer. It does not work for two peers in different sub-ASs in a confederation.
     * 
     */
    private Integer localAs;
    /**
     * @return Variable name
     * 
     */
    private String localAsVariable;
    /**
     * @return Set router to be next hop for routes advertised to neighbor
     * 
     */
    private Boolean nextHopSelf;
    /**
     * @return Variable name
     * 
     */
    private String nextHopSelfVariable;
    /**
     * @return Set MD5 password on TCP connection with BGP peer
     * 
     */
    private String password;
    /**
     * @return Variable name
     * 
     */
    private String passwordVariable;
    /**
     * @return Set remote autonomous system number
     * 
     */
    private Integer remoteAs;
    /**
     * @return Variable name
     * 
     */
    private String remoteAsVariable;
    /**
     * @return Send community attribute
     * 
     */
    private Boolean sendCommunity;
    /**
     * @return Variable name
     * 
     */
    private String sendCommunityVariable;
    /**
     * @return Send extended community attribute
     * 
     */
    private Boolean sendExtendedCommunity;
    /**
     * @return Variable name
     * 
     */
    private String sendExtendedCommunityVariable;
    /**
     * @return Enable or disable a BGP neighbor
     * 
     */
    private Boolean shutdown;
    /**
     * @return Variable name
     * 
     */
    private String shutdownVariable;
    /**
     * @return Source interface name for BGP neighbor
     * 
     */
    private String updateSourceInterface;
    /**
     * @return Variable name
     * 
     */
    private String updateSourceInterfaceVariable;

    private GetServiceRoutingBgpFeatureIpv6Neighbor() {}
    /**
     * @return Set IPv6 neighbor address
     * 
     */
    public String address() {
        return this.address;
    }
    /**
     * @return Set IPv6 BGP address family
     * 
     */
    public List<GetServiceRoutingBgpFeatureIpv6NeighborAddressFamily> addressFamilies() {
        return this.addressFamilies;
    }
    /**
     * @return Variable name
     * 
     */
    public String addressVariable() {
        return this.addressVariable;
    }
    /**
     * @return The number of accept as-path with my AS present in it
     * 
     */
    public Integer allowasInNumber() {
        return this.allowasInNumber;
    }
    /**
     * @return Variable name
     * 
     */
    public String allowasInNumberVariable() {
        return this.allowasInNumberVariable;
    }
    /**
     * @return Override matching AS-number while sending update
     * 
     */
    public Boolean asOverride() {
        return this.asOverride;
    }
    /**
     * @return Variable name
     * 
     */
    public String asOverrideVariable() {
        return this.asOverrideVariable;
    }
    /**
     * @return Set description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Variable name
     * 
     */
    public String descriptionVariable() {
        return this.descriptionVariable;
    }
    /**
     * @return Set TTL value for peers that are not directly connected
     * 
     */
    public Integer ebgpMultihop() {
        return this.ebgpMultihop;
    }
    /**
     * @return Variable name
     * 
     */
    public String ebgpMultihopVariable() {
        return this.ebgpMultihopVariable;
    }
    /**
     * @return Set how long to wait since receiving a keepalive message to consider BGP peer unavailable
     * 
     */
    public Integer holdTime() {
        return this.holdTime;
    }
    /**
     * @return Variable name
     * 
     */
    public String holdTimeVariable() {
        return this.holdTimeVariable;
    }
    /**
     * @return Set how often to advertise keepalive messages to BGP peer
     * 
     */
    public Integer keepaliveTime() {
        return this.keepaliveTime;
    }
    /**
     * @return Variable name
     * 
     */
    public String keepaliveTimeVariable() {
        return this.keepaliveTimeVariable;
    }
    /**
     * @return Set local autonomous number,Local-AS cannot have the local BGP protocol AS number or the AS number of the remote peer.The local-as is valid only if the peer is a true eBGP peer. It does not work for two peers in different sub-ASs in a confederation.
     * 
     */
    public Integer localAs() {
        return this.localAs;
    }
    /**
     * @return Variable name
     * 
     */
    public String localAsVariable() {
        return this.localAsVariable;
    }
    /**
     * @return Set router to be next hop for routes advertised to neighbor
     * 
     */
    public Boolean nextHopSelf() {
        return this.nextHopSelf;
    }
    /**
     * @return Variable name
     * 
     */
    public String nextHopSelfVariable() {
        return this.nextHopSelfVariable;
    }
    /**
     * @return Set MD5 password on TCP connection with BGP peer
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return Variable name
     * 
     */
    public String passwordVariable() {
        return this.passwordVariable;
    }
    /**
     * @return Set remote autonomous system number
     * 
     */
    public Integer remoteAs() {
        return this.remoteAs;
    }
    /**
     * @return Variable name
     * 
     */
    public String remoteAsVariable() {
        return this.remoteAsVariable;
    }
    /**
     * @return Send community attribute
     * 
     */
    public Boolean sendCommunity() {
        return this.sendCommunity;
    }
    /**
     * @return Variable name
     * 
     */
    public String sendCommunityVariable() {
        return this.sendCommunityVariable;
    }
    /**
     * @return Send extended community attribute
     * 
     */
    public Boolean sendExtendedCommunity() {
        return this.sendExtendedCommunity;
    }
    /**
     * @return Variable name
     * 
     */
    public String sendExtendedCommunityVariable() {
        return this.sendExtendedCommunityVariable;
    }
    /**
     * @return Enable or disable a BGP neighbor
     * 
     */
    public Boolean shutdown() {
        return this.shutdown;
    }
    /**
     * @return Variable name
     * 
     */
    public String shutdownVariable() {
        return this.shutdownVariable;
    }
    /**
     * @return Source interface name for BGP neighbor
     * 
     */
    public String updateSourceInterface() {
        return this.updateSourceInterface;
    }
    /**
     * @return Variable name
     * 
     */
    public String updateSourceInterfaceVariable() {
        return this.updateSourceInterfaceVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceRoutingBgpFeatureIpv6Neighbor defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String address;
        private List<GetServiceRoutingBgpFeatureIpv6NeighborAddressFamily> addressFamilies;
        private String addressVariable;
        private Integer allowasInNumber;
        private String allowasInNumberVariable;
        private Boolean asOverride;
        private String asOverrideVariable;
        private String description;
        private String descriptionVariable;
        private Integer ebgpMultihop;
        private String ebgpMultihopVariable;
        private Integer holdTime;
        private String holdTimeVariable;
        private Integer keepaliveTime;
        private String keepaliveTimeVariable;
        private Integer localAs;
        private String localAsVariable;
        private Boolean nextHopSelf;
        private String nextHopSelfVariable;
        private String password;
        private String passwordVariable;
        private Integer remoteAs;
        private String remoteAsVariable;
        private Boolean sendCommunity;
        private String sendCommunityVariable;
        private Boolean sendExtendedCommunity;
        private String sendExtendedCommunityVariable;
        private Boolean shutdown;
        private String shutdownVariable;
        private String updateSourceInterface;
        private String updateSourceInterfaceVariable;
        public Builder() {}
        public Builder(GetServiceRoutingBgpFeatureIpv6Neighbor defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.addressFamilies = defaults.addressFamilies;
    	      this.addressVariable = defaults.addressVariable;
    	      this.allowasInNumber = defaults.allowasInNumber;
    	      this.allowasInNumberVariable = defaults.allowasInNumberVariable;
    	      this.asOverride = defaults.asOverride;
    	      this.asOverrideVariable = defaults.asOverrideVariable;
    	      this.description = defaults.description;
    	      this.descriptionVariable = defaults.descriptionVariable;
    	      this.ebgpMultihop = defaults.ebgpMultihop;
    	      this.ebgpMultihopVariable = defaults.ebgpMultihopVariable;
    	      this.holdTime = defaults.holdTime;
    	      this.holdTimeVariable = defaults.holdTimeVariable;
    	      this.keepaliveTime = defaults.keepaliveTime;
    	      this.keepaliveTimeVariable = defaults.keepaliveTimeVariable;
    	      this.localAs = defaults.localAs;
    	      this.localAsVariable = defaults.localAsVariable;
    	      this.nextHopSelf = defaults.nextHopSelf;
    	      this.nextHopSelfVariable = defaults.nextHopSelfVariable;
    	      this.password = defaults.password;
    	      this.passwordVariable = defaults.passwordVariable;
    	      this.remoteAs = defaults.remoteAs;
    	      this.remoteAsVariable = defaults.remoteAsVariable;
    	      this.sendCommunity = defaults.sendCommunity;
    	      this.sendCommunityVariable = defaults.sendCommunityVariable;
    	      this.sendExtendedCommunity = defaults.sendExtendedCommunity;
    	      this.sendExtendedCommunityVariable = defaults.sendExtendedCommunityVariable;
    	      this.shutdown = defaults.shutdown;
    	      this.shutdownVariable = defaults.shutdownVariable;
    	      this.updateSourceInterface = defaults.updateSourceInterface;
    	      this.updateSourceInterfaceVariable = defaults.updateSourceInterfaceVariable;
        }

        @CustomType.Setter
        public Builder address(String address) {
            if (address == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "address");
            }
            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder addressFamilies(List<GetServiceRoutingBgpFeatureIpv6NeighborAddressFamily> addressFamilies) {
            if (addressFamilies == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "addressFamilies");
            }
            this.addressFamilies = addressFamilies;
            return this;
        }
        public Builder addressFamilies(GetServiceRoutingBgpFeatureIpv6NeighborAddressFamily... addressFamilies) {
            return addressFamilies(List.of(addressFamilies));
        }
        @CustomType.Setter
        public Builder addressVariable(String addressVariable) {
            if (addressVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "addressVariable");
            }
            this.addressVariable = addressVariable;
            return this;
        }
        @CustomType.Setter
        public Builder allowasInNumber(Integer allowasInNumber) {
            if (allowasInNumber == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "allowasInNumber");
            }
            this.allowasInNumber = allowasInNumber;
            return this;
        }
        @CustomType.Setter
        public Builder allowasInNumberVariable(String allowasInNumberVariable) {
            if (allowasInNumberVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "allowasInNumberVariable");
            }
            this.allowasInNumberVariable = allowasInNumberVariable;
            return this;
        }
        @CustomType.Setter
        public Builder asOverride(Boolean asOverride) {
            if (asOverride == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "asOverride");
            }
            this.asOverride = asOverride;
            return this;
        }
        @CustomType.Setter
        public Builder asOverrideVariable(String asOverrideVariable) {
            if (asOverrideVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "asOverrideVariable");
            }
            this.asOverrideVariable = asOverrideVariable;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder descriptionVariable(String descriptionVariable) {
            if (descriptionVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "descriptionVariable");
            }
            this.descriptionVariable = descriptionVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ebgpMultihop(Integer ebgpMultihop) {
            if (ebgpMultihop == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "ebgpMultihop");
            }
            this.ebgpMultihop = ebgpMultihop;
            return this;
        }
        @CustomType.Setter
        public Builder ebgpMultihopVariable(String ebgpMultihopVariable) {
            if (ebgpMultihopVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "ebgpMultihopVariable");
            }
            this.ebgpMultihopVariable = ebgpMultihopVariable;
            return this;
        }
        @CustomType.Setter
        public Builder holdTime(Integer holdTime) {
            if (holdTime == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "holdTime");
            }
            this.holdTime = holdTime;
            return this;
        }
        @CustomType.Setter
        public Builder holdTimeVariable(String holdTimeVariable) {
            if (holdTimeVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "holdTimeVariable");
            }
            this.holdTimeVariable = holdTimeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder keepaliveTime(Integer keepaliveTime) {
            if (keepaliveTime == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "keepaliveTime");
            }
            this.keepaliveTime = keepaliveTime;
            return this;
        }
        @CustomType.Setter
        public Builder keepaliveTimeVariable(String keepaliveTimeVariable) {
            if (keepaliveTimeVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "keepaliveTimeVariable");
            }
            this.keepaliveTimeVariable = keepaliveTimeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder localAs(Integer localAs) {
            if (localAs == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "localAs");
            }
            this.localAs = localAs;
            return this;
        }
        @CustomType.Setter
        public Builder localAsVariable(String localAsVariable) {
            if (localAsVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "localAsVariable");
            }
            this.localAsVariable = localAsVariable;
            return this;
        }
        @CustomType.Setter
        public Builder nextHopSelf(Boolean nextHopSelf) {
            if (nextHopSelf == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "nextHopSelf");
            }
            this.nextHopSelf = nextHopSelf;
            return this;
        }
        @CustomType.Setter
        public Builder nextHopSelfVariable(String nextHopSelfVariable) {
            if (nextHopSelfVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "nextHopSelfVariable");
            }
            this.nextHopSelfVariable = nextHopSelfVariable;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder passwordVariable(String passwordVariable) {
            if (passwordVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "passwordVariable");
            }
            this.passwordVariable = passwordVariable;
            return this;
        }
        @CustomType.Setter
        public Builder remoteAs(Integer remoteAs) {
            if (remoteAs == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "remoteAs");
            }
            this.remoteAs = remoteAs;
            return this;
        }
        @CustomType.Setter
        public Builder remoteAsVariable(String remoteAsVariable) {
            if (remoteAsVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "remoteAsVariable");
            }
            this.remoteAsVariable = remoteAsVariable;
            return this;
        }
        @CustomType.Setter
        public Builder sendCommunity(Boolean sendCommunity) {
            if (sendCommunity == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "sendCommunity");
            }
            this.sendCommunity = sendCommunity;
            return this;
        }
        @CustomType.Setter
        public Builder sendCommunityVariable(String sendCommunityVariable) {
            if (sendCommunityVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "sendCommunityVariable");
            }
            this.sendCommunityVariable = sendCommunityVariable;
            return this;
        }
        @CustomType.Setter
        public Builder sendExtendedCommunity(Boolean sendExtendedCommunity) {
            if (sendExtendedCommunity == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "sendExtendedCommunity");
            }
            this.sendExtendedCommunity = sendExtendedCommunity;
            return this;
        }
        @CustomType.Setter
        public Builder sendExtendedCommunityVariable(String sendExtendedCommunityVariable) {
            if (sendExtendedCommunityVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "sendExtendedCommunityVariable");
            }
            this.sendExtendedCommunityVariable = sendExtendedCommunityVariable;
            return this;
        }
        @CustomType.Setter
        public Builder shutdown(Boolean shutdown) {
            if (shutdown == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "shutdown");
            }
            this.shutdown = shutdown;
            return this;
        }
        @CustomType.Setter
        public Builder shutdownVariable(String shutdownVariable) {
            if (shutdownVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "shutdownVariable");
            }
            this.shutdownVariable = shutdownVariable;
            return this;
        }
        @CustomType.Setter
        public Builder updateSourceInterface(String updateSourceInterface) {
            if (updateSourceInterface == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "updateSourceInterface");
            }
            this.updateSourceInterface = updateSourceInterface;
            return this;
        }
        @CustomType.Setter
        public Builder updateSourceInterfaceVariable(String updateSourceInterfaceVariable) {
            if (updateSourceInterfaceVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv6Neighbor", "updateSourceInterfaceVariable");
            }
            this.updateSourceInterfaceVariable = updateSourceInterfaceVariable;
            return this;
        }
        public GetServiceRoutingBgpFeatureIpv6Neighbor build() {
            final var _resultValue = new GetServiceRoutingBgpFeatureIpv6Neighbor();
            _resultValue.address = address;
            _resultValue.addressFamilies = addressFamilies;
            _resultValue.addressVariable = addressVariable;
            _resultValue.allowasInNumber = allowasInNumber;
            _resultValue.allowasInNumberVariable = allowasInNumberVariable;
            _resultValue.asOverride = asOverride;
            _resultValue.asOverrideVariable = asOverrideVariable;
            _resultValue.description = description;
            _resultValue.descriptionVariable = descriptionVariable;
            _resultValue.ebgpMultihop = ebgpMultihop;
            _resultValue.ebgpMultihopVariable = ebgpMultihopVariable;
            _resultValue.holdTime = holdTime;
            _resultValue.holdTimeVariable = holdTimeVariable;
            _resultValue.keepaliveTime = keepaliveTime;
            _resultValue.keepaliveTimeVariable = keepaliveTimeVariable;
            _resultValue.localAs = localAs;
            _resultValue.localAsVariable = localAsVariable;
            _resultValue.nextHopSelf = nextHopSelf;
            _resultValue.nextHopSelfVariable = nextHopSelfVariable;
            _resultValue.password = password;
            _resultValue.passwordVariable = passwordVariable;
            _resultValue.remoteAs = remoteAs;
            _resultValue.remoteAsVariable = remoteAsVariable;
            _resultValue.sendCommunity = sendCommunity;
            _resultValue.sendCommunityVariable = sendCommunityVariable;
            _resultValue.sendExtendedCommunity = sendExtendedCommunity;
            _resultValue.sendExtendedCommunityVariable = sendExtendedCommunityVariable;
            _resultValue.shutdown = shutdown;
            _resultValue.shutdownVariable = shutdownVariable;
            _resultValue.updateSourceInterface = updateSourceInterface;
            _resultValue.updateSourceInterfaceVariable = updateSourceInterfaceVariable;
            return _resultValue;
        }
    }
}
