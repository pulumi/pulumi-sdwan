// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CflowdPolicyDefinitionCollectorArgs extends com.pulumi.resources.ResourceArgs {

    public static final CflowdPolicyDefinitionCollectorArgs Empty = new CflowdPolicyDefinitionCollectorArgs();

    /**
     * Export spreading
     *   - Choices: `enable`, `disable`
     * 
     */
    @Import(name="exportSpreading")
    private @Nullable Output<String> exportSpreading;

    /**
     * @return Export spreading
     *   - Choices: `enable`, `disable`
     * 
     */
    public Optional<Output<String>> exportSpreading() {
        return Optional.ofNullable(this.exportSpreading);
    }

    /**
     * IP address
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    /**
     * @return IP address
     * 
     */
    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * Port
     *   - Range: `1024`-`65535`
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return Port
     *   - Range: `1024`-`65535`
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * Source interface
     * 
     */
    @Import(name="sourceInterface")
    private @Nullable Output<String> sourceInterface;

    /**
     * @return Source interface
     * 
     */
    public Optional<Output<String>> sourceInterface() {
        return Optional.ofNullable(this.sourceInterface);
    }

    /**
     * Transport protocol
     *   - Choices: `transport_tcp`, `transport_udp`
     * 
     */
    @Import(name="transport")
    private @Nullable Output<String> transport;

    /**
     * @return Transport protocol
     *   - Choices: `transport_tcp`, `transport_udp`
     * 
     */
    public Optional<Output<String>> transport() {
        return Optional.ofNullable(this.transport);
    }

    /**
     * VPN ID
     *   - Range: `1`-`65535`
     * 
     */
    @Import(name="vpnId")
    private @Nullable Output<Integer> vpnId;

    /**
     * @return VPN ID
     *   - Range: `1`-`65535`
     * 
     */
    public Optional<Output<Integer>> vpnId() {
        return Optional.ofNullable(this.vpnId);
    }

    private CflowdPolicyDefinitionCollectorArgs() {}

    private CflowdPolicyDefinitionCollectorArgs(CflowdPolicyDefinitionCollectorArgs $) {
        this.exportSpreading = $.exportSpreading;
        this.ipAddress = $.ipAddress;
        this.port = $.port;
        this.sourceInterface = $.sourceInterface;
        this.transport = $.transport;
        this.vpnId = $.vpnId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CflowdPolicyDefinitionCollectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CflowdPolicyDefinitionCollectorArgs $;

        public Builder() {
            $ = new CflowdPolicyDefinitionCollectorArgs();
        }

        public Builder(CflowdPolicyDefinitionCollectorArgs defaults) {
            $ = new CflowdPolicyDefinitionCollectorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param exportSpreading Export spreading
         *   - Choices: `enable`, `disable`
         * 
         * @return builder
         * 
         */
        public Builder exportSpreading(@Nullable Output<String> exportSpreading) {
            $.exportSpreading = exportSpreading;
            return this;
        }

        /**
         * @param exportSpreading Export spreading
         *   - Choices: `enable`, `disable`
         * 
         * @return builder
         * 
         */
        public Builder exportSpreading(String exportSpreading) {
            return exportSpreading(Output.of(exportSpreading));
        }

        /**
         * @param ipAddress IP address
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress IP address
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param port Port
         *   - Range: `1024`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port Port
         *   - Range: `1024`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param sourceInterface Source interface
         * 
         * @return builder
         * 
         */
        public Builder sourceInterface(@Nullable Output<String> sourceInterface) {
            $.sourceInterface = sourceInterface;
            return this;
        }

        /**
         * @param sourceInterface Source interface
         * 
         * @return builder
         * 
         */
        public Builder sourceInterface(String sourceInterface) {
            return sourceInterface(Output.of(sourceInterface));
        }

        /**
         * @param transport Transport protocol
         *   - Choices: `transport_tcp`, `transport_udp`
         * 
         * @return builder
         * 
         */
        public Builder transport(@Nullable Output<String> transport) {
            $.transport = transport;
            return this;
        }

        /**
         * @param transport Transport protocol
         *   - Choices: `transport_tcp`, `transport_udp`
         * 
         * @return builder
         * 
         */
        public Builder transport(String transport) {
            return transport(Output.of(transport));
        }

        /**
         * @param vpnId VPN ID
         *   - Range: `1`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder vpnId(@Nullable Output<Integer> vpnId) {
            $.vpnId = vpnId;
            return this;
        }

        /**
         * @param vpnId VPN ID
         *   - Range: `1`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder vpnId(Integer vpnId) {
            return vpnId(Output.of(vpnId));
        }

        public CflowdPolicyDefinitionCollectorArgs build() {
            return $;
        }
    }

}
