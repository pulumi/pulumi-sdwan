// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCiscoVpnFeatureTemplateDnsHost {
    /**
     * @return Hostname
     * 
     */
    private String hostname;
    /**
     * @return Variable name
     * 
     */
    private String hostnameVariable;
    /**
     * @return Variable name
     * 
     */
    private String ipVariable;
    /**
     * @return List of IP
     * 
     */
    private List<String> ips;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private Boolean optional;

    private GetCiscoVpnFeatureTemplateDnsHost() {}
    /**
     * @return Hostname
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return Variable name
     * 
     */
    public String hostnameVariable() {
        return this.hostnameVariable;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipVariable() {
        return this.ipVariable;
    }
    /**
     * @return List of IP
     * 
     */
    public List<String> ips() {
        return this.ips;
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Boolean optional() {
        return this.optional;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCiscoVpnFeatureTemplateDnsHost defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String hostname;
        private String hostnameVariable;
        private String ipVariable;
        private List<String> ips;
        private Boolean optional;
        public Builder() {}
        public Builder(GetCiscoVpnFeatureTemplateDnsHost defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostname = defaults.hostname;
    	      this.hostnameVariable = defaults.hostnameVariable;
    	      this.ipVariable = defaults.ipVariable;
    	      this.ips = defaults.ips;
    	      this.optional = defaults.optional;
        }

        @CustomType.Setter
        public Builder hostname(String hostname) {
            if (hostname == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateDnsHost", "hostname");
            }
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder hostnameVariable(String hostnameVariable) {
            if (hostnameVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateDnsHost", "hostnameVariable");
            }
            this.hostnameVariable = hostnameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipVariable(String ipVariable) {
            if (ipVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateDnsHost", "ipVariable");
            }
            this.ipVariable = ipVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ips(List<String> ips) {
            if (ips == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateDnsHost", "ips");
            }
            this.ips = ips;
            return this;
        }
        public Builder ips(String... ips) {
            return ips(List.of(ips));
        }
        @CustomType.Setter
        public Builder optional(Boolean optional) {
            if (optional == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateDnsHost", "optional");
            }
            this.optional = optional;
            return this;
        }
        public GetCiscoVpnFeatureTemplateDnsHost build() {
            final var _resultValue = new GetCiscoVpnFeatureTemplateDnsHost();
            _resultValue.hostname = hostname;
            _resultValue.hostnameVariable = hostnameVariable;
            _resultValue.ipVariable = ipVariable;
            _resultValue.ips = ips;
            _resultValue.optional = optional;
            return _resultValue;
        }
    }
}
