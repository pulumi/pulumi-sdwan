// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.ServiceRoutingBgpFeatureArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.ServiceRoutingBgpFeatureState;
import com.pulumi.sdwan.outputs.ServiceRoutingBgpFeatureIpv4AggregateAddress;
import com.pulumi.sdwan.outputs.ServiceRoutingBgpFeatureIpv4Neighbor;
import com.pulumi.sdwan.outputs.ServiceRoutingBgpFeatureIpv4Network;
import com.pulumi.sdwan.outputs.ServiceRoutingBgpFeatureIpv4Redistribute;
import com.pulumi.sdwan.outputs.ServiceRoutingBgpFeatureIpv6AggregateAddress;
import com.pulumi.sdwan.outputs.ServiceRoutingBgpFeatureIpv6Neighbor;
import com.pulumi.sdwan.outputs.ServiceRoutingBgpFeatureIpv6Network;
import com.pulumi.sdwan.outputs.ServiceRoutingBgpFeatureIpv6Redistribute;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Service Routing BGP Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * Expected import identifier with the format: &#34;service_routing_bgp_feature_id,feature_profile_id&#34;
 * 
 * ```sh
 * $ pulumi import sdwan:index/serviceRoutingBgpFeature:ServiceRoutingBgpFeature example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/serviceRoutingBgpFeature:ServiceRoutingBgpFeature")
public class ServiceRoutingBgpFeature extends com.pulumi.resources.CustomResource {
    /**
     * Compare MEDs from all ASs when selecting active BGP paths
     *   - Default value: `false`
     * 
     */
    @Export(name="alwaysCompareMed", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> alwaysCompareMed;

    /**
     * @return Compare MEDs from all ASs when selecting active BGP paths
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> alwaysCompareMed() {
        return Codegen.optional(this.alwaysCompareMed);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="alwaysCompareMedVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> alwaysCompareMedVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> alwaysCompareMedVariable() {
        return Codegen.optional(this.alwaysCompareMedVariable);
    }
    /**
     * Set autonomous system number &lt;1..4294967295&gt; or &lt;XX.YY&gt;
     * 
     */
    @Export(name="asNumber", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> asNumber;

    /**
     * @return Set autonomous system number &lt;1..4294967295&gt; or &lt;XX.YY&gt;
     * 
     */
    public Output<Optional<Integer>> asNumber() {
        return Codegen.optional(this.asNumber);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="asNumberVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> asNumberVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> asNumberVariable() {
        return Codegen.optional(this.asNumberVariable);
    }
    /**
     * Compare router IDs when selecting active BGP paths
     *   - Default value: `false`
     * 
     */
    @Export(name="compareRouterId", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> compareRouterId;

    /**
     * @return Compare router IDs when selecting active BGP paths
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> compareRouterId() {
        return Codegen.optional(this.compareRouterId);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="compareRouterIdVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> compareRouterIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> compareRouterIdVariable() {
        return Codegen.optional(this.compareRouterIdVariable);
    }
    /**
     * The description of the Feature
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Compare MEDs from all routes from same AS when selecting active BGP paths
     *   - Default value: `false`
     * 
     */
    @Export(name="deterministicMed", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deterministicMed;

    /**
     * @return Compare MEDs from all routes from same AS when selecting active BGP paths
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> deterministicMed() {
        return Codegen.optional(this.deterministicMed);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="deterministicMedVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deterministicMedVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> deterministicMedVariable() {
        return Codegen.optional(this.deterministicMedVariable);
    }
    /**
     * Set administrative distance for external BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `20`
     * 
     */
    @Export(name="externalRoutesDistance", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> externalRoutesDistance;

    /**
     * @return Set administrative distance for external BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `20`
     * 
     */
    public Output<Optional<Integer>> externalRoutesDistance() {
        return Codegen.optional(this.externalRoutesDistance);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="externalRoutesDistanceVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> externalRoutesDistanceVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> externalRoutesDistanceVariable() {
        return Codegen.optional(this.externalRoutesDistanceVariable);
    }
    /**
     * Feature Profile ID
     * 
     */
    @Export(name="featureProfileId", refs={String.class}, tree="[0]")
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * Interval (seconds) not receiving a keepalive message declares a BGP peer down
     *   - Range: `0`-`65535`
     *   - Default value: `180`
     * 
     */
    @Export(name="holdTime", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> holdTime;

    /**
     * @return Interval (seconds) not receiving a keepalive message declares a BGP peer down
     *   - Range: `0`-`65535`
     *   - Default value: `180`
     * 
     */
    public Output<Optional<Integer>> holdTime() {
        return Codegen.optional(this.holdTime);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="holdTimeVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> holdTimeVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> holdTimeVariable() {
        return Codegen.optional(this.holdTimeVariable);
    }
    /**
     * Set administrative distance for internal BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `200`
     * 
     */
    @Export(name="internalRoutesDistance", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> internalRoutesDistance;

    /**
     * @return Set administrative distance for internal BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `200`
     * 
     */
    public Output<Optional<Integer>> internalRoutesDistance() {
        return Codegen.optional(this.internalRoutesDistance);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="internalRoutesDistanceVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> internalRoutesDistanceVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> internalRoutesDistanceVariable() {
        return Codegen.optional(this.internalRoutesDistanceVariable);
    }
    /**
     * Aggregate prefixes in specific range
     * 
     */
    @Export(name="ipv4AggregateAddresses", refs={List.class,ServiceRoutingBgpFeatureIpv4AggregateAddress.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceRoutingBgpFeatureIpv4AggregateAddress>> ipv4AggregateAddresses;

    /**
     * @return Aggregate prefixes in specific range
     * 
     */
    public Output<Optional<List<ServiceRoutingBgpFeatureIpv4AggregateAddress>>> ipv4AggregateAddresses() {
        return Codegen.optional(this.ipv4AggregateAddresses);
    }
    /**
     * Set maximum number of parallel IBGP paths for multipath load sharing
     *   - Range: `1`-`32`
     * 
     */
    @Export(name="ipv4EibgpMaximumPaths", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv4EibgpMaximumPaths;

    /**
     * @return Set maximum number of parallel IBGP paths for multipath load sharing
     *   - Range: `1`-`32`
     * 
     */
    public Output<Optional<Integer>> ipv4EibgpMaximumPaths() {
        return Codegen.optional(this.ipv4EibgpMaximumPaths);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4EibgpMaximumPathsVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4EibgpMaximumPathsVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4EibgpMaximumPathsVariable() {
        return Codegen.optional(this.ipv4EibgpMaximumPathsVariable);
    }
    /**
     * Set BGP IPv4 neighbors
     * 
     */
    @Export(name="ipv4Neighbors", refs={List.class,ServiceRoutingBgpFeatureIpv4Neighbor.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceRoutingBgpFeatureIpv4Neighbor>> ipv4Neighbors;

    /**
     * @return Set BGP IPv4 neighbors
     * 
     */
    public Output<Optional<List<ServiceRoutingBgpFeatureIpv4Neighbor>>> ipv4Neighbors() {
        return Codegen.optional(this.ipv4Neighbors);
    }
    /**
     * Configure the networks for BGP to advertise
     * 
     */
    @Export(name="ipv4Networks", refs={List.class,ServiceRoutingBgpFeatureIpv4Network.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceRoutingBgpFeatureIpv4Network>> ipv4Networks;

    /**
     * @return Configure the networks for BGP to advertise
     * 
     */
    public Output<Optional<List<ServiceRoutingBgpFeatureIpv4Network>>> ipv4Networks() {
        return Codegen.optional(this.ipv4Networks);
    }
    /**
     * BGP Default Information Originate
     *   - Default value: `false`
     * 
     */
    @Export(name="ipv4Originate", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipv4Originate;

    /**
     * @return BGP Default Information Originate
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> ipv4Originate() {
        return Codegen.optional(this.ipv4Originate);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4OriginateVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4OriginateVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4OriginateVariable() {
        return Codegen.optional(this.ipv4OriginateVariable);
    }
    /**
     * Redistribute routes into BGP
     * 
     */
    @Export(name="ipv4Redistributes", refs={List.class,ServiceRoutingBgpFeatureIpv4Redistribute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceRoutingBgpFeatureIpv4Redistribute>> ipv4Redistributes;

    /**
     * @return Redistribute routes into BGP
     * 
     */
    public Output<Optional<List<ServiceRoutingBgpFeatureIpv4Redistribute>>> ipv4Redistributes() {
        return Codegen.optional(this.ipv4Redistributes);
    }
    /**
     * Table map filtered or not
     *   - Default value: `false`
     * 
     */
    @Export(name="ipv4TableMapFilter", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipv4TableMapFilter;

    /**
     * @return Table map filtered or not
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> ipv4TableMapFilter() {
        return Codegen.optional(this.ipv4TableMapFilter);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4TableMapFilterVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4TableMapFilterVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4TableMapFilterVariable() {
        return Codegen.optional(this.ipv4TableMapFilterVariable);
    }
    @Export(name="ipv4TableMapRoutePolicyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4TableMapRoutePolicyId;

    public Output<Optional<String>> ipv4TableMapRoutePolicyId() {
        return Codegen.optional(this.ipv4TableMapRoutePolicyId);
    }
    /**
     * IPv6 Aggregate prefixes in specific range
     * 
     */
    @Export(name="ipv6AggregateAddresses", refs={List.class,ServiceRoutingBgpFeatureIpv6AggregateAddress.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceRoutingBgpFeatureIpv6AggregateAddress>> ipv6AggregateAddresses;

    /**
     * @return IPv6 Aggregate prefixes in specific range
     * 
     */
    public Output<Optional<List<ServiceRoutingBgpFeatureIpv6AggregateAddress>>> ipv6AggregateAddresses() {
        return Codegen.optional(this.ipv6AggregateAddresses);
    }
    /**
     * Set maximum number of parallel IBGP paths for multipath load sharing
     *   - Range: `1`-`32`
     * 
     */
    @Export(name="ipv6EibgpMaximumPaths", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv6EibgpMaximumPaths;

    /**
     * @return Set maximum number of parallel IBGP paths for multipath load sharing
     *   - Range: `1`-`32`
     * 
     */
    public Output<Optional<Integer>> ipv6EibgpMaximumPaths() {
        return Codegen.optional(this.ipv6EibgpMaximumPaths);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6EibgpMaximumPathsVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6EibgpMaximumPathsVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6EibgpMaximumPathsVariable() {
        return Codegen.optional(this.ipv6EibgpMaximumPathsVariable);
    }
    /**
     * Set BGP IPv6 neighbors
     * 
     */
    @Export(name="ipv6Neighbors", refs={List.class,ServiceRoutingBgpFeatureIpv6Neighbor.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceRoutingBgpFeatureIpv6Neighbor>> ipv6Neighbors;

    /**
     * @return Set BGP IPv6 neighbors
     * 
     */
    public Output<Optional<List<ServiceRoutingBgpFeatureIpv6Neighbor>>> ipv6Neighbors() {
        return Codegen.optional(this.ipv6Neighbors);
    }
    /**
     * Configure the networks for BGP to advertise
     * 
     */
    @Export(name="ipv6Networks", refs={List.class,ServiceRoutingBgpFeatureIpv6Network.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceRoutingBgpFeatureIpv6Network>> ipv6Networks;

    /**
     * @return Configure the networks for BGP to advertise
     * 
     */
    public Output<Optional<List<ServiceRoutingBgpFeatureIpv6Network>>> ipv6Networks() {
        return Codegen.optional(this.ipv6Networks);
    }
    /**
     * BGP Default Information Originate
     *   - Default value: `false`
     * 
     */
    @Export(name="ipv6Originate", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipv6Originate;

    /**
     * @return BGP Default Information Originate
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> ipv6Originate() {
        return Codegen.optional(this.ipv6Originate);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6OriginateVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6OriginateVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6OriginateVariable() {
        return Codegen.optional(this.ipv6OriginateVariable);
    }
    /**
     * Redistribute routes into BGP
     * 
     */
    @Export(name="ipv6Redistributes", refs={List.class,ServiceRoutingBgpFeatureIpv6Redistribute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceRoutingBgpFeatureIpv6Redistribute>> ipv6Redistributes;

    /**
     * @return Redistribute routes into BGP
     * 
     */
    public Output<Optional<List<ServiceRoutingBgpFeatureIpv6Redistribute>>> ipv6Redistributes() {
        return Codegen.optional(this.ipv6Redistributes);
    }
    /**
     * Table map filtered or not
     *   - Default value: `false`
     * 
     */
    @Export(name="ipv6TableMapFilter", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipv6TableMapFilter;

    /**
     * @return Table map filtered or not
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> ipv6TableMapFilter() {
        return Codegen.optional(this.ipv6TableMapFilter);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6TableMapFilterVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6TableMapFilterVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6TableMapFilterVariable() {
        return Codegen.optional(this.ipv6TableMapFilterVariable);
    }
    @Export(name="ipv6TableMapRoutePolicyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6TableMapRoutePolicyId;

    public Output<Optional<String>> ipv6TableMapRoutePolicyId() {
        return Codegen.optional(this.ipv6TableMapRoutePolicyId);
    }
    /**
     * Interval (seconds) of keepalive messages sent to its BGP peer
     *   - Range: `0`-`65535`
     *   - Default value: `60`
     * 
     */
    @Export(name="keepaliveTime", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> keepaliveTime;

    /**
     * @return Interval (seconds) of keepalive messages sent to its BGP peer
     *   - Range: `0`-`65535`
     *   - Default value: `60`
     * 
     */
    public Output<Optional<Integer>> keepaliveTime() {
        return Codegen.optional(this.keepaliveTime);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="keepaliveTimeVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keepaliveTimeVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> keepaliveTimeVariable() {
        return Codegen.optional(this.keepaliveTimeVariable);
    }
    /**
     * Set administrative distance for local BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `20`
     * 
     */
    @Export(name="localRoutesDistance", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> localRoutesDistance;

    /**
     * @return Set administrative distance for local BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `20`
     * 
     */
    public Output<Optional<Integer>> localRoutesDistance() {
        return Codegen.optional(this.localRoutesDistance);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="localRoutesDistanceVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> localRoutesDistanceVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> localRoutesDistanceVariable() {
        return Codegen.optional(this.localRoutesDistanceVariable);
    }
    /**
     * If path has no MED, consider it to be worst path when selecting active BGP paths
     *   - Default value: `false`
     * 
     */
    @Export(name="missingMedAsWorst", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> missingMedAsWorst;

    /**
     * @return If path has no MED, consider it to be worst path when selecting active BGP paths
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> missingMedAsWorst() {
        return Codegen.optional(this.missingMedAsWorst);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="missingMedAsWorstVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> missingMedAsWorstVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> missingMedAsWorstVariable() {
        return Codegen.optional(this.missingMedAsWorstVariable);
    }
    /**
     * Ignore AS for multipath selection
     *   - Default value: `false`
     * 
     */
    @Export(name="multipathRelax", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> multipathRelax;

    /**
     * @return Ignore AS for multipath selection
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> multipathRelax() {
        return Codegen.optional(this.multipathRelax);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="multipathRelaxVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> multipathRelaxVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> multipathRelaxVariable() {
        return Codegen.optional(this.multipathRelaxVariable);
    }
    /**
     * The name of the Feature
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Propagate AS Path
     *   - Default value: `false`
     * 
     */
    @Export(name="propagateAsPath", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> propagateAsPath;

    /**
     * @return Propagate AS Path
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> propagateAsPath() {
        return Codegen.optional(this.propagateAsPath);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="propagateAsPathVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> propagateAsPathVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> propagateAsPathVariable() {
        return Codegen.optional(this.propagateAsPathVariable);
    }
    /**
     * Propagate Community
     *   - Default value: `false`
     * 
     */
    @Export(name="propagateCommunity", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> propagateCommunity;

    /**
     * @return Propagate Community
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> propagateCommunity() {
        return Codegen.optional(this.propagateCommunity);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="propagateCommunityVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> propagateCommunityVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> propagateCommunityVariable() {
        return Codegen.optional(this.propagateCommunityVariable);
    }
    /**
     * Configure BGP router identifier
     * 
     */
    @Export(name="routerId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> routerId;

    /**
     * @return Configure BGP router identifier
     * 
     */
    public Output<Optional<String>> routerId() {
        return Codegen.optional(this.routerId);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="routerIdVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> routerIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> routerIdVariable() {
        return Codegen.optional(this.routerIdVariable);
    }
    /**
     * The version of the Feature
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the Feature
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServiceRoutingBgpFeature(java.lang.String name) {
        this(name, ServiceRoutingBgpFeatureArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServiceRoutingBgpFeature(java.lang.String name, ServiceRoutingBgpFeatureArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServiceRoutingBgpFeature(java.lang.String name, ServiceRoutingBgpFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/serviceRoutingBgpFeature:ServiceRoutingBgpFeature", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ServiceRoutingBgpFeature(java.lang.String name, Output<java.lang.String> id, @Nullable ServiceRoutingBgpFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/serviceRoutingBgpFeature:ServiceRoutingBgpFeature", name, state, makeResourceOptions(options, id), false);
    }

    private static ServiceRoutingBgpFeatureArgs makeArgs(ServiceRoutingBgpFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ServiceRoutingBgpFeatureArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServiceRoutingBgpFeature get(java.lang.String name, Output<java.lang.String> id, @Nullable ServiceRoutingBgpFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServiceRoutingBgpFeature(name, id, state, options);
    }
}
