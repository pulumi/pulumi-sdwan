// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationPriorityQosPolicyQosSchedulerArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationPriorityQosPolicyQosSchedulerArgs Empty = new ApplicationPriorityQosPolicyQosSchedulerArgs();

    /**
     * bandwidthPercent
     * 
     */
    @Import(name="bandwidth")
    private @Nullable Output<String> bandwidth;

    /**
     * @return bandwidthPercent
     * 
     */
    public Optional<Output<String>> bandwidth() {
        return Optional.ofNullable(this.bandwidth);
    }

    /**
     * drops
     * 
     */
    @Import(name="drops")
    private @Nullable Output<String> drops;

    /**
     * @return drops
     * 
     */
    public Optional<Output<String>> drops() {
        return Optional.ofNullable(this.drops);
    }

    @Import(name="forwardingClassId")
    private @Nullable Output<String> forwardingClassId;

    public Optional<Output<String>> forwardingClassId() {
        return Optional.ofNullable(this.forwardingClassId);
    }

    /**
     * queue
     * 
     */
    @Import(name="queue")
    private @Nullable Output<String> queue;

    /**
     * @return queue
     * 
     */
    public Optional<Output<String>> queue() {
        return Optional.ofNullable(this.queue);
    }

    /**
     * scheduling
     * 
     */
    @Import(name="schedulingType")
    private @Nullable Output<String> schedulingType;

    /**
     * @return scheduling
     * 
     */
    public Optional<Output<String>> schedulingType() {
        return Optional.ofNullable(this.schedulingType);
    }

    private ApplicationPriorityQosPolicyQosSchedulerArgs() {}

    private ApplicationPriorityQosPolicyQosSchedulerArgs(ApplicationPriorityQosPolicyQosSchedulerArgs $) {
        this.bandwidth = $.bandwidth;
        this.drops = $.drops;
        this.forwardingClassId = $.forwardingClassId;
        this.queue = $.queue;
        this.schedulingType = $.schedulingType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationPriorityQosPolicyQosSchedulerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationPriorityQosPolicyQosSchedulerArgs $;

        public Builder() {
            $ = new ApplicationPriorityQosPolicyQosSchedulerArgs();
        }

        public Builder(ApplicationPriorityQosPolicyQosSchedulerArgs defaults) {
            $ = new ApplicationPriorityQosPolicyQosSchedulerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bandwidth bandwidthPercent
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(@Nullable Output<String> bandwidth) {
            $.bandwidth = bandwidth;
            return this;
        }

        /**
         * @param bandwidth bandwidthPercent
         * 
         * @return builder
         * 
         */
        public Builder bandwidth(String bandwidth) {
            return bandwidth(Output.of(bandwidth));
        }

        /**
         * @param drops drops
         * 
         * @return builder
         * 
         */
        public Builder drops(@Nullable Output<String> drops) {
            $.drops = drops;
            return this;
        }

        /**
         * @param drops drops
         * 
         * @return builder
         * 
         */
        public Builder drops(String drops) {
            return drops(Output.of(drops));
        }

        public Builder forwardingClassId(@Nullable Output<String> forwardingClassId) {
            $.forwardingClassId = forwardingClassId;
            return this;
        }

        public Builder forwardingClassId(String forwardingClassId) {
            return forwardingClassId(Output.of(forwardingClassId));
        }

        /**
         * @param queue queue
         * 
         * @return builder
         * 
         */
        public Builder queue(@Nullable Output<String> queue) {
            $.queue = queue;
            return this;
        }

        /**
         * @param queue queue
         * 
         * @return builder
         * 
         */
        public Builder queue(String queue) {
            return queue(Output.of(queue));
        }

        /**
         * @param schedulingType scheduling
         * 
         * @return builder
         * 
         */
        public Builder schedulingType(@Nullable Output<String> schedulingType) {
            $.schedulingType = schedulingType;
            return this;
        }

        /**
         * @param schedulingType scheduling
         * 
         * @return builder
         * 
         */
        public Builder schedulingType(String schedulingType) {
            return schedulingType(Output.of(schedulingType));
        }

        public ApplicationPriorityQosPolicyQosSchedulerArgs build() {
            return $;
        }
    }

}
