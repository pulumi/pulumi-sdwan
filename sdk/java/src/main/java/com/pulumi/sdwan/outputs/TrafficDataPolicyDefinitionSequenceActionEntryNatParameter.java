// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TrafficDataPolicyDefinitionSequenceActionEntryNatParameter {
    /**
     * @return Fallback, Attribute conditional on `type` being equal to `fallback`
     * 
     */
    private @Nullable Boolean fallback;
    /**
     * @return Type of NAT parameter
     *   - Choices: `useVpn`, `fallback`
     * 
     */
    private String type;
    /**
     * @return DSCP, Attribute conditional on `type` being equal to `useVpn`
     * 
     */
    private @Nullable Integer vpnId;

    private TrafficDataPolicyDefinitionSequenceActionEntryNatParameter() {}
    /**
     * @return Fallback, Attribute conditional on `type` being equal to `fallback`
     * 
     */
    public Optional<Boolean> fallback() {
        return Optional.ofNullable(this.fallback);
    }
    /**
     * @return Type of NAT parameter
     *   - Choices: `useVpn`, `fallback`
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return DSCP, Attribute conditional on `type` being equal to `useVpn`
     * 
     */
    public Optional<Integer> vpnId() {
        return Optional.ofNullable(this.vpnId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TrafficDataPolicyDefinitionSequenceActionEntryNatParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean fallback;
        private String type;
        private @Nullable Integer vpnId;
        public Builder() {}
        public Builder(TrafficDataPolicyDefinitionSequenceActionEntryNatParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fallback = defaults.fallback;
    	      this.type = defaults.type;
    	      this.vpnId = defaults.vpnId;
        }

        @CustomType.Setter
        public Builder fallback(@Nullable Boolean fallback) {

            this.fallback = fallback;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("TrafficDataPolicyDefinitionSequenceActionEntryNatParameter", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vpnId(@Nullable Integer vpnId) {

            this.vpnId = vpnId;
            return this;
        }
        public TrafficDataPolicyDefinitionSequenceActionEntryNatParameter build() {
            final var _resultValue = new TrafficDataPolicyDefinitionSequenceActionEntryNatParameter();
            _resultValue.fallback = fallback;
            _resultValue.type = type;
            _resultValue.vpnId = vpnId;
            return _resultValue;
        }
    }
}
