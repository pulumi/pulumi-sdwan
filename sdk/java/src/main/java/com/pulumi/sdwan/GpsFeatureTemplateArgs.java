// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GpsFeatureTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final GpsFeatureTemplateArgs Empty = new GpsFeatureTemplateArgs();

    /**
     * The description of the feature template
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return The description of the feature template
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * Destination address
     * 
     */
    @Import(name="destinationAddress")
    private @Nullable Output<String> destinationAddress;

    /**
     * @return Destination address
     * 
     */
    public Optional<Output<String>> destinationAddress() {
        return Optional.ofNullable(this.destinationAddress);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="destinationAddressVariable")
    private @Nullable Output<String> destinationAddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> destinationAddressVariable() {
        return Optional.ofNullable(this.destinationAddressVariable);
    }

    /**
     * Destination port
     *   - Range: `1`-`65535`
     * 
     */
    @Import(name="destinationPort")
    private @Nullable Output<Integer> destinationPort;

    /**
     * @return Destination port
     *   - Range: `1`-`65535`
     * 
     */
    public Optional<Output<Integer>> destinationPort() {
        return Optional.ofNullable(this.destinationPort);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="destinationPortVariable")
    private @Nullable Output<String> destinationPortVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> destinationPortVariable() {
        return Optional.ofNullable(this.destinationPortVariable);
    }

    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    @Import(name="deviceTypes", required=true)
    private Output<List<String>> deviceTypes;

    /**
     * @return List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    public Output<List<String>> deviceTypes() {
        return this.deviceTypes;
    }

    /**
     * Enable/disable GPS
     *   - Default value: `false`
     * 
     */
    @Import(name="enable")
    private @Nullable Output<Boolean> enable;

    /**
     * @return Enable/disable GPS
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> enable() {
        return Optional.ofNullable(this.enable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="enableVariable")
    private @Nullable Output<String> enableVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> enableVariable() {
        return Optional.ofNullable(this.enableVariable);
    }

    /**
     * Select GPS mode
     *   - Choices: `ms-based`, `standalone`
     *   - Default value: `ms-based`
     * 
     */
    @Import(name="gpsMode")
    private @Nullable Output<String> gpsMode;

    /**
     * @return Select GPS mode
     *   - Choices: `ms-based`, `standalone`
     *   - Default value: `ms-based`
     * 
     */
    public Optional<Output<String>> gpsMode() {
        return Optional.ofNullable(this.gpsMode);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="gpsModeVariable")
    private @Nullable Output<String> gpsModeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> gpsModeVariable() {
        return Optional.ofNullable(this.gpsModeVariable);
    }

    /**
     * The name of the feature template
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the feature template
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Enable/disable NMEA data
     *   - Default value: `false`
     * 
     */
    @Import(name="nmea")
    private @Nullable Output<Boolean> nmea;

    /**
     * @return Enable/disable NMEA data
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> nmea() {
        return Optional.ofNullable(this.nmea);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="nmeaVariable")
    private @Nullable Output<String> nmeaVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> nmeaVariable() {
        return Optional.ofNullable(this.nmeaVariable);
    }

    /**
     * Source address
     * 
     */
    @Import(name="sourceAddress")
    private @Nullable Output<String> sourceAddress;

    /**
     * @return Source address
     * 
     */
    public Optional<Output<String>> sourceAddress() {
        return Optional.ofNullable(this.sourceAddress);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sourceAddressVariable")
    private @Nullable Output<String> sourceAddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sourceAddressVariable() {
        return Optional.ofNullable(this.sourceAddressVariable);
    }

    private GpsFeatureTemplateArgs() {}

    private GpsFeatureTemplateArgs(GpsFeatureTemplateArgs $) {
        this.description = $.description;
        this.destinationAddress = $.destinationAddress;
        this.destinationAddressVariable = $.destinationAddressVariable;
        this.destinationPort = $.destinationPort;
        this.destinationPortVariable = $.destinationPortVariable;
        this.deviceTypes = $.deviceTypes;
        this.enable = $.enable;
        this.enableVariable = $.enableVariable;
        this.gpsMode = $.gpsMode;
        this.gpsModeVariable = $.gpsModeVariable;
        this.name = $.name;
        this.nmea = $.nmea;
        this.nmeaVariable = $.nmeaVariable;
        this.sourceAddress = $.sourceAddress;
        this.sourceAddressVariable = $.sourceAddressVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GpsFeatureTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GpsFeatureTemplateArgs $;

        public Builder() {
            $ = new GpsFeatureTemplateArgs();
        }

        public Builder(GpsFeatureTemplateArgs defaults) {
            $ = new GpsFeatureTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the feature template
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the feature template
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param destinationAddress Destination address
         * 
         * @return builder
         * 
         */
        public Builder destinationAddress(@Nullable Output<String> destinationAddress) {
            $.destinationAddress = destinationAddress;
            return this;
        }

        /**
         * @param destinationAddress Destination address
         * 
         * @return builder
         * 
         */
        public Builder destinationAddress(String destinationAddress) {
            return destinationAddress(Output.of(destinationAddress));
        }

        /**
         * @param destinationAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder destinationAddressVariable(@Nullable Output<String> destinationAddressVariable) {
            $.destinationAddressVariable = destinationAddressVariable;
            return this;
        }

        /**
         * @param destinationAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder destinationAddressVariable(String destinationAddressVariable) {
            return destinationAddressVariable(Output.of(destinationAddressVariable));
        }

        /**
         * @param destinationPort Destination port
         *   - Range: `1`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder destinationPort(@Nullable Output<Integer> destinationPort) {
            $.destinationPort = destinationPort;
            return this;
        }

        /**
         * @param destinationPort Destination port
         *   - Range: `1`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder destinationPort(Integer destinationPort) {
            return destinationPort(Output.of(destinationPort));
        }

        /**
         * @param destinationPortVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder destinationPortVariable(@Nullable Output<String> destinationPortVariable) {
            $.destinationPortVariable = destinationPortVariable;
            return this;
        }

        /**
         * @param destinationPortVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder destinationPortVariable(String destinationPortVariable) {
            return destinationPortVariable(Output.of(destinationPortVariable));
        }

        /**
         * @param deviceTypes List of supported device types
         *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(Output<List<String>> deviceTypes) {
            $.deviceTypes = deviceTypes;
            return this;
        }

        /**
         * @param deviceTypes List of supported device types
         *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(List<String> deviceTypes) {
            return deviceTypes(Output.of(deviceTypes));
        }

        /**
         * @param deviceTypes List of supported device types
         *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(String... deviceTypes) {
            return deviceTypes(List.of(deviceTypes));
        }

        /**
         * @param enable Enable/disable GPS
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder enable(@Nullable Output<Boolean> enable) {
            $.enable = enable;
            return this;
        }

        /**
         * @param enable Enable/disable GPS
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder enable(Boolean enable) {
            return enable(Output.of(enable));
        }

        /**
         * @param enableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enableVariable(@Nullable Output<String> enableVariable) {
            $.enableVariable = enableVariable;
            return this;
        }

        /**
         * @param enableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enableVariable(String enableVariable) {
            return enableVariable(Output.of(enableVariable));
        }

        /**
         * @param gpsMode Select GPS mode
         *   - Choices: `ms-based`, `standalone`
         *   - Default value: `ms-based`
         * 
         * @return builder
         * 
         */
        public Builder gpsMode(@Nullable Output<String> gpsMode) {
            $.gpsMode = gpsMode;
            return this;
        }

        /**
         * @param gpsMode Select GPS mode
         *   - Choices: `ms-based`, `standalone`
         *   - Default value: `ms-based`
         * 
         * @return builder
         * 
         */
        public Builder gpsMode(String gpsMode) {
            return gpsMode(Output.of(gpsMode));
        }

        /**
         * @param gpsModeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder gpsModeVariable(@Nullable Output<String> gpsModeVariable) {
            $.gpsModeVariable = gpsModeVariable;
            return this;
        }

        /**
         * @param gpsModeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder gpsModeVariable(String gpsModeVariable) {
            return gpsModeVariable(Output.of(gpsModeVariable));
        }

        /**
         * @param name The name of the feature template
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the feature template
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nmea Enable/disable NMEA data
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder nmea(@Nullable Output<Boolean> nmea) {
            $.nmea = nmea;
            return this;
        }

        /**
         * @param nmea Enable/disable NMEA data
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder nmea(Boolean nmea) {
            return nmea(Output.of(nmea));
        }

        /**
         * @param nmeaVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nmeaVariable(@Nullable Output<String> nmeaVariable) {
            $.nmeaVariable = nmeaVariable;
            return this;
        }

        /**
         * @param nmeaVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nmeaVariable(String nmeaVariable) {
            return nmeaVariable(Output.of(nmeaVariable));
        }

        /**
         * @param sourceAddress Source address
         * 
         * @return builder
         * 
         */
        public Builder sourceAddress(@Nullable Output<String> sourceAddress) {
            $.sourceAddress = sourceAddress;
            return this;
        }

        /**
         * @param sourceAddress Source address
         * 
         * @return builder
         * 
         */
        public Builder sourceAddress(String sourceAddress) {
            return sourceAddress(Output.of(sourceAddress));
        }

        /**
         * @param sourceAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceAddressVariable(@Nullable Output<String> sourceAddressVariable) {
            $.sourceAddressVariable = sourceAddressVariable;
            return this;
        }

        /**
         * @param sourceAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceAddressVariable(String sourceAddressVariable) {
            return sourceAddressVariable(Output.of(sourceAddressVariable));
        }

        public GpsFeatureTemplateArgs build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("GpsFeatureTemplateArgs", "description");
            }
            if ($.deviceTypes == null) {
                throw new MissingRequiredPropertyException("GpsFeatureTemplateArgs", "deviceTypes");
            }
            return $;
        }
    }

}
