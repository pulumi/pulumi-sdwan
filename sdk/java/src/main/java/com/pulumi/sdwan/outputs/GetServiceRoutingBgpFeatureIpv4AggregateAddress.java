// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServiceRoutingBgpFeatureIpv4AggregateAddress {
    /**
     * @return Set AS set path information
     * 
     */
    private Boolean asSetPath;
    /**
     * @return Variable name
     * 
     */
    private String asSetPathVariable;
    private String networkAddress;
    /**
     * @return Variable name
     * 
     */
    private String networkAddressVariable;
    private String subnetMask;
    /**
     * @return Variable name
     * 
     */
    private String subnetMaskVariable;
    /**
     * @return Filter out more specific routes from updates
     * 
     */
    private Boolean summaryOnly;
    /**
     * @return Variable name
     * 
     */
    private String summaryOnlyVariable;

    private GetServiceRoutingBgpFeatureIpv4AggregateAddress() {}
    /**
     * @return Set AS set path information
     * 
     */
    public Boolean asSetPath() {
        return this.asSetPath;
    }
    /**
     * @return Variable name
     * 
     */
    public String asSetPathVariable() {
        return this.asSetPathVariable;
    }
    public String networkAddress() {
        return this.networkAddress;
    }
    /**
     * @return Variable name
     * 
     */
    public String networkAddressVariable() {
        return this.networkAddressVariable;
    }
    public String subnetMask() {
        return this.subnetMask;
    }
    /**
     * @return Variable name
     * 
     */
    public String subnetMaskVariable() {
        return this.subnetMaskVariable;
    }
    /**
     * @return Filter out more specific routes from updates
     * 
     */
    public Boolean summaryOnly() {
        return this.summaryOnly;
    }
    /**
     * @return Variable name
     * 
     */
    public String summaryOnlyVariable() {
        return this.summaryOnlyVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceRoutingBgpFeatureIpv4AggregateAddress defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean asSetPath;
        private String asSetPathVariable;
        private String networkAddress;
        private String networkAddressVariable;
        private String subnetMask;
        private String subnetMaskVariable;
        private Boolean summaryOnly;
        private String summaryOnlyVariable;
        public Builder() {}
        public Builder(GetServiceRoutingBgpFeatureIpv4AggregateAddress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asSetPath = defaults.asSetPath;
    	      this.asSetPathVariable = defaults.asSetPathVariable;
    	      this.networkAddress = defaults.networkAddress;
    	      this.networkAddressVariable = defaults.networkAddressVariable;
    	      this.subnetMask = defaults.subnetMask;
    	      this.subnetMaskVariable = defaults.subnetMaskVariable;
    	      this.summaryOnly = defaults.summaryOnly;
    	      this.summaryOnlyVariable = defaults.summaryOnlyVariable;
        }

        @CustomType.Setter
        public Builder asSetPath(Boolean asSetPath) {
            if (asSetPath == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv4AggregateAddress", "asSetPath");
            }
            this.asSetPath = asSetPath;
            return this;
        }
        @CustomType.Setter
        public Builder asSetPathVariable(String asSetPathVariable) {
            if (asSetPathVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv4AggregateAddress", "asSetPathVariable");
            }
            this.asSetPathVariable = asSetPathVariable;
            return this;
        }
        @CustomType.Setter
        public Builder networkAddress(String networkAddress) {
            if (networkAddress == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv4AggregateAddress", "networkAddress");
            }
            this.networkAddress = networkAddress;
            return this;
        }
        @CustomType.Setter
        public Builder networkAddressVariable(String networkAddressVariable) {
            if (networkAddressVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv4AggregateAddress", "networkAddressVariable");
            }
            this.networkAddressVariable = networkAddressVariable;
            return this;
        }
        @CustomType.Setter
        public Builder subnetMask(String subnetMask) {
            if (subnetMask == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv4AggregateAddress", "subnetMask");
            }
            this.subnetMask = subnetMask;
            return this;
        }
        @CustomType.Setter
        public Builder subnetMaskVariable(String subnetMaskVariable) {
            if (subnetMaskVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv4AggregateAddress", "subnetMaskVariable");
            }
            this.subnetMaskVariable = subnetMaskVariable;
            return this;
        }
        @CustomType.Setter
        public Builder summaryOnly(Boolean summaryOnly) {
            if (summaryOnly == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv4AggregateAddress", "summaryOnly");
            }
            this.summaryOnly = summaryOnly;
            return this;
        }
        @CustomType.Setter
        public Builder summaryOnlyVariable(String summaryOnlyVariable) {
            if (summaryOnlyVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingBgpFeatureIpv4AggregateAddress", "summaryOnlyVariable");
            }
            this.summaryOnlyVariable = summaryOnlyVariable;
            return this;
        }
        public GetServiceRoutingBgpFeatureIpv4AggregateAddress build() {
            final var _resultValue = new GetServiceRoutingBgpFeatureIpv4AggregateAddress();
            _resultValue.asSetPath = asSetPath;
            _resultValue.asSetPathVariable = asSetPathVariable;
            _resultValue.networkAddress = networkAddress;
            _resultValue.networkAddressVariable = networkAddressVariable;
            _resultValue.subnetMask = subnetMask;
            _resultValue.subnetMaskVariable = subnetMaskVariable;
            _resultValue.summaryOnly = summaryOnly;
            _resultValue.summaryOnlyVariable = summaryOnlyVariable;
            return _resultValue;
        }
    }
}
