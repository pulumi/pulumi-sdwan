// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RuleSetPolicyDefinitionRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final RuleSetPolicyDefinitionRuleArgs Empty = new RuleSetPolicyDefinitionRuleArgs();

    /**
     * Destination data FQDN prefix list ID
     * 
     */
    @Import(name="destinationDataFqdnPrefixListId")
    private @Nullable Output<String> destinationDataFqdnPrefixListId;

    /**
     * @return Destination data FQDN prefix list ID
     * 
     */
    public Optional<Output<String>> destinationDataFqdnPrefixListId() {
        return Optional.ofNullable(this.destinationDataFqdnPrefixListId);
    }

    /**
     * Destination data FQDN prefix list version
     * 
     */
    @Import(name="destinationDataFqdnPrefixListVersion")
    private @Nullable Output<Integer> destinationDataFqdnPrefixListVersion;

    /**
     * @return Destination data FQDN prefix list version
     * 
     */
    public Optional<Output<Integer>> destinationDataFqdnPrefixListVersion() {
        return Optional.ofNullable(this.destinationDataFqdnPrefixListVersion);
    }

    /**
     * Destination data IPv4 prefix list ID
     * 
     */
    @Import(name="destinationDataIpv4PrefixListId")
    private @Nullable Output<String> destinationDataIpv4PrefixListId;

    /**
     * @return Destination data IPv4 prefix list ID
     * 
     */
    public Optional<Output<String>> destinationDataIpv4PrefixListId() {
        return Optional.ofNullable(this.destinationDataIpv4PrefixListId);
    }

    /**
     * Destination data IPv4 prefix list version
     * 
     */
    @Import(name="destinationDataIpv4PrefixListVersion")
    private @Nullable Output<Integer> destinationDataIpv4PrefixListVersion;

    /**
     * @return Destination data IPv4 prefix list version
     * 
     */
    public Optional<Output<Integer>> destinationDataIpv4PrefixListVersion() {
        return Optional.ofNullable(this.destinationDataIpv4PrefixListVersion);
    }

    /**
     * Destination fully qualified domain name
     * 
     */
    @Import(name="destinationFqdn")
    private @Nullable Output<String> destinationFqdn;

    /**
     * @return Destination fully qualified domain name
     * 
     */
    public Optional<Output<String>> destinationFqdn() {
        return Optional.ofNullable(this.destinationFqdn);
    }

    /**
     * Destination geo location
     * 
     */
    @Import(name="destinationGeoLocation")
    private @Nullable Output<String> destinationGeoLocation;

    /**
     * @return Destination geo location
     * 
     */
    public Optional<Output<String>> destinationGeoLocation() {
        return Optional.ofNullable(this.destinationGeoLocation);
    }

    /**
     * Destination geo location list ID
     * 
     */
    @Import(name="destinationGeoLocationListId")
    private @Nullable Output<String> destinationGeoLocationListId;

    /**
     * @return Destination geo location list ID
     * 
     */
    public Optional<Output<String>> destinationGeoLocationListId() {
        return Optional.ofNullable(this.destinationGeoLocationListId);
    }

    /**
     * Destination geo location list version
     * 
     */
    @Import(name="destinationGeoLocationListVersion")
    private @Nullable Output<Integer> destinationGeoLocationListVersion;

    /**
     * @return Destination geo location list version
     * 
     */
    public Optional<Output<Integer>> destinationGeoLocationListVersion() {
        return Optional.ofNullable(this.destinationGeoLocationListVersion);
    }

    /**
     * Destination IPv4 prefix
     * 
     */
    @Import(name="destinationIpv4Prefix")
    private @Nullable Output<String> destinationIpv4Prefix;

    /**
     * @return Destination IPv4 prefix
     * 
     */
    public Optional<Output<String>> destinationIpv4Prefix() {
        return Optional.ofNullable(this.destinationIpv4Prefix);
    }

    /**
     * Destination IPv4 prefix variable name
     * 
     */
    @Import(name="destinationIpv4PrefixVariable")
    private @Nullable Output<String> destinationIpv4PrefixVariable;

    /**
     * @return Destination IPv4 prefix variable name
     * 
     */
    public Optional<Output<String>> destinationIpv4PrefixVariable() {
        return Optional.ofNullable(this.destinationIpv4PrefixVariable);
    }

    /**
     * Destination object group ID
     * 
     */
    @Import(name="destinationObjectGroupId")
    private @Nullable Output<String> destinationObjectGroupId;

    /**
     * @return Destination object group ID
     * 
     */
    public Optional<Output<String>> destinationObjectGroupId() {
        return Optional.ofNullable(this.destinationObjectGroupId);
    }

    /**
     * Destination object group version
     * 
     */
    @Import(name="destinationObjectGroupVersion")
    private @Nullable Output<Integer> destinationObjectGroupVersion;

    /**
     * @return Destination object group version
     * 
     */
    public Optional<Output<Integer>> destinationObjectGroupVersion() {
        return Optional.ofNullable(this.destinationObjectGroupVersion);
    }

    /**
     * Destination port or range of ports
     * 
     */
    @Import(name="destinationPort")
    private @Nullable Output<String> destinationPort;

    /**
     * @return Destination port or range of ports
     * 
     */
    public Optional<Output<String>> destinationPort() {
        return Optional.ofNullable(this.destinationPort);
    }

    /**
     * Destination port list ID
     * 
     */
    @Import(name="destinationPortListId")
    private @Nullable Output<String> destinationPortListId;

    /**
     * @return Destination port list ID
     * 
     */
    public Optional<Output<String>> destinationPortListId() {
        return Optional.ofNullable(this.destinationPortListId);
    }

    /**
     * Destination port list version
     * 
     */
    @Import(name="destinationPortListVersion")
    private @Nullable Output<Integer> destinationPortListVersion;

    /**
     * @return Destination port list version
     * 
     */
    public Optional<Output<Integer>> destinationPortListVersion() {
        return Optional.ofNullable(this.destinationPortListVersion);
    }

    /**
     * The name of the rule
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the rule
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The order of the rule
     * 
     */
    @Import(name="order", required=true)
    private Output<Integer> order;

    /**
     * @return The order of the rule
     * 
     */
    public Output<Integer> order() {
        return this.order;
    }

    /**
     * Protocol name
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return Protocol name
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * Protocol list ID
     * 
     */
    @Import(name="protocolListId")
    private @Nullable Output<String> protocolListId;

    /**
     * @return Protocol list ID
     * 
     */
    public Optional<Output<String>> protocolListId() {
        return Optional.ofNullable(this.protocolListId);
    }

    /**
     * Protocol list version
     * 
     */
    @Import(name="protocolListVersion")
    private @Nullable Output<Integer> protocolListVersion;

    /**
     * @return Protocol list version
     * 
     */
    public Optional<Output<Integer>> protocolListVersion() {
        return Optional.ofNullable(this.protocolListVersion);
    }

    /**
     * Protocol number
     *   - Range: `0`-`255`
     * 
     */
    @Import(name="protocolNumber")
    private @Nullable Output<Integer> protocolNumber;

    /**
     * @return Protocol number
     *   - Range: `0`-`255`
     * 
     */
    public Optional<Output<Integer>> protocolNumber() {
        return Optional.ofNullable(this.protocolNumber);
    }

    /**
     * Source data FQDN prefix list ID
     * 
     */
    @Import(name="sourceDataFqdnPrefixListId")
    private @Nullable Output<String> sourceDataFqdnPrefixListId;

    /**
     * @return Source data FQDN prefix list ID
     * 
     */
    public Optional<Output<String>> sourceDataFqdnPrefixListId() {
        return Optional.ofNullable(this.sourceDataFqdnPrefixListId);
    }

    /**
     * Source data FQDN prefix list version
     * 
     */
    @Import(name="sourceDataFqdnPrefixListVersion")
    private @Nullable Output<Integer> sourceDataFqdnPrefixListVersion;

    /**
     * @return Source data FQDN prefix list version
     * 
     */
    public Optional<Output<Integer>> sourceDataFqdnPrefixListVersion() {
        return Optional.ofNullable(this.sourceDataFqdnPrefixListVersion);
    }

    /**
     * Source data IPv4 prefix list ID
     * 
     */
    @Import(name="sourceDataIpv4PrefixListId")
    private @Nullable Output<String> sourceDataIpv4PrefixListId;

    /**
     * @return Source data IPv4 prefix list ID
     * 
     */
    public Optional<Output<String>> sourceDataIpv4PrefixListId() {
        return Optional.ofNullable(this.sourceDataIpv4PrefixListId);
    }

    /**
     * Source data IPv4 prefix list version
     * 
     */
    @Import(name="sourceDataIpv4PrefixListVersion")
    private @Nullable Output<Integer> sourceDataIpv4PrefixListVersion;

    /**
     * @return Source data IPv4 prefix list version
     * 
     */
    public Optional<Output<Integer>> sourceDataIpv4PrefixListVersion() {
        return Optional.ofNullable(this.sourceDataIpv4PrefixListVersion);
    }

    /**
     * Source fully qualified domain name
     * 
     */
    @Import(name="sourceFqdn")
    private @Nullable Output<String> sourceFqdn;

    /**
     * @return Source fully qualified domain name
     * 
     */
    public Optional<Output<String>> sourceFqdn() {
        return Optional.ofNullable(this.sourceFqdn);
    }

    /**
     * Source geo location
     * 
     */
    @Import(name="sourceGeoLocation")
    private @Nullable Output<String> sourceGeoLocation;

    /**
     * @return Source geo location
     * 
     */
    public Optional<Output<String>> sourceGeoLocation() {
        return Optional.ofNullable(this.sourceGeoLocation);
    }

    /**
     * Source geo location list ID
     * 
     */
    @Import(name="sourceGeoLocationListId")
    private @Nullable Output<String> sourceGeoLocationListId;

    /**
     * @return Source geo location list ID
     * 
     */
    public Optional<Output<String>> sourceGeoLocationListId() {
        return Optional.ofNullable(this.sourceGeoLocationListId);
    }

    /**
     * Source geo location list version
     * 
     */
    @Import(name="sourceGeoLocationListVersion")
    private @Nullable Output<Integer> sourceGeoLocationListVersion;

    /**
     * @return Source geo location list version
     * 
     */
    public Optional<Output<Integer>> sourceGeoLocationListVersion() {
        return Optional.ofNullable(this.sourceGeoLocationListVersion);
    }

    /**
     * Source IPv4 prefix
     * 
     */
    @Import(name="sourceIpv4Prefix")
    private @Nullable Output<String> sourceIpv4Prefix;

    /**
     * @return Source IPv4 prefix
     * 
     */
    public Optional<Output<String>> sourceIpv4Prefix() {
        return Optional.ofNullable(this.sourceIpv4Prefix);
    }

    /**
     * Source IPv4 prefix variable name
     * 
     */
    @Import(name="sourceIpv4PrefixVariable")
    private @Nullable Output<String> sourceIpv4PrefixVariable;

    /**
     * @return Source IPv4 prefix variable name
     * 
     */
    public Optional<Output<String>> sourceIpv4PrefixVariable() {
        return Optional.ofNullable(this.sourceIpv4PrefixVariable);
    }

    /**
     * Source object group ID
     * 
     */
    @Import(name="sourceObjectGroupId")
    private @Nullable Output<String> sourceObjectGroupId;

    /**
     * @return Source object group ID
     * 
     */
    public Optional<Output<String>> sourceObjectGroupId() {
        return Optional.ofNullable(this.sourceObjectGroupId);
    }

    /**
     * Source object group version
     * 
     */
    @Import(name="sourceObjectGroupVersion")
    private @Nullable Output<Integer> sourceObjectGroupVersion;

    /**
     * @return Source object group version
     * 
     */
    public Optional<Output<Integer>> sourceObjectGroupVersion() {
        return Optional.ofNullable(this.sourceObjectGroupVersion);
    }

    /**
     * Source port or range of ports
     * 
     */
    @Import(name="sourcePort")
    private @Nullable Output<String> sourcePort;

    /**
     * @return Source port or range of ports
     * 
     */
    public Optional<Output<String>> sourcePort() {
        return Optional.ofNullable(this.sourcePort);
    }

    /**
     * Source port list ID
     * 
     */
    @Import(name="sourcePortListId")
    private @Nullable Output<String> sourcePortListId;

    /**
     * @return Source port list ID
     * 
     */
    public Optional<Output<String>> sourcePortListId() {
        return Optional.ofNullable(this.sourcePortListId);
    }

    /**
     * Source port list version
     * 
     */
    @Import(name="sourcePortListVersion")
    private @Nullable Output<Integer> sourcePortListVersion;

    /**
     * @return Source port list version
     * 
     */
    public Optional<Output<Integer>> sourcePortListVersion() {
        return Optional.ofNullable(this.sourcePortListVersion);
    }

    private RuleSetPolicyDefinitionRuleArgs() {}

    private RuleSetPolicyDefinitionRuleArgs(RuleSetPolicyDefinitionRuleArgs $) {
        this.destinationDataFqdnPrefixListId = $.destinationDataFqdnPrefixListId;
        this.destinationDataFqdnPrefixListVersion = $.destinationDataFqdnPrefixListVersion;
        this.destinationDataIpv4PrefixListId = $.destinationDataIpv4PrefixListId;
        this.destinationDataIpv4PrefixListVersion = $.destinationDataIpv4PrefixListVersion;
        this.destinationFqdn = $.destinationFqdn;
        this.destinationGeoLocation = $.destinationGeoLocation;
        this.destinationGeoLocationListId = $.destinationGeoLocationListId;
        this.destinationGeoLocationListVersion = $.destinationGeoLocationListVersion;
        this.destinationIpv4Prefix = $.destinationIpv4Prefix;
        this.destinationIpv4PrefixVariable = $.destinationIpv4PrefixVariable;
        this.destinationObjectGroupId = $.destinationObjectGroupId;
        this.destinationObjectGroupVersion = $.destinationObjectGroupVersion;
        this.destinationPort = $.destinationPort;
        this.destinationPortListId = $.destinationPortListId;
        this.destinationPortListVersion = $.destinationPortListVersion;
        this.name = $.name;
        this.order = $.order;
        this.protocol = $.protocol;
        this.protocolListId = $.protocolListId;
        this.protocolListVersion = $.protocolListVersion;
        this.protocolNumber = $.protocolNumber;
        this.sourceDataFqdnPrefixListId = $.sourceDataFqdnPrefixListId;
        this.sourceDataFqdnPrefixListVersion = $.sourceDataFqdnPrefixListVersion;
        this.sourceDataIpv4PrefixListId = $.sourceDataIpv4PrefixListId;
        this.sourceDataIpv4PrefixListVersion = $.sourceDataIpv4PrefixListVersion;
        this.sourceFqdn = $.sourceFqdn;
        this.sourceGeoLocation = $.sourceGeoLocation;
        this.sourceGeoLocationListId = $.sourceGeoLocationListId;
        this.sourceGeoLocationListVersion = $.sourceGeoLocationListVersion;
        this.sourceIpv4Prefix = $.sourceIpv4Prefix;
        this.sourceIpv4PrefixVariable = $.sourceIpv4PrefixVariable;
        this.sourceObjectGroupId = $.sourceObjectGroupId;
        this.sourceObjectGroupVersion = $.sourceObjectGroupVersion;
        this.sourcePort = $.sourcePort;
        this.sourcePortListId = $.sourcePortListId;
        this.sourcePortListVersion = $.sourcePortListVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuleSetPolicyDefinitionRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuleSetPolicyDefinitionRuleArgs $;

        public Builder() {
            $ = new RuleSetPolicyDefinitionRuleArgs();
        }

        public Builder(RuleSetPolicyDefinitionRuleArgs defaults) {
            $ = new RuleSetPolicyDefinitionRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinationDataFqdnPrefixListId Destination data FQDN prefix list ID
         * 
         * @return builder
         * 
         */
        public Builder destinationDataFqdnPrefixListId(@Nullable Output<String> destinationDataFqdnPrefixListId) {
            $.destinationDataFqdnPrefixListId = destinationDataFqdnPrefixListId;
            return this;
        }

        /**
         * @param destinationDataFqdnPrefixListId Destination data FQDN prefix list ID
         * 
         * @return builder
         * 
         */
        public Builder destinationDataFqdnPrefixListId(String destinationDataFqdnPrefixListId) {
            return destinationDataFqdnPrefixListId(Output.of(destinationDataFqdnPrefixListId));
        }

        /**
         * @param destinationDataFqdnPrefixListVersion Destination data FQDN prefix list version
         * 
         * @return builder
         * 
         */
        public Builder destinationDataFqdnPrefixListVersion(@Nullable Output<Integer> destinationDataFqdnPrefixListVersion) {
            $.destinationDataFqdnPrefixListVersion = destinationDataFqdnPrefixListVersion;
            return this;
        }

        /**
         * @param destinationDataFqdnPrefixListVersion Destination data FQDN prefix list version
         * 
         * @return builder
         * 
         */
        public Builder destinationDataFqdnPrefixListVersion(Integer destinationDataFqdnPrefixListVersion) {
            return destinationDataFqdnPrefixListVersion(Output.of(destinationDataFqdnPrefixListVersion));
        }

        /**
         * @param destinationDataIpv4PrefixListId Destination data IPv4 prefix list ID
         * 
         * @return builder
         * 
         */
        public Builder destinationDataIpv4PrefixListId(@Nullable Output<String> destinationDataIpv4PrefixListId) {
            $.destinationDataIpv4PrefixListId = destinationDataIpv4PrefixListId;
            return this;
        }

        /**
         * @param destinationDataIpv4PrefixListId Destination data IPv4 prefix list ID
         * 
         * @return builder
         * 
         */
        public Builder destinationDataIpv4PrefixListId(String destinationDataIpv4PrefixListId) {
            return destinationDataIpv4PrefixListId(Output.of(destinationDataIpv4PrefixListId));
        }

        /**
         * @param destinationDataIpv4PrefixListVersion Destination data IPv4 prefix list version
         * 
         * @return builder
         * 
         */
        public Builder destinationDataIpv4PrefixListVersion(@Nullable Output<Integer> destinationDataIpv4PrefixListVersion) {
            $.destinationDataIpv4PrefixListVersion = destinationDataIpv4PrefixListVersion;
            return this;
        }

        /**
         * @param destinationDataIpv4PrefixListVersion Destination data IPv4 prefix list version
         * 
         * @return builder
         * 
         */
        public Builder destinationDataIpv4PrefixListVersion(Integer destinationDataIpv4PrefixListVersion) {
            return destinationDataIpv4PrefixListVersion(Output.of(destinationDataIpv4PrefixListVersion));
        }

        /**
         * @param destinationFqdn Destination fully qualified domain name
         * 
         * @return builder
         * 
         */
        public Builder destinationFqdn(@Nullable Output<String> destinationFqdn) {
            $.destinationFqdn = destinationFqdn;
            return this;
        }

        /**
         * @param destinationFqdn Destination fully qualified domain name
         * 
         * @return builder
         * 
         */
        public Builder destinationFqdn(String destinationFqdn) {
            return destinationFqdn(Output.of(destinationFqdn));
        }

        /**
         * @param destinationGeoLocation Destination geo location
         * 
         * @return builder
         * 
         */
        public Builder destinationGeoLocation(@Nullable Output<String> destinationGeoLocation) {
            $.destinationGeoLocation = destinationGeoLocation;
            return this;
        }

        /**
         * @param destinationGeoLocation Destination geo location
         * 
         * @return builder
         * 
         */
        public Builder destinationGeoLocation(String destinationGeoLocation) {
            return destinationGeoLocation(Output.of(destinationGeoLocation));
        }

        /**
         * @param destinationGeoLocationListId Destination geo location list ID
         * 
         * @return builder
         * 
         */
        public Builder destinationGeoLocationListId(@Nullable Output<String> destinationGeoLocationListId) {
            $.destinationGeoLocationListId = destinationGeoLocationListId;
            return this;
        }

        /**
         * @param destinationGeoLocationListId Destination geo location list ID
         * 
         * @return builder
         * 
         */
        public Builder destinationGeoLocationListId(String destinationGeoLocationListId) {
            return destinationGeoLocationListId(Output.of(destinationGeoLocationListId));
        }

        /**
         * @param destinationGeoLocationListVersion Destination geo location list version
         * 
         * @return builder
         * 
         */
        public Builder destinationGeoLocationListVersion(@Nullable Output<Integer> destinationGeoLocationListVersion) {
            $.destinationGeoLocationListVersion = destinationGeoLocationListVersion;
            return this;
        }

        /**
         * @param destinationGeoLocationListVersion Destination geo location list version
         * 
         * @return builder
         * 
         */
        public Builder destinationGeoLocationListVersion(Integer destinationGeoLocationListVersion) {
            return destinationGeoLocationListVersion(Output.of(destinationGeoLocationListVersion));
        }

        /**
         * @param destinationIpv4Prefix Destination IPv4 prefix
         * 
         * @return builder
         * 
         */
        public Builder destinationIpv4Prefix(@Nullable Output<String> destinationIpv4Prefix) {
            $.destinationIpv4Prefix = destinationIpv4Prefix;
            return this;
        }

        /**
         * @param destinationIpv4Prefix Destination IPv4 prefix
         * 
         * @return builder
         * 
         */
        public Builder destinationIpv4Prefix(String destinationIpv4Prefix) {
            return destinationIpv4Prefix(Output.of(destinationIpv4Prefix));
        }

        /**
         * @param destinationIpv4PrefixVariable Destination IPv4 prefix variable name
         * 
         * @return builder
         * 
         */
        public Builder destinationIpv4PrefixVariable(@Nullable Output<String> destinationIpv4PrefixVariable) {
            $.destinationIpv4PrefixVariable = destinationIpv4PrefixVariable;
            return this;
        }

        /**
         * @param destinationIpv4PrefixVariable Destination IPv4 prefix variable name
         * 
         * @return builder
         * 
         */
        public Builder destinationIpv4PrefixVariable(String destinationIpv4PrefixVariable) {
            return destinationIpv4PrefixVariable(Output.of(destinationIpv4PrefixVariable));
        }

        /**
         * @param destinationObjectGroupId Destination object group ID
         * 
         * @return builder
         * 
         */
        public Builder destinationObjectGroupId(@Nullable Output<String> destinationObjectGroupId) {
            $.destinationObjectGroupId = destinationObjectGroupId;
            return this;
        }

        /**
         * @param destinationObjectGroupId Destination object group ID
         * 
         * @return builder
         * 
         */
        public Builder destinationObjectGroupId(String destinationObjectGroupId) {
            return destinationObjectGroupId(Output.of(destinationObjectGroupId));
        }

        /**
         * @param destinationObjectGroupVersion Destination object group version
         * 
         * @return builder
         * 
         */
        public Builder destinationObjectGroupVersion(@Nullable Output<Integer> destinationObjectGroupVersion) {
            $.destinationObjectGroupVersion = destinationObjectGroupVersion;
            return this;
        }

        /**
         * @param destinationObjectGroupVersion Destination object group version
         * 
         * @return builder
         * 
         */
        public Builder destinationObjectGroupVersion(Integer destinationObjectGroupVersion) {
            return destinationObjectGroupVersion(Output.of(destinationObjectGroupVersion));
        }

        /**
         * @param destinationPort Destination port or range of ports
         * 
         * @return builder
         * 
         */
        public Builder destinationPort(@Nullable Output<String> destinationPort) {
            $.destinationPort = destinationPort;
            return this;
        }

        /**
         * @param destinationPort Destination port or range of ports
         * 
         * @return builder
         * 
         */
        public Builder destinationPort(String destinationPort) {
            return destinationPort(Output.of(destinationPort));
        }

        /**
         * @param destinationPortListId Destination port list ID
         * 
         * @return builder
         * 
         */
        public Builder destinationPortListId(@Nullable Output<String> destinationPortListId) {
            $.destinationPortListId = destinationPortListId;
            return this;
        }

        /**
         * @param destinationPortListId Destination port list ID
         * 
         * @return builder
         * 
         */
        public Builder destinationPortListId(String destinationPortListId) {
            return destinationPortListId(Output.of(destinationPortListId));
        }

        /**
         * @param destinationPortListVersion Destination port list version
         * 
         * @return builder
         * 
         */
        public Builder destinationPortListVersion(@Nullable Output<Integer> destinationPortListVersion) {
            $.destinationPortListVersion = destinationPortListVersion;
            return this;
        }

        /**
         * @param destinationPortListVersion Destination port list version
         * 
         * @return builder
         * 
         */
        public Builder destinationPortListVersion(Integer destinationPortListVersion) {
            return destinationPortListVersion(Output.of(destinationPortListVersion));
        }

        /**
         * @param name The name of the rule
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the rule
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param order The order of the rule
         * 
         * @return builder
         * 
         */
        public Builder order(Output<Integer> order) {
            $.order = order;
            return this;
        }

        /**
         * @param order The order of the rule
         * 
         * @return builder
         * 
         */
        public Builder order(Integer order) {
            return order(Output.of(order));
        }

        /**
         * @param protocol Protocol name
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol Protocol name
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param protocolListId Protocol list ID
         * 
         * @return builder
         * 
         */
        public Builder protocolListId(@Nullable Output<String> protocolListId) {
            $.protocolListId = protocolListId;
            return this;
        }

        /**
         * @param protocolListId Protocol list ID
         * 
         * @return builder
         * 
         */
        public Builder protocolListId(String protocolListId) {
            return protocolListId(Output.of(protocolListId));
        }

        /**
         * @param protocolListVersion Protocol list version
         * 
         * @return builder
         * 
         */
        public Builder protocolListVersion(@Nullable Output<Integer> protocolListVersion) {
            $.protocolListVersion = protocolListVersion;
            return this;
        }

        /**
         * @param protocolListVersion Protocol list version
         * 
         * @return builder
         * 
         */
        public Builder protocolListVersion(Integer protocolListVersion) {
            return protocolListVersion(Output.of(protocolListVersion));
        }

        /**
         * @param protocolNumber Protocol number
         *   - Range: `0`-`255`
         * 
         * @return builder
         * 
         */
        public Builder protocolNumber(@Nullable Output<Integer> protocolNumber) {
            $.protocolNumber = protocolNumber;
            return this;
        }

        /**
         * @param protocolNumber Protocol number
         *   - Range: `0`-`255`
         * 
         * @return builder
         * 
         */
        public Builder protocolNumber(Integer protocolNumber) {
            return protocolNumber(Output.of(protocolNumber));
        }

        /**
         * @param sourceDataFqdnPrefixListId Source data FQDN prefix list ID
         * 
         * @return builder
         * 
         */
        public Builder sourceDataFqdnPrefixListId(@Nullable Output<String> sourceDataFqdnPrefixListId) {
            $.sourceDataFqdnPrefixListId = sourceDataFqdnPrefixListId;
            return this;
        }

        /**
         * @param sourceDataFqdnPrefixListId Source data FQDN prefix list ID
         * 
         * @return builder
         * 
         */
        public Builder sourceDataFqdnPrefixListId(String sourceDataFqdnPrefixListId) {
            return sourceDataFqdnPrefixListId(Output.of(sourceDataFqdnPrefixListId));
        }

        /**
         * @param sourceDataFqdnPrefixListVersion Source data FQDN prefix list version
         * 
         * @return builder
         * 
         */
        public Builder sourceDataFqdnPrefixListVersion(@Nullable Output<Integer> sourceDataFqdnPrefixListVersion) {
            $.sourceDataFqdnPrefixListVersion = sourceDataFqdnPrefixListVersion;
            return this;
        }

        /**
         * @param sourceDataFqdnPrefixListVersion Source data FQDN prefix list version
         * 
         * @return builder
         * 
         */
        public Builder sourceDataFqdnPrefixListVersion(Integer sourceDataFqdnPrefixListVersion) {
            return sourceDataFqdnPrefixListVersion(Output.of(sourceDataFqdnPrefixListVersion));
        }

        /**
         * @param sourceDataIpv4PrefixListId Source data IPv4 prefix list ID
         * 
         * @return builder
         * 
         */
        public Builder sourceDataIpv4PrefixListId(@Nullable Output<String> sourceDataIpv4PrefixListId) {
            $.sourceDataIpv4PrefixListId = sourceDataIpv4PrefixListId;
            return this;
        }

        /**
         * @param sourceDataIpv4PrefixListId Source data IPv4 prefix list ID
         * 
         * @return builder
         * 
         */
        public Builder sourceDataIpv4PrefixListId(String sourceDataIpv4PrefixListId) {
            return sourceDataIpv4PrefixListId(Output.of(sourceDataIpv4PrefixListId));
        }

        /**
         * @param sourceDataIpv4PrefixListVersion Source data IPv4 prefix list version
         * 
         * @return builder
         * 
         */
        public Builder sourceDataIpv4PrefixListVersion(@Nullable Output<Integer> sourceDataIpv4PrefixListVersion) {
            $.sourceDataIpv4PrefixListVersion = sourceDataIpv4PrefixListVersion;
            return this;
        }

        /**
         * @param sourceDataIpv4PrefixListVersion Source data IPv4 prefix list version
         * 
         * @return builder
         * 
         */
        public Builder sourceDataIpv4PrefixListVersion(Integer sourceDataIpv4PrefixListVersion) {
            return sourceDataIpv4PrefixListVersion(Output.of(sourceDataIpv4PrefixListVersion));
        }

        /**
         * @param sourceFqdn Source fully qualified domain name
         * 
         * @return builder
         * 
         */
        public Builder sourceFqdn(@Nullable Output<String> sourceFqdn) {
            $.sourceFqdn = sourceFqdn;
            return this;
        }

        /**
         * @param sourceFqdn Source fully qualified domain name
         * 
         * @return builder
         * 
         */
        public Builder sourceFqdn(String sourceFqdn) {
            return sourceFqdn(Output.of(sourceFqdn));
        }

        /**
         * @param sourceGeoLocation Source geo location
         * 
         * @return builder
         * 
         */
        public Builder sourceGeoLocation(@Nullable Output<String> sourceGeoLocation) {
            $.sourceGeoLocation = sourceGeoLocation;
            return this;
        }

        /**
         * @param sourceGeoLocation Source geo location
         * 
         * @return builder
         * 
         */
        public Builder sourceGeoLocation(String sourceGeoLocation) {
            return sourceGeoLocation(Output.of(sourceGeoLocation));
        }

        /**
         * @param sourceGeoLocationListId Source geo location list ID
         * 
         * @return builder
         * 
         */
        public Builder sourceGeoLocationListId(@Nullable Output<String> sourceGeoLocationListId) {
            $.sourceGeoLocationListId = sourceGeoLocationListId;
            return this;
        }

        /**
         * @param sourceGeoLocationListId Source geo location list ID
         * 
         * @return builder
         * 
         */
        public Builder sourceGeoLocationListId(String sourceGeoLocationListId) {
            return sourceGeoLocationListId(Output.of(sourceGeoLocationListId));
        }

        /**
         * @param sourceGeoLocationListVersion Source geo location list version
         * 
         * @return builder
         * 
         */
        public Builder sourceGeoLocationListVersion(@Nullable Output<Integer> sourceGeoLocationListVersion) {
            $.sourceGeoLocationListVersion = sourceGeoLocationListVersion;
            return this;
        }

        /**
         * @param sourceGeoLocationListVersion Source geo location list version
         * 
         * @return builder
         * 
         */
        public Builder sourceGeoLocationListVersion(Integer sourceGeoLocationListVersion) {
            return sourceGeoLocationListVersion(Output.of(sourceGeoLocationListVersion));
        }

        /**
         * @param sourceIpv4Prefix Source IPv4 prefix
         * 
         * @return builder
         * 
         */
        public Builder sourceIpv4Prefix(@Nullable Output<String> sourceIpv4Prefix) {
            $.sourceIpv4Prefix = sourceIpv4Prefix;
            return this;
        }

        /**
         * @param sourceIpv4Prefix Source IPv4 prefix
         * 
         * @return builder
         * 
         */
        public Builder sourceIpv4Prefix(String sourceIpv4Prefix) {
            return sourceIpv4Prefix(Output.of(sourceIpv4Prefix));
        }

        /**
         * @param sourceIpv4PrefixVariable Source IPv4 prefix variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceIpv4PrefixVariable(@Nullable Output<String> sourceIpv4PrefixVariable) {
            $.sourceIpv4PrefixVariable = sourceIpv4PrefixVariable;
            return this;
        }

        /**
         * @param sourceIpv4PrefixVariable Source IPv4 prefix variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceIpv4PrefixVariable(String sourceIpv4PrefixVariable) {
            return sourceIpv4PrefixVariable(Output.of(sourceIpv4PrefixVariable));
        }

        /**
         * @param sourceObjectGroupId Source object group ID
         * 
         * @return builder
         * 
         */
        public Builder sourceObjectGroupId(@Nullable Output<String> sourceObjectGroupId) {
            $.sourceObjectGroupId = sourceObjectGroupId;
            return this;
        }

        /**
         * @param sourceObjectGroupId Source object group ID
         * 
         * @return builder
         * 
         */
        public Builder sourceObjectGroupId(String sourceObjectGroupId) {
            return sourceObjectGroupId(Output.of(sourceObjectGroupId));
        }

        /**
         * @param sourceObjectGroupVersion Source object group version
         * 
         * @return builder
         * 
         */
        public Builder sourceObjectGroupVersion(@Nullable Output<Integer> sourceObjectGroupVersion) {
            $.sourceObjectGroupVersion = sourceObjectGroupVersion;
            return this;
        }

        /**
         * @param sourceObjectGroupVersion Source object group version
         * 
         * @return builder
         * 
         */
        public Builder sourceObjectGroupVersion(Integer sourceObjectGroupVersion) {
            return sourceObjectGroupVersion(Output.of(sourceObjectGroupVersion));
        }

        /**
         * @param sourcePort Source port or range of ports
         * 
         * @return builder
         * 
         */
        public Builder sourcePort(@Nullable Output<String> sourcePort) {
            $.sourcePort = sourcePort;
            return this;
        }

        /**
         * @param sourcePort Source port or range of ports
         * 
         * @return builder
         * 
         */
        public Builder sourcePort(String sourcePort) {
            return sourcePort(Output.of(sourcePort));
        }

        /**
         * @param sourcePortListId Source port list ID
         * 
         * @return builder
         * 
         */
        public Builder sourcePortListId(@Nullable Output<String> sourcePortListId) {
            $.sourcePortListId = sourcePortListId;
            return this;
        }

        /**
         * @param sourcePortListId Source port list ID
         * 
         * @return builder
         * 
         */
        public Builder sourcePortListId(String sourcePortListId) {
            return sourcePortListId(Output.of(sourcePortListId));
        }

        /**
         * @param sourcePortListVersion Source port list version
         * 
         * @return builder
         * 
         */
        public Builder sourcePortListVersion(@Nullable Output<Integer> sourcePortListVersion) {
            $.sourcePortListVersion = sourcePortListVersion;
            return this;
        }

        /**
         * @param sourcePortListVersion Source port list version
         * 
         * @return builder
         * 
         */
        public Builder sourcePortListVersion(Integer sourcePortListVersion) {
            return sourcePortListVersion(Output.of(sourcePortListVersion));
        }

        public RuleSetPolicyDefinitionRuleArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("RuleSetPolicyDefinitionRuleArgs", "name");
            }
            if ($.order == null) {
                throw new MissingRequiredPropertyException("RuleSetPolicyDefinitionRuleArgs", "order");
            }
            return $;
        }
    }

}
