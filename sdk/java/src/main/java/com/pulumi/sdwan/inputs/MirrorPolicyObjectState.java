// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MirrorPolicyObjectState extends com.pulumi.resources.ResourceArgs {

    public static final MirrorPolicyObjectState Empty = new MirrorPolicyObjectState();

    /**
     * The name of the policy object
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the policy object
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Remote destination IP
     * 
     */
    @Import(name="remoteDestinationIp")
    private @Nullable Output<String> remoteDestinationIp;

    /**
     * @return Remote destination IP
     * 
     */
    public Optional<Output<String>> remoteDestinationIp() {
        return Optional.ofNullable(this.remoteDestinationIp);
    }

    /**
     * Source IP
     * 
     */
    @Import(name="sourceIp")
    private @Nullable Output<String> sourceIp;

    /**
     * @return Source IP
     * 
     */
    public Optional<Output<String>> sourceIp() {
        return Optional.ofNullable(this.sourceIp);
    }

    /**
     * The version of the object
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the object
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private MirrorPolicyObjectState() {}

    private MirrorPolicyObjectState(MirrorPolicyObjectState $) {
        this.name = $.name;
        this.remoteDestinationIp = $.remoteDestinationIp;
        this.sourceIp = $.sourceIp;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MirrorPolicyObjectState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MirrorPolicyObjectState $;

        public Builder() {
            $ = new MirrorPolicyObjectState();
        }

        public Builder(MirrorPolicyObjectState defaults) {
            $ = new MirrorPolicyObjectState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the policy object
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the policy object
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param remoteDestinationIp Remote destination IP
         * 
         * @return builder
         * 
         */
        public Builder remoteDestinationIp(@Nullable Output<String> remoteDestinationIp) {
            $.remoteDestinationIp = remoteDestinationIp;
            return this;
        }

        /**
         * @param remoteDestinationIp Remote destination IP
         * 
         * @return builder
         * 
         */
        public Builder remoteDestinationIp(String remoteDestinationIp) {
            return remoteDestinationIp(Output.of(remoteDestinationIp));
        }

        /**
         * @param sourceIp Source IP
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(@Nullable Output<String> sourceIp) {
            $.sourceIp = sourceIp;
            return this;
        }

        /**
         * @param sourceIp Source IP
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(String sourceIp) {
            return sourceIp(Output.of(sourceIp));
        }

        /**
         * @param version The version of the object
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the object
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public MirrorPolicyObjectState build() {
            return $;
        }
    }

}
