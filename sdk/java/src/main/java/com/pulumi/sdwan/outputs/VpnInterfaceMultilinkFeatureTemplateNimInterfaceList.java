// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VpnInterfaceMultilinkFeatureTemplateNimInterfaceList {
    /**
     * @return Interface bandwidth capacity, in kbps
     *   - Range: `1`-`2147483647`
     * 
     */
    private @Nullable Integer bandwidth;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String bandwidthVariable;
    /**
     * @return Set preference for interface Clock speed
     *   - Range: `1200`-`8000000`
     * 
     */
    private @Nullable Integer clockRate;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String clockRateVariable;
    /**
     * @return Configure Encapsulation for interface
     *   - Choices: `hdlc`, `ppp`
     * 
     */
    private @Nullable String encapsulationSerial;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String encapsulationSerialVariable;
    /**
     * @return Interface description
     * 
     */
    private @Nullable String interfaceDescription;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String interfaceDescriptionVariable;
    /**
     * @return Interface Name
     * 
     */
    private @Nullable String interfaceName;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String interfaceNameVariable;
    /**
     * @return NIM Serial interface type
     *   - Choices: `2t`, `4t`, `2T`, `4T`
     * 
     */
    private @Nullable String nimSerialInterfaceType;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String nimSerialInterfaceTypeVariable;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private @Nullable Boolean optional;

    private VpnInterfaceMultilinkFeatureTemplateNimInterfaceList() {}
    /**
     * @return Interface bandwidth capacity, in kbps
     *   - Range: `1`-`2147483647`
     * 
     */
    public Optional<Integer> bandwidth() {
        return Optional.ofNullable(this.bandwidth);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> bandwidthVariable() {
        return Optional.ofNullable(this.bandwidthVariable);
    }
    /**
     * @return Set preference for interface Clock speed
     *   - Range: `1200`-`8000000`
     * 
     */
    public Optional<Integer> clockRate() {
        return Optional.ofNullable(this.clockRate);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> clockRateVariable() {
        return Optional.ofNullable(this.clockRateVariable);
    }
    /**
     * @return Configure Encapsulation for interface
     *   - Choices: `hdlc`, `ppp`
     * 
     */
    public Optional<String> encapsulationSerial() {
        return Optional.ofNullable(this.encapsulationSerial);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> encapsulationSerialVariable() {
        return Optional.ofNullable(this.encapsulationSerialVariable);
    }
    /**
     * @return Interface description
     * 
     */
    public Optional<String> interfaceDescription() {
        return Optional.ofNullable(this.interfaceDescription);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> interfaceDescriptionVariable() {
        return Optional.ofNullable(this.interfaceDescriptionVariable);
    }
    /**
     * @return Interface Name
     * 
     */
    public Optional<String> interfaceName() {
        return Optional.ofNullable(this.interfaceName);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> interfaceNameVariable() {
        return Optional.ofNullable(this.interfaceNameVariable);
    }
    /**
     * @return NIM Serial interface type
     *   - Choices: `2t`, `4t`, `2T`, `4T`
     * 
     */
    public Optional<String> nimSerialInterfaceType() {
        return Optional.ofNullable(this.nimSerialInterfaceType);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> nimSerialInterfaceTypeVariable() {
        return Optional.ofNullable(this.nimSerialInterfaceTypeVariable);
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Boolean> optional() {
        return Optional.ofNullable(this.optional);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VpnInterfaceMultilinkFeatureTemplateNimInterfaceList defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer bandwidth;
        private @Nullable String bandwidthVariable;
        private @Nullable Integer clockRate;
        private @Nullable String clockRateVariable;
        private @Nullable String encapsulationSerial;
        private @Nullable String encapsulationSerialVariable;
        private @Nullable String interfaceDescription;
        private @Nullable String interfaceDescriptionVariable;
        private @Nullable String interfaceName;
        private @Nullable String interfaceNameVariable;
        private @Nullable String nimSerialInterfaceType;
        private @Nullable String nimSerialInterfaceTypeVariable;
        private @Nullable Boolean optional;
        public Builder() {}
        public Builder(VpnInterfaceMultilinkFeatureTemplateNimInterfaceList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidth = defaults.bandwidth;
    	      this.bandwidthVariable = defaults.bandwidthVariable;
    	      this.clockRate = defaults.clockRate;
    	      this.clockRateVariable = defaults.clockRateVariable;
    	      this.encapsulationSerial = defaults.encapsulationSerial;
    	      this.encapsulationSerialVariable = defaults.encapsulationSerialVariable;
    	      this.interfaceDescription = defaults.interfaceDescription;
    	      this.interfaceDescriptionVariable = defaults.interfaceDescriptionVariable;
    	      this.interfaceName = defaults.interfaceName;
    	      this.interfaceNameVariable = defaults.interfaceNameVariable;
    	      this.nimSerialInterfaceType = defaults.nimSerialInterfaceType;
    	      this.nimSerialInterfaceTypeVariable = defaults.nimSerialInterfaceTypeVariable;
    	      this.optional = defaults.optional;
        }

        @CustomType.Setter
        public Builder bandwidth(@Nullable Integer bandwidth) {

            this.bandwidth = bandwidth;
            return this;
        }
        @CustomType.Setter
        public Builder bandwidthVariable(@Nullable String bandwidthVariable) {

            this.bandwidthVariable = bandwidthVariable;
            return this;
        }
        @CustomType.Setter
        public Builder clockRate(@Nullable Integer clockRate) {

            this.clockRate = clockRate;
            return this;
        }
        @CustomType.Setter
        public Builder clockRateVariable(@Nullable String clockRateVariable) {

            this.clockRateVariable = clockRateVariable;
            return this;
        }
        @CustomType.Setter
        public Builder encapsulationSerial(@Nullable String encapsulationSerial) {

            this.encapsulationSerial = encapsulationSerial;
            return this;
        }
        @CustomType.Setter
        public Builder encapsulationSerialVariable(@Nullable String encapsulationSerialVariable) {

            this.encapsulationSerialVariable = encapsulationSerialVariable;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceDescription(@Nullable String interfaceDescription) {

            this.interfaceDescription = interfaceDescription;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceDescriptionVariable(@Nullable String interfaceDescriptionVariable) {

            this.interfaceDescriptionVariable = interfaceDescriptionVariable;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceName(@Nullable String interfaceName) {

            this.interfaceName = interfaceName;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceNameVariable(@Nullable String interfaceNameVariable) {

            this.interfaceNameVariable = interfaceNameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder nimSerialInterfaceType(@Nullable String nimSerialInterfaceType) {

            this.nimSerialInterfaceType = nimSerialInterfaceType;
            return this;
        }
        @CustomType.Setter
        public Builder nimSerialInterfaceTypeVariable(@Nullable String nimSerialInterfaceTypeVariable) {

            this.nimSerialInterfaceTypeVariable = nimSerialInterfaceTypeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder optional(@Nullable Boolean optional) {

            this.optional = optional;
            return this;
        }
        public VpnInterfaceMultilinkFeatureTemplateNimInterfaceList build() {
            final var _resultValue = new VpnInterfaceMultilinkFeatureTemplateNimInterfaceList();
            _resultValue.bandwidth = bandwidth;
            _resultValue.bandwidthVariable = bandwidthVariable;
            _resultValue.clockRate = clockRate;
            _resultValue.clockRateVariable = clockRateVariable;
            _resultValue.encapsulationSerial = encapsulationSerial;
            _resultValue.encapsulationSerialVariable = encapsulationSerialVariable;
            _resultValue.interfaceDescription = interfaceDescription;
            _resultValue.interfaceDescriptionVariable = interfaceDescriptionVariable;
            _resultValue.interfaceName = interfaceName;
            _resultValue.interfaceNameVariable = interfaceNameVariable;
            _resultValue.nimSerialInterfaceType = nimSerialInterfaceType;
            _resultValue.nimSerialInterfaceTypeVariable = nimSerialInterfaceTypeVariable;
            _resultValue.optional = optional;
            return _resultValue;
        }
    }
}
