// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterfaceChannelGroupList;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface {
    /**
     * @return Channel Group List
     * 
     */
    private List<GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterfaceChannelGroupList> channelGroupLists;
    /**
     * @return Description
     * 
     */
    private String description;
    /**
     * @return Variable name
     * 
     */
    private String descriptionVariable;
    /**
     * @return Framing
     * 
     */
    private String framing;
    /**
     * @return Variable name
     * 
     */
    private String framingVariable;
    /**
     * @return Card Type
     * 
     */
    private String interfaceType;
    /**
     * @return Internal
     * 
     */
    private Boolean internal;
    /**
     * @return Line Mode
     * 
     */
    private String lineMode;
    /**
     * @return Variable name
     * 
     */
    private String lineModeVariable;
    /**
     * @return LineCode
     * 
     */
    private String linecode;
    /**
     * @return Variable name
     * 
     */
    private String linecodeVariable;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private Boolean optional;
    /**
     * @return Set length for long
     * 
     */
    private String setLengthForLong;
    /**
     * @return Set Length for short
     * 
     */
    private String setLengthForShort;
    /**
     * @return Slot number
     * 
     */
    private String slot;

    private GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface() {}
    /**
     * @return Channel Group List
     * 
     */
    public List<GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterfaceChannelGroupList> channelGroupLists() {
        return this.channelGroupLists;
    }
    /**
     * @return Description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Variable name
     * 
     */
    public String descriptionVariable() {
        return this.descriptionVariable;
    }
    /**
     * @return Framing
     * 
     */
    public String framing() {
        return this.framing;
    }
    /**
     * @return Variable name
     * 
     */
    public String framingVariable() {
        return this.framingVariable;
    }
    /**
     * @return Card Type
     * 
     */
    public String interfaceType() {
        return this.interfaceType;
    }
    /**
     * @return Internal
     * 
     */
    public Boolean internal() {
        return this.internal;
    }
    /**
     * @return Line Mode
     * 
     */
    public String lineMode() {
        return this.lineMode;
    }
    /**
     * @return Variable name
     * 
     */
    public String lineModeVariable() {
        return this.lineModeVariable;
    }
    /**
     * @return LineCode
     * 
     */
    public String linecode() {
        return this.linecode;
    }
    /**
     * @return Variable name
     * 
     */
    public String linecodeVariable() {
        return this.linecodeVariable;
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Boolean optional() {
        return this.optional;
    }
    /**
     * @return Set length for long
     * 
     */
    public String setLengthForLong() {
        return this.setLengthForLong;
    }
    /**
     * @return Set Length for short
     * 
     */
    public String setLengthForShort() {
        return this.setLengthForShort;
    }
    /**
     * @return Slot number
     * 
     */
    public String slot() {
        return this.slot;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterfaceChannelGroupList> channelGroupLists;
        private String description;
        private String descriptionVariable;
        private String framing;
        private String framingVariable;
        private String interfaceType;
        private Boolean internal;
        private String lineMode;
        private String lineModeVariable;
        private String linecode;
        private String linecodeVariable;
        private Boolean optional;
        private String setLengthForLong;
        private String setLengthForShort;
        private String slot;
        public Builder() {}
        public Builder(GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.channelGroupLists = defaults.channelGroupLists;
    	      this.description = defaults.description;
    	      this.descriptionVariable = defaults.descriptionVariable;
    	      this.framing = defaults.framing;
    	      this.framingVariable = defaults.framingVariable;
    	      this.interfaceType = defaults.interfaceType;
    	      this.internal = defaults.internal;
    	      this.lineMode = defaults.lineMode;
    	      this.lineModeVariable = defaults.lineModeVariable;
    	      this.linecode = defaults.linecode;
    	      this.linecodeVariable = defaults.linecodeVariable;
    	      this.optional = defaults.optional;
    	      this.setLengthForLong = defaults.setLengthForLong;
    	      this.setLengthForShort = defaults.setLengthForShort;
    	      this.slot = defaults.slot;
        }

        @CustomType.Setter
        public Builder channelGroupLists(List<GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterfaceChannelGroupList> channelGroupLists) {
            if (channelGroupLists == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface", "channelGroupLists");
            }
            this.channelGroupLists = channelGroupLists;
            return this;
        }
        public Builder channelGroupLists(GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterfaceChannelGroupList... channelGroupLists) {
            return channelGroupLists(List.of(channelGroupLists));
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder descriptionVariable(String descriptionVariable) {
            if (descriptionVariable == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface", "descriptionVariable");
            }
            this.descriptionVariable = descriptionVariable;
            return this;
        }
        @CustomType.Setter
        public Builder framing(String framing) {
            if (framing == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface", "framing");
            }
            this.framing = framing;
            return this;
        }
        @CustomType.Setter
        public Builder framingVariable(String framingVariable) {
            if (framingVariable == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface", "framingVariable");
            }
            this.framingVariable = framingVariable;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceType(String interfaceType) {
            if (interfaceType == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface", "interfaceType");
            }
            this.interfaceType = interfaceType;
            return this;
        }
        @CustomType.Setter
        public Builder internal(Boolean internal) {
            if (internal == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface", "internal");
            }
            this.internal = internal;
            return this;
        }
        @CustomType.Setter
        public Builder lineMode(String lineMode) {
            if (lineMode == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface", "lineMode");
            }
            this.lineMode = lineMode;
            return this;
        }
        @CustomType.Setter
        public Builder lineModeVariable(String lineModeVariable) {
            if (lineModeVariable == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface", "lineModeVariable");
            }
            this.lineModeVariable = lineModeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder linecode(String linecode) {
            if (linecode == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface", "linecode");
            }
            this.linecode = linecode;
            return this;
        }
        @CustomType.Setter
        public Builder linecodeVariable(String linecodeVariable) {
            if (linecodeVariable == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface", "linecodeVariable");
            }
            this.linecodeVariable = linecodeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder optional(Boolean optional) {
            if (optional == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface", "optional");
            }
            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder setLengthForLong(String setLengthForLong) {
            if (setLengthForLong == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface", "setLengthForLong");
            }
            this.setLengthForLong = setLengthForLong;
            return this;
        }
        @CustomType.Setter
        public Builder setLengthForShort(String setLengthForShort) {
            if (setLengthForShort == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface", "setLengthForShort");
            }
            this.setLengthForShort = setLengthForShort;
            return this;
        }
        @CustomType.Setter
        public Builder slot(String slot) {
            if (slot == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface", "slot");
            }
            this.slot = slot;
            return this;
        }
        public GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface build() {
            final var _resultValue = new GetVpnInterfaceMultilinkFeatureTemplateMultilinkInterface();
            _resultValue.channelGroupLists = channelGroupLists;
            _resultValue.description = description;
            _resultValue.descriptionVariable = descriptionVariable;
            _resultValue.framing = framing;
            _resultValue.framingVariable = framingVariable;
            _resultValue.interfaceType = interfaceType;
            _resultValue.internal = internal;
            _resultValue.lineMode = lineMode;
            _resultValue.lineModeVariable = lineModeVariable;
            _resultValue.linecode = linecode;
            _resultValue.linecodeVariable = linecodeVariable;
            _resultValue.optional = optional;
            _resultValue.setLengthForLong = setLengthForLong;
            _resultValue.setLengthForShort = setLengthForShort;
            _resultValue.slot = slot;
            return _resultValue;
        }
    }
}
