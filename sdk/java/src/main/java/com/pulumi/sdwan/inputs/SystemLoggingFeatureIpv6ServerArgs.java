// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SystemLoggingFeatureIpv6ServerArgs extends com.pulumi.resources.ResourceArgs {

    public static final SystemLoggingFeatureIpv6ServerArgs Empty = new SystemLoggingFeatureIpv6ServerArgs();

    /**
     * Set IPv6 hostname or IPv6 address of server
     * 
     */
    @Import(name="hostnameIp")
    private @Nullable Output<String> hostnameIp;

    /**
     * @return Set IPv6 hostname or IPv6 address of server
     * 
     */
    public Optional<Output<String>> hostnameIp() {
        return Optional.ofNullable(this.hostnameIp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="hostnameIpVariable")
    private @Nullable Output<String> hostnameIpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> hostnameIpVariable() {
        return Optional.ofNullable(this.hostnameIpVariable);
    }

    /**
     * Set logging level for messages logged to server
     *   - Choices: `informational`, `debugging`, `notice`, `warn`, `error`, `critical`, `alert`, `emergency`
     *   - Default value: `informational`
     * 
     */
    @Import(name="priority")
    private @Nullable Output<String> priority;

    /**
     * @return Set logging level for messages logged to server
     *   - Choices: `informational`, `debugging`, `notice`, `warn`, `error`, `critical`, `alert`, `emergency`
     *   - Default value: `informational`
     * 
     */
    public Optional<Output<String>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="priorityVariable")
    private @Nullable Output<String> priorityVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> priorityVariable() {
        return Optional.ofNullable(this.priorityVariable);
    }

    /**
     * Set interface to use to reach syslog server
     * 
     */
    @Import(name="sourceInterface")
    private @Nullable Output<String> sourceInterface;

    /**
     * @return Set interface to use to reach syslog server
     * 
     */
    public Optional<Output<String>> sourceInterface() {
        return Optional.ofNullable(this.sourceInterface);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sourceInterfaceVariable")
    private @Nullable Output<String> sourceInterfaceVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sourceInterfaceVariable() {
        return Optional.ofNullable(this.sourceInterfaceVariable);
    }

    /**
     * Enable TLS Profile
     *   - Default value: `false`
     * 
     */
    @Import(name="tlsEnable")
    private @Nullable Output<Boolean> tlsEnable;

    /**
     * @return Enable TLS Profile
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tlsEnable() {
        return Optional.ofNullable(this.tlsEnable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tlsEnableVariable")
    private @Nullable Output<String> tlsEnableVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tlsEnableVariable() {
        return Optional.ofNullable(this.tlsEnableVariable);
    }

    /**
     * Define custom profile
     *   - Default value: `false`
     * 
     */
    @Import(name="tlsPropertiesCustomProfile")
    private @Nullable Output<Boolean> tlsPropertiesCustomProfile;

    /**
     * @return Define custom profile
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tlsPropertiesCustomProfile() {
        return Optional.ofNullable(this.tlsPropertiesCustomProfile);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tlsPropertiesCustomProfileVariable")
    private @Nullable Output<String> tlsPropertiesCustomProfileVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tlsPropertiesCustomProfileVariable() {
        return Optional.ofNullable(this.tlsPropertiesCustomProfileVariable);
    }

    /**
     * Configure a TLS profile
     * 
     */
    @Import(name="tlsPropertiesProfile")
    private @Nullable Output<String> tlsPropertiesProfile;

    /**
     * @return Configure a TLS profile
     * 
     */
    public Optional<Output<String>> tlsPropertiesProfile() {
        return Optional.ofNullable(this.tlsPropertiesProfile);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tlsPropertiesProfileVariable")
    private @Nullable Output<String> tlsPropertiesProfileVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tlsPropertiesProfileVariable() {
        return Optional.ofNullable(this.tlsPropertiesProfileVariable);
    }

    /**
     * Set hostname or IPv4 address of server
     *   - Range: `0`-`65530`
     *   - Default value: `0`
     * 
     */
    @Import(name="vpn")
    private @Nullable Output<Integer> vpn;

    /**
     * @return Set hostname or IPv4 address of server
     *   - Range: `0`-`65530`
     *   - Default value: `0`
     * 
     */
    public Optional<Output<Integer>> vpn() {
        return Optional.ofNullable(this.vpn);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="vpnVariable")
    private @Nullable Output<String> vpnVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> vpnVariable() {
        return Optional.ofNullable(this.vpnVariable);
    }

    private SystemLoggingFeatureIpv6ServerArgs() {}

    private SystemLoggingFeatureIpv6ServerArgs(SystemLoggingFeatureIpv6ServerArgs $) {
        this.hostnameIp = $.hostnameIp;
        this.hostnameIpVariable = $.hostnameIpVariable;
        this.priority = $.priority;
        this.priorityVariable = $.priorityVariable;
        this.sourceInterface = $.sourceInterface;
        this.sourceInterfaceVariable = $.sourceInterfaceVariable;
        this.tlsEnable = $.tlsEnable;
        this.tlsEnableVariable = $.tlsEnableVariable;
        this.tlsPropertiesCustomProfile = $.tlsPropertiesCustomProfile;
        this.tlsPropertiesCustomProfileVariable = $.tlsPropertiesCustomProfileVariable;
        this.tlsPropertiesProfile = $.tlsPropertiesProfile;
        this.tlsPropertiesProfileVariable = $.tlsPropertiesProfileVariable;
        this.vpn = $.vpn;
        this.vpnVariable = $.vpnVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SystemLoggingFeatureIpv6ServerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SystemLoggingFeatureIpv6ServerArgs $;

        public Builder() {
            $ = new SystemLoggingFeatureIpv6ServerArgs();
        }

        public Builder(SystemLoggingFeatureIpv6ServerArgs defaults) {
            $ = new SystemLoggingFeatureIpv6ServerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostnameIp Set IPv6 hostname or IPv6 address of server
         * 
         * @return builder
         * 
         */
        public Builder hostnameIp(@Nullable Output<String> hostnameIp) {
            $.hostnameIp = hostnameIp;
            return this;
        }

        /**
         * @param hostnameIp Set IPv6 hostname or IPv6 address of server
         * 
         * @return builder
         * 
         */
        public Builder hostnameIp(String hostnameIp) {
            return hostnameIp(Output.of(hostnameIp));
        }

        /**
         * @param hostnameIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder hostnameIpVariable(@Nullable Output<String> hostnameIpVariable) {
            $.hostnameIpVariable = hostnameIpVariable;
            return this;
        }

        /**
         * @param hostnameIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder hostnameIpVariable(String hostnameIpVariable) {
            return hostnameIpVariable(Output.of(hostnameIpVariable));
        }

        /**
         * @param priority Set logging level for messages logged to server
         *   - Choices: `informational`, `debugging`, `notice`, `warn`, `error`, `critical`, `alert`, `emergency`
         *   - Default value: `informational`
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<String> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Set logging level for messages logged to server
         *   - Choices: `informational`, `debugging`, `notice`, `warn`, `error`, `critical`, `alert`, `emergency`
         *   - Default value: `informational`
         * 
         * @return builder
         * 
         */
        public Builder priority(String priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param priorityVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder priorityVariable(@Nullable Output<String> priorityVariable) {
            $.priorityVariable = priorityVariable;
            return this;
        }

        /**
         * @param priorityVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder priorityVariable(String priorityVariable) {
            return priorityVariable(Output.of(priorityVariable));
        }

        /**
         * @param sourceInterface Set interface to use to reach syslog server
         * 
         * @return builder
         * 
         */
        public Builder sourceInterface(@Nullable Output<String> sourceInterface) {
            $.sourceInterface = sourceInterface;
            return this;
        }

        /**
         * @param sourceInterface Set interface to use to reach syslog server
         * 
         * @return builder
         * 
         */
        public Builder sourceInterface(String sourceInterface) {
            return sourceInterface(Output.of(sourceInterface));
        }

        /**
         * @param sourceInterfaceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceInterfaceVariable(@Nullable Output<String> sourceInterfaceVariable) {
            $.sourceInterfaceVariable = sourceInterfaceVariable;
            return this;
        }

        /**
         * @param sourceInterfaceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceInterfaceVariable(String sourceInterfaceVariable) {
            return sourceInterfaceVariable(Output.of(sourceInterfaceVariable));
        }

        /**
         * @param tlsEnable Enable TLS Profile
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tlsEnable(@Nullable Output<Boolean> tlsEnable) {
            $.tlsEnable = tlsEnable;
            return this;
        }

        /**
         * @param tlsEnable Enable TLS Profile
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tlsEnable(Boolean tlsEnable) {
            return tlsEnable(Output.of(tlsEnable));
        }

        /**
         * @param tlsEnableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tlsEnableVariable(@Nullable Output<String> tlsEnableVariable) {
            $.tlsEnableVariable = tlsEnableVariable;
            return this;
        }

        /**
         * @param tlsEnableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tlsEnableVariable(String tlsEnableVariable) {
            return tlsEnableVariable(Output.of(tlsEnableVariable));
        }

        /**
         * @param tlsPropertiesCustomProfile Define custom profile
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tlsPropertiesCustomProfile(@Nullable Output<Boolean> tlsPropertiesCustomProfile) {
            $.tlsPropertiesCustomProfile = tlsPropertiesCustomProfile;
            return this;
        }

        /**
         * @param tlsPropertiesCustomProfile Define custom profile
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tlsPropertiesCustomProfile(Boolean tlsPropertiesCustomProfile) {
            return tlsPropertiesCustomProfile(Output.of(tlsPropertiesCustomProfile));
        }

        /**
         * @param tlsPropertiesCustomProfileVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tlsPropertiesCustomProfileVariable(@Nullable Output<String> tlsPropertiesCustomProfileVariable) {
            $.tlsPropertiesCustomProfileVariable = tlsPropertiesCustomProfileVariable;
            return this;
        }

        /**
         * @param tlsPropertiesCustomProfileVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tlsPropertiesCustomProfileVariable(String tlsPropertiesCustomProfileVariable) {
            return tlsPropertiesCustomProfileVariable(Output.of(tlsPropertiesCustomProfileVariable));
        }

        /**
         * @param tlsPropertiesProfile Configure a TLS profile
         * 
         * @return builder
         * 
         */
        public Builder tlsPropertiesProfile(@Nullable Output<String> tlsPropertiesProfile) {
            $.tlsPropertiesProfile = tlsPropertiesProfile;
            return this;
        }

        /**
         * @param tlsPropertiesProfile Configure a TLS profile
         * 
         * @return builder
         * 
         */
        public Builder tlsPropertiesProfile(String tlsPropertiesProfile) {
            return tlsPropertiesProfile(Output.of(tlsPropertiesProfile));
        }

        /**
         * @param tlsPropertiesProfileVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tlsPropertiesProfileVariable(@Nullable Output<String> tlsPropertiesProfileVariable) {
            $.tlsPropertiesProfileVariable = tlsPropertiesProfileVariable;
            return this;
        }

        /**
         * @param tlsPropertiesProfileVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tlsPropertiesProfileVariable(String tlsPropertiesProfileVariable) {
            return tlsPropertiesProfileVariable(Output.of(tlsPropertiesProfileVariable));
        }

        /**
         * @param vpn Set hostname or IPv4 address of server
         *   - Range: `0`-`65530`
         *   - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder vpn(@Nullable Output<Integer> vpn) {
            $.vpn = vpn;
            return this;
        }

        /**
         * @param vpn Set hostname or IPv4 address of server
         *   - Range: `0`-`65530`
         *   - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder vpn(Integer vpn) {
            return vpn(Output.of(vpn));
        }

        /**
         * @param vpnVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vpnVariable(@Nullable Output<String> vpnVariable) {
            $.vpnVariable = vpnVariable;
            return this;
        }

        /**
         * @param vpnVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vpnVariable(String vpnVariable) {
            return vpnVariable(Output.of(vpnVariable));
        }

        public SystemLoggingFeatureIpv6ServerArgs build() {
            return $;
        }
    }

}
