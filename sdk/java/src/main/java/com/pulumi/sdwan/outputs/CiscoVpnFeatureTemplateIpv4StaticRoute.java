// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sdwan.outputs.CiscoVpnFeatureTemplateIpv4StaticRouteNextHop;
import com.pulumi.sdwan.outputs.CiscoVpnFeatureTemplateIpv4StaticRouteTrackNextHop;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CiscoVpnFeatureTemplateIpv4StaticRoute {
    /**
     * @return Default Gateway obtained from DHCP
     *   - Default value: `false`
     * 
     */
    private @Nullable Boolean dhcp;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String dhcpVariable;
    /**
     * @return Administrative distance
     *   - Range: `1`-`255`
     *   - Default value: `1`
     * 
     */
    private @Nullable Integer distance;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String distanceVariable;
    /**
     * @return IP gateway address
     * 
     */
    private @Nullable List<CiscoVpnFeatureTemplateIpv4StaticRouteNextHop> nextHops;
    /**
     * @return null0
     *   - Default value: `false`
     * 
     */
    private @Nullable Boolean null0;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String null0Variable;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private @Nullable Boolean optional;
    /**
     * @return Prefix
     * 
     */
    private @Nullable String prefix;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String prefixVariable;
    /**
     * @return IP gateway address
     * 
     */
    private @Nullable List<CiscoVpnFeatureTemplateIpv4StaticRouteTrackNextHop> trackNextHops;
    /**
     * @return Destination VPN(!=0 or !=512) to resolve the prefix
     *   - Default value: `0`
     * 
     */
    private @Nullable Integer vpnId;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String vpnIdVariable;

    private CiscoVpnFeatureTemplateIpv4StaticRoute() {}
    /**
     * @return Default Gateway obtained from DHCP
     *   - Default value: `false`
     * 
     */
    public Optional<Boolean> dhcp() {
        return Optional.ofNullable(this.dhcp);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> dhcpVariable() {
        return Optional.ofNullable(this.dhcpVariable);
    }
    /**
     * @return Administrative distance
     *   - Range: `1`-`255`
     *   - Default value: `1`
     * 
     */
    public Optional<Integer> distance() {
        return Optional.ofNullable(this.distance);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> distanceVariable() {
        return Optional.ofNullable(this.distanceVariable);
    }
    /**
     * @return IP gateway address
     * 
     */
    public List<CiscoVpnFeatureTemplateIpv4StaticRouteNextHop> nextHops() {
        return this.nextHops == null ? List.of() : this.nextHops;
    }
    /**
     * @return null0
     *   - Default value: `false`
     * 
     */
    public Optional<Boolean> null0() {
        return Optional.ofNullable(this.null0);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> null0Variable() {
        return Optional.ofNullable(this.null0Variable);
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Boolean> optional() {
        return Optional.ofNullable(this.optional);
    }
    /**
     * @return Prefix
     * 
     */
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> prefixVariable() {
        return Optional.ofNullable(this.prefixVariable);
    }
    /**
     * @return IP gateway address
     * 
     */
    public List<CiscoVpnFeatureTemplateIpv4StaticRouteTrackNextHop> trackNextHops() {
        return this.trackNextHops == null ? List.of() : this.trackNextHops;
    }
    /**
     * @return Destination VPN(!=0 or !=512) to resolve the prefix
     *   - Default value: `0`
     * 
     */
    public Optional<Integer> vpnId() {
        return Optional.ofNullable(this.vpnId);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> vpnIdVariable() {
        return Optional.ofNullable(this.vpnIdVariable);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CiscoVpnFeatureTemplateIpv4StaticRoute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean dhcp;
        private @Nullable String dhcpVariable;
        private @Nullable Integer distance;
        private @Nullable String distanceVariable;
        private @Nullable List<CiscoVpnFeatureTemplateIpv4StaticRouteNextHop> nextHops;
        private @Nullable Boolean null0;
        private @Nullable String null0Variable;
        private @Nullable Boolean optional;
        private @Nullable String prefix;
        private @Nullable String prefixVariable;
        private @Nullable List<CiscoVpnFeatureTemplateIpv4StaticRouteTrackNextHop> trackNextHops;
        private @Nullable Integer vpnId;
        private @Nullable String vpnIdVariable;
        public Builder() {}
        public Builder(CiscoVpnFeatureTemplateIpv4StaticRoute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dhcp = defaults.dhcp;
    	      this.dhcpVariable = defaults.dhcpVariable;
    	      this.distance = defaults.distance;
    	      this.distanceVariable = defaults.distanceVariable;
    	      this.nextHops = defaults.nextHops;
    	      this.null0 = defaults.null0;
    	      this.null0Variable = defaults.null0Variable;
    	      this.optional = defaults.optional;
    	      this.prefix = defaults.prefix;
    	      this.prefixVariable = defaults.prefixVariable;
    	      this.trackNextHops = defaults.trackNextHops;
    	      this.vpnId = defaults.vpnId;
    	      this.vpnIdVariable = defaults.vpnIdVariable;
        }

        @CustomType.Setter
        public Builder dhcp(@Nullable Boolean dhcp) {

            this.dhcp = dhcp;
            return this;
        }
        @CustomType.Setter
        public Builder dhcpVariable(@Nullable String dhcpVariable) {

            this.dhcpVariable = dhcpVariable;
            return this;
        }
        @CustomType.Setter
        public Builder distance(@Nullable Integer distance) {

            this.distance = distance;
            return this;
        }
        @CustomType.Setter
        public Builder distanceVariable(@Nullable String distanceVariable) {

            this.distanceVariable = distanceVariable;
            return this;
        }
        @CustomType.Setter
        public Builder nextHops(@Nullable List<CiscoVpnFeatureTemplateIpv4StaticRouteNextHop> nextHops) {

            this.nextHops = nextHops;
            return this;
        }
        public Builder nextHops(CiscoVpnFeatureTemplateIpv4StaticRouteNextHop... nextHops) {
            return nextHops(List.of(nextHops));
        }
        @CustomType.Setter
        public Builder null0(@Nullable Boolean null0) {

            this.null0 = null0;
            return this;
        }
        @CustomType.Setter
        public Builder null0Variable(@Nullable String null0Variable) {

            this.null0Variable = null0Variable;
            return this;
        }
        @CustomType.Setter
        public Builder optional(@Nullable Boolean optional) {

            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder prefix(@Nullable String prefix) {

            this.prefix = prefix;
            return this;
        }
        @CustomType.Setter
        public Builder prefixVariable(@Nullable String prefixVariable) {

            this.prefixVariable = prefixVariable;
            return this;
        }
        @CustomType.Setter
        public Builder trackNextHops(@Nullable List<CiscoVpnFeatureTemplateIpv4StaticRouteTrackNextHop> trackNextHops) {

            this.trackNextHops = trackNextHops;
            return this;
        }
        public Builder trackNextHops(CiscoVpnFeatureTemplateIpv4StaticRouteTrackNextHop... trackNextHops) {
            return trackNextHops(List.of(trackNextHops));
        }
        @CustomType.Setter
        public Builder vpnId(@Nullable Integer vpnId) {

            this.vpnId = vpnId;
            return this;
        }
        @CustomType.Setter
        public Builder vpnIdVariable(@Nullable String vpnIdVariable) {

            this.vpnIdVariable = vpnIdVariable;
            return this;
        }
        public CiscoVpnFeatureTemplateIpv4StaticRoute build() {
            final var _resultValue = new CiscoVpnFeatureTemplateIpv4StaticRoute();
            _resultValue.dhcp = dhcp;
            _resultValue.dhcpVariable = dhcpVariable;
            _resultValue.distance = distance;
            _resultValue.distanceVariable = distanceVariable;
            _resultValue.nextHops = nextHops;
            _resultValue.null0 = null0;
            _resultValue.null0Variable = null0Variable;
            _resultValue.optional = optional;
            _resultValue.prefix = prefix;
            _resultValue.prefixVariable = prefixVariable;
            _resultValue.trackNextHops = trackNextHops;
            _resultValue.vpnId = vpnId;
            _resultValue.vpnIdVariable = vpnIdVariable;
            return _resultValue;
        }
    }
}
