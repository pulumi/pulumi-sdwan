// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.SystemBasicProfileParcelAffinityPerVrfArgs;
import com.pulumi.sdwan.inputs.SystemBasicProfileParcelGpsSmsMobileNumberArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SystemBasicProfileParcelState extends com.pulumi.resources.ResourceArgs {

    public static final SystemBasicProfileParcelState Empty = new SystemBasicProfileParcelState();

    /**
     * Collect admin-tech before reboot due to daemon failure - Default value: `true`
     * 
     */
    @Import(name="adminTechOnFailure")
    private @Nullable Output<Boolean> adminTechOnFailure;

    /**
     * @return Collect admin-tech before reboot due to daemon failure - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> adminTechOnFailure() {
        return Optional.ofNullable(this.adminTechOnFailure);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="adminTechOnFailureVariable")
    private @Nullable Output<String> adminTechOnFailureVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> adminTechOnFailureVariable() {
        return Optional.ofNullable(this.adminTechOnFailureVariable);
    }

    /**
     * Affinity Group Number - Range: `1`-`63`
     * 
     */
    @Import(name="affinityGroupNumber")
    private @Nullable Output<Integer> affinityGroupNumber;

    /**
     * @return Affinity Group Number - Range: `1`-`63`
     * 
     */
    public Optional<Output<Integer>> affinityGroupNumber() {
        return Optional.ofNullable(this.affinityGroupNumber);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="affinityGroupNumberVariable")
    private @Nullable Output<String> affinityGroupNumberVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> affinityGroupNumberVariable() {
        return Optional.ofNullable(this.affinityGroupNumberVariable);
    }

    /**
     * Affinity Group Preference
     * 
     */
    @Import(name="affinityGroupPreferences")
    private @Nullable Output<List<Integer>> affinityGroupPreferences;

    /**
     * @return Affinity Group Preference
     * 
     */
    public Optional<Output<List<Integer>>> affinityGroupPreferences() {
        return Optional.ofNullable(this.affinityGroupPreferences);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="affinityGroupPreferencesVariable")
    private @Nullable Output<String> affinityGroupPreferencesVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> affinityGroupPreferencesVariable() {
        return Optional.ofNullable(this.affinityGroupPreferencesVariable);
    }

    /**
     * Affinity Group Number for VRFs
     * 
     */
    @Import(name="affinityPerVrfs")
    private @Nullable Output<List<SystemBasicProfileParcelAffinityPerVrfArgs>> affinityPerVrfs;

    /**
     * @return Affinity Group Number for VRFs
     * 
     */
    public Optional<Output<List<SystemBasicProfileParcelAffinityPerVrfArgs>>> affinityPerVrfs() {
        return Optional.ofNullable(this.affinityPerVrfs);
    }

    /**
     * Affinity Group Preference Auto - Default value: `false`
     * 
     */
    @Import(name="affinityPreferenceAuto")
    private @Nullable Output<Boolean> affinityPreferenceAuto;

    /**
     * @return Affinity Group Preference Auto - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> affinityPreferenceAuto() {
        return Optional.ofNullable(this.affinityPreferenceAuto);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="affinityPreferenceAutoVariable")
    private @Nullable Output<String> affinityPreferenceAutoVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> affinityPreferenceAutoVariable() {
        return Optional.ofNullable(this.affinityPreferenceAutoVariable);
    }

    /**
     * Set a text description of the device
     * 
     */
    @Import(name="configDescription")
    private @Nullable Output<String> configDescription;

    /**
     * @return Set a text description of the device
     * 
     */
    public Optional<Output<String>> configDescription() {
        return Optional.ofNullable(this.configDescription);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="configDescriptionVariable")
    private @Nullable Output<String> configDescriptionVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> configDescriptionVariable() {
        return Optional.ofNullable(this.configDescriptionVariable);
    }

    /**
     * Set the console baud rate - Choices: `1200`, `2400`, `4800`, `9600`, `19200`, `38400`, `57600`, `115200` - Default
     * value: `9600`
     * 
     */
    @Import(name="consoleBaudRate")
    private @Nullable Output<String> consoleBaudRate;

    /**
     * @return Set the console baud rate - Choices: `1200`, `2400`, `4800`, `9600`, `19200`, `38400`, `57600`, `115200` - Default
     * value: `9600`
     * 
     */
    public Optional<Output<String>> consoleBaudRate() {
        return Optional.ofNullable(this.consoleBaudRate);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="consoleBaudRateVariable")
    private @Nullable Output<String> consoleBaudRateVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> consoleBaudRateVariable() {
        return Optional.ofNullable(this.consoleBaudRateVariable);
    }

    /**
     * Set the policer rate for control sessions - Range: `1`-`65535` - Default value: `300`
     * 
     */
    @Import(name="controlSessionPps")
    private @Nullable Output<Integer> controlSessionPps;

    /**
     * @return Set the policer rate for control sessions - Range: `1`-`65535` - Default value: `300`
     * 
     */
    public Optional<Output<Integer>> controlSessionPps() {
        return Optional.ofNullable(this.controlSessionPps);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="controlSessionPpsVariable")
    private @Nullable Output<String> controlSessionPpsVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> controlSessionPpsVariable() {
        return Optional.ofNullable(this.controlSessionPpsVariable);
    }

    /**
     * Configure a list of comma-separated controller groups
     * 
     */
    @Import(name="controllerGroups")
    private @Nullable Output<List<Integer>> controllerGroups;

    /**
     * @return Configure a list of comma-separated controller groups
     * 
     */
    public Optional<Output<List<Integer>>> controllerGroups() {
        return Optional.ofNullable(this.controllerGroups);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="controllerGroupsVariable")
    private @Nullable Output<String> controllerGroupsVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> controllerGroupsVariable() {
        return Optional.ofNullable(this.controllerGroupsVariable);
    }

    /**
     * The description of the profile parcel
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the profile parcel
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Device groups
     * 
     */
    @Import(name="deviceGroups")
    private @Nullable Output<List<String>> deviceGroups;

    /**
     * @return Device groups
     * 
     */
    public Optional<Output<List<String>>> deviceGroups() {
        return Optional.ofNullable(this.deviceGroups);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="deviceGroupsVariable")
    private @Nullable Output<String> deviceGroupsVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> deviceGroupsVariable() {
        return Optional.ofNullable(this.deviceGroupsVariable);
    }

    /**
     * Enable SLA Dampening and Enhanced App Routing. - Choices: `disabled`, `aggressive`, `moderate`, `conservative` - Default
     * value: `disabled`
     * 
     */
    @Import(name="enhancedAppAwareRouting")
    private @Nullable Output<String> enhancedAppAwareRouting;

    /**
     * @return Enable SLA Dampening and Enhanced App Routing. - Choices: `disabled`, `aggressive`, `moderate`, `conservative` - Default
     * value: `disabled`
     * 
     */
    public Optional<Output<String>> enhancedAppAwareRouting() {
        return Optional.ofNullable(this.enhancedAppAwareRouting);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="enhancedAppAwareRoutingVariable")
    private @Nullable Output<String> enhancedAppAwareRoutingVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> enhancedAppAwareRoutingVariable() {
        return Optional.ofNullable(this.enhancedAppAwareRoutingVariable);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId")
    private @Nullable Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Optional<Output<String>> featureProfileId() {
        return Optional.ofNullable(this.featureProfileId);
    }

    /**
     * Enable Geo fencing - Default value: `false`
     * 
     */
    @Import(name="gpsGeoFencingEnable")
    private @Nullable Output<Boolean> gpsGeoFencingEnable;

    /**
     * @return Enable Geo fencing - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> gpsGeoFencingEnable() {
        return Optional.ofNullable(this.gpsGeoFencingEnable);
    }

    /**
     * Set the device’s geo fencing range - Range: `100`-`10000` - Default value: `100`
     * 
     */
    @Import(name="gpsGeoFencingRange")
    private @Nullable Output<Integer> gpsGeoFencingRange;

    /**
     * @return Set the device’s geo fencing range - Range: `100`-`10000` - Default value: `100`
     * 
     */
    public Optional<Output<Integer>> gpsGeoFencingRange() {
        return Optional.ofNullable(this.gpsGeoFencingRange);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="gpsGeoFencingRangeVariable")
    private @Nullable Output<String> gpsGeoFencingRangeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> gpsGeoFencingRangeVariable() {
        return Optional.ofNullable(this.gpsGeoFencingRangeVariable);
    }

    /**
     * Set the device physical latitude - Range: `-90`-`90`
     * 
     */
    @Import(name="gpsLatitude")
    private @Nullable Output<Integer> gpsLatitude;

    /**
     * @return Set the device physical latitude - Range: `-90`-`90`
     * 
     */
    public Optional<Output<Integer>> gpsLatitude() {
        return Optional.ofNullable(this.gpsLatitude);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="gpsLatitudeVariable")
    private @Nullable Output<String> gpsLatitudeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> gpsLatitudeVariable() {
        return Optional.ofNullable(this.gpsLatitudeVariable);
    }

    /**
     * Set the device physical longitude - Range: `-180`-`180`
     * 
     */
    @Import(name="gpsLongitude")
    private @Nullable Output<Integer> gpsLongitude;

    /**
     * @return Set the device physical longitude - Range: `-180`-`180`
     * 
     */
    public Optional<Output<Integer>> gpsLongitude() {
        return Optional.ofNullable(this.gpsLongitude);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="gpsLongitudeVariable")
    private @Nullable Output<String> gpsLongitudeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> gpsLongitudeVariable() {
        return Optional.ofNullable(this.gpsLongitudeVariable);
    }

    /**
     * Enable device’s geo fencing SMS - Default value: `false`
     * 
     */
    @Import(name="gpsSmsEnable")
    private @Nullable Output<Boolean> gpsSmsEnable;

    /**
     * @return Enable device’s geo fencing SMS - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> gpsSmsEnable() {
        return Optional.ofNullable(this.gpsSmsEnable);
    }

    /**
     * Set device’s geo fencing SMS phone number
     * 
     */
    @Import(name="gpsSmsMobileNumbers")
    private @Nullable Output<List<SystemBasicProfileParcelGpsSmsMobileNumberArgs>> gpsSmsMobileNumbers;

    /**
     * @return Set device’s geo fencing SMS phone number
     * 
     */
    public Optional<Output<List<SystemBasicProfileParcelGpsSmsMobileNumberArgs>>> gpsSmsMobileNumbers() {
        return Optional.ofNullable(this.gpsSmsMobileNumbers);
    }

    /**
     * Idle CLI timeout in minutes - Range: `0`-`300`
     * 
     */
    @Import(name="idleTimeout")
    private @Nullable Output<Integer> idleTimeout;

    /**
     * @return Idle CLI timeout in minutes - Range: `0`-`300`
     * 
     */
    public Optional<Output<Integer>> idleTimeout() {
        return Optional.ofNullable(this.idleTimeout);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="idleTimeoutVariable")
    private @Nullable Output<String> idleTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> idleTimeoutVariable() {
        return Optional.ofNullable(this.idleTimeoutVariable);
    }

    /**
     * Set the location of the device
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Set the location of the device
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="locationVariable")
    private @Nullable Output<String> locationVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> locationVariable() {
        return Optional.ofNullable(this.locationVariable);
    }

    /**
     * Set the maximum number of OMP sessions &lt;1..100&gt; the device can have - Range: `1`-`100`
     * 
     */
    @Import(name="maxOmpSessions")
    private @Nullable Output<Integer> maxOmpSessions;

    /**
     * @return Set the maximum number of OMP sessions &lt;1..100&gt; the device can have - Range: `1`-`100`
     * 
     */
    public Optional<Output<Integer>> maxOmpSessions() {
        return Optional.ofNullable(this.maxOmpSessions);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="maxOmpSessionsVariable")
    private @Nullable Output<String> maxOmpSessionsVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> maxOmpSessionsVariable() {
        return Optional.ofNullable(this.maxOmpSessionsVariable);
    }

    /**
     * Device is multi-tenant - Default value: `false`
     * 
     */
    @Import(name="multiTenant")
    private @Nullable Output<Boolean> multiTenant;

    /**
     * @return Device is multi-tenant - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> multiTenant() {
        return Optional.ofNullable(this.multiTenant);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="multiTenantVariable")
    private @Nullable Output<String> multiTenantVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> multiTenantVariable() {
        return Optional.ofNullable(this.multiTenantVariable);
    }

    /**
     * The name of the profile parcel
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the profile parcel
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Enable or disable On-demand Tunnel - Default value: `false`
     * 
     */
    @Import(name="onDemandEnable")
    private @Nullable Output<Boolean> onDemandEnable;

    /**
     * @return Enable or disable On-demand Tunnel - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> onDemandEnable() {
        return Optional.ofNullable(this.onDemandEnable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="onDemandEnableVariable")
    private @Nullable Output<String> onDemandEnableVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> onDemandEnableVariable() {
        return Optional.ofNullable(this.onDemandEnableVariable);
    }

    /**
     * Set the idle timeout for on-demand tunnels - Range: `1`-`65535` - Default value: `10`
     * 
     */
    @Import(name="onDemandIdleTimeout")
    private @Nullable Output<Integer> onDemandIdleTimeout;

    /**
     * @return Set the idle timeout for on-demand tunnels - Range: `1`-`65535` - Default value: `10`
     * 
     */
    public Optional<Output<Integer>> onDemandIdleTimeout() {
        return Optional.ofNullable(this.onDemandIdleTimeout);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="onDemandIdleTimeoutVariable")
    private @Nullable Output<String> onDemandIdleTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> onDemandIdleTimeoutVariable() {
        return Optional.ofNullable(this.onDemandIdleTimeoutVariable);
    }

    /**
     * Set the Overlay ID - Range: `1`-`4294967295` - Default value: `1`
     * 
     */
    @Import(name="overlayId")
    private @Nullable Output<Integer> overlayId;

    /**
     * @return Set the Overlay ID - Range: `1`-`4294967295` - Default value: `1`
     * 
     */
    public Optional<Output<Integer>> overlayId() {
        return Optional.ofNullable(this.overlayId);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="overlayIdVariable")
    private @Nullable Output<String> overlayIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> overlayIdVariable() {
        return Optional.ofNullable(this.overlayIdVariable);
    }

    /**
     * Enable port hopping - Default value: `true`
     * 
     */
    @Import(name="portHopping")
    private @Nullable Output<Boolean> portHopping;

    /**
     * @return Enable port hopping - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> portHopping() {
        return Optional.ofNullable(this.portHopping);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="portHoppingVariable")
    private @Nullable Output<String> portHoppingVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> portHoppingVariable() {
        return Optional.ofNullable(this.portHoppingVariable);
    }

    /**
     * Set the TLOC port offset when multiple devices are behind a NAT - Range: `0`-`19` - Default value: `0`
     * 
     */
    @Import(name="portOffset")
    private @Nullable Output<Integer> portOffset;

    /**
     * @return Set the TLOC port offset when multiple devices are behind a NAT - Range: `0`-`19` - Default value: `0`
     * 
     */
    public Optional<Output<Integer>> portOffset() {
        return Optional.ofNullable(this.portOffset);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="portOffsetVariable")
    private @Nullable Output<String> portOffsetVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> portOffsetVariable() {
        return Optional.ofNullable(this.portOffsetVariable);
    }

    /**
     * Site Type
     * 
     */
    @Import(name="siteTypes")
    private @Nullable Output<List<String>> siteTypes;

    /**
     * @return Site Type
     * 
     */
    public Optional<Output<List<String>>> siteTypes() {
        return Optional.ofNullable(this.siteTypes);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="siteTypesVariable")
    private @Nullable Output<String> siteTypesVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> siteTypesVariable() {
        return Optional.ofNullable(this.siteTypesVariable);
    }

    /**
     * Set the timezone - Choices: `Europe/Andorra`, `Asia/Dubai`, `Asia/Kabul`, `America/Antigua`, `America/Anguilla`,
     * `Europe/Tirane`, `Asia/Yerevan`, `Africa/Luanda`, `Antarctica/McMurdo`, `Antarctica/Rothera`, `Antarctica/Palmer`,
     * `Antarctica/Mawson`, `Antarctica/Davis`, `Antarctica/Casey`, `Antarctica/Vostok`, `Antarctica/DumontDUrville`,
     * `Antarctica/Syowa`, `America/Argentina/Buenos_Aires`, `America/Argentina/Cordoba`, `America/Argentina/Salta`,
     * `America/Argentina/Jujuy`, `America/Argentina/Tucuman`, `America/Argentina/Catamarca`, `America/Argentina/La_Rioja`,
     * `America/Argentina/San_Juan`, `America/Argentina/Mendoza`, `America/Argentina/San_Luis`,
     * `America/Argentina/Rio_Gallegos`, `America/Argentina/Ushuaia`, `Pacific/Pago_Pago`, `Europe/Vienna`,
     * `Australia/Lord_Howe`, `Antarctica/Macquarie`, `Australia/Hobart`, `Australia/Currie`, `Australia/Melbourne`,
     * `Australia/Sydney`, `Australia/Broken_Hill`, `Australia/Brisbane`, `Australia/Lindeman`, `Australia/Adelaide`,
     * `Australia/Darwin`, `Australia/Perth`, `Australia/Eucla`, `America/Aruba`, `Europe/Mariehamn`, `Asia/Baku`,
     * `Europe/Sarajevo`, `America/Barbados`, `Asia/Dhaka`, `Europe/Brussels`, `Africa/Ouagadougou`, `Europe/Sofia`,
     * `Asia/Bahrain`, `Africa/Bujumbura`, `Africa/Porto-Novo`, `America/St_Barthelemy`, `Atlantic/Bermuda`, `Asia/Brunei`,
     * `America/La_Paz`, `America/Kralendijk`, `America/Noronha`, `America/Belem`, `America/Fortaleza`, `America/Recife`,
     * `America/Araguaina`, `America/Maceio`, `America/Bahia`, `America/Sao_Paulo`, `America/Campo_Grande`, `America/Cuiaba`,
     * `America/Santarem`, `America/Porto_Velho`, `America/Boa_Vista`, `America/Manaus`, `America/Eirunepe`,
     * `America/Rio_Branco`, `America/Nassau`, `Asia/Thimphu`, `Africa/Gaborone`, `Europe/Minsk`, `America/Belize`,
     * `America/St_Johns`, `America/Halifax`, `America/Glace_Bay`, `America/Moncton`, `America/Goose_Bay`,
     * `America/Blanc-Sablon`, `America/Toronto`, `America/Nipigon`, `America/Thunder_Bay`, `America/Iqaluit`,
     * `America/Pangnirtung`, `America/Resolute`, `America/Atikokan`, `America/Rankin_Inlet`, `America/Winnipeg`,
     * `America/Rainy_River`, `America/Regina`, `America/Swift_Current`, `America/Edmonton`, `America/Cambridge_Bay`,
     * `America/Yellowknife`, `America/Inuvik`, `America/Creston`, `America/Dawson_Creek`, `America/Vancouver`,
     * `America/Whitehorse`, `America/Dawson`, `Indian/Cocos`, `Africa/Kinshasa`, `Africa/Lubumbashi`, `Africa/Bangui`,
     * `Africa/Brazzaville`, `Europe/Zurich`, `Africa/Abidjan`, `Pacific/Rarotonga`, `America/Santiago`, `Pacific/Easter`,
     * `Africa/Douala`, `Asia/Shanghai`, `Asia/Harbin`, `Asia/Chongqing`, `Asia/Urumqi`, `Asia/Kashgar`, `America/Bogota`,
     * `America/Costa_Rica`, `America/Havana`, `Atlantic/Cape_Verde`, `America/Curacao`, `Indian/Christmas`, `Asia/Nicosia`,
     * `Europe/Prague`, `Europe/Berlin`, `Europe/Busingen`, `Africa/Djibouti`, `Europe/Copenhagen`, `America/Dominica`,
     * `America/Santo_Domingo`, `Africa/Algiers`, `America/Guayaquil`, `Pacific/Galapagos`, `Europe/Tallinn`, `Africa/Cairo`,
     * `Africa/El_Aaiun`, `Africa/Asmara`, `Europe/Madrid`, `Africa/Ceuta`, `Atlantic/Canary`, `Africa/Addis_Ababa`,
     * `Europe/Helsinki`, `Pacific/Fiji`, `Atlantic/Stanley`, `Pacific/Chuuk`, `Pacific/Pohnpei`, `Pacific/Kosrae`,
     * `Atlantic/Faroe`, `Europe/Paris`, `Africa/Libreville`, `Europe/London`, `America/Grenada`, `Asia/Tbilisi`,
     * `America/Cayenne`, `Europe/Guernsey`, `Africa/Accra`, `Europe/Gibraltar`, `America/Godthab`, `America/Danmarkshavn`,
     * `America/Scoresbysund`, `America/Thule`, `Africa/Banjul`, `Africa/Conakry`, `America/Guadeloupe`, `Africa/Malabo`,
     * `Europe/Athens`, `Atlantic/South_Georgia`, `America/Guatemala`, `Pacific/Guam`, `Africa/Bissau`, `America/Guyana`,
     * `Asia/Hong_Kong`, `America/Tegucigalpa`, `Europe/Zagreb`, `America/Port-au-Prince`, `Europe/Budapest`, `Asia/Jakarta`,
     * `Asia/Pontianak`, `Asia/Makassar`, `Asia/Jayapura`, `Europe/Dublin`, `Asia/Jerusalem`, `Europe/Isle_of_Man`,
     * `Asia/Kolkata`, `Indian/Chagos`, `Asia/Baghdad`, `Asia/Tehran`, `Atlantic/Reykjavik`, `Europe/Rome`, `Europe/Jersey`,
     * `America/Jamaica`, `Asia/Amman`, `Asia/Tokyo`, `Africa/Nairobi`, `Asia/Bishkek`, `Asia/Phnom_Penh`, `Pacific/Tarawa`,
     * `Pacific/Enderbury`, `Pacific/Kiritimati`, `Indian/Comoro`, `America/St_Kitts`, `Asia/Pyongyang`, `Asia/Seoul`,
     * `Asia/Kuwait`, `America/Cayman`, `Asia/Almaty`, `Asia/Qyzylorda`, `Asia/Aqtobe`, `Asia/Aqtau`, `Asia/Oral`,
     * `Asia/Vientiane`, `Asia/Beirut`, `America/St_Lucia`, `Europe/Vaduz`, `Asia/Colombo`, `Africa/Monrovia`, `Africa/Maseru`,
     * `Europe/Vilnius`, `Europe/Luxembourg`, `Europe/Riga`, `Africa/Tripoli`, `Africa/Casablanca`, `Europe/Monaco`,
     * `Europe/Chisinau`, `Europe/Podgorica`, `America/Marigot`, `Indian/Antananarivo`, `Pacific/Majuro`, `Pacific/Kwajalein`,
     * `Europe/Skopje`, `Africa/Bamako`, `Asia/Rangoon`, `Asia/Ulaanbaatar`, `Asia/Hovd`, `Asia/Choibalsan`, `Asia/Macau`,
     * `Pacific/Saipan`, `America/Martinique`, `Africa/Nouakchott`, `America/Montserrat`, `Europe/Malta`, `Indian/Mauritius`,
     * `Indian/Maldives`, `Africa/Blantyre`, `America/Mexico_City`, `America/Cancun`, `America/Merida`, `America/Monterrey`,
     * `America/Matamoros`, `America/Mazatlan`, `America/Chihuahua`, `America/Ojinaga`, `America/Hermosillo`,
     * `America/Tijuana`, `America/Santa_Isabel`, `America/Bahia_Banderas`, `Asia/Kuala_Lumpur`, `Asia/Kuching`,
     * `Africa/Maputo`, `Africa/Windhoek`, `Pacific/Noumea`, `Africa/Niamey`, `Pacific/Norfolk`, `Africa/Lagos`,
     * `America/Managua`, `Europe/Amsterdam`, `Europe/Oslo`, `Asia/Kathmandu`, `Pacific/Nauru`, `Pacific/Niue`,
     * `Pacific/Auckland`, `Pacific/Chatham`, `Asia/Muscat`, `America/Panama`, `America/Lima`, `Pacific/Tahiti`,
     * `Pacific/Marquesas`, `Pacific/Gambier`, `Pacific/Port_Moresby`, `Asia/Manila`, `Asia/Karachi`, `Europe/Warsaw`,
     * `America/Miquelon`, `Pacific/Pitcairn`, `America/Puerto_Rico`, `Asia/Gaza`, `Asia/Hebron`, `Europe/Lisbon`,
     * `Atlantic/Madeira`, `Atlantic/Azores`, `Pacific/Palau`, `America/Asuncion`, `Asia/Qatar`, `Indian/Reunion`,
     * `Europe/Bucharest`, `Europe/Belgrade`, `Europe/Kaliningrad`, `Europe/Moscow`, `Europe/Volgograd`, `Europe/Samara`,
     * `Asia/Yekaterinburg`, `Asia/Omsk`, `Asia/Novosibirsk`, `Asia/Novokuznetsk`, `Asia/Krasnoyarsk`, `Asia/Irkutsk`,
     * `Asia/Yakutsk`, `Asia/Khandyga`, `Asia/Vladivostok`, `Asia/Sakhalin`, `Asia/Ust-Nera`, `Asia/Magadan`, `Asia/Kamchatka`,
     * `Asia/Anadyr`, `Africa/Kigali`, `Asia/Riyadh`, `Pacific/Guadalcanal`, `Indian/Mahe`, `Africa/Khartoum`,
     * `Europe/Stockholm`, `Asia/Singapore`, `Atlantic/St_Helena`, `Europe/Ljubljana`, `Arctic/Longyearbyen`,
     * `Europe/Bratislava`, `Africa/Freetown`, `Europe/San_Marino`, `Africa/Dakar`, `Africa/Mogadishu`, `America/Paramaribo`,
     * `Africa/Juba`, `Africa/Sao_Tome`, `America/El_Salvador`, `America/Lower_Princes`, `Asia/Damascus`, `Africa/Mbabane`,
     * `America/Grand_Turk`, `Africa/Ndjamena`, `Indian/Kerguelen`, `Africa/Lome`, `Asia/Bangkok`, `Asia/Dushanbe`,
     * `Pacific/Fakaofo`, `Asia/Dili`, `Asia/Ashgabat`, `Africa/Tunis`, `Pacific/Tongatapu`, `Europe/Istanbul`,
     * `America/Port_of_Spain`, `Pacific/Funafuti`, `Asia/Taipei`, `Africa/Dar_es_Salaam`, `Europe/Kiev`, `Europe/Uzhgorod`,
     * `Europe/Zaporozhye`, `Europe/Simferopol`, `Africa/Kampala`, `Pacific/Johnston`, `Pacific/Midway`, `Pacific/Wake`,
     * `America/New_York`, `America/Detroit`, `America/Kentucky/Louisville`, `America/Kentucky/Monticello`,
     * `America/Indiana/Indianapolis`, `America/Indiana/Vincennes`, `America/Indiana/Winamac`, `America/Indiana/Marengo`,
     * `America/Indiana/Petersburg`, `America/Indiana/Vevay`, `America/Chicago`, `America/Indiana/Tell_City`,
     * `America/Indiana/Knox`, `America/Menominee`, `America/North_Dakota/Center`, `America/North_Dakota/New_Salem`,
     * `America/North_Dakota/Beulah`, `America/Denver`, `America/Boise`, `America/Phoenix`, `America/Los_Angeles`,
     * `America/Anchorage`, `America/Juneau`, `America/Sitka`, `America/Yakutat`, `America/Nome`, `America/Adak`,
     * `America/Metlakatla`, `Pacific/Honolulu`, `America/Montevideo`, `Asia/Samarkand`, `Asia/Tashkent`, `Europe/Vatican`,
     * `America/St_Vincent`, `America/Caracas`, `America/Tortola`, `America/St_Thomas`, `Asia/Ho_Chi_Minh`, `Pacific/Efate`,
     * `Pacific/Wallis`, `Pacific/Apia`, `Asia/Aden`, `Indian/Mayotte`, `Africa/Johannesburg`, `Africa/Lusaka`,
     * `Africa/Harare`, `UTC` - Default value: `UTC`
     * 
     */
    @Import(name="timezone")
    private @Nullable Output<String> timezone;

    /**
     * @return Set the timezone - Choices: `Europe/Andorra`, `Asia/Dubai`, `Asia/Kabul`, `America/Antigua`, `America/Anguilla`,
     * `Europe/Tirane`, `Asia/Yerevan`, `Africa/Luanda`, `Antarctica/McMurdo`, `Antarctica/Rothera`, `Antarctica/Palmer`,
     * `Antarctica/Mawson`, `Antarctica/Davis`, `Antarctica/Casey`, `Antarctica/Vostok`, `Antarctica/DumontDUrville`,
     * `Antarctica/Syowa`, `America/Argentina/Buenos_Aires`, `America/Argentina/Cordoba`, `America/Argentina/Salta`,
     * `America/Argentina/Jujuy`, `America/Argentina/Tucuman`, `America/Argentina/Catamarca`, `America/Argentina/La_Rioja`,
     * `America/Argentina/San_Juan`, `America/Argentina/Mendoza`, `America/Argentina/San_Luis`,
     * `America/Argentina/Rio_Gallegos`, `America/Argentina/Ushuaia`, `Pacific/Pago_Pago`, `Europe/Vienna`,
     * `Australia/Lord_Howe`, `Antarctica/Macquarie`, `Australia/Hobart`, `Australia/Currie`, `Australia/Melbourne`,
     * `Australia/Sydney`, `Australia/Broken_Hill`, `Australia/Brisbane`, `Australia/Lindeman`, `Australia/Adelaide`,
     * `Australia/Darwin`, `Australia/Perth`, `Australia/Eucla`, `America/Aruba`, `Europe/Mariehamn`, `Asia/Baku`,
     * `Europe/Sarajevo`, `America/Barbados`, `Asia/Dhaka`, `Europe/Brussels`, `Africa/Ouagadougou`, `Europe/Sofia`,
     * `Asia/Bahrain`, `Africa/Bujumbura`, `Africa/Porto-Novo`, `America/St_Barthelemy`, `Atlantic/Bermuda`, `Asia/Brunei`,
     * `America/La_Paz`, `America/Kralendijk`, `America/Noronha`, `America/Belem`, `America/Fortaleza`, `America/Recife`,
     * `America/Araguaina`, `America/Maceio`, `America/Bahia`, `America/Sao_Paulo`, `America/Campo_Grande`, `America/Cuiaba`,
     * `America/Santarem`, `America/Porto_Velho`, `America/Boa_Vista`, `America/Manaus`, `America/Eirunepe`,
     * `America/Rio_Branco`, `America/Nassau`, `Asia/Thimphu`, `Africa/Gaborone`, `Europe/Minsk`, `America/Belize`,
     * `America/St_Johns`, `America/Halifax`, `America/Glace_Bay`, `America/Moncton`, `America/Goose_Bay`,
     * `America/Blanc-Sablon`, `America/Toronto`, `America/Nipigon`, `America/Thunder_Bay`, `America/Iqaluit`,
     * `America/Pangnirtung`, `America/Resolute`, `America/Atikokan`, `America/Rankin_Inlet`, `America/Winnipeg`,
     * `America/Rainy_River`, `America/Regina`, `America/Swift_Current`, `America/Edmonton`, `America/Cambridge_Bay`,
     * `America/Yellowknife`, `America/Inuvik`, `America/Creston`, `America/Dawson_Creek`, `America/Vancouver`,
     * `America/Whitehorse`, `America/Dawson`, `Indian/Cocos`, `Africa/Kinshasa`, `Africa/Lubumbashi`, `Africa/Bangui`,
     * `Africa/Brazzaville`, `Europe/Zurich`, `Africa/Abidjan`, `Pacific/Rarotonga`, `America/Santiago`, `Pacific/Easter`,
     * `Africa/Douala`, `Asia/Shanghai`, `Asia/Harbin`, `Asia/Chongqing`, `Asia/Urumqi`, `Asia/Kashgar`, `America/Bogota`,
     * `America/Costa_Rica`, `America/Havana`, `Atlantic/Cape_Verde`, `America/Curacao`, `Indian/Christmas`, `Asia/Nicosia`,
     * `Europe/Prague`, `Europe/Berlin`, `Europe/Busingen`, `Africa/Djibouti`, `Europe/Copenhagen`, `America/Dominica`,
     * `America/Santo_Domingo`, `Africa/Algiers`, `America/Guayaquil`, `Pacific/Galapagos`, `Europe/Tallinn`, `Africa/Cairo`,
     * `Africa/El_Aaiun`, `Africa/Asmara`, `Europe/Madrid`, `Africa/Ceuta`, `Atlantic/Canary`, `Africa/Addis_Ababa`,
     * `Europe/Helsinki`, `Pacific/Fiji`, `Atlantic/Stanley`, `Pacific/Chuuk`, `Pacific/Pohnpei`, `Pacific/Kosrae`,
     * `Atlantic/Faroe`, `Europe/Paris`, `Africa/Libreville`, `Europe/London`, `America/Grenada`, `Asia/Tbilisi`,
     * `America/Cayenne`, `Europe/Guernsey`, `Africa/Accra`, `Europe/Gibraltar`, `America/Godthab`, `America/Danmarkshavn`,
     * `America/Scoresbysund`, `America/Thule`, `Africa/Banjul`, `Africa/Conakry`, `America/Guadeloupe`, `Africa/Malabo`,
     * `Europe/Athens`, `Atlantic/South_Georgia`, `America/Guatemala`, `Pacific/Guam`, `Africa/Bissau`, `America/Guyana`,
     * `Asia/Hong_Kong`, `America/Tegucigalpa`, `Europe/Zagreb`, `America/Port-au-Prince`, `Europe/Budapest`, `Asia/Jakarta`,
     * `Asia/Pontianak`, `Asia/Makassar`, `Asia/Jayapura`, `Europe/Dublin`, `Asia/Jerusalem`, `Europe/Isle_of_Man`,
     * `Asia/Kolkata`, `Indian/Chagos`, `Asia/Baghdad`, `Asia/Tehran`, `Atlantic/Reykjavik`, `Europe/Rome`, `Europe/Jersey`,
     * `America/Jamaica`, `Asia/Amman`, `Asia/Tokyo`, `Africa/Nairobi`, `Asia/Bishkek`, `Asia/Phnom_Penh`, `Pacific/Tarawa`,
     * `Pacific/Enderbury`, `Pacific/Kiritimati`, `Indian/Comoro`, `America/St_Kitts`, `Asia/Pyongyang`, `Asia/Seoul`,
     * `Asia/Kuwait`, `America/Cayman`, `Asia/Almaty`, `Asia/Qyzylorda`, `Asia/Aqtobe`, `Asia/Aqtau`, `Asia/Oral`,
     * `Asia/Vientiane`, `Asia/Beirut`, `America/St_Lucia`, `Europe/Vaduz`, `Asia/Colombo`, `Africa/Monrovia`, `Africa/Maseru`,
     * `Europe/Vilnius`, `Europe/Luxembourg`, `Europe/Riga`, `Africa/Tripoli`, `Africa/Casablanca`, `Europe/Monaco`,
     * `Europe/Chisinau`, `Europe/Podgorica`, `America/Marigot`, `Indian/Antananarivo`, `Pacific/Majuro`, `Pacific/Kwajalein`,
     * `Europe/Skopje`, `Africa/Bamako`, `Asia/Rangoon`, `Asia/Ulaanbaatar`, `Asia/Hovd`, `Asia/Choibalsan`, `Asia/Macau`,
     * `Pacific/Saipan`, `America/Martinique`, `Africa/Nouakchott`, `America/Montserrat`, `Europe/Malta`, `Indian/Mauritius`,
     * `Indian/Maldives`, `Africa/Blantyre`, `America/Mexico_City`, `America/Cancun`, `America/Merida`, `America/Monterrey`,
     * `America/Matamoros`, `America/Mazatlan`, `America/Chihuahua`, `America/Ojinaga`, `America/Hermosillo`,
     * `America/Tijuana`, `America/Santa_Isabel`, `America/Bahia_Banderas`, `Asia/Kuala_Lumpur`, `Asia/Kuching`,
     * `Africa/Maputo`, `Africa/Windhoek`, `Pacific/Noumea`, `Africa/Niamey`, `Pacific/Norfolk`, `Africa/Lagos`,
     * `America/Managua`, `Europe/Amsterdam`, `Europe/Oslo`, `Asia/Kathmandu`, `Pacific/Nauru`, `Pacific/Niue`,
     * `Pacific/Auckland`, `Pacific/Chatham`, `Asia/Muscat`, `America/Panama`, `America/Lima`, `Pacific/Tahiti`,
     * `Pacific/Marquesas`, `Pacific/Gambier`, `Pacific/Port_Moresby`, `Asia/Manila`, `Asia/Karachi`, `Europe/Warsaw`,
     * `America/Miquelon`, `Pacific/Pitcairn`, `America/Puerto_Rico`, `Asia/Gaza`, `Asia/Hebron`, `Europe/Lisbon`,
     * `Atlantic/Madeira`, `Atlantic/Azores`, `Pacific/Palau`, `America/Asuncion`, `Asia/Qatar`, `Indian/Reunion`,
     * `Europe/Bucharest`, `Europe/Belgrade`, `Europe/Kaliningrad`, `Europe/Moscow`, `Europe/Volgograd`, `Europe/Samara`,
     * `Asia/Yekaterinburg`, `Asia/Omsk`, `Asia/Novosibirsk`, `Asia/Novokuznetsk`, `Asia/Krasnoyarsk`, `Asia/Irkutsk`,
     * `Asia/Yakutsk`, `Asia/Khandyga`, `Asia/Vladivostok`, `Asia/Sakhalin`, `Asia/Ust-Nera`, `Asia/Magadan`, `Asia/Kamchatka`,
     * `Asia/Anadyr`, `Africa/Kigali`, `Asia/Riyadh`, `Pacific/Guadalcanal`, `Indian/Mahe`, `Africa/Khartoum`,
     * `Europe/Stockholm`, `Asia/Singapore`, `Atlantic/St_Helena`, `Europe/Ljubljana`, `Arctic/Longyearbyen`,
     * `Europe/Bratislava`, `Africa/Freetown`, `Europe/San_Marino`, `Africa/Dakar`, `Africa/Mogadishu`, `America/Paramaribo`,
     * `Africa/Juba`, `Africa/Sao_Tome`, `America/El_Salvador`, `America/Lower_Princes`, `Asia/Damascus`, `Africa/Mbabane`,
     * `America/Grand_Turk`, `Africa/Ndjamena`, `Indian/Kerguelen`, `Africa/Lome`, `Asia/Bangkok`, `Asia/Dushanbe`,
     * `Pacific/Fakaofo`, `Asia/Dili`, `Asia/Ashgabat`, `Africa/Tunis`, `Pacific/Tongatapu`, `Europe/Istanbul`,
     * `America/Port_of_Spain`, `Pacific/Funafuti`, `Asia/Taipei`, `Africa/Dar_es_Salaam`, `Europe/Kiev`, `Europe/Uzhgorod`,
     * `Europe/Zaporozhye`, `Europe/Simferopol`, `Africa/Kampala`, `Pacific/Johnston`, `Pacific/Midway`, `Pacific/Wake`,
     * `America/New_York`, `America/Detroit`, `America/Kentucky/Louisville`, `America/Kentucky/Monticello`,
     * `America/Indiana/Indianapolis`, `America/Indiana/Vincennes`, `America/Indiana/Winamac`, `America/Indiana/Marengo`,
     * `America/Indiana/Petersburg`, `America/Indiana/Vevay`, `America/Chicago`, `America/Indiana/Tell_City`,
     * `America/Indiana/Knox`, `America/Menominee`, `America/North_Dakota/Center`, `America/North_Dakota/New_Salem`,
     * `America/North_Dakota/Beulah`, `America/Denver`, `America/Boise`, `America/Phoenix`, `America/Los_Angeles`,
     * `America/Anchorage`, `America/Juneau`, `America/Sitka`, `America/Yakutat`, `America/Nome`, `America/Adak`,
     * `America/Metlakatla`, `Pacific/Honolulu`, `America/Montevideo`, `Asia/Samarkand`, `Asia/Tashkent`, `Europe/Vatican`,
     * `America/St_Vincent`, `America/Caracas`, `America/Tortola`, `America/St_Thomas`, `Asia/Ho_Chi_Minh`, `Pacific/Efate`,
     * `Pacific/Wallis`, `Pacific/Apia`, `Asia/Aden`, `Indian/Mayotte`, `Africa/Johannesburg`, `Africa/Lusaka`,
     * `Africa/Harare`, `UTC` - Default value: `UTC`
     * 
     */
    public Optional<Output<String>> timezone() {
        return Optional.ofNullable(this.timezone);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="timezoneVariable")
    private @Nullable Output<String> timezoneVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> timezoneVariable() {
        return Optional.ofNullable(this.timezoneVariable);
    }

    /**
     * Enable or disable default gateway tracking - Default value: `true`
     * 
     */
    @Import(name="trackDefaultGateway")
    private @Nullable Output<Boolean> trackDefaultGateway;

    /**
     * @return Enable or disable default gateway tracking - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> trackDefaultGateway() {
        return Optional.ofNullable(this.trackDefaultGateway);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="trackDefaultGatewayVariable")
    private @Nullable Output<String> trackDefaultGatewayVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> trackDefaultGatewayVariable() {
        return Optional.ofNullable(this.trackDefaultGatewayVariable);
    }

    /**
     * OMP Tag attached to routes based on interface tracking - Range: `1`-`4294967295`
     * 
     */
    @Import(name="trackInterfaceTag")
    private @Nullable Output<Integer> trackInterfaceTag;

    /**
     * @return OMP Tag attached to routes based on interface tracking - Range: `1`-`4294967295`
     * 
     */
    public Optional<Output<Integer>> trackInterfaceTag() {
        return Optional.ofNullable(this.trackInterfaceTag);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="trackInterfaceTagVariable")
    private @Nullable Output<String> trackInterfaceTagVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> trackInterfaceTagVariable() {
        return Optional.ofNullable(this.trackInterfaceTagVariable);
    }

    /**
     * Configure tracking of transport - Default value: `true`
     * 
     */
    @Import(name="trackTransport")
    private @Nullable Output<Boolean> trackTransport;

    /**
     * @return Configure tracking of transport - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> trackTransport() {
        return Optional.ofNullable(this.trackTransport);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="trackTransportVariable")
    private @Nullable Output<String> trackTransportVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> trackTransportVariable() {
        return Optional.ofNullable(this.trackTransportVariable);
    }

    /**
     * Enable transport gateway - Default value: `false`
     * 
     */
    @Import(name="transportGateway")
    private @Nullable Output<Boolean> transportGateway;

    /**
     * @return Enable transport gateway - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> transportGateway() {
        return Optional.ofNullable(this.transportGateway);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="transportGatewayVariable")
    private @Nullable Output<String> transportGatewayVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> transportGatewayVariable() {
        return Optional.ofNullable(this.transportGatewayVariable);
    }

    /**
     * The version of the profile parcel
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the profile parcel
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private SystemBasicProfileParcelState() {}

    private SystemBasicProfileParcelState(SystemBasicProfileParcelState $) {
        this.adminTechOnFailure = $.adminTechOnFailure;
        this.adminTechOnFailureVariable = $.adminTechOnFailureVariable;
        this.affinityGroupNumber = $.affinityGroupNumber;
        this.affinityGroupNumberVariable = $.affinityGroupNumberVariable;
        this.affinityGroupPreferences = $.affinityGroupPreferences;
        this.affinityGroupPreferencesVariable = $.affinityGroupPreferencesVariable;
        this.affinityPerVrfs = $.affinityPerVrfs;
        this.affinityPreferenceAuto = $.affinityPreferenceAuto;
        this.affinityPreferenceAutoVariable = $.affinityPreferenceAutoVariable;
        this.configDescription = $.configDescription;
        this.configDescriptionVariable = $.configDescriptionVariable;
        this.consoleBaudRate = $.consoleBaudRate;
        this.consoleBaudRateVariable = $.consoleBaudRateVariable;
        this.controlSessionPps = $.controlSessionPps;
        this.controlSessionPpsVariable = $.controlSessionPpsVariable;
        this.controllerGroups = $.controllerGroups;
        this.controllerGroupsVariable = $.controllerGroupsVariable;
        this.description = $.description;
        this.deviceGroups = $.deviceGroups;
        this.deviceGroupsVariable = $.deviceGroupsVariable;
        this.enhancedAppAwareRouting = $.enhancedAppAwareRouting;
        this.enhancedAppAwareRoutingVariable = $.enhancedAppAwareRoutingVariable;
        this.featureProfileId = $.featureProfileId;
        this.gpsGeoFencingEnable = $.gpsGeoFencingEnable;
        this.gpsGeoFencingRange = $.gpsGeoFencingRange;
        this.gpsGeoFencingRangeVariable = $.gpsGeoFencingRangeVariable;
        this.gpsLatitude = $.gpsLatitude;
        this.gpsLatitudeVariable = $.gpsLatitudeVariable;
        this.gpsLongitude = $.gpsLongitude;
        this.gpsLongitudeVariable = $.gpsLongitudeVariable;
        this.gpsSmsEnable = $.gpsSmsEnable;
        this.gpsSmsMobileNumbers = $.gpsSmsMobileNumbers;
        this.idleTimeout = $.idleTimeout;
        this.idleTimeoutVariable = $.idleTimeoutVariable;
        this.location = $.location;
        this.locationVariable = $.locationVariable;
        this.maxOmpSessions = $.maxOmpSessions;
        this.maxOmpSessionsVariable = $.maxOmpSessionsVariable;
        this.multiTenant = $.multiTenant;
        this.multiTenantVariable = $.multiTenantVariable;
        this.name = $.name;
        this.onDemandEnable = $.onDemandEnable;
        this.onDemandEnableVariable = $.onDemandEnableVariable;
        this.onDemandIdleTimeout = $.onDemandIdleTimeout;
        this.onDemandIdleTimeoutVariable = $.onDemandIdleTimeoutVariable;
        this.overlayId = $.overlayId;
        this.overlayIdVariable = $.overlayIdVariable;
        this.portHopping = $.portHopping;
        this.portHoppingVariable = $.portHoppingVariable;
        this.portOffset = $.portOffset;
        this.portOffsetVariable = $.portOffsetVariable;
        this.siteTypes = $.siteTypes;
        this.siteTypesVariable = $.siteTypesVariable;
        this.timezone = $.timezone;
        this.timezoneVariable = $.timezoneVariable;
        this.trackDefaultGateway = $.trackDefaultGateway;
        this.trackDefaultGatewayVariable = $.trackDefaultGatewayVariable;
        this.trackInterfaceTag = $.trackInterfaceTag;
        this.trackInterfaceTagVariable = $.trackInterfaceTagVariable;
        this.trackTransport = $.trackTransport;
        this.trackTransportVariable = $.trackTransportVariable;
        this.transportGateway = $.transportGateway;
        this.transportGatewayVariable = $.transportGatewayVariable;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SystemBasicProfileParcelState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SystemBasicProfileParcelState $;

        public Builder() {
            $ = new SystemBasicProfileParcelState();
        }

        public Builder(SystemBasicProfileParcelState defaults) {
            $ = new SystemBasicProfileParcelState(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminTechOnFailure Collect admin-tech before reboot due to daemon failure - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder adminTechOnFailure(@Nullable Output<Boolean> adminTechOnFailure) {
            $.adminTechOnFailure = adminTechOnFailure;
            return this;
        }

        /**
         * @param adminTechOnFailure Collect admin-tech before reboot due to daemon failure - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder adminTechOnFailure(Boolean adminTechOnFailure) {
            return adminTechOnFailure(Output.of(adminTechOnFailure));
        }

        /**
         * @param adminTechOnFailureVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder adminTechOnFailureVariable(@Nullable Output<String> adminTechOnFailureVariable) {
            $.adminTechOnFailureVariable = adminTechOnFailureVariable;
            return this;
        }

        /**
         * @param adminTechOnFailureVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder adminTechOnFailureVariable(String adminTechOnFailureVariable) {
            return adminTechOnFailureVariable(Output.of(adminTechOnFailureVariable));
        }

        /**
         * @param affinityGroupNumber Affinity Group Number - Range: `1`-`63`
         * 
         * @return builder
         * 
         */
        public Builder affinityGroupNumber(@Nullable Output<Integer> affinityGroupNumber) {
            $.affinityGroupNumber = affinityGroupNumber;
            return this;
        }

        /**
         * @param affinityGroupNumber Affinity Group Number - Range: `1`-`63`
         * 
         * @return builder
         * 
         */
        public Builder affinityGroupNumber(Integer affinityGroupNumber) {
            return affinityGroupNumber(Output.of(affinityGroupNumber));
        }

        /**
         * @param affinityGroupNumberVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder affinityGroupNumberVariable(@Nullable Output<String> affinityGroupNumberVariable) {
            $.affinityGroupNumberVariable = affinityGroupNumberVariable;
            return this;
        }

        /**
         * @param affinityGroupNumberVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder affinityGroupNumberVariable(String affinityGroupNumberVariable) {
            return affinityGroupNumberVariable(Output.of(affinityGroupNumberVariable));
        }

        /**
         * @param affinityGroupPreferences Affinity Group Preference
         * 
         * @return builder
         * 
         */
        public Builder affinityGroupPreferences(@Nullable Output<List<Integer>> affinityGroupPreferences) {
            $.affinityGroupPreferences = affinityGroupPreferences;
            return this;
        }

        /**
         * @param affinityGroupPreferences Affinity Group Preference
         * 
         * @return builder
         * 
         */
        public Builder affinityGroupPreferences(List<Integer> affinityGroupPreferences) {
            return affinityGroupPreferences(Output.of(affinityGroupPreferences));
        }

        /**
         * @param affinityGroupPreferences Affinity Group Preference
         * 
         * @return builder
         * 
         */
        public Builder affinityGroupPreferences(Integer... affinityGroupPreferences) {
            return affinityGroupPreferences(List.of(affinityGroupPreferences));
        }

        /**
         * @param affinityGroupPreferencesVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder affinityGroupPreferencesVariable(@Nullable Output<String> affinityGroupPreferencesVariable) {
            $.affinityGroupPreferencesVariable = affinityGroupPreferencesVariable;
            return this;
        }

        /**
         * @param affinityGroupPreferencesVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder affinityGroupPreferencesVariable(String affinityGroupPreferencesVariable) {
            return affinityGroupPreferencesVariable(Output.of(affinityGroupPreferencesVariable));
        }

        /**
         * @param affinityPerVrfs Affinity Group Number for VRFs
         * 
         * @return builder
         * 
         */
        public Builder affinityPerVrfs(@Nullable Output<List<SystemBasicProfileParcelAffinityPerVrfArgs>> affinityPerVrfs) {
            $.affinityPerVrfs = affinityPerVrfs;
            return this;
        }

        /**
         * @param affinityPerVrfs Affinity Group Number for VRFs
         * 
         * @return builder
         * 
         */
        public Builder affinityPerVrfs(List<SystemBasicProfileParcelAffinityPerVrfArgs> affinityPerVrfs) {
            return affinityPerVrfs(Output.of(affinityPerVrfs));
        }

        /**
         * @param affinityPerVrfs Affinity Group Number for VRFs
         * 
         * @return builder
         * 
         */
        public Builder affinityPerVrfs(SystemBasicProfileParcelAffinityPerVrfArgs... affinityPerVrfs) {
            return affinityPerVrfs(List.of(affinityPerVrfs));
        }

        /**
         * @param affinityPreferenceAuto Affinity Group Preference Auto - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder affinityPreferenceAuto(@Nullable Output<Boolean> affinityPreferenceAuto) {
            $.affinityPreferenceAuto = affinityPreferenceAuto;
            return this;
        }

        /**
         * @param affinityPreferenceAuto Affinity Group Preference Auto - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder affinityPreferenceAuto(Boolean affinityPreferenceAuto) {
            return affinityPreferenceAuto(Output.of(affinityPreferenceAuto));
        }

        /**
         * @param affinityPreferenceAutoVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder affinityPreferenceAutoVariable(@Nullable Output<String> affinityPreferenceAutoVariable) {
            $.affinityPreferenceAutoVariable = affinityPreferenceAutoVariable;
            return this;
        }

        /**
         * @param affinityPreferenceAutoVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder affinityPreferenceAutoVariable(String affinityPreferenceAutoVariable) {
            return affinityPreferenceAutoVariable(Output.of(affinityPreferenceAutoVariable));
        }

        /**
         * @param configDescription Set a text description of the device
         * 
         * @return builder
         * 
         */
        public Builder configDescription(@Nullable Output<String> configDescription) {
            $.configDescription = configDescription;
            return this;
        }

        /**
         * @param configDescription Set a text description of the device
         * 
         * @return builder
         * 
         */
        public Builder configDescription(String configDescription) {
            return configDescription(Output.of(configDescription));
        }

        /**
         * @param configDescriptionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder configDescriptionVariable(@Nullable Output<String> configDescriptionVariable) {
            $.configDescriptionVariable = configDescriptionVariable;
            return this;
        }

        /**
         * @param configDescriptionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder configDescriptionVariable(String configDescriptionVariable) {
            return configDescriptionVariable(Output.of(configDescriptionVariable));
        }

        /**
         * @param consoleBaudRate Set the console baud rate - Choices: `1200`, `2400`, `4800`, `9600`, `19200`, `38400`, `57600`, `115200` - Default
         * value: `9600`
         * 
         * @return builder
         * 
         */
        public Builder consoleBaudRate(@Nullable Output<String> consoleBaudRate) {
            $.consoleBaudRate = consoleBaudRate;
            return this;
        }

        /**
         * @param consoleBaudRate Set the console baud rate - Choices: `1200`, `2400`, `4800`, `9600`, `19200`, `38400`, `57600`, `115200` - Default
         * value: `9600`
         * 
         * @return builder
         * 
         */
        public Builder consoleBaudRate(String consoleBaudRate) {
            return consoleBaudRate(Output.of(consoleBaudRate));
        }

        /**
         * @param consoleBaudRateVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder consoleBaudRateVariable(@Nullable Output<String> consoleBaudRateVariable) {
            $.consoleBaudRateVariable = consoleBaudRateVariable;
            return this;
        }

        /**
         * @param consoleBaudRateVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder consoleBaudRateVariable(String consoleBaudRateVariable) {
            return consoleBaudRateVariable(Output.of(consoleBaudRateVariable));
        }

        /**
         * @param controlSessionPps Set the policer rate for control sessions - Range: `1`-`65535` - Default value: `300`
         * 
         * @return builder
         * 
         */
        public Builder controlSessionPps(@Nullable Output<Integer> controlSessionPps) {
            $.controlSessionPps = controlSessionPps;
            return this;
        }

        /**
         * @param controlSessionPps Set the policer rate for control sessions - Range: `1`-`65535` - Default value: `300`
         * 
         * @return builder
         * 
         */
        public Builder controlSessionPps(Integer controlSessionPps) {
            return controlSessionPps(Output.of(controlSessionPps));
        }

        /**
         * @param controlSessionPpsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder controlSessionPpsVariable(@Nullable Output<String> controlSessionPpsVariable) {
            $.controlSessionPpsVariable = controlSessionPpsVariable;
            return this;
        }

        /**
         * @param controlSessionPpsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder controlSessionPpsVariable(String controlSessionPpsVariable) {
            return controlSessionPpsVariable(Output.of(controlSessionPpsVariable));
        }

        /**
         * @param controllerGroups Configure a list of comma-separated controller groups
         * 
         * @return builder
         * 
         */
        public Builder controllerGroups(@Nullable Output<List<Integer>> controllerGroups) {
            $.controllerGroups = controllerGroups;
            return this;
        }

        /**
         * @param controllerGroups Configure a list of comma-separated controller groups
         * 
         * @return builder
         * 
         */
        public Builder controllerGroups(List<Integer> controllerGroups) {
            return controllerGroups(Output.of(controllerGroups));
        }

        /**
         * @param controllerGroups Configure a list of comma-separated controller groups
         * 
         * @return builder
         * 
         */
        public Builder controllerGroups(Integer... controllerGroups) {
            return controllerGroups(List.of(controllerGroups));
        }

        /**
         * @param controllerGroupsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder controllerGroupsVariable(@Nullable Output<String> controllerGroupsVariable) {
            $.controllerGroupsVariable = controllerGroupsVariable;
            return this;
        }

        /**
         * @param controllerGroupsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder controllerGroupsVariable(String controllerGroupsVariable) {
            return controllerGroupsVariable(Output.of(controllerGroupsVariable));
        }

        /**
         * @param description The description of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param deviceGroups Device groups
         * 
         * @return builder
         * 
         */
        public Builder deviceGroups(@Nullable Output<List<String>> deviceGroups) {
            $.deviceGroups = deviceGroups;
            return this;
        }

        /**
         * @param deviceGroups Device groups
         * 
         * @return builder
         * 
         */
        public Builder deviceGroups(List<String> deviceGroups) {
            return deviceGroups(Output.of(deviceGroups));
        }

        /**
         * @param deviceGroups Device groups
         * 
         * @return builder
         * 
         */
        public Builder deviceGroups(String... deviceGroups) {
            return deviceGroups(List.of(deviceGroups));
        }

        /**
         * @param deviceGroupsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder deviceGroupsVariable(@Nullable Output<String> deviceGroupsVariable) {
            $.deviceGroupsVariable = deviceGroupsVariable;
            return this;
        }

        /**
         * @param deviceGroupsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder deviceGroupsVariable(String deviceGroupsVariable) {
            return deviceGroupsVariable(Output.of(deviceGroupsVariable));
        }

        /**
         * @param enhancedAppAwareRouting Enable SLA Dampening and Enhanced App Routing. - Choices: `disabled`, `aggressive`, `moderate`, `conservative` - Default
         * value: `disabled`
         * 
         * @return builder
         * 
         */
        public Builder enhancedAppAwareRouting(@Nullable Output<String> enhancedAppAwareRouting) {
            $.enhancedAppAwareRouting = enhancedAppAwareRouting;
            return this;
        }

        /**
         * @param enhancedAppAwareRouting Enable SLA Dampening and Enhanced App Routing. - Choices: `disabled`, `aggressive`, `moderate`, `conservative` - Default
         * value: `disabled`
         * 
         * @return builder
         * 
         */
        public Builder enhancedAppAwareRouting(String enhancedAppAwareRouting) {
            return enhancedAppAwareRouting(Output.of(enhancedAppAwareRouting));
        }

        /**
         * @param enhancedAppAwareRoutingVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enhancedAppAwareRoutingVariable(@Nullable Output<String> enhancedAppAwareRoutingVariable) {
            $.enhancedAppAwareRoutingVariable = enhancedAppAwareRoutingVariable;
            return this;
        }

        /**
         * @param enhancedAppAwareRoutingVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enhancedAppAwareRoutingVariable(String enhancedAppAwareRoutingVariable) {
            return enhancedAppAwareRoutingVariable(Output.of(enhancedAppAwareRoutingVariable));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(@Nullable Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param gpsGeoFencingEnable Enable Geo fencing - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder gpsGeoFencingEnable(@Nullable Output<Boolean> gpsGeoFencingEnable) {
            $.gpsGeoFencingEnable = gpsGeoFencingEnable;
            return this;
        }

        /**
         * @param gpsGeoFencingEnable Enable Geo fencing - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder gpsGeoFencingEnable(Boolean gpsGeoFencingEnable) {
            return gpsGeoFencingEnable(Output.of(gpsGeoFencingEnable));
        }

        /**
         * @param gpsGeoFencingRange Set the device’s geo fencing range - Range: `100`-`10000` - Default value: `100`
         * 
         * @return builder
         * 
         */
        public Builder gpsGeoFencingRange(@Nullable Output<Integer> gpsGeoFencingRange) {
            $.gpsGeoFencingRange = gpsGeoFencingRange;
            return this;
        }

        /**
         * @param gpsGeoFencingRange Set the device’s geo fencing range - Range: `100`-`10000` - Default value: `100`
         * 
         * @return builder
         * 
         */
        public Builder gpsGeoFencingRange(Integer gpsGeoFencingRange) {
            return gpsGeoFencingRange(Output.of(gpsGeoFencingRange));
        }

        /**
         * @param gpsGeoFencingRangeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder gpsGeoFencingRangeVariable(@Nullable Output<String> gpsGeoFencingRangeVariable) {
            $.gpsGeoFencingRangeVariable = gpsGeoFencingRangeVariable;
            return this;
        }

        /**
         * @param gpsGeoFencingRangeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder gpsGeoFencingRangeVariable(String gpsGeoFencingRangeVariable) {
            return gpsGeoFencingRangeVariable(Output.of(gpsGeoFencingRangeVariable));
        }

        /**
         * @param gpsLatitude Set the device physical latitude - Range: `-90`-`90`
         * 
         * @return builder
         * 
         */
        public Builder gpsLatitude(@Nullable Output<Integer> gpsLatitude) {
            $.gpsLatitude = gpsLatitude;
            return this;
        }

        /**
         * @param gpsLatitude Set the device physical latitude - Range: `-90`-`90`
         * 
         * @return builder
         * 
         */
        public Builder gpsLatitude(Integer gpsLatitude) {
            return gpsLatitude(Output.of(gpsLatitude));
        }

        /**
         * @param gpsLatitudeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder gpsLatitudeVariable(@Nullable Output<String> gpsLatitudeVariable) {
            $.gpsLatitudeVariable = gpsLatitudeVariable;
            return this;
        }

        /**
         * @param gpsLatitudeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder gpsLatitudeVariable(String gpsLatitudeVariable) {
            return gpsLatitudeVariable(Output.of(gpsLatitudeVariable));
        }

        /**
         * @param gpsLongitude Set the device physical longitude - Range: `-180`-`180`
         * 
         * @return builder
         * 
         */
        public Builder gpsLongitude(@Nullable Output<Integer> gpsLongitude) {
            $.gpsLongitude = gpsLongitude;
            return this;
        }

        /**
         * @param gpsLongitude Set the device physical longitude - Range: `-180`-`180`
         * 
         * @return builder
         * 
         */
        public Builder gpsLongitude(Integer gpsLongitude) {
            return gpsLongitude(Output.of(gpsLongitude));
        }

        /**
         * @param gpsLongitudeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder gpsLongitudeVariable(@Nullable Output<String> gpsLongitudeVariable) {
            $.gpsLongitudeVariable = gpsLongitudeVariable;
            return this;
        }

        /**
         * @param gpsLongitudeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder gpsLongitudeVariable(String gpsLongitudeVariable) {
            return gpsLongitudeVariable(Output.of(gpsLongitudeVariable));
        }

        /**
         * @param gpsSmsEnable Enable device’s geo fencing SMS - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder gpsSmsEnable(@Nullable Output<Boolean> gpsSmsEnable) {
            $.gpsSmsEnable = gpsSmsEnable;
            return this;
        }

        /**
         * @param gpsSmsEnable Enable device’s geo fencing SMS - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder gpsSmsEnable(Boolean gpsSmsEnable) {
            return gpsSmsEnable(Output.of(gpsSmsEnable));
        }

        /**
         * @param gpsSmsMobileNumbers Set device’s geo fencing SMS phone number
         * 
         * @return builder
         * 
         */
        public Builder gpsSmsMobileNumbers(@Nullable Output<List<SystemBasicProfileParcelGpsSmsMobileNumberArgs>> gpsSmsMobileNumbers) {
            $.gpsSmsMobileNumbers = gpsSmsMobileNumbers;
            return this;
        }

        /**
         * @param gpsSmsMobileNumbers Set device’s geo fencing SMS phone number
         * 
         * @return builder
         * 
         */
        public Builder gpsSmsMobileNumbers(List<SystemBasicProfileParcelGpsSmsMobileNumberArgs> gpsSmsMobileNumbers) {
            return gpsSmsMobileNumbers(Output.of(gpsSmsMobileNumbers));
        }

        /**
         * @param gpsSmsMobileNumbers Set device’s geo fencing SMS phone number
         * 
         * @return builder
         * 
         */
        public Builder gpsSmsMobileNumbers(SystemBasicProfileParcelGpsSmsMobileNumberArgs... gpsSmsMobileNumbers) {
            return gpsSmsMobileNumbers(List.of(gpsSmsMobileNumbers));
        }

        /**
         * @param idleTimeout Idle CLI timeout in minutes - Range: `0`-`300`
         * 
         * @return builder
         * 
         */
        public Builder idleTimeout(@Nullable Output<Integer> idleTimeout) {
            $.idleTimeout = idleTimeout;
            return this;
        }

        /**
         * @param idleTimeout Idle CLI timeout in minutes - Range: `0`-`300`
         * 
         * @return builder
         * 
         */
        public Builder idleTimeout(Integer idleTimeout) {
            return idleTimeout(Output.of(idleTimeout));
        }

        /**
         * @param idleTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder idleTimeoutVariable(@Nullable Output<String> idleTimeoutVariable) {
            $.idleTimeoutVariable = idleTimeoutVariable;
            return this;
        }

        /**
         * @param idleTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder idleTimeoutVariable(String idleTimeoutVariable) {
            return idleTimeoutVariable(Output.of(idleTimeoutVariable));
        }

        /**
         * @param location Set the location of the device
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Set the location of the device
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param locationVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder locationVariable(@Nullable Output<String> locationVariable) {
            $.locationVariable = locationVariable;
            return this;
        }

        /**
         * @param locationVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder locationVariable(String locationVariable) {
            return locationVariable(Output.of(locationVariable));
        }

        /**
         * @param maxOmpSessions Set the maximum number of OMP sessions &lt;1..100&gt; the device can have - Range: `1`-`100`
         * 
         * @return builder
         * 
         */
        public Builder maxOmpSessions(@Nullable Output<Integer> maxOmpSessions) {
            $.maxOmpSessions = maxOmpSessions;
            return this;
        }

        /**
         * @param maxOmpSessions Set the maximum number of OMP sessions &lt;1..100&gt; the device can have - Range: `1`-`100`
         * 
         * @return builder
         * 
         */
        public Builder maxOmpSessions(Integer maxOmpSessions) {
            return maxOmpSessions(Output.of(maxOmpSessions));
        }

        /**
         * @param maxOmpSessionsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder maxOmpSessionsVariable(@Nullable Output<String> maxOmpSessionsVariable) {
            $.maxOmpSessionsVariable = maxOmpSessionsVariable;
            return this;
        }

        /**
         * @param maxOmpSessionsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder maxOmpSessionsVariable(String maxOmpSessionsVariable) {
            return maxOmpSessionsVariable(Output.of(maxOmpSessionsVariable));
        }

        /**
         * @param multiTenant Device is multi-tenant - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder multiTenant(@Nullable Output<Boolean> multiTenant) {
            $.multiTenant = multiTenant;
            return this;
        }

        /**
         * @param multiTenant Device is multi-tenant - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder multiTenant(Boolean multiTenant) {
            return multiTenant(Output.of(multiTenant));
        }

        /**
         * @param multiTenantVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder multiTenantVariable(@Nullable Output<String> multiTenantVariable) {
            $.multiTenantVariable = multiTenantVariable;
            return this;
        }

        /**
         * @param multiTenantVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder multiTenantVariable(String multiTenantVariable) {
            return multiTenantVariable(Output.of(multiTenantVariable));
        }

        /**
         * @param name The name of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param onDemandEnable Enable or disable On-demand Tunnel - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder onDemandEnable(@Nullable Output<Boolean> onDemandEnable) {
            $.onDemandEnable = onDemandEnable;
            return this;
        }

        /**
         * @param onDemandEnable Enable or disable On-demand Tunnel - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder onDemandEnable(Boolean onDemandEnable) {
            return onDemandEnable(Output.of(onDemandEnable));
        }

        /**
         * @param onDemandEnableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder onDemandEnableVariable(@Nullable Output<String> onDemandEnableVariable) {
            $.onDemandEnableVariable = onDemandEnableVariable;
            return this;
        }

        /**
         * @param onDemandEnableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder onDemandEnableVariable(String onDemandEnableVariable) {
            return onDemandEnableVariable(Output.of(onDemandEnableVariable));
        }

        /**
         * @param onDemandIdleTimeout Set the idle timeout for on-demand tunnels - Range: `1`-`65535` - Default value: `10`
         * 
         * @return builder
         * 
         */
        public Builder onDemandIdleTimeout(@Nullable Output<Integer> onDemandIdleTimeout) {
            $.onDemandIdleTimeout = onDemandIdleTimeout;
            return this;
        }

        /**
         * @param onDemandIdleTimeout Set the idle timeout for on-demand tunnels - Range: `1`-`65535` - Default value: `10`
         * 
         * @return builder
         * 
         */
        public Builder onDemandIdleTimeout(Integer onDemandIdleTimeout) {
            return onDemandIdleTimeout(Output.of(onDemandIdleTimeout));
        }

        /**
         * @param onDemandIdleTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder onDemandIdleTimeoutVariable(@Nullable Output<String> onDemandIdleTimeoutVariable) {
            $.onDemandIdleTimeoutVariable = onDemandIdleTimeoutVariable;
            return this;
        }

        /**
         * @param onDemandIdleTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder onDemandIdleTimeoutVariable(String onDemandIdleTimeoutVariable) {
            return onDemandIdleTimeoutVariable(Output.of(onDemandIdleTimeoutVariable));
        }

        /**
         * @param overlayId Set the Overlay ID - Range: `1`-`4294967295` - Default value: `1`
         * 
         * @return builder
         * 
         */
        public Builder overlayId(@Nullable Output<Integer> overlayId) {
            $.overlayId = overlayId;
            return this;
        }

        /**
         * @param overlayId Set the Overlay ID - Range: `1`-`4294967295` - Default value: `1`
         * 
         * @return builder
         * 
         */
        public Builder overlayId(Integer overlayId) {
            return overlayId(Output.of(overlayId));
        }

        /**
         * @param overlayIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder overlayIdVariable(@Nullable Output<String> overlayIdVariable) {
            $.overlayIdVariable = overlayIdVariable;
            return this;
        }

        /**
         * @param overlayIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder overlayIdVariable(String overlayIdVariable) {
            return overlayIdVariable(Output.of(overlayIdVariable));
        }

        /**
         * @param portHopping Enable port hopping - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder portHopping(@Nullable Output<Boolean> portHopping) {
            $.portHopping = portHopping;
            return this;
        }

        /**
         * @param portHopping Enable port hopping - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder portHopping(Boolean portHopping) {
            return portHopping(Output.of(portHopping));
        }

        /**
         * @param portHoppingVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder portHoppingVariable(@Nullable Output<String> portHoppingVariable) {
            $.portHoppingVariable = portHoppingVariable;
            return this;
        }

        /**
         * @param portHoppingVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder portHoppingVariable(String portHoppingVariable) {
            return portHoppingVariable(Output.of(portHoppingVariable));
        }

        /**
         * @param portOffset Set the TLOC port offset when multiple devices are behind a NAT - Range: `0`-`19` - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder portOffset(@Nullable Output<Integer> portOffset) {
            $.portOffset = portOffset;
            return this;
        }

        /**
         * @param portOffset Set the TLOC port offset when multiple devices are behind a NAT - Range: `0`-`19` - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder portOffset(Integer portOffset) {
            return portOffset(Output.of(portOffset));
        }

        /**
         * @param portOffsetVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder portOffsetVariable(@Nullable Output<String> portOffsetVariable) {
            $.portOffsetVariable = portOffsetVariable;
            return this;
        }

        /**
         * @param portOffsetVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder portOffsetVariable(String portOffsetVariable) {
            return portOffsetVariable(Output.of(portOffsetVariable));
        }

        /**
         * @param siteTypes Site Type
         * 
         * @return builder
         * 
         */
        public Builder siteTypes(@Nullable Output<List<String>> siteTypes) {
            $.siteTypes = siteTypes;
            return this;
        }

        /**
         * @param siteTypes Site Type
         * 
         * @return builder
         * 
         */
        public Builder siteTypes(List<String> siteTypes) {
            return siteTypes(Output.of(siteTypes));
        }

        /**
         * @param siteTypes Site Type
         * 
         * @return builder
         * 
         */
        public Builder siteTypes(String... siteTypes) {
            return siteTypes(List.of(siteTypes));
        }

        /**
         * @param siteTypesVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder siteTypesVariable(@Nullable Output<String> siteTypesVariable) {
            $.siteTypesVariable = siteTypesVariable;
            return this;
        }

        /**
         * @param siteTypesVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder siteTypesVariable(String siteTypesVariable) {
            return siteTypesVariable(Output.of(siteTypesVariable));
        }

        /**
         * @param timezone Set the timezone - Choices: `Europe/Andorra`, `Asia/Dubai`, `Asia/Kabul`, `America/Antigua`, `America/Anguilla`,
         * `Europe/Tirane`, `Asia/Yerevan`, `Africa/Luanda`, `Antarctica/McMurdo`, `Antarctica/Rothera`, `Antarctica/Palmer`,
         * `Antarctica/Mawson`, `Antarctica/Davis`, `Antarctica/Casey`, `Antarctica/Vostok`, `Antarctica/DumontDUrville`,
         * `Antarctica/Syowa`, `America/Argentina/Buenos_Aires`, `America/Argentina/Cordoba`, `America/Argentina/Salta`,
         * `America/Argentina/Jujuy`, `America/Argentina/Tucuman`, `America/Argentina/Catamarca`, `America/Argentina/La_Rioja`,
         * `America/Argentina/San_Juan`, `America/Argentina/Mendoza`, `America/Argentina/San_Luis`,
         * `America/Argentina/Rio_Gallegos`, `America/Argentina/Ushuaia`, `Pacific/Pago_Pago`, `Europe/Vienna`,
         * `Australia/Lord_Howe`, `Antarctica/Macquarie`, `Australia/Hobart`, `Australia/Currie`, `Australia/Melbourne`,
         * `Australia/Sydney`, `Australia/Broken_Hill`, `Australia/Brisbane`, `Australia/Lindeman`, `Australia/Adelaide`,
         * `Australia/Darwin`, `Australia/Perth`, `Australia/Eucla`, `America/Aruba`, `Europe/Mariehamn`, `Asia/Baku`,
         * `Europe/Sarajevo`, `America/Barbados`, `Asia/Dhaka`, `Europe/Brussels`, `Africa/Ouagadougou`, `Europe/Sofia`,
         * `Asia/Bahrain`, `Africa/Bujumbura`, `Africa/Porto-Novo`, `America/St_Barthelemy`, `Atlantic/Bermuda`, `Asia/Brunei`,
         * `America/La_Paz`, `America/Kralendijk`, `America/Noronha`, `America/Belem`, `America/Fortaleza`, `America/Recife`,
         * `America/Araguaina`, `America/Maceio`, `America/Bahia`, `America/Sao_Paulo`, `America/Campo_Grande`, `America/Cuiaba`,
         * `America/Santarem`, `America/Porto_Velho`, `America/Boa_Vista`, `America/Manaus`, `America/Eirunepe`,
         * `America/Rio_Branco`, `America/Nassau`, `Asia/Thimphu`, `Africa/Gaborone`, `Europe/Minsk`, `America/Belize`,
         * `America/St_Johns`, `America/Halifax`, `America/Glace_Bay`, `America/Moncton`, `America/Goose_Bay`,
         * `America/Blanc-Sablon`, `America/Toronto`, `America/Nipigon`, `America/Thunder_Bay`, `America/Iqaluit`,
         * `America/Pangnirtung`, `America/Resolute`, `America/Atikokan`, `America/Rankin_Inlet`, `America/Winnipeg`,
         * `America/Rainy_River`, `America/Regina`, `America/Swift_Current`, `America/Edmonton`, `America/Cambridge_Bay`,
         * `America/Yellowknife`, `America/Inuvik`, `America/Creston`, `America/Dawson_Creek`, `America/Vancouver`,
         * `America/Whitehorse`, `America/Dawson`, `Indian/Cocos`, `Africa/Kinshasa`, `Africa/Lubumbashi`, `Africa/Bangui`,
         * `Africa/Brazzaville`, `Europe/Zurich`, `Africa/Abidjan`, `Pacific/Rarotonga`, `America/Santiago`, `Pacific/Easter`,
         * `Africa/Douala`, `Asia/Shanghai`, `Asia/Harbin`, `Asia/Chongqing`, `Asia/Urumqi`, `Asia/Kashgar`, `America/Bogota`,
         * `America/Costa_Rica`, `America/Havana`, `Atlantic/Cape_Verde`, `America/Curacao`, `Indian/Christmas`, `Asia/Nicosia`,
         * `Europe/Prague`, `Europe/Berlin`, `Europe/Busingen`, `Africa/Djibouti`, `Europe/Copenhagen`, `America/Dominica`,
         * `America/Santo_Domingo`, `Africa/Algiers`, `America/Guayaquil`, `Pacific/Galapagos`, `Europe/Tallinn`, `Africa/Cairo`,
         * `Africa/El_Aaiun`, `Africa/Asmara`, `Europe/Madrid`, `Africa/Ceuta`, `Atlantic/Canary`, `Africa/Addis_Ababa`,
         * `Europe/Helsinki`, `Pacific/Fiji`, `Atlantic/Stanley`, `Pacific/Chuuk`, `Pacific/Pohnpei`, `Pacific/Kosrae`,
         * `Atlantic/Faroe`, `Europe/Paris`, `Africa/Libreville`, `Europe/London`, `America/Grenada`, `Asia/Tbilisi`,
         * `America/Cayenne`, `Europe/Guernsey`, `Africa/Accra`, `Europe/Gibraltar`, `America/Godthab`, `America/Danmarkshavn`,
         * `America/Scoresbysund`, `America/Thule`, `Africa/Banjul`, `Africa/Conakry`, `America/Guadeloupe`, `Africa/Malabo`,
         * `Europe/Athens`, `Atlantic/South_Georgia`, `America/Guatemala`, `Pacific/Guam`, `Africa/Bissau`, `America/Guyana`,
         * `Asia/Hong_Kong`, `America/Tegucigalpa`, `Europe/Zagreb`, `America/Port-au-Prince`, `Europe/Budapest`, `Asia/Jakarta`,
         * `Asia/Pontianak`, `Asia/Makassar`, `Asia/Jayapura`, `Europe/Dublin`, `Asia/Jerusalem`, `Europe/Isle_of_Man`,
         * `Asia/Kolkata`, `Indian/Chagos`, `Asia/Baghdad`, `Asia/Tehran`, `Atlantic/Reykjavik`, `Europe/Rome`, `Europe/Jersey`,
         * `America/Jamaica`, `Asia/Amman`, `Asia/Tokyo`, `Africa/Nairobi`, `Asia/Bishkek`, `Asia/Phnom_Penh`, `Pacific/Tarawa`,
         * `Pacific/Enderbury`, `Pacific/Kiritimati`, `Indian/Comoro`, `America/St_Kitts`, `Asia/Pyongyang`, `Asia/Seoul`,
         * `Asia/Kuwait`, `America/Cayman`, `Asia/Almaty`, `Asia/Qyzylorda`, `Asia/Aqtobe`, `Asia/Aqtau`, `Asia/Oral`,
         * `Asia/Vientiane`, `Asia/Beirut`, `America/St_Lucia`, `Europe/Vaduz`, `Asia/Colombo`, `Africa/Monrovia`, `Africa/Maseru`,
         * `Europe/Vilnius`, `Europe/Luxembourg`, `Europe/Riga`, `Africa/Tripoli`, `Africa/Casablanca`, `Europe/Monaco`,
         * `Europe/Chisinau`, `Europe/Podgorica`, `America/Marigot`, `Indian/Antananarivo`, `Pacific/Majuro`, `Pacific/Kwajalein`,
         * `Europe/Skopje`, `Africa/Bamako`, `Asia/Rangoon`, `Asia/Ulaanbaatar`, `Asia/Hovd`, `Asia/Choibalsan`, `Asia/Macau`,
         * `Pacific/Saipan`, `America/Martinique`, `Africa/Nouakchott`, `America/Montserrat`, `Europe/Malta`, `Indian/Mauritius`,
         * `Indian/Maldives`, `Africa/Blantyre`, `America/Mexico_City`, `America/Cancun`, `America/Merida`, `America/Monterrey`,
         * `America/Matamoros`, `America/Mazatlan`, `America/Chihuahua`, `America/Ojinaga`, `America/Hermosillo`,
         * `America/Tijuana`, `America/Santa_Isabel`, `America/Bahia_Banderas`, `Asia/Kuala_Lumpur`, `Asia/Kuching`,
         * `Africa/Maputo`, `Africa/Windhoek`, `Pacific/Noumea`, `Africa/Niamey`, `Pacific/Norfolk`, `Africa/Lagos`,
         * `America/Managua`, `Europe/Amsterdam`, `Europe/Oslo`, `Asia/Kathmandu`, `Pacific/Nauru`, `Pacific/Niue`,
         * `Pacific/Auckland`, `Pacific/Chatham`, `Asia/Muscat`, `America/Panama`, `America/Lima`, `Pacific/Tahiti`,
         * `Pacific/Marquesas`, `Pacific/Gambier`, `Pacific/Port_Moresby`, `Asia/Manila`, `Asia/Karachi`, `Europe/Warsaw`,
         * `America/Miquelon`, `Pacific/Pitcairn`, `America/Puerto_Rico`, `Asia/Gaza`, `Asia/Hebron`, `Europe/Lisbon`,
         * `Atlantic/Madeira`, `Atlantic/Azores`, `Pacific/Palau`, `America/Asuncion`, `Asia/Qatar`, `Indian/Reunion`,
         * `Europe/Bucharest`, `Europe/Belgrade`, `Europe/Kaliningrad`, `Europe/Moscow`, `Europe/Volgograd`, `Europe/Samara`,
         * `Asia/Yekaterinburg`, `Asia/Omsk`, `Asia/Novosibirsk`, `Asia/Novokuznetsk`, `Asia/Krasnoyarsk`, `Asia/Irkutsk`,
         * `Asia/Yakutsk`, `Asia/Khandyga`, `Asia/Vladivostok`, `Asia/Sakhalin`, `Asia/Ust-Nera`, `Asia/Magadan`, `Asia/Kamchatka`,
         * `Asia/Anadyr`, `Africa/Kigali`, `Asia/Riyadh`, `Pacific/Guadalcanal`, `Indian/Mahe`, `Africa/Khartoum`,
         * `Europe/Stockholm`, `Asia/Singapore`, `Atlantic/St_Helena`, `Europe/Ljubljana`, `Arctic/Longyearbyen`,
         * `Europe/Bratislava`, `Africa/Freetown`, `Europe/San_Marino`, `Africa/Dakar`, `Africa/Mogadishu`, `America/Paramaribo`,
         * `Africa/Juba`, `Africa/Sao_Tome`, `America/El_Salvador`, `America/Lower_Princes`, `Asia/Damascus`, `Africa/Mbabane`,
         * `America/Grand_Turk`, `Africa/Ndjamena`, `Indian/Kerguelen`, `Africa/Lome`, `Asia/Bangkok`, `Asia/Dushanbe`,
         * `Pacific/Fakaofo`, `Asia/Dili`, `Asia/Ashgabat`, `Africa/Tunis`, `Pacific/Tongatapu`, `Europe/Istanbul`,
         * `America/Port_of_Spain`, `Pacific/Funafuti`, `Asia/Taipei`, `Africa/Dar_es_Salaam`, `Europe/Kiev`, `Europe/Uzhgorod`,
         * `Europe/Zaporozhye`, `Europe/Simferopol`, `Africa/Kampala`, `Pacific/Johnston`, `Pacific/Midway`, `Pacific/Wake`,
         * `America/New_York`, `America/Detroit`, `America/Kentucky/Louisville`, `America/Kentucky/Monticello`,
         * `America/Indiana/Indianapolis`, `America/Indiana/Vincennes`, `America/Indiana/Winamac`, `America/Indiana/Marengo`,
         * `America/Indiana/Petersburg`, `America/Indiana/Vevay`, `America/Chicago`, `America/Indiana/Tell_City`,
         * `America/Indiana/Knox`, `America/Menominee`, `America/North_Dakota/Center`, `America/North_Dakota/New_Salem`,
         * `America/North_Dakota/Beulah`, `America/Denver`, `America/Boise`, `America/Phoenix`, `America/Los_Angeles`,
         * `America/Anchorage`, `America/Juneau`, `America/Sitka`, `America/Yakutat`, `America/Nome`, `America/Adak`,
         * `America/Metlakatla`, `Pacific/Honolulu`, `America/Montevideo`, `Asia/Samarkand`, `Asia/Tashkent`, `Europe/Vatican`,
         * `America/St_Vincent`, `America/Caracas`, `America/Tortola`, `America/St_Thomas`, `Asia/Ho_Chi_Minh`, `Pacific/Efate`,
         * `Pacific/Wallis`, `Pacific/Apia`, `Asia/Aden`, `Indian/Mayotte`, `Africa/Johannesburg`, `Africa/Lusaka`,
         * `Africa/Harare`, `UTC` - Default value: `UTC`
         * 
         * @return builder
         * 
         */
        public Builder timezone(@Nullable Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        /**
         * @param timezone Set the timezone - Choices: `Europe/Andorra`, `Asia/Dubai`, `Asia/Kabul`, `America/Antigua`, `America/Anguilla`,
         * `Europe/Tirane`, `Asia/Yerevan`, `Africa/Luanda`, `Antarctica/McMurdo`, `Antarctica/Rothera`, `Antarctica/Palmer`,
         * `Antarctica/Mawson`, `Antarctica/Davis`, `Antarctica/Casey`, `Antarctica/Vostok`, `Antarctica/DumontDUrville`,
         * `Antarctica/Syowa`, `America/Argentina/Buenos_Aires`, `America/Argentina/Cordoba`, `America/Argentina/Salta`,
         * `America/Argentina/Jujuy`, `America/Argentina/Tucuman`, `America/Argentina/Catamarca`, `America/Argentina/La_Rioja`,
         * `America/Argentina/San_Juan`, `America/Argentina/Mendoza`, `America/Argentina/San_Luis`,
         * `America/Argentina/Rio_Gallegos`, `America/Argentina/Ushuaia`, `Pacific/Pago_Pago`, `Europe/Vienna`,
         * `Australia/Lord_Howe`, `Antarctica/Macquarie`, `Australia/Hobart`, `Australia/Currie`, `Australia/Melbourne`,
         * `Australia/Sydney`, `Australia/Broken_Hill`, `Australia/Brisbane`, `Australia/Lindeman`, `Australia/Adelaide`,
         * `Australia/Darwin`, `Australia/Perth`, `Australia/Eucla`, `America/Aruba`, `Europe/Mariehamn`, `Asia/Baku`,
         * `Europe/Sarajevo`, `America/Barbados`, `Asia/Dhaka`, `Europe/Brussels`, `Africa/Ouagadougou`, `Europe/Sofia`,
         * `Asia/Bahrain`, `Africa/Bujumbura`, `Africa/Porto-Novo`, `America/St_Barthelemy`, `Atlantic/Bermuda`, `Asia/Brunei`,
         * `America/La_Paz`, `America/Kralendijk`, `America/Noronha`, `America/Belem`, `America/Fortaleza`, `America/Recife`,
         * `America/Araguaina`, `America/Maceio`, `America/Bahia`, `America/Sao_Paulo`, `America/Campo_Grande`, `America/Cuiaba`,
         * `America/Santarem`, `America/Porto_Velho`, `America/Boa_Vista`, `America/Manaus`, `America/Eirunepe`,
         * `America/Rio_Branco`, `America/Nassau`, `Asia/Thimphu`, `Africa/Gaborone`, `Europe/Minsk`, `America/Belize`,
         * `America/St_Johns`, `America/Halifax`, `America/Glace_Bay`, `America/Moncton`, `America/Goose_Bay`,
         * `America/Blanc-Sablon`, `America/Toronto`, `America/Nipigon`, `America/Thunder_Bay`, `America/Iqaluit`,
         * `America/Pangnirtung`, `America/Resolute`, `America/Atikokan`, `America/Rankin_Inlet`, `America/Winnipeg`,
         * `America/Rainy_River`, `America/Regina`, `America/Swift_Current`, `America/Edmonton`, `America/Cambridge_Bay`,
         * `America/Yellowknife`, `America/Inuvik`, `America/Creston`, `America/Dawson_Creek`, `America/Vancouver`,
         * `America/Whitehorse`, `America/Dawson`, `Indian/Cocos`, `Africa/Kinshasa`, `Africa/Lubumbashi`, `Africa/Bangui`,
         * `Africa/Brazzaville`, `Europe/Zurich`, `Africa/Abidjan`, `Pacific/Rarotonga`, `America/Santiago`, `Pacific/Easter`,
         * `Africa/Douala`, `Asia/Shanghai`, `Asia/Harbin`, `Asia/Chongqing`, `Asia/Urumqi`, `Asia/Kashgar`, `America/Bogota`,
         * `America/Costa_Rica`, `America/Havana`, `Atlantic/Cape_Verde`, `America/Curacao`, `Indian/Christmas`, `Asia/Nicosia`,
         * `Europe/Prague`, `Europe/Berlin`, `Europe/Busingen`, `Africa/Djibouti`, `Europe/Copenhagen`, `America/Dominica`,
         * `America/Santo_Domingo`, `Africa/Algiers`, `America/Guayaquil`, `Pacific/Galapagos`, `Europe/Tallinn`, `Africa/Cairo`,
         * `Africa/El_Aaiun`, `Africa/Asmara`, `Europe/Madrid`, `Africa/Ceuta`, `Atlantic/Canary`, `Africa/Addis_Ababa`,
         * `Europe/Helsinki`, `Pacific/Fiji`, `Atlantic/Stanley`, `Pacific/Chuuk`, `Pacific/Pohnpei`, `Pacific/Kosrae`,
         * `Atlantic/Faroe`, `Europe/Paris`, `Africa/Libreville`, `Europe/London`, `America/Grenada`, `Asia/Tbilisi`,
         * `America/Cayenne`, `Europe/Guernsey`, `Africa/Accra`, `Europe/Gibraltar`, `America/Godthab`, `America/Danmarkshavn`,
         * `America/Scoresbysund`, `America/Thule`, `Africa/Banjul`, `Africa/Conakry`, `America/Guadeloupe`, `Africa/Malabo`,
         * `Europe/Athens`, `Atlantic/South_Georgia`, `America/Guatemala`, `Pacific/Guam`, `Africa/Bissau`, `America/Guyana`,
         * `Asia/Hong_Kong`, `America/Tegucigalpa`, `Europe/Zagreb`, `America/Port-au-Prince`, `Europe/Budapest`, `Asia/Jakarta`,
         * `Asia/Pontianak`, `Asia/Makassar`, `Asia/Jayapura`, `Europe/Dublin`, `Asia/Jerusalem`, `Europe/Isle_of_Man`,
         * `Asia/Kolkata`, `Indian/Chagos`, `Asia/Baghdad`, `Asia/Tehran`, `Atlantic/Reykjavik`, `Europe/Rome`, `Europe/Jersey`,
         * `America/Jamaica`, `Asia/Amman`, `Asia/Tokyo`, `Africa/Nairobi`, `Asia/Bishkek`, `Asia/Phnom_Penh`, `Pacific/Tarawa`,
         * `Pacific/Enderbury`, `Pacific/Kiritimati`, `Indian/Comoro`, `America/St_Kitts`, `Asia/Pyongyang`, `Asia/Seoul`,
         * `Asia/Kuwait`, `America/Cayman`, `Asia/Almaty`, `Asia/Qyzylorda`, `Asia/Aqtobe`, `Asia/Aqtau`, `Asia/Oral`,
         * `Asia/Vientiane`, `Asia/Beirut`, `America/St_Lucia`, `Europe/Vaduz`, `Asia/Colombo`, `Africa/Monrovia`, `Africa/Maseru`,
         * `Europe/Vilnius`, `Europe/Luxembourg`, `Europe/Riga`, `Africa/Tripoli`, `Africa/Casablanca`, `Europe/Monaco`,
         * `Europe/Chisinau`, `Europe/Podgorica`, `America/Marigot`, `Indian/Antananarivo`, `Pacific/Majuro`, `Pacific/Kwajalein`,
         * `Europe/Skopje`, `Africa/Bamako`, `Asia/Rangoon`, `Asia/Ulaanbaatar`, `Asia/Hovd`, `Asia/Choibalsan`, `Asia/Macau`,
         * `Pacific/Saipan`, `America/Martinique`, `Africa/Nouakchott`, `America/Montserrat`, `Europe/Malta`, `Indian/Mauritius`,
         * `Indian/Maldives`, `Africa/Blantyre`, `America/Mexico_City`, `America/Cancun`, `America/Merida`, `America/Monterrey`,
         * `America/Matamoros`, `America/Mazatlan`, `America/Chihuahua`, `America/Ojinaga`, `America/Hermosillo`,
         * `America/Tijuana`, `America/Santa_Isabel`, `America/Bahia_Banderas`, `Asia/Kuala_Lumpur`, `Asia/Kuching`,
         * `Africa/Maputo`, `Africa/Windhoek`, `Pacific/Noumea`, `Africa/Niamey`, `Pacific/Norfolk`, `Africa/Lagos`,
         * `America/Managua`, `Europe/Amsterdam`, `Europe/Oslo`, `Asia/Kathmandu`, `Pacific/Nauru`, `Pacific/Niue`,
         * `Pacific/Auckland`, `Pacific/Chatham`, `Asia/Muscat`, `America/Panama`, `America/Lima`, `Pacific/Tahiti`,
         * `Pacific/Marquesas`, `Pacific/Gambier`, `Pacific/Port_Moresby`, `Asia/Manila`, `Asia/Karachi`, `Europe/Warsaw`,
         * `America/Miquelon`, `Pacific/Pitcairn`, `America/Puerto_Rico`, `Asia/Gaza`, `Asia/Hebron`, `Europe/Lisbon`,
         * `Atlantic/Madeira`, `Atlantic/Azores`, `Pacific/Palau`, `America/Asuncion`, `Asia/Qatar`, `Indian/Reunion`,
         * `Europe/Bucharest`, `Europe/Belgrade`, `Europe/Kaliningrad`, `Europe/Moscow`, `Europe/Volgograd`, `Europe/Samara`,
         * `Asia/Yekaterinburg`, `Asia/Omsk`, `Asia/Novosibirsk`, `Asia/Novokuznetsk`, `Asia/Krasnoyarsk`, `Asia/Irkutsk`,
         * `Asia/Yakutsk`, `Asia/Khandyga`, `Asia/Vladivostok`, `Asia/Sakhalin`, `Asia/Ust-Nera`, `Asia/Magadan`, `Asia/Kamchatka`,
         * `Asia/Anadyr`, `Africa/Kigali`, `Asia/Riyadh`, `Pacific/Guadalcanal`, `Indian/Mahe`, `Africa/Khartoum`,
         * `Europe/Stockholm`, `Asia/Singapore`, `Atlantic/St_Helena`, `Europe/Ljubljana`, `Arctic/Longyearbyen`,
         * `Europe/Bratislava`, `Africa/Freetown`, `Europe/San_Marino`, `Africa/Dakar`, `Africa/Mogadishu`, `America/Paramaribo`,
         * `Africa/Juba`, `Africa/Sao_Tome`, `America/El_Salvador`, `America/Lower_Princes`, `Asia/Damascus`, `Africa/Mbabane`,
         * `America/Grand_Turk`, `Africa/Ndjamena`, `Indian/Kerguelen`, `Africa/Lome`, `Asia/Bangkok`, `Asia/Dushanbe`,
         * `Pacific/Fakaofo`, `Asia/Dili`, `Asia/Ashgabat`, `Africa/Tunis`, `Pacific/Tongatapu`, `Europe/Istanbul`,
         * `America/Port_of_Spain`, `Pacific/Funafuti`, `Asia/Taipei`, `Africa/Dar_es_Salaam`, `Europe/Kiev`, `Europe/Uzhgorod`,
         * `Europe/Zaporozhye`, `Europe/Simferopol`, `Africa/Kampala`, `Pacific/Johnston`, `Pacific/Midway`, `Pacific/Wake`,
         * `America/New_York`, `America/Detroit`, `America/Kentucky/Louisville`, `America/Kentucky/Monticello`,
         * `America/Indiana/Indianapolis`, `America/Indiana/Vincennes`, `America/Indiana/Winamac`, `America/Indiana/Marengo`,
         * `America/Indiana/Petersburg`, `America/Indiana/Vevay`, `America/Chicago`, `America/Indiana/Tell_City`,
         * `America/Indiana/Knox`, `America/Menominee`, `America/North_Dakota/Center`, `America/North_Dakota/New_Salem`,
         * `America/North_Dakota/Beulah`, `America/Denver`, `America/Boise`, `America/Phoenix`, `America/Los_Angeles`,
         * `America/Anchorage`, `America/Juneau`, `America/Sitka`, `America/Yakutat`, `America/Nome`, `America/Adak`,
         * `America/Metlakatla`, `Pacific/Honolulu`, `America/Montevideo`, `Asia/Samarkand`, `Asia/Tashkent`, `Europe/Vatican`,
         * `America/St_Vincent`, `America/Caracas`, `America/Tortola`, `America/St_Thomas`, `Asia/Ho_Chi_Minh`, `Pacific/Efate`,
         * `Pacific/Wallis`, `Pacific/Apia`, `Asia/Aden`, `Indian/Mayotte`, `Africa/Johannesburg`, `Africa/Lusaka`,
         * `Africa/Harare`, `UTC` - Default value: `UTC`
         * 
         * @return builder
         * 
         */
        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        /**
         * @param timezoneVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder timezoneVariable(@Nullable Output<String> timezoneVariable) {
            $.timezoneVariable = timezoneVariable;
            return this;
        }

        /**
         * @param timezoneVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder timezoneVariable(String timezoneVariable) {
            return timezoneVariable(Output.of(timezoneVariable));
        }

        /**
         * @param trackDefaultGateway Enable or disable default gateway tracking - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder trackDefaultGateway(@Nullable Output<Boolean> trackDefaultGateway) {
            $.trackDefaultGateway = trackDefaultGateway;
            return this;
        }

        /**
         * @param trackDefaultGateway Enable or disable default gateway tracking - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder trackDefaultGateway(Boolean trackDefaultGateway) {
            return trackDefaultGateway(Output.of(trackDefaultGateway));
        }

        /**
         * @param trackDefaultGatewayVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackDefaultGatewayVariable(@Nullable Output<String> trackDefaultGatewayVariable) {
            $.trackDefaultGatewayVariable = trackDefaultGatewayVariable;
            return this;
        }

        /**
         * @param trackDefaultGatewayVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackDefaultGatewayVariable(String trackDefaultGatewayVariable) {
            return trackDefaultGatewayVariable(Output.of(trackDefaultGatewayVariable));
        }

        /**
         * @param trackInterfaceTag OMP Tag attached to routes based on interface tracking - Range: `1`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder trackInterfaceTag(@Nullable Output<Integer> trackInterfaceTag) {
            $.trackInterfaceTag = trackInterfaceTag;
            return this;
        }

        /**
         * @param trackInterfaceTag OMP Tag attached to routes based on interface tracking - Range: `1`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder trackInterfaceTag(Integer trackInterfaceTag) {
            return trackInterfaceTag(Output.of(trackInterfaceTag));
        }

        /**
         * @param trackInterfaceTagVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackInterfaceTagVariable(@Nullable Output<String> trackInterfaceTagVariable) {
            $.trackInterfaceTagVariable = trackInterfaceTagVariable;
            return this;
        }

        /**
         * @param trackInterfaceTagVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackInterfaceTagVariable(String trackInterfaceTagVariable) {
            return trackInterfaceTagVariable(Output.of(trackInterfaceTagVariable));
        }

        /**
         * @param trackTransport Configure tracking of transport - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder trackTransport(@Nullable Output<Boolean> trackTransport) {
            $.trackTransport = trackTransport;
            return this;
        }

        /**
         * @param trackTransport Configure tracking of transport - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder trackTransport(Boolean trackTransport) {
            return trackTransport(Output.of(trackTransport));
        }

        /**
         * @param trackTransportVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackTransportVariable(@Nullable Output<String> trackTransportVariable) {
            $.trackTransportVariable = trackTransportVariable;
            return this;
        }

        /**
         * @param trackTransportVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackTransportVariable(String trackTransportVariable) {
            return trackTransportVariable(Output.of(trackTransportVariable));
        }

        /**
         * @param transportGateway Enable transport gateway - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder transportGateway(@Nullable Output<Boolean> transportGateway) {
            $.transportGateway = transportGateway;
            return this;
        }

        /**
         * @param transportGateway Enable transport gateway - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder transportGateway(Boolean transportGateway) {
            return transportGateway(Output.of(transportGateway));
        }

        /**
         * @param transportGatewayVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder transportGatewayVariable(@Nullable Output<String> transportGatewayVariable) {
            $.transportGatewayVariable = transportGatewayVariable;
            return this;
        }

        /**
         * @param transportGatewayVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder transportGatewayVariable(String transportGatewayVariable) {
            return transportGatewayVariable(Output.of(transportGatewayVariable));
        }

        /**
         * @param version The version of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public SystemBasicProfileParcelState build() {
            return $;
        }
    }

}
