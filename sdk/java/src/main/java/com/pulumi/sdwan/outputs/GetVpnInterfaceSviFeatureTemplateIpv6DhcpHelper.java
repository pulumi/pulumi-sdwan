// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVpnInterfaceSviFeatureTemplateIpv6DhcpHelper {
    /**
     * @return DHCPv6 Helper address
     * 
     */
    private String address;
    /**
     * @return Variable name
     * 
     */
    private String addressVariable;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private Boolean optional;
    /**
     * @return DHCPv6 Helper VPN
     * 
     */
    private Integer vpnId;
    /**
     * @return Variable name
     * 
     */
    private String vpnIdVariable;

    private GetVpnInterfaceSviFeatureTemplateIpv6DhcpHelper() {}
    /**
     * @return DHCPv6 Helper address
     * 
     */
    public String address() {
        return this.address;
    }
    /**
     * @return Variable name
     * 
     */
    public String addressVariable() {
        return this.addressVariable;
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Boolean optional() {
        return this.optional;
    }
    /**
     * @return DHCPv6 Helper VPN
     * 
     */
    public Integer vpnId() {
        return this.vpnId;
    }
    /**
     * @return Variable name
     * 
     */
    public String vpnIdVariable() {
        return this.vpnIdVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpnInterfaceSviFeatureTemplateIpv6DhcpHelper defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String address;
        private String addressVariable;
        private Boolean optional;
        private Integer vpnId;
        private String vpnIdVariable;
        public Builder() {}
        public Builder(GetVpnInterfaceSviFeatureTemplateIpv6DhcpHelper defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.addressVariable = defaults.addressVariable;
    	      this.optional = defaults.optional;
    	      this.vpnId = defaults.vpnId;
    	      this.vpnIdVariable = defaults.vpnIdVariable;
        }

        @CustomType.Setter
        public Builder address(String address) {
            if (address == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceSviFeatureTemplateIpv6DhcpHelper", "address");
            }
            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder addressVariable(String addressVariable) {
            if (addressVariable == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceSviFeatureTemplateIpv6DhcpHelper", "addressVariable");
            }
            this.addressVariable = addressVariable;
            return this;
        }
        @CustomType.Setter
        public Builder optional(Boolean optional) {
            if (optional == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceSviFeatureTemplateIpv6DhcpHelper", "optional");
            }
            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder vpnId(Integer vpnId) {
            if (vpnId == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceSviFeatureTemplateIpv6DhcpHelper", "vpnId");
            }
            this.vpnId = vpnId;
            return this;
        }
        @CustomType.Setter
        public Builder vpnIdVariable(String vpnIdVariable) {
            if (vpnIdVariable == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceSviFeatureTemplateIpv6DhcpHelper", "vpnIdVariable");
            }
            this.vpnIdVariable = vpnIdVariable;
            return this;
        }
        public GetVpnInterfaceSviFeatureTemplateIpv6DhcpHelper build() {
            final var _resultValue = new GetVpnInterfaceSviFeatureTemplateIpv6DhcpHelper();
            _resultValue.address = address;
            _resultValue.addressVariable = addressVariable;
            _resultValue.optional = optional;
            _resultValue.vpnId = vpnId;
            _resultValue.vpnIdVariable = vpnIdVariable;
            return _resultValue;
        }
    }
}
