// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceRoutePolicyFeatureSequenceAction {
    private List<Integer> asPathPrepends;
    private List<String> communities;
    private Boolean communityAdditive;
    /**
     * @return Variable name
     * 
     */
    private String communityVariable;
    /**
     * @return Set Ipv4 Next Hop
     * 
     */
    private String ipv4NextHop;
    /**
     * @return Set Ipv6 Next Hop
     * 
     */
    private String ipv6NextHop;
    /**
     * @return Set Local Preference
     * 
     */
    private Integer localPreference;
    /**
     * @return Set Metric
     * 
     */
    private Integer metric;
    /**
     * @return Set Metric Type
     * 
     */
    private String metricType;
    /**
     * @return Set OMP Tag
     * 
     */
    private Integer ompTag;
    /**
     * @return Set Origin
     * 
     */
    private String origin;
    /**
     * @return Set OSPF Tag
     * 
     */
    private Integer ospfTag;
    /**
     * @return Set Weight
     * 
     */
    private Integer weight;

    private GetServiceRoutePolicyFeatureSequenceAction() {}
    public List<Integer> asPathPrepends() {
        return this.asPathPrepends;
    }
    public List<String> communities() {
        return this.communities;
    }
    public Boolean communityAdditive() {
        return this.communityAdditive;
    }
    /**
     * @return Variable name
     * 
     */
    public String communityVariable() {
        return this.communityVariable;
    }
    /**
     * @return Set Ipv4 Next Hop
     * 
     */
    public String ipv4NextHop() {
        return this.ipv4NextHop;
    }
    /**
     * @return Set Ipv6 Next Hop
     * 
     */
    public String ipv6NextHop() {
        return this.ipv6NextHop;
    }
    /**
     * @return Set Local Preference
     * 
     */
    public Integer localPreference() {
        return this.localPreference;
    }
    /**
     * @return Set Metric
     * 
     */
    public Integer metric() {
        return this.metric;
    }
    /**
     * @return Set Metric Type
     * 
     */
    public String metricType() {
        return this.metricType;
    }
    /**
     * @return Set OMP Tag
     * 
     */
    public Integer ompTag() {
        return this.ompTag;
    }
    /**
     * @return Set Origin
     * 
     */
    public String origin() {
        return this.origin;
    }
    /**
     * @return Set OSPF Tag
     * 
     */
    public Integer ospfTag() {
        return this.ospfTag;
    }
    /**
     * @return Set Weight
     * 
     */
    public Integer weight() {
        return this.weight;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceRoutePolicyFeatureSequenceAction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<Integer> asPathPrepends;
        private List<String> communities;
        private Boolean communityAdditive;
        private String communityVariable;
        private String ipv4NextHop;
        private String ipv6NextHop;
        private Integer localPreference;
        private Integer metric;
        private String metricType;
        private Integer ompTag;
        private String origin;
        private Integer ospfTag;
        private Integer weight;
        public Builder() {}
        public Builder(GetServiceRoutePolicyFeatureSequenceAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asPathPrepends = defaults.asPathPrepends;
    	      this.communities = defaults.communities;
    	      this.communityAdditive = defaults.communityAdditive;
    	      this.communityVariable = defaults.communityVariable;
    	      this.ipv4NextHop = defaults.ipv4NextHop;
    	      this.ipv6NextHop = defaults.ipv6NextHop;
    	      this.localPreference = defaults.localPreference;
    	      this.metric = defaults.metric;
    	      this.metricType = defaults.metricType;
    	      this.ompTag = defaults.ompTag;
    	      this.origin = defaults.origin;
    	      this.ospfTag = defaults.ospfTag;
    	      this.weight = defaults.weight;
        }

        @CustomType.Setter
        public Builder asPathPrepends(List<Integer> asPathPrepends) {
            if (asPathPrepends == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutePolicyFeatureSequenceAction", "asPathPrepends");
            }
            this.asPathPrepends = asPathPrepends;
            return this;
        }
        public Builder asPathPrepends(Integer... asPathPrepends) {
            return asPathPrepends(List.of(asPathPrepends));
        }
        @CustomType.Setter
        public Builder communities(List<String> communities) {
            if (communities == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutePolicyFeatureSequenceAction", "communities");
            }
            this.communities = communities;
            return this;
        }
        public Builder communities(String... communities) {
            return communities(List.of(communities));
        }
        @CustomType.Setter
        public Builder communityAdditive(Boolean communityAdditive) {
            if (communityAdditive == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutePolicyFeatureSequenceAction", "communityAdditive");
            }
            this.communityAdditive = communityAdditive;
            return this;
        }
        @CustomType.Setter
        public Builder communityVariable(String communityVariable) {
            if (communityVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutePolicyFeatureSequenceAction", "communityVariable");
            }
            this.communityVariable = communityVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4NextHop(String ipv4NextHop) {
            if (ipv4NextHop == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutePolicyFeatureSequenceAction", "ipv4NextHop");
            }
            this.ipv4NextHop = ipv4NextHop;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6NextHop(String ipv6NextHop) {
            if (ipv6NextHop == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutePolicyFeatureSequenceAction", "ipv6NextHop");
            }
            this.ipv6NextHop = ipv6NextHop;
            return this;
        }
        @CustomType.Setter
        public Builder localPreference(Integer localPreference) {
            if (localPreference == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutePolicyFeatureSequenceAction", "localPreference");
            }
            this.localPreference = localPreference;
            return this;
        }
        @CustomType.Setter
        public Builder metric(Integer metric) {
            if (metric == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutePolicyFeatureSequenceAction", "metric");
            }
            this.metric = metric;
            return this;
        }
        @CustomType.Setter
        public Builder metricType(String metricType) {
            if (metricType == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutePolicyFeatureSequenceAction", "metricType");
            }
            this.metricType = metricType;
            return this;
        }
        @CustomType.Setter
        public Builder ompTag(Integer ompTag) {
            if (ompTag == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutePolicyFeatureSequenceAction", "ompTag");
            }
            this.ompTag = ompTag;
            return this;
        }
        @CustomType.Setter
        public Builder origin(String origin) {
            if (origin == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutePolicyFeatureSequenceAction", "origin");
            }
            this.origin = origin;
            return this;
        }
        @CustomType.Setter
        public Builder ospfTag(Integer ospfTag) {
            if (ospfTag == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutePolicyFeatureSequenceAction", "ospfTag");
            }
            this.ospfTag = ospfTag;
            return this;
        }
        @CustomType.Setter
        public Builder weight(Integer weight) {
            if (weight == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutePolicyFeatureSequenceAction", "weight");
            }
            this.weight = weight;
            return this;
        }
        public GetServiceRoutePolicyFeatureSequenceAction build() {
            final var _resultValue = new GetServiceRoutePolicyFeatureSequenceAction();
            _resultValue.asPathPrepends = asPathPrepends;
            _resultValue.communities = communities;
            _resultValue.communityAdditive = communityAdditive;
            _resultValue.communityVariable = communityVariable;
            _resultValue.ipv4NextHop = ipv4NextHop;
            _resultValue.ipv6NextHop = ipv6NextHop;
            _resultValue.localPreference = localPreference;
            _resultValue.metric = metric;
            _resultValue.metricType = metricType;
            _resultValue.ompTag = ompTag;
            _resultValue.origin = origin;
            _resultValue.ospfTag = ospfTag;
            _resultValue.weight = weight;
            return _resultValue;
        }
    }
}
