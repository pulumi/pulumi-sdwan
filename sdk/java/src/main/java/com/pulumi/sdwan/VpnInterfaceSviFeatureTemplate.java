// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.VpnInterfaceSviFeatureTemplateArgs;
import com.pulumi.sdwan.inputs.VpnInterfaceSviFeatureTemplateState;
import com.pulumi.sdwan.outputs.VpnInterfaceSviFeatureTemplateIpv4AccessList;
import com.pulumi.sdwan.outputs.VpnInterfaceSviFeatureTemplateIpv4SecondaryAddress;
import com.pulumi.sdwan.outputs.VpnInterfaceSviFeatureTemplateIpv4Vrrp;
import com.pulumi.sdwan.outputs.VpnInterfaceSviFeatureTemplateIpv6AccessList;
import com.pulumi.sdwan.outputs.VpnInterfaceSviFeatureTemplateIpv6DhcpHelper;
import com.pulumi.sdwan.outputs.VpnInterfaceSviFeatureTemplateIpv6SecondaryAddress;
import com.pulumi.sdwan.outputs.VpnInterfaceSviFeatureTemplateIpv6Vrrp;
import com.pulumi.sdwan.outputs.VpnInterfaceSviFeatureTemplatePolicer;
import com.pulumi.sdwan.outputs.VpnInterfaceSviFeatureTemplateStaticArpEntry;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a VPN Interface SVI feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * ```sh
 * $ pulumi import sdwan:index/vpnInterfaceSviFeatureTemplate:VpnInterfaceSviFeatureTemplate example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/vpnInterfaceSviFeatureTemplate:VpnInterfaceSviFeatureTemplate")
public class VpnInterfaceSviFeatureTemplate extends com.pulumi.resources.CustomResource {
    /**
     * Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds
     *   - Range: `0`-`2678400`
     *   - Default value: `1200`
     * 
     */
    @Export(name="arpTimeout", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> arpTimeout;

    /**
     * @return Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds
     *   - Range: `0`-`2678400`
     *   - Default value: `1200`
     * 
     */
    public Output<Optional<Integer>> arpTimeout() {
        return Codegen.optional(this.arpTimeout);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="arpTimeoutVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> arpTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> arpTimeoutVariable() {
        return Codegen.optional(this.arpTimeoutVariable);
    }
    /**
     * The description of the feature template
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return The description of the feature template
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    @Export(name="deviceTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> deviceTypes;

    /**
     * @return List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    public Output<List<String>> deviceTypes() {
        return this.deviceTypes;
    }
    /**
     * Interface name: VLAN 1 - VLAN 4094 when present
     * 
     */
    @Export(name="ifName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ifName;

    /**
     * @return Interface name: VLAN 1 - VLAN 4094 when present
     * 
     */
    public Output<Optional<String>> ifName() {
        return Codegen.optional(this.ifName);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ifNameVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ifNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ifNameVariable() {
        return Codegen.optional(this.ifNameVariable);
    }
    /**
     * Interface description
     * 
     */
    @Export(name="interfaceDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceDescription;

    /**
     * @return Interface description
     * 
     */
    public Output<Optional<String>> interfaceDescription() {
        return Codegen.optional(this.interfaceDescription);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="interfaceDescriptionVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceDescriptionVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> interfaceDescriptionVariable() {
        return Codegen.optional(this.interfaceDescriptionVariable);
    }
    /**
     * IP Directed-Broadcast
     *   - Default value: `false`
     * 
     */
    @Export(name="ipDirectedBroadcast", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipDirectedBroadcast;

    /**
     * @return IP Directed-Broadcast
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> ipDirectedBroadcast() {
        return Codegen.optional(this.ipDirectedBroadcast);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipDirectedBroadcastVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipDirectedBroadcastVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipDirectedBroadcastVariable() {
        return Codegen.optional(this.ipDirectedBroadcastVariable);
    }
    /**
     * IP MTU &lt;576..Interface MTU&gt;, in bytes
     *   - Range: `576`-`9216`
     *   - Default value: `1500`
     * 
     */
    @Export(name="ipMtu", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipMtu;

    /**
     * @return IP MTU &lt;576..Interface MTU&gt;, in bytes
     *   - Range: `576`-`9216`
     *   - Default value: `1500`
     * 
     */
    public Output<Optional<Integer>> ipMtu() {
        return Codegen.optional(this.ipMtu);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipMtuVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipMtuVariable() {
        return Codegen.optional(this.ipMtuVariable);
    }
    /**
     * Apply ACL
     * 
     */
    @Export(name="ipv4AccessLists", refs={List.class,VpnInterfaceSviFeatureTemplateIpv4AccessList.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VpnInterfaceSviFeatureTemplateIpv4AccessList>> ipv4AccessLists;

    /**
     * @return Apply ACL
     * 
     */
    public Output<Optional<List<VpnInterfaceSviFeatureTemplateIpv4AccessList>>> ipv4AccessLists() {
        return Codegen.optional(this.ipv4AccessLists);
    }
    /**
     * Assign IPv4 address
     * 
     */
    @Export(name="ipv4Address", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4Address;

    /**
     * @return Assign IPv4 address
     * 
     */
    public Output<Optional<String>> ipv4Address() {
        return Codegen.optional(this.ipv4Address);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4AddressVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4AddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4AddressVariable() {
        return Codegen.optional(this.ipv4AddressVariable);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4DhcpHelperVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4DhcpHelperVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4DhcpHelperVariable() {
        return Codegen.optional(this.ipv4DhcpHelperVariable);
    }
    /**
     * List of DHCP helper addresses
     * 
     */
    @Export(name="ipv4DhcpHelpers", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> ipv4DhcpHelpers;

    /**
     * @return List of DHCP helper addresses
     * 
     */
    public Output<Optional<List<String>>> ipv4DhcpHelpers() {
        return Codegen.optional(this.ipv4DhcpHelpers);
    }
    /**
     * Assign secondary IP addresses
     * 
     */
    @Export(name="ipv4SecondaryAddresses", refs={List.class,VpnInterfaceSviFeatureTemplateIpv4SecondaryAddress.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VpnInterfaceSviFeatureTemplateIpv4SecondaryAddress>> ipv4SecondaryAddresses;

    /**
     * @return Assign secondary IP addresses
     * 
     */
    public Output<Optional<List<VpnInterfaceSviFeatureTemplateIpv4SecondaryAddress>>> ipv4SecondaryAddresses() {
        return Codegen.optional(this.ipv4SecondaryAddresses);
    }
    /**
     * Enable VRRP
     * 
     */
    @Export(name="ipv4Vrrps", refs={List.class,VpnInterfaceSviFeatureTemplateIpv4Vrrp.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VpnInterfaceSviFeatureTemplateIpv4Vrrp>> ipv4Vrrps;

    /**
     * @return Enable VRRP
     * 
     */
    public Output<Optional<List<VpnInterfaceSviFeatureTemplateIpv4Vrrp>>> ipv4Vrrps() {
        return Codegen.optional(this.ipv4Vrrps);
    }
    /**
     * Apply ACL
     * 
     */
    @Export(name="ipv6AccessLists", refs={List.class,VpnInterfaceSviFeatureTemplateIpv6AccessList.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VpnInterfaceSviFeatureTemplateIpv6AccessList>> ipv6AccessLists;

    /**
     * @return Apply ACL
     * 
     */
    public Output<Optional<List<VpnInterfaceSviFeatureTemplateIpv6AccessList>>> ipv6AccessLists() {
        return Codegen.optional(this.ipv6AccessLists);
    }
    /**
     * Assign IPv6 address
     * 
     */
    @Export(name="ipv6Address", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6Address;

    /**
     * @return Assign IPv6 address
     * 
     */
    public Output<Optional<String>> ipv6Address() {
        return Codegen.optional(this.ipv6Address);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6AddressVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6AddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6AddressVariable() {
        return Codegen.optional(this.ipv6AddressVariable);
    }
    /**
     * Enable DHCPv6
     *   - Default value: `false`
     * 
     */
    @Export(name="ipv6DhcpClient", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipv6DhcpClient;

    /**
     * @return Enable DHCPv6
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> ipv6DhcpClient() {
        return Codegen.optional(this.ipv6DhcpClient);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6DhcpClientVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6DhcpClientVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6DhcpClientVariable() {
        return Codegen.optional(this.ipv6DhcpClientVariable);
    }
    /**
     * Set administrative distance for DHCP default route
     *   - Range: `1`-`65536`
     *   - Default value: `1`
     * 
     */
    @Export(name="ipv6DhcpDistance", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv6DhcpDistance;

    /**
     * @return Set administrative distance for DHCP default route
     *   - Range: `1`-`65536`
     *   - Default value: `1`
     * 
     */
    public Output<Optional<Integer>> ipv6DhcpDistance() {
        return Codegen.optional(this.ipv6DhcpDistance);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6DhcpDistanceVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6DhcpDistanceVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6DhcpDistanceVariable() {
        return Codegen.optional(this.ipv6DhcpDistanceVariable);
    }
    /**
     * DHCPv6 Helper
     * 
     */
    @Export(name="ipv6DhcpHelpers", refs={List.class,VpnInterfaceSviFeatureTemplateIpv6DhcpHelper.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VpnInterfaceSviFeatureTemplateIpv6DhcpHelper>> ipv6DhcpHelpers;

    /**
     * @return DHCPv6 Helper
     * 
     */
    public Output<Optional<List<VpnInterfaceSviFeatureTemplateIpv6DhcpHelper>>> ipv6DhcpHelpers() {
        return Codegen.optional(this.ipv6DhcpHelpers);
    }
    /**
     * Enable DHCPv6 rapid commit
     *   - Default value: `false`
     * 
     */
    @Export(name="ipv6DhcpRapidCommit", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipv6DhcpRapidCommit;

    /**
     * @return Enable DHCPv6 rapid commit
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> ipv6DhcpRapidCommit() {
        return Codegen.optional(this.ipv6DhcpRapidCommit);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6DhcpRapidCommitVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6DhcpRapidCommitVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6DhcpRapidCommitVariable() {
        return Codegen.optional(this.ipv6DhcpRapidCommitVariable);
    }
    /**
     * Assign secondary IPv6 addresses
     * 
     */
    @Export(name="ipv6SecondaryAddresses", refs={List.class,VpnInterfaceSviFeatureTemplateIpv6SecondaryAddress.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VpnInterfaceSviFeatureTemplateIpv6SecondaryAddress>> ipv6SecondaryAddresses;

    /**
     * @return Assign secondary IPv6 addresses
     * 
     */
    public Output<Optional<List<VpnInterfaceSviFeatureTemplateIpv6SecondaryAddress>>> ipv6SecondaryAddresses() {
        return Codegen.optional(this.ipv6SecondaryAddresses);
    }
    /**
     * Enable VRRP
     * 
     */
    @Export(name="ipv6Vrrps", refs={List.class,VpnInterfaceSviFeatureTemplateIpv6Vrrp.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VpnInterfaceSviFeatureTemplateIpv6Vrrp>> ipv6Vrrps;

    /**
     * @return Enable VRRP
     * 
     */
    public Output<Optional<List<VpnInterfaceSviFeatureTemplateIpv6Vrrp>>> ipv6Vrrps() {
        return Codegen.optional(this.ipv6Vrrps);
    }
    /**
     * Interface MTU &lt;1500..9216&gt; in bytes
     *   - Range: `1500`-`9216`
     *   - Default value: `1500`
     * 
     */
    @Export(name="mtu", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> mtu;

    /**
     * @return Interface MTU &lt;1500..9216&gt; in bytes
     *   - Range: `1500`-`9216`
     *   - Default value: `1500`
     * 
     */
    public Output<Optional<Integer>> mtu() {
        return Codegen.optional(this.mtu);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="mtuVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> mtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> mtuVariable() {
        return Codegen.optional(this.mtuVariable);
    }
    /**
     * The name of the feature template
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the feature template
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Enable policer
     * 
     */
    @Export(name="policers", refs={List.class,VpnInterfaceSviFeatureTemplatePolicer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VpnInterfaceSviFeatureTemplatePolicer>> policers;

    /**
     * @return Enable policer
     * 
     */
    public Output<Optional<List<VpnInterfaceSviFeatureTemplatePolicer>>> policers() {
        return Codegen.optional(this.policers);
    }
    /**
     * Administrative state
     *   - Default value: `true`
     * 
     */
    @Export(name="shutdown", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> shutdown;

    /**
     * @return Administrative state
     *   - Default value: `true`
     * 
     */
    public Output<Optional<Boolean>> shutdown() {
        return Codegen.optional(this.shutdown);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="shutdownVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> shutdownVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> shutdownVariable() {
        return Codegen.optional(this.shutdownVariable);
    }
    /**
     * Configure static ARP entries
     * 
     */
    @Export(name="staticArpEntries", refs={List.class,VpnInterfaceSviFeatureTemplateStaticArpEntry.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VpnInterfaceSviFeatureTemplateStaticArpEntry>> staticArpEntries;

    /**
     * @return Configure static ARP entries
     * 
     */
    public Output<Optional<List<VpnInterfaceSviFeatureTemplateStaticArpEntry>>> staticArpEntries() {
        return Codegen.optional(this.staticArpEntries);
    }
    /**
     * TCP MSS on SYN packets, in bytes
     *   - Range: `552`-`1960`
     * 
     */
    @Export(name="tcpMssAdjust", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tcpMssAdjust;

    /**
     * @return TCP MSS on SYN packets, in bytes
     *   - Range: `552`-`1960`
     * 
     */
    public Output<Optional<Integer>> tcpMssAdjust() {
        return Codegen.optional(this.tcpMssAdjust);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tcpMssAdjustVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tcpMssAdjustVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tcpMssAdjustVariable() {
        return Codegen.optional(this.tcpMssAdjustVariable);
    }
    /**
     * The template type
     * 
     */
    @Export(name="templateType", refs={String.class}, tree="[0]")
    private Output<String> templateType;

    /**
     * @return The template type
     * 
     */
    public Output<String> templateType() {
        return this.templateType;
    }
    /**
     * The version of the feature template
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the feature template
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VpnInterfaceSviFeatureTemplate(java.lang.String name) {
        this(name, VpnInterfaceSviFeatureTemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VpnInterfaceSviFeatureTemplate(java.lang.String name, VpnInterfaceSviFeatureTemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VpnInterfaceSviFeatureTemplate(java.lang.String name, VpnInterfaceSviFeatureTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/vpnInterfaceSviFeatureTemplate:VpnInterfaceSviFeatureTemplate", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private VpnInterfaceSviFeatureTemplate(java.lang.String name, Output<java.lang.String> id, @Nullable VpnInterfaceSviFeatureTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/vpnInterfaceSviFeatureTemplate:VpnInterfaceSviFeatureTemplate", name, state, makeResourceOptions(options, id), false);
    }

    private static VpnInterfaceSviFeatureTemplateArgs makeArgs(VpnInterfaceSviFeatureTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? VpnInterfaceSviFeatureTemplateArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VpnInterfaceSviFeatureTemplate get(java.lang.String name, Output<java.lang.String> id, @Nullable VpnInterfaceSviFeatureTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VpnInterfaceSviFeatureTemplate(name, id, state, options);
    }
}
