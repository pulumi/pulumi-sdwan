// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceLanVpnFeatureService {
    /**
     * @return IPv4 Addresses (Maximum: 4)
     * 
     */
    private List<String> ipv4Addresses;
    /**
     * @return Variable name
     * 
     */
    private String ipv4AddressesVariable;
    /**
     * @return Service Type
     * 
     */
    private String serviceType;
    /**
     * @return Variable name
     * 
     */
    private String serviceTypeVariable;
    /**
     * @return Tracking
     * 
     */
    private Boolean tracking;
    /**
     * @return Variable name
     * 
     */
    private String trackingVariable;

    private GetServiceLanVpnFeatureService() {}
    /**
     * @return IPv4 Addresses (Maximum: 4)
     * 
     */
    public List<String> ipv4Addresses() {
        return this.ipv4Addresses;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv4AddressesVariable() {
        return this.ipv4AddressesVariable;
    }
    /**
     * @return Service Type
     * 
     */
    public String serviceType() {
        return this.serviceType;
    }
    /**
     * @return Variable name
     * 
     */
    public String serviceTypeVariable() {
        return this.serviceTypeVariable;
    }
    /**
     * @return Tracking
     * 
     */
    public Boolean tracking() {
        return this.tracking;
    }
    /**
     * @return Variable name
     * 
     */
    public String trackingVariable() {
        return this.trackingVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceLanVpnFeatureService defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> ipv4Addresses;
        private String ipv4AddressesVariable;
        private String serviceType;
        private String serviceTypeVariable;
        private Boolean tracking;
        private String trackingVariable;
        public Builder() {}
        public Builder(GetServiceLanVpnFeatureService defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipv4Addresses = defaults.ipv4Addresses;
    	      this.ipv4AddressesVariable = defaults.ipv4AddressesVariable;
    	      this.serviceType = defaults.serviceType;
    	      this.serviceTypeVariable = defaults.serviceTypeVariable;
    	      this.tracking = defaults.tracking;
    	      this.trackingVariable = defaults.trackingVariable;
        }

        @CustomType.Setter
        public Builder ipv4Addresses(List<String> ipv4Addresses) {
            if (ipv4Addresses == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureService", "ipv4Addresses");
            }
            this.ipv4Addresses = ipv4Addresses;
            return this;
        }
        public Builder ipv4Addresses(String... ipv4Addresses) {
            return ipv4Addresses(List.of(ipv4Addresses));
        }
        @CustomType.Setter
        public Builder ipv4AddressesVariable(String ipv4AddressesVariable) {
            if (ipv4AddressesVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureService", "ipv4AddressesVariable");
            }
            this.ipv4AddressesVariable = ipv4AddressesVariable;
            return this;
        }
        @CustomType.Setter
        public Builder serviceType(String serviceType) {
            if (serviceType == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureService", "serviceType");
            }
            this.serviceType = serviceType;
            return this;
        }
        @CustomType.Setter
        public Builder serviceTypeVariable(String serviceTypeVariable) {
            if (serviceTypeVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureService", "serviceTypeVariable");
            }
            this.serviceTypeVariable = serviceTypeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder tracking(Boolean tracking) {
            if (tracking == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureService", "tracking");
            }
            this.tracking = tracking;
            return this;
        }
        @CustomType.Setter
        public Builder trackingVariable(String trackingVariable) {
            if (trackingVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureService", "trackingVariable");
            }
            this.trackingVariable = trackingVariable;
            return this;
        }
        public GetServiceLanVpnFeatureService build() {
            final var _resultValue = new GetServiceLanVpnFeatureService();
            _resultValue.ipv4Addresses = ipv4Addresses;
            _resultValue.ipv4AddressesVariable = ipv4AddressesVariable;
            _resultValue.serviceType = serviceType;
            _resultValue.serviceTypeVariable = serviceTypeVariable;
            _resultValue.tracking = tracking;
            _resultValue.trackingVariable = trackingVariable;
            return _resultValue;
        }
    }
}
