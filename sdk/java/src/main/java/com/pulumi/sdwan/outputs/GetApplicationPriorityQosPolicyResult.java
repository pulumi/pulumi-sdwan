// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetApplicationPriorityQosPolicyQosScheduler;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApplicationPriorityQosPolicyResult {
    /**
     * @return The description of the Policy
     * 
     */
    private String description;
    /**
     * @return Feature Profile ID
     * 
     */
    private String featureProfileId;
    /**
     * @return The id of the Policy
     * 
     */
    private String id;
    /**
     * @return The name of the Policy
     * 
     */
    private String name;
    /**
     * @return qosSchedulers
     * 
     */
    private List<GetApplicationPriorityQosPolicyQosScheduler> qosSchedulers;
    /**
     * @return Variable name
     * 
     */
    private String targetInterfaceVariable;
    /**
     * @return interfaces
     * 
     */
    private List<String> targetInterfaces;
    /**
     * @return The version of the Policy
     * 
     */
    private Integer version;

    private GetApplicationPriorityQosPolicyResult() {}
    /**
     * @return The description of the Policy
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Feature Profile ID
     * 
     */
    public String featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * @return The id of the Policy
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the Policy
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return qosSchedulers
     * 
     */
    public List<GetApplicationPriorityQosPolicyQosScheduler> qosSchedulers() {
        return this.qosSchedulers;
    }
    /**
     * @return Variable name
     * 
     */
    public String targetInterfaceVariable() {
        return this.targetInterfaceVariable;
    }
    /**
     * @return interfaces
     * 
     */
    public List<String> targetInterfaces() {
        return this.targetInterfaces;
    }
    /**
     * @return The version of the Policy
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationPriorityQosPolicyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String featureProfileId;
        private String id;
        private String name;
        private List<GetApplicationPriorityQosPolicyQosScheduler> qosSchedulers;
        private String targetInterfaceVariable;
        private List<String> targetInterfaces;
        private Integer version;
        public Builder() {}
        public Builder(GetApplicationPriorityQosPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.featureProfileId = defaults.featureProfileId;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.qosSchedulers = defaults.qosSchedulers;
    	      this.targetInterfaceVariable = defaults.targetInterfaceVariable;
    	      this.targetInterfaces = defaults.targetInterfaces;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetApplicationPriorityQosPolicyResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder featureProfileId(String featureProfileId) {
            if (featureProfileId == null) {
              throw new MissingRequiredPropertyException("GetApplicationPriorityQosPolicyResult", "featureProfileId");
            }
            this.featureProfileId = featureProfileId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetApplicationPriorityQosPolicyResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetApplicationPriorityQosPolicyResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder qosSchedulers(List<GetApplicationPriorityQosPolicyQosScheduler> qosSchedulers) {
            if (qosSchedulers == null) {
              throw new MissingRequiredPropertyException("GetApplicationPriorityQosPolicyResult", "qosSchedulers");
            }
            this.qosSchedulers = qosSchedulers;
            return this;
        }
        public Builder qosSchedulers(GetApplicationPriorityQosPolicyQosScheduler... qosSchedulers) {
            return qosSchedulers(List.of(qosSchedulers));
        }
        @CustomType.Setter
        public Builder targetInterfaceVariable(String targetInterfaceVariable) {
            if (targetInterfaceVariable == null) {
              throw new MissingRequiredPropertyException("GetApplicationPriorityQosPolicyResult", "targetInterfaceVariable");
            }
            this.targetInterfaceVariable = targetInterfaceVariable;
            return this;
        }
        @CustomType.Setter
        public Builder targetInterfaces(List<String> targetInterfaces) {
            if (targetInterfaces == null) {
              throw new MissingRequiredPropertyException("GetApplicationPriorityQosPolicyResult", "targetInterfaces");
            }
            this.targetInterfaces = targetInterfaces;
            return this;
        }
        public Builder targetInterfaces(String... targetInterfaces) {
            return targetInterfaces(List.of(targetInterfaces));
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetApplicationPriorityQosPolicyResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetApplicationPriorityQosPolicyResult build() {
            final var _resultValue = new GetApplicationPriorityQosPolicyResult();
            _resultValue.description = description;
            _resultValue.featureProfileId = featureProfileId;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.qosSchedulers = qosSchedulers;
            _resultValue.targetInterfaceVariable = targetInterfaceVariable;
            _resultValue.targetInterfaces = targetInterfaces;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
