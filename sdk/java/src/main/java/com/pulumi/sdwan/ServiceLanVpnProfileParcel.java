// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.ServiceLanVpnProfileParcelArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.ServiceLanVpnProfileParcelState;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelAdvertiseOmpIpv4;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelAdvertiseOmpIpv6;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelGreRoute;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelHostMapping;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelIpsecRoute;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelIpv4ExportRouteTarget;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelIpv4ImportRouteTarget;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelIpv4StaticRoute;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelIpv6ExportRouteTarget;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelIpv6ImportRouteTarget;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelIpv6StaticRoute;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelNat64V4Pool;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelNatPool;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelNatPortForward;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelRouteLeakFromGlobalVpn;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelRouteLeakFromOtherService;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelRouteLeakToGlobalVpn;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelService;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelServiceRoute;
import com.pulumi.sdwan.outputs.ServiceLanVpnProfileParcelStaticNat;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Service LAN VPN profile parcel.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sdwan.ServiceLanVpnProfileParcel;
 * import com.pulumi.sdwan.ServiceLanVpnProfileParcelArgs;
 * import com.pulumi.sdwan.inputs.ServiceLanVpnProfileParcelHostMappingArgs;
 * import com.pulumi.sdwan.inputs.ServiceLanVpnProfileParcelIpv4StaticRouteArgs;
 * import com.pulumi.sdwan.inputs.ServiceLanVpnProfileParcelIpv6StaticRouteArgs;
 * import com.pulumi.sdwan.inputs.ServiceLanVpnProfileParcelServiceArgs;
 * import com.pulumi.sdwan.inputs.ServiceLanVpnProfileParcelServiceRouteArgs;
 * import com.pulumi.sdwan.inputs.ServiceLanVpnProfileParcelGreRouteArgs;
 * import com.pulumi.sdwan.inputs.ServiceLanVpnProfileParcelIpsecRouteArgs;
 * import com.pulumi.sdwan.inputs.ServiceLanVpnProfileParcelNatPoolArgs;
 * import com.pulumi.sdwan.inputs.ServiceLanVpnProfileParcelNatPortForwardArgs;
 * import com.pulumi.sdwan.inputs.ServiceLanVpnProfileParcelStaticNatArgs;
 * import com.pulumi.sdwan.inputs.ServiceLanVpnProfileParcelNat64V4PoolArgs;
 * import com.pulumi.sdwan.inputs.ServiceLanVpnProfileParcelIpv4ImportRouteTargetArgs;
 * import com.pulumi.sdwan.inputs.ServiceLanVpnProfileParcelIpv4ExportRouteTargetArgs;
 * import com.pulumi.sdwan.inputs.ServiceLanVpnProfileParcelIpv6ImportRouteTargetArgs;
 * import com.pulumi.sdwan.inputs.ServiceLanVpnProfileParcelIpv6ExportRouteTargetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ServiceLanVpnProfileParcel("example", ServiceLanVpnProfileParcelArgs.builder()
 *             .name("Example")
 *             .description("My Example")
 *             .featureProfileId("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac")
 *             .vpn(1)
 *             .configDescription("VPN1")
 *             .ompAdminDistanceIpv4(1)
 *             .ompAdminDistanceIpv6(1)
 *             .enableSdwanRemoteAccess(false)
 *             .primaryDnsAddressIpv4("1.2.3.4")
 *             .secondaryDnsAddressIpv4("2.3.4.5")
 *             .primaryDnsAddressIpv6("2001:0:0:1::0")
 *             .secondaryDnsAddressIpv6("2001:0:0:2::0")
 *             .hostMappings(ServiceLanVpnProfileParcelHostMappingArgs.builder()
 *                 .host_name("HOSTMAPPING1")
 *                 .list_of_ips("1.2.3.4")
 *                 .build())
 *             .ipv4StaticRoutes(ServiceLanVpnProfileParcelIpv4StaticRouteArgs.builder()
 *                 .network_address("1.2.3.4")
 *                 .subnet_mask("0.0.0.0")
 *                 .next_hops(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .build())
 *             .ipv6StaticRoutes(ServiceLanVpnProfileParcelIpv6StaticRouteArgs.builder()
 *                 .prefix("2001:0:0:1::0/12")
 *                 .next_hops(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .build())
 *             .services(ServiceLanVpnProfileParcelServiceArgs.builder()
 *                 .service_type("FW")
 *                 .ipv4_addresses("1.2.3.4")
 *                 .tracking(true)
 *                 .build())
 *             .serviceRoutes(ServiceLanVpnProfileParcelServiceRouteArgs.builder()
 *                 .network_address("1.2.3.4")
 *                 .subnet_mask("0.0.0.0")
 *                 .service("SIG")
 *                 .vpn(0)
 *                 .build())
 *             .greRoutes(ServiceLanVpnProfileParcelGreRouteArgs.builder()
 *                 .network_address("1.2.3.4")
 *                 .subnet_mask("0.0.0.0")
 *                 .interface_("gre01")
 *                 .vpn(0)
 *                 .build())
 *             .ipsecRoutes(ServiceLanVpnProfileParcelIpsecRouteArgs.builder()
 *                 .network_address("1.2.3.4")
 *                 .subnet_mask("0.0.0.0")
 *                 .interface_("ipsec01")
 *                 .build())
 *             .natPools(ServiceLanVpnProfileParcelNatPoolArgs.builder()
 *                 .nat_pool_name(1)
 *                 .prefix_length(3)
 *                 .range_start("1.2.3.4")
 *                 .range_end("2.3.4.5")
 *                 .overload(true)
 *                 .direction("inside")
 *                 .build())
 *             .natPortForwards(ServiceLanVpnProfileParcelNatPortForwardArgs.builder()
 *                 .nat_pool_name(2)
 *                 .source_port(122)
 *                 .translate_port(330)
 *                 .source_ip("1.2.3.4")
 *                 .translated_source_ip("2.3.4.5")
 *                 .protocol("TCP")
 *                 .build())
 *             .staticNats(ServiceLanVpnProfileParcelStaticNatArgs.builder()
 *                 .nat_pool_name(3)
 *                 .source_ip("1.2.3.4")
 *                 .translated_source_ip("2.3.4.5")
 *                 .static_nat_direction("inside")
 *                 .build())
 *             .nat64V4Pools(ServiceLanVpnProfileParcelNat64V4PoolArgs.builder()
 *                 .name("NATPOOL1")
 *                 .range_start("1.2.3.4")
 *                 .range_end("2.3.4.5")
 *                 .overload(false)
 *                 .build())
 *             .ipv4ImportRouteTargets(ServiceLanVpnProfileParcelIpv4ImportRouteTargetArgs.builder()
 *                 .route_target("1.1.1.3:200")
 *                 .build())
 *             .ipv4ExportRouteTargets(ServiceLanVpnProfileParcelIpv4ExportRouteTargetArgs.builder()
 *                 .route_target("1.1.1.3:200")
 *                 .build())
 *             .ipv6ImportRouteTargets(ServiceLanVpnProfileParcelIpv6ImportRouteTargetArgs.builder()
 *                 .route_target("1.1.1.3:200")
 *                 .build())
 *             .ipv6ExportRouteTargets(ServiceLanVpnProfileParcelIpv6ExportRouteTargetArgs.builder()
 *                 .route_target("1.1.1.3:200")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import sdwan:index/serviceLanVpnProfileParcel:ServiceLanVpnProfileParcel example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/serviceLanVpnProfileParcel:ServiceLanVpnProfileParcel")
public class ServiceLanVpnProfileParcel extends com.pulumi.resources.CustomResource {
    /**
     * OMP Advertise IPv4
     * 
     */
    @Export(name="advertiseOmpIpv4s", refs={List.class,ServiceLanVpnProfileParcelAdvertiseOmpIpv4.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelAdvertiseOmpIpv4>> advertiseOmpIpv4s;

    /**
     * @return OMP Advertise IPv4
     * 
     */
    public Output<Optional<List<ServiceLanVpnProfileParcelAdvertiseOmpIpv4>>> advertiseOmpIpv4s() {
        return Codegen.optional(this.advertiseOmpIpv4s);
    }
    /**
     * OMP Advertise IPv6
     * 
     */
    @Export(name="advertiseOmpIpv6s", refs={List.class,ServiceLanVpnProfileParcelAdvertiseOmpIpv6.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelAdvertiseOmpIpv6>> advertiseOmpIpv6s;

    /**
     * @return OMP Advertise IPv6
     * 
     */
    public Output<Optional<List<ServiceLanVpnProfileParcelAdvertiseOmpIpv6>>> advertiseOmpIpv6s() {
        return Codegen.optional(this.advertiseOmpIpv6s);
    }
    /**
     * Name
     * 
     */
    @Export(name="configDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> configDescription;

    /**
     * @return Name
     * 
     */
    public Output<Optional<String>> configDescription() {
        return Codegen.optional(this.configDescription);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="configDescriptionVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> configDescriptionVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> configDescriptionVariable() {
        return Codegen.optional(this.configDescriptionVariable);
    }
    /**
     * The description of the profile parcel
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the profile parcel
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Enable SDWAN Remote Access - Default value: `false`
     * 
     */
    @Export(name="enableSdwanRemoteAccess", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableSdwanRemoteAccess;

    /**
     * @return Enable SDWAN Remote Access - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> enableSdwanRemoteAccess() {
        return Codegen.optional(this.enableSdwanRemoteAccess);
    }
    /**
     * Feature Profile ID
     * 
     */
    @Export(name="featureProfileId", refs={String.class}, tree="[0]")
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * IPv4 Static GRE Route
     * 
     */
    @Export(name="greRoutes", refs={List.class,ServiceLanVpnProfileParcelGreRoute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelGreRoute>> greRoutes;

    /**
     * @return IPv4 Static GRE Route
     * 
     */
    public Output<Optional<List<ServiceLanVpnProfileParcelGreRoute>>> greRoutes() {
        return Codegen.optional(this.greRoutes);
    }
    @Export(name="hostMappings", refs={List.class,ServiceLanVpnProfileParcelHostMapping.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelHostMapping>> hostMappings;

    public Output<Optional<List<ServiceLanVpnProfileParcelHostMapping>>> hostMappings() {
        return Codegen.optional(this.hostMappings);
    }
    /**
     * IPv4 Static IPSEC Route
     * 
     */
    @Export(name="ipsecRoutes", refs={List.class,ServiceLanVpnProfileParcelIpsecRoute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelIpsecRoute>> ipsecRoutes;

    /**
     * @return IPv4 Static IPSEC Route
     * 
     */
    public Output<Optional<List<ServiceLanVpnProfileParcelIpsecRoute>>> ipsecRoutes() {
        return Codegen.optional(this.ipsecRoutes);
    }
    @Export(name="ipv4ExportRouteTargets", refs={List.class,ServiceLanVpnProfileParcelIpv4ExportRouteTarget.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelIpv4ExportRouteTarget>> ipv4ExportRouteTargets;

    public Output<Optional<List<ServiceLanVpnProfileParcelIpv4ExportRouteTarget>>> ipv4ExportRouteTargets() {
        return Codegen.optional(this.ipv4ExportRouteTargets);
    }
    @Export(name="ipv4ImportRouteTargets", refs={List.class,ServiceLanVpnProfileParcelIpv4ImportRouteTarget.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelIpv4ImportRouteTarget>> ipv4ImportRouteTargets;

    public Output<Optional<List<ServiceLanVpnProfileParcelIpv4ImportRouteTarget>>> ipv4ImportRouteTargets() {
        return Codegen.optional(this.ipv4ImportRouteTargets);
    }
    /**
     * IPv4 Static Route
     * 
     */
    @Export(name="ipv4StaticRoutes", refs={List.class,ServiceLanVpnProfileParcelIpv4StaticRoute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelIpv4StaticRoute>> ipv4StaticRoutes;

    /**
     * @return IPv4 Static Route
     * 
     */
    public Output<Optional<List<ServiceLanVpnProfileParcelIpv4StaticRoute>>> ipv4StaticRoutes() {
        return Codegen.optional(this.ipv4StaticRoutes);
    }
    @Export(name="ipv6ExportRouteTargets", refs={List.class,ServiceLanVpnProfileParcelIpv6ExportRouteTarget.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelIpv6ExportRouteTarget>> ipv6ExportRouteTargets;

    public Output<Optional<List<ServiceLanVpnProfileParcelIpv6ExportRouteTarget>>> ipv6ExportRouteTargets() {
        return Codegen.optional(this.ipv6ExportRouteTargets);
    }
    @Export(name="ipv6ImportRouteTargets", refs={List.class,ServiceLanVpnProfileParcelIpv6ImportRouteTarget.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelIpv6ImportRouteTarget>> ipv6ImportRouteTargets;

    public Output<Optional<List<ServiceLanVpnProfileParcelIpv6ImportRouteTarget>>> ipv6ImportRouteTargets() {
        return Codegen.optional(this.ipv6ImportRouteTargets);
    }
    /**
     * IPv6 Static Route
     * 
     */
    @Export(name="ipv6StaticRoutes", refs={List.class,ServiceLanVpnProfileParcelIpv6StaticRoute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelIpv6StaticRoute>> ipv6StaticRoutes;

    /**
     * @return IPv6 Static Route
     * 
     */
    public Output<Optional<List<ServiceLanVpnProfileParcelIpv6StaticRoute>>> ipv6StaticRoutes() {
        return Codegen.optional(this.ipv6StaticRoutes);
    }
    /**
     * The name of the profile parcel
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the profile parcel
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * NAT64 V4 Pool
     * 
     */
    @Export(name="nat64V4Pools", refs={List.class,ServiceLanVpnProfileParcelNat64V4Pool.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelNat64V4Pool>> nat64V4Pools;

    /**
     * @return NAT64 V4 Pool
     * 
     */
    public Output<Optional<List<ServiceLanVpnProfileParcelNat64V4Pool>>> nat64V4Pools() {
        return Codegen.optional(this.nat64V4Pools);
    }
    /**
     * NAT Pool
     * 
     */
    @Export(name="natPools", refs={List.class,ServiceLanVpnProfileParcelNatPool.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelNatPool>> natPools;

    /**
     * @return NAT Pool
     * 
     */
    public Output<Optional<List<ServiceLanVpnProfileParcelNatPool>>> natPools() {
        return Codegen.optional(this.natPools);
    }
    /**
     * NAT Port Forward
     * 
     */
    @Export(name="natPortForwards", refs={List.class,ServiceLanVpnProfileParcelNatPortForward.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelNatPortForward>> natPortForwards;

    /**
     * @return NAT Port Forward
     * 
     */
    public Output<Optional<List<ServiceLanVpnProfileParcelNatPortForward>>> natPortForwards() {
        return Codegen.optional(this.natPortForwards);
    }
    /**
     * OMP Admin Distance IPv4 - Range: `1`-`255`
     * 
     */
    @Export(name="ompAdminDistanceIpv4", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ompAdminDistanceIpv4;

    /**
     * @return OMP Admin Distance IPv4 - Range: `1`-`255`
     * 
     */
    public Output<Optional<Integer>> ompAdminDistanceIpv4() {
        return Codegen.optional(this.ompAdminDistanceIpv4);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ompAdminDistanceIpv4Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ompAdminDistanceIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ompAdminDistanceIpv4Variable() {
        return Codegen.optional(this.ompAdminDistanceIpv4Variable);
    }
    /**
     * OMP Admin Distance IPv6 - Range: `1`-`255`
     * 
     */
    @Export(name="ompAdminDistanceIpv6", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ompAdminDistanceIpv6;

    /**
     * @return OMP Admin Distance IPv6 - Range: `1`-`255`
     * 
     */
    public Output<Optional<Integer>> ompAdminDistanceIpv6() {
        return Codegen.optional(this.ompAdminDistanceIpv6);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ompAdminDistanceIpv6Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ompAdminDistanceIpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ompAdminDistanceIpv6Variable() {
        return Codegen.optional(this.ompAdminDistanceIpv6Variable);
    }
    /**
     * Primary DNS Address (IPv4)
     * 
     */
    @Export(name="primaryDnsAddressIpv4", refs={String.class}, tree="[0]")
    private Output<String> primaryDnsAddressIpv4;

    /**
     * @return Primary DNS Address (IPv4)
     * 
     */
    public Output<String> primaryDnsAddressIpv4() {
        return this.primaryDnsAddressIpv4;
    }
    /**
     * Variable name
     * 
     */
    @Export(name="primaryDnsAddressIpv4Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primaryDnsAddressIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> primaryDnsAddressIpv4Variable() {
        return Codegen.optional(this.primaryDnsAddressIpv4Variable);
    }
    /**
     * Primary DNS Address (IPv6)
     * 
     */
    @Export(name="primaryDnsAddressIpv6", refs={String.class}, tree="[0]")
    private Output<String> primaryDnsAddressIpv6;

    /**
     * @return Primary DNS Address (IPv6)
     * 
     */
    public Output<String> primaryDnsAddressIpv6() {
        return this.primaryDnsAddressIpv6;
    }
    /**
     * Variable name
     * 
     */
    @Export(name="primaryDnsAddressIpv6Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primaryDnsAddressIpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> primaryDnsAddressIpv6Variable() {
        return Codegen.optional(this.primaryDnsAddressIpv6Variable);
    }
    /**
     * Enable route leaking from Global to Service VPN
     * 
     */
    @Export(name="routeLeakFromGlobalVpns", refs={List.class,ServiceLanVpnProfileParcelRouteLeakFromGlobalVpn.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelRouteLeakFromGlobalVpn>> routeLeakFromGlobalVpns;

    /**
     * @return Enable route leaking from Global to Service VPN
     * 
     */
    public Output<Optional<List<ServiceLanVpnProfileParcelRouteLeakFromGlobalVpn>>> routeLeakFromGlobalVpns() {
        return Codegen.optional(this.routeLeakFromGlobalVpns);
    }
    /**
     * Enable route leak from another Service VPN to current Service VPN
     * 
     */
    @Export(name="routeLeakFromOtherServices", refs={List.class,ServiceLanVpnProfileParcelRouteLeakFromOtherService.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelRouteLeakFromOtherService>> routeLeakFromOtherServices;

    /**
     * @return Enable route leak from another Service VPN to current Service VPN
     * 
     */
    public Output<Optional<List<ServiceLanVpnProfileParcelRouteLeakFromOtherService>>> routeLeakFromOtherServices() {
        return Codegen.optional(this.routeLeakFromOtherServices);
    }
    /**
     * Enable route leaking from Service to Global VPN
     * 
     */
    @Export(name="routeLeakToGlobalVpns", refs={List.class,ServiceLanVpnProfileParcelRouteLeakToGlobalVpn.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelRouteLeakToGlobalVpn>> routeLeakToGlobalVpns;

    /**
     * @return Enable route leaking from Service to Global VPN
     * 
     */
    public Output<Optional<List<ServiceLanVpnProfileParcelRouteLeakToGlobalVpn>>> routeLeakToGlobalVpns() {
        return Codegen.optional(this.routeLeakToGlobalVpns);
    }
    /**
     * Secondary DNS Address (IPv4)
     * 
     */
    @Export(name="secondaryDnsAddressIpv4", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryDnsAddressIpv4;

    /**
     * @return Secondary DNS Address (IPv4)
     * 
     */
    public Output<Optional<String>> secondaryDnsAddressIpv4() {
        return Codegen.optional(this.secondaryDnsAddressIpv4);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="secondaryDnsAddressIpv4Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryDnsAddressIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> secondaryDnsAddressIpv4Variable() {
        return Codegen.optional(this.secondaryDnsAddressIpv4Variable);
    }
    /**
     * Secondary DNS Address (IPv6)
     * 
     */
    @Export(name="secondaryDnsAddressIpv6", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryDnsAddressIpv6;

    /**
     * @return Secondary DNS Address (IPv6)
     * 
     */
    public Output<Optional<String>> secondaryDnsAddressIpv6() {
        return Codegen.optional(this.secondaryDnsAddressIpv6);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="secondaryDnsAddressIpv6Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryDnsAddressIpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> secondaryDnsAddressIpv6Variable() {
        return Codegen.optional(this.secondaryDnsAddressIpv6Variable);
    }
    /**
     * Service
     * 
     */
    @Export(name="serviceRoutes", refs={List.class,ServiceLanVpnProfileParcelServiceRoute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelServiceRoute>> serviceRoutes;

    /**
     * @return Service
     * 
     */
    public Output<Optional<List<ServiceLanVpnProfileParcelServiceRoute>>> serviceRoutes() {
        return Codegen.optional(this.serviceRoutes);
    }
    /**
     * Service
     * 
     */
    @Export(name="services", refs={List.class,ServiceLanVpnProfileParcelService.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelService>> services;

    /**
     * @return Service
     * 
     */
    public Output<Optional<List<ServiceLanVpnProfileParcelService>>> services() {
        return Codegen.optional(this.services);
    }
    /**
     * Static NAT Rules
     * 
     */
    @Export(name="staticNats", refs={List.class,ServiceLanVpnProfileParcelStaticNat.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnProfileParcelStaticNat>> staticNats;

    /**
     * @return Static NAT Rules
     * 
     */
    public Output<Optional<List<ServiceLanVpnProfileParcelStaticNat>>> staticNats() {
        return Codegen.optional(this.staticNats);
    }
    /**
     * The version of the profile parcel
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the profile parcel
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }
    /**
     * VPN - Range: `1`-`65527` - Default value: `0`
     * 
     */
    @Export(name="vpn", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> vpn;

    /**
     * @return VPN - Range: `1`-`65527` - Default value: `0`
     * 
     */
    public Output<Optional<Integer>> vpn() {
        return Codegen.optional(this.vpn);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="vpnVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpnVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> vpnVariable() {
        return Codegen.optional(this.vpnVariable);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServiceLanVpnProfileParcel(String name) {
        this(name, ServiceLanVpnProfileParcelArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServiceLanVpnProfileParcel(String name, ServiceLanVpnProfileParcelArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServiceLanVpnProfileParcel(String name, ServiceLanVpnProfileParcelArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/serviceLanVpnProfileParcel:ServiceLanVpnProfileParcel", name, args == null ? ServiceLanVpnProfileParcelArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ServiceLanVpnProfileParcel(String name, Output<String> id, @Nullable ServiceLanVpnProfileParcelState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/serviceLanVpnProfileParcel:ServiceLanVpnProfileParcel", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServiceLanVpnProfileParcel get(String name, Output<String> id, @Nullable ServiceLanVpnProfileParcelState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServiceLanVpnProfileParcel(name, id, state, options);
    }
}
