// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAdvancedInspectionProfilePolicyDefinitionResult {
    /**
     * @return Advanced malware protection ID
     * 
     */
    private String advancedMalwareProtectionId;
    /**
     * @return Advanced malware protection version
     * 
     */
    private Integer advancedMalwareProtectionVersion;
    /**
     * @return The description of the policy definition.
     * 
     */
    private String description;
    /**
     * @return The id of the object
     * 
     */
    private String id;
    /**
     * @return Intrusion prevention ID (unified mode)
     * 
     */
    private String intrusionPreventionId;
    /**
     * @return Intrusion prevention version
     * 
     */
    private Integer intrusionPreventionVersion;
    /**
     * @return The name of the policy definition.
     * 
     */
    private String name;
    /**
     * @return TLS Action
     * 
     */
    private String tlsAction;
    /**
     * @return TLS/SSL decryption ID
     * 
     */
    private String tlsSslDecryptionId;
    /**
     * @return TLS/SSL decryption version
     * 
     */
    private Integer tlsSslDecryptionVersion;
    /**
     * @return URL filtering ID (unified mode)
     * 
     */
    private String urlFilteringId;
    /**
     * @return URL filtering version
     * 
     */
    private Integer urlFilteringVersion;
    /**
     * @return The version of the object
     * 
     */
    private Integer version;

    private GetAdvancedInspectionProfilePolicyDefinitionResult() {}
    /**
     * @return Advanced malware protection ID
     * 
     */
    public String advancedMalwareProtectionId() {
        return this.advancedMalwareProtectionId;
    }
    /**
     * @return Advanced malware protection version
     * 
     */
    public Integer advancedMalwareProtectionVersion() {
        return this.advancedMalwareProtectionVersion;
    }
    /**
     * @return The description of the policy definition.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The id of the object
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Intrusion prevention ID (unified mode)
     * 
     */
    public String intrusionPreventionId() {
        return this.intrusionPreventionId;
    }
    /**
     * @return Intrusion prevention version
     * 
     */
    public Integer intrusionPreventionVersion() {
        return this.intrusionPreventionVersion;
    }
    /**
     * @return The name of the policy definition.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return TLS Action
     * 
     */
    public String tlsAction() {
        return this.tlsAction;
    }
    /**
     * @return TLS/SSL decryption ID
     * 
     */
    public String tlsSslDecryptionId() {
        return this.tlsSslDecryptionId;
    }
    /**
     * @return TLS/SSL decryption version
     * 
     */
    public Integer tlsSslDecryptionVersion() {
        return this.tlsSslDecryptionVersion;
    }
    /**
     * @return URL filtering ID (unified mode)
     * 
     */
    public String urlFilteringId() {
        return this.urlFilteringId;
    }
    /**
     * @return URL filtering version
     * 
     */
    public Integer urlFilteringVersion() {
        return this.urlFilteringVersion;
    }
    /**
     * @return The version of the object
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAdvancedInspectionProfilePolicyDefinitionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String advancedMalwareProtectionId;
        private Integer advancedMalwareProtectionVersion;
        private String description;
        private String id;
        private String intrusionPreventionId;
        private Integer intrusionPreventionVersion;
        private String name;
        private String tlsAction;
        private String tlsSslDecryptionId;
        private Integer tlsSslDecryptionVersion;
        private String urlFilteringId;
        private Integer urlFilteringVersion;
        private Integer version;
        public Builder() {}
        public Builder(GetAdvancedInspectionProfilePolicyDefinitionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.advancedMalwareProtectionId = defaults.advancedMalwareProtectionId;
    	      this.advancedMalwareProtectionVersion = defaults.advancedMalwareProtectionVersion;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.intrusionPreventionId = defaults.intrusionPreventionId;
    	      this.intrusionPreventionVersion = defaults.intrusionPreventionVersion;
    	      this.name = defaults.name;
    	      this.tlsAction = defaults.tlsAction;
    	      this.tlsSslDecryptionId = defaults.tlsSslDecryptionId;
    	      this.tlsSslDecryptionVersion = defaults.tlsSslDecryptionVersion;
    	      this.urlFilteringId = defaults.urlFilteringId;
    	      this.urlFilteringVersion = defaults.urlFilteringVersion;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder advancedMalwareProtectionId(String advancedMalwareProtectionId) {
            if (advancedMalwareProtectionId == null) {
              throw new MissingRequiredPropertyException("GetAdvancedInspectionProfilePolicyDefinitionResult", "advancedMalwareProtectionId");
            }
            this.advancedMalwareProtectionId = advancedMalwareProtectionId;
            return this;
        }
        @CustomType.Setter
        public Builder advancedMalwareProtectionVersion(Integer advancedMalwareProtectionVersion) {
            if (advancedMalwareProtectionVersion == null) {
              throw new MissingRequiredPropertyException("GetAdvancedInspectionProfilePolicyDefinitionResult", "advancedMalwareProtectionVersion");
            }
            this.advancedMalwareProtectionVersion = advancedMalwareProtectionVersion;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetAdvancedInspectionProfilePolicyDefinitionResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAdvancedInspectionProfilePolicyDefinitionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder intrusionPreventionId(String intrusionPreventionId) {
            if (intrusionPreventionId == null) {
              throw new MissingRequiredPropertyException("GetAdvancedInspectionProfilePolicyDefinitionResult", "intrusionPreventionId");
            }
            this.intrusionPreventionId = intrusionPreventionId;
            return this;
        }
        @CustomType.Setter
        public Builder intrusionPreventionVersion(Integer intrusionPreventionVersion) {
            if (intrusionPreventionVersion == null) {
              throw new MissingRequiredPropertyException("GetAdvancedInspectionProfilePolicyDefinitionResult", "intrusionPreventionVersion");
            }
            this.intrusionPreventionVersion = intrusionPreventionVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAdvancedInspectionProfilePolicyDefinitionResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder tlsAction(String tlsAction) {
            if (tlsAction == null) {
              throw new MissingRequiredPropertyException("GetAdvancedInspectionProfilePolicyDefinitionResult", "tlsAction");
            }
            this.tlsAction = tlsAction;
            return this;
        }
        @CustomType.Setter
        public Builder tlsSslDecryptionId(String tlsSslDecryptionId) {
            if (tlsSslDecryptionId == null) {
              throw new MissingRequiredPropertyException("GetAdvancedInspectionProfilePolicyDefinitionResult", "tlsSslDecryptionId");
            }
            this.tlsSslDecryptionId = tlsSslDecryptionId;
            return this;
        }
        @CustomType.Setter
        public Builder tlsSslDecryptionVersion(Integer tlsSslDecryptionVersion) {
            if (tlsSslDecryptionVersion == null) {
              throw new MissingRequiredPropertyException("GetAdvancedInspectionProfilePolicyDefinitionResult", "tlsSslDecryptionVersion");
            }
            this.tlsSslDecryptionVersion = tlsSslDecryptionVersion;
            return this;
        }
        @CustomType.Setter
        public Builder urlFilteringId(String urlFilteringId) {
            if (urlFilteringId == null) {
              throw new MissingRequiredPropertyException("GetAdvancedInspectionProfilePolicyDefinitionResult", "urlFilteringId");
            }
            this.urlFilteringId = urlFilteringId;
            return this;
        }
        @CustomType.Setter
        public Builder urlFilteringVersion(Integer urlFilteringVersion) {
            if (urlFilteringVersion == null) {
              throw new MissingRequiredPropertyException("GetAdvancedInspectionProfilePolicyDefinitionResult", "urlFilteringVersion");
            }
            this.urlFilteringVersion = urlFilteringVersion;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetAdvancedInspectionProfilePolicyDefinitionResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetAdvancedInspectionProfilePolicyDefinitionResult build() {
            final var _resultValue = new GetAdvancedInspectionProfilePolicyDefinitionResult();
            _resultValue.advancedMalwareProtectionId = advancedMalwareProtectionId;
            _resultValue.advancedMalwareProtectionVersion = advancedMalwareProtectionVersion;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.intrusionPreventionId = intrusionPreventionId;
            _resultValue.intrusionPreventionVersion = intrusionPreventionVersion;
            _resultValue.name = name;
            _resultValue.tlsAction = tlsAction;
            _resultValue.tlsSslDecryptionId = tlsSslDecryptionId;
            _resultValue.tlsSslDecryptionVersion = tlsSslDecryptionVersion;
            _resultValue.urlFilteringId = urlFilteringId;
            _resultValue.urlFilteringVersion = urlFilteringVersion;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
