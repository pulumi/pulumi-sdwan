// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.CiscoVpnInterfaceGreFeatureTemplateArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.CiscoVpnInterfaceGreFeatureTemplateState;
import com.pulumi.sdwan.outputs.CiscoVpnInterfaceGreFeatureTemplateAccessList;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Cisco VPN Interface GRE feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sdwan.CiscoVpnInterfaceGreFeatureTemplate;
 * import com.pulumi.sdwan.CiscoVpnInterfaceGreFeatureTemplateArgs;
 * import com.pulumi.sdwan.inputs.CiscoVpnInterfaceGreFeatureTemplateAccessListArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new CiscoVpnInterfaceGreFeatureTemplate("example", CiscoVpnInterfaceGreFeatureTemplateArgs.builder()
 *             .name("Example")
 *             .description("My Example")
 *             .deviceTypes("vedge-C8000V")
 *             .interfaceName("gre0/0")
 *             .interfaceDescription("My Description")
 *             .ipAddress("1.1.1.1/24")
 *             .tunnelSource("1.2.3.4")
 *             .shutdown(true)
 *             .tunnelSourceInterface("e1")
 *             .tunnelDestination("3.4.5.6")
 *             .application("sig")
 *             .ipMtu(1500)
 *             .tcpMssAdjust(1400)
 *             .clearDontFragment(true)
 *             .rewriteRule("ACL1")
 *             .accessLists(CiscoVpnInterfaceGreFeatureTemplateAccessListArgs.builder()
 *                 .direction("in")
 *                 .acl_name("ACL2")
 *                 .build())
 *             .trackers("TRACKER1")
 *             .tunnelRouteVia("g0/0")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import sdwan:index/ciscoVpnInterfaceGreFeatureTemplate:CiscoVpnInterfaceGreFeatureTemplate example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/ciscoVpnInterfaceGreFeatureTemplate:CiscoVpnInterfaceGreFeatureTemplate")
public class CiscoVpnInterfaceGreFeatureTemplate extends com.pulumi.resources.CustomResource {
    /**
     * Apply ACL
     * 
     */
    @Export(name="accessLists", refs={List.class,CiscoVpnInterfaceGreFeatureTemplateAccessList.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CiscoVpnInterfaceGreFeatureTemplateAccessList>> accessLists;

    /**
     * @return Apply ACL
     * 
     */
    public Output<Optional<List<CiscoVpnInterfaceGreFeatureTemplateAccessList>>> accessLists() {
        return Codegen.optional(this.accessLists);
    }
    /**
     * Enable Application Tunnel Type - Choices: `none`, `sig` - Default value: `none`
     * 
     */
    @Export(name="application", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> application;

    /**
     * @return Enable Application Tunnel Type - Choices: `none`, `sig` - Default value: `none`
     * 
     */
    public Output<Optional<String>> application() {
        return Codegen.optional(this.application);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="applicationVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> applicationVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> applicationVariable() {
        return Codegen.optional(this.applicationVariable);
    }
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     * 
     */
    @Export(name="clearDontFragment", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> clearDontFragment;

    /**
     * @return Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> clearDontFragment() {
        return Codegen.optional(this.clearDontFragment);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="clearDontFragmentVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clearDontFragmentVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> clearDontFragmentVariable() {
        return Codegen.optional(this.clearDontFragmentVariable);
    }
    /**
     * The description of the feature template
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return The description of the feature template
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    @Export(name="deviceTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> deviceTypes;

    /**
     * @return List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    public Output<List<String>> deviceTypes() {
        return this.deviceTypes;
    }
    /**
     * Interface description
     * 
     */
    @Export(name="interfaceDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceDescription;

    /**
     * @return Interface description
     * 
     */
    public Output<Optional<String>> interfaceDescription() {
        return Codegen.optional(this.interfaceDescription);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="interfaceDescriptionVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceDescriptionVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> interfaceDescriptionVariable() {
        return Codegen.optional(this.interfaceDescriptionVariable);
    }
    /**
     * Interface name: ge0/&lt;0-..&gt; or ge0/&lt;0-..&gt;.vlanid or irb&lt;bridgeid:1-63&gt; or loopback&lt;string&gt; or natpool-&lt;1..31&gt; when
     * present
     * 
     */
    @Export(name="interfaceName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceName;

    /**
     * @return Interface name: ge0/&lt;0-..&gt; or ge0/&lt;0-..&gt;.vlanid or irb&lt;bridgeid:1-63&gt; or loopback&lt;string&gt; or natpool-&lt;1..31&gt; when
     * present
     * 
     */
    public Output<Optional<String>> interfaceName() {
        return Codegen.optional(this.interfaceName);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="interfaceNameVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> interfaceNameVariable() {
        return Codegen.optional(this.interfaceNameVariable);
    }
    /**
     * Assign IPv4 address
     * 
     */
    @Export(name="ipAddress", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipAddress;

    /**
     * @return Assign IPv4 address
     * 
     */
    public Output<Optional<String>> ipAddress() {
        return Codegen.optional(this.ipAddress);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipAddressVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipAddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipAddressVariable() {
        return Codegen.optional(this.ipAddressVariable);
    }
    /**
     * Interface MTU &lt;576..2000&gt;, in bytes - Range: `64`-`18000` - Default value: `1500`
     * 
     */
    @Export(name="ipMtu", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipMtu;

    /**
     * @return Interface MTU &lt;576..2000&gt;, in bytes - Range: `64`-`18000` - Default value: `1500`
     * 
     */
    public Output<Optional<Integer>> ipMtu() {
        return Codegen.optional(this.ipMtu);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipMtuVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipMtuVariable() {
        return Codegen.optional(this.ipMtuVariable);
    }
    /**
     * The name of the feature template
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the feature template
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Name of rewrite rule
     * 
     */
    @Export(name="rewriteRule", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> rewriteRule;

    /**
     * @return Name of rewrite rule
     * 
     */
    public Output<Optional<String>> rewriteRule() {
        return Codegen.optional(this.rewriteRule);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="rewriteRuleVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> rewriteRuleVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> rewriteRuleVariable() {
        return Codegen.optional(this.rewriteRuleVariable);
    }
    /**
     * Administrative state - Default value: `true`
     * 
     */
    @Export(name="shutdown", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> shutdown;

    /**
     * @return Administrative state - Default value: `true`
     * 
     */
    public Output<Optional<Boolean>> shutdown() {
        return Codegen.optional(this.shutdown);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="shutdownVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> shutdownVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> shutdownVariable() {
        return Codegen.optional(this.shutdownVariable);
    }
    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     * 
     */
    @Export(name="tcpMssAdjust", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tcpMssAdjust;

    /**
     * @return TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     * 
     */
    public Output<Optional<Integer>> tcpMssAdjust() {
        return Codegen.optional(this.tcpMssAdjust);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tcpMssAdjustVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tcpMssAdjustVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tcpMssAdjustVariable() {
        return Codegen.optional(this.tcpMssAdjustVariable);
    }
    /**
     * The template type
     * 
     */
    @Export(name="templateType", refs={String.class}, tree="[0]")
    private Output<String> templateType;

    /**
     * @return The template type
     * 
     */
    public Output<String> templateType() {
        return this.templateType;
    }
    /**
     * Variable name
     * 
     */
    @Export(name="trackerVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> trackerVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> trackerVariable() {
        return Codegen.optional(this.trackerVariable);
    }
    /**
     * Enable tracker for this interface
     * 
     */
    @Export(name="trackers", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> trackers;

    /**
     * @return Enable tracker for this interface
     * 
     */
    public Output<Optional<List<String>>> trackers() {
        return Codegen.optional(this.trackers);
    }
    /**
     * Tunnel destination IP Address
     * 
     */
    @Export(name="tunnelDestination", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelDestination;

    /**
     * @return Tunnel destination IP Address
     * 
     */
    public Output<Optional<String>> tunnelDestination() {
        return Codegen.optional(this.tunnelDestination);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelDestinationVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelDestinationVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelDestinationVariable() {
        return Codegen.optional(this.tunnelDestinationVariable);
    }
    /**
     * &lt;1..32 characters&gt; Interface name: ge0/&lt;0-..&gt; or ge0/&lt;0-..&gt;.vlanid
     * 
     */
    @Export(name="tunnelRouteVia", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelRouteVia;

    /**
     * @return &lt;1..32 characters&gt; Interface name: ge0/&lt;0-..&gt; or ge0/&lt;0-..&gt;.vlanid
     * 
     */
    public Output<Optional<String>> tunnelRouteVia() {
        return Codegen.optional(this.tunnelRouteVia);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelRouteViaVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelRouteViaVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelRouteViaVariable() {
        return Codegen.optional(this.tunnelRouteViaVariable);
    }
    /**
     * Tunnel source IP Address
     * 
     */
    @Export(name="tunnelSource", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelSource;

    /**
     * @return Tunnel source IP Address
     * 
     */
    public Output<Optional<String>> tunnelSource() {
        return Codegen.optional(this.tunnelSource);
    }
    /**
     * &lt;1..32 characters&gt; Interface name: ge0/&lt;0-..&gt; or ge0/&lt;0-..&gt;.vlanid
     * 
     */
    @Export(name="tunnelSourceInterface", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelSourceInterface;

    /**
     * @return &lt;1..32 characters&gt; Interface name: ge0/&lt;0-..&gt; or ge0/&lt;0-..&gt;.vlanid
     * 
     */
    public Output<Optional<String>> tunnelSourceInterface() {
        return Codegen.optional(this.tunnelSourceInterface);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelSourceInterfaceVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelSourceInterfaceVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelSourceInterfaceVariable() {
        return Codegen.optional(this.tunnelSourceInterfaceVariable);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelSourceVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelSourceVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelSourceVariable() {
        return Codegen.optional(this.tunnelSourceVariable);
    }
    /**
     * The version of the feature template
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the feature template
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CiscoVpnInterfaceGreFeatureTemplate(String name) {
        this(name, CiscoVpnInterfaceGreFeatureTemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CiscoVpnInterfaceGreFeatureTemplate(String name, CiscoVpnInterfaceGreFeatureTemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CiscoVpnInterfaceGreFeatureTemplate(String name, CiscoVpnInterfaceGreFeatureTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/ciscoVpnInterfaceGreFeatureTemplate:CiscoVpnInterfaceGreFeatureTemplate", name, args == null ? CiscoVpnInterfaceGreFeatureTemplateArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CiscoVpnInterfaceGreFeatureTemplate(String name, Output<String> id, @Nullable CiscoVpnInterfaceGreFeatureTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/ciscoVpnInterfaceGreFeatureTemplate:CiscoVpnInterfaceGreFeatureTemplate", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CiscoVpnInterfaceGreFeatureTemplate get(String name, Output<String> id, @Nullable CiscoVpnInterfaceGreFeatureTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CiscoVpnInterfaceGreFeatureTemplate(name, id, state, options);
    }
}
