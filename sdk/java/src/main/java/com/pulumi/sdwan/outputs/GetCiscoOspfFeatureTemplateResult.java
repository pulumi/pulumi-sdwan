// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetCiscoOspfFeatureTemplateArea;
import com.pulumi.sdwan.outputs.GetCiscoOspfFeatureTemplateMaxMetricRouterLsa;
import com.pulumi.sdwan.outputs.GetCiscoOspfFeatureTemplateRedistribute;
import com.pulumi.sdwan.outputs.GetCiscoOspfFeatureTemplateRoutePolicy;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCiscoOspfFeatureTemplateResult {
    /**
     * @return Configure OSPF area
     * 
     */
    private List<GetCiscoOspfFeatureTemplateArea> areas;
    /**
     * @return Set reference bandwidth method to assign OSPF cost
     * 
     */
    private Integer autoCostReferenceBandwidth;
    /**
     * @return Variable name
     * 
     */
    private String autoCostReferenceBandwidthVariable;
    /**
     * @return Calculate summary route cost based on RFC 1583
     * 
     */
    private Boolean compatibleRfc1583;
    /**
     * @return Variable name
     * 
     */
    private String compatibleRfc1583Variable;
    /**
     * @return Distribute default external route into OSPF
     * 
     */
    private Boolean defaultInformationOriginate;
    /**
     * @return Always advertise default route
     * 
     */
    private Boolean defaultInformationOriginateAlways;
    /**
     * @return Variable name
     * 
     */
    private String defaultInformationOriginateAlwaysVariable;
    /**
     * @return Set metric used to generate default route \n\n
     * 
     */
    private Integer defaultInformationOriginateMetric;
    /**
     * @return Set default route type
     * 
     */
    private String defaultInformationOriginateMetricType;
    /**
     * @return Variable name
     * 
     */
    private String defaultInformationOriginateMetricTypeVariable;
    /**
     * @return Variable name
     * 
     */
    private String defaultInformationOriginateMetricVariable;
    /**
     * @return The description of the feature template
     * 
     */
    private String description;
    /**
     * @return List of supported device types
     * 
     */
    private List<String> deviceTypes;
    /**
     * @return Set distance for external routes
     * 
     */
    private Integer distanceExternal;
    /**
     * @return Variable name
     * 
     */
    private String distanceExternalVariable;
    /**
     * @return Set distance for inter-area routes
     * 
     */
    private Integer distanceInterArea;
    /**
     * @return Variable name
     * 
     */
    private String distanceInterAreaVariable;
    /**
     * @return Set distance for intra-area routes
     * 
     */
    private Integer distanceIntraArea;
    /**
     * @return Variable name
     * 
     */
    private String distanceIntraAreaVariable;
    /**
     * @return The id of the feature template
     * 
     */
    private String id;
    /**
     * @return Advertise own router LSA with infinite distance
     * 
     */
    private List<GetCiscoOspfFeatureTemplateMaxMetricRouterLsa> maxMetricRouterLsas;
    /**
     * @return The name of the feature template
     * 
     */
    private String name;
    /**
     * @return Redistribute routes
     * 
     */
    private List<GetCiscoOspfFeatureTemplateRedistribute> redistributes;
    /**
     * @return Set route policy to apply
     * 
     */
    private List<GetCiscoOspfFeatureTemplateRoutePolicy> routePolicies;
    /**
     * @return Set OSPF router ID to override system IP address
     * 
     */
    private String routerId;
    /**
     * @return Variable name
     * 
     */
    private String routerIdVariable;
    /**
     * @return The template type
     * 
     */
    private String templateType;
    /**
     * @return Set delay from first change received until performing SPF calculation
     * 
     */
    private Integer timersSpfDelay;
    /**
     * @return Variable name
     * 
     */
    private String timersSpfDelayVariable;
    /**
     * @return Set initial hold time between consecutive SPF calculations
     * 
     */
    private Integer timersSpfInitialHold;
    /**
     * @return Variable name
     * 
     */
    private String timersSpfInitialHoldVariable;
    /**
     * @return Set maximum hold time between consecutive SPF calculations
     * 
     */
    private Integer timersSpfMaxHold;
    /**
     * @return Variable name
     * 
     */
    private String timersSpfMaxHoldVariable;
    /**
     * @return The version of the feature template
     * 
     */
    private Integer version;

    private GetCiscoOspfFeatureTemplateResult() {}
    /**
     * @return Configure OSPF area
     * 
     */
    public List<GetCiscoOspfFeatureTemplateArea> areas() {
        return this.areas;
    }
    /**
     * @return Set reference bandwidth method to assign OSPF cost
     * 
     */
    public Integer autoCostReferenceBandwidth() {
        return this.autoCostReferenceBandwidth;
    }
    /**
     * @return Variable name
     * 
     */
    public String autoCostReferenceBandwidthVariable() {
        return this.autoCostReferenceBandwidthVariable;
    }
    /**
     * @return Calculate summary route cost based on RFC 1583
     * 
     */
    public Boolean compatibleRfc1583() {
        return this.compatibleRfc1583;
    }
    /**
     * @return Variable name
     * 
     */
    public String compatibleRfc1583Variable() {
        return this.compatibleRfc1583Variable;
    }
    /**
     * @return Distribute default external route into OSPF
     * 
     */
    public Boolean defaultInformationOriginate() {
        return this.defaultInformationOriginate;
    }
    /**
     * @return Always advertise default route
     * 
     */
    public Boolean defaultInformationOriginateAlways() {
        return this.defaultInformationOriginateAlways;
    }
    /**
     * @return Variable name
     * 
     */
    public String defaultInformationOriginateAlwaysVariable() {
        return this.defaultInformationOriginateAlwaysVariable;
    }
    /**
     * @return Set metric used to generate default route \n\n
     * 
     */
    public Integer defaultInformationOriginateMetric() {
        return this.defaultInformationOriginateMetric;
    }
    /**
     * @return Set default route type
     * 
     */
    public String defaultInformationOriginateMetricType() {
        return this.defaultInformationOriginateMetricType;
    }
    /**
     * @return Variable name
     * 
     */
    public String defaultInformationOriginateMetricTypeVariable() {
        return this.defaultInformationOriginateMetricTypeVariable;
    }
    /**
     * @return Variable name
     * 
     */
    public String defaultInformationOriginateMetricVariable() {
        return this.defaultInformationOriginateMetricVariable;
    }
    /**
     * @return The description of the feature template
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return List of supported device types
     * 
     */
    public List<String> deviceTypes() {
        return this.deviceTypes;
    }
    /**
     * @return Set distance for external routes
     * 
     */
    public Integer distanceExternal() {
        return this.distanceExternal;
    }
    /**
     * @return Variable name
     * 
     */
    public String distanceExternalVariable() {
        return this.distanceExternalVariable;
    }
    /**
     * @return Set distance for inter-area routes
     * 
     */
    public Integer distanceInterArea() {
        return this.distanceInterArea;
    }
    /**
     * @return Variable name
     * 
     */
    public String distanceInterAreaVariable() {
        return this.distanceInterAreaVariable;
    }
    /**
     * @return Set distance for intra-area routes
     * 
     */
    public Integer distanceIntraArea() {
        return this.distanceIntraArea;
    }
    /**
     * @return Variable name
     * 
     */
    public String distanceIntraAreaVariable() {
        return this.distanceIntraAreaVariable;
    }
    /**
     * @return The id of the feature template
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Advertise own router LSA with infinite distance
     * 
     */
    public List<GetCiscoOspfFeatureTemplateMaxMetricRouterLsa> maxMetricRouterLsas() {
        return this.maxMetricRouterLsas;
    }
    /**
     * @return The name of the feature template
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Redistribute routes
     * 
     */
    public List<GetCiscoOspfFeatureTemplateRedistribute> redistributes() {
        return this.redistributes;
    }
    /**
     * @return Set route policy to apply
     * 
     */
    public List<GetCiscoOspfFeatureTemplateRoutePolicy> routePolicies() {
        return this.routePolicies;
    }
    /**
     * @return Set OSPF router ID to override system IP address
     * 
     */
    public String routerId() {
        return this.routerId;
    }
    /**
     * @return Variable name
     * 
     */
    public String routerIdVariable() {
        return this.routerIdVariable;
    }
    /**
     * @return The template type
     * 
     */
    public String templateType() {
        return this.templateType;
    }
    /**
     * @return Set delay from first change received until performing SPF calculation
     * 
     */
    public Integer timersSpfDelay() {
        return this.timersSpfDelay;
    }
    /**
     * @return Variable name
     * 
     */
    public String timersSpfDelayVariable() {
        return this.timersSpfDelayVariable;
    }
    /**
     * @return Set initial hold time between consecutive SPF calculations
     * 
     */
    public Integer timersSpfInitialHold() {
        return this.timersSpfInitialHold;
    }
    /**
     * @return Variable name
     * 
     */
    public String timersSpfInitialHoldVariable() {
        return this.timersSpfInitialHoldVariable;
    }
    /**
     * @return Set maximum hold time between consecutive SPF calculations
     * 
     */
    public Integer timersSpfMaxHold() {
        return this.timersSpfMaxHold;
    }
    /**
     * @return Variable name
     * 
     */
    public String timersSpfMaxHoldVariable() {
        return this.timersSpfMaxHoldVariable;
    }
    /**
     * @return The version of the feature template
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCiscoOspfFeatureTemplateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCiscoOspfFeatureTemplateArea> areas;
        private Integer autoCostReferenceBandwidth;
        private String autoCostReferenceBandwidthVariable;
        private Boolean compatibleRfc1583;
        private String compatibleRfc1583Variable;
        private Boolean defaultInformationOriginate;
        private Boolean defaultInformationOriginateAlways;
        private String defaultInformationOriginateAlwaysVariable;
        private Integer defaultInformationOriginateMetric;
        private String defaultInformationOriginateMetricType;
        private String defaultInformationOriginateMetricTypeVariable;
        private String defaultInformationOriginateMetricVariable;
        private String description;
        private List<String> deviceTypes;
        private Integer distanceExternal;
        private String distanceExternalVariable;
        private Integer distanceInterArea;
        private String distanceInterAreaVariable;
        private Integer distanceIntraArea;
        private String distanceIntraAreaVariable;
        private String id;
        private List<GetCiscoOspfFeatureTemplateMaxMetricRouterLsa> maxMetricRouterLsas;
        private String name;
        private List<GetCiscoOspfFeatureTemplateRedistribute> redistributes;
        private List<GetCiscoOspfFeatureTemplateRoutePolicy> routePolicies;
        private String routerId;
        private String routerIdVariable;
        private String templateType;
        private Integer timersSpfDelay;
        private String timersSpfDelayVariable;
        private Integer timersSpfInitialHold;
        private String timersSpfInitialHoldVariable;
        private Integer timersSpfMaxHold;
        private String timersSpfMaxHoldVariable;
        private Integer version;
        public Builder() {}
        public Builder(GetCiscoOspfFeatureTemplateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.areas = defaults.areas;
    	      this.autoCostReferenceBandwidth = defaults.autoCostReferenceBandwidth;
    	      this.autoCostReferenceBandwidthVariable = defaults.autoCostReferenceBandwidthVariable;
    	      this.compatibleRfc1583 = defaults.compatibleRfc1583;
    	      this.compatibleRfc1583Variable = defaults.compatibleRfc1583Variable;
    	      this.defaultInformationOriginate = defaults.defaultInformationOriginate;
    	      this.defaultInformationOriginateAlways = defaults.defaultInformationOriginateAlways;
    	      this.defaultInformationOriginateAlwaysVariable = defaults.defaultInformationOriginateAlwaysVariable;
    	      this.defaultInformationOriginateMetric = defaults.defaultInformationOriginateMetric;
    	      this.defaultInformationOriginateMetricType = defaults.defaultInformationOriginateMetricType;
    	      this.defaultInformationOriginateMetricTypeVariable = defaults.defaultInformationOriginateMetricTypeVariable;
    	      this.defaultInformationOriginateMetricVariable = defaults.defaultInformationOriginateMetricVariable;
    	      this.description = defaults.description;
    	      this.deviceTypes = defaults.deviceTypes;
    	      this.distanceExternal = defaults.distanceExternal;
    	      this.distanceExternalVariable = defaults.distanceExternalVariable;
    	      this.distanceInterArea = defaults.distanceInterArea;
    	      this.distanceInterAreaVariable = defaults.distanceInterAreaVariable;
    	      this.distanceIntraArea = defaults.distanceIntraArea;
    	      this.distanceIntraAreaVariable = defaults.distanceIntraAreaVariable;
    	      this.id = defaults.id;
    	      this.maxMetricRouterLsas = defaults.maxMetricRouterLsas;
    	      this.name = defaults.name;
    	      this.redistributes = defaults.redistributes;
    	      this.routePolicies = defaults.routePolicies;
    	      this.routerId = defaults.routerId;
    	      this.routerIdVariable = defaults.routerIdVariable;
    	      this.templateType = defaults.templateType;
    	      this.timersSpfDelay = defaults.timersSpfDelay;
    	      this.timersSpfDelayVariable = defaults.timersSpfDelayVariable;
    	      this.timersSpfInitialHold = defaults.timersSpfInitialHold;
    	      this.timersSpfInitialHoldVariable = defaults.timersSpfInitialHoldVariable;
    	      this.timersSpfMaxHold = defaults.timersSpfMaxHold;
    	      this.timersSpfMaxHoldVariable = defaults.timersSpfMaxHoldVariable;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder areas(List<GetCiscoOspfFeatureTemplateArea> areas) {
            if (areas == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "areas");
            }
            this.areas = areas;
            return this;
        }
        public Builder areas(GetCiscoOspfFeatureTemplateArea... areas) {
            return areas(List.of(areas));
        }
        @CustomType.Setter
        public Builder autoCostReferenceBandwidth(Integer autoCostReferenceBandwidth) {
            if (autoCostReferenceBandwidth == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "autoCostReferenceBandwidth");
            }
            this.autoCostReferenceBandwidth = autoCostReferenceBandwidth;
            return this;
        }
        @CustomType.Setter
        public Builder autoCostReferenceBandwidthVariable(String autoCostReferenceBandwidthVariable) {
            if (autoCostReferenceBandwidthVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "autoCostReferenceBandwidthVariable");
            }
            this.autoCostReferenceBandwidthVariable = autoCostReferenceBandwidthVariable;
            return this;
        }
        @CustomType.Setter
        public Builder compatibleRfc1583(Boolean compatibleRfc1583) {
            if (compatibleRfc1583 == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "compatibleRfc1583");
            }
            this.compatibleRfc1583 = compatibleRfc1583;
            return this;
        }
        @CustomType.Setter
        public Builder compatibleRfc1583Variable(String compatibleRfc1583Variable) {
            if (compatibleRfc1583Variable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "compatibleRfc1583Variable");
            }
            this.compatibleRfc1583Variable = compatibleRfc1583Variable;
            return this;
        }
        @CustomType.Setter
        public Builder defaultInformationOriginate(Boolean defaultInformationOriginate) {
            if (defaultInformationOriginate == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "defaultInformationOriginate");
            }
            this.defaultInformationOriginate = defaultInformationOriginate;
            return this;
        }
        @CustomType.Setter
        public Builder defaultInformationOriginateAlways(Boolean defaultInformationOriginateAlways) {
            if (defaultInformationOriginateAlways == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "defaultInformationOriginateAlways");
            }
            this.defaultInformationOriginateAlways = defaultInformationOriginateAlways;
            return this;
        }
        @CustomType.Setter
        public Builder defaultInformationOriginateAlwaysVariable(String defaultInformationOriginateAlwaysVariable) {
            if (defaultInformationOriginateAlwaysVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "defaultInformationOriginateAlwaysVariable");
            }
            this.defaultInformationOriginateAlwaysVariable = defaultInformationOriginateAlwaysVariable;
            return this;
        }
        @CustomType.Setter
        public Builder defaultInformationOriginateMetric(Integer defaultInformationOriginateMetric) {
            if (defaultInformationOriginateMetric == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "defaultInformationOriginateMetric");
            }
            this.defaultInformationOriginateMetric = defaultInformationOriginateMetric;
            return this;
        }
        @CustomType.Setter
        public Builder defaultInformationOriginateMetricType(String defaultInformationOriginateMetricType) {
            if (defaultInformationOriginateMetricType == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "defaultInformationOriginateMetricType");
            }
            this.defaultInformationOriginateMetricType = defaultInformationOriginateMetricType;
            return this;
        }
        @CustomType.Setter
        public Builder defaultInformationOriginateMetricTypeVariable(String defaultInformationOriginateMetricTypeVariable) {
            if (defaultInformationOriginateMetricTypeVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "defaultInformationOriginateMetricTypeVariable");
            }
            this.defaultInformationOriginateMetricTypeVariable = defaultInformationOriginateMetricTypeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder defaultInformationOriginateMetricVariable(String defaultInformationOriginateMetricVariable) {
            if (defaultInformationOriginateMetricVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "defaultInformationOriginateMetricVariable");
            }
            this.defaultInformationOriginateMetricVariable = defaultInformationOriginateMetricVariable;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder deviceTypes(List<String> deviceTypes) {
            if (deviceTypes == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "deviceTypes");
            }
            this.deviceTypes = deviceTypes;
            return this;
        }
        public Builder deviceTypes(String... deviceTypes) {
            return deviceTypes(List.of(deviceTypes));
        }
        @CustomType.Setter
        public Builder distanceExternal(Integer distanceExternal) {
            if (distanceExternal == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "distanceExternal");
            }
            this.distanceExternal = distanceExternal;
            return this;
        }
        @CustomType.Setter
        public Builder distanceExternalVariable(String distanceExternalVariable) {
            if (distanceExternalVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "distanceExternalVariable");
            }
            this.distanceExternalVariable = distanceExternalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder distanceInterArea(Integer distanceInterArea) {
            if (distanceInterArea == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "distanceInterArea");
            }
            this.distanceInterArea = distanceInterArea;
            return this;
        }
        @CustomType.Setter
        public Builder distanceInterAreaVariable(String distanceInterAreaVariable) {
            if (distanceInterAreaVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "distanceInterAreaVariable");
            }
            this.distanceInterAreaVariable = distanceInterAreaVariable;
            return this;
        }
        @CustomType.Setter
        public Builder distanceIntraArea(Integer distanceIntraArea) {
            if (distanceIntraArea == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "distanceIntraArea");
            }
            this.distanceIntraArea = distanceIntraArea;
            return this;
        }
        @CustomType.Setter
        public Builder distanceIntraAreaVariable(String distanceIntraAreaVariable) {
            if (distanceIntraAreaVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "distanceIntraAreaVariable");
            }
            this.distanceIntraAreaVariable = distanceIntraAreaVariable;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder maxMetricRouterLsas(List<GetCiscoOspfFeatureTemplateMaxMetricRouterLsa> maxMetricRouterLsas) {
            if (maxMetricRouterLsas == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "maxMetricRouterLsas");
            }
            this.maxMetricRouterLsas = maxMetricRouterLsas;
            return this;
        }
        public Builder maxMetricRouterLsas(GetCiscoOspfFeatureTemplateMaxMetricRouterLsa... maxMetricRouterLsas) {
            return maxMetricRouterLsas(List.of(maxMetricRouterLsas));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder redistributes(List<GetCiscoOspfFeatureTemplateRedistribute> redistributes) {
            if (redistributes == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "redistributes");
            }
            this.redistributes = redistributes;
            return this;
        }
        public Builder redistributes(GetCiscoOspfFeatureTemplateRedistribute... redistributes) {
            return redistributes(List.of(redistributes));
        }
        @CustomType.Setter
        public Builder routePolicies(List<GetCiscoOspfFeatureTemplateRoutePolicy> routePolicies) {
            if (routePolicies == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "routePolicies");
            }
            this.routePolicies = routePolicies;
            return this;
        }
        public Builder routePolicies(GetCiscoOspfFeatureTemplateRoutePolicy... routePolicies) {
            return routePolicies(List.of(routePolicies));
        }
        @CustomType.Setter
        public Builder routerId(String routerId) {
            if (routerId == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "routerId");
            }
            this.routerId = routerId;
            return this;
        }
        @CustomType.Setter
        public Builder routerIdVariable(String routerIdVariable) {
            if (routerIdVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "routerIdVariable");
            }
            this.routerIdVariable = routerIdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder templateType(String templateType) {
            if (templateType == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "templateType");
            }
            this.templateType = templateType;
            return this;
        }
        @CustomType.Setter
        public Builder timersSpfDelay(Integer timersSpfDelay) {
            if (timersSpfDelay == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "timersSpfDelay");
            }
            this.timersSpfDelay = timersSpfDelay;
            return this;
        }
        @CustomType.Setter
        public Builder timersSpfDelayVariable(String timersSpfDelayVariable) {
            if (timersSpfDelayVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "timersSpfDelayVariable");
            }
            this.timersSpfDelayVariable = timersSpfDelayVariable;
            return this;
        }
        @CustomType.Setter
        public Builder timersSpfInitialHold(Integer timersSpfInitialHold) {
            if (timersSpfInitialHold == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "timersSpfInitialHold");
            }
            this.timersSpfInitialHold = timersSpfInitialHold;
            return this;
        }
        @CustomType.Setter
        public Builder timersSpfInitialHoldVariable(String timersSpfInitialHoldVariable) {
            if (timersSpfInitialHoldVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "timersSpfInitialHoldVariable");
            }
            this.timersSpfInitialHoldVariable = timersSpfInitialHoldVariable;
            return this;
        }
        @CustomType.Setter
        public Builder timersSpfMaxHold(Integer timersSpfMaxHold) {
            if (timersSpfMaxHold == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "timersSpfMaxHold");
            }
            this.timersSpfMaxHold = timersSpfMaxHold;
            return this;
        }
        @CustomType.Setter
        public Builder timersSpfMaxHoldVariable(String timersSpfMaxHoldVariable) {
            if (timersSpfMaxHoldVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "timersSpfMaxHoldVariable");
            }
            this.timersSpfMaxHoldVariable = timersSpfMaxHoldVariable;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfFeatureTemplateResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetCiscoOspfFeatureTemplateResult build() {
            final var _resultValue = new GetCiscoOspfFeatureTemplateResult();
            _resultValue.areas = areas;
            _resultValue.autoCostReferenceBandwidth = autoCostReferenceBandwidth;
            _resultValue.autoCostReferenceBandwidthVariable = autoCostReferenceBandwidthVariable;
            _resultValue.compatibleRfc1583 = compatibleRfc1583;
            _resultValue.compatibleRfc1583Variable = compatibleRfc1583Variable;
            _resultValue.defaultInformationOriginate = defaultInformationOriginate;
            _resultValue.defaultInformationOriginateAlways = defaultInformationOriginateAlways;
            _resultValue.defaultInformationOriginateAlwaysVariable = defaultInformationOriginateAlwaysVariable;
            _resultValue.defaultInformationOriginateMetric = defaultInformationOriginateMetric;
            _resultValue.defaultInformationOriginateMetricType = defaultInformationOriginateMetricType;
            _resultValue.defaultInformationOriginateMetricTypeVariable = defaultInformationOriginateMetricTypeVariable;
            _resultValue.defaultInformationOriginateMetricVariable = defaultInformationOriginateMetricVariable;
            _resultValue.description = description;
            _resultValue.deviceTypes = deviceTypes;
            _resultValue.distanceExternal = distanceExternal;
            _resultValue.distanceExternalVariable = distanceExternalVariable;
            _resultValue.distanceInterArea = distanceInterArea;
            _resultValue.distanceInterAreaVariable = distanceInterAreaVariable;
            _resultValue.distanceIntraArea = distanceIntraArea;
            _resultValue.distanceIntraAreaVariable = distanceIntraAreaVariable;
            _resultValue.id = id;
            _resultValue.maxMetricRouterLsas = maxMetricRouterLsas;
            _resultValue.name = name;
            _resultValue.redistributes = redistributes;
            _resultValue.routePolicies = routePolicies;
            _resultValue.routerId = routerId;
            _resultValue.routerIdVariable = routerIdVariable;
            _resultValue.templateType = templateType;
            _resultValue.timersSpfDelay = timersSpfDelay;
            _resultValue.timersSpfDelayVariable = timersSpfDelayVariable;
            _resultValue.timersSpfInitialHold = timersSpfInitialHold;
            _resultValue.timersSpfInitialHoldVariable = timersSpfInitialHoldVariable;
            _resultValue.timersSpfMaxHold = timersSpfMaxHold;
            _resultValue.timersSpfMaxHoldVariable = timersSpfMaxHoldVariable;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
