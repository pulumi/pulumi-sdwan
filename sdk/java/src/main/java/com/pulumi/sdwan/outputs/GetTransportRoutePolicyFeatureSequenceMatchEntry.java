// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetTransportRoutePolicyFeatureSequenceMatchEntryStandardCommunityList;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTransportRoutePolicyFeatureSequenceMatchEntry {
    private String asPathListId;
    /**
     * @return BGP Local Preference
     * 
     */
    private Integer bgpLocalPreference;
    private String expandedCommunityListId;
    private String extendedCommunityListId;
    private String ipv4AddressPrefixListId;
    private String ipv4NextHopPrefixListId;
    private String ipv6AddressPrefixListId;
    private String ipv6NextHopPrefixListId;
    /**
     * @return Select Metric
     * 
     */
    private Integer metric;
    /**
     * @return Select OMP Tag
     * 
     */
    private Integer ompTag;
    /**
     * @return Select OSPF Tag
     * 
     */
    private Integer ospfTag;
    /**
     * @return Select a condition such as OR, AND or EXACT
     * 
     */
    private String standardCommunityListCriteria;
    /**
     * @return Select a standard community list
     * 
     */
    private List<GetTransportRoutePolicyFeatureSequenceMatchEntryStandardCommunityList> standardCommunityLists;

    private GetTransportRoutePolicyFeatureSequenceMatchEntry() {}
    public String asPathListId() {
        return this.asPathListId;
    }
    /**
     * @return BGP Local Preference
     * 
     */
    public Integer bgpLocalPreference() {
        return this.bgpLocalPreference;
    }
    public String expandedCommunityListId() {
        return this.expandedCommunityListId;
    }
    public String extendedCommunityListId() {
        return this.extendedCommunityListId;
    }
    public String ipv4AddressPrefixListId() {
        return this.ipv4AddressPrefixListId;
    }
    public String ipv4NextHopPrefixListId() {
        return this.ipv4NextHopPrefixListId;
    }
    public String ipv6AddressPrefixListId() {
        return this.ipv6AddressPrefixListId;
    }
    public String ipv6NextHopPrefixListId() {
        return this.ipv6NextHopPrefixListId;
    }
    /**
     * @return Select Metric
     * 
     */
    public Integer metric() {
        return this.metric;
    }
    /**
     * @return Select OMP Tag
     * 
     */
    public Integer ompTag() {
        return this.ompTag;
    }
    /**
     * @return Select OSPF Tag
     * 
     */
    public Integer ospfTag() {
        return this.ospfTag;
    }
    /**
     * @return Select a condition such as OR, AND or EXACT
     * 
     */
    public String standardCommunityListCriteria() {
        return this.standardCommunityListCriteria;
    }
    /**
     * @return Select a standard community list
     * 
     */
    public List<GetTransportRoutePolicyFeatureSequenceMatchEntryStandardCommunityList> standardCommunityLists() {
        return this.standardCommunityLists;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTransportRoutePolicyFeatureSequenceMatchEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String asPathListId;
        private Integer bgpLocalPreference;
        private String expandedCommunityListId;
        private String extendedCommunityListId;
        private String ipv4AddressPrefixListId;
        private String ipv4NextHopPrefixListId;
        private String ipv6AddressPrefixListId;
        private String ipv6NextHopPrefixListId;
        private Integer metric;
        private Integer ompTag;
        private Integer ospfTag;
        private String standardCommunityListCriteria;
        private List<GetTransportRoutePolicyFeatureSequenceMatchEntryStandardCommunityList> standardCommunityLists;
        public Builder() {}
        public Builder(GetTransportRoutePolicyFeatureSequenceMatchEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asPathListId = defaults.asPathListId;
    	      this.bgpLocalPreference = defaults.bgpLocalPreference;
    	      this.expandedCommunityListId = defaults.expandedCommunityListId;
    	      this.extendedCommunityListId = defaults.extendedCommunityListId;
    	      this.ipv4AddressPrefixListId = defaults.ipv4AddressPrefixListId;
    	      this.ipv4NextHopPrefixListId = defaults.ipv4NextHopPrefixListId;
    	      this.ipv6AddressPrefixListId = defaults.ipv6AddressPrefixListId;
    	      this.ipv6NextHopPrefixListId = defaults.ipv6NextHopPrefixListId;
    	      this.metric = defaults.metric;
    	      this.ompTag = defaults.ompTag;
    	      this.ospfTag = defaults.ospfTag;
    	      this.standardCommunityListCriteria = defaults.standardCommunityListCriteria;
    	      this.standardCommunityLists = defaults.standardCommunityLists;
        }

        @CustomType.Setter
        public Builder asPathListId(String asPathListId) {
            if (asPathListId == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutePolicyFeatureSequenceMatchEntry", "asPathListId");
            }
            this.asPathListId = asPathListId;
            return this;
        }
        @CustomType.Setter
        public Builder bgpLocalPreference(Integer bgpLocalPreference) {
            if (bgpLocalPreference == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutePolicyFeatureSequenceMatchEntry", "bgpLocalPreference");
            }
            this.bgpLocalPreference = bgpLocalPreference;
            return this;
        }
        @CustomType.Setter
        public Builder expandedCommunityListId(String expandedCommunityListId) {
            if (expandedCommunityListId == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutePolicyFeatureSequenceMatchEntry", "expandedCommunityListId");
            }
            this.expandedCommunityListId = expandedCommunityListId;
            return this;
        }
        @CustomType.Setter
        public Builder extendedCommunityListId(String extendedCommunityListId) {
            if (extendedCommunityListId == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutePolicyFeatureSequenceMatchEntry", "extendedCommunityListId");
            }
            this.extendedCommunityListId = extendedCommunityListId;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4AddressPrefixListId(String ipv4AddressPrefixListId) {
            if (ipv4AddressPrefixListId == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutePolicyFeatureSequenceMatchEntry", "ipv4AddressPrefixListId");
            }
            this.ipv4AddressPrefixListId = ipv4AddressPrefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4NextHopPrefixListId(String ipv4NextHopPrefixListId) {
            if (ipv4NextHopPrefixListId == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutePolicyFeatureSequenceMatchEntry", "ipv4NextHopPrefixListId");
            }
            this.ipv4NextHopPrefixListId = ipv4NextHopPrefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6AddressPrefixListId(String ipv6AddressPrefixListId) {
            if (ipv6AddressPrefixListId == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutePolicyFeatureSequenceMatchEntry", "ipv6AddressPrefixListId");
            }
            this.ipv6AddressPrefixListId = ipv6AddressPrefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6NextHopPrefixListId(String ipv6NextHopPrefixListId) {
            if (ipv6NextHopPrefixListId == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutePolicyFeatureSequenceMatchEntry", "ipv6NextHopPrefixListId");
            }
            this.ipv6NextHopPrefixListId = ipv6NextHopPrefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder metric(Integer metric) {
            if (metric == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutePolicyFeatureSequenceMatchEntry", "metric");
            }
            this.metric = metric;
            return this;
        }
        @CustomType.Setter
        public Builder ompTag(Integer ompTag) {
            if (ompTag == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutePolicyFeatureSequenceMatchEntry", "ompTag");
            }
            this.ompTag = ompTag;
            return this;
        }
        @CustomType.Setter
        public Builder ospfTag(Integer ospfTag) {
            if (ospfTag == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutePolicyFeatureSequenceMatchEntry", "ospfTag");
            }
            this.ospfTag = ospfTag;
            return this;
        }
        @CustomType.Setter
        public Builder standardCommunityListCriteria(String standardCommunityListCriteria) {
            if (standardCommunityListCriteria == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutePolicyFeatureSequenceMatchEntry", "standardCommunityListCriteria");
            }
            this.standardCommunityListCriteria = standardCommunityListCriteria;
            return this;
        }
        @CustomType.Setter
        public Builder standardCommunityLists(List<GetTransportRoutePolicyFeatureSequenceMatchEntryStandardCommunityList> standardCommunityLists) {
            if (standardCommunityLists == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutePolicyFeatureSequenceMatchEntry", "standardCommunityLists");
            }
            this.standardCommunityLists = standardCommunityLists;
            return this;
        }
        public Builder standardCommunityLists(GetTransportRoutePolicyFeatureSequenceMatchEntryStandardCommunityList... standardCommunityLists) {
            return standardCommunityLists(List.of(standardCommunityLists));
        }
        public GetTransportRoutePolicyFeatureSequenceMatchEntry build() {
            final var _resultValue = new GetTransportRoutePolicyFeatureSequenceMatchEntry();
            _resultValue.asPathListId = asPathListId;
            _resultValue.bgpLocalPreference = bgpLocalPreference;
            _resultValue.expandedCommunityListId = expandedCommunityListId;
            _resultValue.extendedCommunityListId = extendedCommunityListId;
            _resultValue.ipv4AddressPrefixListId = ipv4AddressPrefixListId;
            _resultValue.ipv4NextHopPrefixListId = ipv4NextHopPrefixListId;
            _resultValue.ipv6AddressPrefixListId = ipv6AddressPrefixListId;
            _resultValue.ipv6NextHopPrefixListId = ipv6NextHopPrefixListId;
            _resultValue.metric = metric;
            _resultValue.ompTag = ompTag;
            _resultValue.ospfTag = ospfTag;
            _resultValue.standardCommunityListCriteria = standardCommunityListCriteria;
            _resultValue.standardCommunityLists = standardCommunityLists;
            return _resultValue;
        }
    }
}
