// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyObjectIpv4PrefixListEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyObjectIpv4PrefixListEntryArgs Empty = new PolicyObjectIpv4PrefixListEntryArgs();

    /**
     * IPv4 prefix length with ge range operator
     *   - Range: `1`-`32`
     * 
     */
    @Import(name="ge")
    private @Nullable Output<Integer> ge;

    /**
     * @return IPv4 prefix length with ge range operator
     *   - Range: `1`-`32`
     * 
     */
    public Optional<Output<Integer>> ge() {
        return Optional.ofNullable(this.ge);
    }

    /**
     * IPv4 address
     * 
     */
    @Import(name="ipv4Address")
    private @Nullable Output<String> ipv4Address;

    /**
     * @return IPv4 address
     * 
     */
    public Optional<Output<String>> ipv4Address() {
        return Optional.ofNullable(this.ipv4Address);
    }

    /**
     * IPv4 prefix length
     *   - Range: `0`-`32`
     * 
     */
    @Import(name="ipv4PrefixLength")
    private @Nullable Output<Integer> ipv4PrefixLength;

    /**
     * @return IPv4 prefix length
     *   - Range: `0`-`32`
     * 
     */
    public Optional<Output<Integer>> ipv4PrefixLength() {
        return Optional.ofNullable(this.ipv4PrefixLength);
    }

    /**
     * IPv4 prefix length with le range operator
     *   - Range: `1`-`32`
     * 
     */
    @Import(name="le")
    private @Nullable Output<Integer> le;

    /**
     * @return IPv4 prefix length with le range operator
     *   - Range: `1`-`32`
     * 
     */
    public Optional<Output<Integer>> le() {
        return Optional.ofNullable(this.le);
    }

    private PolicyObjectIpv4PrefixListEntryArgs() {}

    private PolicyObjectIpv4PrefixListEntryArgs(PolicyObjectIpv4PrefixListEntryArgs $) {
        this.ge = $.ge;
        this.ipv4Address = $.ipv4Address;
        this.ipv4PrefixLength = $.ipv4PrefixLength;
        this.le = $.le;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyObjectIpv4PrefixListEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyObjectIpv4PrefixListEntryArgs $;

        public Builder() {
            $ = new PolicyObjectIpv4PrefixListEntryArgs();
        }

        public Builder(PolicyObjectIpv4PrefixListEntryArgs defaults) {
            $ = new PolicyObjectIpv4PrefixListEntryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ge IPv4 prefix length with ge range operator
         *   - Range: `1`-`32`
         * 
         * @return builder
         * 
         */
        public Builder ge(@Nullable Output<Integer> ge) {
            $.ge = ge;
            return this;
        }

        /**
         * @param ge IPv4 prefix length with ge range operator
         *   - Range: `1`-`32`
         * 
         * @return builder
         * 
         */
        public Builder ge(Integer ge) {
            return ge(Output.of(ge));
        }

        /**
         * @param ipv4Address IPv4 address
         * 
         * @return builder
         * 
         */
        public Builder ipv4Address(@Nullable Output<String> ipv4Address) {
            $.ipv4Address = ipv4Address;
            return this;
        }

        /**
         * @param ipv4Address IPv4 address
         * 
         * @return builder
         * 
         */
        public Builder ipv4Address(String ipv4Address) {
            return ipv4Address(Output.of(ipv4Address));
        }

        /**
         * @param ipv4PrefixLength IPv4 prefix length
         *   - Range: `0`-`32`
         * 
         * @return builder
         * 
         */
        public Builder ipv4PrefixLength(@Nullable Output<Integer> ipv4PrefixLength) {
            $.ipv4PrefixLength = ipv4PrefixLength;
            return this;
        }

        /**
         * @param ipv4PrefixLength IPv4 prefix length
         *   - Range: `0`-`32`
         * 
         * @return builder
         * 
         */
        public Builder ipv4PrefixLength(Integer ipv4PrefixLength) {
            return ipv4PrefixLength(Output.of(ipv4PrefixLength));
        }

        /**
         * @param le IPv4 prefix length with le range operator
         *   - Range: `1`-`32`
         * 
         * @return builder
         * 
         */
        public Builder le(@Nullable Output<Integer> le) {
            $.le = le;
            return this;
        }

        /**
         * @param le IPv4 prefix length with le range operator
         *   - Range: `1`-`32`
         * 
         * @return builder
         * 
         */
        public Builder le(Integer le) {
            return le(Output.of(le));
        }

        public PolicyObjectIpv4PrefixListEntryArgs build() {
            return $;
        }
    }

}
