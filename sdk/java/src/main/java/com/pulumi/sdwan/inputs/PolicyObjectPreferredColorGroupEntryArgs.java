// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyObjectPreferredColorGroupEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyObjectPreferredColorGroupEntryArgs Empty = new PolicyObjectPreferredColorGroupEntryArgs();

    @Import(name="primaryColorPreferences")
    private @Nullable Output<List<String>> primaryColorPreferences;

    public Optional<Output<List<String>>> primaryColorPreferences() {
        return Optional.ofNullable(this.primaryColorPreferences);
    }

    /**
     * - Choices: `all-paths`, `direct-path`, `multi-hop-path`
     * 
     */
    @Import(name="primaryPathPreference")
    private @Nullable Output<String> primaryPathPreference;

    /**
     * @return - Choices: `all-paths`, `direct-path`, `multi-hop-path`
     * 
     */
    public Optional<Output<String>> primaryPathPreference() {
        return Optional.ofNullable(this.primaryPathPreference);
    }

    @Import(name="secondaryColorPreferences")
    private @Nullable Output<List<String>> secondaryColorPreferences;

    public Optional<Output<List<String>>> secondaryColorPreferences() {
        return Optional.ofNullable(this.secondaryColorPreferences);
    }

    /**
     * - Choices: `all-paths`, `direct-path`, `multi-hop-path`
     * 
     */
    @Import(name="secondaryPathPreference")
    private @Nullable Output<String> secondaryPathPreference;

    /**
     * @return - Choices: `all-paths`, `direct-path`, `multi-hop-path`
     * 
     */
    public Optional<Output<String>> secondaryPathPreference() {
        return Optional.ofNullable(this.secondaryPathPreference);
    }

    @Import(name="tertiaryColorPreferences")
    private @Nullable Output<List<String>> tertiaryColorPreferences;

    public Optional<Output<List<String>>> tertiaryColorPreferences() {
        return Optional.ofNullable(this.tertiaryColorPreferences);
    }

    /**
     * - Choices: `all-paths`, `direct-path`, `multi-hop-path`
     * 
     */
    @Import(name="tertiaryPathPreference")
    private @Nullable Output<String> tertiaryPathPreference;

    /**
     * @return - Choices: `all-paths`, `direct-path`, `multi-hop-path`
     * 
     */
    public Optional<Output<String>> tertiaryPathPreference() {
        return Optional.ofNullable(this.tertiaryPathPreference);
    }

    private PolicyObjectPreferredColorGroupEntryArgs() {}

    private PolicyObjectPreferredColorGroupEntryArgs(PolicyObjectPreferredColorGroupEntryArgs $) {
        this.primaryColorPreferences = $.primaryColorPreferences;
        this.primaryPathPreference = $.primaryPathPreference;
        this.secondaryColorPreferences = $.secondaryColorPreferences;
        this.secondaryPathPreference = $.secondaryPathPreference;
        this.tertiaryColorPreferences = $.tertiaryColorPreferences;
        this.tertiaryPathPreference = $.tertiaryPathPreference;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyObjectPreferredColorGroupEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyObjectPreferredColorGroupEntryArgs $;

        public Builder() {
            $ = new PolicyObjectPreferredColorGroupEntryArgs();
        }

        public Builder(PolicyObjectPreferredColorGroupEntryArgs defaults) {
            $ = new PolicyObjectPreferredColorGroupEntryArgs(Objects.requireNonNull(defaults));
        }

        public Builder primaryColorPreferences(@Nullable Output<List<String>> primaryColorPreferences) {
            $.primaryColorPreferences = primaryColorPreferences;
            return this;
        }

        public Builder primaryColorPreferences(List<String> primaryColorPreferences) {
            return primaryColorPreferences(Output.of(primaryColorPreferences));
        }

        public Builder primaryColorPreferences(String... primaryColorPreferences) {
            return primaryColorPreferences(List.of(primaryColorPreferences));
        }

        /**
         * @param primaryPathPreference - Choices: `all-paths`, `direct-path`, `multi-hop-path`
         * 
         * @return builder
         * 
         */
        public Builder primaryPathPreference(@Nullable Output<String> primaryPathPreference) {
            $.primaryPathPreference = primaryPathPreference;
            return this;
        }

        /**
         * @param primaryPathPreference - Choices: `all-paths`, `direct-path`, `multi-hop-path`
         * 
         * @return builder
         * 
         */
        public Builder primaryPathPreference(String primaryPathPreference) {
            return primaryPathPreference(Output.of(primaryPathPreference));
        }

        public Builder secondaryColorPreferences(@Nullable Output<List<String>> secondaryColorPreferences) {
            $.secondaryColorPreferences = secondaryColorPreferences;
            return this;
        }

        public Builder secondaryColorPreferences(List<String> secondaryColorPreferences) {
            return secondaryColorPreferences(Output.of(secondaryColorPreferences));
        }

        public Builder secondaryColorPreferences(String... secondaryColorPreferences) {
            return secondaryColorPreferences(List.of(secondaryColorPreferences));
        }

        /**
         * @param secondaryPathPreference - Choices: `all-paths`, `direct-path`, `multi-hop-path`
         * 
         * @return builder
         * 
         */
        public Builder secondaryPathPreference(@Nullable Output<String> secondaryPathPreference) {
            $.secondaryPathPreference = secondaryPathPreference;
            return this;
        }

        /**
         * @param secondaryPathPreference - Choices: `all-paths`, `direct-path`, `multi-hop-path`
         * 
         * @return builder
         * 
         */
        public Builder secondaryPathPreference(String secondaryPathPreference) {
            return secondaryPathPreference(Output.of(secondaryPathPreference));
        }

        public Builder tertiaryColorPreferences(@Nullable Output<List<String>> tertiaryColorPreferences) {
            $.tertiaryColorPreferences = tertiaryColorPreferences;
            return this;
        }

        public Builder tertiaryColorPreferences(List<String> tertiaryColorPreferences) {
            return tertiaryColorPreferences(Output.of(tertiaryColorPreferences));
        }

        public Builder tertiaryColorPreferences(String... tertiaryColorPreferences) {
            return tertiaryColorPreferences(List.of(tertiaryColorPreferences));
        }

        /**
         * @param tertiaryPathPreference - Choices: `all-paths`, `direct-path`, `multi-hop-path`
         * 
         * @return builder
         * 
         */
        public Builder tertiaryPathPreference(@Nullable Output<String> tertiaryPathPreference) {
            $.tertiaryPathPreference = tertiaryPathPreference;
            return this;
        }

        /**
         * @param tertiaryPathPreference - Choices: `all-paths`, `direct-path`, `multi-hop-path`
         * 
         * @return builder
         * 
         */
        public Builder tertiaryPathPreference(String tertiaryPathPreference) {
            return tertiaryPathPreference(Output.of(tertiaryPathPreference));
        }

        public PolicyObjectPreferredColorGroupEntryArgs build() {
            return $;
        }
    }

}
