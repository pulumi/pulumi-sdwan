// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRoutePolicyDefinitionSequenceMatchEntry {
    /**
     * @return AS path list ID
     * 
     */
    private String asPathListId;
    /**
     * @return AS path list version
     * 
     */
    private Integer asPathListVersion;
    /**
     * @return Community list IDs
     * 
     */
    private List<String> communityListIds;
    /**
     * @return Community list match flag
     * 
     */
    private String communityListMatchFlag;
    /**
     * @return Community list versions
     * 
     */
    private List<String> communityListVersions;
    /**
     * @return Expanded community list ID
     * 
     */
    private String expandedCommunityListId;
    /**
     * @return Expanded community list variable
     * 
     */
    private String expandedCommunityListVariable;
    /**
     * @return Expanded community list version
     * 
     */
    private Integer expandedCommunityListVersion;
    /**
     * @return Extended community list ID
     * 
     */
    private String extendedCommunityListId;
    /**
     * @return Extended community list version
     * 
     */
    private Integer extendedCommunityListVersion;
    /**
     * @return Local preference
     * 
     */
    private Integer localPreference;
    /**
     * @return Metric
     * 
     */
    private Integer metric;
    /**
     * @return Next hop prefix list ID
     * 
     */
    private String nextHopPrefixListId;
    /**
     * @return Next hop prefix list version
     * 
     */
    private Integer nextHopPrefixListVersion;
    /**
     * @return OMP tag
     * 
     */
    private Integer ompTag;
    /**
     * @return Origin
     * 
     */
    private String origin;
    /**
     * @return OSPF tag
     * 
     */
    private Integer ospfTag;
    /**
     * @return Peer IP
     * 
     */
    private String peer;
    /**
     * @return Prefix list ID
     * 
     */
    private String prefixListId;
    /**
     * @return Prefix list version
     * 
     */
    private Integer prefixListVersion;
    /**
     * @return Type of match entry
     * 
     */
    private String type;

    private GetRoutePolicyDefinitionSequenceMatchEntry() {}
    /**
     * @return AS path list ID
     * 
     */
    public String asPathListId() {
        return this.asPathListId;
    }
    /**
     * @return AS path list version
     * 
     */
    public Integer asPathListVersion() {
        return this.asPathListVersion;
    }
    /**
     * @return Community list IDs
     * 
     */
    public List<String> communityListIds() {
        return this.communityListIds;
    }
    /**
     * @return Community list match flag
     * 
     */
    public String communityListMatchFlag() {
        return this.communityListMatchFlag;
    }
    /**
     * @return Community list versions
     * 
     */
    public List<String> communityListVersions() {
        return this.communityListVersions;
    }
    /**
     * @return Expanded community list ID
     * 
     */
    public String expandedCommunityListId() {
        return this.expandedCommunityListId;
    }
    /**
     * @return Expanded community list variable
     * 
     */
    public String expandedCommunityListVariable() {
        return this.expandedCommunityListVariable;
    }
    /**
     * @return Expanded community list version
     * 
     */
    public Integer expandedCommunityListVersion() {
        return this.expandedCommunityListVersion;
    }
    /**
     * @return Extended community list ID
     * 
     */
    public String extendedCommunityListId() {
        return this.extendedCommunityListId;
    }
    /**
     * @return Extended community list version
     * 
     */
    public Integer extendedCommunityListVersion() {
        return this.extendedCommunityListVersion;
    }
    /**
     * @return Local preference
     * 
     */
    public Integer localPreference() {
        return this.localPreference;
    }
    /**
     * @return Metric
     * 
     */
    public Integer metric() {
        return this.metric;
    }
    /**
     * @return Next hop prefix list ID
     * 
     */
    public String nextHopPrefixListId() {
        return this.nextHopPrefixListId;
    }
    /**
     * @return Next hop prefix list version
     * 
     */
    public Integer nextHopPrefixListVersion() {
        return this.nextHopPrefixListVersion;
    }
    /**
     * @return OMP tag
     * 
     */
    public Integer ompTag() {
        return this.ompTag;
    }
    /**
     * @return Origin
     * 
     */
    public String origin() {
        return this.origin;
    }
    /**
     * @return OSPF tag
     * 
     */
    public Integer ospfTag() {
        return this.ospfTag;
    }
    /**
     * @return Peer IP
     * 
     */
    public String peer() {
        return this.peer;
    }
    /**
     * @return Prefix list ID
     * 
     */
    public String prefixListId() {
        return this.prefixListId;
    }
    /**
     * @return Prefix list version
     * 
     */
    public Integer prefixListVersion() {
        return this.prefixListVersion;
    }
    /**
     * @return Type of match entry
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRoutePolicyDefinitionSequenceMatchEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String asPathListId;
        private Integer asPathListVersion;
        private List<String> communityListIds;
        private String communityListMatchFlag;
        private List<String> communityListVersions;
        private String expandedCommunityListId;
        private String expandedCommunityListVariable;
        private Integer expandedCommunityListVersion;
        private String extendedCommunityListId;
        private Integer extendedCommunityListVersion;
        private Integer localPreference;
        private Integer metric;
        private String nextHopPrefixListId;
        private Integer nextHopPrefixListVersion;
        private Integer ompTag;
        private String origin;
        private Integer ospfTag;
        private String peer;
        private String prefixListId;
        private Integer prefixListVersion;
        private String type;
        public Builder() {}
        public Builder(GetRoutePolicyDefinitionSequenceMatchEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asPathListId = defaults.asPathListId;
    	      this.asPathListVersion = defaults.asPathListVersion;
    	      this.communityListIds = defaults.communityListIds;
    	      this.communityListMatchFlag = defaults.communityListMatchFlag;
    	      this.communityListVersions = defaults.communityListVersions;
    	      this.expandedCommunityListId = defaults.expandedCommunityListId;
    	      this.expandedCommunityListVariable = defaults.expandedCommunityListVariable;
    	      this.expandedCommunityListVersion = defaults.expandedCommunityListVersion;
    	      this.extendedCommunityListId = defaults.extendedCommunityListId;
    	      this.extendedCommunityListVersion = defaults.extendedCommunityListVersion;
    	      this.localPreference = defaults.localPreference;
    	      this.metric = defaults.metric;
    	      this.nextHopPrefixListId = defaults.nextHopPrefixListId;
    	      this.nextHopPrefixListVersion = defaults.nextHopPrefixListVersion;
    	      this.ompTag = defaults.ompTag;
    	      this.origin = defaults.origin;
    	      this.ospfTag = defaults.ospfTag;
    	      this.peer = defaults.peer;
    	      this.prefixListId = defaults.prefixListId;
    	      this.prefixListVersion = defaults.prefixListVersion;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder asPathListId(String asPathListId) {
            if (asPathListId == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "asPathListId");
            }
            this.asPathListId = asPathListId;
            return this;
        }
        @CustomType.Setter
        public Builder asPathListVersion(Integer asPathListVersion) {
            if (asPathListVersion == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "asPathListVersion");
            }
            this.asPathListVersion = asPathListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder communityListIds(List<String> communityListIds) {
            if (communityListIds == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "communityListIds");
            }
            this.communityListIds = communityListIds;
            return this;
        }
        public Builder communityListIds(String... communityListIds) {
            return communityListIds(List.of(communityListIds));
        }
        @CustomType.Setter
        public Builder communityListMatchFlag(String communityListMatchFlag) {
            if (communityListMatchFlag == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "communityListMatchFlag");
            }
            this.communityListMatchFlag = communityListMatchFlag;
            return this;
        }
        @CustomType.Setter
        public Builder communityListVersions(List<String> communityListVersions) {
            if (communityListVersions == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "communityListVersions");
            }
            this.communityListVersions = communityListVersions;
            return this;
        }
        public Builder communityListVersions(String... communityListVersions) {
            return communityListVersions(List.of(communityListVersions));
        }
        @CustomType.Setter
        public Builder expandedCommunityListId(String expandedCommunityListId) {
            if (expandedCommunityListId == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "expandedCommunityListId");
            }
            this.expandedCommunityListId = expandedCommunityListId;
            return this;
        }
        @CustomType.Setter
        public Builder expandedCommunityListVariable(String expandedCommunityListVariable) {
            if (expandedCommunityListVariable == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "expandedCommunityListVariable");
            }
            this.expandedCommunityListVariable = expandedCommunityListVariable;
            return this;
        }
        @CustomType.Setter
        public Builder expandedCommunityListVersion(Integer expandedCommunityListVersion) {
            if (expandedCommunityListVersion == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "expandedCommunityListVersion");
            }
            this.expandedCommunityListVersion = expandedCommunityListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder extendedCommunityListId(String extendedCommunityListId) {
            if (extendedCommunityListId == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "extendedCommunityListId");
            }
            this.extendedCommunityListId = extendedCommunityListId;
            return this;
        }
        @CustomType.Setter
        public Builder extendedCommunityListVersion(Integer extendedCommunityListVersion) {
            if (extendedCommunityListVersion == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "extendedCommunityListVersion");
            }
            this.extendedCommunityListVersion = extendedCommunityListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder localPreference(Integer localPreference) {
            if (localPreference == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "localPreference");
            }
            this.localPreference = localPreference;
            return this;
        }
        @CustomType.Setter
        public Builder metric(Integer metric) {
            if (metric == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "metric");
            }
            this.metric = metric;
            return this;
        }
        @CustomType.Setter
        public Builder nextHopPrefixListId(String nextHopPrefixListId) {
            if (nextHopPrefixListId == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "nextHopPrefixListId");
            }
            this.nextHopPrefixListId = nextHopPrefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder nextHopPrefixListVersion(Integer nextHopPrefixListVersion) {
            if (nextHopPrefixListVersion == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "nextHopPrefixListVersion");
            }
            this.nextHopPrefixListVersion = nextHopPrefixListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder ompTag(Integer ompTag) {
            if (ompTag == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "ompTag");
            }
            this.ompTag = ompTag;
            return this;
        }
        @CustomType.Setter
        public Builder origin(String origin) {
            if (origin == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "origin");
            }
            this.origin = origin;
            return this;
        }
        @CustomType.Setter
        public Builder ospfTag(Integer ospfTag) {
            if (ospfTag == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "ospfTag");
            }
            this.ospfTag = ospfTag;
            return this;
        }
        @CustomType.Setter
        public Builder peer(String peer) {
            if (peer == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "peer");
            }
            this.peer = peer;
            return this;
        }
        @CustomType.Setter
        public Builder prefixListId(String prefixListId) {
            if (prefixListId == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "prefixListId");
            }
            this.prefixListId = prefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder prefixListVersion(Integer prefixListVersion) {
            if (prefixListVersion == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "prefixListVersion");
            }
            this.prefixListVersion = prefixListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceMatchEntry", "type");
            }
            this.type = type;
            return this;
        }
        public GetRoutePolicyDefinitionSequenceMatchEntry build() {
            final var _resultValue = new GetRoutePolicyDefinitionSequenceMatchEntry();
            _resultValue.asPathListId = asPathListId;
            _resultValue.asPathListVersion = asPathListVersion;
            _resultValue.communityListIds = communityListIds;
            _resultValue.communityListMatchFlag = communityListMatchFlag;
            _resultValue.communityListVersions = communityListVersions;
            _resultValue.expandedCommunityListId = expandedCommunityListId;
            _resultValue.expandedCommunityListVariable = expandedCommunityListVariable;
            _resultValue.expandedCommunityListVersion = expandedCommunityListVersion;
            _resultValue.extendedCommunityListId = extendedCommunityListId;
            _resultValue.extendedCommunityListVersion = extendedCommunityListVersion;
            _resultValue.localPreference = localPreference;
            _resultValue.metric = metric;
            _resultValue.nextHopPrefixListId = nextHopPrefixListId;
            _resultValue.nextHopPrefixListVersion = nextHopPrefixListVersion;
            _resultValue.ompTag = ompTag;
            _resultValue.origin = origin;
            _resultValue.ospfTag = ospfTag;
            _resultValue.peer = peer;
            _resultValue.prefixListId = prefixListId;
            _resultValue.prefixListVersion = prefixListVersion;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
