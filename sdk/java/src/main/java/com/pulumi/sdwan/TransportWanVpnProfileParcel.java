// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.TransportWanVpnProfileParcelArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.TransportWanVpnProfileParcelState;
import com.pulumi.sdwan.outputs.TransportWanVpnProfileParcelIpv4StaticRoute;
import com.pulumi.sdwan.outputs.TransportWanVpnProfileParcelIpv6StaticRoute;
import com.pulumi.sdwan.outputs.TransportWanVpnProfileParcelNat64V4Pool;
import com.pulumi.sdwan.outputs.TransportWanVpnProfileParcelNewHostMapping;
import com.pulumi.sdwan.outputs.TransportWanVpnProfileParcelService;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Transport WAN VPN profile parcel.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sdwan.TransportWanVpnProfileParcel;
 * import com.pulumi.sdwan.TransportWanVpnProfileParcelArgs;
 * import com.pulumi.sdwan.inputs.TransportWanVpnProfileParcelNewHostMappingArgs;
 * import com.pulumi.sdwan.inputs.TransportWanVpnProfileParcelIpv4StaticRouteArgs;
 * import com.pulumi.sdwan.inputs.TransportWanVpnProfileParcelIpv6StaticRouteArgs;
 * import com.pulumi.sdwan.inputs.TransportWanVpnProfileParcelServiceArgs;
 * import com.pulumi.sdwan.inputs.TransportWanVpnProfileParcelNat64V4PoolArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new TransportWanVpnProfileParcel(&#34;example&#34;, TransportWanVpnProfileParcelArgs.builder()        
 *             .name(&#34;Example&#34;)
 *             .description(&#34;My Example&#34;)
 *             .featureProfileId(&#34;f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac&#34;)
 *             .vpn(0)
 *             .enhanceEcmpKeying(true)
 *             .primaryDnsAddressIpv4(&#34;1.2.3.4&#34;)
 *             .secondaryDnsAddressIpv4(&#34;2.3.4.5&#34;)
 *             .primaryDnsAddressIpv6(&#34;2001:0:0:1::0&#34;)
 *             .secondaryDnsAddressIpv6(&#34;2001:0:0:2::0&#34;)
 *             .newHostMappings(TransportWanVpnProfileParcelNewHostMappingArgs.builder()
 *                 .host_name(&#34;example&#34;)
 *                 .list_of_ip_addresses(&#34;1.2.3.4&#34;)
 *                 .build())
 *             .ipv4StaticRoutes(TransportWanVpnProfileParcelIpv4StaticRouteArgs.builder()
 *                 .network_address(&#34;1.2.3.4&#34;)
 *                 .subnet_mask(&#34;0.0.0.0&#34;)
 *                 .gateway(&#34;nextHop&#34;)
 *                 .next_hops(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .administrative_distance(1)
 *                 .build())
 *             .ipv6StaticRoutes(TransportWanVpnProfileParcelIpv6StaticRouteArgs.builder()
 *                 .prefix(&#34;2002::/16&#34;)
 *                 .next_hops(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .build())
 *             .services(TransportWanVpnProfileParcelServiceArgs.builder()
 *                 .service_type(&#34;TE&#34;)
 *                 .build())
 *             .nat64V4Pools(TransportWanVpnProfileParcelNat64V4PoolArgs.builder()
 *                 .nat64_v4_pool_name(&#34;example&#34;)
 *                 .nat64_v4_pool_range_start(&#34;203.0.113.50&#34;)
 *                 .nat64_v4_pool_range_end(&#34;203.0.113.100&#34;)
 *                 .nat64_v4_pool_overload(false)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import sdwan:index/transportWanVpnProfileParcel:TransportWanVpnProfileParcel example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/transportWanVpnProfileParcel:TransportWanVpnProfileParcel")
public class TransportWanVpnProfileParcel extends com.pulumi.resources.CustomResource {
    /**
     * The description of the profile parcel
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the profile parcel
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Enhance ECMP Keying - Default value: `false`
     * 
     */
    @Export(name="enhanceEcmpKeying", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enhanceEcmpKeying;

    /**
     * @return Enhance ECMP Keying - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> enhanceEcmpKeying() {
        return Codegen.optional(this.enhanceEcmpKeying);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="enhanceEcmpKeyingVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> enhanceEcmpKeyingVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> enhanceEcmpKeyingVariable() {
        return Codegen.optional(this.enhanceEcmpKeyingVariable);
    }
    /**
     * Feature Profile ID
     * 
     */
    @Export(name="featureProfileId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<Optional<String>> featureProfileId() {
        return Codegen.optional(this.featureProfileId);
    }
    /**
     * IPv4 Static Route
     * 
     */
    @Export(name="ipv4StaticRoutes", refs={List.class,TransportWanVpnProfileParcelIpv4StaticRoute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TransportWanVpnProfileParcelIpv4StaticRoute>> ipv4StaticRoutes;

    /**
     * @return IPv4 Static Route
     * 
     */
    public Output<Optional<List<TransportWanVpnProfileParcelIpv4StaticRoute>>> ipv4StaticRoutes() {
        return Codegen.optional(this.ipv4StaticRoutes);
    }
    /**
     * IPv6 Static Route
     * 
     */
    @Export(name="ipv6StaticRoutes", refs={List.class,TransportWanVpnProfileParcelIpv6StaticRoute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TransportWanVpnProfileParcelIpv6StaticRoute>> ipv6StaticRoutes;

    /**
     * @return IPv6 Static Route
     * 
     */
    public Output<Optional<List<TransportWanVpnProfileParcelIpv6StaticRoute>>> ipv6StaticRoutes() {
        return Codegen.optional(this.ipv6StaticRoutes);
    }
    /**
     * The name of the profile parcel
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the profile parcel
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * NAT64 V4 Pool
     * 
     */
    @Export(name="nat64V4Pools", refs={List.class,TransportWanVpnProfileParcelNat64V4Pool.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TransportWanVpnProfileParcelNat64V4Pool>> nat64V4Pools;

    /**
     * @return NAT64 V4 Pool
     * 
     */
    public Output<Optional<List<TransportWanVpnProfileParcelNat64V4Pool>>> nat64V4Pools() {
        return Codegen.optional(this.nat64V4Pools);
    }
    @Export(name="newHostMappings", refs={List.class,TransportWanVpnProfileParcelNewHostMapping.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TransportWanVpnProfileParcelNewHostMapping>> newHostMappings;

    public Output<Optional<List<TransportWanVpnProfileParcelNewHostMapping>>> newHostMappings() {
        return Codegen.optional(this.newHostMappings);
    }
    /**
     * Primary DNS Address (IPv4)
     * 
     */
    @Export(name="primaryDnsAddressIpv4", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primaryDnsAddressIpv4;

    /**
     * @return Primary DNS Address (IPv4)
     * 
     */
    public Output<Optional<String>> primaryDnsAddressIpv4() {
        return Codegen.optional(this.primaryDnsAddressIpv4);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="primaryDnsAddressIpv4Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primaryDnsAddressIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> primaryDnsAddressIpv4Variable() {
        return Codegen.optional(this.primaryDnsAddressIpv4Variable);
    }
    /**
     * Primary DNS Address (IPv6)
     * 
     */
    @Export(name="primaryDnsAddressIpv6", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primaryDnsAddressIpv6;

    /**
     * @return Primary DNS Address (IPv6)
     * 
     */
    public Output<Optional<String>> primaryDnsAddressIpv6() {
        return Codegen.optional(this.primaryDnsAddressIpv6);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="primaryDnsAddressIpv6Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primaryDnsAddressIpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> primaryDnsAddressIpv6Variable() {
        return Codegen.optional(this.primaryDnsAddressIpv6Variable);
    }
    /**
     * Secondary DNS Address (IPv4)
     * 
     */
    @Export(name="secondaryDnsAddressIpv4", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryDnsAddressIpv4;

    /**
     * @return Secondary DNS Address (IPv4)
     * 
     */
    public Output<Optional<String>> secondaryDnsAddressIpv4() {
        return Codegen.optional(this.secondaryDnsAddressIpv4);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="secondaryDnsAddressIpv4Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryDnsAddressIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> secondaryDnsAddressIpv4Variable() {
        return Codegen.optional(this.secondaryDnsAddressIpv4Variable);
    }
    /**
     * Secondary DNS Address (IPv6)
     * 
     */
    @Export(name="secondaryDnsAddressIpv6", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryDnsAddressIpv6;

    /**
     * @return Secondary DNS Address (IPv6)
     * 
     */
    public Output<Optional<String>> secondaryDnsAddressIpv6() {
        return Codegen.optional(this.secondaryDnsAddressIpv6);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="secondaryDnsAddressIpv6Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryDnsAddressIpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> secondaryDnsAddressIpv6Variable() {
        return Codegen.optional(this.secondaryDnsAddressIpv6Variable);
    }
    /**
     * Service
     * 
     */
    @Export(name="services", refs={List.class,TransportWanVpnProfileParcelService.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TransportWanVpnProfileParcelService>> services;

    /**
     * @return Service
     * 
     */
    public Output<Optional<List<TransportWanVpnProfileParcelService>>> services() {
        return Codegen.optional(this.services);
    }
    /**
     * The version of the profile parcel
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the profile parcel
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }
    /**
     * VPN - Default value: `0`
     * 
     */
    @Export(name="vpn", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> vpn;

    /**
     * @return VPN - Default value: `0`
     * 
     */
    public Output<Optional<Integer>> vpn() {
        return Codegen.optional(this.vpn);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TransportWanVpnProfileParcel(String name) {
        this(name, TransportWanVpnProfileParcelArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TransportWanVpnProfileParcel(String name, @Nullable TransportWanVpnProfileParcelArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TransportWanVpnProfileParcel(String name, @Nullable TransportWanVpnProfileParcelArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/transportWanVpnProfileParcel:TransportWanVpnProfileParcel", name, args == null ? TransportWanVpnProfileParcelArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private TransportWanVpnProfileParcel(String name, Output<String> id, @Nullable TransportWanVpnProfileParcelState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/transportWanVpnProfileParcel:TransportWanVpnProfileParcel", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TransportWanVpnProfileParcel get(String name, Output<String> id, @Nullable TransportWanVpnProfileParcelState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TransportWanVpnProfileParcel(name, id, state, options);
    }
}
