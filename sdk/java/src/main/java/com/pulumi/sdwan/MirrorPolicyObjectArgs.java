// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MirrorPolicyObjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final MirrorPolicyObjectArgs Empty = new MirrorPolicyObjectArgs();

    /**
     * The name of the policy object
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the policy object
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Remote destination IP
     * 
     */
    @Import(name="remoteDestinationIp", required=true)
    private Output<String> remoteDestinationIp;

    /**
     * @return Remote destination IP
     * 
     */
    public Output<String> remoteDestinationIp() {
        return this.remoteDestinationIp;
    }

    /**
     * Source IP
     * 
     */
    @Import(name="sourceIp", required=true)
    private Output<String> sourceIp;

    /**
     * @return Source IP
     * 
     */
    public Output<String> sourceIp() {
        return this.sourceIp;
    }

    private MirrorPolicyObjectArgs() {}

    private MirrorPolicyObjectArgs(MirrorPolicyObjectArgs $) {
        this.name = $.name;
        this.remoteDestinationIp = $.remoteDestinationIp;
        this.sourceIp = $.sourceIp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MirrorPolicyObjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MirrorPolicyObjectArgs $;

        public Builder() {
            $ = new MirrorPolicyObjectArgs();
        }

        public Builder(MirrorPolicyObjectArgs defaults) {
            $ = new MirrorPolicyObjectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the policy object
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the policy object
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param remoteDestinationIp Remote destination IP
         * 
         * @return builder
         * 
         */
        public Builder remoteDestinationIp(Output<String> remoteDestinationIp) {
            $.remoteDestinationIp = remoteDestinationIp;
            return this;
        }

        /**
         * @param remoteDestinationIp Remote destination IP
         * 
         * @return builder
         * 
         */
        public Builder remoteDestinationIp(String remoteDestinationIp) {
            return remoteDestinationIp(Output.of(remoteDestinationIp));
        }

        /**
         * @param sourceIp Source IP
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(Output<String> sourceIp) {
            $.sourceIp = sourceIp;
            return this;
        }

        /**
         * @param sourceIp Source IP
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(String sourceIp) {
            return sourceIp(Output.of(sourceIp));
        }

        public MirrorPolicyObjectArgs build() {
            if ($.remoteDestinationIp == null) {
                throw new MissingRequiredPropertyException("MirrorPolicyObjectArgs", "remoteDestinationIp");
            }
            if ($.sourceIp == null) {
                throw new MissingRequiredPropertyException("MirrorPolicyObjectArgs", "sourceIp");
            }
            return $;
        }
    }

}
