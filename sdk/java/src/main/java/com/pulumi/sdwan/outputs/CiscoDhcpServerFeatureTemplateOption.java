// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CiscoDhcpServerFeatureTemplateOption {
    /**
     * @return Set ASCII value
     * 
     */
    private @Nullable String ascii;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String asciiVariable;
    /**
     * @return Set HEX value
     * 
     */
    private @Nullable String hex;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String hexVariable;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String ipAddressVariable;
    /**
     * @return Set ip address
     * 
     */
    private @Nullable List<String> ipAddresses;
    /**
     * @return Set Option Code
     *   - Range: `1`-`254`
     * 
     */
    private @Nullable Integer optionCode;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String optionCodeVariable;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private @Nullable Boolean optional;

    private CiscoDhcpServerFeatureTemplateOption() {}
    /**
     * @return Set ASCII value
     * 
     */
    public Optional<String> ascii() {
        return Optional.ofNullable(this.ascii);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> asciiVariable() {
        return Optional.ofNullable(this.asciiVariable);
    }
    /**
     * @return Set HEX value
     * 
     */
    public Optional<String> hex() {
        return Optional.ofNullable(this.hex);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> hexVariable() {
        return Optional.ofNullable(this.hexVariable);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> ipAddressVariable() {
        return Optional.ofNullable(this.ipAddressVariable);
    }
    /**
     * @return Set ip address
     * 
     */
    public List<String> ipAddresses() {
        return this.ipAddresses == null ? List.of() : this.ipAddresses;
    }
    /**
     * @return Set Option Code
     *   - Range: `1`-`254`
     * 
     */
    public Optional<Integer> optionCode() {
        return Optional.ofNullable(this.optionCode);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> optionCodeVariable() {
        return Optional.ofNullable(this.optionCodeVariable);
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Boolean> optional() {
        return Optional.ofNullable(this.optional);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CiscoDhcpServerFeatureTemplateOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String ascii;
        private @Nullable String asciiVariable;
        private @Nullable String hex;
        private @Nullable String hexVariable;
        private @Nullable String ipAddressVariable;
        private @Nullable List<String> ipAddresses;
        private @Nullable Integer optionCode;
        private @Nullable String optionCodeVariable;
        private @Nullable Boolean optional;
        public Builder() {}
        public Builder(CiscoDhcpServerFeatureTemplateOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ascii = defaults.ascii;
    	      this.asciiVariable = defaults.asciiVariable;
    	      this.hex = defaults.hex;
    	      this.hexVariable = defaults.hexVariable;
    	      this.ipAddressVariable = defaults.ipAddressVariable;
    	      this.ipAddresses = defaults.ipAddresses;
    	      this.optionCode = defaults.optionCode;
    	      this.optionCodeVariable = defaults.optionCodeVariable;
    	      this.optional = defaults.optional;
        }

        @CustomType.Setter
        public Builder ascii(@Nullable String ascii) {

            this.ascii = ascii;
            return this;
        }
        @CustomType.Setter
        public Builder asciiVariable(@Nullable String asciiVariable) {

            this.asciiVariable = asciiVariable;
            return this;
        }
        @CustomType.Setter
        public Builder hex(@Nullable String hex) {

            this.hex = hex;
            return this;
        }
        @CustomType.Setter
        public Builder hexVariable(@Nullable String hexVariable) {

            this.hexVariable = hexVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddressVariable(@Nullable String ipAddressVariable) {

            this.ipAddressVariable = ipAddressVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddresses(@Nullable List<String> ipAddresses) {

            this.ipAddresses = ipAddresses;
            return this;
        }
        public Builder ipAddresses(String... ipAddresses) {
            return ipAddresses(List.of(ipAddresses));
        }
        @CustomType.Setter
        public Builder optionCode(@Nullable Integer optionCode) {

            this.optionCode = optionCode;
            return this;
        }
        @CustomType.Setter
        public Builder optionCodeVariable(@Nullable String optionCodeVariable) {

            this.optionCodeVariable = optionCodeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder optional(@Nullable Boolean optional) {

            this.optional = optional;
            return this;
        }
        public CiscoDhcpServerFeatureTemplateOption build() {
            final var _resultValue = new CiscoDhcpServerFeatureTemplateOption();
            _resultValue.ascii = ascii;
            _resultValue.asciiVariable = asciiVariable;
            _resultValue.hex = hex;
            _resultValue.hexVariable = hexVariable;
            _resultValue.ipAddressVariable = ipAddressVariable;
            _resultValue.ipAddresses = ipAddresses;
            _resultValue.optionCode = optionCode;
            _resultValue.optionCodeVariable = optionCodeVariable;
            _resultValue.optional = optional;
            return _resultValue;
        }
    }
}
