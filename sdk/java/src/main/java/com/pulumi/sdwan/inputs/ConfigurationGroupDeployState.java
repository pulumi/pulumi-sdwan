// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.ConfigurationGroupDeployDeviceArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationGroupDeployState extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationGroupDeployState Empty = new ConfigurationGroupDeployState();

    /**
     * Configuration Group ID
     * 
     */
    @Import(name="configurationGroupId")
    private @Nullable Output<String> configurationGroupId;

    /**
     * @return Configuration Group ID
     * 
     */
    public Optional<Output<String>> configurationGroupId() {
        return Optional.ofNullable(this.configurationGroupId);
    }

    /**
     * List of devices
     * 
     */
    @Import(name="devices")
    private @Nullable Output<List<ConfigurationGroupDeployDeviceArgs>> devices;

    /**
     * @return List of devices
     * 
     */
    public Optional<Output<List<ConfigurationGroupDeployDeviceArgs>>> devices() {
        return Optional.ofNullable(this.devices);
    }

    private ConfigurationGroupDeployState() {}

    private ConfigurationGroupDeployState(ConfigurationGroupDeployState $) {
        this.configurationGroupId = $.configurationGroupId;
        this.devices = $.devices;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationGroupDeployState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationGroupDeployState $;

        public Builder() {
            $ = new ConfigurationGroupDeployState();
        }

        public Builder(ConfigurationGroupDeployState defaults) {
            $ = new ConfigurationGroupDeployState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configurationGroupId Configuration Group ID
         * 
         * @return builder
         * 
         */
        public Builder configurationGroupId(@Nullable Output<String> configurationGroupId) {
            $.configurationGroupId = configurationGroupId;
            return this;
        }

        /**
         * @param configurationGroupId Configuration Group ID
         * 
         * @return builder
         * 
         */
        public Builder configurationGroupId(String configurationGroupId) {
            return configurationGroupId(Output.of(configurationGroupId));
        }

        /**
         * @param devices List of devices
         * 
         * @return builder
         * 
         */
        public Builder devices(@Nullable Output<List<ConfigurationGroupDeployDeviceArgs>> devices) {
            $.devices = devices;
            return this;
        }

        /**
         * @param devices List of devices
         * 
         * @return builder
         * 
         */
        public Builder devices(List<ConfigurationGroupDeployDeviceArgs> devices) {
            return devices(Output.of(devices));
        }

        /**
         * @param devices List of devices
         * 
         * @return builder
         * 
         */
        public Builder devices(ConfigurationGroupDeployDeviceArgs... devices) {
            return devices(List.of(devices));
        }

        public ConfigurationGroupDeployState build() {
            return $;
        }
    }

}
