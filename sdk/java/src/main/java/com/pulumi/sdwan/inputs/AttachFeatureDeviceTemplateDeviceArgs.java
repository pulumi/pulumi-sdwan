// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


public final class AttachFeatureDeviceTemplateDeviceArgs extends com.pulumi.resources.ResourceArgs {

    public static final AttachFeatureDeviceTemplateDeviceArgs Empty = new AttachFeatureDeviceTemplateDeviceArgs();

    /**
     * Device ID
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return Device ID
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * Device variables
     * 
     */
    @Import(name="variables", required=true)
    private Output<Map<String,String>> variables;

    /**
     * @return Device variables
     * 
     */
    public Output<Map<String,String>> variables() {
        return this.variables;
    }

    private AttachFeatureDeviceTemplateDeviceArgs() {}

    private AttachFeatureDeviceTemplateDeviceArgs(AttachFeatureDeviceTemplateDeviceArgs $) {
        this.id = $.id;
        this.variables = $.variables;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AttachFeatureDeviceTemplateDeviceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AttachFeatureDeviceTemplateDeviceArgs $;

        public Builder() {
            $ = new AttachFeatureDeviceTemplateDeviceArgs();
        }

        public Builder(AttachFeatureDeviceTemplateDeviceArgs defaults) {
            $ = new AttachFeatureDeviceTemplateDeviceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Device ID
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Device ID
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param variables Device variables
         * 
         * @return builder
         * 
         */
        public Builder variables(Output<Map<String,String>> variables) {
            $.variables = variables;
            return this;
        }

        /**
         * @param variables Device variables
         * 
         * @return builder
         * 
         */
        public Builder variables(Map<String,String> variables) {
            return variables(Output.of(variables));
        }

        public AttachFeatureDeviceTemplateDeviceArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("AttachFeatureDeviceTemplateDeviceArgs", "id");
            }
            if ($.variables == null) {
                throw new MissingRequiredPropertyException("AttachFeatureDeviceTemplateDeviceArgs", "variables");
            }
            return $;
        }
    }

}
