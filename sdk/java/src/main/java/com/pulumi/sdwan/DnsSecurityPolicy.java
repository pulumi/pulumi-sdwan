// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.DnsSecurityPolicyArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.DnsSecurityPolicyState;
import com.pulumi.sdwan.outputs.DnsSecurityPolicyTargetVpn;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a DNS Security Policy.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sdwan.DnsSecurityPolicy;
 * import com.pulumi.sdwan.DnsSecurityPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new DnsSecurityPolicy("example", DnsSecurityPolicyArgs.builder()
 *             .name("Example")
 *             .description("My Example")
 *             .featureProfileId("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac")
 *             .localDomainBypassListId("0c4e096d-b06d-4052-93ed-70fe34fda6dc")
 *             .matchAllVpn(true)
 *             .umbrellaDefault(false)
 *             .dnsServerIp("1.2.3.4")
 *             .localDomainBypassEnabled(true)
 *             .dnsCrypt(false)
 *             .childOrgId("12334")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * Expected import identifier with the format: &#34;dns_security_policy_id,feature_profile_id&#34;
 * 
 * ```sh
 * $ pulumi import sdwan:index/dnsSecurityPolicy:DnsSecurityPolicy example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/dnsSecurityPolicy:DnsSecurityPolicy")
public class DnsSecurityPolicy extends com.pulumi.resources.CustomResource {
    /**
     * String that is a number that corresponds to Umbrella Multi Org, can be empty if not using Umbrella Multi Org
     * 
     */
    @Export(name="childOrgId", refs={String.class}, tree="[0]")
    private Output<String> childOrgId;

    /**
     * @return String that is a number that corresponds to Umbrella Multi Org, can be empty if not using Umbrella Multi Org
     * 
     */
    public Output<String> childOrgId() {
        return this.childOrgId;
    }
    /**
     * The description of the Policy
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the Policy
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * If matchAllVpn is false, this field is only true if at least one of the targetVpns entires contains an umbrellaDefault true
     * 
     */
    @Export(name="dnsCrypt", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> dnsCrypt;

    /**
     * @return If matchAllVpn is false, this field is only true if at least one of the targetVpns entires contains an umbrellaDefault true
     * 
     */
    public Output<Boolean> dnsCrypt() {
        return this.dnsCrypt;
    }
    /**
     * Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry, Attribute conditional on `match_all_vpn` being equal to `true`
     * 
     */
    @Export(name="dnsServerIp", refs={String.class}, tree="[0]")
    private Output<String> dnsServerIp;

    /**
     * @return Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry, Attribute conditional on `match_all_vpn` being equal to `true`
     * 
     */
    public Output<String> dnsServerIp() {
        return this.dnsServerIp;
    }
    /**
     * Feature Profile ID
     * 
     */
    @Export(name="featureProfileId", refs={String.class}, tree="[0]")
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
     * 
     */
    @Export(name="localDomainBypassEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> localDomainBypassEnabled;

    /**
     * @return Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
     * 
     */
    public Output<Boolean> localDomainBypassEnabled() {
        return this.localDomainBypassEnabled;
    }
    @Export(name="localDomainBypassListId", refs={String.class}, tree="[0]")
    private Output<String> localDomainBypassListId;

    public Output<String> localDomainBypassListId() {
        return this.localDomainBypassListId;
    }
    /**
     * If this is true, there shouldn&#39;t be a targetVpns field, if false then targetVpns field should be there
     * 
     */
    @Export(name="matchAllVpn", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> matchAllVpn;

    /**
     * @return If this is true, there shouldn&#39;t be a targetVpns field, if false then targetVpns field should be there
     * 
     */
    public Output<Boolean> matchAllVpn() {
        return this.matchAllVpn;
    }
    /**
     * The name of the Policy
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Policy
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Will be under data field only if matchAllVpn is false, if matchAllVpn is true field should not be in payload, Attribute conditional on `match_all_vpn` being equal to `false`
     * 
     */
    @Export(name="targetVpns", refs={List.class,DnsSecurityPolicyTargetVpn.class}, tree="[0,1]")
    private Output</* @Nullable */ List<DnsSecurityPolicyTargetVpn>> targetVpns;

    /**
     * @return Will be under data field only if matchAllVpn is false, if matchAllVpn is true field should not be in payload, Attribute conditional on `match_all_vpn` being equal to `false`
     * 
     */
    public Output<Optional<List<DnsSecurityPolicyTargetVpn>>> targetVpns() {
        return Codegen.optional(this.targetVpns);
    }
    /**
     * Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
     * 
     */
    @Export(name="umbrellaDefault", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> umbrellaDefault;

    /**
     * @return Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
     * 
     */
    public Output<Boolean> umbrellaDefault() {
        return this.umbrellaDefault;
    }
    /**
     * The version of the Policy
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the Policy
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DnsSecurityPolicy(java.lang.String name) {
        this(name, DnsSecurityPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DnsSecurityPolicy(java.lang.String name, DnsSecurityPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DnsSecurityPolicy(java.lang.String name, DnsSecurityPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/dnsSecurityPolicy:DnsSecurityPolicy", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DnsSecurityPolicy(java.lang.String name, Output<java.lang.String> id, @Nullable DnsSecurityPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/dnsSecurityPolicy:DnsSecurityPolicy", name, state, makeResourceOptions(options, id), false);
    }

    private static DnsSecurityPolicyArgs makeArgs(DnsSecurityPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DnsSecurityPolicyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DnsSecurityPolicy get(java.lang.String name, Output<java.lang.String> id, @Nullable DnsSecurityPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DnsSecurityPolicy(name, id, state, options);
    }
}
