// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCiscoDhcpServerFeatureTemplateOption {
    /**
     * @return Set ASCII value
     * 
     */
    private String ascii;
    /**
     * @return Variable name
     * 
     */
    private String asciiVariable;
    /**
     * @return Set HEX value
     * 
     */
    private String hex;
    /**
     * @return Variable name
     * 
     */
    private String hexVariable;
    /**
     * @return Variable name
     * 
     */
    private String ipAddressVariable;
    /**
     * @return Set ip address
     * 
     */
    private List<String> ipAddresses;
    /**
     * @return Set Option Code
     * 
     */
    private Integer optionCode;
    /**
     * @return Variable name
     * 
     */
    private String optionCodeVariable;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private Boolean optional;

    private GetCiscoDhcpServerFeatureTemplateOption() {}
    /**
     * @return Set ASCII value
     * 
     */
    public String ascii() {
        return this.ascii;
    }
    /**
     * @return Variable name
     * 
     */
    public String asciiVariable() {
        return this.asciiVariable;
    }
    /**
     * @return Set HEX value
     * 
     */
    public String hex() {
        return this.hex;
    }
    /**
     * @return Variable name
     * 
     */
    public String hexVariable() {
        return this.hexVariable;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipAddressVariable() {
        return this.ipAddressVariable;
    }
    /**
     * @return Set ip address
     * 
     */
    public List<String> ipAddresses() {
        return this.ipAddresses;
    }
    /**
     * @return Set Option Code
     * 
     */
    public Integer optionCode() {
        return this.optionCode;
    }
    /**
     * @return Variable name
     * 
     */
    public String optionCodeVariable() {
        return this.optionCodeVariable;
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Boolean optional() {
        return this.optional;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCiscoDhcpServerFeatureTemplateOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String ascii;
        private String asciiVariable;
        private String hex;
        private String hexVariable;
        private String ipAddressVariable;
        private List<String> ipAddresses;
        private Integer optionCode;
        private String optionCodeVariable;
        private Boolean optional;
        public Builder() {}
        public Builder(GetCiscoDhcpServerFeatureTemplateOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ascii = defaults.ascii;
    	      this.asciiVariable = defaults.asciiVariable;
    	      this.hex = defaults.hex;
    	      this.hexVariable = defaults.hexVariable;
    	      this.ipAddressVariable = defaults.ipAddressVariable;
    	      this.ipAddresses = defaults.ipAddresses;
    	      this.optionCode = defaults.optionCode;
    	      this.optionCodeVariable = defaults.optionCodeVariable;
    	      this.optional = defaults.optional;
        }

        @CustomType.Setter
        public Builder ascii(String ascii) {
            if (ascii == null) {
              throw new MissingRequiredPropertyException("GetCiscoDhcpServerFeatureTemplateOption", "ascii");
            }
            this.ascii = ascii;
            return this;
        }
        @CustomType.Setter
        public Builder asciiVariable(String asciiVariable) {
            if (asciiVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoDhcpServerFeatureTemplateOption", "asciiVariable");
            }
            this.asciiVariable = asciiVariable;
            return this;
        }
        @CustomType.Setter
        public Builder hex(String hex) {
            if (hex == null) {
              throw new MissingRequiredPropertyException("GetCiscoDhcpServerFeatureTemplateOption", "hex");
            }
            this.hex = hex;
            return this;
        }
        @CustomType.Setter
        public Builder hexVariable(String hexVariable) {
            if (hexVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoDhcpServerFeatureTemplateOption", "hexVariable");
            }
            this.hexVariable = hexVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddressVariable(String ipAddressVariable) {
            if (ipAddressVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoDhcpServerFeatureTemplateOption", "ipAddressVariable");
            }
            this.ipAddressVariable = ipAddressVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddresses(List<String> ipAddresses) {
            if (ipAddresses == null) {
              throw new MissingRequiredPropertyException("GetCiscoDhcpServerFeatureTemplateOption", "ipAddresses");
            }
            this.ipAddresses = ipAddresses;
            return this;
        }
        public Builder ipAddresses(String... ipAddresses) {
            return ipAddresses(List.of(ipAddresses));
        }
        @CustomType.Setter
        public Builder optionCode(Integer optionCode) {
            if (optionCode == null) {
              throw new MissingRequiredPropertyException("GetCiscoDhcpServerFeatureTemplateOption", "optionCode");
            }
            this.optionCode = optionCode;
            return this;
        }
        @CustomType.Setter
        public Builder optionCodeVariable(String optionCodeVariable) {
            if (optionCodeVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoDhcpServerFeatureTemplateOption", "optionCodeVariable");
            }
            this.optionCodeVariable = optionCodeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder optional(Boolean optional) {
            if (optional == null) {
              throw new MissingRequiredPropertyException("GetCiscoDhcpServerFeatureTemplateOption", "optional");
            }
            this.optional = optional;
            return this;
        }
        public GetCiscoDhcpServerFeatureTemplateOption build() {
            final var _resultValue = new GetCiscoDhcpServerFeatureTemplateOption();
            _resultValue.ascii = ascii;
            _resultValue.asciiVariable = asciiVariable;
            _resultValue.hex = hex;
            _resultValue.hexVariable = hexVariable;
            _resultValue.ipAddressVariable = ipAddressVariable;
            _resultValue.ipAddresses = ipAddresses;
            _resultValue.optionCode = optionCode;
            _resultValue.optionCodeVariable = optionCodeVariable;
            _resultValue.optional = optional;
            return _resultValue;
        }
    }
}
