// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class TransportWanVpnInterfaceEthernetFeatureAssociateTrackerGroupFeatureArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransportWanVpnInterfaceEthernetFeatureAssociateTrackerGroupFeatureArgs Empty = new TransportWanVpnInterfaceEthernetFeatureAssociateTrackerGroupFeatureArgs();

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId", required=true)
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }

    /**
     * Transport Tracker Group Feature ID
     * 
     */
    @Import(name="transportTrackerGroupFeatureId", required=true)
    private Output<String> transportTrackerGroupFeatureId;

    /**
     * @return Transport Tracker Group Feature ID
     * 
     */
    public Output<String> transportTrackerGroupFeatureId() {
        return this.transportTrackerGroupFeatureId;
    }

    /**
     * Transport WAN VPN Feature ID
     * 
     */
    @Import(name="transportWanVpnFeatureId", required=true)
    private Output<String> transportWanVpnFeatureId;

    /**
     * @return Transport WAN VPN Feature ID
     * 
     */
    public Output<String> transportWanVpnFeatureId() {
        return this.transportWanVpnFeatureId;
    }

    /**
     * Transport WAN VPN Interface Ethernet Feature ID
     * 
     */
    @Import(name="transportWanVpnInterfaceEthernetFeatureId", required=true)
    private Output<String> transportWanVpnInterfaceEthernetFeatureId;

    /**
     * @return Transport WAN VPN Interface Ethernet Feature ID
     * 
     */
    public Output<String> transportWanVpnInterfaceEthernetFeatureId() {
        return this.transportWanVpnInterfaceEthernetFeatureId;
    }

    private TransportWanVpnInterfaceEthernetFeatureAssociateTrackerGroupFeatureArgs() {}

    private TransportWanVpnInterfaceEthernetFeatureAssociateTrackerGroupFeatureArgs(TransportWanVpnInterfaceEthernetFeatureAssociateTrackerGroupFeatureArgs $) {
        this.featureProfileId = $.featureProfileId;
        this.transportTrackerGroupFeatureId = $.transportTrackerGroupFeatureId;
        this.transportWanVpnFeatureId = $.transportWanVpnFeatureId;
        this.transportWanVpnInterfaceEthernetFeatureId = $.transportWanVpnInterfaceEthernetFeatureId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransportWanVpnInterfaceEthernetFeatureAssociateTrackerGroupFeatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransportWanVpnInterfaceEthernetFeatureAssociateTrackerGroupFeatureArgs $;

        public Builder() {
            $ = new TransportWanVpnInterfaceEthernetFeatureAssociateTrackerGroupFeatureArgs();
        }

        public Builder(TransportWanVpnInterfaceEthernetFeatureAssociateTrackerGroupFeatureArgs defaults) {
            $ = new TransportWanVpnInterfaceEthernetFeatureAssociateTrackerGroupFeatureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param transportTrackerGroupFeatureId Transport Tracker Group Feature ID
         * 
         * @return builder
         * 
         */
        public Builder transportTrackerGroupFeatureId(Output<String> transportTrackerGroupFeatureId) {
            $.transportTrackerGroupFeatureId = transportTrackerGroupFeatureId;
            return this;
        }

        /**
         * @param transportTrackerGroupFeatureId Transport Tracker Group Feature ID
         * 
         * @return builder
         * 
         */
        public Builder transportTrackerGroupFeatureId(String transportTrackerGroupFeatureId) {
            return transportTrackerGroupFeatureId(Output.of(transportTrackerGroupFeatureId));
        }

        /**
         * @param transportWanVpnFeatureId Transport WAN VPN Feature ID
         * 
         * @return builder
         * 
         */
        public Builder transportWanVpnFeatureId(Output<String> transportWanVpnFeatureId) {
            $.transportWanVpnFeatureId = transportWanVpnFeatureId;
            return this;
        }

        /**
         * @param transportWanVpnFeatureId Transport WAN VPN Feature ID
         * 
         * @return builder
         * 
         */
        public Builder transportWanVpnFeatureId(String transportWanVpnFeatureId) {
            return transportWanVpnFeatureId(Output.of(transportWanVpnFeatureId));
        }

        /**
         * @param transportWanVpnInterfaceEthernetFeatureId Transport WAN VPN Interface Ethernet Feature ID
         * 
         * @return builder
         * 
         */
        public Builder transportWanVpnInterfaceEthernetFeatureId(Output<String> transportWanVpnInterfaceEthernetFeatureId) {
            $.transportWanVpnInterfaceEthernetFeatureId = transportWanVpnInterfaceEthernetFeatureId;
            return this;
        }

        /**
         * @param transportWanVpnInterfaceEthernetFeatureId Transport WAN VPN Interface Ethernet Feature ID
         * 
         * @return builder
         * 
         */
        public Builder transportWanVpnInterfaceEthernetFeatureId(String transportWanVpnInterfaceEthernetFeatureId) {
            return transportWanVpnInterfaceEthernetFeatureId(Output.of(transportWanVpnInterfaceEthernetFeatureId));
        }

        public TransportWanVpnInterfaceEthernetFeatureAssociateTrackerGroupFeatureArgs build() {
            if ($.featureProfileId == null) {
                throw new MissingRequiredPropertyException("TransportWanVpnInterfaceEthernetFeatureAssociateTrackerGroupFeatureArgs", "featureProfileId");
            }
            if ($.transportTrackerGroupFeatureId == null) {
                throw new MissingRequiredPropertyException("TransportWanVpnInterfaceEthernetFeatureAssociateTrackerGroupFeatureArgs", "transportTrackerGroupFeatureId");
            }
            if ($.transportWanVpnFeatureId == null) {
                throw new MissingRequiredPropertyException("TransportWanVpnInterfaceEthernetFeatureAssociateTrackerGroupFeatureArgs", "transportWanVpnFeatureId");
            }
            if ($.transportWanVpnInterfaceEthernetFeatureId == null) {
                throw new MissingRequiredPropertyException("TransportWanVpnInterfaceEthernetFeatureAssociateTrackerGroupFeatureArgs", "transportWanVpnInterfaceEthernetFeatureId");
            }
            return $;
        }
    }

}
