// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sdwan.outputs.TransportT1E1ControllerFeatureEntryChannelGroup;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TransportT1E1ControllerFeatureEntry {
    /**
     * @return Cable Config
     *   - Choices: `short`, `long`
     * 
     */
    private @Nullable String cableLength;
    /**
     * @return Channel Group List
     * 
     */
    private @Nullable List<TransportT1E1ControllerFeatureEntryChannelGroup> channelGroups;
    /**
     * @return Clock Source
     *   - Choices: `line`, `internal`, `loop-timed`, `network`
     * 
     */
    private @Nullable String clockSource;
    /**
     * @return Description
     * 
     */
    private @Nullable String description;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String descriptionVariable;
    /**
     * @return Card Type
     *   - Choices: `E1`
     * 
     */
    private @Nullable String e1Description;
    /**
     * @return Framing
     *   - Choices: `crc4`, `no-crc4`
     * 
     */
    private @Nullable String e1Framing;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String e1FramingVariable;
    /**
     * @return LineCode
     *   - Choices: `ami`, `hdb3`
     * 
     */
    private @Nullable String e1Linecode;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String e1LinecodeVariable;
    /**
     * @return length, Attribute conditional on `cable_length` being equal to `long`
     *   - Choices: `-15db`, `-22.5db`, `-7.5db`, `0db`
     * 
     */
    private @Nullable String lengthLong;
    /**
     * @return Variable name, Attribute conditional on `cable_length` being equal to `long`
     * 
     */
    private @Nullable String lengthLongVariable;
    /**
     * @return length, Attribute conditional on `cable_length` being equal to `short`
     *   - Choices: `110ft`, `220ft`, `330ft`, `440ft`, `550ft`, `660ft`
     * 
     */
    private @Nullable String lengthShort;
    /**
     * @return Variable name, Attribute conditional on `cable_length` being equal to `short`
     * 
     */
    private @Nullable String lengthShortVariable;
    /**
     * @return Line Mode
     *   - Choices: `secondary`, `primary`
     * 
     */
    private @Nullable String lineMode;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String lineModeVariable;
    /**
     * @return Card Type
     *   - Choices: `T1`
     * 
     */
    private @Nullable String t1Description;
    /**
     * @return Framing
     *   - Choices: `esf`, `sf`
     * 
     */
    private @Nullable String t1Framing;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String t1FramingVariable;
    /**
     * @return LineCode
     *   - Choices: `ami`, `b8zs`
     * 
     */
    private @Nullable String t1Linecode;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String t1LinecodeVariable;

    private TransportT1E1ControllerFeatureEntry() {}
    /**
     * @return Cable Config
     *   - Choices: `short`, `long`
     * 
     */
    public Optional<String> cableLength() {
        return Optional.ofNullable(this.cableLength);
    }
    /**
     * @return Channel Group List
     * 
     */
    public List<TransportT1E1ControllerFeatureEntryChannelGroup> channelGroups() {
        return this.channelGroups == null ? List.of() : this.channelGroups;
    }
    /**
     * @return Clock Source
     *   - Choices: `line`, `internal`, `loop-timed`, `network`
     * 
     */
    public Optional<String> clockSource() {
        return Optional.ofNullable(this.clockSource);
    }
    /**
     * @return Description
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> descriptionVariable() {
        return Optional.ofNullable(this.descriptionVariable);
    }
    /**
     * @return Card Type
     *   - Choices: `E1`
     * 
     */
    public Optional<String> e1Description() {
        return Optional.ofNullable(this.e1Description);
    }
    /**
     * @return Framing
     *   - Choices: `crc4`, `no-crc4`
     * 
     */
    public Optional<String> e1Framing() {
        return Optional.ofNullable(this.e1Framing);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> e1FramingVariable() {
        return Optional.ofNullable(this.e1FramingVariable);
    }
    /**
     * @return LineCode
     *   - Choices: `ami`, `hdb3`
     * 
     */
    public Optional<String> e1Linecode() {
        return Optional.ofNullable(this.e1Linecode);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> e1LinecodeVariable() {
        return Optional.ofNullable(this.e1LinecodeVariable);
    }
    /**
     * @return length, Attribute conditional on `cable_length` being equal to `long`
     *   - Choices: `-15db`, `-22.5db`, `-7.5db`, `0db`
     * 
     */
    public Optional<String> lengthLong() {
        return Optional.ofNullable(this.lengthLong);
    }
    /**
     * @return Variable name, Attribute conditional on `cable_length` being equal to `long`
     * 
     */
    public Optional<String> lengthLongVariable() {
        return Optional.ofNullable(this.lengthLongVariable);
    }
    /**
     * @return length, Attribute conditional on `cable_length` being equal to `short`
     *   - Choices: `110ft`, `220ft`, `330ft`, `440ft`, `550ft`, `660ft`
     * 
     */
    public Optional<String> lengthShort() {
        return Optional.ofNullable(this.lengthShort);
    }
    /**
     * @return Variable name, Attribute conditional on `cable_length` being equal to `short`
     * 
     */
    public Optional<String> lengthShortVariable() {
        return Optional.ofNullable(this.lengthShortVariable);
    }
    /**
     * @return Line Mode
     *   - Choices: `secondary`, `primary`
     * 
     */
    public Optional<String> lineMode() {
        return Optional.ofNullable(this.lineMode);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> lineModeVariable() {
        return Optional.ofNullable(this.lineModeVariable);
    }
    /**
     * @return Card Type
     *   - Choices: `T1`
     * 
     */
    public Optional<String> t1Description() {
        return Optional.ofNullable(this.t1Description);
    }
    /**
     * @return Framing
     *   - Choices: `esf`, `sf`
     * 
     */
    public Optional<String> t1Framing() {
        return Optional.ofNullable(this.t1Framing);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> t1FramingVariable() {
        return Optional.ofNullable(this.t1FramingVariable);
    }
    /**
     * @return LineCode
     *   - Choices: `ami`, `b8zs`
     * 
     */
    public Optional<String> t1Linecode() {
        return Optional.ofNullable(this.t1Linecode);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> t1LinecodeVariable() {
        return Optional.ofNullable(this.t1LinecodeVariable);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransportT1E1ControllerFeatureEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cableLength;
        private @Nullable List<TransportT1E1ControllerFeatureEntryChannelGroup> channelGroups;
        private @Nullable String clockSource;
        private @Nullable String description;
        private @Nullable String descriptionVariable;
        private @Nullable String e1Description;
        private @Nullable String e1Framing;
        private @Nullable String e1FramingVariable;
        private @Nullable String e1Linecode;
        private @Nullable String e1LinecodeVariable;
        private @Nullable String lengthLong;
        private @Nullable String lengthLongVariable;
        private @Nullable String lengthShort;
        private @Nullable String lengthShortVariable;
        private @Nullable String lineMode;
        private @Nullable String lineModeVariable;
        private @Nullable String t1Description;
        private @Nullable String t1Framing;
        private @Nullable String t1FramingVariable;
        private @Nullable String t1Linecode;
        private @Nullable String t1LinecodeVariable;
        public Builder() {}
        public Builder(TransportT1E1ControllerFeatureEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cableLength = defaults.cableLength;
    	      this.channelGroups = defaults.channelGroups;
    	      this.clockSource = defaults.clockSource;
    	      this.description = defaults.description;
    	      this.descriptionVariable = defaults.descriptionVariable;
    	      this.e1Description = defaults.e1Description;
    	      this.e1Framing = defaults.e1Framing;
    	      this.e1FramingVariable = defaults.e1FramingVariable;
    	      this.e1Linecode = defaults.e1Linecode;
    	      this.e1LinecodeVariable = defaults.e1LinecodeVariable;
    	      this.lengthLong = defaults.lengthLong;
    	      this.lengthLongVariable = defaults.lengthLongVariable;
    	      this.lengthShort = defaults.lengthShort;
    	      this.lengthShortVariable = defaults.lengthShortVariable;
    	      this.lineMode = defaults.lineMode;
    	      this.lineModeVariable = defaults.lineModeVariable;
    	      this.t1Description = defaults.t1Description;
    	      this.t1Framing = defaults.t1Framing;
    	      this.t1FramingVariable = defaults.t1FramingVariable;
    	      this.t1Linecode = defaults.t1Linecode;
    	      this.t1LinecodeVariable = defaults.t1LinecodeVariable;
        }

        @CustomType.Setter
        public Builder cableLength(@Nullable String cableLength) {

            this.cableLength = cableLength;
            return this;
        }
        @CustomType.Setter
        public Builder channelGroups(@Nullable List<TransportT1E1ControllerFeatureEntryChannelGroup> channelGroups) {

            this.channelGroups = channelGroups;
            return this;
        }
        public Builder channelGroups(TransportT1E1ControllerFeatureEntryChannelGroup... channelGroups) {
            return channelGroups(List.of(channelGroups));
        }
        @CustomType.Setter
        public Builder clockSource(@Nullable String clockSource) {

            this.clockSource = clockSource;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder descriptionVariable(@Nullable String descriptionVariable) {

            this.descriptionVariable = descriptionVariable;
            return this;
        }
        @CustomType.Setter
        public Builder e1Description(@Nullable String e1Description) {

            this.e1Description = e1Description;
            return this;
        }
        @CustomType.Setter
        public Builder e1Framing(@Nullable String e1Framing) {

            this.e1Framing = e1Framing;
            return this;
        }
        @CustomType.Setter
        public Builder e1FramingVariable(@Nullable String e1FramingVariable) {

            this.e1FramingVariable = e1FramingVariable;
            return this;
        }
        @CustomType.Setter
        public Builder e1Linecode(@Nullable String e1Linecode) {

            this.e1Linecode = e1Linecode;
            return this;
        }
        @CustomType.Setter
        public Builder e1LinecodeVariable(@Nullable String e1LinecodeVariable) {

            this.e1LinecodeVariable = e1LinecodeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder lengthLong(@Nullable String lengthLong) {

            this.lengthLong = lengthLong;
            return this;
        }
        @CustomType.Setter
        public Builder lengthLongVariable(@Nullable String lengthLongVariable) {

            this.lengthLongVariable = lengthLongVariable;
            return this;
        }
        @CustomType.Setter
        public Builder lengthShort(@Nullable String lengthShort) {

            this.lengthShort = lengthShort;
            return this;
        }
        @CustomType.Setter
        public Builder lengthShortVariable(@Nullable String lengthShortVariable) {

            this.lengthShortVariable = lengthShortVariable;
            return this;
        }
        @CustomType.Setter
        public Builder lineMode(@Nullable String lineMode) {

            this.lineMode = lineMode;
            return this;
        }
        @CustomType.Setter
        public Builder lineModeVariable(@Nullable String lineModeVariable) {

            this.lineModeVariable = lineModeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder t1Description(@Nullable String t1Description) {

            this.t1Description = t1Description;
            return this;
        }
        @CustomType.Setter
        public Builder t1Framing(@Nullable String t1Framing) {

            this.t1Framing = t1Framing;
            return this;
        }
        @CustomType.Setter
        public Builder t1FramingVariable(@Nullable String t1FramingVariable) {

            this.t1FramingVariable = t1FramingVariable;
            return this;
        }
        @CustomType.Setter
        public Builder t1Linecode(@Nullable String t1Linecode) {

            this.t1Linecode = t1Linecode;
            return this;
        }
        @CustomType.Setter
        public Builder t1LinecodeVariable(@Nullable String t1LinecodeVariable) {

            this.t1LinecodeVariable = t1LinecodeVariable;
            return this;
        }
        public TransportT1E1ControllerFeatureEntry build() {
            final var _resultValue = new TransportT1E1ControllerFeatureEntry();
            _resultValue.cableLength = cableLength;
            _resultValue.channelGroups = channelGroups;
            _resultValue.clockSource = clockSource;
            _resultValue.description = description;
            _resultValue.descriptionVariable = descriptionVariable;
            _resultValue.e1Description = e1Description;
            _resultValue.e1Framing = e1Framing;
            _resultValue.e1FramingVariable = e1FramingVariable;
            _resultValue.e1Linecode = e1Linecode;
            _resultValue.e1LinecodeVariable = e1LinecodeVariable;
            _resultValue.lengthLong = lengthLong;
            _resultValue.lengthLongVariable = lengthLongVariable;
            _resultValue.lengthShort = lengthShort;
            _resultValue.lengthShortVariable = lengthShortVariable;
            _resultValue.lineMode = lineMode;
            _resultValue.lineModeVariable = lineModeVariable;
            _resultValue.t1Description = t1Description;
            _resultValue.t1Framing = t1Framing;
            _resultValue.t1FramingVariable = t1FramingVariable;
            _resultValue.t1Linecode = t1Linecode;
            _resultValue.t1LinecodeVariable = t1LinecodeVariable;
            return _resultValue;
        }
    }
}
