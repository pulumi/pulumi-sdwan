// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSystemPerformanceMonitoringProfileParcelResult {
    /**
     * @return Application groups to be monitored
     * 
     */
    private List<String> appPerfMonitorAppGroups;
    /**
     * @return Application performance monitoring enable or disable
     * 
     */
    private Boolean appPerfMonitorEnabled;
    /**
     * @return The description of the profile parcel
     * 
     */
    private String description;
    /**
     * @return UMTS event driven monitoring enable or disable
     * 
     */
    private Boolean eventDrivenConfigEnabled;
    /**
     * @return UMTS events
     * 
     */
    private List<String> eventDrivenEvents;
    /**
     * @return Feature Profile ID
     * 
     */
    private String featureProfileId;
    /**
     * @return The id of the profile parcel
     * 
     */
    private String id;
    /**
     * @return UMTS monitoring enable or disable
     * 
     */
    private Boolean monitoringConfigEnabled;
    /**
     * @return UMTS monitoring interval(Minutes)
     * 
     */
    private String monitoringConfigInterval;
    /**
     * @return The name of the profile parcel
     * 
     */
    private String name;
    /**
     * @return The version of the profile parcel
     * 
     */
    private Integer version;

    private GetSystemPerformanceMonitoringProfileParcelResult() {}
    /**
     * @return Application groups to be monitored
     * 
     */
    public List<String> appPerfMonitorAppGroups() {
        return this.appPerfMonitorAppGroups;
    }
    /**
     * @return Application performance monitoring enable or disable
     * 
     */
    public Boolean appPerfMonitorEnabled() {
        return this.appPerfMonitorEnabled;
    }
    /**
     * @return The description of the profile parcel
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return UMTS event driven monitoring enable or disable
     * 
     */
    public Boolean eventDrivenConfigEnabled() {
        return this.eventDrivenConfigEnabled;
    }
    /**
     * @return UMTS events
     * 
     */
    public List<String> eventDrivenEvents() {
        return this.eventDrivenEvents;
    }
    /**
     * @return Feature Profile ID
     * 
     */
    public String featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * @return The id of the profile parcel
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return UMTS monitoring enable or disable
     * 
     */
    public Boolean monitoringConfigEnabled() {
        return this.monitoringConfigEnabled;
    }
    /**
     * @return UMTS monitoring interval(Minutes)
     * 
     */
    public String monitoringConfigInterval() {
        return this.monitoringConfigInterval;
    }
    /**
     * @return The name of the profile parcel
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The version of the profile parcel
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSystemPerformanceMonitoringProfileParcelResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> appPerfMonitorAppGroups;
        private Boolean appPerfMonitorEnabled;
        private String description;
        private Boolean eventDrivenConfigEnabled;
        private List<String> eventDrivenEvents;
        private String featureProfileId;
        private String id;
        private Boolean monitoringConfigEnabled;
        private String monitoringConfigInterval;
        private String name;
        private Integer version;
        public Builder() {}
        public Builder(GetSystemPerformanceMonitoringProfileParcelResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appPerfMonitorAppGroups = defaults.appPerfMonitorAppGroups;
    	      this.appPerfMonitorEnabled = defaults.appPerfMonitorEnabled;
    	      this.description = defaults.description;
    	      this.eventDrivenConfigEnabled = defaults.eventDrivenConfigEnabled;
    	      this.eventDrivenEvents = defaults.eventDrivenEvents;
    	      this.featureProfileId = defaults.featureProfileId;
    	      this.id = defaults.id;
    	      this.monitoringConfigEnabled = defaults.monitoringConfigEnabled;
    	      this.monitoringConfigInterval = defaults.monitoringConfigInterval;
    	      this.name = defaults.name;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder appPerfMonitorAppGroups(List<String> appPerfMonitorAppGroups) {
            if (appPerfMonitorAppGroups == null) {
              throw new MissingRequiredPropertyException("GetSystemPerformanceMonitoringProfileParcelResult", "appPerfMonitorAppGroups");
            }
            this.appPerfMonitorAppGroups = appPerfMonitorAppGroups;
            return this;
        }
        public Builder appPerfMonitorAppGroups(String... appPerfMonitorAppGroups) {
            return appPerfMonitorAppGroups(List.of(appPerfMonitorAppGroups));
        }
        @CustomType.Setter
        public Builder appPerfMonitorEnabled(Boolean appPerfMonitorEnabled) {
            if (appPerfMonitorEnabled == null) {
              throw new MissingRequiredPropertyException("GetSystemPerformanceMonitoringProfileParcelResult", "appPerfMonitorEnabled");
            }
            this.appPerfMonitorEnabled = appPerfMonitorEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSystemPerformanceMonitoringProfileParcelResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder eventDrivenConfigEnabled(Boolean eventDrivenConfigEnabled) {
            if (eventDrivenConfigEnabled == null) {
              throw new MissingRequiredPropertyException("GetSystemPerformanceMonitoringProfileParcelResult", "eventDrivenConfigEnabled");
            }
            this.eventDrivenConfigEnabled = eventDrivenConfigEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder eventDrivenEvents(List<String> eventDrivenEvents) {
            if (eventDrivenEvents == null) {
              throw new MissingRequiredPropertyException("GetSystemPerformanceMonitoringProfileParcelResult", "eventDrivenEvents");
            }
            this.eventDrivenEvents = eventDrivenEvents;
            return this;
        }
        public Builder eventDrivenEvents(String... eventDrivenEvents) {
            return eventDrivenEvents(List.of(eventDrivenEvents));
        }
        @CustomType.Setter
        public Builder featureProfileId(String featureProfileId) {
            if (featureProfileId == null) {
              throw new MissingRequiredPropertyException("GetSystemPerformanceMonitoringProfileParcelResult", "featureProfileId");
            }
            this.featureProfileId = featureProfileId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSystemPerformanceMonitoringProfileParcelResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder monitoringConfigEnabled(Boolean monitoringConfigEnabled) {
            if (monitoringConfigEnabled == null) {
              throw new MissingRequiredPropertyException("GetSystemPerformanceMonitoringProfileParcelResult", "monitoringConfigEnabled");
            }
            this.monitoringConfigEnabled = monitoringConfigEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder monitoringConfigInterval(String monitoringConfigInterval) {
            if (monitoringConfigInterval == null) {
              throw new MissingRequiredPropertyException("GetSystemPerformanceMonitoringProfileParcelResult", "monitoringConfigInterval");
            }
            this.monitoringConfigInterval = monitoringConfigInterval;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSystemPerformanceMonitoringProfileParcelResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetSystemPerformanceMonitoringProfileParcelResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetSystemPerformanceMonitoringProfileParcelResult build() {
            final var _resultValue = new GetSystemPerformanceMonitoringProfileParcelResult();
            _resultValue.appPerfMonitorAppGroups = appPerfMonitorAppGroups;
            _resultValue.appPerfMonitorEnabled = appPerfMonitorEnabled;
            _resultValue.description = description;
            _resultValue.eventDrivenConfigEnabled = eventDrivenConfigEnabled;
            _resultValue.eventDrivenEvents = eventDrivenEvents;
            _resultValue.featureProfileId = featureProfileId;
            _resultValue.id = id;
            _resultValue.monitoringConfigEnabled = monitoringConfigEnabled;
            _resultValue.monitoringConfigInterval = monitoringConfigInterval;
            _resultValue.name = name;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
