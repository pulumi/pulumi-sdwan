// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.CedgePimFeatureTemplateInterfaceArgs;
import com.pulumi.sdwan.inputs.CedgePimFeatureTemplateRpAddressArgs;
import com.pulumi.sdwan.inputs.CedgePimFeatureTemplateRpAnnounceFieldArgs;
import com.pulumi.sdwan.inputs.CedgePimFeatureTemplateRpCandidateArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CedgePimFeatureTemplateState extends com.pulumi.resources.ResourceArgs {

    public static final CedgePimFeatureTemplateState Empty = new CedgePimFeatureTemplateState();

    /**
     * Enable or disable auto-RP
     *   - Default value: `false`
     * 
     */
    @Import(name="autoRp")
    private @Nullable Output<Boolean> autoRp;

    /**
     * @return Enable or disable auto-RP
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> autoRp() {
        return Optional.ofNullable(this.autoRp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="autoRpVariable")
    private @Nullable Output<String> autoRpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> autoRpVariable() {
        return Optional.ofNullable(this.autoRpVariable);
    }

    /**
     * Set Autonomic-Networking virtual interface
     * 
     */
    @Import(name="bsrCandidate")
    private @Nullable Output<String> bsrCandidate;

    /**
     * @return Set Autonomic-Networking virtual interface
     * 
     */
    public Optional<Output<String>> bsrCandidate() {
        return Optional.ofNullable(this.bsrCandidate);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="bsrCandidateVariable")
    private @Nullable Output<String> bsrCandidateVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> bsrCandidateVariable() {
        return Optional.ofNullable(this.bsrCandidateVariable);
    }

    /**
     * Turn SSM On / Off
     *   - Default value: `false`
     * 
     */
    @Import(name="default")
    private @Nullable Output<Boolean> default_;

    /**
     * @return Turn SSM On / Off
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> default_() {
        return Optional.ofNullable(this.default_);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="defaultVariable")
    private @Nullable Output<String> defaultVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> defaultVariable() {
        return Optional.ofNullable(this.defaultVariable);
    }

    /**
     * The description of the feature template
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the feature template
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    @Import(name="deviceTypes")
    private @Nullable Output<List<String>> deviceTypes;

    /**
     * @return List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    public Optional<Output<List<String>>> deviceTypes() {
        return Optional.ofNullable(this.deviceTypes);
    }

    /**
     * Hash Mask length for RP selection
     * 
     */
    @Import(name="hashMaskLength")
    private @Nullable Output<String> hashMaskLength;

    /**
     * @return Hash Mask length for RP selection
     * 
     */
    public Optional<Output<String>> hashMaskLength() {
        return Optional.ofNullable(this.hashMaskLength);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="hashMaskLengthVariable")
    private @Nullable Output<String> hashMaskLengthVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> hashMaskLengthVariable() {
        return Optional.ofNullable(this.hashMaskLengthVariable);
    }

    /**
     * Set RP Discovery Interface Name
     * 
     */
    @Import(name="interfaceName")
    private @Nullable Output<String> interfaceName;

    /**
     * @return Set RP Discovery Interface Name
     * 
     */
    public Optional<Output<String>> interfaceName() {
        return Optional.ofNullable(this.interfaceName);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceNameVariable")
    private @Nullable Output<String> interfaceNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceNameVariable() {
        return Optional.ofNullable(this.interfaceNameVariable);
    }

    /**
     * Set PIM interface parameters
     * 
     */
    @Import(name="interfaces")
    private @Nullable Output<List<CedgePimFeatureTemplateInterfaceArgs>> interfaces;

    /**
     * @return Set PIM interface parameters
     * 
     */
    public Optional<Output<List<CedgePimFeatureTemplateInterfaceArgs>>> interfaces() {
        return Optional.ofNullable(this.interfaces);
    }

    /**
     * The name of the feature template
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the feature template
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Set RP candidate priority
     *   - Range: `0`-`255`
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return Set RP candidate priority
     *   - Range: `0`-`255`
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="priorityVariable")
    private @Nullable Output<String> priorityVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> priorityVariable() {
        return Optional.ofNullable(this.priorityVariable);
    }

    /**
     * Set Access List for PIM SSM
     * 
     */
    @Import(name="range")
    private @Nullable Output<String> range;

    /**
     * @return Set Access List for PIM SSM
     * 
     */
    public Optional<Output<String>> range() {
        return Optional.ofNullable(this.range);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="rangeVariable")
    private @Nullable Output<String> rangeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> rangeVariable() {
        return Optional.ofNullable(this.rangeVariable);
    }

    /**
     * Set Static RP Address(es)
     * 
     */
    @Import(name="rpAddresses")
    private @Nullable Output<List<CedgePimFeatureTemplateRpAddressArgs>> rpAddresses;

    /**
     * @return Set Static RP Address(es)
     * 
     */
    public Optional<Output<List<CedgePimFeatureTemplateRpAddressArgs>>> rpAddresses() {
        return Optional.ofNullable(this.rpAddresses);
    }

    /**
     * Enable or disable RP Announce
     * 
     */
    @Import(name="rpAnnounceFields")
    private @Nullable Output<List<CedgePimFeatureTemplateRpAnnounceFieldArgs>> rpAnnounceFields;

    /**
     * @return Enable or disable RP Announce
     * 
     */
    public Optional<Output<List<CedgePimFeatureTemplateRpAnnounceFieldArgs>>> rpAnnounceFields() {
        return Optional.ofNullable(this.rpAnnounceFields);
    }

    /**
     * Set BSR RP candidate filter
     * 
     */
    @Import(name="rpCandidateAccessList")
    private @Nullable Output<String> rpCandidateAccessList;

    /**
     * @return Set BSR RP candidate filter
     * 
     */
    public Optional<Output<String>> rpCandidateAccessList() {
        return Optional.ofNullable(this.rpCandidateAccessList);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="rpCandidateAccessListVariable")
    private @Nullable Output<String> rpCandidateAccessListVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> rpCandidateAccessListVariable() {
        return Optional.ofNullable(this.rpCandidateAccessListVariable);
    }

    /**
     * Set RP Discovery Scope
     * 
     */
    @Import(name="rpCandidates")
    private @Nullable Output<List<CedgePimFeatureTemplateRpCandidateArgs>> rpCandidates;

    /**
     * @return Set RP Discovery Scope
     * 
     */
    public Optional<Output<List<CedgePimFeatureTemplateRpCandidateArgs>>> rpCandidates() {
        return Optional.ofNullable(this.rpCandidates);
    }

    /**
     * Set RP Discovery Scope
     *   - Range: `1`-`255`
     * 
     */
    @Import(name="scope")
    private @Nullable Output<Integer> scope;

    /**
     * @return Set RP Discovery Scope
     *   - Range: `1`-`255`
     * 
     */
    public Optional<Output<Integer>> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="scopeVariable")
    private @Nullable Output<String> scopeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> scopeVariable() {
        return Optional.ofNullable(this.scopeVariable);
    }

    /**
     * Set when PIM router joins the SPT (kbps)
     *   - Choices: `0`, `infinity`
     * 
     */
    @Import(name="sptThreshold")
    private @Nullable Output<String> sptThreshold;

    /**
     * @return Set when PIM router joins the SPT (kbps)
     *   - Choices: `0`, `infinity`
     * 
     */
    public Optional<Output<String>> sptThreshold() {
        return Optional.ofNullable(this.sptThreshold);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sptThresholdVariable")
    private @Nullable Output<String> sptThresholdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sptThresholdVariable() {
        return Optional.ofNullable(this.sptThresholdVariable);
    }

    /**
     * The template type
     * 
     */
    @Import(name="templateType")
    private @Nullable Output<String> templateType;

    /**
     * @return The template type
     * 
     */
    public Optional<Output<String>> templateType() {
        return Optional.ofNullable(this.templateType);
    }

    /**
     * The version of the feature template
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the feature template
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private CedgePimFeatureTemplateState() {}

    private CedgePimFeatureTemplateState(CedgePimFeatureTemplateState $) {
        this.autoRp = $.autoRp;
        this.autoRpVariable = $.autoRpVariable;
        this.bsrCandidate = $.bsrCandidate;
        this.bsrCandidateVariable = $.bsrCandidateVariable;
        this.default_ = $.default_;
        this.defaultVariable = $.defaultVariable;
        this.description = $.description;
        this.deviceTypes = $.deviceTypes;
        this.hashMaskLength = $.hashMaskLength;
        this.hashMaskLengthVariable = $.hashMaskLengthVariable;
        this.interfaceName = $.interfaceName;
        this.interfaceNameVariable = $.interfaceNameVariable;
        this.interfaces = $.interfaces;
        this.name = $.name;
        this.priority = $.priority;
        this.priorityVariable = $.priorityVariable;
        this.range = $.range;
        this.rangeVariable = $.rangeVariable;
        this.rpAddresses = $.rpAddresses;
        this.rpAnnounceFields = $.rpAnnounceFields;
        this.rpCandidateAccessList = $.rpCandidateAccessList;
        this.rpCandidateAccessListVariable = $.rpCandidateAccessListVariable;
        this.rpCandidates = $.rpCandidates;
        this.scope = $.scope;
        this.scopeVariable = $.scopeVariable;
        this.sptThreshold = $.sptThreshold;
        this.sptThresholdVariable = $.sptThresholdVariable;
        this.templateType = $.templateType;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CedgePimFeatureTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CedgePimFeatureTemplateState $;

        public Builder() {
            $ = new CedgePimFeatureTemplateState();
        }

        public Builder(CedgePimFeatureTemplateState defaults) {
            $ = new CedgePimFeatureTemplateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoRp Enable or disable auto-RP
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder autoRp(@Nullable Output<Boolean> autoRp) {
            $.autoRp = autoRp;
            return this;
        }

        /**
         * @param autoRp Enable or disable auto-RP
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder autoRp(Boolean autoRp) {
            return autoRp(Output.of(autoRp));
        }

        /**
         * @param autoRpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder autoRpVariable(@Nullable Output<String> autoRpVariable) {
            $.autoRpVariable = autoRpVariable;
            return this;
        }

        /**
         * @param autoRpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder autoRpVariable(String autoRpVariable) {
            return autoRpVariable(Output.of(autoRpVariable));
        }

        /**
         * @param bsrCandidate Set Autonomic-Networking virtual interface
         * 
         * @return builder
         * 
         */
        public Builder bsrCandidate(@Nullable Output<String> bsrCandidate) {
            $.bsrCandidate = bsrCandidate;
            return this;
        }

        /**
         * @param bsrCandidate Set Autonomic-Networking virtual interface
         * 
         * @return builder
         * 
         */
        public Builder bsrCandidate(String bsrCandidate) {
            return bsrCandidate(Output.of(bsrCandidate));
        }

        /**
         * @param bsrCandidateVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder bsrCandidateVariable(@Nullable Output<String> bsrCandidateVariable) {
            $.bsrCandidateVariable = bsrCandidateVariable;
            return this;
        }

        /**
         * @param bsrCandidateVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder bsrCandidateVariable(String bsrCandidateVariable) {
            return bsrCandidateVariable(Output.of(bsrCandidateVariable));
        }

        /**
         * @param default_ Turn SSM On / Off
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder default_(@Nullable Output<Boolean> default_) {
            $.default_ = default_;
            return this;
        }

        /**
         * @param default_ Turn SSM On / Off
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder default_(Boolean default_) {
            return default_(Output.of(default_));
        }

        /**
         * @param defaultVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder defaultVariable(@Nullable Output<String> defaultVariable) {
            $.defaultVariable = defaultVariable;
            return this;
        }

        /**
         * @param defaultVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder defaultVariable(String defaultVariable) {
            return defaultVariable(Output.of(defaultVariable));
        }

        /**
         * @param description The description of the feature template
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the feature template
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param deviceTypes List of supported device types
         *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(@Nullable Output<List<String>> deviceTypes) {
            $.deviceTypes = deviceTypes;
            return this;
        }

        /**
         * @param deviceTypes List of supported device types
         *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(List<String> deviceTypes) {
            return deviceTypes(Output.of(deviceTypes));
        }

        /**
         * @param deviceTypes List of supported device types
         *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(String... deviceTypes) {
            return deviceTypes(List.of(deviceTypes));
        }

        /**
         * @param hashMaskLength Hash Mask length for RP selection
         * 
         * @return builder
         * 
         */
        public Builder hashMaskLength(@Nullable Output<String> hashMaskLength) {
            $.hashMaskLength = hashMaskLength;
            return this;
        }

        /**
         * @param hashMaskLength Hash Mask length for RP selection
         * 
         * @return builder
         * 
         */
        public Builder hashMaskLength(String hashMaskLength) {
            return hashMaskLength(Output.of(hashMaskLength));
        }

        /**
         * @param hashMaskLengthVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder hashMaskLengthVariable(@Nullable Output<String> hashMaskLengthVariable) {
            $.hashMaskLengthVariable = hashMaskLengthVariable;
            return this;
        }

        /**
         * @param hashMaskLengthVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder hashMaskLengthVariable(String hashMaskLengthVariable) {
            return hashMaskLengthVariable(Output.of(hashMaskLengthVariable));
        }

        /**
         * @param interfaceName Set RP Discovery Interface Name
         * 
         * @return builder
         * 
         */
        public Builder interfaceName(@Nullable Output<String> interfaceName) {
            $.interfaceName = interfaceName;
            return this;
        }

        /**
         * @param interfaceName Set RP Discovery Interface Name
         * 
         * @return builder
         * 
         */
        public Builder interfaceName(String interfaceName) {
            return interfaceName(Output.of(interfaceName));
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(@Nullable Output<String> interfaceNameVariable) {
            $.interfaceNameVariable = interfaceNameVariable;
            return this;
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(String interfaceNameVariable) {
            return interfaceNameVariable(Output.of(interfaceNameVariable));
        }

        /**
         * @param interfaces Set PIM interface parameters
         * 
         * @return builder
         * 
         */
        public Builder interfaces(@Nullable Output<List<CedgePimFeatureTemplateInterfaceArgs>> interfaces) {
            $.interfaces = interfaces;
            return this;
        }

        /**
         * @param interfaces Set PIM interface parameters
         * 
         * @return builder
         * 
         */
        public Builder interfaces(List<CedgePimFeatureTemplateInterfaceArgs> interfaces) {
            return interfaces(Output.of(interfaces));
        }

        /**
         * @param interfaces Set PIM interface parameters
         * 
         * @return builder
         * 
         */
        public Builder interfaces(CedgePimFeatureTemplateInterfaceArgs... interfaces) {
            return interfaces(List.of(interfaces));
        }

        /**
         * @param name The name of the feature template
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the feature template
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param priority Set RP candidate priority
         *   - Range: `0`-`255`
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Set RP candidate priority
         *   - Range: `0`-`255`
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param priorityVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder priorityVariable(@Nullable Output<String> priorityVariable) {
            $.priorityVariable = priorityVariable;
            return this;
        }

        /**
         * @param priorityVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder priorityVariable(String priorityVariable) {
            return priorityVariable(Output.of(priorityVariable));
        }

        /**
         * @param range Set Access List for PIM SSM
         * 
         * @return builder
         * 
         */
        public Builder range(@Nullable Output<String> range) {
            $.range = range;
            return this;
        }

        /**
         * @param range Set Access List for PIM SSM
         * 
         * @return builder
         * 
         */
        public Builder range(String range) {
            return range(Output.of(range));
        }

        /**
         * @param rangeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder rangeVariable(@Nullable Output<String> rangeVariable) {
            $.rangeVariable = rangeVariable;
            return this;
        }

        /**
         * @param rangeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder rangeVariable(String rangeVariable) {
            return rangeVariable(Output.of(rangeVariable));
        }

        /**
         * @param rpAddresses Set Static RP Address(es)
         * 
         * @return builder
         * 
         */
        public Builder rpAddresses(@Nullable Output<List<CedgePimFeatureTemplateRpAddressArgs>> rpAddresses) {
            $.rpAddresses = rpAddresses;
            return this;
        }

        /**
         * @param rpAddresses Set Static RP Address(es)
         * 
         * @return builder
         * 
         */
        public Builder rpAddresses(List<CedgePimFeatureTemplateRpAddressArgs> rpAddresses) {
            return rpAddresses(Output.of(rpAddresses));
        }

        /**
         * @param rpAddresses Set Static RP Address(es)
         * 
         * @return builder
         * 
         */
        public Builder rpAddresses(CedgePimFeatureTemplateRpAddressArgs... rpAddresses) {
            return rpAddresses(List.of(rpAddresses));
        }

        /**
         * @param rpAnnounceFields Enable or disable RP Announce
         * 
         * @return builder
         * 
         */
        public Builder rpAnnounceFields(@Nullable Output<List<CedgePimFeatureTemplateRpAnnounceFieldArgs>> rpAnnounceFields) {
            $.rpAnnounceFields = rpAnnounceFields;
            return this;
        }

        /**
         * @param rpAnnounceFields Enable or disable RP Announce
         * 
         * @return builder
         * 
         */
        public Builder rpAnnounceFields(List<CedgePimFeatureTemplateRpAnnounceFieldArgs> rpAnnounceFields) {
            return rpAnnounceFields(Output.of(rpAnnounceFields));
        }

        /**
         * @param rpAnnounceFields Enable or disable RP Announce
         * 
         * @return builder
         * 
         */
        public Builder rpAnnounceFields(CedgePimFeatureTemplateRpAnnounceFieldArgs... rpAnnounceFields) {
            return rpAnnounceFields(List.of(rpAnnounceFields));
        }

        /**
         * @param rpCandidateAccessList Set BSR RP candidate filter
         * 
         * @return builder
         * 
         */
        public Builder rpCandidateAccessList(@Nullable Output<String> rpCandidateAccessList) {
            $.rpCandidateAccessList = rpCandidateAccessList;
            return this;
        }

        /**
         * @param rpCandidateAccessList Set BSR RP candidate filter
         * 
         * @return builder
         * 
         */
        public Builder rpCandidateAccessList(String rpCandidateAccessList) {
            return rpCandidateAccessList(Output.of(rpCandidateAccessList));
        }

        /**
         * @param rpCandidateAccessListVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder rpCandidateAccessListVariable(@Nullable Output<String> rpCandidateAccessListVariable) {
            $.rpCandidateAccessListVariable = rpCandidateAccessListVariable;
            return this;
        }

        /**
         * @param rpCandidateAccessListVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder rpCandidateAccessListVariable(String rpCandidateAccessListVariable) {
            return rpCandidateAccessListVariable(Output.of(rpCandidateAccessListVariable));
        }

        /**
         * @param rpCandidates Set RP Discovery Scope
         * 
         * @return builder
         * 
         */
        public Builder rpCandidates(@Nullable Output<List<CedgePimFeatureTemplateRpCandidateArgs>> rpCandidates) {
            $.rpCandidates = rpCandidates;
            return this;
        }

        /**
         * @param rpCandidates Set RP Discovery Scope
         * 
         * @return builder
         * 
         */
        public Builder rpCandidates(List<CedgePimFeatureTemplateRpCandidateArgs> rpCandidates) {
            return rpCandidates(Output.of(rpCandidates));
        }

        /**
         * @param rpCandidates Set RP Discovery Scope
         * 
         * @return builder
         * 
         */
        public Builder rpCandidates(CedgePimFeatureTemplateRpCandidateArgs... rpCandidates) {
            return rpCandidates(List.of(rpCandidates));
        }

        /**
         * @param scope Set RP Discovery Scope
         *   - Range: `1`-`255`
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<Integer> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope Set RP Discovery Scope
         *   - Range: `1`-`255`
         * 
         * @return builder
         * 
         */
        public Builder scope(Integer scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param scopeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder scopeVariable(@Nullable Output<String> scopeVariable) {
            $.scopeVariable = scopeVariable;
            return this;
        }

        /**
         * @param scopeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder scopeVariable(String scopeVariable) {
            return scopeVariable(Output.of(scopeVariable));
        }

        /**
         * @param sptThreshold Set when PIM router joins the SPT (kbps)
         *   - Choices: `0`, `infinity`
         * 
         * @return builder
         * 
         */
        public Builder sptThreshold(@Nullable Output<String> sptThreshold) {
            $.sptThreshold = sptThreshold;
            return this;
        }

        /**
         * @param sptThreshold Set when PIM router joins the SPT (kbps)
         *   - Choices: `0`, `infinity`
         * 
         * @return builder
         * 
         */
        public Builder sptThreshold(String sptThreshold) {
            return sptThreshold(Output.of(sptThreshold));
        }

        /**
         * @param sptThresholdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sptThresholdVariable(@Nullable Output<String> sptThresholdVariable) {
            $.sptThresholdVariable = sptThresholdVariable;
            return this;
        }

        /**
         * @param sptThresholdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sptThresholdVariable(String sptThresholdVariable) {
            return sptThresholdVariable(Output.of(sptThresholdVariable));
        }

        /**
         * @param templateType The template type
         * 
         * @return builder
         * 
         */
        public Builder templateType(@Nullable Output<String> templateType) {
            $.templateType = templateType;
            return this;
        }

        /**
         * @param templateType The template type
         * 
         * @return builder
         * 
         */
        public Builder templateType(String templateType) {
            return templateType(Output.of(templateType));
        }

        /**
         * @param version The version of the feature template
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the feature template
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public CedgePimFeatureTemplateState build() {
            return $;
        }
    }

}
