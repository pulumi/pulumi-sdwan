// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.CiscoNtpFeatureTemplateAuthenticationKeyArgs;
import com.pulumi.sdwan.inputs.CiscoNtpFeatureTemplateServerArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CiscoNtpFeatureTemplateState extends com.pulumi.resources.ResourceArgs {

    public static final CiscoNtpFeatureTemplateState Empty = new CiscoNtpFeatureTemplateState();

    /**
     * Set MD5 authentication key
     * 
     */
    @Import(name="authenticationKeys")
    private @Nullable Output<List<CiscoNtpFeatureTemplateAuthenticationKeyArgs>> authenticationKeys;

    /**
     * @return Set MD5 authentication key
     * 
     */
    public Optional<Output<List<CiscoNtpFeatureTemplateAuthenticationKeyArgs>>> authenticationKeys() {
        return Optional.ofNullable(this.authenticationKeys);
    }

    /**
     * The description of the feature template
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the feature template
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    @Import(name="deviceTypes")
    private @Nullable Output<List<String>> deviceTypes;

    /**
     * @return List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    public Optional<Output<List<String>>> deviceTypes() {
        return Optional.ofNullable(this.deviceTypes);
    }

    /**
     * Configure device as NTP master
     *   - Default value: `false`
     * 
     */
    @Import(name="master")
    private @Nullable Output<Boolean> master;

    /**
     * @return Configure device as NTP master
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> master() {
        return Optional.ofNullable(this.master);
    }

    /**
     * Set interface for NTP Master
     * 
     */
    @Import(name="masterSourceInterface")
    private @Nullable Output<String> masterSourceInterface;

    /**
     * @return Set interface for NTP Master
     * 
     */
    public Optional<Output<String>> masterSourceInterface() {
        return Optional.ofNullable(this.masterSourceInterface);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="masterSourceInterfaceVariable")
    private @Nullable Output<String> masterSourceInterfaceVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> masterSourceInterfaceVariable() {
        return Optional.ofNullable(this.masterSourceInterfaceVariable);
    }

    /**
     * Master Stratum &lt;1..15&gt;
     *   - Range: `1`-`15`
     * 
     */
    @Import(name="masterStratum")
    private @Nullable Output<Integer> masterStratum;

    /**
     * @return Master Stratum &lt;1..15&gt;
     *   - Range: `1`-`15`
     * 
     */
    public Optional<Output<Integer>> masterStratum() {
        return Optional.ofNullable(this.masterStratum);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="masterStratumVariable")
    private @Nullable Output<String> masterStratumVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> masterStratumVariable() {
        return Optional.ofNullable(this.masterStratumVariable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="masterVariable")
    private @Nullable Output<String> masterVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> masterVariable() {
        return Optional.ofNullable(this.masterVariable);
    }

    /**
     * The name of the feature template
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the feature template
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Configure NTP servers
     * 
     */
    @Import(name="servers")
    private @Nullable Output<List<CiscoNtpFeatureTemplateServerArgs>> servers;

    /**
     * @return Configure NTP servers
     * 
     */
    public Optional<Output<List<CiscoNtpFeatureTemplateServerArgs>>> servers() {
        return Optional.ofNullable(this.servers);
    }

    /**
     * The template type
     * 
     */
    @Import(name="templateType")
    private @Nullable Output<String> templateType;

    /**
     * @return The template type
     * 
     */
    public Optional<Output<String>> templateType() {
        return Optional.ofNullable(this.templateType);
    }

    /**
     * Designate authentication key as trustworthy
     * 
     */
    @Import(name="trustedKeys")
    private @Nullable Output<List<Integer>> trustedKeys;

    /**
     * @return Designate authentication key as trustworthy
     * 
     */
    public Optional<Output<List<Integer>>> trustedKeys() {
        return Optional.ofNullable(this.trustedKeys);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="trustedKeysVariable")
    private @Nullable Output<String> trustedKeysVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> trustedKeysVariable() {
        return Optional.ofNullable(this.trustedKeysVariable);
    }

    /**
     * The version of the feature template
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the feature template
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private CiscoNtpFeatureTemplateState() {}

    private CiscoNtpFeatureTemplateState(CiscoNtpFeatureTemplateState $) {
        this.authenticationKeys = $.authenticationKeys;
        this.description = $.description;
        this.deviceTypes = $.deviceTypes;
        this.master = $.master;
        this.masterSourceInterface = $.masterSourceInterface;
        this.masterSourceInterfaceVariable = $.masterSourceInterfaceVariable;
        this.masterStratum = $.masterStratum;
        this.masterStratumVariable = $.masterStratumVariable;
        this.masterVariable = $.masterVariable;
        this.name = $.name;
        this.servers = $.servers;
        this.templateType = $.templateType;
        this.trustedKeys = $.trustedKeys;
        this.trustedKeysVariable = $.trustedKeysVariable;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CiscoNtpFeatureTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CiscoNtpFeatureTemplateState $;

        public Builder() {
            $ = new CiscoNtpFeatureTemplateState();
        }

        public Builder(CiscoNtpFeatureTemplateState defaults) {
            $ = new CiscoNtpFeatureTemplateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationKeys Set MD5 authentication key
         * 
         * @return builder
         * 
         */
        public Builder authenticationKeys(@Nullable Output<List<CiscoNtpFeatureTemplateAuthenticationKeyArgs>> authenticationKeys) {
            $.authenticationKeys = authenticationKeys;
            return this;
        }

        /**
         * @param authenticationKeys Set MD5 authentication key
         * 
         * @return builder
         * 
         */
        public Builder authenticationKeys(List<CiscoNtpFeatureTemplateAuthenticationKeyArgs> authenticationKeys) {
            return authenticationKeys(Output.of(authenticationKeys));
        }

        /**
         * @param authenticationKeys Set MD5 authentication key
         * 
         * @return builder
         * 
         */
        public Builder authenticationKeys(CiscoNtpFeatureTemplateAuthenticationKeyArgs... authenticationKeys) {
            return authenticationKeys(List.of(authenticationKeys));
        }

        /**
         * @param description The description of the feature template
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the feature template
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param deviceTypes List of supported device types
         *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(@Nullable Output<List<String>> deviceTypes) {
            $.deviceTypes = deviceTypes;
            return this;
        }

        /**
         * @param deviceTypes List of supported device types
         *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(List<String> deviceTypes) {
            return deviceTypes(Output.of(deviceTypes));
        }

        /**
         * @param deviceTypes List of supported device types
         *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(String... deviceTypes) {
            return deviceTypes(List.of(deviceTypes));
        }

        /**
         * @param master Configure device as NTP master
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder master(@Nullable Output<Boolean> master) {
            $.master = master;
            return this;
        }

        /**
         * @param master Configure device as NTP master
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder master(Boolean master) {
            return master(Output.of(master));
        }

        /**
         * @param masterSourceInterface Set interface for NTP Master
         * 
         * @return builder
         * 
         */
        public Builder masterSourceInterface(@Nullable Output<String> masterSourceInterface) {
            $.masterSourceInterface = masterSourceInterface;
            return this;
        }

        /**
         * @param masterSourceInterface Set interface for NTP Master
         * 
         * @return builder
         * 
         */
        public Builder masterSourceInterface(String masterSourceInterface) {
            return masterSourceInterface(Output.of(masterSourceInterface));
        }

        /**
         * @param masterSourceInterfaceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder masterSourceInterfaceVariable(@Nullable Output<String> masterSourceInterfaceVariable) {
            $.masterSourceInterfaceVariable = masterSourceInterfaceVariable;
            return this;
        }

        /**
         * @param masterSourceInterfaceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder masterSourceInterfaceVariable(String masterSourceInterfaceVariable) {
            return masterSourceInterfaceVariable(Output.of(masterSourceInterfaceVariable));
        }

        /**
         * @param masterStratum Master Stratum &lt;1..15&gt;
         *   - Range: `1`-`15`
         * 
         * @return builder
         * 
         */
        public Builder masterStratum(@Nullable Output<Integer> masterStratum) {
            $.masterStratum = masterStratum;
            return this;
        }

        /**
         * @param masterStratum Master Stratum &lt;1..15&gt;
         *   - Range: `1`-`15`
         * 
         * @return builder
         * 
         */
        public Builder masterStratum(Integer masterStratum) {
            return masterStratum(Output.of(masterStratum));
        }

        /**
         * @param masterStratumVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder masterStratumVariable(@Nullable Output<String> masterStratumVariable) {
            $.masterStratumVariable = masterStratumVariable;
            return this;
        }

        /**
         * @param masterStratumVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder masterStratumVariable(String masterStratumVariable) {
            return masterStratumVariable(Output.of(masterStratumVariable));
        }

        /**
         * @param masterVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder masterVariable(@Nullable Output<String> masterVariable) {
            $.masterVariable = masterVariable;
            return this;
        }

        /**
         * @param masterVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder masterVariable(String masterVariable) {
            return masterVariable(Output.of(masterVariable));
        }

        /**
         * @param name The name of the feature template
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the feature template
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param servers Configure NTP servers
         * 
         * @return builder
         * 
         */
        public Builder servers(@Nullable Output<List<CiscoNtpFeatureTemplateServerArgs>> servers) {
            $.servers = servers;
            return this;
        }

        /**
         * @param servers Configure NTP servers
         * 
         * @return builder
         * 
         */
        public Builder servers(List<CiscoNtpFeatureTemplateServerArgs> servers) {
            return servers(Output.of(servers));
        }

        /**
         * @param servers Configure NTP servers
         * 
         * @return builder
         * 
         */
        public Builder servers(CiscoNtpFeatureTemplateServerArgs... servers) {
            return servers(List.of(servers));
        }

        /**
         * @param templateType The template type
         * 
         * @return builder
         * 
         */
        public Builder templateType(@Nullable Output<String> templateType) {
            $.templateType = templateType;
            return this;
        }

        /**
         * @param templateType The template type
         * 
         * @return builder
         * 
         */
        public Builder templateType(String templateType) {
            return templateType(Output.of(templateType));
        }

        /**
         * @param trustedKeys Designate authentication key as trustworthy
         * 
         * @return builder
         * 
         */
        public Builder trustedKeys(@Nullable Output<List<Integer>> trustedKeys) {
            $.trustedKeys = trustedKeys;
            return this;
        }

        /**
         * @param trustedKeys Designate authentication key as trustworthy
         * 
         * @return builder
         * 
         */
        public Builder trustedKeys(List<Integer> trustedKeys) {
            return trustedKeys(Output.of(trustedKeys));
        }

        /**
         * @param trustedKeys Designate authentication key as trustworthy
         * 
         * @return builder
         * 
         */
        public Builder trustedKeys(Integer... trustedKeys) {
            return trustedKeys(List.of(trustedKeys));
        }

        /**
         * @param trustedKeysVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trustedKeysVariable(@Nullable Output<String> trustedKeysVariable) {
            $.trustedKeysVariable = trustedKeysVariable;
            return this;
        }

        /**
         * @param trustedKeysVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trustedKeysVariable(String trustedKeysVariable) {
            return trustedKeysVariable(Output.of(trustedKeysVariable));
        }

        /**
         * @param version The version of the feature template
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the feature template
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public CiscoNtpFeatureTemplateState build() {
            return $;
        }
    }

}
