// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetHubAndSpokeTopologyPolicyDefinitionTopology;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetHubAndSpokeTopologyPolicyDefinitionResult {
    /**
     * @return The description of the policy definition
     * 
     */
    private String description;
    /**
     * @return The id of the object
     * 
     */
    private String id;
    /**
     * @return The name of the policy definition
     * 
     */
    private String name;
    /**
     * @return List of topologies
     * 
     */
    private List<GetHubAndSpokeTopologyPolicyDefinitionTopology> topologies;
    /**
     * @return Type
     * 
     */
    private String type;
    /**
     * @return The version of the object
     * 
     */
    private Integer version;
    /**
     * @return VPN list ID
     * 
     */
    private String vpnListId;
    /**
     * @return VPN list version
     * 
     */
    private Integer vpnListVersion;

    private GetHubAndSpokeTopologyPolicyDefinitionResult() {}
    /**
     * @return The description of the policy definition
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The id of the object
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the policy definition
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return List of topologies
     * 
     */
    public List<GetHubAndSpokeTopologyPolicyDefinitionTopology> topologies() {
        return this.topologies;
    }
    /**
     * @return Type
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The version of the object
     * 
     */
    public Integer version() {
        return this.version;
    }
    /**
     * @return VPN list ID
     * 
     */
    public String vpnListId() {
        return this.vpnListId;
    }
    /**
     * @return VPN list version
     * 
     */
    public Integer vpnListVersion() {
        return this.vpnListVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHubAndSpokeTopologyPolicyDefinitionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String id;
        private String name;
        private List<GetHubAndSpokeTopologyPolicyDefinitionTopology> topologies;
        private String type;
        private Integer version;
        private String vpnListId;
        private Integer vpnListVersion;
        public Builder() {}
        public Builder(GetHubAndSpokeTopologyPolicyDefinitionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.topologies = defaults.topologies;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
    	      this.vpnListId = defaults.vpnListId;
    	      this.vpnListVersion = defaults.vpnListVersion;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetHubAndSpokeTopologyPolicyDefinitionResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetHubAndSpokeTopologyPolicyDefinitionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetHubAndSpokeTopologyPolicyDefinitionResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder topologies(List<GetHubAndSpokeTopologyPolicyDefinitionTopology> topologies) {
            if (topologies == null) {
              throw new MissingRequiredPropertyException("GetHubAndSpokeTopologyPolicyDefinitionResult", "topologies");
            }
            this.topologies = topologies;
            return this;
        }
        public Builder topologies(GetHubAndSpokeTopologyPolicyDefinitionTopology... topologies) {
            return topologies(List.of(topologies));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetHubAndSpokeTopologyPolicyDefinitionResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetHubAndSpokeTopologyPolicyDefinitionResult", "version");
            }
            this.version = version;
            return this;
        }
        @CustomType.Setter
        public Builder vpnListId(String vpnListId) {
            if (vpnListId == null) {
              throw new MissingRequiredPropertyException("GetHubAndSpokeTopologyPolicyDefinitionResult", "vpnListId");
            }
            this.vpnListId = vpnListId;
            return this;
        }
        @CustomType.Setter
        public Builder vpnListVersion(Integer vpnListVersion) {
            if (vpnListVersion == null) {
              throw new MissingRequiredPropertyException("GetHubAndSpokeTopologyPolicyDefinitionResult", "vpnListVersion");
            }
            this.vpnListVersion = vpnListVersion;
            return this;
        }
        public GetHubAndSpokeTopologyPolicyDefinitionResult build() {
            final var _resultValue = new GetHubAndSpokeTopologyPolicyDefinitionResult();
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.topologies = topologies;
            _resultValue.type = type;
            _resultValue.version = version;
            _resultValue.vpnListId = vpnListId;
            _resultValue.vpnListVersion = vpnListVersion;
            return _resultValue;
        }
    }
}
