// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationPriorityTrafficPolicyPolicySequenceMatchEntry {
    private @Nullable String applicationListId;
    private @Nullable String destinationDataIpv4PrefixListId;
    private @Nullable String destinationDataIpv6PrefixListId;
    /**
     * @return Destination Data IP Prefix
     * 
     */
    private @Nullable String destinationIpv4Prefix;
    /**
     * @return Destination Data IP Prefix
     * 
     */
    private @Nullable String destinationIpv6Prefix;
    /**
     * @return Destination Port (0-65535) range or individual number separated by space
     * 
     */
    private @Nullable List<String> destinationPorts;
    /**
     * @return Destination Region
     *   - Choices: `primary-region`, `secondary-region`, `other-region`
     * 
     */
    private @Nullable String destinationRegion;
    /**
     * @return Dns
     *   - Choices: `request`, `response`
     * 
     */
    private @Nullable String dns;
    private @Nullable String dnsApplicationListId;
    /**
     * @return DSCP number
     *   - Range: `0`-`63`
     * 
     */
    private @Nullable Integer dscp;
    /**
     * @return ICMP6 Message
     * 
     */
    private @Nullable List<String> icmp6Messages;
    /**
     * @return ICMP Message
     * 
     */
    private @Nullable List<String> icmpMessages;
    /**
     * @return Packet Length
     * 
     */
    private @Nullable String packetLength;
    /**
     * @return protocol (0-255) range or individual number separated by space
     * 
     */
    private @Nullable List<String> protocols;
    private @Nullable String saasApplicationListId;
    /**
     * @return M365 Service Area
     * 
     */
    private @Nullable List<String> serviceAreas;
    private @Nullable String sourceDataIpv4PrefxListId;
    private @Nullable String sourceDataIpv6PrefxListId;
    /**
     * @return Source Data IP Prefix
     * 
     */
    private @Nullable String sourceIpv4Prefix;
    /**
     * @return Source Data IP Prefix
     * 
     */
    private @Nullable String sourceIpv6Prefix;
    /**
     * @return Source Port (0-65535) range or individual number separated by space
     * 
     */
    private @Nullable List<String> sourcePorts;
    /**
     * @return TCP States
     *   - Choices: `syn`
     * 
     */
    private @Nullable String tcp;
    /**
     * @return M365 Traffic Category
     *   - Choices: `optimize-allow`, `optimize`, `all`
     * 
     */
    private @Nullable String trafficCategory;
    /**
     * @return Traffic Class
     *   - Choices: `gold-voip-telephony`, `gold-broadcast-video`, `gold-real-time-interactive`, `gold-multimedia-conferencing`, `gold-multimedia-streaming`, `gold-network-control`, `gold-signaling`, `gold-ops-admin-mgmt`, `gold-transactional-data`, `gold-bulk-data`, `silver`, `bronze`
     * 
     */
    private @Nullable String trafficClass;
    /**
     * @return Traffic to
     *   - Choices: `core`, `service`, `access`
     * 
     */
    private @Nullable String trafficTo;

    private ApplicationPriorityTrafficPolicyPolicySequenceMatchEntry() {}
    public Optional<String> applicationListId() {
        return Optional.ofNullable(this.applicationListId);
    }
    public Optional<String> destinationDataIpv4PrefixListId() {
        return Optional.ofNullable(this.destinationDataIpv4PrefixListId);
    }
    public Optional<String> destinationDataIpv6PrefixListId() {
        return Optional.ofNullable(this.destinationDataIpv6PrefixListId);
    }
    /**
     * @return Destination Data IP Prefix
     * 
     */
    public Optional<String> destinationIpv4Prefix() {
        return Optional.ofNullable(this.destinationIpv4Prefix);
    }
    /**
     * @return Destination Data IP Prefix
     * 
     */
    public Optional<String> destinationIpv6Prefix() {
        return Optional.ofNullable(this.destinationIpv6Prefix);
    }
    /**
     * @return Destination Port (0-65535) range or individual number separated by space
     * 
     */
    public List<String> destinationPorts() {
        return this.destinationPorts == null ? List.of() : this.destinationPorts;
    }
    /**
     * @return Destination Region
     *   - Choices: `primary-region`, `secondary-region`, `other-region`
     * 
     */
    public Optional<String> destinationRegion() {
        return Optional.ofNullable(this.destinationRegion);
    }
    /**
     * @return Dns
     *   - Choices: `request`, `response`
     * 
     */
    public Optional<String> dns() {
        return Optional.ofNullable(this.dns);
    }
    public Optional<String> dnsApplicationListId() {
        return Optional.ofNullable(this.dnsApplicationListId);
    }
    /**
     * @return DSCP number
     *   - Range: `0`-`63`
     * 
     */
    public Optional<Integer> dscp() {
        return Optional.ofNullable(this.dscp);
    }
    /**
     * @return ICMP6 Message
     * 
     */
    public List<String> icmp6Messages() {
        return this.icmp6Messages == null ? List.of() : this.icmp6Messages;
    }
    /**
     * @return ICMP Message
     * 
     */
    public List<String> icmpMessages() {
        return this.icmpMessages == null ? List.of() : this.icmpMessages;
    }
    /**
     * @return Packet Length
     * 
     */
    public Optional<String> packetLength() {
        return Optional.ofNullable(this.packetLength);
    }
    /**
     * @return protocol (0-255) range or individual number separated by space
     * 
     */
    public List<String> protocols() {
        return this.protocols == null ? List.of() : this.protocols;
    }
    public Optional<String> saasApplicationListId() {
        return Optional.ofNullable(this.saasApplicationListId);
    }
    /**
     * @return M365 Service Area
     * 
     */
    public List<String> serviceAreas() {
        return this.serviceAreas == null ? List.of() : this.serviceAreas;
    }
    public Optional<String> sourceDataIpv4PrefxListId() {
        return Optional.ofNullable(this.sourceDataIpv4PrefxListId);
    }
    public Optional<String> sourceDataIpv6PrefxListId() {
        return Optional.ofNullable(this.sourceDataIpv6PrefxListId);
    }
    /**
     * @return Source Data IP Prefix
     * 
     */
    public Optional<String> sourceIpv4Prefix() {
        return Optional.ofNullable(this.sourceIpv4Prefix);
    }
    /**
     * @return Source Data IP Prefix
     * 
     */
    public Optional<String> sourceIpv6Prefix() {
        return Optional.ofNullable(this.sourceIpv6Prefix);
    }
    /**
     * @return Source Port (0-65535) range or individual number separated by space
     * 
     */
    public List<String> sourcePorts() {
        return this.sourcePorts == null ? List.of() : this.sourcePorts;
    }
    /**
     * @return TCP States
     *   - Choices: `syn`
     * 
     */
    public Optional<String> tcp() {
        return Optional.ofNullable(this.tcp);
    }
    /**
     * @return M365 Traffic Category
     *   - Choices: `optimize-allow`, `optimize`, `all`
     * 
     */
    public Optional<String> trafficCategory() {
        return Optional.ofNullable(this.trafficCategory);
    }
    /**
     * @return Traffic Class
     *   - Choices: `gold-voip-telephony`, `gold-broadcast-video`, `gold-real-time-interactive`, `gold-multimedia-conferencing`, `gold-multimedia-streaming`, `gold-network-control`, `gold-signaling`, `gold-ops-admin-mgmt`, `gold-transactional-data`, `gold-bulk-data`, `silver`, `bronze`
     * 
     */
    public Optional<String> trafficClass() {
        return Optional.ofNullable(this.trafficClass);
    }
    /**
     * @return Traffic to
     *   - Choices: `core`, `service`, `access`
     * 
     */
    public Optional<String> trafficTo() {
        return Optional.ofNullable(this.trafficTo);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationPriorityTrafficPolicyPolicySequenceMatchEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String applicationListId;
        private @Nullable String destinationDataIpv4PrefixListId;
        private @Nullable String destinationDataIpv6PrefixListId;
        private @Nullable String destinationIpv4Prefix;
        private @Nullable String destinationIpv6Prefix;
        private @Nullable List<String> destinationPorts;
        private @Nullable String destinationRegion;
        private @Nullable String dns;
        private @Nullable String dnsApplicationListId;
        private @Nullable Integer dscp;
        private @Nullable List<String> icmp6Messages;
        private @Nullable List<String> icmpMessages;
        private @Nullable String packetLength;
        private @Nullable List<String> protocols;
        private @Nullable String saasApplicationListId;
        private @Nullable List<String> serviceAreas;
        private @Nullable String sourceDataIpv4PrefxListId;
        private @Nullable String sourceDataIpv6PrefxListId;
        private @Nullable String sourceIpv4Prefix;
        private @Nullable String sourceIpv6Prefix;
        private @Nullable List<String> sourcePorts;
        private @Nullable String tcp;
        private @Nullable String trafficCategory;
        private @Nullable String trafficClass;
        private @Nullable String trafficTo;
        public Builder() {}
        public Builder(ApplicationPriorityTrafficPolicyPolicySequenceMatchEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationListId = defaults.applicationListId;
    	      this.destinationDataIpv4PrefixListId = defaults.destinationDataIpv4PrefixListId;
    	      this.destinationDataIpv6PrefixListId = defaults.destinationDataIpv6PrefixListId;
    	      this.destinationIpv4Prefix = defaults.destinationIpv4Prefix;
    	      this.destinationIpv6Prefix = defaults.destinationIpv6Prefix;
    	      this.destinationPorts = defaults.destinationPorts;
    	      this.destinationRegion = defaults.destinationRegion;
    	      this.dns = defaults.dns;
    	      this.dnsApplicationListId = defaults.dnsApplicationListId;
    	      this.dscp = defaults.dscp;
    	      this.icmp6Messages = defaults.icmp6Messages;
    	      this.icmpMessages = defaults.icmpMessages;
    	      this.packetLength = defaults.packetLength;
    	      this.protocols = defaults.protocols;
    	      this.saasApplicationListId = defaults.saasApplicationListId;
    	      this.serviceAreas = defaults.serviceAreas;
    	      this.sourceDataIpv4PrefxListId = defaults.sourceDataIpv4PrefxListId;
    	      this.sourceDataIpv6PrefxListId = defaults.sourceDataIpv6PrefxListId;
    	      this.sourceIpv4Prefix = defaults.sourceIpv4Prefix;
    	      this.sourceIpv6Prefix = defaults.sourceIpv6Prefix;
    	      this.sourcePorts = defaults.sourcePorts;
    	      this.tcp = defaults.tcp;
    	      this.trafficCategory = defaults.trafficCategory;
    	      this.trafficClass = defaults.trafficClass;
    	      this.trafficTo = defaults.trafficTo;
        }

        @CustomType.Setter
        public Builder applicationListId(@Nullable String applicationListId) {

            this.applicationListId = applicationListId;
            return this;
        }
        @CustomType.Setter
        public Builder destinationDataIpv4PrefixListId(@Nullable String destinationDataIpv4PrefixListId) {

            this.destinationDataIpv4PrefixListId = destinationDataIpv4PrefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder destinationDataIpv6PrefixListId(@Nullable String destinationDataIpv6PrefixListId) {

            this.destinationDataIpv6PrefixListId = destinationDataIpv6PrefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder destinationIpv4Prefix(@Nullable String destinationIpv4Prefix) {

            this.destinationIpv4Prefix = destinationIpv4Prefix;
            return this;
        }
        @CustomType.Setter
        public Builder destinationIpv6Prefix(@Nullable String destinationIpv6Prefix) {

            this.destinationIpv6Prefix = destinationIpv6Prefix;
            return this;
        }
        @CustomType.Setter
        public Builder destinationPorts(@Nullable List<String> destinationPorts) {

            this.destinationPorts = destinationPorts;
            return this;
        }
        public Builder destinationPorts(String... destinationPorts) {
            return destinationPorts(List.of(destinationPorts));
        }
        @CustomType.Setter
        public Builder destinationRegion(@Nullable String destinationRegion) {

            this.destinationRegion = destinationRegion;
            return this;
        }
        @CustomType.Setter
        public Builder dns(@Nullable String dns) {

            this.dns = dns;
            return this;
        }
        @CustomType.Setter
        public Builder dnsApplicationListId(@Nullable String dnsApplicationListId) {

            this.dnsApplicationListId = dnsApplicationListId;
            return this;
        }
        @CustomType.Setter
        public Builder dscp(@Nullable Integer dscp) {

            this.dscp = dscp;
            return this;
        }
        @CustomType.Setter
        public Builder icmp6Messages(@Nullable List<String> icmp6Messages) {

            this.icmp6Messages = icmp6Messages;
            return this;
        }
        public Builder icmp6Messages(String... icmp6Messages) {
            return icmp6Messages(List.of(icmp6Messages));
        }
        @CustomType.Setter
        public Builder icmpMessages(@Nullable List<String> icmpMessages) {

            this.icmpMessages = icmpMessages;
            return this;
        }
        public Builder icmpMessages(String... icmpMessages) {
            return icmpMessages(List.of(icmpMessages));
        }
        @CustomType.Setter
        public Builder packetLength(@Nullable String packetLength) {

            this.packetLength = packetLength;
            return this;
        }
        @CustomType.Setter
        public Builder protocols(@Nullable List<String> protocols) {

            this.protocols = protocols;
            return this;
        }
        public Builder protocols(String... protocols) {
            return protocols(List.of(protocols));
        }
        @CustomType.Setter
        public Builder saasApplicationListId(@Nullable String saasApplicationListId) {

            this.saasApplicationListId = saasApplicationListId;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAreas(@Nullable List<String> serviceAreas) {

            this.serviceAreas = serviceAreas;
            return this;
        }
        public Builder serviceAreas(String... serviceAreas) {
            return serviceAreas(List.of(serviceAreas));
        }
        @CustomType.Setter
        public Builder sourceDataIpv4PrefxListId(@Nullable String sourceDataIpv4PrefxListId) {

            this.sourceDataIpv4PrefxListId = sourceDataIpv4PrefxListId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDataIpv6PrefxListId(@Nullable String sourceDataIpv6PrefxListId) {

            this.sourceDataIpv6PrefxListId = sourceDataIpv6PrefxListId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceIpv4Prefix(@Nullable String sourceIpv4Prefix) {

            this.sourceIpv4Prefix = sourceIpv4Prefix;
            return this;
        }
        @CustomType.Setter
        public Builder sourceIpv6Prefix(@Nullable String sourceIpv6Prefix) {

            this.sourceIpv6Prefix = sourceIpv6Prefix;
            return this;
        }
        @CustomType.Setter
        public Builder sourcePorts(@Nullable List<String> sourcePorts) {

            this.sourcePorts = sourcePorts;
            return this;
        }
        public Builder sourcePorts(String... sourcePorts) {
            return sourcePorts(List.of(sourcePorts));
        }
        @CustomType.Setter
        public Builder tcp(@Nullable String tcp) {

            this.tcp = tcp;
            return this;
        }
        @CustomType.Setter
        public Builder trafficCategory(@Nullable String trafficCategory) {

            this.trafficCategory = trafficCategory;
            return this;
        }
        @CustomType.Setter
        public Builder trafficClass(@Nullable String trafficClass) {

            this.trafficClass = trafficClass;
            return this;
        }
        @CustomType.Setter
        public Builder trafficTo(@Nullable String trafficTo) {

            this.trafficTo = trafficTo;
            return this;
        }
        public ApplicationPriorityTrafficPolicyPolicySequenceMatchEntry build() {
            final var _resultValue = new ApplicationPriorityTrafficPolicyPolicySequenceMatchEntry();
            _resultValue.applicationListId = applicationListId;
            _resultValue.destinationDataIpv4PrefixListId = destinationDataIpv4PrefixListId;
            _resultValue.destinationDataIpv6PrefixListId = destinationDataIpv6PrefixListId;
            _resultValue.destinationIpv4Prefix = destinationIpv4Prefix;
            _resultValue.destinationIpv6Prefix = destinationIpv6Prefix;
            _resultValue.destinationPorts = destinationPorts;
            _resultValue.destinationRegion = destinationRegion;
            _resultValue.dns = dns;
            _resultValue.dnsApplicationListId = dnsApplicationListId;
            _resultValue.dscp = dscp;
            _resultValue.icmp6Messages = icmp6Messages;
            _resultValue.icmpMessages = icmpMessages;
            _resultValue.packetLength = packetLength;
            _resultValue.protocols = protocols;
            _resultValue.saasApplicationListId = saasApplicationListId;
            _resultValue.serviceAreas = serviceAreas;
            _resultValue.sourceDataIpv4PrefxListId = sourceDataIpv4PrefxListId;
            _resultValue.sourceDataIpv6PrefxListId = sourceDataIpv6PrefxListId;
            _resultValue.sourceIpv4Prefix = sourceIpv4Prefix;
            _resultValue.sourceIpv6Prefix = sourceIpv6Prefix;
            _resultValue.sourcePorts = sourcePorts;
            _resultValue.tcp = tcp;
            _resultValue.trafficCategory = trafficCategory;
            _resultValue.trafficClass = trafficClass;
            _resultValue.trafficTo = trafficTo;
            return _resultValue;
        }
    }
}
