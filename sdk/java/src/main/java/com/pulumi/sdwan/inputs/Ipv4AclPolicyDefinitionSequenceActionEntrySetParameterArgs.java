// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs extends com.pulumi.resources.ResourceArgs {

    public static final Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs Empty = new Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs();

    /**
     * DSCP value, Attribute conditional on `type` being equal to `dscp`
     *   - Range: `0`-`63`
     * 
     */
    @Import(name="dscp")
    private @Nullable Output<Integer> dscp;

    /**
     * @return DSCP value, Attribute conditional on `type` being equal to `dscp`
     *   - Range: `0`-`63`
     * 
     */
    public Optional<Output<Integer>> dscp() {
        return Optional.ofNullable(this.dscp);
    }

    /**
     * Next hop IP, Attribute conditional on `type` being equal to `nextHop`
     * 
     */
    @Import(name="nextHop")
    private @Nullable Output<String> nextHop;

    /**
     * @return Next hop IP, Attribute conditional on `type` being equal to `nextHop`
     * 
     */
    public Optional<Output<String>> nextHop() {
        return Optional.ofNullable(this.nextHop);
    }

    /**
     * Type of set parameter
     *   - Choices: `dscp`, `nextHop`
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of set parameter
     *   - Choices: `dscp`, `nextHop`
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs() {}

    private Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs(Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs $) {
        this.dscp = $.dscp;
        this.nextHop = $.nextHop;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs $;

        public Builder() {
            $ = new Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs();
        }

        public Builder(Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs defaults) {
            $ = new Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dscp DSCP value, Attribute conditional on `type` being equal to `dscp`
         *   - Range: `0`-`63`
         * 
         * @return builder
         * 
         */
        public Builder dscp(@Nullable Output<Integer> dscp) {
            $.dscp = dscp;
            return this;
        }

        /**
         * @param dscp DSCP value, Attribute conditional on `type` being equal to `dscp`
         *   - Range: `0`-`63`
         * 
         * @return builder
         * 
         */
        public Builder dscp(Integer dscp) {
            return dscp(Output.of(dscp));
        }

        /**
         * @param nextHop Next hop IP, Attribute conditional on `type` being equal to `nextHop`
         * 
         * @return builder
         * 
         */
        public Builder nextHop(@Nullable Output<String> nextHop) {
            $.nextHop = nextHop;
            return this;
        }

        /**
         * @param nextHop Next hop IP, Attribute conditional on `type` being equal to `nextHop`
         * 
         * @return builder
         * 
         */
        public Builder nextHop(String nextHop) {
            return nextHop(Output.of(nextHop));
        }

        /**
         * @param type Type of set parameter
         *   - Choices: `dscp`, `nextHop`
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of set parameter
         *   - Choices: `dscp`, `nextHop`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs", "type");
            }
            return $;
        }
    }

}
