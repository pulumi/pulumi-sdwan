// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceMulticastFeatureAutoRpAnnounceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceMulticastFeatureAutoRpAnnounceArgs Empty = new ServiceMulticastFeatureAutoRpAnnounceArgs();

    /**
     * Set RP Announce Interface Name
     * 
     */
    @Import(name="interfaceName")
    private @Nullable Output<String> interfaceName;

    /**
     * @return Set RP Announce Interface Name
     * 
     */
    public Optional<Output<String>> interfaceName() {
        return Optional.ofNullable(this.interfaceName);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceNameVariable")
    private @Nullable Output<String> interfaceNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceNameVariable() {
        return Optional.ofNullable(this.interfaceNameVariable);
    }

    /**
     * Set RP Announce Scope
     *   - Range: `1`-`255`
     * 
     */
    @Import(name="scope")
    private @Nullable Output<Integer> scope;

    /**
     * @return Set RP Announce Scope
     *   - Range: `1`-`255`
     * 
     */
    public Optional<Output<Integer>> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="scopeVariable")
    private @Nullable Output<String> scopeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> scopeVariable() {
        return Optional.ofNullable(this.scopeVariable);
    }

    private ServiceMulticastFeatureAutoRpAnnounceArgs() {}

    private ServiceMulticastFeatureAutoRpAnnounceArgs(ServiceMulticastFeatureAutoRpAnnounceArgs $) {
        this.interfaceName = $.interfaceName;
        this.interfaceNameVariable = $.interfaceNameVariable;
        this.scope = $.scope;
        this.scopeVariable = $.scopeVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceMulticastFeatureAutoRpAnnounceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceMulticastFeatureAutoRpAnnounceArgs $;

        public Builder() {
            $ = new ServiceMulticastFeatureAutoRpAnnounceArgs();
        }

        public Builder(ServiceMulticastFeatureAutoRpAnnounceArgs defaults) {
            $ = new ServiceMulticastFeatureAutoRpAnnounceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param interfaceName Set RP Announce Interface Name
         * 
         * @return builder
         * 
         */
        public Builder interfaceName(@Nullable Output<String> interfaceName) {
            $.interfaceName = interfaceName;
            return this;
        }

        /**
         * @param interfaceName Set RP Announce Interface Name
         * 
         * @return builder
         * 
         */
        public Builder interfaceName(String interfaceName) {
            return interfaceName(Output.of(interfaceName));
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(@Nullable Output<String> interfaceNameVariable) {
            $.interfaceNameVariable = interfaceNameVariable;
            return this;
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(String interfaceNameVariable) {
            return interfaceNameVariable(Output.of(interfaceNameVariable));
        }

        /**
         * @param scope Set RP Announce Scope
         *   - Range: `1`-`255`
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<Integer> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope Set RP Announce Scope
         *   - Range: `1`-`255`
         * 
         * @return builder
         * 
         */
        public Builder scope(Integer scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param scopeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder scopeVariable(@Nullable Output<String> scopeVariable) {
            $.scopeVariable = scopeVariable;
            return this;
        }

        /**
         * @param scopeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder scopeVariable(String scopeVariable) {
            return scopeVariable(Output.of(scopeVariable));
        }

        public ServiceMulticastFeatureAutoRpAnnounceArgs build() {
            return $;
        }
    }

}
