// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CiscoVpnFeatureTemplatePortForwardRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final CiscoVpnFeatureTemplatePortForwardRuleArgs Empty = new CiscoVpnFeatureTemplatePortForwardRuleArgs();

    /**
     * Indicates if list item is considered optional.
     * 
     */
    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    /**
     * NAT Pool Name, natpool1..31
     * 
     */
    @Import(name="poolName")
    private @Nullable Output<Integer> poolName;

    /**
     * @return NAT Pool Name, natpool1..31
     * 
     */
    public Optional<Output<Integer>> poolName() {
        return Optional.ofNullable(this.poolName);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="poolNameVariable")
    private @Nullable Output<String> poolNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> poolNameVariable() {
        return Optional.ofNullable(this.poolNameVariable);
    }

    /**
     * Protocol
     *   - Choices: `tcp`, `udp`
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return Protocol
     *   - Choices: `tcp`, `udp`
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="protocolVariable")
    private @Nullable Output<String> protocolVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> protocolVariable() {
        return Optional.ofNullable(this.protocolVariable);
    }

    /**
     * Source IP address to be translated
     * 
     */
    @Import(name="sourceIp")
    private @Nullable Output<String> sourceIp;

    /**
     * @return Source IP address to be translated
     * 
     */
    public Optional<Output<String>> sourceIp() {
        return Optional.ofNullable(this.sourceIp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sourceIpVariable")
    private @Nullable Output<String> sourceIpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sourceIpVariable() {
        return Optional.ofNullable(this.sourceIpVariable);
    }

    /**
     * Source Port
     *   - Default value: `0`
     * 
     */
    @Import(name="sourcePort")
    private @Nullable Output<Integer> sourcePort;

    /**
     * @return Source Port
     *   - Default value: `0`
     * 
     */
    public Optional<Output<Integer>> sourcePort() {
        return Optional.ofNullable(this.sourcePort);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sourcePortVariable")
    private @Nullable Output<String> sourcePortVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sourcePortVariable() {
        return Optional.ofNullable(this.sourcePortVariable);
    }

    /**
     * Statically translated source IP address
     * 
     */
    @Import(name="translateIp")
    private @Nullable Output<String> translateIp;

    /**
     * @return Statically translated source IP address
     * 
     */
    public Optional<Output<String>> translateIp() {
        return Optional.ofNullable(this.translateIp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="translateIpVariable")
    private @Nullable Output<String> translateIpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> translateIpVariable() {
        return Optional.ofNullable(this.translateIpVariable);
    }

    /**
     * Translate Port
     *   - Default value: `0`
     * 
     */
    @Import(name="translatePort")
    private @Nullable Output<Integer> translatePort;

    /**
     * @return Translate Port
     *   - Default value: `0`
     * 
     */
    public Optional<Output<Integer>> translatePort() {
        return Optional.ofNullable(this.translatePort);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="translatePortVariable")
    private @Nullable Output<String> translatePortVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> translatePortVariable() {
        return Optional.ofNullable(this.translatePortVariable);
    }

    private CiscoVpnFeatureTemplatePortForwardRuleArgs() {}

    private CiscoVpnFeatureTemplatePortForwardRuleArgs(CiscoVpnFeatureTemplatePortForwardRuleArgs $) {
        this.optional = $.optional;
        this.poolName = $.poolName;
        this.poolNameVariable = $.poolNameVariable;
        this.protocol = $.protocol;
        this.protocolVariable = $.protocolVariable;
        this.sourceIp = $.sourceIp;
        this.sourceIpVariable = $.sourceIpVariable;
        this.sourcePort = $.sourcePort;
        this.sourcePortVariable = $.sourcePortVariable;
        this.translateIp = $.translateIp;
        this.translateIpVariable = $.translateIpVariable;
        this.translatePort = $.translatePort;
        this.translatePortVariable = $.translatePortVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CiscoVpnFeatureTemplatePortForwardRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CiscoVpnFeatureTemplatePortForwardRuleArgs $;

        public Builder() {
            $ = new CiscoVpnFeatureTemplatePortForwardRuleArgs();
        }

        public Builder(CiscoVpnFeatureTemplatePortForwardRuleArgs defaults) {
            $ = new CiscoVpnFeatureTemplatePortForwardRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        /**
         * @param poolName NAT Pool Name, natpool1..31
         * 
         * @return builder
         * 
         */
        public Builder poolName(@Nullable Output<Integer> poolName) {
            $.poolName = poolName;
            return this;
        }

        /**
         * @param poolName NAT Pool Name, natpool1..31
         * 
         * @return builder
         * 
         */
        public Builder poolName(Integer poolName) {
            return poolName(Output.of(poolName));
        }

        /**
         * @param poolNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder poolNameVariable(@Nullable Output<String> poolNameVariable) {
            $.poolNameVariable = poolNameVariable;
            return this;
        }

        /**
         * @param poolNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder poolNameVariable(String poolNameVariable) {
            return poolNameVariable(Output.of(poolNameVariable));
        }

        /**
         * @param protocol Protocol
         *   - Choices: `tcp`, `udp`
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol Protocol
         *   - Choices: `tcp`, `udp`
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param protocolVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder protocolVariable(@Nullable Output<String> protocolVariable) {
            $.protocolVariable = protocolVariable;
            return this;
        }

        /**
         * @param protocolVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder protocolVariable(String protocolVariable) {
            return protocolVariable(Output.of(protocolVariable));
        }

        /**
         * @param sourceIp Source IP address to be translated
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(@Nullable Output<String> sourceIp) {
            $.sourceIp = sourceIp;
            return this;
        }

        /**
         * @param sourceIp Source IP address to be translated
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(String sourceIp) {
            return sourceIp(Output.of(sourceIp));
        }

        /**
         * @param sourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceIpVariable(@Nullable Output<String> sourceIpVariable) {
            $.sourceIpVariable = sourceIpVariable;
            return this;
        }

        /**
         * @param sourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceIpVariable(String sourceIpVariable) {
            return sourceIpVariable(Output.of(sourceIpVariable));
        }

        /**
         * @param sourcePort Source Port
         *   - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder sourcePort(@Nullable Output<Integer> sourcePort) {
            $.sourcePort = sourcePort;
            return this;
        }

        /**
         * @param sourcePort Source Port
         *   - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder sourcePort(Integer sourcePort) {
            return sourcePort(Output.of(sourcePort));
        }

        /**
         * @param sourcePortVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourcePortVariable(@Nullable Output<String> sourcePortVariable) {
            $.sourcePortVariable = sourcePortVariable;
            return this;
        }

        /**
         * @param sourcePortVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourcePortVariable(String sourcePortVariable) {
            return sourcePortVariable(Output.of(sourcePortVariable));
        }

        /**
         * @param translateIp Statically translated source IP address
         * 
         * @return builder
         * 
         */
        public Builder translateIp(@Nullable Output<String> translateIp) {
            $.translateIp = translateIp;
            return this;
        }

        /**
         * @param translateIp Statically translated source IP address
         * 
         * @return builder
         * 
         */
        public Builder translateIp(String translateIp) {
            return translateIp(Output.of(translateIp));
        }

        /**
         * @param translateIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder translateIpVariable(@Nullable Output<String> translateIpVariable) {
            $.translateIpVariable = translateIpVariable;
            return this;
        }

        /**
         * @param translateIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder translateIpVariable(String translateIpVariable) {
            return translateIpVariable(Output.of(translateIpVariable));
        }

        /**
         * @param translatePort Translate Port
         *   - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder translatePort(@Nullable Output<Integer> translatePort) {
            $.translatePort = translatePort;
            return this;
        }

        /**
         * @param translatePort Translate Port
         *   - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder translatePort(Integer translatePort) {
            return translatePort(Output.of(translatePort));
        }

        /**
         * @param translatePortVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder translatePortVariable(@Nullable Output<String> translatePortVariable) {
            $.translatePortVariable = translatePortVariable;
            return this;
        }

        /**
         * @param translatePortVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder translatePortVariable(String translatePortVariable) {
            return translatePortVariable(Output.of(translatePortVariable));
        }

        public CiscoVpnFeatureTemplatePortForwardRuleArgs build() {
            return $;
        }
    }

}
