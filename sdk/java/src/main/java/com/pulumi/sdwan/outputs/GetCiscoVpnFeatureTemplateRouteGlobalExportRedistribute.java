// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCiscoVpnFeatureTemplateRouteGlobalExportRedistribute {
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private Boolean optional;
    /**
     * @return Select a Route Protocol to enable redistribution
     * 
     */
    private String protocol;
    /**
     * @return Variable name
     * 
     */
    private String protocolVariable;
    /**
     * @return Select a Route Policy to enable redistribution
     * 
     */
    private String routePolicy;

    private GetCiscoVpnFeatureTemplateRouteGlobalExportRedistribute() {}
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Boolean optional() {
        return this.optional;
    }
    /**
     * @return Select a Route Protocol to enable redistribution
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return Variable name
     * 
     */
    public String protocolVariable() {
        return this.protocolVariable;
    }
    /**
     * @return Select a Route Policy to enable redistribution
     * 
     */
    public String routePolicy() {
        return this.routePolicy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCiscoVpnFeatureTemplateRouteGlobalExportRedistribute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean optional;
        private String protocol;
        private String protocolVariable;
        private String routePolicy;
        public Builder() {}
        public Builder(GetCiscoVpnFeatureTemplateRouteGlobalExportRedistribute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.optional = defaults.optional;
    	      this.protocol = defaults.protocol;
    	      this.protocolVariable = defaults.protocolVariable;
    	      this.routePolicy = defaults.routePolicy;
        }

        @CustomType.Setter
        public Builder optional(Boolean optional) {
            if (optional == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateRouteGlobalExportRedistribute", "optional");
            }
            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateRouteGlobalExportRedistribute", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder protocolVariable(String protocolVariable) {
            if (protocolVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateRouteGlobalExportRedistribute", "protocolVariable");
            }
            this.protocolVariable = protocolVariable;
            return this;
        }
        @CustomType.Setter
        public Builder routePolicy(String routePolicy) {
            if (routePolicy == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateRouteGlobalExportRedistribute", "routePolicy");
            }
            this.routePolicy = routePolicy;
            return this;
        }
        public GetCiscoVpnFeatureTemplateRouteGlobalExportRedistribute build() {
            final var _resultValue = new GetCiscoVpnFeatureTemplateRouteGlobalExportRedistribute();
            _resultValue.optional = optional;
            _resultValue.protocol = protocol;
            _resultValue.protocolVariable = protocolVariable;
            _resultValue.routePolicy = routePolicy;
            return _resultValue;
        }
    }
}
