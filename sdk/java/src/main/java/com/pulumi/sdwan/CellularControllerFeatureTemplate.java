// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.CellularControllerFeatureTemplateArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.CellularControllerFeatureTemplateState;
import com.pulumi.sdwan.outputs.CellularControllerFeatureTemplateDataProfile;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Cellular Controller feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sdwan.CellularControllerFeatureTemplate;
 * import com.pulumi.sdwan.CellularControllerFeatureTemplateArgs;
 * import com.pulumi.sdwan.inputs.CellularControllerFeatureTemplateDataProfileArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new CellularControllerFeatureTemplate("example", CellularControllerFeatureTemplateArgs.builder()        
 *             .name("Example")
 *             .description("My Example")
 *             .deviceTypes("vedge-C8000V")
 *             .cellularInterfaceId("1")
 *             .dataProfiles(CellularControllerFeatureTemplateDataProfileArgs.builder()
 *                 .slot_number(1)
 *                 .data_profile(8)
 *                 .attach_profile(8)
 *                 .build())
 *             .primarySimSlot(100)
 *             .simFailoverRetries(160)
 *             .simFailoverTimeout(3)
 *             .firmwareAutoSim(false)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import sdwan:index/cellularControllerFeatureTemplate:CellularControllerFeatureTemplate example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/cellularControllerFeatureTemplate:CellularControllerFeatureTemplate")
public class CellularControllerFeatureTemplate extends com.pulumi.resources.CustomResource {
    /**
     * Cellular interface name
     * 
     */
    @Export(name="cellularInterfaceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cellularInterfaceId;

    /**
     * @return Cellular interface name
     * 
     */
    public Output<Optional<String>> cellularInterfaceId() {
        return Codegen.optional(this.cellularInterfaceId);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="cellularInterfaceIdVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cellularInterfaceIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> cellularInterfaceIdVariable() {
        return Codegen.optional(this.cellularInterfaceIdVariable);
    }
    /**
     * Data Profile List
     * 
     */
    @Export(name="dataProfiles", refs={List.class,CellularControllerFeatureTemplateDataProfile.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CellularControllerFeatureTemplateDataProfile>> dataProfiles;

    /**
     * @return Data Profile List
     * 
     */
    public Output<Optional<List<CellularControllerFeatureTemplateDataProfile>>> dataProfiles() {
        return Codegen.optional(this.dataProfiles);
    }
    /**
     * The description of the feature template
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return The description of the feature template
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    @Export(name="deviceTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> deviceTypes;

    /**
     * @return List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    public Output<List<String>> deviceTypes() {
        return this.deviceTypes;
    }
    /**
     * Enable/Disable Firmware Auto Sim - Default value: `true`
     * 
     */
    @Export(name="firmwareAutoSim", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> firmwareAutoSim;

    /**
     * @return Enable/Disable Firmware Auto Sim - Default value: `true`
     * 
     */
    public Output<Optional<Boolean>> firmwareAutoSim() {
        return Codegen.optional(this.firmwareAutoSim);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="firmwareAutoSimVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> firmwareAutoSimVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> firmwareAutoSimVariable() {
        return Codegen.optional(this.firmwareAutoSimVariable);
    }
    /**
     * The name of the feature template
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the feature template
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Set primary SIM slot - Range: `0`-`255`
     * 
     */
    @Export(name="primarySimSlot", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> primarySimSlot;

    /**
     * @return Set primary SIM slot - Range: `0`-`255`
     * 
     */
    public Output<Optional<Integer>> primarySimSlot() {
        return Codegen.optional(this.primarySimSlot);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="primarySimSlotVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primarySimSlotVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> primarySimSlotVariable() {
        return Codegen.optional(this.primarySimSlotVariable);
    }
    /**
     * Set SIM failover retries - Range: `0`-`65535`
     * 
     */
    @Export(name="simFailoverRetries", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> simFailoverRetries;

    /**
     * @return Set SIM failover retries - Range: `0`-`65535`
     * 
     */
    public Output<Optional<Integer>> simFailoverRetries() {
        return Codegen.optional(this.simFailoverRetries);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="simFailoverRetriesVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> simFailoverRetriesVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> simFailoverRetriesVariable() {
        return Codegen.optional(this.simFailoverRetriesVariable);
    }
    /**
     * Set SIM failover timeout in minutes - Range: `3`-`7`
     * 
     */
    @Export(name="simFailoverTimeout", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> simFailoverTimeout;

    /**
     * @return Set SIM failover timeout in minutes - Range: `3`-`7`
     * 
     */
    public Output<Optional<Integer>> simFailoverTimeout() {
        return Codegen.optional(this.simFailoverTimeout);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="simFailoverTimeoutVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> simFailoverTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> simFailoverTimeoutVariable() {
        return Codegen.optional(this.simFailoverTimeoutVariable);
    }
    /**
     * The template type
     * 
     */
    @Export(name="templateType", refs={String.class}, tree="[0]")
    private Output<String> templateType;

    /**
     * @return The template type
     * 
     */
    public Output<String> templateType() {
        return this.templateType;
    }
    /**
     * The version of the feature template
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the feature template
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CellularControllerFeatureTemplate(String name) {
        this(name, CellularControllerFeatureTemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CellularControllerFeatureTemplate(String name, CellularControllerFeatureTemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CellularControllerFeatureTemplate(String name, CellularControllerFeatureTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/cellularControllerFeatureTemplate:CellularControllerFeatureTemplate", name, args == null ? CellularControllerFeatureTemplateArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CellularControllerFeatureTemplate(String name, Output<String> id, @Nullable CellularControllerFeatureTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/cellularControllerFeatureTemplate:CellularControllerFeatureTemplate", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CellularControllerFeatureTemplate get(String name, Output<String> id, @Nullable CellularControllerFeatureTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CellularControllerFeatureTemplate(name, id, state, options);
    }
}
