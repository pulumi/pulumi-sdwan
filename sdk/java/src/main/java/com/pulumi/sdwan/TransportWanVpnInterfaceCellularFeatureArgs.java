// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.TransportWanVpnInterfaceCellularFeatureArpArgs;
import com.pulumi.sdwan.inputs.TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransportWanVpnInterfaceCellularFeatureArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransportWanVpnInterfaceCellularFeatureArgs Empty = new TransportWanVpnInterfaceCellularFeatureArgs();

    @Import(name="aclIpv4EgressFeatureId")
    private @Nullable Output<String> aclIpv4EgressFeatureId;

    public Optional<Output<String>> aclIpv4EgressFeatureId() {
        return Optional.ofNullable(this.aclIpv4EgressFeatureId);
    }

    @Import(name="aclIpv4IngressFeatureId")
    private @Nullable Output<String> aclIpv4IngressFeatureId;

    public Optional<Output<String>> aclIpv4IngressFeatureId() {
        return Optional.ofNullable(this.aclIpv4IngressFeatureId);
    }

    @Import(name="aclIpv6EgressFeatureId")
    private @Nullable Output<String> aclIpv6EgressFeatureId;

    public Optional<Output<String>> aclIpv6EgressFeatureId() {
        return Optional.ofNullable(this.aclIpv6EgressFeatureId);
    }

    @Import(name="aclIpv6IngressFeatureId")
    private @Nullable Output<String> aclIpv6IngressFeatureId;

    public Optional<Output<String>> aclIpv6IngressFeatureId() {
        return Optional.ofNullable(this.aclIpv6IngressFeatureId);
    }

    /**
     * Configure ARP entries
     * 
     */
    @Import(name="arps")
    private @Nullable Output<List<TransportWanVpnInterfaceCellularFeatureArpArgs>> arps;

    /**
     * @return Configure ARP entries
     * 
     */
    public Optional<Output<List<TransportWanVpnInterfaceCellularFeatureArpArgs>>> arps() {
        return Optional.ofNullable(this.arps);
    }

    /**
     * Interface downstream bandwidth capacity, in kbps
     *   - Range: `1`-`2147483647`
     * 
     */
    @Import(name="bandwidthDownstream")
    private @Nullable Output<Integer> bandwidthDownstream;

    /**
     * @return Interface downstream bandwidth capacity, in kbps
     *   - Range: `1`-`2147483647`
     * 
     */
    public Optional<Output<Integer>> bandwidthDownstream() {
        return Optional.ofNullable(this.bandwidthDownstream);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="bandwidthDownstreamVariable")
    private @Nullable Output<String> bandwidthDownstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> bandwidthDownstreamVariable() {
        return Optional.ofNullable(this.bandwidthDownstreamVariable);
    }

    /**
     * Interface upstream bandwidth capacity, in kbps
     *   - Range: `1`-`2147483647`
     * 
     */
    @Import(name="bandwidthUpstream")
    private @Nullable Output<Integer> bandwidthUpstream;

    /**
     * @return Interface upstream bandwidth capacity, in kbps
     *   - Range: `1`-`2147483647`
     * 
     */
    public Optional<Output<Integer>> bandwidthUpstream() {
        return Optional.ofNullable(this.bandwidthUpstream);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="bandwidthUpstreamVariable")
    private @Nullable Output<String> bandwidthUpstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> bandwidthUpstreamVariable() {
        return Optional.ofNullable(this.bandwidthUpstreamVariable);
    }

    /**
     * The description of the Feature
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId", required=true)
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }

    @Import(name="interfaceDescription")
    private @Nullable Output<String> interfaceDescription;

    public Optional<Output<String>> interfaceDescription() {
        return Optional.ofNullable(this.interfaceDescription);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceDescriptionVariable")
    private @Nullable Output<String> interfaceDescriptionVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceDescriptionVariable() {
        return Optional.ofNullable(this.interfaceDescriptionVariable);
    }

    /**
     * Interface MTU GigabitEthernet0 &lt;1500..1518&gt;, Other GigabitEthernet &lt;1500..9216&gt; in bytes
     *   - Range: `1500`-`9216`
     *   - Default value: `1500`
     * 
     */
    @Import(name="interfaceMtu")
    private @Nullable Output<Integer> interfaceMtu;

    /**
     * @return Interface MTU GigabitEthernet0 &lt;1500..1518&gt;, Other GigabitEthernet &lt;1500..9216&gt; in bytes
     *   - Range: `1500`-`9216`
     *   - Default value: `1500`
     * 
     */
    public Optional<Output<Integer>> interfaceMtu() {
        return Optional.ofNullable(this.interfaceMtu);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceMtuVariable")
    private @Nullable Output<String> interfaceMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceMtuVariable() {
        return Optional.ofNullable(this.interfaceMtuVariable);
    }

    @Import(name="interfaceName")
    private @Nullable Output<String> interfaceName;

    public Optional<Output<String>> interfaceName() {
        return Optional.ofNullable(this.interfaceName);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceNameVariable")
    private @Nullable Output<String> interfaceNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceNameVariable() {
        return Optional.ofNullable(this.interfaceNameVariable);
    }

    /**
     * IP Directed-Broadcast
     *   - Default value: `false`
     * 
     */
    @Import(name="ipDirectedBroadcast")
    private @Nullable Output<Boolean> ipDirectedBroadcast;

    /**
     * @return IP Directed-Broadcast
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> ipDirectedBroadcast() {
        return Optional.ofNullable(this.ipDirectedBroadcast);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipDirectedBroadcastVariable")
    private @Nullable Output<String> ipDirectedBroadcastVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipDirectedBroadcastVariable() {
        return Optional.ofNullable(this.ipDirectedBroadcastVariable);
    }

    /**
     * IP MTU for GigabitEthernet main &lt;576..Interface MTU&gt;, GigabitEthernet subinterface &lt;576..9216&gt;, Other Interfaces &lt;576..2000&gt; in bytes
     *   - Range: `576`-`9216`
     *   - Default value: `1500`
     * 
     */
    @Import(name="ipMtu")
    private @Nullable Output<Integer> ipMtu;

    /**
     * @return IP MTU for GigabitEthernet main &lt;576..Interface MTU&gt;, GigabitEthernet subinterface &lt;576..9216&gt;, Other Interfaces &lt;576..2000&gt; in bytes
     *   - Range: `576`-`9216`
     *   - Default value: `1500`
     * 
     */
    public Optional<Output<Integer>> ipMtu() {
        return Optional.ofNullable(this.ipMtu);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipMtuVariable")
    private @Nullable Output<String> ipMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipMtuVariable() {
        return Optional.ofNullable(this.ipMtuVariable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4DhcpHelperVariable")
    private @Nullable Output<String> ipv4DhcpHelperVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4DhcpHelperVariable() {
        return Optional.ofNullable(this.ipv4DhcpHelperVariable);
    }

    /**
     * List of DHCP IPv4 helper addresses (min 1, max 8)
     * 
     */
    @Import(name="ipv4DhcpHelpers")
    private @Nullable Output<List<String>> ipv4DhcpHelpers;

    /**
     * @return List of DHCP IPv4 helper addresses (min 1, max 8)
     * 
     */
    public Optional<Output<List<String>>> ipv4DhcpHelpers() {
        return Optional.ofNullable(this.ipv4DhcpHelpers);
    }

    /**
     * The name of the Feature
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Network Address Translation on this interface
     *   - Default value: `false`
     * 
     */
    @Import(name="natIpv4")
    private @Nullable Output<Boolean> natIpv4;

    /**
     * @return Network Address Translation on this interface
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> natIpv4() {
        return Optional.ofNullable(this.natIpv4);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="natIpv4Variable")
    private @Nullable Output<String> natIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> natIpv4Variable() {
        return Optional.ofNullable(this.natIpv4Variable);
    }

    /**
     * Set NAT TCP session timeout, in minutes
     *   - Range: `1`-`8947`
     *   - Default value: `60`
     * 
     */
    @Import(name="natTcpTimeout")
    private @Nullable Output<Integer> natTcpTimeout;

    /**
     * @return Set NAT TCP session timeout, in minutes
     *   - Range: `1`-`8947`
     *   - Default value: `60`
     * 
     */
    public Optional<Output<Integer>> natTcpTimeout() {
        return Optional.ofNullable(this.natTcpTimeout);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="natTcpTimeoutVariable")
    private @Nullable Output<String> natTcpTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> natTcpTimeoutVariable() {
        return Optional.ofNullable(this.natTcpTimeoutVariable);
    }

    /**
     * Set NAT UDP session timeout, in minutes
     *   - Range: `1`-`8947`
     *   - Default value: `1`
     * 
     */
    @Import(name="natUdpTimeout")
    private @Nullable Output<Integer> natUdpTimeout;

    /**
     * @return Set NAT UDP session timeout, in minutes
     *   - Range: `1`-`8947`
     *   - Default value: `1`
     * 
     */
    public Optional<Output<Integer>> natUdpTimeout() {
        return Optional.ofNullable(this.natUdpTimeout);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="natUdpTimeoutVariable")
    private @Nullable Output<String> natUdpTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> natUdpTimeoutVariable() {
        return Optional.ofNullable(this.natUdpTimeoutVariable);
    }

    /**
     * Per-tunnel Qos
     *   - Default value: `false`
     * 
     */
    @Import(name="perTunnelQos")
    private @Nullable Output<Boolean> perTunnelQos;

    /**
     * @return Per-tunnel Qos
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> perTunnelQos() {
        return Optional.ofNullable(this.perTunnelQos);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="perTunnelQosVariable")
    private @Nullable Output<String> perTunnelQosVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> perTunnelQosVariable() {
        return Optional.ofNullable(this.perTunnelQosVariable);
    }

    /**
     * Adaptive QoS
     *   - Default value: `false`
     * 
     */
    @Import(name="qosAdaptive")
    private @Nullable Output<Boolean> qosAdaptive;

    /**
     * @return Adaptive QoS
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> qosAdaptive() {
        return Optional.ofNullable(this.qosAdaptive);
    }

    /**
     * Shaping Rate Downstream
     *   - Default value: `false`
     * 
     */
    @Import(name="qosAdaptiveBandwidthDownstream")
    private @Nullable Output<Boolean> qosAdaptiveBandwidthDownstream;

    /**
     * @return Shaping Rate Downstream
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> qosAdaptiveBandwidthDownstream() {
        return Optional.ofNullable(this.qosAdaptiveBandwidthDownstream);
    }

    /**
     * Shaping Rate Upstream
     *   - Default value: `false`
     * 
     */
    @Import(name="qosAdaptiveBandwidthUpstream")
    private @Nullable Output<Boolean> qosAdaptiveBandwidthUpstream;

    /**
     * @return Shaping Rate Upstream
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> qosAdaptiveBandwidthUpstream() {
        return Optional.ofNullable(this.qosAdaptiveBandwidthUpstream);
    }

    /**
     * Adaptive QoS default downstream bandwidth (kbps)
     *   - Range: `8`-`100000000`
     * 
     */
    @Import(name="qosAdaptiveDefaultDownstream")
    private @Nullable Output<Integer> qosAdaptiveDefaultDownstream;

    /**
     * @return Adaptive QoS default downstream bandwidth (kbps)
     *   - Range: `8`-`100000000`
     * 
     */
    public Optional<Output<Integer>> qosAdaptiveDefaultDownstream() {
        return Optional.ofNullable(this.qosAdaptiveDefaultDownstream);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="qosAdaptiveDefaultDownstreamVariable")
    private @Nullable Output<String> qosAdaptiveDefaultDownstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> qosAdaptiveDefaultDownstreamVariable() {
        return Optional.ofNullable(this.qosAdaptiveDefaultDownstreamVariable);
    }

    /**
     * Adaptive QoS default upstream bandwidth (kbps)
     *   - Range: `8`-`100000000`
     * 
     */
    @Import(name="qosAdaptiveDefaultUpstream")
    private @Nullable Output<Integer> qosAdaptiveDefaultUpstream;

    /**
     * @return Adaptive QoS default upstream bandwidth (kbps)
     *   - Range: `8`-`100000000`
     * 
     */
    public Optional<Output<Integer>> qosAdaptiveDefaultUpstream() {
        return Optional.ofNullable(this.qosAdaptiveDefaultUpstream);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="qosAdaptiveDefaultUpstreamVariable")
    private @Nullable Output<String> qosAdaptiveDefaultUpstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> qosAdaptiveDefaultUpstreamVariable() {
        return Optional.ofNullable(this.qosAdaptiveDefaultUpstreamVariable);
    }

    /**
     * Downstream max bandwidth limit (kbps)
     *   - Range: `8`-`100000000`
     * 
     */
    @Import(name="qosAdaptiveMaxDownstream")
    private @Nullable Output<Integer> qosAdaptiveMaxDownstream;

    /**
     * @return Downstream max bandwidth limit (kbps)
     *   - Range: `8`-`100000000`
     * 
     */
    public Optional<Output<Integer>> qosAdaptiveMaxDownstream() {
        return Optional.ofNullable(this.qosAdaptiveMaxDownstream);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="qosAdaptiveMaxDownstreamVariable")
    private @Nullable Output<String> qosAdaptiveMaxDownstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> qosAdaptiveMaxDownstreamVariable() {
        return Optional.ofNullable(this.qosAdaptiveMaxDownstreamVariable);
    }

    /**
     * Upstream max bandwidth limit (kbps)
     *   - Range: `8`-`100000000`
     * 
     */
    @Import(name="qosAdaptiveMaxUpstream")
    private @Nullable Output<Integer> qosAdaptiveMaxUpstream;

    /**
     * @return Upstream max bandwidth limit (kbps)
     *   - Range: `8`-`100000000`
     * 
     */
    public Optional<Output<Integer>> qosAdaptiveMaxUpstream() {
        return Optional.ofNullable(this.qosAdaptiveMaxUpstream);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="qosAdaptiveMaxUpstreamVariable")
    private @Nullable Output<String> qosAdaptiveMaxUpstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> qosAdaptiveMaxUpstreamVariable() {
        return Optional.ofNullable(this.qosAdaptiveMaxUpstreamVariable);
    }

    /**
     * Downstream min bandwidth limit (kbps)
     *   - Range: `8`-`100000000`
     * 
     */
    @Import(name="qosAdaptiveMinDownstream")
    private @Nullable Output<Integer> qosAdaptiveMinDownstream;

    /**
     * @return Downstream min bandwidth limit (kbps)
     *   - Range: `8`-`100000000`
     * 
     */
    public Optional<Output<Integer>> qosAdaptiveMinDownstream() {
        return Optional.ofNullable(this.qosAdaptiveMinDownstream);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="qosAdaptiveMinDownstreamVariable")
    private @Nullable Output<String> qosAdaptiveMinDownstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> qosAdaptiveMinDownstreamVariable() {
        return Optional.ofNullable(this.qosAdaptiveMinDownstreamVariable);
    }

    /**
     * Upstream min bandwidth limit (kbps)
     *   - Range: `8`-`100000000`
     * 
     */
    @Import(name="qosAdaptiveMinUpstream")
    private @Nullable Output<Integer> qosAdaptiveMinUpstream;

    /**
     * @return Upstream min bandwidth limit (kbps)
     *   - Range: `8`-`100000000`
     * 
     */
    public Optional<Output<Integer>> qosAdaptiveMinUpstream() {
        return Optional.ofNullable(this.qosAdaptiveMinUpstream);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="qosAdaptiveMinUpstreamVariable")
    private @Nullable Output<String> qosAdaptiveMinUpstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> qosAdaptiveMinUpstreamVariable() {
        return Optional.ofNullable(this.qosAdaptiveMinUpstreamVariable);
    }

    /**
     * Adapt Period(Minutes)
     *   - Range: `1`-`720`
     *   - Default value: `15`
     * 
     */
    @Import(name="qosAdaptivePeriod")
    private @Nullable Output<Integer> qosAdaptivePeriod;

    /**
     * @return Adapt Period(Minutes)
     *   - Range: `1`-`720`
     *   - Default value: `15`
     * 
     */
    public Optional<Output<Integer>> qosAdaptivePeriod() {
        return Optional.ofNullable(this.qosAdaptivePeriod);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="qosAdaptivePeriodVariable")
    private @Nullable Output<String> qosAdaptivePeriodVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> qosAdaptivePeriodVariable() {
        return Optional.ofNullable(this.qosAdaptivePeriodVariable);
    }

    /**
     * Shaping Rate (Kbps)
     *   - Range: `8`-`100000000`
     * 
     */
    @Import(name="qosShapingRate")
    private @Nullable Output<Integer> qosShapingRate;

    /**
     * @return Shaping Rate (Kbps)
     *   - Range: `8`-`100000000`
     * 
     */
    public Optional<Output<Integer>> qosShapingRate() {
        return Optional.ofNullable(this.qosShapingRate);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="qosShapingRateVariable")
    private @Nullable Output<String> qosShapingRateVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> qosShapingRateVariable() {
        return Optional.ofNullable(this.qosShapingRateVariable);
    }

    /**
     * Service Provider Name
     * 
     */
    @Import(name="serviceProvider")
    private @Nullable Output<String> serviceProvider;

    /**
     * @return Service Provider Name
     * 
     */
    public Optional<Output<String>> serviceProvider() {
        return Optional.ofNullable(this.serviceProvider);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="serviceProviderVariable")
    private @Nullable Output<String> serviceProviderVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> serviceProviderVariable() {
        return Optional.ofNullable(this.serviceProviderVariable);
    }

    /**
     * - Default value: `true`
     * 
     */
    @Import(name="shutdown")
    private @Nullable Output<Boolean> shutdown;

    /**
     * @return - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> shutdown() {
        return Optional.ofNullable(this.shutdown);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="shutdownVariable")
    private @Nullable Output<String> shutdownVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> shutdownVariable() {
        return Optional.ofNullable(this.shutdownVariable);
    }

    /**
     * TCP MSS on SYN packets, in bytes
     *   - Range: `500`-`1460`
     * 
     */
    @Import(name="tcpMss")
    private @Nullable Output<Integer> tcpMss;

    /**
     * @return TCP MSS on SYN packets, in bytes
     *   - Range: `500`-`1460`
     * 
     */
    public Optional<Output<Integer>> tcpMss() {
        return Optional.ofNullable(this.tcpMss);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tcpMssVariable")
    private @Nullable Output<String> tcpMssVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tcpMssVariable() {
        return Optional.ofNullable(this.tcpMssVariable);
    }

    /**
     * Extends a local TLOC to a remote node only for vpn 0
     * 
     */
    @Import(name="tlocExtension")
    private @Nullable Output<String> tlocExtension;

    /**
     * @return Extends a local TLOC to a remote node only for vpn 0
     * 
     */
    public Optional<Output<String>> tlocExtension() {
        return Optional.ofNullable(this.tlocExtension);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tlocExtensionVariable")
    private @Nullable Output<String> tlocExtensionVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tlocExtensionVariable() {
        return Optional.ofNullable(this.tlocExtensionVariable);
    }

    /**
     * Enable tracker for this interface
     * 
     */
    @Import(name="tracker")
    private @Nullable Output<String> tracker;

    /**
     * @return Enable tracker for this interface
     * 
     */
    public Optional<Output<String>> tracker() {
        return Optional.ofNullable(this.tracker);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="trackerVariable")
    private @Nullable Output<String> trackerVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> trackerVariable() {
        return Optional.ofNullable(this.trackerVariable);
    }

    /**
     * Transport WAN VPN Feature ID
     * 
     */
    @Import(name="transportWanVpnFeatureId", required=true)
    private Output<String> transportWanVpnFeatureId;

    /**
     * @return Transport WAN VPN Feature ID
     * 
     */
    public Output<String> transportWanVpnFeatureId() {
        return this.transportWanVpnFeatureId;
    }

    /**
     * Tunnels Bandwidth Percent
     *   - Range: `1`-`100`
     *   - Default value: `50`
     * 
     */
    @Import(name="tunnelBandwidthPercent")
    private @Nullable Output<Integer> tunnelBandwidthPercent;

    /**
     * @return Tunnels Bandwidth Percent
     *   - Range: `1`-`100`
     *   - Default value: `50`
     * 
     */
    public Optional<Output<Integer>> tunnelBandwidthPercent() {
        return Optional.ofNullable(this.tunnelBandwidthPercent);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelBandwidthPercentVariable")
    private @Nullable Output<String> tunnelBandwidthPercentVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelBandwidthPercentVariable() {
        return Optional.ofNullable(this.tunnelBandwidthPercentVariable);
    }

    /**
     * Tunnel Interface on/off
     *   - Default value: `false`
     * 
     */
    @Import(name="tunnelInterface")
    private @Nullable Output<Boolean> tunnelInterface;

    /**
     * @return Tunnel Interface on/off
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterface() {
        return Optional.ofNullable(this.tunnelInterface);
    }

    /**
     * Allow all traffic. Overrides all other allow-service options if allow-service all is set
     *   - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceAllowAll")
    private @Nullable Output<Boolean> tunnelInterfaceAllowAll;

    /**
     * @return Allow all traffic. Overrides all other allow-service options if allow-service all is set
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowAll() {
        return Optional.ofNullable(this.tunnelInterfaceAllowAll);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowAllVariable")
    private @Nullable Output<String> tunnelInterfaceAllowAllVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowAllVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowAllVariable);
    }

    /**
     * Allow/Deny BFD
     *   - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceAllowBfd")
    private @Nullable Output<Boolean> tunnelInterfaceAllowBfd;

    /**
     * @return Allow/Deny BFD
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowBfd() {
        return Optional.ofNullable(this.tunnelInterfaceAllowBfd);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowBfdVariable")
    private @Nullable Output<String> tunnelInterfaceAllowBfdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowBfdVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowBfdVariable);
    }

    /**
     * Allow/deny BGP
     *   - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceAllowBgp")
    private @Nullable Output<Boolean> tunnelInterfaceAllowBgp;

    /**
     * @return Allow/deny BGP
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowBgp() {
        return Optional.ofNullable(this.tunnelInterfaceAllowBgp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowBgpVariable")
    private @Nullable Output<String> tunnelInterfaceAllowBgpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowBgpVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowBgpVariable);
    }

    /**
     * Allow/Deny DHCP
     *   - Default value: `true`
     * 
     */
    @Import(name="tunnelInterfaceAllowDhcp")
    private @Nullable Output<Boolean> tunnelInterfaceAllowDhcp;

    /**
     * @return Allow/Deny DHCP
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowDhcp() {
        return Optional.ofNullable(this.tunnelInterfaceAllowDhcp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowDhcpVariable")
    private @Nullable Output<String> tunnelInterfaceAllowDhcpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowDhcpVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowDhcpVariable);
    }

    /**
     * Allow/Deny DNS
     *   - Default value: `true`
     * 
     */
    @Import(name="tunnelInterfaceAllowDns")
    private @Nullable Output<Boolean> tunnelInterfaceAllowDns;

    /**
     * @return Allow/Deny DNS
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowDns() {
        return Optional.ofNullable(this.tunnelInterfaceAllowDns);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowDnsVariable")
    private @Nullable Output<String> tunnelInterfaceAllowDnsVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowDnsVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowDnsVariable);
    }

    /**
     * Allow/Deny HTTPS
     *   - Default value: `true`
     * 
     */
    @Import(name="tunnelInterfaceAllowHttps")
    private @Nullable Output<Boolean> tunnelInterfaceAllowHttps;

    /**
     * @return Allow/Deny HTTPS
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowHttps() {
        return Optional.ofNullable(this.tunnelInterfaceAllowHttps);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowHttpsVariable")
    private @Nullable Output<String> tunnelInterfaceAllowHttpsVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowHttpsVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowHttpsVariable);
    }

    /**
     * Allow/Deny ICMP
     *   - Default value: `true`
     * 
     */
    @Import(name="tunnelInterfaceAllowIcmp")
    private @Nullable Output<Boolean> tunnelInterfaceAllowIcmp;

    /**
     * @return Allow/Deny ICMP
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowIcmp() {
        return Optional.ofNullable(this.tunnelInterfaceAllowIcmp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowIcmpVariable")
    private @Nullable Output<String> tunnelInterfaceAllowIcmpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowIcmpVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowIcmpVariable);
    }

    /**
     * Allow/Deny NETCONF
     *   - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceAllowNetconf")
    private @Nullable Output<Boolean> tunnelInterfaceAllowNetconf;

    /**
     * @return Allow/Deny NETCONF
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowNetconf() {
        return Optional.ofNullable(this.tunnelInterfaceAllowNetconf);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowNetconfVariable")
    private @Nullable Output<String> tunnelInterfaceAllowNetconfVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowNetconfVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowNetconfVariable);
    }

    /**
     * Allow/Deny NTP
     *   - Default value: `true`
     * 
     */
    @Import(name="tunnelInterfaceAllowNtp")
    private @Nullable Output<Boolean> tunnelInterfaceAllowNtp;

    /**
     * @return Allow/Deny NTP
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowNtp() {
        return Optional.ofNullable(this.tunnelInterfaceAllowNtp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowNtpVariable")
    private @Nullable Output<String> tunnelInterfaceAllowNtpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowNtpVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowNtpVariable);
    }

    /**
     * Allow/Deny OSPF
     *   - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceAllowOspf")
    private @Nullable Output<Boolean> tunnelInterfaceAllowOspf;

    /**
     * @return Allow/Deny OSPF
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowOspf() {
        return Optional.ofNullable(this.tunnelInterfaceAllowOspf);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowOspfVariable")
    private @Nullable Output<String> tunnelInterfaceAllowOspfVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowOspfVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowOspfVariable);
    }

    /**
     * Allow/Deny SNMP
     *   - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceAllowSnmp")
    private @Nullable Output<Boolean> tunnelInterfaceAllowSnmp;

    /**
     * @return Allow/Deny SNMP
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowSnmp() {
        return Optional.ofNullable(this.tunnelInterfaceAllowSnmp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowSnmpVariable")
    private @Nullable Output<String> tunnelInterfaceAllowSnmpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowSnmpVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowSnmpVariable);
    }

    /**
     * Allow/Deny SSH
     *   - Default value: `true`
     * 
     */
    @Import(name="tunnelInterfaceAllowSsh")
    private @Nullable Output<Boolean> tunnelInterfaceAllowSsh;

    /**
     * @return Allow/Deny SSH
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowSsh() {
        return Optional.ofNullable(this.tunnelInterfaceAllowSsh);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowSshVariable")
    private @Nullable Output<String> tunnelInterfaceAllowSshVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowSshVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowSshVariable);
    }

    /**
     * Allow/Deny STUN
     *   - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceAllowStun")
    private @Nullable Output<Boolean> tunnelInterfaceAllowStun;

    /**
     * @return Allow/Deny STUN
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowStun() {
        return Optional.ofNullable(this.tunnelInterfaceAllowStun);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowStunVariable")
    private @Nullable Output<String> tunnelInterfaceAllowStunVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowStunVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowStunVariable);
    }

    /**
     * Bind loopback tunnel interface to a physical interface
     * 
     */
    @Import(name="tunnelInterfaceBindLoopbackTunnel")
    private @Nullable Output<String> tunnelInterfaceBindLoopbackTunnel;

    /**
     * @return Bind loopback tunnel interface to a physical interface
     * 
     */
    public Optional<Output<String>> tunnelInterfaceBindLoopbackTunnel() {
        return Optional.ofNullable(this.tunnelInterfaceBindLoopbackTunnel);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceBindLoopbackTunnelVariable")
    private @Nullable Output<String> tunnelInterfaceBindLoopbackTunnelVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceBindLoopbackTunnelVariable() {
        return Optional.ofNullable(this.tunnelInterfaceBindLoopbackTunnelVariable);
    }

    /**
     * Set TLOC as border TLOC
     *   - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceBorder")
    private @Nullable Output<Boolean> tunnelInterfaceBorder;

    /**
     * @return Set TLOC as border TLOC
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceBorder() {
        return Optional.ofNullable(this.tunnelInterfaceBorder);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceBorderVariable")
    private @Nullable Output<String> tunnelInterfaceBorderVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceBorderVariable() {
        return Optional.ofNullable(this.tunnelInterfaceBorderVariable);
    }

    /**
     * Set carrier for TLOC
     *   - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`, `carrier7`, `carrier8`
     *   - Default value: `default`
     * 
     */
    @Import(name="tunnelInterfaceCarrier")
    private @Nullable Output<String> tunnelInterfaceCarrier;

    /**
     * @return Set carrier for TLOC
     *   - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`, `carrier7`, `carrier8`
     *   - Default value: `default`
     * 
     */
    public Optional<Output<String>> tunnelInterfaceCarrier() {
        return Optional.ofNullable(this.tunnelInterfaceCarrier);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceCarrierVariable")
    private @Nullable Output<String> tunnelInterfaceCarrierVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceCarrierVariable() {
        return Optional.ofNullable(this.tunnelInterfaceCarrierVariable);
    }

    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
     *   - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceClearDontFragment")
    private @Nullable Output<Boolean> tunnelInterfaceClearDontFragment;

    /**
     * @return Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceClearDontFragment() {
        return Optional.ofNullable(this.tunnelInterfaceClearDontFragment);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceClearDontFragmentVariable")
    private @Nullable Output<String> tunnelInterfaceClearDontFragmentVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceClearDontFragmentVariable() {
        return Optional.ofNullable(this.tunnelInterfaceClearDontFragmentVariable);
    }

    /**
     * Set color for TLOC
     *   - Choices: `default`, `mpls`, `metro ethernet`, `biz internet`, `public internet`, `lte`, `3g`, `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`, `private4`, `private5`, `private6`
     *   - Default value: `mpls`
     * 
     */
    @Import(name="tunnelInterfaceColor")
    private @Nullable Output<String> tunnelInterfaceColor;

    /**
     * @return Set color for TLOC
     *   - Choices: `default`, `mpls`, `metro ethernet`, `biz internet`, `public internet`, `lte`, `3g`, `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`, `private4`, `private5`, `private6`
     *   - Default value: `mpls`
     * 
     */
    public Optional<Output<String>> tunnelInterfaceColor() {
        return Optional.ofNullable(this.tunnelInterfaceColor);
    }

    /**
     * Restrict this TLOC behavior
     *   - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceColorRestrict")
    private @Nullable Output<Boolean> tunnelInterfaceColorRestrict;

    /**
     * @return Restrict this TLOC behavior
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceColorRestrict() {
        return Optional.ofNullable(this.tunnelInterfaceColorRestrict);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceColorRestrictVariable")
    private @Nullable Output<String> tunnelInterfaceColorRestrictVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceColorRestrictVariable() {
        return Optional.ofNullable(this.tunnelInterfaceColorRestrictVariable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceColorVariable")
    private @Nullable Output<String> tunnelInterfaceColorVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceColorVariable() {
        return Optional.ofNullable(this.tunnelInterfaceColorVariable);
    }

    /**
     * Encapsulation for TLOC
     * 
     */
    @Import(name="tunnelInterfaceEncapsulations")
    private @Nullable Output<List<TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs>> tunnelInterfaceEncapsulations;

    /**
     * @return Encapsulation for TLOC
     * 
     */
    public Optional<Output<List<TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs>>> tunnelInterfaceEncapsulations() {
        return Optional.ofNullable(this.tunnelInterfaceEncapsulations);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceExcludeControllerGroupListVariable")
    private @Nullable Output<String> tunnelInterfaceExcludeControllerGroupListVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceExcludeControllerGroupListVariable() {
        return Optional.ofNullable(this.tunnelInterfaceExcludeControllerGroupListVariable);
    }

    /**
     * Exclude the following controller groups defined in this list.
     * 
     */
    @Import(name="tunnelInterfaceExcludeControllerGroupLists")
    private @Nullable Output<List<Integer>> tunnelInterfaceExcludeControllerGroupLists;

    /**
     * @return Exclude the following controller groups defined in this list.
     * 
     */
    public Optional<Output<List<Integer>>> tunnelInterfaceExcludeControllerGroupLists() {
        return Optional.ofNullable(this.tunnelInterfaceExcludeControllerGroupLists);
    }

    /**
     * List of groups
     *   - Range: `1`-`4294967295`
     * 
     */
    @Import(name="tunnelInterfaceGroups")
    private @Nullable Output<Integer> tunnelInterfaceGroups;

    /**
     * @return List of groups
     *   - Range: `1`-`4294967295`
     * 
     */
    public Optional<Output<Integer>> tunnelInterfaceGroups() {
        return Optional.ofNullable(this.tunnelInterfaceGroups);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceGroupsVariable")
    private @Nullable Output<String> tunnelInterfaceGroupsVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceGroupsVariable() {
        return Optional.ofNullable(this.tunnelInterfaceGroupsVariable);
    }

    /**
     * Set time period of control hello packets &lt;100..600000&gt; milli seconds
     *   - Range: `100`-`600000`
     *   - Default value: `1000`
     * 
     */
    @Import(name="tunnelInterfaceHelloInterval")
    private @Nullable Output<Integer> tunnelInterfaceHelloInterval;

    /**
     * @return Set time period of control hello packets &lt;100..600000&gt; milli seconds
     *   - Range: `100`-`600000`
     *   - Default value: `1000`
     * 
     */
    public Optional<Output<Integer>> tunnelInterfaceHelloInterval() {
        return Optional.ofNullable(this.tunnelInterfaceHelloInterval);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceHelloIntervalVariable")
    private @Nullable Output<String> tunnelInterfaceHelloIntervalVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceHelloIntervalVariable() {
        return Optional.ofNullable(this.tunnelInterfaceHelloIntervalVariable);
    }

    /**
     * Set tolerance of control hello packets &lt;12..6000&gt; seconds
     *   - Range: `12`-`6000`
     *   - Default value: `12`
     * 
     */
    @Import(name="tunnelInterfaceHelloTolerance")
    private @Nullable Output<Integer> tunnelInterfaceHelloTolerance;

    /**
     * @return Set tolerance of control hello packets &lt;12..6000&gt; seconds
     *   - Range: `12`-`6000`
     *   - Default value: `12`
     * 
     */
    public Optional<Output<Integer>> tunnelInterfaceHelloTolerance() {
        return Optional.ofNullable(this.tunnelInterfaceHelloTolerance);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceHelloToleranceVariable")
    private @Nullable Output<String> tunnelInterfaceHelloToleranceVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceHelloToleranceVariable() {
        return Optional.ofNullable(this.tunnelInterfaceHelloToleranceVariable);
    }

    /**
     * Set TLOC as last resort
     *   - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceLastResortCircuit")
    private @Nullable Output<Boolean> tunnelInterfaceLastResortCircuit;

    /**
     * @return Set TLOC as last resort
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceLastResortCircuit() {
        return Optional.ofNullable(this.tunnelInterfaceLastResortCircuit);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceLastResortCircuitVariable")
    private @Nullable Output<String> tunnelInterfaceLastResortCircuitVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceLastResortCircuitVariable() {
        return Optional.ofNullable(this.tunnelInterfaceLastResortCircuitVariable);
    }

    /**
     * Set the interface as a low-bandwidth circuit
     *   - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceLowBandwidthLink")
    private @Nullable Output<Boolean> tunnelInterfaceLowBandwidthLink;

    /**
     * @return Set the interface as a low-bandwidth circuit
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceLowBandwidthLink() {
        return Optional.ofNullable(this.tunnelInterfaceLowBandwidthLink);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceLowBandwidthLinkVariable")
    private @Nullable Output<String> tunnelInterfaceLowBandwidthLinkVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceLowBandwidthLinkVariable() {
        return Optional.ofNullable(this.tunnelInterfaceLowBandwidthLinkVariable);
    }

    /**
     * Maximum Control Connections
     *   - Range: `0`-`100`
     * 
     */
    @Import(name="tunnelInterfaceMaxControlConnections")
    private @Nullable Output<Integer> tunnelInterfaceMaxControlConnections;

    /**
     * @return Maximum Control Connections
     *   - Range: `0`-`100`
     * 
     */
    public Optional<Output<Integer>> tunnelInterfaceMaxControlConnections() {
        return Optional.ofNullable(this.tunnelInterfaceMaxControlConnections);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceMaxControlConnectionsVariable")
    private @Nullable Output<String> tunnelInterfaceMaxControlConnectionsVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceMaxControlConnectionsVariable() {
        return Optional.ofNullable(this.tunnelInterfaceMaxControlConnectionsVariable);
    }

    /**
     * Set time period of nat refresh packets &lt;1...60&gt; seconds
     *   - Range: `1`-`60`
     *   - Default value: `5`
     * 
     */
    @Import(name="tunnelInterfaceNatRefreshInterval")
    private @Nullable Output<Integer> tunnelInterfaceNatRefreshInterval;

    /**
     * @return Set time period of nat refresh packets &lt;1...60&gt; seconds
     *   - Range: `1`-`60`
     *   - Default value: `5`
     * 
     */
    public Optional<Output<Integer>> tunnelInterfaceNatRefreshInterval() {
        return Optional.ofNullable(this.tunnelInterfaceNatRefreshInterval);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceNatRefreshIntervalVariable")
    private @Nullable Output<String> tunnelInterfaceNatRefreshIntervalVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceNatRefreshIntervalVariable() {
        return Optional.ofNullable(this.tunnelInterfaceNatRefreshIntervalVariable);
    }

    /**
     * Accept and respond to network-prefix-directed broadcasts
     *   - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceNetworkBroadcast")
    private @Nullable Output<Boolean> tunnelInterfaceNetworkBroadcast;

    /**
     * @return Accept and respond to network-prefix-directed broadcasts
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceNetworkBroadcast() {
        return Optional.ofNullable(this.tunnelInterfaceNetworkBroadcast);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceNetworkBroadcastVariable")
    private @Nullable Output<String> tunnelInterfaceNetworkBroadcastVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceNetworkBroadcastVariable() {
        return Optional.ofNullable(this.tunnelInterfaceNetworkBroadcastVariable);
    }

    /**
     * Disallow port hopping on the tunnel interface
     *   - Default value: `true`
     * 
     */
    @Import(name="tunnelInterfacePortHop")
    private @Nullable Output<Boolean> tunnelInterfacePortHop;

    /**
     * @return Disallow port hopping on the tunnel interface
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfacePortHop() {
        return Optional.ofNullable(this.tunnelInterfacePortHop);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfacePortHopVariable")
    private @Nullable Output<String> tunnelInterfacePortHopVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfacePortHopVariable() {
        return Optional.ofNullable(this.tunnelInterfacePortHopVariable);
    }

    /**
     * Tunnel TCP MSS on SYN packets, in bytes
     *   - Range: `500`-`1460`
     * 
     */
    @Import(name="tunnelInterfaceTunnelTcpMss")
    private @Nullable Output<Integer> tunnelInterfaceTunnelTcpMss;

    /**
     * @return Tunnel TCP MSS on SYN packets, in bytes
     *   - Range: `500`-`1460`
     * 
     */
    public Optional<Output<Integer>> tunnelInterfaceTunnelTcpMss() {
        return Optional.ofNullable(this.tunnelInterfaceTunnelTcpMss);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceTunnelTcpMssVariable")
    private @Nullable Output<String> tunnelInterfaceTunnelTcpMssVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceTunnelTcpMssVariable() {
        return Optional.ofNullable(this.tunnelInterfaceTunnelTcpMssVariable);
    }

    /**
     * Put this wan interface in STUN mode only
     *   - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceVbondAsStunServer")
    private @Nullable Output<Boolean> tunnelInterfaceVbondAsStunServer;

    /**
     * @return Put this wan interface in STUN mode only
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceVbondAsStunServer() {
        return Optional.ofNullable(this.tunnelInterfaceVbondAsStunServer);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceVbondAsStunServerVariable")
    private @Nullable Output<String> tunnelInterfaceVbondAsStunServerVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceVbondAsStunServerVariable() {
        return Optional.ofNullable(this.tunnelInterfaceVbondAsStunServerVariable);
    }

    /**
     * Set interface preference for control connection to vManage &lt;0..8&gt;
     *   - Range: `0`-`8`
     *   - Default value: `5`
     * 
     */
    @Import(name="tunnelInterfaceVmanageConnectionPreference")
    private @Nullable Output<Integer> tunnelInterfaceVmanageConnectionPreference;

    /**
     * @return Set interface preference for control connection to vManage &lt;0..8&gt;
     *   - Range: `0`-`8`
     *   - Default value: `5`
     * 
     */
    public Optional<Output<Integer>> tunnelInterfaceVmanageConnectionPreference() {
        return Optional.ofNullable(this.tunnelInterfaceVmanageConnectionPreference);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceVmanageConnectionPreferenceVariable")
    private @Nullable Output<String> tunnelInterfaceVmanageConnectionPreferenceVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceVmanageConnectionPreferenceVariable() {
        return Optional.ofNullable(this.tunnelInterfaceVmanageConnectionPreferenceVariable);
    }

    /**
     * Set tunnel QoS mode
     *   - Choices: `hub`, `spoke`
     * 
     */
    @Import(name="tunnelQosMode")
    private @Nullable Output<String> tunnelQosMode;

    /**
     * @return Set tunnel QoS mode
     *   - Choices: `hub`, `spoke`
     * 
     */
    public Optional<Output<String>> tunnelQosMode() {
        return Optional.ofNullable(this.tunnelQosMode);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelQosModeVariable")
    private @Nullable Output<String> tunnelQosModeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelQosModeVariable() {
        return Optional.ofNullable(this.tunnelQosModeVariable);
    }

    private TransportWanVpnInterfaceCellularFeatureArgs() {}

    private TransportWanVpnInterfaceCellularFeatureArgs(TransportWanVpnInterfaceCellularFeatureArgs $) {
        this.aclIpv4EgressFeatureId = $.aclIpv4EgressFeatureId;
        this.aclIpv4IngressFeatureId = $.aclIpv4IngressFeatureId;
        this.aclIpv6EgressFeatureId = $.aclIpv6EgressFeatureId;
        this.aclIpv6IngressFeatureId = $.aclIpv6IngressFeatureId;
        this.arps = $.arps;
        this.bandwidthDownstream = $.bandwidthDownstream;
        this.bandwidthDownstreamVariable = $.bandwidthDownstreamVariable;
        this.bandwidthUpstream = $.bandwidthUpstream;
        this.bandwidthUpstreamVariable = $.bandwidthUpstreamVariable;
        this.description = $.description;
        this.featureProfileId = $.featureProfileId;
        this.interfaceDescription = $.interfaceDescription;
        this.interfaceDescriptionVariable = $.interfaceDescriptionVariable;
        this.interfaceMtu = $.interfaceMtu;
        this.interfaceMtuVariable = $.interfaceMtuVariable;
        this.interfaceName = $.interfaceName;
        this.interfaceNameVariable = $.interfaceNameVariable;
        this.ipDirectedBroadcast = $.ipDirectedBroadcast;
        this.ipDirectedBroadcastVariable = $.ipDirectedBroadcastVariable;
        this.ipMtu = $.ipMtu;
        this.ipMtuVariable = $.ipMtuVariable;
        this.ipv4DhcpHelperVariable = $.ipv4DhcpHelperVariable;
        this.ipv4DhcpHelpers = $.ipv4DhcpHelpers;
        this.name = $.name;
        this.natIpv4 = $.natIpv4;
        this.natIpv4Variable = $.natIpv4Variable;
        this.natTcpTimeout = $.natTcpTimeout;
        this.natTcpTimeoutVariable = $.natTcpTimeoutVariable;
        this.natUdpTimeout = $.natUdpTimeout;
        this.natUdpTimeoutVariable = $.natUdpTimeoutVariable;
        this.perTunnelQos = $.perTunnelQos;
        this.perTunnelQosVariable = $.perTunnelQosVariable;
        this.qosAdaptive = $.qosAdaptive;
        this.qosAdaptiveBandwidthDownstream = $.qosAdaptiveBandwidthDownstream;
        this.qosAdaptiveBandwidthUpstream = $.qosAdaptiveBandwidthUpstream;
        this.qosAdaptiveDefaultDownstream = $.qosAdaptiveDefaultDownstream;
        this.qosAdaptiveDefaultDownstreamVariable = $.qosAdaptiveDefaultDownstreamVariable;
        this.qosAdaptiveDefaultUpstream = $.qosAdaptiveDefaultUpstream;
        this.qosAdaptiveDefaultUpstreamVariable = $.qosAdaptiveDefaultUpstreamVariable;
        this.qosAdaptiveMaxDownstream = $.qosAdaptiveMaxDownstream;
        this.qosAdaptiveMaxDownstreamVariable = $.qosAdaptiveMaxDownstreamVariable;
        this.qosAdaptiveMaxUpstream = $.qosAdaptiveMaxUpstream;
        this.qosAdaptiveMaxUpstreamVariable = $.qosAdaptiveMaxUpstreamVariable;
        this.qosAdaptiveMinDownstream = $.qosAdaptiveMinDownstream;
        this.qosAdaptiveMinDownstreamVariable = $.qosAdaptiveMinDownstreamVariable;
        this.qosAdaptiveMinUpstream = $.qosAdaptiveMinUpstream;
        this.qosAdaptiveMinUpstreamVariable = $.qosAdaptiveMinUpstreamVariable;
        this.qosAdaptivePeriod = $.qosAdaptivePeriod;
        this.qosAdaptivePeriodVariable = $.qosAdaptivePeriodVariable;
        this.qosShapingRate = $.qosShapingRate;
        this.qosShapingRateVariable = $.qosShapingRateVariable;
        this.serviceProvider = $.serviceProvider;
        this.serviceProviderVariable = $.serviceProviderVariable;
        this.shutdown = $.shutdown;
        this.shutdownVariable = $.shutdownVariable;
        this.tcpMss = $.tcpMss;
        this.tcpMssVariable = $.tcpMssVariable;
        this.tlocExtension = $.tlocExtension;
        this.tlocExtensionVariable = $.tlocExtensionVariable;
        this.tracker = $.tracker;
        this.trackerVariable = $.trackerVariable;
        this.transportWanVpnFeatureId = $.transportWanVpnFeatureId;
        this.tunnelBandwidthPercent = $.tunnelBandwidthPercent;
        this.tunnelBandwidthPercentVariable = $.tunnelBandwidthPercentVariable;
        this.tunnelInterface = $.tunnelInterface;
        this.tunnelInterfaceAllowAll = $.tunnelInterfaceAllowAll;
        this.tunnelInterfaceAllowAllVariable = $.tunnelInterfaceAllowAllVariable;
        this.tunnelInterfaceAllowBfd = $.tunnelInterfaceAllowBfd;
        this.tunnelInterfaceAllowBfdVariable = $.tunnelInterfaceAllowBfdVariable;
        this.tunnelInterfaceAllowBgp = $.tunnelInterfaceAllowBgp;
        this.tunnelInterfaceAllowBgpVariable = $.tunnelInterfaceAllowBgpVariable;
        this.tunnelInterfaceAllowDhcp = $.tunnelInterfaceAllowDhcp;
        this.tunnelInterfaceAllowDhcpVariable = $.tunnelInterfaceAllowDhcpVariable;
        this.tunnelInterfaceAllowDns = $.tunnelInterfaceAllowDns;
        this.tunnelInterfaceAllowDnsVariable = $.tunnelInterfaceAllowDnsVariable;
        this.tunnelInterfaceAllowHttps = $.tunnelInterfaceAllowHttps;
        this.tunnelInterfaceAllowHttpsVariable = $.tunnelInterfaceAllowHttpsVariable;
        this.tunnelInterfaceAllowIcmp = $.tunnelInterfaceAllowIcmp;
        this.tunnelInterfaceAllowIcmpVariable = $.tunnelInterfaceAllowIcmpVariable;
        this.tunnelInterfaceAllowNetconf = $.tunnelInterfaceAllowNetconf;
        this.tunnelInterfaceAllowNetconfVariable = $.tunnelInterfaceAllowNetconfVariable;
        this.tunnelInterfaceAllowNtp = $.tunnelInterfaceAllowNtp;
        this.tunnelInterfaceAllowNtpVariable = $.tunnelInterfaceAllowNtpVariable;
        this.tunnelInterfaceAllowOspf = $.tunnelInterfaceAllowOspf;
        this.tunnelInterfaceAllowOspfVariable = $.tunnelInterfaceAllowOspfVariable;
        this.tunnelInterfaceAllowSnmp = $.tunnelInterfaceAllowSnmp;
        this.tunnelInterfaceAllowSnmpVariable = $.tunnelInterfaceAllowSnmpVariable;
        this.tunnelInterfaceAllowSsh = $.tunnelInterfaceAllowSsh;
        this.tunnelInterfaceAllowSshVariable = $.tunnelInterfaceAllowSshVariable;
        this.tunnelInterfaceAllowStun = $.tunnelInterfaceAllowStun;
        this.tunnelInterfaceAllowStunVariable = $.tunnelInterfaceAllowStunVariable;
        this.tunnelInterfaceBindLoopbackTunnel = $.tunnelInterfaceBindLoopbackTunnel;
        this.tunnelInterfaceBindLoopbackTunnelVariable = $.tunnelInterfaceBindLoopbackTunnelVariable;
        this.tunnelInterfaceBorder = $.tunnelInterfaceBorder;
        this.tunnelInterfaceBorderVariable = $.tunnelInterfaceBorderVariable;
        this.tunnelInterfaceCarrier = $.tunnelInterfaceCarrier;
        this.tunnelInterfaceCarrierVariable = $.tunnelInterfaceCarrierVariable;
        this.tunnelInterfaceClearDontFragment = $.tunnelInterfaceClearDontFragment;
        this.tunnelInterfaceClearDontFragmentVariable = $.tunnelInterfaceClearDontFragmentVariable;
        this.tunnelInterfaceColor = $.tunnelInterfaceColor;
        this.tunnelInterfaceColorRestrict = $.tunnelInterfaceColorRestrict;
        this.tunnelInterfaceColorRestrictVariable = $.tunnelInterfaceColorRestrictVariable;
        this.tunnelInterfaceColorVariable = $.tunnelInterfaceColorVariable;
        this.tunnelInterfaceEncapsulations = $.tunnelInterfaceEncapsulations;
        this.tunnelInterfaceExcludeControllerGroupListVariable = $.tunnelInterfaceExcludeControllerGroupListVariable;
        this.tunnelInterfaceExcludeControllerGroupLists = $.tunnelInterfaceExcludeControllerGroupLists;
        this.tunnelInterfaceGroups = $.tunnelInterfaceGroups;
        this.tunnelInterfaceGroupsVariable = $.tunnelInterfaceGroupsVariable;
        this.tunnelInterfaceHelloInterval = $.tunnelInterfaceHelloInterval;
        this.tunnelInterfaceHelloIntervalVariable = $.tunnelInterfaceHelloIntervalVariable;
        this.tunnelInterfaceHelloTolerance = $.tunnelInterfaceHelloTolerance;
        this.tunnelInterfaceHelloToleranceVariable = $.tunnelInterfaceHelloToleranceVariable;
        this.tunnelInterfaceLastResortCircuit = $.tunnelInterfaceLastResortCircuit;
        this.tunnelInterfaceLastResortCircuitVariable = $.tunnelInterfaceLastResortCircuitVariable;
        this.tunnelInterfaceLowBandwidthLink = $.tunnelInterfaceLowBandwidthLink;
        this.tunnelInterfaceLowBandwidthLinkVariable = $.tunnelInterfaceLowBandwidthLinkVariable;
        this.tunnelInterfaceMaxControlConnections = $.tunnelInterfaceMaxControlConnections;
        this.tunnelInterfaceMaxControlConnectionsVariable = $.tunnelInterfaceMaxControlConnectionsVariable;
        this.tunnelInterfaceNatRefreshInterval = $.tunnelInterfaceNatRefreshInterval;
        this.tunnelInterfaceNatRefreshIntervalVariable = $.tunnelInterfaceNatRefreshIntervalVariable;
        this.tunnelInterfaceNetworkBroadcast = $.tunnelInterfaceNetworkBroadcast;
        this.tunnelInterfaceNetworkBroadcastVariable = $.tunnelInterfaceNetworkBroadcastVariable;
        this.tunnelInterfacePortHop = $.tunnelInterfacePortHop;
        this.tunnelInterfacePortHopVariable = $.tunnelInterfacePortHopVariable;
        this.tunnelInterfaceTunnelTcpMss = $.tunnelInterfaceTunnelTcpMss;
        this.tunnelInterfaceTunnelTcpMssVariable = $.tunnelInterfaceTunnelTcpMssVariable;
        this.tunnelInterfaceVbondAsStunServer = $.tunnelInterfaceVbondAsStunServer;
        this.tunnelInterfaceVbondAsStunServerVariable = $.tunnelInterfaceVbondAsStunServerVariable;
        this.tunnelInterfaceVmanageConnectionPreference = $.tunnelInterfaceVmanageConnectionPreference;
        this.tunnelInterfaceVmanageConnectionPreferenceVariable = $.tunnelInterfaceVmanageConnectionPreferenceVariable;
        this.tunnelQosMode = $.tunnelQosMode;
        this.tunnelQosModeVariable = $.tunnelQosModeVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransportWanVpnInterfaceCellularFeatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransportWanVpnInterfaceCellularFeatureArgs $;

        public Builder() {
            $ = new TransportWanVpnInterfaceCellularFeatureArgs();
        }

        public Builder(TransportWanVpnInterfaceCellularFeatureArgs defaults) {
            $ = new TransportWanVpnInterfaceCellularFeatureArgs(Objects.requireNonNull(defaults));
        }

        public Builder aclIpv4EgressFeatureId(@Nullable Output<String> aclIpv4EgressFeatureId) {
            $.aclIpv4EgressFeatureId = aclIpv4EgressFeatureId;
            return this;
        }

        public Builder aclIpv4EgressFeatureId(String aclIpv4EgressFeatureId) {
            return aclIpv4EgressFeatureId(Output.of(aclIpv4EgressFeatureId));
        }

        public Builder aclIpv4IngressFeatureId(@Nullable Output<String> aclIpv4IngressFeatureId) {
            $.aclIpv4IngressFeatureId = aclIpv4IngressFeatureId;
            return this;
        }

        public Builder aclIpv4IngressFeatureId(String aclIpv4IngressFeatureId) {
            return aclIpv4IngressFeatureId(Output.of(aclIpv4IngressFeatureId));
        }

        public Builder aclIpv6EgressFeatureId(@Nullable Output<String> aclIpv6EgressFeatureId) {
            $.aclIpv6EgressFeatureId = aclIpv6EgressFeatureId;
            return this;
        }

        public Builder aclIpv6EgressFeatureId(String aclIpv6EgressFeatureId) {
            return aclIpv6EgressFeatureId(Output.of(aclIpv6EgressFeatureId));
        }

        public Builder aclIpv6IngressFeatureId(@Nullable Output<String> aclIpv6IngressFeatureId) {
            $.aclIpv6IngressFeatureId = aclIpv6IngressFeatureId;
            return this;
        }

        public Builder aclIpv6IngressFeatureId(String aclIpv6IngressFeatureId) {
            return aclIpv6IngressFeatureId(Output.of(aclIpv6IngressFeatureId));
        }

        /**
         * @param arps Configure ARP entries
         * 
         * @return builder
         * 
         */
        public Builder arps(@Nullable Output<List<TransportWanVpnInterfaceCellularFeatureArpArgs>> arps) {
            $.arps = arps;
            return this;
        }

        /**
         * @param arps Configure ARP entries
         * 
         * @return builder
         * 
         */
        public Builder arps(List<TransportWanVpnInterfaceCellularFeatureArpArgs> arps) {
            return arps(Output.of(arps));
        }

        /**
         * @param arps Configure ARP entries
         * 
         * @return builder
         * 
         */
        public Builder arps(TransportWanVpnInterfaceCellularFeatureArpArgs... arps) {
            return arps(List.of(arps));
        }

        /**
         * @param bandwidthDownstream Interface downstream bandwidth capacity, in kbps
         *   - Range: `1`-`2147483647`
         * 
         * @return builder
         * 
         */
        public Builder bandwidthDownstream(@Nullable Output<Integer> bandwidthDownstream) {
            $.bandwidthDownstream = bandwidthDownstream;
            return this;
        }

        /**
         * @param bandwidthDownstream Interface downstream bandwidth capacity, in kbps
         *   - Range: `1`-`2147483647`
         * 
         * @return builder
         * 
         */
        public Builder bandwidthDownstream(Integer bandwidthDownstream) {
            return bandwidthDownstream(Output.of(bandwidthDownstream));
        }

        /**
         * @param bandwidthDownstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder bandwidthDownstreamVariable(@Nullable Output<String> bandwidthDownstreamVariable) {
            $.bandwidthDownstreamVariable = bandwidthDownstreamVariable;
            return this;
        }

        /**
         * @param bandwidthDownstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder bandwidthDownstreamVariable(String bandwidthDownstreamVariable) {
            return bandwidthDownstreamVariable(Output.of(bandwidthDownstreamVariable));
        }

        /**
         * @param bandwidthUpstream Interface upstream bandwidth capacity, in kbps
         *   - Range: `1`-`2147483647`
         * 
         * @return builder
         * 
         */
        public Builder bandwidthUpstream(@Nullable Output<Integer> bandwidthUpstream) {
            $.bandwidthUpstream = bandwidthUpstream;
            return this;
        }

        /**
         * @param bandwidthUpstream Interface upstream bandwidth capacity, in kbps
         *   - Range: `1`-`2147483647`
         * 
         * @return builder
         * 
         */
        public Builder bandwidthUpstream(Integer bandwidthUpstream) {
            return bandwidthUpstream(Output.of(bandwidthUpstream));
        }

        /**
         * @param bandwidthUpstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder bandwidthUpstreamVariable(@Nullable Output<String> bandwidthUpstreamVariable) {
            $.bandwidthUpstreamVariable = bandwidthUpstreamVariable;
            return this;
        }

        /**
         * @param bandwidthUpstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder bandwidthUpstreamVariable(String bandwidthUpstreamVariable) {
            return bandwidthUpstreamVariable(Output.of(bandwidthUpstreamVariable));
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        public Builder interfaceDescription(@Nullable Output<String> interfaceDescription) {
            $.interfaceDescription = interfaceDescription;
            return this;
        }

        public Builder interfaceDescription(String interfaceDescription) {
            return interfaceDescription(Output.of(interfaceDescription));
        }

        /**
         * @param interfaceDescriptionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceDescriptionVariable(@Nullable Output<String> interfaceDescriptionVariable) {
            $.interfaceDescriptionVariable = interfaceDescriptionVariable;
            return this;
        }

        /**
         * @param interfaceDescriptionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceDescriptionVariable(String interfaceDescriptionVariable) {
            return interfaceDescriptionVariable(Output.of(interfaceDescriptionVariable));
        }

        /**
         * @param interfaceMtu Interface MTU GigabitEthernet0 &lt;1500..1518&gt;, Other GigabitEthernet &lt;1500..9216&gt; in bytes
         *   - Range: `1500`-`9216`
         *   - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder interfaceMtu(@Nullable Output<Integer> interfaceMtu) {
            $.interfaceMtu = interfaceMtu;
            return this;
        }

        /**
         * @param interfaceMtu Interface MTU GigabitEthernet0 &lt;1500..1518&gt;, Other GigabitEthernet &lt;1500..9216&gt; in bytes
         *   - Range: `1500`-`9216`
         *   - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder interfaceMtu(Integer interfaceMtu) {
            return interfaceMtu(Output.of(interfaceMtu));
        }

        /**
         * @param interfaceMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceMtuVariable(@Nullable Output<String> interfaceMtuVariable) {
            $.interfaceMtuVariable = interfaceMtuVariable;
            return this;
        }

        /**
         * @param interfaceMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceMtuVariable(String interfaceMtuVariable) {
            return interfaceMtuVariable(Output.of(interfaceMtuVariable));
        }

        public Builder interfaceName(@Nullable Output<String> interfaceName) {
            $.interfaceName = interfaceName;
            return this;
        }

        public Builder interfaceName(String interfaceName) {
            return interfaceName(Output.of(interfaceName));
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(@Nullable Output<String> interfaceNameVariable) {
            $.interfaceNameVariable = interfaceNameVariable;
            return this;
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(String interfaceNameVariable) {
            return interfaceNameVariable(Output.of(interfaceNameVariable));
        }

        /**
         * @param ipDirectedBroadcast IP Directed-Broadcast
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcast(@Nullable Output<Boolean> ipDirectedBroadcast) {
            $.ipDirectedBroadcast = ipDirectedBroadcast;
            return this;
        }

        /**
         * @param ipDirectedBroadcast IP Directed-Broadcast
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcast(Boolean ipDirectedBroadcast) {
            return ipDirectedBroadcast(Output.of(ipDirectedBroadcast));
        }

        /**
         * @param ipDirectedBroadcastVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcastVariable(@Nullable Output<String> ipDirectedBroadcastVariable) {
            $.ipDirectedBroadcastVariable = ipDirectedBroadcastVariable;
            return this;
        }

        /**
         * @param ipDirectedBroadcastVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcastVariable(String ipDirectedBroadcastVariable) {
            return ipDirectedBroadcastVariable(Output.of(ipDirectedBroadcastVariable));
        }

        /**
         * @param ipMtu IP MTU for GigabitEthernet main &lt;576..Interface MTU&gt;, GigabitEthernet subinterface &lt;576..9216&gt;, Other Interfaces &lt;576..2000&gt; in bytes
         *   - Range: `576`-`9216`
         *   - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder ipMtu(@Nullable Output<Integer> ipMtu) {
            $.ipMtu = ipMtu;
            return this;
        }

        /**
         * @param ipMtu IP MTU for GigabitEthernet main &lt;576..Interface MTU&gt;, GigabitEthernet subinterface &lt;576..9216&gt;, Other Interfaces &lt;576..2000&gt; in bytes
         *   - Range: `576`-`9216`
         *   - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder ipMtu(Integer ipMtu) {
            return ipMtu(Output.of(ipMtu));
        }

        /**
         * @param ipMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipMtuVariable(@Nullable Output<String> ipMtuVariable) {
            $.ipMtuVariable = ipMtuVariable;
            return this;
        }

        /**
         * @param ipMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipMtuVariable(String ipMtuVariable) {
            return ipMtuVariable(Output.of(ipMtuVariable));
        }

        /**
         * @param ipv4DhcpHelperVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelperVariable(@Nullable Output<String> ipv4DhcpHelperVariable) {
            $.ipv4DhcpHelperVariable = ipv4DhcpHelperVariable;
            return this;
        }

        /**
         * @param ipv4DhcpHelperVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelperVariable(String ipv4DhcpHelperVariable) {
            return ipv4DhcpHelperVariable(Output.of(ipv4DhcpHelperVariable));
        }

        /**
         * @param ipv4DhcpHelpers List of DHCP IPv4 helper addresses (min 1, max 8)
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpers(@Nullable Output<List<String>> ipv4DhcpHelpers) {
            $.ipv4DhcpHelpers = ipv4DhcpHelpers;
            return this;
        }

        /**
         * @param ipv4DhcpHelpers List of DHCP IPv4 helper addresses (min 1, max 8)
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpers(List<String> ipv4DhcpHelpers) {
            return ipv4DhcpHelpers(Output.of(ipv4DhcpHelpers));
        }

        /**
         * @param ipv4DhcpHelpers List of DHCP IPv4 helper addresses (min 1, max 8)
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpers(String... ipv4DhcpHelpers) {
            return ipv4DhcpHelpers(List.of(ipv4DhcpHelpers));
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param natIpv4 Network Address Translation on this interface
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder natIpv4(@Nullable Output<Boolean> natIpv4) {
            $.natIpv4 = natIpv4;
            return this;
        }

        /**
         * @param natIpv4 Network Address Translation on this interface
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder natIpv4(Boolean natIpv4) {
            return natIpv4(Output.of(natIpv4));
        }

        /**
         * @param natIpv4Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natIpv4Variable(@Nullable Output<String> natIpv4Variable) {
            $.natIpv4Variable = natIpv4Variable;
            return this;
        }

        /**
         * @param natIpv4Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natIpv4Variable(String natIpv4Variable) {
            return natIpv4Variable(Output.of(natIpv4Variable));
        }

        /**
         * @param natTcpTimeout Set NAT TCP session timeout, in minutes
         *   - Range: `1`-`8947`
         *   - Default value: `60`
         * 
         * @return builder
         * 
         */
        public Builder natTcpTimeout(@Nullable Output<Integer> natTcpTimeout) {
            $.natTcpTimeout = natTcpTimeout;
            return this;
        }

        /**
         * @param natTcpTimeout Set NAT TCP session timeout, in minutes
         *   - Range: `1`-`8947`
         *   - Default value: `60`
         * 
         * @return builder
         * 
         */
        public Builder natTcpTimeout(Integer natTcpTimeout) {
            return natTcpTimeout(Output.of(natTcpTimeout));
        }

        /**
         * @param natTcpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natTcpTimeoutVariable(@Nullable Output<String> natTcpTimeoutVariable) {
            $.natTcpTimeoutVariable = natTcpTimeoutVariable;
            return this;
        }

        /**
         * @param natTcpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natTcpTimeoutVariable(String natTcpTimeoutVariable) {
            return natTcpTimeoutVariable(Output.of(natTcpTimeoutVariable));
        }

        /**
         * @param natUdpTimeout Set NAT UDP session timeout, in minutes
         *   - Range: `1`-`8947`
         *   - Default value: `1`
         * 
         * @return builder
         * 
         */
        public Builder natUdpTimeout(@Nullable Output<Integer> natUdpTimeout) {
            $.natUdpTimeout = natUdpTimeout;
            return this;
        }

        /**
         * @param natUdpTimeout Set NAT UDP session timeout, in minutes
         *   - Range: `1`-`8947`
         *   - Default value: `1`
         * 
         * @return builder
         * 
         */
        public Builder natUdpTimeout(Integer natUdpTimeout) {
            return natUdpTimeout(Output.of(natUdpTimeout));
        }

        /**
         * @param natUdpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natUdpTimeoutVariable(@Nullable Output<String> natUdpTimeoutVariable) {
            $.natUdpTimeoutVariable = natUdpTimeoutVariable;
            return this;
        }

        /**
         * @param natUdpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natUdpTimeoutVariable(String natUdpTimeoutVariable) {
            return natUdpTimeoutVariable(Output.of(natUdpTimeoutVariable));
        }

        /**
         * @param perTunnelQos Per-tunnel Qos
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder perTunnelQos(@Nullable Output<Boolean> perTunnelQos) {
            $.perTunnelQos = perTunnelQos;
            return this;
        }

        /**
         * @param perTunnelQos Per-tunnel Qos
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder perTunnelQos(Boolean perTunnelQos) {
            return perTunnelQos(Output.of(perTunnelQos));
        }

        /**
         * @param perTunnelQosVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder perTunnelQosVariable(@Nullable Output<String> perTunnelQosVariable) {
            $.perTunnelQosVariable = perTunnelQosVariable;
            return this;
        }

        /**
         * @param perTunnelQosVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder perTunnelQosVariable(String perTunnelQosVariable) {
            return perTunnelQosVariable(Output.of(perTunnelQosVariable));
        }

        /**
         * @param qosAdaptive Adaptive QoS
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptive(@Nullable Output<Boolean> qosAdaptive) {
            $.qosAdaptive = qosAdaptive;
            return this;
        }

        /**
         * @param qosAdaptive Adaptive QoS
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptive(Boolean qosAdaptive) {
            return qosAdaptive(Output.of(qosAdaptive));
        }

        /**
         * @param qosAdaptiveBandwidthDownstream Shaping Rate Downstream
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveBandwidthDownstream(@Nullable Output<Boolean> qosAdaptiveBandwidthDownstream) {
            $.qosAdaptiveBandwidthDownstream = qosAdaptiveBandwidthDownstream;
            return this;
        }

        /**
         * @param qosAdaptiveBandwidthDownstream Shaping Rate Downstream
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveBandwidthDownstream(Boolean qosAdaptiveBandwidthDownstream) {
            return qosAdaptiveBandwidthDownstream(Output.of(qosAdaptiveBandwidthDownstream));
        }

        /**
         * @param qosAdaptiveBandwidthUpstream Shaping Rate Upstream
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveBandwidthUpstream(@Nullable Output<Boolean> qosAdaptiveBandwidthUpstream) {
            $.qosAdaptiveBandwidthUpstream = qosAdaptiveBandwidthUpstream;
            return this;
        }

        /**
         * @param qosAdaptiveBandwidthUpstream Shaping Rate Upstream
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveBandwidthUpstream(Boolean qosAdaptiveBandwidthUpstream) {
            return qosAdaptiveBandwidthUpstream(Output.of(qosAdaptiveBandwidthUpstream));
        }

        /**
         * @param qosAdaptiveDefaultDownstream Adaptive QoS default downstream bandwidth (kbps)
         *   - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveDefaultDownstream(@Nullable Output<Integer> qosAdaptiveDefaultDownstream) {
            $.qosAdaptiveDefaultDownstream = qosAdaptiveDefaultDownstream;
            return this;
        }

        /**
         * @param qosAdaptiveDefaultDownstream Adaptive QoS default downstream bandwidth (kbps)
         *   - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveDefaultDownstream(Integer qosAdaptiveDefaultDownstream) {
            return qosAdaptiveDefaultDownstream(Output.of(qosAdaptiveDefaultDownstream));
        }

        /**
         * @param qosAdaptiveDefaultDownstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveDefaultDownstreamVariable(@Nullable Output<String> qosAdaptiveDefaultDownstreamVariable) {
            $.qosAdaptiveDefaultDownstreamVariable = qosAdaptiveDefaultDownstreamVariable;
            return this;
        }

        /**
         * @param qosAdaptiveDefaultDownstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveDefaultDownstreamVariable(String qosAdaptiveDefaultDownstreamVariable) {
            return qosAdaptiveDefaultDownstreamVariable(Output.of(qosAdaptiveDefaultDownstreamVariable));
        }

        /**
         * @param qosAdaptiveDefaultUpstream Adaptive QoS default upstream bandwidth (kbps)
         *   - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveDefaultUpstream(@Nullable Output<Integer> qosAdaptiveDefaultUpstream) {
            $.qosAdaptiveDefaultUpstream = qosAdaptiveDefaultUpstream;
            return this;
        }

        /**
         * @param qosAdaptiveDefaultUpstream Adaptive QoS default upstream bandwidth (kbps)
         *   - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveDefaultUpstream(Integer qosAdaptiveDefaultUpstream) {
            return qosAdaptiveDefaultUpstream(Output.of(qosAdaptiveDefaultUpstream));
        }

        /**
         * @param qosAdaptiveDefaultUpstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveDefaultUpstreamVariable(@Nullable Output<String> qosAdaptiveDefaultUpstreamVariable) {
            $.qosAdaptiveDefaultUpstreamVariable = qosAdaptiveDefaultUpstreamVariable;
            return this;
        }

        /**
         * @param qosAdaptiveDefaultUpstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveDefaultUpstreamVariable(String qosAdaptiveDefaultUpstreamVariable) {
            return qosAdaptiveDefaultUpstreamVariable(Output.of(qosAdaptiveDefaultUpstreamVariable));
        }

        /**
         * @param qosAdaptiveMaxDownstream Downstream max bandwidth limit (kbps)
         *   - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMaxDownstream(@Nullable Output<Integer> qosAdaptiveMaxDownstream) {
            $.qosAdaptiveMaxDownstream = qosAdaptiveMaxDownstream;
            return this;
        }

        /**
         * @param qosAdaptiveMaxDownstream Downstream max bandwidth limit (kbps)
         *   - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMaxDownstream(Integer qosAdaptiveMaxDownstream) {
            return qosAdaptiveMaxDownstream(Output.of(qosAdaptiveMaxDownstream));
        }

        /**
         * @param qosAdaptiveMaxDownstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMaxDownstreamVariable(@Nullable Output<String> qosAdaptiveMaxDownstreamVariable) {
            $.qosAdaptiveMaxDownstreamVariable = qosAdaptiveMaxDownstreamVariable;
            return this;
        }

        /**
         * @param qosAdaptiveMaxDownstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMaxDownstreamVariable(String qosAdaptiveMaxDownstreamVariable) {
            return qosAdaptiveMaxDownstreamVariable(Output.of(qosAdaptiveMaxDownstreamVariable));
        }

        /**
         * @param qosAdaptiveMaxUpstream Upstream max bandwidth limit (kbps)
         *   - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMaxUpstream(@Nullable Output<Integer> qosAdaptiveMaxUpstream) {
            $.qosAdaptiveMaxUpstream = qosAdaptiveMaxUpstream;
            return this;
        }

        /**
         * @param qosAdaptiveMaxUpstream Upstream max bandwidth limit (kbps)
         *   - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMaxUpstream(Integer qosAdaptiveMaxUpstream) {
            return qosAdaptiveMaxUpstream(Output.of(qosAdaptiveMaxUpstream));
        }

        /**
         * @param qosAdaptiveMaxUpstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMaxUpstreamVariable(@Nullable Output<String> qosAdaptiveMaxUpstreamVariable) {
            $.qosAdaptiveMaxUpstreamVariable = qosAdaptiveMaxUpstreamVariable;
            return this;
        }

        /**
         * @param qosAdaptiveMaxUpstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMaxUpstreamVariable(String qosAdaptiveMaxUpstreamVariable) {
            return qosAdaptiveMaxUpstreamVariable(Output.of(qosAdaptiveMaxUpstreamVariable));
        }

        /**
         * @param qosAdaptiveMinDownstream Downstream min bandwidth limit (kbps)
         *   - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMinDownstream(@Nullable Output<Integer> qosAdaptiveMinDownstream) {
            $.qosAdaptiveMinDownstream = qosAdaptiveMinDownstream;
            return this;
        }

        /**
         * @param qosAdaptiveMinDownstream Downstream min bandwidth limit (kbps)
         *   - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMinDownstream(Integer qosAdaptiveMinDownstream) {
            return qosAdaptiveMinDownstream(Output.of(qosAdaptiveMinDownstream));
        }

        /**
         * @param qosAdaptiveMinDownstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMinDownstreamVariable(@Nullable Output<String> qosAdaptiveMinDownstreamVariable) {
            $.qosAdaptiveMinDownstreamVariable = qosAdaptiveMinDownstreamVariable;
            return this;
        }

        /**
         * @param qosAdaptiveMinDownstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMinDownstreamVariable(String qosAdaptiveMinDownstreamVariable) {
            return qosAdaptiveMinDownstreamVariable(Output.of(qosAdaptiveMinDownstreamVariable));
        }

        /**
         * @param qosAdaptiveMinUpstream Upstream min bandwidth limit (kbps)
         *   - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMinUpstream(@Nullable Output<Integer> qosAdaptiveMinUpstream) {
            $.qosAdaptiveMinUpstream = qosAdaptiveMinUpstream;
            return this;
        }

        /**
         * @param qosAdaptiveMinUpstream Upstream min bandwidth limit (kbps)
         *   - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMinUpstream(Integer qosAdaptiveMinUpstream) {
            return qosAdaptiveMinUpstream(Output.of(qosAdaptiveMinUpstream));
        }

        /**
         * @param qosAdaptiveMinUpstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMinUpstreamVariable(@Nullable Output<String> qosAdaptiveMinUpstreamVariable) {
            $.qosAdaptiveMinUpstreamVariable = qosAdaptiveMinUpstreamVariable;
            return this;
        }

        /**
         * @param qosAdaptiveMinUpstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMinUpstreamVariable(String qosAdaptiveMinUpstreamVariable) {
            return qosAdaptiveMinUpstreamVariable(Output.of(qosAdaptiveMinUpstreamVariable));
        }

        /**
         * @param qosAdaptivePeriod Adapt Period(Minutes)
         *   - Range: `1`-`720`
         *   - Default value: `15`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptivePeriod(@Nullable Output<Integer> qosAdaptivePeriod) {
            $.qosAdaptivePeriod = qosAdaptivePeriod;
            return this;
        }

        /**
         * @param qosAdaptivePeriod Adapt Period(Minutes)
         *   - Range: `1`-`720`
         *   - Default value: `15`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptivePeriod(Integer qosAdaptivePeriod) {
            return qosAdaptivePeriod(Output.of(qosAdaptivePeriod));
        }

        /**
         * @param qosAdaptivePeriodVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptivePeriodVariable(@Nullable Output<String> qosAdaptivePeriodVariable) {
            $.qosAdaptivePeriodVariable = qosAdaptivePeriodVariable;
            return this;
        }

        /**
         * @param qosAdaptivePeriodVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptivePeriodVariable(String qosAdaptivePeriodVariable) {
            return qosAdaptivePeriodVariable(Output.of(qosAdaptivePeriodVariable));
        }

        /**
         * @param qosShapingRate Shaping Rate (Kbps)
         *   - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosShapingRate(@Nullable Output<Integer> qosShapingRate) {
            $.qosShapingRate = qosShapingRate;
            return this;
        }

        /**
         * @param qosShapingRate Shaping Rate (Kbps)
         *   - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosShapingRate(Integer qosShapingRate) {
            return qosShapingRate(Output.of(qosShapingRate));
        }

        /**
         * @param qosShapingRateVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosShapingRateVariable(@Nullable Output<String> qosShapingRateVariable) {
            $.qosShapingRateVariable = qosShapingRateVariable;
            return this;
        }

        /**
         * @param qosShapingRateVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosShapingRateVariable(String qosShapingRateVariable) {
            return qosShapingRateVariable(Output.of(qosShapingRateVariable));
        }

        /**
         * @param serviceProvider Service Provider Name
         * 
         * @return builder
         * 
         */
        public Builder serviceProvider(@Nullable Output<String> serviceProvider) {
            $.serviceProvider = serviceProvider;
            return this;
        }

        /**
         * @param serviceProvider Service Provider Name
         * 
         * @return builder
         * 
         */
        public Builder serviceProvider(String serviceProvider) {
            return serviceProvider(Output.of(serviceProvider));
        }

        /**
         * @param serviceProviderVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder serviceProviderVariable(@Nullable Output<String> serviceProviderVariable) {
            $.serviceProviderVariable = serviceProviderVariable;
            return this;
        }

        /**
         * @param serviceProviderVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder serviceProviderVariable(String serviceProviderVariable) {
            return serviceProviderVariable(Output.of(serviceProviderVariable));
        }

        /**
         * @param shutdown - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder shutdown(@Nullable Output<Boolean> shutdown) {
            $.shutdown = shutdown;
            return this;
        }

        /**
         * @param shutdown - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder shutdown(Boolean shutdown) {
            return shutdown(Output.of(shutdown));
        }

        /**
         * @param shutdownVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdownVariable(@Nullable Output<String> shutdownVariable) {
            $.shutdownVariable = shutdownVariable;
            return this;
        }

        /**
         * @param shutdownVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdownVariable(String shutdownVariable) {
            return shutdownVariable(Output.of(shutdownVariable));
        }

        /**
         * @param tcpMss TCP MSS on SYN packets, in bytes
         *   - Range: `500`-`1460`
         * 
         * @return builder
         * 
         */
        public Builder tcpMss(@Nullable Output<Integer> tcpMss) {
            $.tcpMss = tcpMss;
            return this;
        }

        /**
         * @param tcpMss TCP MSS on SYN packets, in bytes
         *   - Range: `500`-`1460`
         * 
         * @return builder
         * 
         */
        public Builder tcpMss(Integer tcpMss) {
            return tcpMss(Output.of(tcpMss));
        }

        /**
         * @param tcpMssVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tcpMssVariable(@Nullable Output<String> tcpMssVariable) {
            $.tcpMssVariable = tcpMssVariable;
            return this;
        }

        /**
         * @param tcpMssVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tcpMssVariable(String tcpMssVariable) {
            return tcpMssVariable(Output.of(tcpMssVariable));
        }

        /**
         * @param tlocExtension Extends a local TLOC to a remote node only for vpn 0
         * 
         * @return builder
         * 
         */
        public Builder tlocExtension(@Nullable Output<String> tlocExtension) {
            $.tlocExtension = tlocExtension;
            return this;
        }

        /**
         * @param tlocExtension Extends a local TLOC to a remote node only for vpn 0
         * 
         * @return builder
         * 
         */
        public Builder tlocExtension(String tlocExtension) {
            return tlocExtension(Output.of(tlocExtension));
        }

        /**
         * @param tlocExtensionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tlocExtensionVariable(@Nullable Output<String> tlocExtensionVariable) {
            $.tlocExtensionVariable = tlocExtensionVariable;
            return this;
        }

        /**
         * @param tlocExtensionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tlocExtensionVariable(String tlocExtensionVariable) {
            return tlocExtensionVariable(Output.of(tlocExtensionVariable));
        }

        /**
         * @param tracker Enable tracker for this interface
         * 
         * @return builder
         * 
         */
        public Builder tracker(@Nullable Output<String> tracker) {
            $.tracker = tracker;
            return this;
        }

        /**
         * @param tracker Enable tracker for this interface
         * 
         * @return builder
         * 
         */
        public Builder tracker(String tracker) {
            return tracker(Output.of(tracker));
        }

        /**
         * @param trackerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackerVariable(@Nullable Output<String> trackerVariable) {
            $.trackerVariable = trackerVariable;
            return this;
        }

        /**
         * @param trackerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackerVariable(String trackerVariable) {
            return trackerVariable(Output.of(trackerVariable));
        }

        /**
         * @param transportWanVpnFeatureId Transport WAN VPN Feature ID
         * 
         * @return builder
         * 
         */
        public Builder transportWanVpnFeatureId(Output<String> transportWanVpnFeatureId) {
            $.transportWanVpnFeatureId = transportWanVpnFeatureId;
            return this;
        }

        /**
         * @param transportWanVpnFeatureId Transport WAN VPN Feature ID
         * 
         * @return builder
         * 
         */
        public Builder transportWanVpnFeatureId(String transportWanVpnFeatureId) {
            return transportWanVpnFeatureId(Output.of(transportWanVpnFeatureId));
        }

        /**
         * @param tunnelBandwidthPercent Tunnels Bandwidth Percent
         *   - Range: `1`-`100`
         *   - Default value: `50`
         * 
         * @return builder
         * 
         */
        public Builder tunnelBandwidthPercent(@Nullable Output<Integer> tunnelBandwidthPercent) {
            $.tunnelBandwidthPercent = tunnelBandwidthPercent;
            return this;
        }

        /**
         * @param tunnelBandwidthPercent Tunnels Bandwidth Percent
         *   - Range: `1`-`100`
         *   - Default value: `50`
         * 
         * @return builder
         * 
         */
        public Builder tunnelBandwidthPercent(Integer tunnelBandwidthPercent) {
            return tunnelBandwidthPercent(Output.of(tunnelBandwidthPercent));
        }

        /**
         * @param tunnelBandwidthPercentVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelBandwidthPercentVariable(@Nullable Output<String> tunnelBandwidthPercentVariable) {
            $.tunnelBandwidthPercentVariable = tunnelBandwidthPercentVariable;
            return this;
        }

        /**
         * @param tunnelBandwidthPercentVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelBandwidthPercentVariable(String tunnelBandwidthPercentVariable) {
            return tunnelBandwidthPercentVariable(Output.of(tunnelBandwidthPercentVariable));
        }

        /**
         * @param tunnelInterface Tunnel Interface on/off
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterface(@Nullable Output<Boolean> tunnelInterface) {
            $.tunnelInterface = tunnelInterface;
            return this;
        }

        /**
         * @param tunnelInterface Tunnel Interface on/off
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterface(Boolean tunnelInterface) {
            return tunnelInterface(Output.of(tunnelInterface));
        }

        /**
         * @param tunnelInterfaceAllowAll Allow all traffic. Overrides all other allow-service options if allow-service all is set
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowAll(@Nullable Output<Boolean> tunnelInterfaceAllowAll) {
            $.tunnelInterfaceAllowAll = tunnelInterfaceAllowAll;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowAll Allow all traffic. Overrides all other allow-service options if allow-service all is set
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowAll(Boolean tunnelInterfaceAllowAll) {
            return tunnelInterfaceAllowAll(Output.of(tunnelInterfaceAllowAll));
        }

        /**
         * @param tunnelInterfaceAllowAllVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowAllVariable(@Nullable Output<String> tunnelInterfaceAllowAllVariable) {
            $.tunnelInterfaceAllowAllVariable = tunnelInterfaceAllowAllVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowAllVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowAllVariable(String tunnelInterfaceAllowAllVariable) {
            return tunnelInterfaceAllowAllVariable(Output.of(tunnelInterfaceAllowAllVariable));
        }

        /**
         * @param tunnelInterfaceAllowBfd Allow/Deny BFD
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowBfd(@Nullable Output<Boolean> tunnelInterfaceAllowBfd) {
            $.tunnelInterfaceAllowBfd = tunnelInterfaceAllowBfd;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowBfd Allow/Deny BFD
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowBfd(Boolean tunnelInterfaceAllowBfd) {
            return tunnelInterfaceAllowBfd(Output.of(tunnelInterfaceAllowBfd));
        }

        /**
         * @param tunnelInterfaceAllowBfdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowBfdVariable(@Nullable Output<String> tunnelInterfaceAllowBfdVariable) {
            $.tunnelInterfaceAllowBfdVariable = tunnelInterfaceAllowBfdVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowBfdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowBfdVariable(String tunnelInterfaceAllowBfdVariable) {
            return tunnelInterfaceAllowBfdVariable(Output.of(tunnelInterfaceAllowBfdVariable));
        }

        /**
         * @param tunnelInterfaceAllowBgp Allow/deny BGP
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowBgp(@Nullable Output<Boolean> tunnelInterfaceAllowBgp) {
            $.tunnelInterfaceAllowBgp = tunnelInterfaceAllowBgp;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowBgp Allow/deny BGP
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowBgp(Boolean tunnelInterfaceAllowBgp) {
            return tunnelInterfaceAllowBgp(Output.of(tunnelInterfaceAllowBgp));
        }

        /**
         * @param tunnelInterfaceAllowBgpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowBgpVariable(@Nullable Output<String> tunnelInterfaceAllowBgpVariable) {
            $.tunnelInterfaceAllowBgpVariable = tunnelInterfaceAllowBgpVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowBgpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowBgpVariable(String tunnelInterfaceAllowBgpVariable) {
            return tunnelInterfaceAllowBgpVariable(Output.of(tunnelInterfaceAllowBgpVariable));
        }

        /**
         * @param tunnelInterfaceAllowDhcp Allow/Deny DHCP
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowDhcp(@Nullable Output<Boolean> tunnelInterfaceAllowDhcp) {
            $.tunnelInterfaceAllowDhcp = tunnelInterfaceAllowDhcp;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowDhcp Allow/Deny DHCP
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowDhcp(Boolean tunnelInterfaceAllowDhcp) {
            return tunnelInterfaceAllowDhcp(Output.of(tunnelInterfaceAllowDhcp));
        }

        /**
         * @param tunnelInterfaceAllowDhcpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowDhcpVariable(@Nullable Output<String> tunnelInterfaceAllowDhcpVariable) {
            $.tunnelInterfaceAllowDhcpVariable = tunnelInterfaceAllowDhcpVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowDhcpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowDhcpVariable(String tunnelInterfaceAllowDhcpVariable) {
            return tunnelInterfaceAllowDhcpVariable(Output.of(tunnelInterfaceAllowDhcpVariable));
        }

        /**
         * @param tunnelInterfaceAllowDns Allow/Deny DNS
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowDns(@Nullable Output<Boolean> tunnelInterfaceAllowDns) {
            $.tunnelInterfaceAllowDns = tunnelInterfaceAllowDns;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowDns Allow/Deny DNS
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowDns(Boolean tunnelInterfaceAllowDns) {
            return tunnelInterfaceAllowDns(Output.of(tunnelInterfaceAllowDns));
        }

        /**
         * @param tunnelInterfaceAllowDnsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowDnsVariable(@Nullable Output<String> tunnelInterfaceAllowDnsVariable) {
            $.tunnelInterfaceAllowDnsVariable = tunnelInterfaceAllowDnsVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowDnsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowDnsVariable(String tunnelInterfaceAllowDnsVariable) {
            return tunnelInterfaceAllowDnsVariable(Output.of(tunnelInterfaceAllowDnsVariable));
        }

        /**
         * @param tunnelInterfaceAllowHttps Allow/Deny HTTPS
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowHttps(@Nullable Output<Boolean> tunnelInterfaceAllowHttps) {
            $.tunnelInterfaceAllowHttps = tunnelInterfaceAllowHttps;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowHttps Allow/Deny HTTPS
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowHttps(Boolean tunnelInterfaceAllowHttps) {
            return tunnelInterfaceAllowHttps(Output.of(tunnelInterfaceAllowHttps));
        }

        /**
         * @param tunnelInterfaceAllowHttpsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowHttpsVariable(@Nullable Output<String> tunnelInterfaceAllowHttpsVariable) {
            $.tunnelInterfaceAllowHttpsVariable = tunnelInterfaceAllowHttpsVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowHttpsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowHttpsVariable(String tunnelInterfaceAllowHttpsVariable) {
            return tunnelInterfaceAllowHttpsVariable(Output.of(tunnelInterfaceAllowHttpsVariable));
        }

        /**
         * @param tunnelInterfaceAllowIcmp Allow/Deny ICMP
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowIcmp(@Nullable Output<Boolean> tunnelInterfaceAllowIcmp) {
            $.tunnelInterfaceAllowIcmp = tunnelInterfaceAllowIcmp;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowIcmp Allow/Deny ICMP
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowIcmp(Boolean tunnelInterfaceAllowIcmp) {
            return tunnelInterfaceAllowIcmp(Output.of(tunnelInterfaceAllowIcmp));
        }

        /**
         * @param tunnelInterfaceAllowIcmpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowIcmpVariable(@Nullable Output<String> tunnelInterfaceAllowIcmpVariable) {
            $.tunnelInterfaceAllowIcmpVariable = tunnelInterfaceAllowIcmpVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowIcmpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowIcmpVariable(String tunnelInterfaceAllowIcmpVariable) {
            return tunnelInterfaceAllowIcmpVariable(Output.of(tunnelInterfaceAllowIcmpVariable));
        }

        /**
         * @param tunnelInterfaceAllowNetconf Allow/Deny NETCONF
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowNetconf(@Nullable Output<Boolean> tunnelInterfaceAllowNetconf) {
            $.tunnelInterfaceAllowNetconf = tunnelInterfaceAllowNetconf;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowNetconf Allow/Deny NETCONF
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowNetconf(Boolean tunnelInterfaceAllowNetconf) {
            return tunnelInterfaceAllowNetconf(Output.of(tunnelInterfaceAllowNetconf));
        }

        /**
         * @param tunnelInterfaceAllowNetconfVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowNetconfVariable(@Nullable Output<String> tunnelInterfaceAllowNetconfVariable) {
            $.tunnelInterfaceAllowNetconfVariable = tunnelInterfaceAllowNetconfVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowNetconfVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowNetconfVariable(String tunnelInterfaceAllowNetconfVariable) {
            return tunnelInterfaceAllowNetconfVariable(Output.of(tunnelInterfaceAllowNetconfVariable));
        }

        /**
         * @param tunnelInterfaceAllowNtp Allow/Deny NTP
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowNtp(@Nullable Output<Boolean> tunnelInterfaceAllowNtp) {
            $.tunnelInterfaceAllowNtp = tunnelInterfaceAllowNtp;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowNtp Allow/Deny NTP
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowNtp(Boolean tunnelInterfaceAllowNtp) {
            return tunnelInterfaceAllowNtp(Output.of(tunnelInterfaceAllowNtp));
        }

        /**
         * @param tunnelInterfaceAllowNtpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowNtpVariable(@Nullable Output<String> tunnelInterfaceAllowNtpVariable) {
            $.tunnelInterfaceAllowNtpVariable = tunnelInterfaceAllowNtpVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowNtpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowNtpVariable(String tunnelInterfaceAllowNtpVariable) {
            return tunnelInterfaceAllowNtpVariable(Output.of(tunnelInterfaceAllowNtpVariable));
        }

        /**
         * @param tunnelInterfaceAllowOspf Allow/Deny OSPF
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowOspf(@Nullable Output<Boolean> tunnelInterfaceAllowOspf) {
            $.tunnelInterfaceAllowOspf = tunnelInterfaceAllowOspf;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowOspf Allow/Deny OSPF
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowOspf(Boolean tunnelInterfaceAllowOspf) {
            return tunnelInterfaceAllowOspf(Output.of(tunnelInterfaceAllowOspf));
        }

        /**
         * @param tunnelInterfaceAllowOspfVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowOspfVariable(@Nullable Output<String> tunnelInterfaceAllowOspfVariable) {
            $.tunnelInterfaceAllowOspfVariable = tunnelInterfaceAllowOspfVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowOspfVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowOspfVariable(String tunnelInterfaceAllowOspfVariable) {
            return tunnelInterfaceAllowOspfVariable(Output.of(tunnelInterfaceAllowOspfVariable));
        }

        /**
         * @param tunnelInterfaceAllowSnmp Allow/Deny SNMP
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowSnmp(@Nullable Output<Boolean> tunnelInterfaceAllowSnmp) {
            $.tunnelInterfaceAllowSnmp = tunnelInterfaceAllowSnmp;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowSnmp Allow/Deny SNMP
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowSnmp(Boolean tunnelInterfaceAllowSnmp) {
            return tunnelInterfaceAllowSnmp(Output.of(tunnelInterfaceAllowSnmp));
        }

        /**
         * @param tunnelInterfaceAllowSnmpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowSnmpVariable(@Nullable Output<String> tunnelInterfaceAllowSnmpVariable) {
            $.tunnelInterfaceAllowSnmpVariable = tunnelInterfaceAllowSnmpVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowSnmpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowSnmpVariable(String tunnelInterfaceAllowSnmpVariable) {
            return tunnelInterfaceAllowSnmpVariable(Output.of(tunnelInterfaceAllowSnmpVariable));
        }

        /**
         * @param tunnelInterfaceAllowSsh Allow/Deny SSH
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowSsh(@Nullable Output<Boolean> tunnelInterfaceAllowSsh) {
            $.tunnelInterfaceAllowSsh = tunnelInterfaceAllowSsh;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowSsh Allow/Deny SSH
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowSsh(Boolean tunnelInterfaceAllowSsh) {
            return tunnelInterfaceAllowSsh(Output.of(tunnelInterfaceAllowSsh));
        }

        /**
         * @param tunnelInterfaceAllowSshVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowSshVariable(@Nullable Output<String> tunnelInterfaceAllowSshVariable) {
            $.tunnelInterfaceAllowSshVariable = tunnelInterfaceAllowSshVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowSshVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowSshVariable(String tunnelInterfaceAllowSshVariable) {
            return tunnelInterfaceAllowSshVariable(Output.of(tunnelInterfaceAllowSshVariable));
        }

        /**
         * @param tunnelInterfaceAllowStun Allow/Deny STUN
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowStun(@Nullable Output<Boolean> tunnelInterfaceAllowStun) {
            $.tunnelInterfaceAllowStun = tunnelInterfaceAllowStun;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowStun Allow/Deny STUN
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowStun(Boolean tunnelInterfaceAllowStun) {
            return tunnelInterfaceAllowStun(Output.of(tunnelInterfaceAllowStun));
        }

        /**
         * @param tunnelInterfaceAllowStunVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowStunVariable(@Nullable Output<String> tunnelInterfaceAllowStunVariable) {
            $.tunnelInterfaceAllowStunVariable = tunnelInterfaceAllowStunVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowStunVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowStunVariable(String tunnelInterfaceAllowStunVariable) {
            return tunnelInterfaceAllowStunVariable(Output.of(tunnelInterfaceAllowStunVariable));
        }

        /**
         * @param tunnelInterfaceBindLoopbackTunnel Bind loopback tunnel interface to a physical interface
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceBindLoopbackTunnel(@Nullable Output<String> tunnelInterfaceBindLoopbackTunnel) {
            $.tunnelInterfaceBindLoopbackTunnel = tunnelInterfaceBindLoopbackTunnel;
            return this;
        }

        /**
         * @param tunnelInterfaceBindLoopbackTunnel Bind loopback tunnel interface to a physical interface
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceBindLoopbackTunnel(String tunnelInterfaceBindLoopbackTunnel) {
            return tunnelInterfaceBindLoopbackTunnel(Output.of(tunnelInterfaceBindLoopbackTunnel));
        }

        /**
         * @param tunnelInterfaceBindLoopbackTunnelVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceBindLoopbackTunnelVariable(@Nullable Output<String> tunnelInterfaceBindLoopbackTunnelVariable) {
            $.tunnelInterfaceBindLoopbackTunnelVariable = tunnelInterfaceBindLoopbackTunnelVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceBindLoopbackTunnelVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceBindLoopbackTunnelVariable(String tunnelInterfaceBindLoopbackTunnelVariable) {
            return tunnelInterfaceBindLoopbackTunnelVariable(Output.of(tunnelInterfaceBindLoopbackTunnelVariable));
        }

        /**
         * @param tunnelInterfaceBorder Set TLOC as border TLOC
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceBorder(@Nullable Output<Boolean> tunnelInterfaceBorder) {
            $.tunnelInterfaceBorder = tunnelInterfaceBorder;
            return this;
        }

        /**
         * @param tunnelInterfaceBorder Set TLOC as border TLOC
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceBorder(Boolean tunnelInterfaceBorder) {
            return tunnelInterfaceBorder(Output.of(tunnelInterfaceBorder));
        }

        /**
         * @param tunnelInterfaceBorderVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceBorderVariable(@Nullable Output<String> tunnelInterfaceBorderVariable) {
            $.tunnelInterfaceBorderVariable = tunnelInterfaceBorderVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceBorderVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceBorderVariable(String tunnelInterfaceBorderVariable) {
            return tunnelInterfaceBorderVariable(Output.of(tunnelInterfaceBorderVariable));
        }

        /**
         * @param tunnelInterfaceCarrier Set carrier for TLOC
         *   - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`, `carrier7`, `carrier8`
         *   - Default value: `default`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceCarrier(@Nullable Output<String> tunnelInterfaceCarrier) {
            $.tunnelInterfaceCarrier = tunnelInterfaceCarrier;
            return this;
        }

        /**
         * @param tunnelInterfaceCarrier Set carrier for TLOC
         *   - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`, `carrier7`, `carrier8`
         *   - Default value: `default`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceCarrier(String tunnelInterfaceCarrier) {
            return tunnelInterfaceCarrier(Output.of(tunnelInterfaceCarrier));
        }

        /**
         * @param tunnelInterfaceCarrierVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceCarrierVariable(@Nullable Output<String> tunnelInterfaceCarrierVariable) {
            $.tunnelInterfaceCarrierVariable = tunnelInterfaceCarrierVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceCarrierVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceCarrierVariable(String tunnelInterfaceCarrierVariable) {
            return tunnelInterfaceCarrierVariable(Output.of(tunnelInterfaceCarrierVariable));
        }

        /**
         * @param tunnelInterfaceClearDontFragment Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceClearDontFragment(@Nullable Output<Boolean> tunnelInterfaceClearDontFragment) {
            $.tunnelInterfaceClearDontFragment = tunnelInterfaceClearDontFragment;
            return this;
        }

        /**
         * @param tunnelInterfaceClearDontFragment Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceClearDontFragment(Boolean tunnelInterfaceClearDontFragment) {
            return tunnelInterfaceClearDontFragment(Output.of(tunnelInterfaceClearDontFragment));
        }

        /**
         * @param tunnelInterfaceClearDontFragmentVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceClearDontFragmentVariable(@Nullable Output<String> tunnelInterfaceClearDontFragmentVariable) {
            $.tunnelInterfaceClearDontFragmentVariable = tunnelInterfaceClearDontFragmentVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceClearDontFragmentVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceClearDontFragmentVariable(String tunnelInterfaceClearDontFragmentVariable) {
            return tunnelInterfaceClearDontFragmentVariable(Output.of(tunnelInterfaceClearDontFragmentVariable));
        }

        /**
         * @param tunnelInterfaceColor Set color for TLOC
         *   - Choices: `default`, `mpls`, `metro ethernet`, `biz internet`, `public internet`, `lte`, `3g`, `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`, `private4`, `private5`, `private6`
         *   - Default value: `mpls`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceColor(@Nullable Output<String> tunnelInterfaceColor) {
            $.tunnelInterfaceColor = tunnelInterfaceColor;
            return this;
        }

        /**
         * @param tunnelInterfaceColor Set color for TLOC
         *   - Choices: `default`, `mpls`, `metro ethernet`, `biz internet`, `public internet`, `lte`, `3g`, `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`, `private4`, `private5`, `private6`
         *   - Default value: `mpls`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceColor(String tunnelInterfaceColor) {
            return tunnelInterfaceColor(Output.of(tunnelInterfaceColor));
        }

        /**
         * @param tunnelInterfaceColorRestrict Restrict this TLOC behavior
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceColorRestrict(@Nullable Output<Boolean> tunnelInterfaceColorRestrict) {
            $.tunnelInterfaceColorRestrict = tunnelInterfaceColorRestrict;
            return this;
        }

        /**
         * @param tunnelInterfaceColorRestrict Restrict this TLOC behavior
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceColorRestrict(Boolean tunnelInterfaceColorRestrict) {
            return tunnelInterfaceColorRestrict(Output.of(tunnelInterfaceColorRestrict));
        }

        /**
         * @param tunnelInterfaceColorRestrictVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceColorRestrictVariable(@Nullable Output<String> tunnelInterfaceColorRestrictVariable) {
            $.tunnelInterfaceColorRestrictVariable = tunnelInterfaceColorRestrictVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceColorRestrictVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceColorRestrictVariable(String tunnelInterfaceColorRestrictVariable) {
            return tunnelInterfaceColorRestrictVariable(Output.of(tunnelInterfaceColorRestrictVariable));
        }

        /**
         * @param tunnelInterfaceColorVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceColorVariable(@Nullable Output<String> tunnelInterfaceColorVariable) {
            $.tunnelInterfaceColorVariable = tunnelInterfaceColorVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceColorVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceColorVariable(String tunnelInterfaceColorVariable) {
            return tunnelInterfaceColorVariable(Output.of(tunnelInterfaceColorVariable));
        }

        /**
         * @param tunnelInterfaceEncapsulations Encapsulation for TLOC
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceEncapsulations(@Nullable Output<List<TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs>> tunnelInterfaceEncapsulations) {
            $.tunnelInterfaceEncapsulations = tunnelInterfaceEncapsulations;
            return this;
        }

        /**
         * @param tunnelInterfaceEncapsulations Encapsulation for TLOC
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceEncapsulations(List<TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs> tunnelInterfaceEncapsulations) {
            return tunnelInterfaceEncapsulations(Output.of(tunnelInterfaceEncapsulations));
        }

        /**
         * @param tunnelInterfaceEncapsulations Encapsulation for TLOC
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceEncapsulations(TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs... tunnelInterfaceEncapsulations) {
            return tunnelInterfaceEncapsulations(List.of(tunnelInterfaceEncapsulations));
        }

        /**
         * @param tunnelInterfaceExcludeControllerGroupListVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceExcludeControllerGroupListVariable(@Nullable Output<String> tunnelInterfaceExcludeControllerGroupListVariable) {
            $.tunnelInterfaceExcludeControllerGroupListVariable = tunnelInterfaceExcludeControllerGroupListVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceExcludeControllerGroupListVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceExcludeControllerGroupListVariable(String tunnelInterfaceExcludeControllerGroupListVariable) {
            return tunnelInterfaceExcludeControllerGroupListVariable(Output.of(tunnelInterfaceExcludeControllerGroupListVariable));
        }

        /**
         * @param tunnelInterfaceExcludeControllerGroupLists Exclude the following controller groups defined in this list.
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceExcludeControllerGroupLists(@Nullable Output<List<Integer>> tunnelInterfaceExcludeControllerGroupLists) {
            $.tunnelInterfaceExcludeControllerGroupLists = tunnelInterfaceExcludeControllerGroupLists;
            return this;
        }

        /**
         * @param tunnelInterfaceExcludeControllerGroupLists Exclude the following controller groups defined in this list.
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceExcludeControllerGroupLists(List<Integer> tunnelInterfaceExcludeControllerGroupLists) {
            return tunnelInterfaceExcludeControllerGroupLists(Output.of(tunnelInterfaceExcludeControllerGroupLists));
        }

        /**
         * @param tunnelInterfaceExcludeControllerGroupLists Exclude the following controller groups defined in this list.
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceExcludeControllerGroupLists(Integer... tunnelInterfaceExcludeControllerGroupLists) {
            return tunnelInterfaceExcludeControllerGroupLists(List.of(tunnelInterfaceExcludeControllerGroupLists));
        }

        /**
         * @param tunnelInterfaceGroups List of groups
         *   - Range: `1`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceGroups(@Nullable Output<Integer> tunnelInterfaceGroups) {
            $.tunnelInterfaceGroups = tunnelInterfaceGroups;
            return this;
        }

        /**
         * @param tunnelInterfaceGroups List of groups
         *   - Range: `1`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceGroups(Integer tunnelInterfaceGroups) {
            return tunnelInterfaceGroups(Output.of(tunnelInterfaceGroups));
        }

        /**
         * @param tunnelInterfaceGroupsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceGroupsVariable(@Nullable Output<String> tunnelInterfaceGroupsVariable) {
            $.tunnelInterfaceGroupsVariable = tunnelInterfaceGroupsVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceGroupsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceGroupsVariable(String tunnelInterfaceGroupsVariable) {
            return tunnelInterfaceGroupsVariable(Output.of(tunnelInterfaceGroupsVariable));
        }

        /**
         * @param tunnelInterfaceHelloInterval Set time period of control hello packets &lt;100..600000&gt; milli seconds
         *   - Range: `100`-`600000`
         *   - Default value: `1000`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceHelloInterval(@Nullable Output<Integer> tunnelInterfaceHelloInterval) {
            $.tunnelInterfaceHelloInterval = tunnelInterfaceHelloInterval;
            return this;
        }

        /**
         * @param tunnelInterfaceHelloInterval Set time period of control hello packets &lt;100..600000&gt; milli seconds
         *   - Range: `100`-`600000`
         *   - Default value: `1000`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceHelloInterval(Integer tunnelInterfaceHelloInterval) {
            return tunnelInterfaceHelloInterval(Output.of(tunnelInterfaceHelloInterval));
        }

        /**
         * @param tunnelInterfaceHelloIntervalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceHelloIntervalVariable(@Nullable Output<String> tunnelInterfaceHelloIntervalVariable) {
            $.tunnelInterfaceHelloIntervalVariable = tunnelInterfaceHelloIntervalVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceHelloIntervalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceHelloIntervalVariable(String tunnelInterfaceHelloIntervalVariable) {
            return tunnelInterfaceHelloIntervalVariable(Output.of(tunnelInterfaceHelloIntervalVariable));
        }

        /**
         * @param tunnelInterfaceHelloTolerance Set tolerance of control hello packets &lt;12..6000&gt; seconds
         *   - Range: `12`-`6000`
         *   - Default value: `12`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceHelloTolerance(@Nullable Output<Integer> tunnelInterfaceHelloTolerance) {
            $.tunnelInterfaceHelloTolerance = tunnelInterfaceHelloTolerance;
            return this;
        }

        /**
         * @param tunnelInterfaceHelloTolerance Set tolerance of control hello packets &lt;12..6000&gt; seconds
         *   - Range: `12`-`6000`
         *   - Default value: `12`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceHelloTolerance(Integer tunnelInterfaceHelloTolerance) {
            return tunnelInterfaceHelloTolerance(Output.of(tunnelInterfaceHelloTolerance));
        }

        /**
         * @param tunnelInterfaceHelloToleranceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceHelloToleranceVariable(@Nullable Output<String> tunnelInterfaceHelloToleranceVariable) {
            $.tunnelInterfaceHelloToleranceVariable = tunnelInterfaceHelloToleranceVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceHelloToleranceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceHelloToleranceVariable(String tunnelInterfaceHelloToleranceVariable) {
            return tunnelInterfaceHelloToleranceVariable(Output.of(tunnelInterfaceHelloToleranceVariable));
        }

        /**
         * @param tunnelInterfaceLastResortCircuit Set TLOC as last resort
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceLastResortCircuit(@Nullable Output<Boolean> tunnelInterfaceLastResortCircuit) {
            $.tunnelInterfaceLastResortCircuit = tunnelInterfaceLastResortCircuit;
            return this;
        }

        /**
         * @param tunnelInterfaceLastResortCircuit Set TLOC as last resort
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceLastResortCircuit(Boolean tunnelInterfaceLastResortCircuit) {
            return tunnelInterfaceLastResortCircuit(Output.of(tunnelInterfaceLastResortCircuit));
        }

        /**
         * @param tunnelInterfaceLastResortCircuitVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceLastResortCircuitVariable(@Nullable Output<String> tunnelInterfaceLastResortCircuitVariable) {
            $.tunnelInterfaceLastResortCircuitVariable = tunnelInterfaceLastResortCircuitVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceLastResortCircuitVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceLastResortCircuitVariable(String tunnelInterfaceLastResortCircuitVariable) {
            return tunnelInterfaceLastResortCircuitVariable(Output.of(tunnelInterfaceLastResortCircuitVariable));
        }

        /**
         * @param tunnelInterfaceLowBandwidthLink Set the interface as a low-bandwidth circuit
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceLowBandwidthLink(@Nullable Output<Boolean> tunnelInterfaceLowBandwidthLink) {
            $.tunnelInterfaceLowBandwidthLink = tunnelInterfaceLowBandwidthLink;
            return this;
        }

        /**
         * @param tunnelInterfaceLowBandwidthLink Set the interface as a low-bandwidth circuit
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceLowBandwidthLink(Boolean tunnelInterfaceLowBandwidthLink) {
            return tunnelInterfaceLowBandwidthLink(Output.of(tunnelInterfaceLowBandwidthLink));
        }

        /**
         * @param tunnelInterfaceLowBandwidthLinkVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceLowBandwidthLinkVariable(@Nullable Output<String> tunnelInterfaceLowBandwidthLinkVariable) {
            $.tunnelInterfaceLowBandwidthLinkVariable = tunnelInterfaceLowBandwidthLinkVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceLowBandwidthLinkVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceLowBandwidthLinkVariable(String tunnelInterfaceLowBandwidthLinkVariable) {
            return tunnelInterfaceLowBandwidthLinkVariable(Output.of(tunnelInterfaceLowBandwidthLinkVariable));
        }

        /**
         * @param tunnelInterfaceMaxControlConnections Maximum Control Connections
         *   - Range: `0`-`100`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceMaxControlConnections(@Nullable Output<Integer> tunnelInterfaceMaxControlConnections) {
            $.tunnelInterfaceMaxControlConnections = tunnelInterfaceMaxControlConnections;
            return this;
        }

        /**
         * @param tunnelInterfaceMaxControlConnections Maximum Control Connections
         *   - Range: `0`-`100`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceMaxControlConnections(Integer tunnelInterfaceMaxControlConnections) {
            return tunnelInterfaceMaxControlConnections(Output.of(tunnelInterfaceMaxControlConnections));
        }

        /**
         * @param tunnelInterfaceMaxControlConnectionsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceMaxControlConnectionsVariable(@Nullable Output<String> tunnelInterfaceMaxControlConnectionsVariable) {
            $.tunnelInterfaceMaxControlConnectionsVariable = tunnelInterfaceMaxControlConnectionsVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceMaxControlConnectionsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceMaxControlConnectionsVariable(String tunnelInterfaceMaxControlConnectionsVariable) {
            return tunnelInterfaceMaxControlConnectionsVariable(Output.of(tunnelInterfaceMaxControlConnectionsVariable));
        }

        /**
         * @param tunnelInterfaceNatRefreshInterval Set time period of nat refresh packets &lt;1...60&gt; seconds
         *   - Range: `1`-`60`
         *   - Default value: `5`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceNatRefreshInterval(@Nullable Output<Integer> tunnelInterfaceNatRefreshInterval) {
            $.tunnelInterfaceNatRefreshInterval = tunnelInterfaceNatRefreshInterval;
            return this;
        }

        /**
         * @param tunnelInterfaceNatRefreshInterval Set time period of nat refresh packets &lt;1...60&gt; seconds
         *   - Range: `1`-`60`
         *   - Default value: `5`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceNatRefreshInterval(Integer tunnelInterfaceNatRefreshInterval) {
            return tunnelInterfaceNatRefreshInterval(Output.of(tunnelInterfaceNatRefreshInterval));
        }

        /**
         * @param tunnelInterfaceNatRefreshIntervalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceNatRefreshIntervalVariable(@Nullable Output<String> tunnelInterfaceNatRefreshIntervalVariable) {
            $.tunnelInterfaceNatRefreshIntervalVariable = tunnelInterfaceNatRefreshIntervalVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceNatRefreshIntervalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceNatRefreshIntervalVariable(String tunnelInterfaceNatRefreshIntervalVariable) {
            return tunnelInterfaceNatRefreshIntervalVariable(Output.of(tunnelInterfaceNatRefreshIntervalVariable));
        }

        /**
         * @param tunnelInterfaceNetworkBroadcast Accept and respond to network-prefix-directed broadcasts
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceNetworkBroadcast(@Nullable Output<Boolean> tunnelInterfaceNetworkBroadcast) {
            $.tunnelInterfaceNetworkBroadcast = tunnelInterfaceNetworkBroadcast;
            return this;
        }

        /**
         * @param tunnelInterfaceNetworkBroadcast Accept and respond to network-prefix-directed broadcasts
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceNetworkBroadcast(Boolean tunnelInterfaceNetworkBroadcast) {
            return tunnelInterfaceNetworkBroadcast(Output.of(tunnelInterfaceNetworkBroadcast));
        }

        /**
         * @param tunnelInterfaceNetworkBroadcastVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceNetworkBroadcastVariable(@Nullable Output<String> tunnelInterfaceNetworkBroadcastVariable) {
            $.tunnelInterfaceNetworkBroadcastVariable = tunnelInterfaceNetworkBroadcastVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceNetworkBroadcastVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceNetworkBroadcastVariable(String tunnelInterfaceNetworkBroadcastVariable) {
            return tunnelInterfaceNetworkBroadcastVariable(Output.of(tunnelInterfaceNetworkBroadcastVariable));
        }

        /**
         * @param tunnelInterfacePortHop Disallow port hopping on the tunnel interface
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfacePortHop(@Nullable Output<Boolean> tunnelInterfacePortHop) {
            $.tunnelInterfacePortHop = tunnelInterfacePortHop;
            return this;
        }

        /**
         * @param tunnelInterfacePortHop Disallow port hopping on the tunnel interface
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfacePortHop(Boolean tunnelInterfacePortHop) {
            return tunnelInterfacePortHop(Output.of(tunnelInterfacePortHop));
        }

        /**
         * @param tunnelInterfacePortHopVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfacePortHopVariable(@Nullable Output<String> tunnelInterfacePortHopVariable) {
            $.tunnelInterfacePortHopVariable = tunnelInterfacePortHopVariable;
            return this;
        }

        /**
         * @param tunnelInterfacePortHopVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfacePortHopVariable(String tunnelInterfacePortHopVariable) {
            return tunnelInterfacePortHopVariable(Output.of(tunnelInterfacePortHopVariable));
        }

        /**
         * @param tunnelInterfaceTunnelTcpMss Tunnel TCP MSS on SYN packets, in bytes
         *   - Range: `500`-`1460`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceTunnelTcpMss(@Nullable Output<Integer> tunnelInterfaceTunnelTcpMss) {
            $.tunnelInterfaceTunnelTcpMss = tunnelInterfaceTunnelTcpMss;
            return this;
        }

        /**
         * @param tunnelInterfaceTunnelTcpMss Tunnel TCP MSS on SYN packets, in bytes
         *   - Range: `500`-`1460`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceTunnelTcpMss(Integer tunnelInterfaceTunnelTcpMss) {
            return tunnelInterfaceTunnelTcpMss(Output.of(tunnelInterfaceTunnelTcpMss));
        }

        /**
         * @param tunnelInterfaceTunnelTcpMssVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceTunnelTcpMssVariable(@Nullable Output<String> tunnelInterfaceTunnelTcpMssVariable) {
            $.tunnelInterfaceTunnelTcpMssVariable = tunnelInterfaceTunnelTcpMssVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceTunnelTcpMssVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceTunnelTcpMssVariable(String tunnelInterfaceTunnelTcpMssVariable) {
            return tunnelInterfaceTunnelTcpMssVariable(Output.of(tunnelInterfaceTunnelTcpMssVariable));
        }

        /**
         * @param tunnelInterfaceVbondAsStunServer Put this wan interface in STUN mode only
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceVbondAsStunServer(@Nullable Output<Boolean> tunnelInterfaceVbondAsStunServer) {
            $.tunnelInterfaceVbondAsStunServer = tunnelInterfaceVbondAsStunServer;
            return this;
        }

        /**
         * @param tunnelInterfaceVbondAsStunServer Put this wan interface in STUN mode only
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceVbondAsStunServer(Boolean tunnelInterfaceVbondAsStunServer) {
            return tunnelInterfaceVbondAsStunServer(Output.of(tunnelInterfaceVbondAsStunServer));
        }

        /**
         * @param tunnelInterfaceVbondAsStunServerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceVbondAsStunServerVariable(@Nullable Output<String> tunnelInterfaceVbondAsStunServerVariable) {
            $.tunnelInterfaceVbondAsStunServerVariable = tunnelInterfaceVbondAsStunServerVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceVbondAsStunServerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceVbondAsStunServerVariable(String tunnelInterfaceVbondAsStunServerVariable) {
            return tunnelInterfaceVbondAsStunServerVariable(Output.of(tunnelInterfaceVbondAsStunServerVariable));
        }

        /**
         * @param tunnelInterfaceVmanageConnectionPreference Set interface preference for control connection to vManage &lt;0..8&gt;
         *   - Range: `0`-`8`
         *   - Default value: `5`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceVmanageConnectionPreference(@Nullable Output<Integer> tunnelInterfaceVmanageConnectionPreference) {
            $.tunnelInterfaceVmanageConnectionPreference = tunnelInterfaceVmanageConnectionPreference;
            return this;
        }

        /**
         * @param tunnelInterfaceVmanageConnectionPreference Set interface preference for control connection to vManage &lt;0..8&gt;
         *   - Range: `0`-`8`
         *   - Default value: `5`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceVmanageConnectionPreference(Integer tunnelInterfaceVmanageConnectionPreference) {
            return tunnelInterfaceVmanageConnectionPreference(Output.of(tunnelInterfaceVmanageConnectionPreference));
        }

        /**
         * @param tunnelInterfaceVmanageConnectionPreferenceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceVmanageConnectionPreferenceVariable(@Nullable Output<String> tunnelInterfaceVmanageConnectionPreferenceVariable) {
            $.tunnelInterfaceVmanageConnectionPreferenceVariable = tunnelInterfaceVmanageConnectionPreferenceVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceVmanageConnectionPreferenceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceVmanageConnectionPreferenceVariable(String tunnelInterfaceVmanageConnectionPreferenceVariable) {
            return tunnelInterfaceVmanageConnectionPreferenceVariable(Output.of(tunnelInterfaceVmanageConnectionPreferenceVariable));
        }

        /**
         * @param tunnelQosMode Set tunnel QoS mode
         *   - Choices: `hub`, `spoke`
         * 
         * @return builder
         * 
         */
        public Builder tunnelQosMode(@Nullable Output<String> tunnelQosMode) {
            $.tunnelQosMode = tunnelQosMode;
            return this;
        }

        /**
         * @param tunnelQosMode Set tunnel QoS mode
         *   - Choices: `hub`, `spoke`
         * 
         * @return builder
         * 
         */
        public Builder tunnelQosMode(String tunnelQosMode) {
            return tunnelQosMode(Output.of(tunnelQosMode));
        }

        /**
         * @param tunnelQosModeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelQosModeVariable(@Nullable Output<String> tunnelQosModeVariable) {
            $.tunnelQosModeVariable = tunnelQosModeVariable;
            return this;
        }

        /**
         * @param tunnelQosModeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelQosModeVariable(String tunnelQosModeVariable) {
            return tunnelQosModeVariable(Output.of(tunnelQosModeVariable));
        }

        public TransportWanVpnInterfaceCellularFeatureArgs build() {
            if ($.featureProfileId == null) {
                throw new MissingRequiredPropertyException("TransportWanVpnInterfaceCellularFeatureArgs", "featureProfileId");
            }
            if ($.transportWanVpnFeatureId == null) {
                throw new MissingRequiredPropertyException("TransportWanVpnInterfaceCellularFeatureArgs", "transportWanVpnFeatureId");
            }
            return $;
        }
    }

}
