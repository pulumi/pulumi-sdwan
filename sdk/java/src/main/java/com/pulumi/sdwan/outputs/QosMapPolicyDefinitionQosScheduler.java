// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class QosMapPolicyDefinitionQosScheduler {
    /**
     * @return Bandwidth percent
     *   - Range: `0`-`100`
     * 
     */
    private Integer bandwidthPercent;
    /**
     * @return Buffer percent
     *   - Range: `0`-`100`
     * 
     */
    private Integer bufferPercent;
    /**
     * @return Burst size
     *   - Range: `5000`-`10000000`
     * 
     */
    private @Nullable Integer burst;
    /**
     * @return Class map ID
     * 
     */
    private String classMapId;
    /**
     * @return Class map version
     * 
     */
    private @Nullable Integer classMapVersion;
    /**
     * @return Drop type
     *   - Choices: `tail-drop`, `red-drop`
     * 
     */
    private String dropType;
    /**
     * @return Queue number
     *   - Range: `0`-`7`
     * 
     */
    private Integer queue;
    /**
     * @return Scheduling type
     *   - Choices: `llq`, `wrr`
     * 
     */
    private String schedulingType;

    private QosMapPolicyDefinitionQosScheduler() {}
    /**
     * @return Bandwidth percent
     *   - Range: `0`-`100`
     * 
     */
    public Integer bandwidthPercent() {
        return this.bandwidthPercent;
    }
    /**
     * @return Buffer percent
     *   - Range: `0`-`100`
     * 
     */
    public Integer bufferPercent() {
        return this.bufferPercent;
    }
    /**
     * @return Burst size
     *   - Range: `5000`-`10000000`
     * 
     */
    public Optional<Integer> burst() {
        return Optional.ofNullable(this.burst);
    }
    /**
     * @return Class map ID
     * 
     */
    public String classMapId() {
        return this.classMapId;
    }
    /**
     * @return Class map version
     * 
     */
    public Optional<Integer> classMapVersion() {
        return Optional.ofNullable(this.classMapVersion);
    }
    /**
     * @return Drop type
     *   - Choices: `tail-drop`, `red-drop`
     * 
     */
    public String dropType() {
        return this.dropType;
    }
    /**
     * @return Queue number
     *   - Range: `0`-`7`
     * 
     */
    public Integer queue() {
        return this.queue;
    }
    /**
     * @return Scheduling type
     *   - Choices: `llq`, `wrr`
     * 
     */
    public String schedulingType() {
        return this.schedulingType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QosMapPolicyDefinitionQosScheduler defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer bandwidthPercent;
        private Integer bufferPercent;
        private @Nullable Integer burst;
        private String classMapId;
        private @Nullable Integer classMapVersion;
        private String dropType;
        private Integer queue;
        private String schedulingType;
        public Builder() {}
        public Builder(QosMapPolicyDefinitionQosScheduler defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidthPercent = defaults.bandwidthPercent;
    	      this.bufferPercent = defaults.bufferPercent;
    	      this.burst = defaults.burst;
    	      this.classMapId = defaults.classMapId;
    	      this.classMapVersion = defaults.classMapVersion;
    	      this.dropType = defaults.dropType;
    	      this.queue = defaults.queue;
    	      this.schedulingType = defaults.schedulingType;
        }

        @CustomType.Setter
        public Builder bandwidthPercent(Integer bandwidthPercent) {
            if (bandwidthPercent == null) {
              throw new MissingRequiredPropertyException("QosMapPolicyDefinitionQosScheduler", "bandwidthPercent");
            }
            this.bandwidthPercent = bandwidthPercent;
            return this;
        }
        @CustomType.Setter
        public Builder bufferPercent(Integer bufferPercent) {
            if (bufferPercent == null) {
              throw new MissingRequiredPropertyException("QosMapPolicyDefinitionQosScheduler", "bufferPercent");
            }
            this.bufferPercent = bufferPercent;
            return this;
        }
        @CustomType.Setter
        public Builder burst(@Nullable Integer burst) {

            this.burst = burst;
            return this;
        }
        @CustomType.Setter
        public Builder classMapId(String classMapId) {
            if (classMapId == null) {
              throw new MissingRequiredPropertyException("QosMapPolicyDefinitionQosScheduler", "classMapId");
            }
            this.classMapId = classMapId;
            return this;
        }
        @CustomType.Setter
        public Builder classMapVersion(@Nullable Integer classMapVersion) {

            this.classMapVersion = classMapVersion;
            return this;
        }
        @CustomType.Setter
        public Builder dropType(String dropType) {
            if (dropType == null) {
              throw new MissingRequiredPropertyException("QosMapPolicyDefinitionQosScheduler", "dropType");
            }
            this.dropType = dropType;
            return this;
        }
        @CustomType.Setter
        public Builder queue(Integer queue) {
            if (queue == null) {
              throw new MissingRequiredPropertyException("QosMapPolicyDefinitionQosScheduler", "queue");
            }
            this.queue = queue;
            return this;
        }
        @CustomType.Setter
        public Builder schedulingType(String schedulingType) {
            if (schedulingType == null) {
              throw new MissingRequiredPropertyException("QosMapPolicyDefinitionQosScheduler", "schedulingType");
            }
            this.schedulingType = schedulingType;
            return this;
        }
        public QosMapPolicyDefinitionQosScheduler build() {
            final var _resultValue = new QosMapPolicyDefinitionQosScheduler();
            _resultValue.bandwidthPercent = bandwidthPercent;
            _resultValue.bufferPercent = bufferPercent;
            _resultValue.burst = burst;
            _resultValue.classMapId = classMapId;
            _resultValue.classMapVersion = classMapVersion;
            _resultValue.dropType = dropType;
            _resultValue.queue = queue;
            _resultValue.schedulingType = schedulingType;
            return _resultValue;
        }
    }
}
