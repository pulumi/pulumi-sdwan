// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetLocalizedPolicyDefinition;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLocalizedPolicyResult {
    /**
     * @return IPv4 application visibility
     * 
     */
    private Boolean applicationVisibilityIpv4;
    /**
     * @return IPv6 application visibility
     * 
     */
    private Boolean applicationVisibilityIpv6;
    /**
     * @return Cloud QoS
     * 
     */
    private Boolean cloudQos;
    /**
     * @return Cloud QoS service side
     * 
     */
    private Boolean cloudQosServiceSide;
    /**
     * @return List of policy definitions
     * 
     */
    private List<GetLocalizedPolicyDefinition> definitions;
    /**
     * @return The description of the localized policy
     * 
     */
    private String description;
    /**
     * @return IPv4 flow visibility
     * 
     */
    private Boolean flowVisibilityIpv4;
    /**
     * @return IPv6 flow visibility
     * 
     */
    private Boolean flowVisibilityIpv6;
    /**
     * @return The id of the object
     * 
     */
    private String id;
    /**
     * @return Implicit ACL logging
     * 
     */
    private Boolean implicitAclLogging;
    /**
     * @return IPv4 visibility cache entries
     * 
     */
    private Integer ipv4VisibilityCacheEntries;
    /**
     * @return IPv6 visibility cache entries
     * 
     */
    private Integer ipv6VisibilityCacheEntries;
    /**
     * @return Log frequency
     * 
     */
    private Integer logFrequency;
    /**
     * @return The name of the localized policy
     * 
     */
    private String name;
    /**
     * @return The version of the object
     * 
     */
    private Integer version;

    private GetLocalizedPolicyResult() {}
    /**
     * @return IPv4 application visibility
     * 
     */
    public Boolean applicationVisibilityIpv4() {
        return this.applicationVisibilityIpv4;
    }
    /**
     * @return IPv6 application visibility
     * 
     */
    public Boolean applicationVisibilityIpv6() {
        return this.applicationVisibilityIpv6;
    }
    /**
     * @return Cloud QoS
     * 
     */
    public Boolean cloudQos() {
        return this.cloudQos;
    }
    /**
     * @return Cloud QoS service side
     * 
     */
    public Boolean cloudQosServiceSide() {
        return this.cloudQosServiceSide;
    }
    /**
     * @return List of policy definitions
     * 
     */
    public List<GetLocalizedPolicyDefinition> definitions() {
        return this.definitions;
    }
    /**
     * @return The description of the localized policy
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return IPv4 flow visibility
     * 
     */
    public Boolean flowVisibilityIpv4() {
        return this.flowVisibilityIpv4;
    }
    /**
     * @return IPv6 flow visibility
     * 
     */
    public Boolean flowVisibilityIpv6() {
        return this.flowVisibilityIpv6;
    }
    /**
     * @return The id of the object
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Implicit ACL logging
     * 
     */
    public Boolean implicitAclLogging() {
        return this.implicitAclLogging;
    }
    /**
     * @return IPv4 visibility cache entries
     * 
     */
    public Integer ipv4VisibilityCacheEntries() {
        return this.ipv4VisibilityCacheEntries;
    }
    /**
     * @return IPv6 visibility cache entries
     * 
     */
    public Integer ipv6VisibilityCacheEntries() {
        return this.ipv6VisibilityCacheEntries;
    }
    /**
     * @return Log frequency
     * 
     */
    public Integer logFrequency() {
        return this.logFrequency;
    }
    /**
     * @return The name of the localized policy
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The version of the object
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLocalizedPolicyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean applicationVisibilityIpv4;
        private Boolean applicationVisibilityIpv6;
        private Boolean cloudQos;
        private Boolean cloudQosServiceSide;
        private List<GetLocalizedPolicyDefinition> definitions;
        private String description;
        private Boolean flowVisibilityIpv4;
        private Boolean flowVisibilityIpv6;
        private String id;
        private Boolean implicitAclLogging;
        private Integer ipv4VisibilityCacheEntries;
        private Integer ipv6VisibilityCacheEntries;
        private Integer logFrequency;
        private String name;
        private Integer version;
        public Builder() {}
        public Builder(GetLocalizedPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationVisibilityIpv4 = defaults.applicationVisibilityIpv4;
    	      this.applicationVisibilityIpv6 = defaults.applicationVisibilityIpv6;
    	      this.cloudQos = defaults.cloudQos;
    	      this.cloudQosServiceSide = defaults.cloudQosServiceSide;
    	      this.definitions = defaults.definitions;
    	      this.description = defaults.description;
    	      this.flowVisibilityIpv4 = defaults.flowVisibilityIpv4;
    	      this.flowVisibilityIpv6 = defaults.flowVisibilityIpv6;
    	      this.id = defaults.id;
    	      this.implicitAclLogging = defaults.implicitAclLogging;
    	      this.ipv4VisibilityCacheEntries = defaults.ipv4VisibilityCacheEntries;
    	      this.ipv6VisibilityCacheEntries = defaults.ipv6VisibilityCacheEntries;
    	      this.logFrequency = defaults.logFrequency;
    	      this.name = defaults.name;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder applicationVisibilityIpv4(Boolean applicationVisibilityIpv4) {
            if (applicationVisibilityIpv4 == null) {
              throw new MissingRequiredPropertyException("GetLocalizedPolicyResult", "applicationVisibilityIpv4");
            }
            this.applicationVisibilityIpv4 = applicationVisibilityIpv4;
            return this;
        }
        @CustomType.Setter
        public Builder applicationVisibilityIpv6(Boolean applicationVisibilityIpv6) {
            if (applicationVisibilityIpv6 == null) {
              throw new MissingRequiredPropertyException("GetLocalizedPolicyResult", "applicationVisibilityIpv6");
            }
            this.applicationVisibilityIpv6 = applicationVisibilityIpv6;
            return this;
        }
        @CustomType.Setter
        public Builder cloudQos(Boolean cloudQos) {
            if (cloudQos == null) {
              throw new MissingRequiredPropertyException("GetLocalizedPolicyResult", "cloudQos");
            }
            this.cloudQos = cloudQos;
            return this;
        }
        @CustomType.Setter
        public Builder cloudQosServiceSide(Boolean cloudQosServiceSide) {
            if (cloudQosServiceSide == null) {
              throw new MissingRequiredPropertyException("GetLocalizedPolicyResult", "cloudQosServiceSide");
            }
            this.cloudQosServiceSide = cloudQosServiceSide;
            return this;
        }
        @CustomType.Setter
        public Builder definitions(List<GetLocalizedPolicyDefinition> definitions) {
            if (definitions == null) {
              throw new MissingRequiredPropertyException("GetLocalizedPolicyResult", "definitions");
            }
            this.definitions = definitions;
            return this;
        }
        public Builder definitions(GetLocalizedPolicyDefinition... definitions) {
            return definitions(List.of(definitions));
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetLocalizedPolicyResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder flowVisibilityIpv4(Boolean flowVisibilityIpv4) {
            if (flowVisibilityIpv4 == null) {
              throw new MissingRequiredPropertyException("GetLocalizedPolicyResult", "flowVisibilityIpv4");
            }
            this.flowVisibilityIpv4 = flowVisibilityIpv4;
            return this;
        }
        @CustomType.Setter
        public Builder flowVisibilityIpv6(Boolean flowVisibilityIpv6) {
            if (flowVisibilityIpv6 == null) {
              throw new MissingRequiredPropertyException("GetLocalizedPolicyResult", "flowVisibilityIpv6");
            }
            this.flowVisibilityIpv6 = flowVisibilityIpv6;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLocalizedPolicyResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder implicitAclLogging(Boolean implicitAclLogging) {
            if (implicitAclLogging == null) {
              throw new MissingRequiredPropertyException("GetLocalizedPolicyResult", "implicitAclLogging");
            }
            this.implicitAclLogging = implicitAclLogging;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4VisibilityCacheEntries(Integer ipv4VisibilityCacheEntries) {
            if (ipv4VisibilityCacheEntries == null) {
              throw new MissingRequiredPropertyException("GetLocalizedPolicyResult", "ipv4VisibilityCacheEntries");
            }
            this.ipv4VisibilityCacheEntries = ipv4VisibilityCacheEntries;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6VisibilityCacheEntries(Integer ipv6VisibilityCacheEntries) {
            if (ipv6VisibilityCacheEntries == null) {
              throw new MissingRequiredPropertyException("GetLocalizedPolicyResult", "ipv6VisibilityCacheEntries");
            }
            this.ipv6VisibilityCacheEntries = ipv6VisibilityCacheEntries;
            return this;
        }
        @CustomType.Setter
        public Builder logFrequency(Integer logFrequency) {
            if (logFrequency == null) {
              throw new MissingRequiredPropertyException("GetLocalizedPolicyResult", "logFrequency");
            }
            this.logFrequency = logFrequency;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetLocalizedPolicyResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetLocalizedPolicyResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetLocalizedPolicyResult build() {
            final var _resultValue = new GetLocalizedPolicyResult();
            _resultValue.applicationVisibilityIpv4 = applicationVisibilityIpv4;
            _resultValue.applicationVisibilityIpv6 = applicationVisibilityIpv6;
            _resultValue.cloudQos = cloudQos;
            _resultValue.cloudQosServiceSide = cloudQosServiceSide;
            _resultValue.definitions = definitions;
            _resultValue.description = description;
            _resultValue.flowVisibilityIpv4 = flowVisibilityIpv4;
            _resultValue.flowVisibilityIpv6 = flowVisibilityIpv6;
            _resultValue.id = id;
            _resultValue.implicitAclLogging = implicitAclLogging;
            _resultValue.ipv4VisibilityCacheEntries = ipv4VisibilityCacheEntries;
            _resultValue.ipv6VisibilityCacheEntries = ipv6VisibilityCacheEntries;
            _resultValue.logFrequency = logFrequency;
            _resultValue.name = name;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
