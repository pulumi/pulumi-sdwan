// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.CustomControlTopologyPolicyDefinitionSequenceArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomControlTopologyPolicyDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomControlTopologyPolicyDefinitionArgs Empty = new CustomControlTopologyPolicyDefinitionArgs();

    /**
     * Default action, either `accept` or `reject` - Choices: `accept`, `reject`
     * 
     */
    @Import(name="defaultAction")
    private @Nullable Output<String> defaultAction;

    /**
     * @return Default action, either `accept` or `reject` - Choices: `accept`, `reject`
     * 
     */
    public Optional<Output<String>> defaultAction() {
        return Optional.ofNullable(this.defaultAction);
    }

    /**
     * The description of the policy definition
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return The description of the policy definition
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * The name of the policy definition
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the policy definition
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * List of sequences
     * 
     */
    @Import(name="sequences", required=true)
    private Output<List<CustomControlTopologyPolicyDefinitionSequenceArgs>> sequences;

    /**
     * @return List of sequences
     * 
     */
    public Output<List<CustomControlTopologyPolicyDefinitionSequenceArgs>> sequences() {
        return this.sequences;
    }

    private CustomControlTopologyPolicyDefinitionArgs() {}

    private CustomControlTopologyPolicyDefinitionArgs(CustomControlTopologyPolicyDefinitionArgs $) {
        this.defaultAction = $.defaultAction;
        this.description = $.description;
        this.name = $.name;
        this.sequences = $.sequences;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomControlTopologyPolicyDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomControlTopologyPolicyDefinitionArgs $;

        public Builder() {
            $ = new CustomControlTopologyPolicyDefinitionArgs();
        }

        public Builder(CustomControlTopologyPolicyDefinitionArgs defaults) {
            $ = new CustomControlTopologyPolicyDefinitionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultAction Default action, either `accept` or `reject` - Choices: `accept`, `reject`
         * 
         * @return builder
         * 
         */
        public Builder defaultAction(@Nullable Output<String> defaultAction) {
            $.defaultAction = defaultAction;
            return this;
        }

        /**
         * @param defaultAction Default action, either `accept` or `reject` - Choices: `accept`, `reject`
         * 
         * @return builder
         * 
         */
        public Builder defaultAction(String defaultAction) {
            return defaultAction(Output.of(defaultAction));
        }

        /**
         * @param description The description of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The name of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param sequences List of sequences
         * 
         * @return builder
         * 
         */
        public Builder sequences(Output<List<CustomControlTopologyPolicyDefinitionSequenceArgs>> sequences) {
            $.sequences = sequences;
            return this;
        }

        /**
         * @param sequences List of sequences
         * 
         * @return builder
         * 
         */
        public Builder sequences(List<CustomControlTopologyPolicyDefinitionSequenceArgs> sequences) {
            return sequences(Output.of(sequences));
        }

        /**
         * @param sequences List of sequences
         * 
         * @return builder
         * 
         */
        public Builder sequences(CustomControlTopologyPolicyDefinitionSequenceArgs... sequences) {
            return sequences(List.of(sequences));
        }

        public CustomControlTopologyPolicyDefinitionArgs build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("CustomControlTopologyPolicyDefinitionArgs", "description");
            }
            if ($.sequences == null) {
                throw new MissingRequiredPropertyException("CustomControlTopologyPolicyDefinitionArgs", "sequences");
            }
            return $;
        }
    }

}
