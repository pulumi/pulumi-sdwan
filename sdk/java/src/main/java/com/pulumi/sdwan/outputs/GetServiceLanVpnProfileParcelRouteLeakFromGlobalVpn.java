// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetServiceLanVpnProfileParcelRouteLeakFromGlobalVpnRedistribution;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceLanVpnProfileParcelRouteLeakFromGlobalVpn {
    /**
     * @return Redistribute Routes to specific Protocol on Service VPN
     * 
     */
    private List<GetServiceLanVpnProfileParcelRouteLeakFromGlobalVpnRedistribution> redistributions;
    private String routePolicyId;
    /**
     * @return Leak Routes of particular protocol from Global to Service VPN
     * 
     */
    private String routeProtocol;
    /**
     * @return Variable name
     * 
     */
    private String routeProtocolVariable;

    private GetServiceLanVpnProfileParcelRouteLeakFromGlobalVpn() {}
    /**
     * @return Redistribute Routes to specific Protocol on Service VPN
     * 
     */
    public List<GetServiceLanVpnProfileParcelRouteLeakFromGlobalVpnRedistribution> redistributions() {
        return this.redistributions;
    }
    public String routePolicyId() {
        return this.routePolicyId;
    }
    /**
     * @return Leak Routes of particular protocol from Global to Service VPN
     * 
     */
    public String routeProtocol() {
        return this.routeProtocol;
    }
    /**
     * @return Variable name
     * 
     */
    public String routeProtocolVariable() {
        return this.routeProtocolVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceLanVpnProfileParcelRouteLeakFromGlobalVpn defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetServiceLanVpnProfileParcelRouteLeakFromGlobalVpnRedistribution> redistributions;
        private String routePolicyId;
        private String routeProtocol;
        private String routeProtocolVariable;
        public Builder() {}
        public Builder(GetServiceLanVpnProfileParcelRouteLeakFromGlobalVpn defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.redistributions = defaults.redistributions;
    	      this.routePolicyId = defaults.routePolicyId;
    	      this.routeProtocol = defaults.routeProtocol;
    	      this.routeProtocolVariable = defaults.routeProtocolVariable;
        }

        @CustomType.Setter
        public Builder redistributions(List<GetServiceLanVpnProfileParcelRouteLeakFromGlobalVpnRedistribution> redistributions) {
            if (redistributions == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnProfileParcelRouteLeakFromGlobalVpn", "redistributions");
            }
            this.redistributions = redistributions;
            return this;
        }
        public Builder redistributions(GetServiceLanVpnProfileParcelRouteLeakFromGlobalVpnRedistribution... redistributions) {
            return redistributions(List.of(redistributions));
        }
        @CustomType.Setter
        public Builder routePolicyId(String routePolicyId) {
            if (routePolicyId == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnProfileParcelRouteLeakFromGlobalVpn", "routePolicyId");
            }
            this.routePolicyId = routePolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder routeProtocol(String routeProtocol) {
            if (routeProtocol == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnProfileParcelRouteLeakFromGlobalVpn", "routeProtocol");
            }
            this.routeProtocol = routeProtocol;
            return this;
        }
        @CustomType.Setter
        public Builder routeProtocolVariable(String routeProtocolVariable) {
            if (routeProtocolVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnProfileParcelRouteLeakFromGlobalVpn", "routeProtocolVariable");
            }
            this.routeProtocolVariable = routeProtocolVariable;
            return this;
        }
        public GetServiceLanVpnProfileParcelRouteLeakFromGlobalVpn build() {
            final var _resultValue = new GetServiceLanVpnProfileParcelRouteLeakFromGlobalVpn();
            _resultValue.redistributions = redistributions;
            _resultValue.routePolicyId = routePolicyId;
            _resultValue.routeProtocol = routeProtocol;
            _resultValue.routeProtocolVariable = routeProtocolVariable;
            return _resultValue;
        }
    }
}
