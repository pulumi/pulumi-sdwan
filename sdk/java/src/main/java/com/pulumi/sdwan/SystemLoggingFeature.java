// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.SystemLoggingFeatureArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.SystemLoggingFeatureState;
import com.pulumi.sdwan.outputs.SystemLoggingFeatureIpv4Server;
import com.pulumi.sdwan.outputs.SystemLoggingFeatureIpv6Server;
import com.pulumi.sdwan.outputs.SystemLoggingFeatureTlsProfile;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a System Logging Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * Expected import identifier with the format: &#34;system_logging_feature_id,feature_profile_id&#34;
 * 
 * ```sh
 * $ pulumi import sdwan:index/systemLoggingFeature:SystemLoggingFeature example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/systemLoggingFeature:SystemLoggingFeature")
public class SystemLoggingFeature extends com.pulumi.resources.CustomResource {
    /**
     * The description of the Feature
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Enable logging to local disk
     *   - Default value: `true`
     * 
     */
    @Export(name="diskEnable", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> diskEnable;

    /**
     * @return Enable logging to local disk
     *   - Default value: `true`
     * 
     */
    public Output<Optional<Boolean>> diskEnable() {
        return Codegen.optional(this.diskEnable);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="diskEnableVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> diskEnableVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> diskEnableVariable() {
        return Codegen.optional(this.diskEnableVariable);
    }
    /**
     * Set number of syslog files to create before discarding oldest files
     *   - Range: `1`-`10`
     *   - Default value: `10`
     * 
     */
    @Export(name="diskFileRotate", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> diskFileRotate;

    /**
     * @return Set number of syslog files to create before discarding oldest files
     *   - Range: `1`-`10`
     *   - Default value: `10`
     * 
     */
    public Output<Optional<Integer>> diskFileRotate() {
        return Codegen.optional(this.diskFileRotate);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="diskFileRotateVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> diskFileRotateVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> diskFileRotateVariable() {
        return Codegen.optional(this.diskFileRotateVariable);
    }
    /**
     * Set maximum size of file before it is rotated
     *   - Range: `1`-`20`
     *   - Default value: `10`
     * 
     */
    @Export(name="diskFileSize", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> diskFileSize;

    /**
     * @return Set maximum size of file before it is rotated
     *   - Range: `1`-`20`
     *   - Default value: `10`
     * 
     */
    public Output<Optional<Integer>> diskFileSize() {
        return Codegen.optional(this.diskFileSize);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="diskFileSizeVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> diskFileSizeVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> diskFileSizeVariable() {
        return Codegen.optional(this.diskFileSizeVariable);
    }
    /**
     * Feature Profile ID
     * 
     */
    @Export(name="featureProfileId", refs={String.class}, tree="[0]")
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * Enable logging to remote server
     * 
     */
    @Export(name="ipv4Servers", refs={List.class,SystemLoggingFeatureIpv4Server.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SystemLoggingFeatureIpv4Server>> ipv4Servers;

    /**
     * @return Enable logging to remote server
     * 
     */
    public Output<Optional<List<SystemLoggingFeatureIpv4Server>>> ipv4Servers() {
        return Codegen.optional(this.ipv4Servers);
    }
    /**
     * Enable logging to remote ipv6 server
     * 
     */
    @Export(name="ipv6Servers", refs={List.class,SystemLoggingFeatureIpv6Server.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SystemLoggingFeatureIpv6Server>> ipv6Servers;

    /**
     * @return Enable logging to remote ipv6 server
     * 
     */
    public Output<Optional<List<SystemLoggingFeatureIpv6Server>>> ipv6Servers() {
        return Codegen.optional(this.ipv6Servers);
    }
    /**
     * The name of the Feature
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Configure a TLS profile
     * 
     */
    @Export(name="tlsProfiles", refs={List.class,SystemLoggingFeatureTlsProfile.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SystemLoggingFeatureTlsProfile>> tlsProfiles;

    /**
     * @return Configure a TLS profile
     * 
     */
    public Output<Optional<List<SystemLoggingFeatureTlsProfile>>> tlsProfiles() {
        return Codegen.optional(this.tlsProfiles);
    }
    /**
     * The version of the Feature
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the Feature
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SystemLoggingFeature(java.lang.String name) {
        this(name, SystemLoggingFeatureArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SystemLoggingFeature(java.lang.String name, SystemLoggingFeatureArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SystemLoggingFeature(java.lang.String name, SystemLoggingFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/systemLoggingFeature:SystemLoggingFeature", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SystemLoggingFeature(java.lang.String name, Output<java.lang.String> id, @Nullable SystemLoggingFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/systemLoggingFeature:SystemLoggingFeature", name, state, makeResourceOptions(options, id), false);
    }

    private static SystemLoggingFeatureArgs makeArgs(SystemLoggingFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SystemLoggingFeatureArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SystemLoggingFeature get(java.lang.String name, Output<java.lang.String> id, @Nullable SystemLoggingFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SystemLoggingFeature(name, id, state, options);
    }
}
