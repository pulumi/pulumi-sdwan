// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCellularProfileFeatureTemplateResult {
    /**
     * @return Set access point name
     * 
     */
    private String accessPointName;
    /**
     * @return Variable name
     * 
     */
    private String accessPointNameVariable;
    /**
     * @return Set authentication type
     * 
     */
    private String authenticationType;
    /**
     * @return Variable name
     * 
     */
    private String authenticationTypeVariable;
    /**
     * @return The description of the feature template
     * 
     */
    private String description;
    /**
     * @return List of supported device types
     * 
     */
    private List<String> deviceTypes;
    /**
     * @return The id of the feature template
     * 
     */
    private String id;
    /**
     * @return Set interface name
     * 
     */
    private String ifName;
    /**
     * @return Variable name
     * 
     */
    private String ifNameVariable;
    /**
     * @return Set IP address
     * 
     */
    private String ipAddress;
    /**
     * @return Variable name
     * 
     */
    private String ipAddressVariable;
    /**
     * @return The name of the feature template
     * 
     */
    private String name;
    /**
     * @return Set packet data network type
     * 
     */
    private String packetDataNetworkType;
    /**
     * @return Variable name
     * 
     */
    private String packetDataNetworkTypeVariable;
    /**
     * @return Set the address of the primary DNS server
     * 
     */
    private String primaryDnsAddress;
    /**
     * @return Variable name
     * 
     */
    private String primaryDnsAddressVariable;
    /**
     * @return Set Profile ID
     * 
     */
    private Integer profileId;
    /**
     * @return Variable name
     * 
     */
    private String profileIdVariable;
    /**
     * @return Set profile name
     * 
     */
    private String profileName;
    /**
     * @return Variable name
     * 
     */
    private String profileNameVariable;
    /**
     * @return Set the profile password
     * 
     */
    private String profilePassword;
    /**
     * @return Variable name
     * 
     */
    private String profilePasswordVariable;
    /**
     * @return Set the profile username
     * 
     */
    private String profileUsername;
    /**
     * @return Variable name
     * 
     */
    private String profileUsernameVariable;
    /**
     * @return Set the address of the secondary DNS server
     * 
     */
    private String secondaryDnsAddress;
    /**
     * @return Variable name
     * 
     */
    private String secondaryDnsAddressVariable;
    /**
     * @return The template type
     * 
     */
    private String templateType;
    /**
     * @return The version of the feature template
     * 
     */
    private Integer version;

    private GetCellularProfileFeatureTemplateResult() {}
    /**
     * @return Set access point name
     * 
     */
    public String accessPointName() {
        return this.accessPointName;
    }
    /**
     * @return Variable name
     * 
     */
    public String accessPointNameVariable() {
        return this.accessPointNameVariable;
    }
    /**
     * @return Set authentication type
     * 
     */
    public String authenticationType() {
        return this.authenticationType;
    }
    /**
     * @return Variable name
     * 
     */
    public String authenticationTypeVariable() {
        return this.authenticationTypeVariable;
    }
    /**
     * @return The description of the feature template
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return List of supported device types
     * 
     */
    public List<String> deviceTypes() {
        return this.deviceTypes;
    }
    /**
     * @return The id of the feature template
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Set interface name
     * 
     */
    public String ifName() {
        return this.ifName;
    }
    /**
     * @return Variable name
     * 
     */
    public String ifNameVariable() {
        return this.ifNameVariable;
    }
    /**
     * @return Set IP address
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipAddressVariable() {
        return this.ipAddressVariable;
    }
    /**
     * @return The name of the feature template
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Set packet data network type
     * 
     */
    public String packetDataNetworkType() {
        return this.packetDataNetworkType;
    }
    /**
     * @return Variable name
     * 
     */
    public String packetDataNetworkTypeVariable() {
        return this.packetDataNetworkTypeVariable;
    }
    /**
     * @return Set the address of the primary DNS server
     * 
     */
    public String primaryDnsAddress() {
        return this.primaryDnsAddress;
    }
    /**
     * @return Variable name
     * 
     */
    public String primaryDnsAddressVariable() {
        return this.primaryDnsAddressVariable;
    }
    /**
     * @return Set Profile ID
     * 
     */
    public Integer profileId() {
        return this.profileId;
    }
    /**
     * @return Variable name
     * 
     */
    public String profileIdVariable() {
        return this.profileIdVariable;
    }
    /**
     * @return Set profile name
     * 
     */
    public String profileName() {
        return this.profileName;
    }
    /**
     * @return Variable name
     * 
     */
    public String profileNameVariable() {
        return this.profileNameVariable;
    }
    /**
     * @return Set the profile password
     * 
     */
    public String profilePassword() {
        return this.profilePassword;
    }
    /**
     * @return Variable name
     * 
     */
    public String profilePasswordVariable() {
        return this.profilePasswordVariable;
    }
    /**
     * @return Set the profile username
     * 
     */
    public String profileUsername() {
        return this.profileUsername;
    }
    /**
     * @return Variable name
     * 
     */
    public String profileUsernameVariable() {
        return this.profileUsernameVariable;
    }
    /**
     * @return Set the address of the secondary DNS server
     * 
     */
    public String secondaryDnsAddress() {
        return this.secondaryDnsAddress;
    }
    /**
     * @return Variable name
     * 
     */
    public String secondaryDnsAddressVariable() {
        return this.secondaryDnsAddressVariable;
    }
    /**
     * @return The template type
     * 
     */
    public String templateType() {
        return this.templateType;
    }
    /**
     * @return The version of the feature template
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCellularProfileFeatureTemplateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessPointName;
        private String accessPointNameVariable;
        private String authenticationType;
        private String authenticationTypeVariable;
        private String description;
        private List<String> deviceTypes;
        private String id;
        private String ifName;
        private String ifNameVariable;
        private String ipAddress;
        private String ipAddressVariable;
        private String name;
        private String packetDataNetworkType;
        private String packetDataNetworkTypeVariable;
        private String primaryDnsAddress;
        private String primaryDnsAddressVariable;
        private Integer profileId;
        private String profileIdVariable;
        private String profileName;
        private String profileNameVariable;
        private String profilePassword;
        private String profilePasswordVariable;
        private String profileUsername;
        private String profileUsernameVariable;
        private String secondaryDnsAddress;
        private String secondaryDnsAddressVariable;
        private String templateType;
        private Integer version;
        public Builder() {}
        public Builder(GetCellularProfileFeatureTemplateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPointName = defaults.accessPointName;
    	      this.accessPointNameVariable = defaults.accessPointNameVariable;
    	      this.authenticationType = defaults.authenticationType;
    	      this.authenticationTypeVariable = defaults.authenticationTypeVariable;
    	      this.description = defaults.description;
    	      this.deviceTypes = defaults.deviceTypes;
    	      this.id = defaults.id;
    	      this.ifName = defaults.ifName;
    	      this.ifNameVariable = defaults.ifNameVariable;
    	      this.ipAddress = defaults.ipAddress;
    	      this.ipAddressVariable = defaults.ipAddressVariable;
    	      this.name = defaults.name;
    	      this.packetDataNetworkType = defaults.packetDataNetworkType;
    	      this.packetDataNetworkTypeVariable = defaults.packetDataNetworkTypeVariable;
    	      this.primaryDnsAddress = defaults.primaryDnsAddress;
    	      this.primaryDnsAddressVariable = defaults.primaryDnsAddressVariable;
    	      this.profileId = defaults.profileId;
    	      this.profileIdVariable = defaults.profileIdVariable;
    	      this.profileName = defaults.profileName;
    	      this.profileNameVariable = defaults.profileNameVariable;
    	      this.profilePassword = defaults.profilePassword;
    	      this.profilePasswordVariable = defaults.profilePasswordVariable;
    	      this.profileUsername = defaults.profileUsername;
    	      this.profileUsernameVariable = defaults.profileUsernameVariable;
    	      this.secondaryDnsAddress = defaults.secondaryDnsAddress;
    	      this.secondaryDnsAddressVariable = defaults.secondaryDnsAddressVariable;
    	      this.templateType = defaults.templateType;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder accessPointName(String accessPointName) {
            if (accessPointName == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "accessPointName");
            }
            this.accessPointName = accessPointName;
            return this;
        }
        @CustomType.Setter
        public Builder accessPointNameVariable(String accessPointNameVariable) {
            if (accessPointNameVariable == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "accessPointNameVariable");
            }
            this.accessPointNameVariable = accessPointNameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationType(String authenticationType) {
            if (authenticationType == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "authenticationType");
            }
            this.authenticationType = authenticationType;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationTypeVariable(String authenticationTypeVariable) {
            if (authenticationTypeVariable == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "authenticationTypeVariable");
            }
            this.authenticationTypeVariable = authenticationTypeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder deviceTypes(List<String> deviceTypes) {
            if (deviceTypes == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "deviceTypes");
            }
            this.deviceTypes = deviceTypes;
            return this;
        }
        public Builder deviceTypes(String... deviceTypes) {
            return deviceTypes(List.of(deviceTypes));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ifName(String ifName) {
            if (ifName == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "ifName");
            }
            this.ifName = ifName;
            return this;
        }
        @CustomType.Setter
        public Builder ifNameVariable(String ifNameVariable) {
            if (ifNameVariable == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "ifNameVariable");
            }
            this.ifNameVariable = ifNameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            if (ipAddress == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "ipAddress");
            }
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddressVariable(String ipAddressVariable) {
            if (ipAddressVariable == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "ipAddressVariable");
            }
            this.ipAddressVariable = ipAddressVariable;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder packetDataNetworkType(String packetDataNetworkType) {
            if (packetDataNetworkType == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "packetDataNetworkType");
            }
            this.packetDataNetworkType = packetDataNetworkType;
            return this;
        }
        @CustomType.Setter
        public Builder packetDataNetworkTypeVariable(String packetDataNetworkTypeVariable) {
            if (packetDataNetworkTypeVariable == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "packetDataNetworkTypeVariable");
            }
            this.packetDataNetworkTypeVariable = packetDataNetworkTypeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder primaryDnsAddress(String primaryDnsAddress) {
            if (primaryDnsAddress == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "primaryDnsAddress");
            }
            this.primaryDnsAddress = primaryDnsAddress;
            return this;
        }
        @CustomType.Setter
        public Builder primaryDnsAddressVariable(String primaryDnsAddressVariable) {
            if (primaryDnsAddressVariable == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "primaryDnsAddressVariable");
            }
            this.primaryDnsAddressVariable = primaryDnsAddressVariable;
            return this;
        }
        @CustomType.Setter
        public Builder profileId(Integer profileId) {
            if (profileId == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "profileId");
            }
            this.profileId = profileId;
            return this;
        }
        @CustomType.Setter
        public Builder profileIdVariable(String profileIdVariable) {
            if (profileIdVariable == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "profileIdVariable");
            }
            this.profileIdVariable = profileIdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder profileName(String profileName) {
            if (profileName == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "profileName");
            }
            this.profileName = profileName;
            return this;
        }
        @CustomType.Setter
        public Builder profileNameVariable(String profileNameVariable) {
            if (profileNameVariable == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "profileNameVariable");
            }
            this.profileNameVariable = profileNameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder profilePassword(String profilePassword) {
            if (profilePassword == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "profilePassword");
            }
            this.profilePassword = profilePassword;
            return this;
        }
        @CustomType.Setter
        public Builder profilePasswordVariable(String profilePasswordVariable) {
            if (profilePasswordVariable == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "profilePasswordVariable");
            }
            this.profilePasswordVariable = profilePasswordVariable;
            return this;
        }
        @CustomType.Setter
        public Builder profileUsername(String profileUsername) {
            if (profileUsername == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "profileUsername");
            }
            this.profileUsername = profileUsername;
            return this;
        }
        @CustomType.Setter
        public Builder profileUsernameVariable(String profileUsernameVariable) {
            if (profileUsernameVariable == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "profileUsernameVariable");
            }
            this.profileUsernameVariable = profileUsernameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryDnsAddress(String secondaryDnsAddress) {
            if (secondaryDnsAddress == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "secondaryDnsAddress");
            }
            this.secondaryDnsAddress = secondaryDnsAddress;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryDnsAddressVariable(String secondaryDnsAddressVariable) {
            if (secondaryDnsAddressVariable == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "secondaryDnsAddressVariable");
            }
            this.secondaryDnsAddressVariable = secondaryDnsAddressVariable;
            return this;
        }
        @CustomType.Setter
        public Builder templateType(String templateType) {
            if (templateType == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "templateType");
            }
            this.templateType = templateType;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetCellularProfileFeatureTemplateResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetCellularProfileFeatureTemplateResult build() {
            final var _resultValue = new GetCellularProfileFeatureTemplateResult();
            _resultValue.accessPointName = accessPointName;
            _resultValue.accessPointNameVariable = accessPointNameVariable;
            _resultValue.authenticationType = authenticationType;
            _resultValue.authenticationTypeVariable = authenticationTypeVariable;
            _resultValue.description = description;
            _resultValue.deviceTypes = deviceTypes;
            _resultValue.id = id;
            _resultValue.ifName = ifName;
            _resultValue.ifNameVariable = ifNameVariable;
            _resultValue.ipAddress = ipAddress;
            _resultValue.ipAddressVariable = ipAddressVariable;
            _resultValue.name = name;
            _resultValue.packetDataNetworkType = packetDataNetworkType;
            _resultValue.packetDataNetworkTypeVariable = packetDataNetworkTypeVariable;
            _resultValue.primaryDnsAddress = primaryDnsAddress;
            _resultValue.primaryDnsAddressVariable = primaryDnsAddressVariable;
            _resultValue.profileId = profileId;
            _resultValue.profileIdVariable = profileIdVariable;
            _resultValue.profileName = profileName;
            _resultValue.profileNameVariable = profileNameVariable;
            _resultValue.profilePassword = profilePassword;
            _resultValue.profilePasswordVariable = profilePasswordVariable;
            _resultValue.profileUsername = profileUsername;
            _resultValue.profileUsernameVariable = profileUsernameVariable;
            _resultValue.secondaryDnsAddress = secondaryDnsAddress;
            _resultValue.secondaryDnsAddressVariable = secondaryDnsAddressVariable;
            _resultValue.templateType = templateType;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
