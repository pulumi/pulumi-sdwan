// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.HubAndSpokeTopologyPolicyDefinitionTopologyArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HubAndSpokeTopologyPolicyDefinitionState extends com.pulumi.resources.ResourceArgs {

    public static final HubAndSpokeTopologyPolicyDefinitionState Empty = new HubAndSpokeTopologyPolicyDefinitionState();

    /**
     * The description of the policy definition
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the policy definition
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the policy definition
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the policy definition
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * List of topologies
     * 
     */
    @Import(name="topologies")
    private @Nullable Output<List<HubAndSpokeTopologyPolicyDefinitionTopologyArgs>> topologies;

    /**
     * @return List of topologies
     * 
     */
    public Optional<Output<List<HubAndSpokeTopologyPolicyDefinitionTopologyArgs>>> topologies() {
        return Optional.ofNullable(this.topologies);
    }

    /**
     * Type
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Type
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The version of the object
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the object
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    /**
     * VPN list ID
     * 
     */
    @Import(name="vpnListId")
    private @Nullable Output<String> vpnListId;

    /**
     * @return VPN list ID
     * 
     */
    public Optional<Output<String>> vpnListId() {
        return Optional.ofNullable(this.vpnListId);
    }

    /**
     * VPN list version
     * 
     */
    @Import(name="vpnListVersion")
    private @Nullable Output<Integer> vpnListVersion;

    /**
     * @return VPN list version
     * 
     */
    public Optional<Output<Integer>> vpnListVersion() {
        return Optional.ofNullable(this.vpnListVersion);
    }

    private HubAndSpokeTopologyPolicyDefinitionState() {}

    private HubAndSpokeTopologyPolicyDefinitionState(HubAndSpokeTopologyPolicyDefinitionState $) {
        this.description = $.description;
        this.name = $.name;
        this.topologies = $.topologies;
        this.type = $.type;
        this.version = $.version;
        this.vpnListId = $.vpnListId;
        this.vpnListVersion = $.vpnListVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HubAndSpokeTopologyPolicyDefinitionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HubAndSpokeTopologyPolicyDefinitionState $;

        public Builder() {
            $ = new HubAndSpokeTopologyPolicyDefinitionState();
        }

        public Builder(HubAndSpokeTopologyPolicyDefinitionState defaults) {
            $ = new HubAndSpokeTopologyPolicyDefinitionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The name of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param topologies List of topologies
         * 
         * @return builder
         * 
         */
        public Builder topologies(@Nullable Output<List<HubAndSpokeTopologyPolicyDefinitionTopologyArgs>> topologies) {
            $.topologies = topologies;
            return this;
        }

        /**
         * @param topologies List of topologies
         * 
         * @return builder
         * 
         */
        public Builder topologies(List<HubAndSpokeTopologyPolicyDefinitionTopologyArgs> topologies) {
            return topologies(Output.of(topologies));
        }

        /**
         * @param topologies List of topologies
         * 
         * @return builder
         * 
         */
        public Builder topologies(HubAndSpokeTopologyPolicyDefinitionTopologyArgs... topologies) {
            return topologies(List.of(topologies));
        }

        /**
         * @param type Type
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param version The version of the object
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the object
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        /**
         * @param vpnListId VPN list ID
         * 
         * @return builder
         * 
         */
        public Builder vpnListId(@Nullable Output<String> vpnListId) {
            $.vpnListId = vpnListId;
            return this;
        }

        /**
         * @param vpnListId VPN list ID
         * 
         * @return builder
         * 
         */
        public Builder vpnListId(String vpnListId) {
            return vpnListId(Output.of(vpnListId));
        }

        /**
         * @param vpnListVersion VPN list version
         * 
         * @return builder
         * 
         */
        public Builder vpnListVersion(@Nullable Output<Integer> vpnListVersion) {
            $.vpnListVersion = vpnListVersion;
            return this;
        }

        /**
         * @param vpnListVersion VPN list version
         * 
         * @return builder
         * 
         */
        public Builder vpnListVersion(Integer vpnListVersion) {
            return vpnListVersion(Output.of(vpnListVersion));
        }

        public HubAndSpokeTopologyPolicyDefinitionState build() {
            return $;
        }
    }

}
