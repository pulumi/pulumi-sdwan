// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetSystemSnmpProfileParcelCommunity;
import com.pulumi.sdwan.outputs.GetSystemSnmpProfileParcelGroup;
import com.pulumi.sdwan.outputs.GetSystemSnmpProfileParcelTrapTargetServer;
import com.pulumi.sdwan.outputs.GetSystemSnmpProfileParcelUser;
import com.pulumi.sdwan.outputs.GetSystemSnmpProfileParcelView;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSystemSnmpProfileParcelResult {
    /**
     * @return Configure SNMP community
     * 
     */
    private List<GetSystemSnmpProfileParcelCommunity> communities;
    /**
     * @return Set the contact for this managed node
     * 
     */
    private String contactPerson;
    /**
     * @return Variable name
     * 
     */
    private String contactPersonVariable;
    /**
     * @return The description of the profile parcel
     * 
     */
    private String description;
    /**
     * @return Feature Profile ID
     * 
     */
    private String featureProfileId;
    /**
     * @return Configure an SNMP group
     * 
     */
    private List<GetSystemSnmpProfileParcelGroup> groups;
    /**
     * @return The id of the profile parcel
     * 
     */
    private String id;
    /**
     * @return Set the physical location of this managed node
     * 
     */
    private String locationOfDevice;
    /**
     * @return Variable name
     * 
     */
    private String locationOfDeviceVariable;
    /**
     * @return The name of the profile parcel
     * 
     */
    private String name;
    /**
     * @return Enable or disable SNMP
     * 
     */
    private Boolean shutdown;
    /**
     * @return Variable name
     * 
     */
    private String shutdownVariable;
    /**
     * @return Configure SNMP server to receive SNMP traps
     * 
     */
    private List<GetSystemSnmpProfileParcelTrapTargetServer> trapTargetServers;
    /**
     * @return Configure an SNMP user
     * 
     */
    private List<GetSystemSnmpProfileParcelUser> users;
    /**
     * @return The version of the profile parcel
     * 
     */
    private Integer version;
    /**
     * @return Configure a view record
     * 
     */
    private List<GetSystemSnmpProfileParcelView> views;

    private GetSystemSnmpProfileParcelResult() {}
    /**
     * @return Configure SNMP community
     * 
     */
    public List<GetSystemSnmpProfileParcelCommunity> communities() {
        return this.communities;
    }
    /**
     * @return Set the contact for this managed node
     * 
     */
    public String contactPerson() {
        return this.contactPerson;
    }
    /**
     * @return Variable name
     * 
     */
    public String contactPersonVariable() {
        return this.contactPersonVariable;
    }
    /**
     * @return The description of the profile parcel
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Feature Profile ID
     * 
     */
    public String featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * @return Configure an SNMP group
     * 
     */
    public List<GetSystemSnmpProfileParcelGroup> groups() {
        return this.groups;
    }
    /**
     * @return The id of the profile parcel
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Set the physical location of this managed node
     * 
     */
    public String locationOfDevice() {
        return this.locationOfDevice;
    }
    /**
     * @return Variable name
     * 
     */
    public String locationOfDeviceVariable() {
        return this.locationOfDeviceVariable;
    }
    /**
     * @return The name of the profile parcel
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Enable or disable SNMP
     * 
     */
    public Boolean shutdown() {
        return this.shutdown;
    }
    /**
     * @return Variable name
     * 
     */
    public String shutdownVariable() {
        return this.shutdownVariable;
    }
    /**
     * @return Configure SNMP server to receive SNMP traps
     * 
     */
    public List<GetSystemSnmpProfileParcelTrapTargetServer> trapTargetServers() {
        return this.trapTargetServers;
    }
    /**
     * @return Configure an SNMP user
     * 
     */
    public List<GetSystemSnmpProfileParcelUser> users() {
        return this.users;
    }
    /**
     * @return The version of the profile parcel
     * 
     */
    public Integer version() {
        return this.version;
    }
    /**
     * @return Configure a view record
     * 
     */
    public List<GetSystemSnmpProfileParcelView> views() {
        return this.views;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSystemSnmpProfileParcelResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetSystemSnmpProfileParcelCommunity> communities;
        private String contactPerson;
        private String contactPersonVariable;
        private String description;
        private String featureProfileId;
        private List<GetSystemSnmpProfileParcelGroup> groups;
        private String id;
        private String locationOfDevice;
        private String locationOfDeviceVariable;
        private String name;
        private Boolean shutdown;
        private String shutdownVariable;
        private List<GetSystemSnmpProfileParcelTrapTargetServer> trapTargetServers;
        private List<GetSystemSnmpProfileParcelUser> users;
        private Integer version;
        private List<GetSystemSnmpProfileParcelView> views;
        public Builder() {}
        public Builder(GetSystemSnmpProfileParcelResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.communities = defaults.communities;
    	      this.contactPerson = defaults.contactPerson;
    	      this.contactPersonVariable = defaults.contactPersonVariable;
    	      this.description = defaults.description;
    	      this.featureProfileId = defaults.featureProfileId;
    	      this.groups = defaults.groups;
    	      this.id = defaults.id;
    	      this.locationOfDevice = defaults.locationOfDevice;
    	      this.locationOfDeviceVariable = defaults.locationOfDeviceVariable;
    	      this.name = defaults.name;
    	      this.shutdown = defaults.shutdown;
    	      this.shutdownVariable = defaults.shutdownVariable;
    	      this.trapTargetServers = defaults.trapTargetServers;
    	      this.users = defaults.users;
    	      this.version = defaults.version;
    	      this.views = defaults.views;
        }

        @CustomType.Setter
        public Builder communities(List<GetSystemSnmpProfileParcelCommunity> communities) {
            if (communities == null) {
              throw new MissingRequiredPropertyException("GetSystemSnmpProfileParcelResult", "communities");
            }
            this.communities = communities;
            return this;
        }
        public Builder communities(GetSystemSnmpProfileParcelCommunity... communities) {
            return communities(List.of(communities));
        }
        @CustomType.Setter
        public Builder contactPerson(String contactPerson) {
            if (contactPerson == null) {
              throw new MissingRequiredPropertyException("GetSystemSnmpProfileParcelResult", "contactPerson");
            }
            this.contactPerson = contactPerson;
            return this;
        }
        @CustomType.Setter
        public Builder contactPersonVariable(String contactPersonVariable) {
            if (contactPersonVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemSnmpProfileParcelResult", "contactPersonVariable");
            }
            this.contactPersonVariable = contactPersonVariable;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSystemSnmpProfileParcelResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder featureProfileId(String featureProfileId) {
            if (featureProfileId == null) {
              throw new MissingRequiredPropertyException("GetSystemSnmpProfileParcelResult", "featureProfileId");
            }
            this.featureProfileId = featureProfileId;
            return this;
        }
        @CustomType.Setter
        public Builder groups(List<GetSystemSnmpProfileParcelGroup> groups) {
            if (groups == null) {
              throw new MissingRequiredPropertyException("GetSystemSnmpProfileParcelResult", "groups");
            }
            this.groups = groups;
            return this;
        }
        public Builder groups(GetSystemSnmpProfileParcelGroup... groups) {
            return groups(List.of(groups));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSystemSnmpProfileParcelResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder locationOfDevice(String locationOfDevice) {
            if (locationOfDevice == null) {
              throw new MissingRequiredPropertyException("GetSystemSnmpProfileParcelResult", "locationOfDevice");
            }
            this.locationOfDevice = locationOfDevice;
            return this;
        }
        @CustomType.Setter
        public Builder locationOfDeviceVariable(String locationOfDeviceVariable) {
            if (locationOfDeviceVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemSnmpProfileParcelResult", "locationOfDeviceVariable");
            }
            this.locationOfDeviceVariable = locationOfDeviceVariable;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSystemSnmpProfileParcelResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder shutdown(Boolean shutdown) {
            if (shutdown == null) {
              throw new MissingRequiredPropertyException("GetSystemSnmpProfileParcelResult", "shutdown");
            }
            this.shutdown = shutdown;
            return this;
        }
        @CustomType.Setter
        public Builder shutdownVariable(String shutdownVariable) {
            if (shutdownVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemSnmpProfileParcelResult", "shutdownVariable");
            }
            this.shutdownVariable = shutdownVariable;
            return this;
        }
        @CustomType.Setter
        public Builder trapTargetServers(List<GetSystemSnmpProfileParcelTrapTargetServer> trapTargetServers) {
            if (trapTargetServers == null) {
              throw new MissingRequiredPropertyException("GetSystemSnmpProfileParcelResult", "trapTargetServers");
            }
            this.trapTargetServers = trapTargetServers;
            return this;
        }
        public Builder trapTargetServers(GetSystemSnmpProfileParcelTrapTargetServer... trapTargetServers) {
            return trapTargetServers(List.of(trapTargetServers));
        }
        @CustomType.Setter
        public Builder users(List<GetSystemSnmpProfileParcelUser> users) {
            if (users == null) {
              throw new MissingRequiredPropertyException("GetSystemSnmpProfileParcelResult", "users");
            }
            this.users = users;
            return this;
        }
        public Builder users(GetSystemSnmpProfileParcelUser... users) {
            return users(List.of(users));
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetSystemSnmpProfileParcelResult", "version");
            }
            this.version = version;
            return this;
        }
        @CustomType.Setter
        public Builder views(List<GetSystemSnmpProfileParcelView> views) {
            if (views == null) {
              throw new MissingRequiredPropertyException("GetSystemSnmpProfileParcelResult", "views");
            }
            this.views = views;
            return this;
        }
        public Builder views(GetSystemSnmpProfileParcelView... views) {
            return views(List.of(views));
        }
        public GetSystemSnmpProfileParcelResult build() {
            final var _resultValue = new GetSystemSnmpProfileParcelResult();
            _resultValue.communities = communities;
            _resultValue.contactPerson = contactPerson;
            _resultValue.contactPersonVariable = contactPersonVariable;
            _resultValue.description = description;
            _resultValue.featureProfileId = featureProfileId;
            _resultValue.groups = groups;
            _resultValue.id = id;
            _resultValue.locationOfDevice = locationOfDevice;
            _resultValue.locationOfDeviceVariable = locationOfDeviceVariable;
            _resultValue.name = name;
            _resultValue.shutdown = shutdown;
            _resultValue.shutdownVariable = shutdownVariable;
            _resultValue.trapTargetServers = trapTargetServers;
            _resultValue.users = users;
            _resultValue.version = version;
            _resultValue.views = views;
            return _resultValue;
        }
    }
}
