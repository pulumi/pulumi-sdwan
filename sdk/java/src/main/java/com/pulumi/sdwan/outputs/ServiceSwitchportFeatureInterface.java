// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceSwitchportFeatureInterface {
    /**
     * @return Set uni or bi directional authorization mode
     *   - Choices: `both`, `in`
     * 
     */
    private @Nullable String controlDirection;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String controlDirectionVariable;
    /**
     * @return Set Critical VLAN
     *   - Range: `1`-`4094`
     * 
     */
    private @Nullable Integer criticalVlan;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String criticalVlanVariable;
    /**
     * @return Duplex mode
     *   - Choices: `full`, `half`
     * 
     */
    private @Nullable String duplex;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String duplexVariable;
    /**
     * @return Enable Periodic Reauthentication
     * 
     */
    private @Nullable Boolean enablePeriodicReauth;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String enablePeriodicReauthVariable;
    /**
     * @return Enable Critical Voice VLAN
     * 
     */
    private @Nullable Boolean enableVoice;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String enableVoiceVariable;
    /**
     * @return Set vlan to drop non-802.1x enabled clients into if client is not in MAB list
     *   - Range: `1`-`4094`
     * 
     */
    private @Nullable Integer guestVlan;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String guestVlanVariable;
    /**
     * @return Set host mode
     *   - Choices: `single-host`, `multi-auth`, `multi-host`, `multi-domain`
     * 
     */
    private @Nullable String hostMode;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String hostModeVariable;
    /**
     * @return Periodic Reauthentication Inactivity Timeout (in seconds)
     *   - Range: `1`-`65535`
     * 
     */
    private @Nullable Integer inactivity;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String inactivityVariable;
    /**
     * @return Set Interface name
     * 
     */
    private @Nullable String interfaceName;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String interfaceNameVariable;
    /**
     * @return MAC Authentication Bypass
     * 
     */
    private @Nullable Boolean macAuthenticationBypass;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String macAuthenticationBypassVariable;
    /**
     * @return Set type of switch port: access/trunk
     *   - Choices: `access`, `trunk`
     * 
     */
    private @Nullable String mode;
    /**
     * @return Set 802.1x Interface Pae Type
     * 
     */
    private @Nullable Boolean paeEnable;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String paeEnableVariable;
    /**
     * @return Set Port-Control Mode
     *   - Choices: `auto`, `force-unauthorized`, `force-authorized`
     * 
     */
    private @Nullable String portControl;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String portControlVariable;
    /**
     * @return Periodic Reauthentication Interval (in seconds)
     *   - Range: `1`-`1073741823`
     *   - Default value: `3600`
     * 
     */
    private @Nullable Integer reauthentication;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String reauthenticationVariable;
    /**
     * @return Set Restricted VLAN ID
     *   - Range: `1`-`4094`
     * 
     */
    private @Nullable Integer restrictedVlan;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String restrictedVlanVariable;
    /**
     * @return Administrative state
     *   - Default value: `true`
     * 
     */
    private @Nullable Boolean shutdown;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String shutdownVariable;
    /**
     * @return Set interface speed
     *   - Choices: `10`, `100`, `1000`, `2500`, `10000`
     * 
     */
    private @Nullable String speed;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String speedVariable;
    /**
     * @return Set VLAN identifier associated with bridging domain
     *   - Range: `1`-`4094`
     * 
     */
    private @Nullable Integer switchportAccessVlan;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String switchportAccessVlanVariable;
    /**
     * @return Configure VLAN IDs used with the trunk
     * 
     */
    private @Nullable String switchportTrunkAllowedVlans;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String switchportTrunkAllowedVlansVariable;
    /**
     * @return Configure VLAN ID used for native VLAN
     *   - Range: `1`-`4094`
     * 
     */
    private @Nullable Integer switchportTrunkNativeVlan;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String switchportTrunkNativeVlanVariable;
    /**
     * @return Configure Voice Vlan
     *   - Range: `1`-`4094`
     * 
     */
    private @Nullable Integer voiceVlan;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String voiceVlanVariable;

    private ServiceSwitchportFeatureInterface() {}
    /**
     * @return Set uni or bi directional authorization mode
     *   - Choices: `both`, `in`
     * 
     */
    public Optional<String> controlDirection() {
        return Optional.ofNullable(this.controlDirection);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> controlDirectionVariable() {
        return Optional.ofNullable(this.controlDirectionVariable);
    }
    /**
     * @return Set Critical VLAN
     *   - Range: `1`-`4094`
     * 
     */
    public Optional<Integer> criticalVlan() {
        return Optional.ofNullable(this.criticalVlan);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> criticalVlanVariable() {
        return Optional.ofNullable(this.criticalVlanVariable);
    }
    /**
     * @return Duplex mode
     *   - Choices: `full`, `half`
     * 
     */
    public Optional<String> duplex() {
        return Optional.ofNullable(this.duplex);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> duplexVariable() {
        return Optional.ofNullable(this.duplexVariable);
    }
    /**
     * @return Enable Periodic Reauthentication
     * 
     */
    public Optional<Boolean> enablePeriodicReauth() {
        return Optional.ofNullable(this.enablePeriodicReauth);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> enablePeriodicReauthVariable() {
        return Optional.ofNullable(this.enablePeriodicReauthVariable);
    }
    /**
     * @return Enable Critical Voice VLAN
     * 
     */
    public Optional<Boolean> enableVoice() {
        return Optional.ofNullable(this.enableVoice);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> enableVoiceVariable() {
        return Optional.ofNullable(this.enableVoiceVariable);
    }
    /**
     * @return Set vlan to drop non-802.1x enabled clients into if client is not in MAB list
     *   - Range: `1`-`4094`
     * 
     */
    public Optional<Integer> guestVlan() {
        return Optional.ofNullable(this.guestVlan);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> guestVlanVariable() {
        return Optional.ofNullable(this.guestVlanVariable);
    }
    /**
     * @return Set host mode
     *   - Choices: `single-host`, `multi-auth`, `multi-host`, `multi-domain`
     * 
     */
    public Optional<String> hostMode() {
        return Optional.ofNullable(this.hostMode);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> hostModeVariable() {
        return Optional.ofNullable(this.hostModeVariable);
    }
    /**
     * @return Periodic Reauthentication Inactivity Timeout (in seconds)
     *   - Range: `1`-`65535`
     * 
     */
    public Optional<Integer> inactivity() {
        return Optional.ofNullable(this.inactivity);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> inactivityVariable() {
        return Optional.ofNullable(this.inactivityVariable);
    }
    /**
     * @return Set Interface name
     * 
     */
    public Optional<String> interfaceName() {
        return Optional.ofNullable(this.interfaceName);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> interfaceNameVariable() {
        return Optional.ofNullable(this.interfaceNameVariable);
    }
    /**
     * @return MAC Authentication Bypass
     * 
     */
    public Optional<Boolean> macAuthenticationBypass() {
        return Optional.ofNullable(this.macAuthenticationBypass);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> macAuthenticationBypassVariable() {
        return Optional.ofNullable(this.macAuthenticationBypassVariable);
    }
    /**
     * @return Set type of switch port: access/trunk
     *   - Choices: `access`, `trunk`
     * 
     */
    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }
    /**
     * @return Set 802.1x Interface Pae Type
     * 
     */
    public Optional<Boolean> paeEnable() {
        return Optional.ofNullable(this.paeEnable);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> paeEnableVariable() {
        return Optional.ofNullable(this.paeEnableVariable);
    }
    /**
     * @return Set Port-Control Mode
     *   - Choices: `auto`, `force-unauthorized`, `force-authorized`
     * 
     */
    public Optional<String> portControl() {
        return Optional.ofNullable(this.portControl);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> portControlVariable() {
        return Optional.ofNullable(this.portControlVariable);
    }
    /**
     * @return Periodic Reauthentication Interval (in seconds)
     *   - Range: `1`-`1073741823`
     *   - Default value: `3600`
     * 
     */
    public Optional<Integer> reauthentication() {
        return Optional.ofNullable(this.reauthentication);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> reauthenticationVariable() {
        return Optional.ofNullable(this.reauthenticationVariable);
    }
    /**
     * @return Set Restricted VLAN ID
     *   - Range: `1`-`4094`
     * 
     */
    public Optional<Integer> restrictedVlan() {
        return Optional.ofNullable(this.restrictedVlan);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> restrictedVlanVariable() {
        return Optional.ofNullable(this.restrictedVlanVariable);
    }
    /**
     * @return Administrative state
     *   - Default value: `true`
     * 
     */
    public Optional<Boolean> shutdown() {
        return Optional.ofNullable(this.shutdown);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> shutdownVariable() {
        return Optional.ofNullable(this.shutdownVariable);
    }
    /**
     * @return Set interface speed
     *   - Choices: `10`, `100`, `1000`, `2500`, `10000`
     * 
     */
    public Optional<String> speed() {
        return Optional.ofNullable(this.speed);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> speedVariable() {
        return Optional.ofNullable(this.speedVariable);
    }
    /**
     * @return Set VLAN identifier associated with bridging domain
     *   - Range: `1`-`4094`
     * 
     */
    public Optional<Integer> switchportAccessVlan() {
        return Optional.ofNullable(this.switchportAccessVlan);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> switchportAccessVlanVariable() {
        return Optional.ofNullable(this.switchportAccessVlanVariable);
    }
    /**
     * @return Configure VLAN IDs used with the trunk
     * 
     */
    public Optional<String> switchportTrunkAllowedVlans() {
        return Optional.ofNullable(this.switchportTrunkAllowedVlans);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> switchportTrunkAllowedVlansVariable() {
        return Optional.ofNullable(this.switchportTrunkAllowedVlansVariable);
    }
    /**
     * @return Configure VLAN ID used for native VLAN
     *   - Range: `1`-`4094`
     * 
     */
    public Optional<Integer> switchportTrunkNativeVlan() {
        return Optional.ofNullable(this.switchportTrunkNativeVlan);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> switchportTrunkNativeVlanVariable() {
        return Optional.ofNullable(this.switchportTrunkNativeVlanVariable);
    }
    /**
     * @return Configure Voice Vlan
     *   - Range: `1`-`4094`
     * 
     */
    public Optional<Integer> voiceVlan() {
        return Optional.ofNullable(this.voiceVlan);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> voiceVlanVariable() {
        return Optional.ofNullable(this.voiceVlanVariable);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceSwitchportFeatureInterface defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String controlDirection;
        private @Nullable String controlDirectionVariable;
        private @Nullable Integer criticalVlan;
        private @Nullable String criticalVlanVariable;
        private @Nullable String duplex;
        private @Nullable String duplexVariable;
        private @Nullable Boolean enablePeriodicReauth;
        private @Nullable String enablePeriodicReauthVariable;
        private @Nullable Boolean enableVoice;
        private @Nullable String enableVoiceVariable;
        private @Nullable Integer guestVlan;
        private @Nullable String guestVlanVariable;
        private @Nullable String hostMode;
        private @Nullable String hostModeVariable;
        private @Nullable Integer inactivity;
        private @Nullable String inactivityVariable;
        private @Nullable String interfaceName;
        private @Nullable String interfaceNameVariable;
        private @Nullable Boolean macAuthenticationBypass;
        private @Nullable String macAuthenticationBypassVariable;
        private @Nullable String mode;
        private @Nullable Boolean paeEnable;
        private @Nullable String paeEnableVariable;
        private @Nullable String portControl;
        private @Nullable String portControlVariable;
        private @Nullable Integer reauthentication;
        private @Nullable String reauthenticationVariable;
        private @Nullable Integer restrictedVlan;
        private @Nullable String restrictedVlanVariable;
        private @Nullable Boolean shutdown;
        private @Nullable String shutdownVariable;
        private @Nullable String speed;
        private @Nullable String speedVariable;
        private @Nullable Integer switchportAccessVlan;
        private @Nullable String switchportAccessVlanVariable;
        private @Nullable String switchportTrunkAllowedVlans;
        private @Nullable String switchportTrunkAllowedVlansVariable;
        private @Nullable Integer switchportTrunkNativeVlan;
        private @Nullable String switchportTrunkNativeVlanVariable;
        private @Nullable Integer voiceVlan;
        private @Nullable String voiceVlanVariable;
        public Builder() {}
        public Builder(ServiceSwitchportFeatureInterface defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.controlDirection = defaults.controlDirection;
    	      this.controlDirectionVariable = defaults.controlDirectionVariable;
    	      this.criticalVlan = defaults.criticalVlan;
    	      this.criticalVlanVariable = defaults.criticalVlanVariable;
    	      this.duplex = defaults.duplex;
    	      this.duplexVariable = defaults.duplexVariable;
    	      this.enablePeriodicReauth = defaults.enablePeriodicReauth;
    	      this.enablePeriodicReauthVariable = defaults.enablePeriodicReauthVariable;
    	      this.enableVoice = defaults.enableVoice;
    	      this.enableVoiceVariable = defaults.enableVoiceVariable;
    	      this.guestVlan = defaults.guestVlan;
    	      this.guestVlanVariable = defaults.guestVlanVariable;
    	      this.hostMode = defaults.hostMode;
    	      this.hostModeVariable = defaults.hostModeVariable;
    	      this.inactivity = defaults.inactivity;
    	      this.inactivityVariable = defaults.inactivityVariable;
    	      this.interfaceName = defaults.interfaceName;
    	      this.interfaceNameVariable = defaults.interfaceNameVariable;
    	      this.macAuthenticationBypass = defaults.macAuthenticationBypass;
    	      this.macAuthenticationBypassVariable = defaults.macAuthenticationBypassVariable;
    	      this.mode = defaults.mode;
    	      this.paeEnable = defaults.paeEnable;
    	      this.paeEnableVariable = defaults.paeEnableVariable;
    	      this.portControl = defaults.portControl;
    	      this.portControlVariable = defaults.portControlVariable;
    	      this.reauthentication = defaults.reauthentication;
    	      this.reauthenticationVariable = defaults.reauthenticationVariable;
    	      this.restrictedVlan = defaults.restrictedVlan;
    	      this.restrictedVlanVariable = defaults.restrictedVlanVariable;
    	      this.shutdown = defaults.shutdown;
    	      this.shutdownVariable = defaults.shutdownVariable;
    	      this.speed = defaults.speed;
    	      this.speedVariable = defaults.speedVariable;
    	      this.switchportAccessVlan = defaults.switchportAccessVlan;
    	      this.switchportAccessVlanVariable = defaults.switchportAccessVlanVariable;
    	      this.switchportTrunkAllowedVlans = defaults.switchportTrunkAllowedVlans;
    	      this.switchportTrunkAllowedVlansVariable = defaults.switchportTrunkAllowedVlansVariable;
    	      this.switchportTrunkNativeVlan = defaults.switchportTrunkNativeVlan;
    	      this.switchportTrunkNativeVlanVariable = defaults.switchportTrunkNativeVlanVariable;
    	      this.voiceVlan = defaults.voiceVlan;
    	      this.voiceVlanVariable = defaults.voiceVlanVariable;
        }

        @CustomType.Setter
        public Builder controlDirection(@Nullable String controlDirection) {

            this.controlDirection = controlDirection;
            return this;
        }
        @CustomType.Setter
        public Builder controlDirectionVariable(@Nullable String controlDirectionVariable) {

            this.controlDirectionVariable = controlDirectionVariable;
            return this;
        }
        @CustomType.Setter
        public Builder criticalVlan(@Nullable Integer criticalVlan) {

            this.criticalVlan = criticalVlan;
            return this;
        }
        @CustomType.Setter
        public Builder criticalVlanVariable(@Nullable String criticalVlanVariable) {

            this.criticalVlanVariable = criticalVlanVariable;
            return this;
        }
        @CustomType.Setter
        public Builder duplex(@Nullable String duplex) {

            this.duplex = duplex;
            return this;
        }
        @CustomType.Setter
        public Builder duplexVariable(@Nullable String duplexVariable) {

            this.duplexVariable = duplexVariable;
            return this;
        }
        @CustomType.Setter
        public Builder enablePeriodicReauth(@Nullable Boolean enablePeriodicReauth) {

            this.enablePeriodicReauth = enablePeriodicReauth;
            return this;
        }
        @CustomType.Setter
        public Builder enablePeriodicReauthVariable(@Nullable String enablePeriodicReauthVariable) {

            this.enablePeriodicReauthVariable = enablePeriodicReauthVariable;
            return this;
        }
        @CustomType.Setter
        public Builder enableVoice(@Nullable Boolean enableVoice) {

            this.enableVoice = enableVoice;
            return this;
        }
        @CustomType.Setter
        public Builder enableVoiceVariable(@Nullable String enableVoiceVariable) {

            this.enableVoiceVariable = enableVoiceVariable;
            return this;
        }
        @CustomType.Setter
        public Builder guestVlan(@Nullable Integer guestVlan) {

            this.guestVlan = guestVlan;
            return this;
        }
        @CustomType.Setter
        public Builder guestVlanVariable(@Nullable String guestVlanVariable) {

            this.guestVlanVariable = guestVlanVariable;
            return this;
        }
        @CustomType.Setter
        public Builder hostMode(@Nullable String hostMode) {

            this.hostMode = hostMode;
            return this;
        }
        @CustomType.Setter
        public Builder hostModeVariable(@Nullable String hostModeVariable) {

            this.hostModeVariable = hostModeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder inactivity(@Nullable Integer inactivity) {

            this.inactivity = inactivity;
            return this;
        }
        @CustomType.Setter
        public Builder inactivityVariable(@Nullable String inactivityVariable) {

            this.inactivityVariable = inactivityVariable;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceName(@Nullable String interfaceName) {

            this.interfaceName = interfaceName;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceNameVariable(@Nullable String interfaceNameVariable) {

            this.interfaceNameVariable = interfaceNameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder macAuthenticationBypass(@Nullable Boolean macAuthenticationBypass) {

            this.macAuthenticationBypass = macAuthenticationBypass;
            return this;
        }
        @CustomType.Setter
        public Builder macAuthenticationBypassVariable(@Nullable String macAuthenticationBypassVariable) {

            this.macAuthenticationBypassVariable = macAuthenticationBypassVariable;
            return this;
        }
        @CustomType.Setter
        public Builder mode(@Nullable String mode) {

            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder paeEnable(@Nullable Boolean paeEnable) {

            this.paeEnable = paeEnable;
            return this;
        }
        @CustomType.Setter
        public Builder paeEnableVariable(@Nullable String paeEnableVariable) {

            this.paeEnableVariable = paeEnableVariable;
            return this;
        }
        @CustomType.Setter
        public Builder portControl(@Nullable String portControl) {

            this.portControl = portControl;
            return this;
        }
        @CustomType.Setter
        public Builder portControlVariable(@Nullable String portControlVariable) {

            this.portControlVariable = portControlVariable;
            return this;
        }
        @CustomType.Setter
        public Builder reauthentication(@Nullable Integer reauthentication) {

            this.reauthentication = reauthentication;
            return this;
        }
        @CustomType.Setter
        public Builder reauthenticationVariable(@Nullable String reauthenticationVariable) {

            this.reauthenticationVariable = reauthenticationVariable;
            return this;
        }
        @CustomType.Setter
        public Builder restrictedVlan(@Nullable Integer restrictedVlan) {

            this.restrictedVlan = restrictedVlan;
            return this;
        }
        @CustomType.Setter
        public Builder restrictedVlanVariable(@Nullable String restrictedVlanVariable) {

            this.restrictedVlanVariable = restrictedVlanVariable;
            return this;
        }
        @CustomType.Setter
        public Builder shutdown(@Nullable Boolean shutdown) {

            this.shutdown = shutdown;
            return this;
        }
        @CustomType.Setter
        public Builder shutdownVariable(@Nullable String shutdownVariable) {

            this.shutdownVariable = shutdownVariable;
            return this;
        }
        @CustomType.Setter
        public Builder speed(@Nullable String speed) {

            this.speed = speed;
            return this;
        }
        @CustomType.Setter
        public Builder speedVariable(@Nullable String speedVariable) {

            this.speedVariable = speedVariable;
            return this;
        }
        @CustomType.Setter
        public Builder switchportAccessVlan(@Nullable Integer switchportAccessVlan) {

            this.switchportAccessVlan = switchportAccessVlan;
            return this;
        }
        @CustomType.Setter
        public Builder switchportAccessVlanVariable(@Nullable String switchportAccessVlanVariable) {

            this.switchportAccessVlanVariable = switchportAccessVlanVariable;
            return this;
        }
        @CustomType.Setter
        public Builder switchportTrunkAllowedVlans(@Nullable String switchportTrunkAllowedVlans) {

            this.switchportTrunkAllowedVlans = switchportTrunkAllowedVlans;
            return this;
        }
        @CustomType.Setter
        public Builder switchportTrunkAllowedVlansVariable(@Nullable String switchportTrunkAllowedVlansVariable) {

            this.switchportTrunkAllowedVlansVariable = switchportTrunkAllowedVlansVariable;
            return this;
        }
        @CustomType.Setter
        public Builder switchportTrunkNativeVlan(@Nullable Integer switchportTrunkNativeVlan) {

            this.switchportTrunkNativeVlan = switchportTrunkNativeVlan;
            return this;
        }
        @CustomType.Setter
        public Builder switchportTrunkNativeVlanVariable(@Nullable String switchportTrunkNativeVlanVariable) {

            this.switchportTrunkNativeVlanVariable = switchportTrunkNativeVlanVariable;
            return this;
        }
        @CustomType.Setter
        public Builder voiceVlan(@Nullable Integer voiceVlan) {

            this.voiceVlan = voiceVlan;
            return this;
        }
        @CustomType.Setter
        public Builder voiceVlanVariable(@Nullable String voiceVlanVariable) {

            this.voiceVlanVariable = voiceVlanVariable;
            return this;
        }
        public ServiceSwitchportFeatureInterface build() {
            final var _resultValue = new ServiceSwitchportFeatureInterface();
            _resultValue.controlDirection = controlDirection;
            _resultValue.controlDirectionVariable = controlDirectionVariable;
            _resultValue.criticalVlan = criticalVlan;
            _resultValue.criticalVlanVariable = criticalVlanVariable;
            _resultValue.duplex = duplex;
            _resultValue.duplexVariable = duplexVariable;
            _resultValue.enablePeriodicReauth = enablePeriodicReauth;
            _resultValue.enablePeriodicReauthVariable = enablePeriodicReauthVariable;
            _resultValue.enableVoice = enableVoice;
            _resultValue.enableVoiceVariable = enableVoiceVariable;
            _resultValue.guestVlan = guestVlan;
            _resultValue.guestVlanVariable = guestVlanVariable;
            _resultValue.hostMode = hostMode;
            _resultValue.hostModeVariable = hostModeVariable;
            _resultValue.inactivity = inactivity;
            _resultValue.inactivityVariable = inactivityVariable;
            _resultValue.interfaceName = interfaceName;
            _resultValue.interfaceNameVariable = interfaceNameVariable;
            _resultValue.macAuthenticationBypass = macAuthenticationBypass;
            _resultValue.macAuthenticationBypassVariable = macAuthenticationBypassVariable;
            _resultValue.mode = mode;
            _resultValue.paeEnable = paeEnable;
            _resultValue.paeEnableVariable = paeEnableVariable;
            _resultValue.portControl = portControl;
            _resultValue.portControlVariable = portControlVariable;
            _resultValue.reauthentication = reauthentication;
            _resultValue.reauthenticationVariable = reauthenticationVariable;
            _resultValue.restrictedVlan = restrictedVlan;
            _resultValue.restrictedVlanVariable = restrictedVlanVariable;
            _resultValue.shutdown = shutdown;
            _resultValue.shutdownVariable = shutdownVariable;
            _resultValue.speed = speed;
            _resultValue.speedVariable = speedVariable;
            _resultValue.switchportAccessVlan = switchportAccessVlan;
            _resultValue.switchportAccessVlanVariable = switchportAccessVlanVariable;
            _resultValue.switchportTrunkAllowedVlans = switchportTrunkAllowedVlans;
            _resultValue.switchportTrunkAllowedVlansVariable = switchportTrunkAllowedVlansVariable;
            _resultValue.switchportTrunkNativeVlan = switchportTrunkNativeVlan;
            _resultValue.switchportTrunkNativeVlanVariable = switchportTrunkNativeVlanVariable;
            _resultValue.voiceVlan = voiceVlan;
            _resultValue.voiceVlanVariable = voiceVlanVariable;
            return _resultValue;
        }
    }
}
