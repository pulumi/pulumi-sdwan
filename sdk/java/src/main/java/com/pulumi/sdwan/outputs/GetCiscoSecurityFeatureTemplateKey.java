// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCiscoSecurityFeatureTemplateKey {
    /**
     * @return Configure Accept AO Mismatch
     * 
     */
    private Boolean acceptAoMismatch;
    /**
     * @return Variable name
     * 
     */
    private String acceptAoMismatchVariable;
    /**
     * @return Configure Accept lifetime Duration
     * 
     */
    private Integer acceptLifetimeDuration;
    /**
     * @return Variable name
     * 
     */
    private String acceptLifetimeDurationVariable;
    /**
     * @return Configure Key lifetime end time
     * 
     */
    private String acceptLifetimeEndTime;
    /**
     * @return Configure Key lifetime end time
     * 
     */
    private String acceptLifetimeEndTimeFormat;
    /**
     * @return Configure Key lifetime end time
     * 
     */
    private Boolean acceptLifetimeInfinite;
    /**
     * @return Variable name
     * 
     */
    private String acceptLifetimeInfiniteVariable;
    /**
     * @return Configure Accept Lifetime Local
     * 
     */
    private Boolean acceptLifetimeLocal;
    /**
     * @return Variable name
     * 
     */
    private String acceptLifetimeLocalVariable;
    /**
     * @return Configure Key lifetime start time
     * 
     */
    private String acceptLifetimeStartTime;
    /**
     * @return Select the chain name
     * 
     */
    private String chainName;
    /**
     * @return Crypto Algorithm
     * 
     */
    private String cryptoAlgorithm;
    /**
     * @return Select the Key ID
     * 
     */
    private String id;
    /**
     * @return Configure Include TCP Options
     * 
     */
    private Boolean includeTcpOptions;
    /**
     * @return Variable name
     * 
     */
    private String includeTcpOptionsVariable;
    /**
     * @return Specify the Key String
     * 
     */
    private String keyString;
    /**
     * @return Variable name
     * 
     */
    private String keyStringVariable;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private Boolean optional;
    /**
     * @return Specify the Receiver ID
     * 
     */
    private Integer receiveId;
    /**
     * @return Variable name
     * 
     */
    private String receiveIdVariable;
    /**
     * @return Specify the Send ID
     * 
     */
    private Integer sendId;
    /**
     * @return Variable name
     * 
     */
    private String sendIdVariable;
    /**
     * @return Configure Send lifetime Duration
     * 
     */
    private Integer sendLifetimeDuration;
    /**
     * @return Variable name
     * 
     */
    private String sendLifetimeDurationVariable;
    /**
     * @return Configure Key lifetime end time
     * 
     */
    private String sendLifetimeEndTime;
    /**
     * @return Configure Key lifetime end time
     * 
     */
    private String sendLifetimeEndTimeFormat;
    /**
     * @return Configure Key lifetime end time
     * 
     */
    private Boolean sendLifetimeInfinite;
    /**
     * @return Variable name
     * 
     */
    private String sendLifetimeInfiniteVariable;
    /**
     * @return Configure Send lifetime Local
     * 
     */
    private Boolean sendLifetimeLocal;
    /**
     * @return Variable name
     * 
     */
    private String sendLifetimeLocalVariable;
    /**
     * @return Configure Key lifetime start time
     * 
     */
    private String sendLifetimeStartTime;

    private GetCiscoSecurityFeatureTemplateKey() {}
    /**
     * @return Configure Accept AO Mismatch
     * 
     */
    public Boolean acceptAoMismatch() {
        return this.acceptAoMismatch;
    }
    /**
     * @return Variable name
     * 
     */
    public String acceptAoMismatchVariable() {
        return this.acceptAoMismatchVariable;
    }
    /**
     * @return Configure Accept lifetime Duration
     * 
     */
    public Integer acceptLifetimeDuration() {
        return this.acceptLifetimeDuration;
    }
    /**
     * @return Variable name
     * 
     */
    public String acceptLifetimeDurationVariable() {
        return this.acceptLifetimeDurationVariable;
    }
    /**
     * @return Configure Key lifetime end time
     * 
     */
    public String acceptLifetimeEndTime() {
        return this.acceptLifetimeEndTime;
    }
    /**
     * @return Configure Key lifetime end time
     * 
     */
    public String acceptLifetimeEndTimeFormat() {
        return this.acceptLifetimeEndTimeFormat;
    }
    /**
     * @return Configure Key lifetime end time
     * 
     */
    public Boolean acceptLifetimeInfinite() {
        return this.acceptLifetimeInfinite;
    }
    /**
     * @return Variable name
     * 
     */
    public String acceptLifetimeInfiniteVariable() {
        return this.acceptLifetimeInfiniteVariable;
    }
    /**
     * @return Configure Accept Lifetime Local
     * 
     */
    public Boolean acceptLifetimeLocal() {
        return this.acceptLifetimeLocal;
    }
    /**
     * @return Variable name
     * 
     */
    public String acceptLifetimeLocalVariable() {
        return this.acceptLifetimeLocalVariable;
    }
    /**
     * @return Configure Key lifetime start time
     * 
     */
    public String acceptLifetimeStartTime() {
        return this.acceptLifetimeStartTime;
    }
    /**
     * @return Select the chain name
     * 
     */
    public String chainName() {
        return this.chainName;
    }
    /**
     * @return Crypto Algorithm
     * 
     */
    public String cryptoAlgorithm() {
        return this.cryptoAlgorithm;
    }
    /**
     * @return Select the Key ID
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Configure Include TCP Options
     * 
     */
    public Boolean includeTcpOptions() {
        return this.includeTcpOptions;
    }
    /**
     * @return Variable name
     * 
     */
    public String includeTcpOptionsVariable() {
        return this.includeTcpOptionsVariable;
    }
    /**
     * @return Specify the Key String
     * 
     */
    public String keyString() {
        return this.keyString;
    }
    /**
     * @return Variable name
     * 
     */
    public String keyStringVariable() {
        return this.keyStringVariable;
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Boolean optional() {
        return this.optional;
    }
    /**
     * @return Specify the Receiver ID
     * 
     */
    public Integer receiveId() {
        return this.receiveId;
    }
    /**
     * @return Variable name
     * 
     */
    public String receiveIdVariable() {
        return this.receiveIdVariable;
    }
    /**
     * @return Specify the Send ID
     * 
     */
    public Integer sendId() {
        return this.sendId;
    }
    /**
     * @return Variable name
     * 
     */
    public String sendIdVariable() {
        return this.sendIdVariable;
    }
    /**
     * @return Configure Send lifetime Duration
     * 
     */
    public Integer sendLifetimeDuration() {
        return this.sendLifetimeDuration;
    }
    /**
     * @return Variable name
     * 
     */
    public String sendLifetimeDurationVariable() {
        return this.sendLifetimeDurationVariable;
    }
    /**
     * @return Configure Key lifetime end time
     * 
     */
    public String sendLifetimeEndTime() {
        return this.sendLifetimeEndTime;
    }
    /**
     * @return Configure Key lifetime end time
     * 
     */
    public String sendLifetimeEndTimeFormat() {
        return this.sendLifetimeEndTimeFormat;
    }
    /**
     * @return Configure Key lifetime end time
     * 
     */
    public Boolean sendLifetimeInfinite() {
        return this.sendLifetimeInfinite;
    }
    /**
     * @return Variable name
     * 
     */
    public String sendLifetimeInfiniteVariable() {
        return this.sendLifetimeInfiniteVariable;
    }
    /**
     * @return Configure Send lifetime Local
     * 
     */
    public Boolean sendLifetimeLocal() {
        return this.sendLifetimeLocal;
    }
    /**
     * @return Variable name
     * 
     */
    public String sendLifetimeLocalVariable() {
        return this.sendLifetimeLocalVariable;
    }
    /**
     * @return Configure Key lifetime start time
     * 
     */
    public String sendLifetimeStartTime() {
        return this.sendLifetimeStartTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCiscoSecurityFeatureTemplateKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean acceptAoMismatch;
        private String acceptAoMismatchVariable;
        private Integer acceptLifetimeDuration;
        private String acceptLifetimeDurationVariable;
        private String acceptLifetimeEndTime;
        private String acceptLifetimeEndTimeFormat;
        private Boolean acceptLifetimeInfinite;
        private String acceptLifetimeInfiniteVariable;
        private Boolean acceptLifetimeLocal;
        private String acceptLifetimeLocalVariable;
        private String acceptLifetimeStartTime;
        private String chainName;
        private String cryptoAlgorithm;
        private String id;
        private Boolean includeTcpOptions;
        private String includeTcpOptionsVariable;
        private String keyString;
        private String keyStringVariable;
        private Boolean optional;
        private Integer receiveId;
        private String receiveIdVariable;
        private Integer sendId;
        private String sendIdVariable;
        private Integer sendLifetimeDuration;
        private String sendLifetimeDurationVariable;
        private String sendLifetimeEndTime;
        private String sendLifetimeEndTimeFormat;
        private Boolean sendLifetimeInfinite;
        private String sendLifetimeInfiniteVariable;
        private Boolean sendLifetimeLocal;
        private String sendLifetimeLocalVariable;
        private String sendLifetimeStartTime;
        public Builder() {}
        public Builder(GetCiscoSecurityFeatureTemplateKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceptAoMismatch = defaults.acceptAoMismatch;
    	      this.acceptAoMismatchVariable = defaults.acceptAoMismatchVariable;
    	      this.acceptLifetimeDuration = defaults.acceptLifetimeDuration;
    	      this.acceptLifetimeDurationVariable = defaults.acceptLifetimeDurationVariable;
    	      this.acceptLifetimeEndTime = defaults.acceptLifetimeEndTime;
    	      this.acceptLifetimeEndTimeFormat = defaults.acceptLifetimeEndTimeFormat;
    	      this.acceptLifetimeInfinite = defaults.acceptLifetimeInfinite;
    	      this.acceptLifetimeInfiniteVariable = defaults.acceptLifetimeInfiniteVariable;
    	      this.acceptLifetimeLocal = defaults.acceptLifetimeLocal;
    	      this.acceptLifetimeLocalVariable = defaults.acceptLifetimeLocalVariable;
    	      this.acceptLifetimeStartTime = defaults.acceptLifetimeStartTime;
    	      this.chainName = defaults.chainName;
    	      this.cryptoAlgorithm = defaults.cryptoAlgorithm;
    	      this.id = defaults.id;
    	      this.includeTcpOptions = defaults.includeTcpOptions;
    	      this.includeTcpOptionsVariable = defaults.includeTcpOptionsVariable;
    	      this.keyString = defaults.keyString;
    	      this.keyStringVariable = defaults.keyStringVariable;
    	      this.optional = defaults.optional;
    	      this.receiveId = defaults.receiveId;
    	      this.receiveIdVariable = defaults.receiveIdVariable;
    	      this.sendId = defaults.sendId;
    	      this.sendIdVariable = defaults.sendIdVariable;
    	      this.sendLifetimeDuration = defaults.sendLifetimeDuration;
    	      this.sendLifetimeDurationVariable = defaults.sendLifetimeDurationVariable;
    	      this.sendLifetimeEndTime = defaults.sendLifetimeEndTime;
    	      this.sendLifetimeEndTimeFormat = defaults.sendLifetimeEndTimeFormat;
    	      this.sendLifetimeInfinite = defaults.sendLifetimeInfinite;
    	      this.sendLifetimeInfiniteVariable = defaults.sendLifetimeInfiniteVariable;
    	      this.sendLifetimeLocal = defaults.sendLifetimeLocal;
    	      this.sendLifetimeLocalVariable = defaults.sendLifetimeLocalVariable;
    	      this.sendLifetimeStartTime = defaults.sendLifetimeStartTime;
        }

        @CustomType.Setter
        public Builder acceptAoMismatch(Boolean acceptAoMismatch) {
            if (acceptAoMismatch == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "acceptAoMismatch");
            }
            this.acceptAoMismatch = acceptAoMismatch;
            return this;
        }
        @CustomType.Setter
        public Builder acceptAoMismatchVariable(String acceptAoMismatchVariable) {
            if (acceptAoMismatchVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "acceptAoMismatchVariable");
            }
            this.acceptAoMismatchVariable = acceptAoMismatchVariable;
            return this;
        }
        @CustomType.Setter
        public Builder acceptLifetimeDuration(Integer acceptLifetimeDuration) {
            if (acceptLifetimeDuration == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "acceptLifetimeDuration");
            }
            this.acceptLifetimeDuration = acceptLifetimeDuration;
            return this;
        }
        @CustomType.Setter
        public Builder acceptLifetimeDurationVariable(String acceptLifetimeDurationVariable) {
            if (acceptLifetimeDurationVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "acceptLifetimeDurationVariable");
            }
            this.acceptLifetimeDurationVariable = acceptLifetimeDurationVariable;
            return this;
        }
        @CustomType.Setter
        public Builder acceptLifetimeEndTime(String acceptLifetimeEndTime) {
            if (acceptLifetimeEndTime == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "acceptLifetimeEndTime");
            }
            this.acceptLifetimeEndTime = acceptLifetimeEndTime;
            return this;
        }
        @CustomType.Setter
        public Builder acceptLifetimeEndTimeFormat(String acceptLifetimeEndTimeFormat) {
            if (acceptLifetimeEndTimeFormat == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "acceptLifetimeEndTimeFormat");
            }
            this.acceptLifetimeEndTimeFormat = acceptLifetimeEndTimeFormat;
            return this;
        }
        @CustomType.Setter
        public Builder acceptLifetimeInfinite(Boolean acceptLifetimeInfinite) {
            if (acceptLifetimeInfinite == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "acceptLifetimeInfinite");
            }
            this.acceptLifetimeInfinite = acceptLifetimeInfinite;
            return this;
        }
        @CustomType.Setter
        public Builder acceptLifetimeInfiniteVariable(String acceptLifetimeInfiniteVariable) {
            if (acceptLifetimeInfiniteVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "acceptLifetimeInfiniteVariable");
            }
            this.acceptLifetimeInfiniteVariable = acceptLifetimeInfiniteVariable;
            return this;
        }
        @CustomType.Setter
        public Builder acceptLifetimeLocal(Boolean acceptLifetimeLocal) {
            if (acceptLifetimeLocal == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "acceptLifetimeLocal");
            }
            this.acceptLifetimeLocal = acceptLifetimeLocal;
            return this;
        }
        @CustomType.Setter
        public Builder acceptLifetimeLocalVariable(String acceptLifetimeLocalVariable) {
            if (acceptLifetimeLocalVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "acceptLifetimeLocalVariable");
            }
            this.acceptLifetimeLocalVariable = acceptLifetimeLocalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder acceptLifetimeStartTime(String acceptLifetimeStartTime) {
            if (acceptLifetimeStartTime == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "acceptLifetimeStartTime");
            }
            this.acceptLifetimeStartTime = acceptLifetimeStartTime;
            return this;
        }
        @CustomType.Setter
        public Builder chainName(String chainName) {
            if (chainName == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "chainName");
            }
            this.chainName = chainName;
            return this;
        }
        @CustomType.Setter
        public Builder cryptoAlgorithm(String cryptoAlgorithm) {
            if (cryptoAlgorithm == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "cryptoAlgorithm");
            }
            this.cryptoAlgorithm = cryptoAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder includeTcpOptions(Boolean includeTcpOptions) {
            if (includeTcpOptions == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "includeTcpOptions");
            }
            this.includeTcpOptions = includeTcpOptions;
            return this;
        }
        @CustomType.Setter
        public Builder includeTcpOptionsVariable(String includeTcpOptionsVariable) {
            if (includeTcpOptionsVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "includeTcpOptionsVariable");
            }
            this.includeTcpOptionsVariable = includeTcpOptionsVariable;
            return this;
        }
        @CustomType.Setter
        public Builder keyString(String keyString) {
            if (keyString == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "keyString");
            }
            this.keyString = keyString;
            return this;
        }
        @CustomType.Setter
        public Builder keyStringVariable(String keyStringVariable) {
            if (keyStringVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "keyStringVariable");
            }
            this.keyStringVariable = keyStringVariable;
            return this;
        }
        @CustomType.Setter
        public Builder optional(Boolean optional) {
            if (optional == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "optional");
            }
            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder receiveId(Integer receiveId) {
            if (receiveId == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "receiveId");
            }
            this.receiveId = receiveId;
            return this;
        }
        @CustomType.Setter
        public Builder receiveIdVariable(String receiveIdVariable) {
            if (receiveIdVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "receiveIdVariable");
            }
            this.receiveIdVariable = receiveIdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder sendId(Integer sendId) {
            if (sendId == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "sendId");
            }
            this.sendId = sendId;
            return this;
        }
        @CustomType.Setter
        public Builder sendIdVariable(String sendIdVariable) {
            if (sendIdVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "sendIdVariable");
            }
            this.sendIdVariable = sendIdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder sendLifetimeDuration(Integer sendLifetimeDuration) {
            if (sendLifetimeDuration == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "sendLifetimeDuration");
            }
            this.sendLifetimeDuration = sendLifetimeDuration;
            return this;
        }
        @CustomType.Setter
        public Builder sendLifetimeDurationVariable(String sendLifetimeDurationVariable) {
            if (sendLifetimeDurationVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "sendLifetimeDurationVariable");
            }
            this.sendLifetimeDurationVariable = sendLifetimeDurationVariable;
            return this;
        }
        @CustomType.Setter
        public Builder sendLifetimeEndTime(String sendLifetimeEndTime) {
            if (sendLifetimeEndTime == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "sendLifetimeEndTime");
            }
            this.sendLifetimeEndTime = sendLifetimeEndTime;
            return this;
        }
        @CustomType.Setter
        public Builder sendLifetimeEndTimeFormat(String sendLifetimeEndTimeFormat) {
            if (sendLifetimeEndTimeFormat == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "sendLifetimeEndTimeFormat");
            }
            this.sendLifetimeEndTimeFormat = sendLifetimeEndTimeFormat;
            return this;
        }
        @CustomType.Setter
        public Builder sendLifetimeInfinite(Boolean sendLifetimeInfinite) {
            if (sendLifetimeInfinite == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "sendLifetimeInfinite");
            }
            this.sendLifetimeInfinite = sendLifetimeInfinite;
            return this;
        }
        @CustomType.Setter
        public Builder sendLifetimeInfiniteVariable(String sendLifetimeInfiniteVariable) {
            if (sendLifetimeInfiniteVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "sendLifetimeInfiniteVariable");
            }
            this.sendLifetimeInfiniteVariable = sendLifetimeInfiniteVariable;
            return this;
        }
        @CustomType.Setter
        public Builder sendLifetimeLocal(Boolean sendLifetimeLocal) {
            if (sendLifetimeLocal == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "sendLifetimeLocal");
            }
            this.sendLifetimeLocal = sendLifetimeLocal;
            return this;
        }
        @CustomType.Setter
        public Builder sendLifetimeLocalVariable(String sendLifetimeLocalVariable) {
            if (sendLifetimeLocalVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "sendLifetimeLocalVariable");
            }
            this.sendLifetimeLocalVariable = sendLifetimeLocalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder sendLifetimeStartTime(String sendLifetimeStartTime) {
            if (sendLifetimeStartTime == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecurityFeatureTemplateKey", "sendLifetimeStartTime");
            }
            this.sendLifetimeStartTime = sendLifetimeStartTime;
            return this;
        }
        public GetCiscoSecurityFeatureTemplateKey build() {
            final var _resultValue = new GetCiscoSecurityFeatureTemplateKey();
            _resultValue.acceptAoMismatch = acceptAoMismatch;
            _resultValue.acceptAoMismatchVariable = acceptAoMismatchVariable;
            _resultValue.acceptLifetimeDuration = acceptLifetimeDuration;
            _resultValue.acceptLifetimeDurationVariable = acceptLifetimeDurationVariable;
            _resultValue.acceptLifetimeEndTime = acceptLifetimeEndTime;
            _resultValue.acceptLifetimeEndTimeFormat = acceptLifetimeEndTimeFormat;
            _resultValue.acceptLifetimeInfinite = acceptLifetimeInfinite;
            _resultValue.acceptLifetimeInfiniteVariable = acceptLifetimeInfiniteVariable;
            _resultValue.acceptLifetimeLocal = acceptLifetimeLocal;
            _resultValue.acceptLifetimeLocalVariable = acceptLifetimeLocalVariable;
            _resultValue.acceptLifetimeStartTime = acceptLifetimeStartTime;
            _resultValue.chainName = chainName;
            _resultValue.cryptoAlgorithm = cryptoAlgorithm;
            _resultValue.id = id;
            _resultValue.includeTcpOptions = includeTcpOptions;
            _resultValue.includeTcpOptionsVariable = includeTcpOptionsVariable;
            _resultValue.keyString = keyString;
            _resultValue.keyStringVariable = keyStringVariable;
            _resultValue.optional = optional;
            _resultValue.receiveId = receiveId;
            _resultValue.receiveIdVariable = receiveIdVariable;
            _resultValue.sendId = sendId;
            _resultValue.sendIdVariable = sendIdVariable;
            _resultValue.sendLifetimeDuration = sendLifetimeDuration;
            _resultValue.sendLifetimeDurationVariable = sendLifetimeDurationVariable;
            _resultValue.sendLifetimeEndTime = sendLifetimeEndTime;
            _resultValue.sendLifetimeEndTimeFormat = sendLifetimeEndTimeFormat;
            _resultValue.sendLifetimeInfinite = sendLifetimeInfinite;
            _resultValue.sendLifetimeInfiniteVariable = sendLifetimeInfiniteVariable;
            _resultValue.sendLifetimeLocal = sendLifetimeLocal;
            _resultValue.sendLifetimeLocalVariable = sendLifetimeLocalVariable;
            _resultValue.sendLifetimeStartTime = sendLifetimeStartTime;
            return _resultValue;
        }
    }
}
