// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.ApplicationPriorityTrafficPolicyPolicySequenceArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationPriorityTrafficPolicyPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationPriorityTrafficPolicyPolicyState Empty = new ApplicationPriorityTrafficPolicyPolicyState();

    /**
     * - Choices: `drop`, `accept`
     * 
     */
    @Import(name="defaultAction")
    private @Nullable Output<String> defaultAction;

    /**
     * @return - Choices: `drop`, `accept`
     * 
     */
    public Optional<Output<String>> defaultAction() {
        return Optional.ofNullable(this.defaultAction);
    }

    /**
     * The description of the Policy
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Policy
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * - Choices: `service`, `tunnel`, `all`
     * 
     */
    @Import(name="direction")
    private @Nullable Output<String> direction;

    /**
     * @return - Choices: `service`, `tunnel`, `all`
     * 
     */
    public Optional<Output<String>> direction() {
        return Optional.ofNullable(this.direction);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId")
    private @Nullable Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Optional<Output<String>> featureProfileId() {
        return Optional.ofNullable(this.featureProfileId);
    }

    /**
     * The name of the Policy
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Policy
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Traffic policy sequence list
     * 
     */
    @Import(name="sequences")
    private @Nullable Output<List<ApplicationPriorityTrafficPolicyPolicySequenceArgs>> sequences;

    /**
     * @return Traffic policy sequence list
     * 
     */
    public Optional<Output<List<ApplicationPriorityTrafficPolicyPolicySequenceArgs>>> sequences() {
        return Optional.ofNullable(this.sequences);
    }

    /**
     * The version of the Policy
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the Policy
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    @Import(name="vpns")
    private @Nullable Output<List<String>> vpns;

    public Optional<Output<List<String>>> vpns() {
        return Optional.ofNullable(this.vpns);
    }

    private ApplicationPriorityTrafficPolicyPolicyState() {}

    private ApplicationPriorityTrafficPolicyPolicyState(ApplicationPriorityTrafficPolicyPolicyState $) {
        this.defaultAction = $.defaultAction;
        this.description = $.description;
        this.direction = $.direction;
        this.featureProfileId = $.featureProfileId;
        this.name = $.name;
        this.sequences = $.sequences;
        this.version = $.version;
        this.vpns = $.vpns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationPriorityTrafficPolicyPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationPriorityTrafficPolicyPolicyState $;

        public Builder() {
            $ = new ApplicationPriorityTrafficPolicyPolicyState();
        }

        public Builder(ApplicationPriorityTrafficPolicyPolicyState defaults) {
            $ = new ApplicationPriorityTrafficPolicyPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultAction - Choices: `drop`, `accept`
         * 
         * @return builder
         * 
         */
        public Builder defaultAction(@Nullable Output<String> defaultAction) {
            $.defaultAction = defaultAction;
            return this;
        }

        /**
         * @param defaultAction - Choices: `drop`, `accept`
         * 
         * @return builder
         * 
         */
        public Builder defaultAction(String defaultAction) {
            return defaultAction(Output.of(defaultAction));
        }

        /**
         * @param description The description of the Policy
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Policy
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param direction - Choices: `service`, `tunnel`, `all`
         * 
         * @return builder
         * 
         */
        public Builder direction(@Nullable Output<String> direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param direction - Choices: `service`, `tunnel`, `all`
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            return direction(Output.of(direction));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(@Nullable Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param name The name of the Policy
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Policy
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param sequences Traffic policy sequence list
         * 
         * @return builder
         * 
         */
        public Builder sequences(@Nullable Output<List<ApplicationPriorityTrafficPolicyPolicySequenceArgs>> sequences) {
            $.sequences = sequences;
            return this;
        }

        /**
         * @param sequences Traffic policy sequence list
         * 
         * @return builder
         * 
         */
        public Builder sequences(List<ApplicationPriorityTrafficPolicyPolicySequenceArgs> sequences) {
            return sequences(Output.of(sequences));
        }

        /**
         * @param sequences Traffic policy sequence list
         * 
         * @return builder
         * 
         */
        public Builder sequences(ApplicationPriorityTrafficPolicyPolicySequenceArgs... sequences) {
            return sequences(List.of(sequences));
        }

        /**
         * @param version The version of the Policy
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the Policy
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public Builder vpns(@Nullable Output<List<String>> vpns) {
            $.vpns = vpns;
            return this;
        }

        public Builder vpns(List<String> vpns) {
            return vpns(Output.of(vpns));
        }

        public Builder vpns(String... vpns) {
            return vpns(List.of(vpns));
        }

        public ApplicationPriorityTrafficPolicyPolicyState build() {
            return $;
        }
    }

}
