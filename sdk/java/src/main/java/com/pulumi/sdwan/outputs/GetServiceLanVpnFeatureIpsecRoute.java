// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceLanVpnFeatureIpsecRoute {
    /**
     * @return Variable name
     * 
     */
    private String interfaceVariable;
    /**
     * @return Interface
     * 
     */
    private List<String> interfaces;
    /**
     * @return IP Address
     * 
     */
    private String networkAddress;
    /**
     * @return Variable name
     * 
     */
    private String networkAddressVariable;
    /**
     * @return Subnet Mask
     * 
     */
    private String subnetMask;
    /**
     * @return Variable name
     * 
     */
    private String subnetMaskVariable;

    private GetServiceLanVpnFeatureIpsecRoute() {}
    /**
     * @return Variable name
     * 
     */
    public String interfaceVariable() {
        return this.interfaceVariable;
    }
    /**
     * @return Interface
     * 
     */
    public List<String> interfaces() {
        return this.interfaces;
    }
    /**
     * @return IP Address
     * 
     */
    public String networkAddress() {
        return this.networkAddress;
    }
    /**
     * @return Variable name
     * 
     */
    public String networkAddressVariable() {
        return this.networkAddressVariable;
    }
    /**
     * @return Subnet Mask
     * 
     */
    public String subnetMask() {
        return this.subnetMask;
    }
    /**
     * @return Variable name
     * 
     */
    public String subnetMaskVariable() {
        return this.subnetMaskVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceLanVpnFeatureIpsecRoute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String interfaceVariable;
        private List<String> interfaces;
        private String networkAddress;
        private String networkAddressVariable;
        private String subnetMask;
        private String subnetMaskVariable;
        public Builder() {}
        public Builder(GetServiceLanVpnFeatureIpsecRoute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.interfaceVariable = defaults.interfaceVariable;
    	      this.interfaces = defaults.interfaces;
    	      this.networkAddress = defaults.networkAddress;
    	      this.networkAddressVariable = defaults.networkAddressVariable;
    	      this.subnetMask = defaults.subnetMask;
    	      this.subnetMaskVariable = defaults.subnetMaskVariable;
        }

        @CustomType.Setter
        public Builder interfaceVariable(String interfaceVariable) {
            if (interfaceVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureIpsecRoute", "interfaceVariable");
            }
            this.interfaceVariable = interfaceVariable;
            return this;
        }
        @CustomType.Setter
        public Builder interfaces(List<String> interfaces) {
            if (interfaces == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureIpsecRoute", "interfaces");
            }
            this.interfaces = interfaces;
            return this;
        }
        public Builder interfaces(String... interfaces) {
            return interfaces(List.of(interfaces));
        }
        @CustomType.Setter
        public Builder networkAddress(String networkAddress) {
            if (networkAddress == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureIpsecRoute", "networkAddress");
            }
            this.networkAddress = networkAddress;
            return this;
        }
        @CustomType.Setter
        public Builder networkAddressVariable(String networkAddressVariable) {
            if (networkAddressVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureIpsecRoute", "networkAddressVariable");
            }
            this.networkAddressVariable = networkAddressVariable;
            return this;
        }
        @CustomType.Setter
        public Builder subnetMask(String subnetMask) {
            if (subnetMask == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureIpsecRoute", "subnetMask");
            }
            this.subnetMask = subnetMask;
            return this;
        }
        @CustomType.Setter
        public Builder subnetMaskVariable(String subnetMaskVariable) {
            if (subnetMaskVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureIpsecRoute", "subnetMaskVariable");
            }
            this.subnetMaskVariable = subnetMaskVariable;
            return this;
        }
        public GetServiceLanVpnFeatureIpsecRoute build() {
            final var _resultValue = new GetServiceLanVpnFeatureIpsecRoute();
            _resultValue.interfaceVariable = interfaceVariable;
            _resultValue.interfaces = interfaces;
            _resultValue.networkAddress = networkAddress;
            _resultValue.networkAddressVariable = networkAddressVariable;
            _resultValue.subnetMask = subnetMask;
            _resultValue.subnetMaskVariable = subnetMaskVariable;
            return _resultValue;
        }
    }
}
