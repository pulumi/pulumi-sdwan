// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetEigrpFeatureTemplateInterfaceSummaryAddress;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEigrpFeatureTemplateInterface {
    /**
     * @return Set interface name
     * 
     */
    private String interfaceName;
    /**
     * @return Variable name
     * 
     */
    private String interfaceNameVariable;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private Boolean optional;
    /**
     * @return Enable/disable EIGRP
     * 
     */
    private Boolean shutdown;
    /**
     * @return Variable name
     * 
     */
    private String shutdownVariable;
    /**
     * @return Set summary addresses
     * 
     */
    private List<GetEigrpFeatureTemplateInterfaceSummaryAddress> summaryAddresses;

    private GetEigrpFeatureTemplateInterface() {}
    /**
     * @return Set interface name
     * 
     */
    public String interfaceName() {
        return this.interfaceName;
    }
    /**
     * @return Variable name
     * 
     */
    public String interfaceNameVariable() {
        return this.interfaceNameVariable;
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Boolean optional() {
        return this.optional;
    }
    /**
     * @return Enable/disable EIGRP
     * 
     */
    public Boolean shutdown() {
        return this.shutdown;
    }
    /**
     * @return Variable name
     * 
     */
    public String shutdownVariable() {
        return this.shutdownVariable;
    }
    /**
     * @return Set summary addresses
     * 
     */
    public List<GetEigrpFeatureTemplateInterfaceSummaryAddress> summaryAddresses() {
        return this.summaryAddresses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEigrpFeatureTemplateInterface defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String interfaceName;
        private String interfaceNameVariable;
        private Boolean optional;
        private Boolean shutdown;
        private String shutdownVariable;
        private List<GetEigrpFeatureTemplateInterfaceSummaryAddress> summaryAddresses;
        public Builder() {}
        public Builder(GetEigrpFeatureTemplateInterface defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.interfaceName = defaults.interfaceName;
    	      this.interfaceNameVariable = defaults.interfaceNameVariable;
    	      this.optional = defaults.optional;
    	      this.shutdown = defaults.shutdown;
    	      this.shutdownVariable = defaults.shutdownVariable;
    	      this.summaryAddresses = defaults.summaryAddresses;
        }

        @CustomType.Setter
        public Builder interfaceName(String interfaceName) {
            if (interfaceName == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateInterface", "interfaceName");
            }
            this.interfaceName = interfaceName;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceNameVariable(String interfaceNameVariable) {
            if (interfaceNameVariable == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateInterface", "interfaceNameVariable");
            }
            this.interfaceNameVariable = interfaceNameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder optional(Boolean optional) {
            if (optional == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateInterface", "optional");
            }
            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder shutdown(Boolean shutdown) {
            if (shutdown == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateInterface", "shutdown");
            }
            this.shutdown = shutdown;
            return this;
        }
        @CustomType.Setter
        public Builder shutdownVariable(String shutdownVariable) {
            if (shutdownVariable == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateInterface", "shutdownVariable");
            }
            this.shutdownVariable = shutdownVariable;
            return this;
        }
        @CustomType.Setter
        public Builder summaryAddresses(List<GetEigrpFeatureTemplateInterfaceSummaryAddress> summaryAddresses) {
            if (summaryAddresses == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateInterface", "summaryAddresses");
            }
            this.summaryAddresses = summaryAddresses;
            return this;
        }
        public Builder summaryAddresses(GetEigrpFeatureTemplateInterfaceSummaryAddress... summaryAddresses) {
            return summaryAddresses(List.of(summaryAddresses));
        }
        public GetEigrpFeatureTemplateInterface build() {
            final var _resultValue = new GetEigrpFeatureTemplateInterface();
            _resultValue.interfaceName = interfaceName;
            _resultValue.interfaceNameVariable = interfaceNameVariable;
            _resultValue.optional = optional;
            _resultValue.shutdown = shutdown;
            _resultValue.shutdownVariable = shutdownVariable;
            _resultValue.summaryAddresses = summaryAddresses;
            return _resultValue;
        }
    }
}
