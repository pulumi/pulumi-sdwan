// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetOtherUcseFeatureInterface {
    /**
     * @return Set Inteface name
     * 
     */
    private String interfaceName;
    /**
     * @return Variable name
     * 
     */
    private String interfaceNameVariable;
    /**
     * @return Assign IPv4 address
     * 
     */
    private String ipv4Address;
    /**
     * @return Variable name
     * 
     */
    private String ipv4AddressVariable;
    /**
     * @return UCSE Interface VPN
     * 
     */
    private Integer ucseInterfaceVpn;
    /**
     * @return Variable name
     * 
     */
    private String ucseInterfaceVpnVariable;

    private GetOtherUcseFeatureInterface() {}
    /**
     * @return Set Inteface name
     * 
     */
    public String interfaceName() {
        return this.interfaceName;
    }
    /**
     * @return Variable name
     * 
     */
    public String interfaceNameVariable() {
        return this.interfaceNameVariable;
    }
    /**
     * @return Assign IPv4 address
     * 
     */
    public String ipv4Address() {
        return this.ipv4Address;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv4AddressVariable() {
        return this.ipv4AddressVariable;
    }
    /**
     * @return UCSE Interface VPN
     * 
     */
    public Integer ucseInterfaceVpn() {
        return this.ucseInterfaceVpn;
    }
    /**
     * @return Variable name
     * 
     */
    public String ucseInterfaceVpnVariable() {
        return this.ucseInterfaceVpnVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOtherUcseFeatureInterface defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String interfaceName;
        private String interfaceNameVariable;
        private String ipv4Address;
        private String ipv4AddressVariable;
        private Integer ucseInterfaceVpn;
        private String ucseInterfaceVpnVariable;
        public Builder() {}
        public Builder(GetOtherUcseFeatureInterface defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.interfaceName = defaults.interfaceName;
    	      this.interfaceNameVariable = defaults.interfaceNameVariable;
    	      this.ipv4Address = defaults.ipv4Address;
    	      this.ipv4AddressVariable = defaults.ipv4AddressVariable;
    	      this.ucseInterfaceVpn = defaults.ucseInterfaceVpn;
    	      this.ucseInterfaceVpnVariable = defaults.ucseInterfaceVpnVariable;
        }

        @CustomType.Setter
        public Builder interfaceName(String interfaceName) {
            if (interfaceName == null) {
              throw new MissingRequiredPropertyException("GetOtherUcseFeatureInterface", "interfaceName");
            }
            this.interfaceName = interfaceName;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceNameVariable(String interfaceNameVariable) {
            if (interfaceNameVariable == null) {
              throw new MissingRequiredPropertyException("GetOtherUcseFeatureInterface", "interfaceNameVariable");
            }
            this.interfaceNameVariable = interfaceNameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4Address(String ipv4Address) {
            if (ipv4Address == null) {
              throw new MissingRequiredPropertyException("GetOtherUcseFeatureInterface", "ipv4Address");
            }
            this.ipv4Address = ipv4Address;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4AddressVariable(String ipv4AddressVariable) {
            if (ipv4AddressVariable == null) {
              throw new MissingRequiredPropertyException("GetOtherUcseFeatureInterface", "ipv4AddressVariable");
            }
            this.ipv4AddressVariable = ipv4AddressVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ucseInterfaceVpn(Integer ucseInterfaceVpn) {
            if (ucseInterfaceVpn == null) {
              throw new MissingRequiredPropertyException("GetOtherUcseFeatureInterface", "ucseInterfaceVpn");
            }
            this.ucseInterfaceVpn = ucseInterfaceVpn;
            return this;
        }
        @CustomType.Setter
        public Builder ucseInterfaceVpnVariable(String ucseInterfaceVpnVariable) {
            if (ucseInterfaceVpnVariable == null) {
              throw new MissingRequiredPropertyException("GetOtherUcseFeatureInterface", "ucseInterfaceVpnVariable");
            }
            this.ucseInterfaceVpnVariable = ucseInterfaceVpnVariable;
            return this;
        }
        public GetOtherUcseFeatureInterface build() {
            final var _resultValue = new GetOtherUcseFeatureInterface();
            _resultValue.interfaceName = interfaceName;
            _resultValue.interfaceNameVariable = interfaceNameVariable;
            _resultValue.ipv4Address = ipv4Address;
            _resultValue.ipv4AddressVariable = ipv4AddressVariable;
            _resultValue.ucseInterfaceVpn = ucseInterfaceVpn;
            _resultValue.ucseInterfaceVpnVariable = ucseInterfaceVpnVariable;
            return _resultValue;
        }
    }
}
