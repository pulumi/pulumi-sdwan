// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetPolicyGroupDevice;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPolicyGroupResult {
    /**
     * @return Description
     * 
     */
    private String description;
    /**
     * @return List of devices
     * 
     */
    private List<GetPolicyGroupDevice> devices;
    /**
     * @return List of feature profile IDs
     * 
     */
    private List<String> featureProfileIds;
    /**
     * @return The id of the object
     * 
     */
    private String id;
    /**
     * @return The name of the policy group
     * 
     */
    private String name;
    /**
     * @return List of all associated policy versions
     * 
     */
    private List<String> policyVersions;
    /**
     * @return Type of solution
     * 
     */
    private String solution;

    private GetPolicyGroupResult() {}
    /**
     * @return Description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return List of devices
     * 
     */
    public List<GetPolicyGroupDevice> devices() {
        return this.devices;
    }
    /**
     * @return List of feature profile IDs
     * 
     */
    public List<String> featureProfileIds() {
        return this.featureProfileIds;
    }
    /**
     * @return The id of the object
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the policy group
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return List of all associated policy versions
     * 
     */
    public List<String> policyVersions() {
        return this.policyVersions;
    }
    /**
     * @return Type of solution
     * 
     */
    public String solution() {
        return this.solution;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPolicyGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private List<GetPolicyGroupDevice> devices;
        private List<String> featureProfileIds;
        private String id;
        private String name;
        private List<String> policyVersions;
        private String solution;
        public Builder() {}
        public Builder(GetPolicyGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.devices = defaults.devices;
    	      this.featureProfileIds = defaults.featureProfileIds;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.policyVersions = defaults.policyVersions;
    	      this.solution = defaults.solution;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetPolicyGroupResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder devices(List<GetPolicyGroupDevice> devices) {
            if (devices == null) {
              throw new MissingRequiredPropertyException("GetPolicyGroupResult", "devices");
            }
            this.devices = devices;
            return this;
        }
        public Builder devices(GetPolicyGroupDevice... devices) {
            return devices(List.of(devices));
        }
        @CustomType.Setter
        public Builder featureProfileIds(List<String> featureProfileIds) {
            if (featureProfileIds == null) {
              throw new MissingRequiredPropertyException("GetPolicyGroupResult", "featureProfileIds");
            }
            this.featureProfileIds = featureProfileIds;
            return this;
        }
        public Builder featureProfileIds(String... featureProfileIds) {
            return featureProfileIds(List.of(featureProfileIds));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPolicyGroupResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetPolicyGroupResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder policyVersions(List<String> policyVersions) {
            if (policyVersions == null) {
              throw new MissingRequiredPropertyException("GetPolicyGroupResult", "policyVersions");
            }
            this.policyVersions = policyVersions;
            return this;
        }
        public Builder policyVersions(String... policyVersions) {
            return policyVersions(List.of(policyVersions));
        }
        @CustomType.Setter
        public Builder solution(String solution) {
            if (solution == null) {
              throw new MissingRequiredPropertyException("GetPolicyGroupResult", "solution");
            }
            this.solution = solution;
            return this;
        }
        public GetPolicyGroupResult build() {
            final var _resultValue = new GetPolicyGroupResult();
            _resultValue.description = description;
            _resultValue.devices = devices;
            _resultValue.featureProfileIds = featureProfileIds;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.policyVersions = policyVersions;
            _resultValue.solution = solution;
            return _resultValue;
        }
    }
}
