// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TrafficDataPolicyDefinitionSequenceActionEntryNatParameterArgs extends com.pulumi.resources.ResourceArgs {

    public static final TrafficDataPolicyDefinitionSequenceActionEntryNatParameterArgs Empty = new TrafficDataPolicyDefinitionSequenceActionEntryNatParameterArgs();

    /**
     * Fallback
     * 
     */
    @Import(name="fallback")
    private @Nullable Output<Boolean> fallback;

    /**
     * @return Fallback
     * 
     */
    public Optional<Output<Boolean>> fallback() {
        return Optional.ofNullable(this.fallback);
    }

    /**
     * Type of NAT parameter
     *   - Choices: `useVpn`, `fallback`
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of NAT parameter
     *   - Choices: `useVpn`, `fallback`
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * DSCP
     * 
     */
    @Import(name="vpnId")
    private @Nullable Output<Integer> vpnId;

    /**
     * @return DSCP
     * 
     */
    public Optional<Output<Integer>> vpnId() {
        return Optional.ofNullable(this.vpnId);
    }

    private TrafficDataPolicyDefinitionSequenceActionEntryNatParameterArgs() {}

    private TrafficDataPolicyDefinitionSequenceActionEntryNatParameterArgs(TrafficDataPolicyDefinitionSequenceActionEntryNatParameterArgs $) {
        this.fallback = $.fallback;
        this.type = $.type;
        this.vpnId = $.vpnId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TrafficDataPolicyDefinitionSequenceActionEntryNatParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TrafficDataPolicyDefinitionSequenceActionEntryNatParameterArgs $;

        public Builder() {
            $ = new TrafficDataPolicyDefinitionSequenceActionEntryNatParameterArgs();
        }

        public Builder(TrafficDataPolicyDefinitionSequenceActionEntryNatParameterArgs defaults) {
            $ = new TrafficDataPolicyDefinitionSequenceActionEntryNatParameterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fallback Fallback
         * 
         * @return builder
         * 
         */
        public Builder fallback(@Nullable Output<Boolean> fallback) {
            $.fallback = fallback;
            return this;
        }

        /**
         * @param fallback Fallback
         * 
         * @return builder
         * 
         */
        public Builder fallback(Boolean fallback) {
            return fallback(Output.of(fallback));
        }

        /**
         * @param type Type of NAT parameter
         *   - Choices: `useVpn`, `fallback`
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of NAT parameter
         *   - Choices: `useVpn`, `fallback`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param vpnId DSCP
         * 
         * @return builder
         * 
         */
        public Builder vpnId(@Nullable Output<Integer> vpnId) {
            $.vpnId = vpnId;
            return this;
        }

        /**
         * @param vpnId DSCP
         * 
         * @return builder
         * 
         */
        public Builder vpnId(Integer vpnId) {
            return vpnId(Output.of(vpnId));
        }

        public TrafficDataPolicyDefinitionSequenceActionEntryNatParameterArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("TrafficDataPolicyDefinitionSequenceActionEntryNatParameterArgs", "type");
            }
            return $;
        }
    }

}
