// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerGroupFeatureArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerGroupFeatureArgs Empty = new GetTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerGroupFeatureArgs();

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId", required=true)
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }

    /**
     * The id of the object
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The id of the object
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * Transport WAN VPN Feature ID
     * 
     */
    @Import(name="transportWanVpnFeatureId", required=true)
    private Output<String> transportWanVpnFeatureId;

    /**
     * @return Transport WAN VPN Feature ID
     * 
     */
    public Output<String> transportWanVpnFeatureId() {
        return this.transportWanVpnFeatureId;
    }

    /**
     * Transport WAN VPN Interface Ethernet Feature ID
     * 
     */
    @Import(name="transportWanVpnInterfaceEthernetFeatureId", required=true)
    private Output<String> transportWanVpnInterfaceEthernetFeatureId;

    /**
     * @return Transport WAN VPN Interface Ethernet Feature ID
     * 
     */
    public Output<String> transportWanVpnInterfaceEthernetFeatureId() {
        return this.transportWanVpnInterfaceEthernetFeatureId;
    }

    private GetTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerGroupFeatureArgs() {}

    private GetTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerGroupFeatureArgs(GetTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerGroupFeatureArgs $) {
        this.featureProfileId = $.featureProfileId;
        this.id = $.id;
        this.transportWanVpnFeatureId = $.transportWanVpnFeatureId;
        this.transportWanVpnInterfaceEthernetFeatureId = $.transportWanVpnInterfaceEthernetFeatureId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerGroupFeatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerGroupFeatureArgs $;

        public Builder() {
            $ = new GetTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerGroupFeatureArgs();
        }

        public Builder(GetTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerGroupFeatureArgs defaults) {
            $ = new GetTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerGroupFeatureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param id The id of the object
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The id of the object
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param transportWanVpnFeatureId Transport WAN VPN Feature ID
         * 
         * @return builder
         * 
         */
        public Builder transportWanVpnFeatureId(Output<String> transportWanVpnFeatureId) {
            $.transportWanVpnFeatureId = transportWanVpnFeatureId;
            return this;
        }

        /**
         * @param transportWanVpnFeatureId Transport WAN VPN Feature ID
         * 
         * @return builder
         * 
         */
        public Builder transportWanVpnFeatureId(String transportWanVpnFeatureId) {
            return transportWanVpnFeatureId(Output.of(transportWanVpnFeatureId));
        }

        /**
         * @param transportWanVpnInterfaceEthernetFeatureId Transport WAN VPN Interface Ethernet Feature ID
         * 
         * @return builder
         * 
         */
        public Builder transportWanVpnInterfaceEthernetFeatureId(Output<String> transportWanVpnInterfaceEthernetFeatureId) {
            $.transportWanVpnInterfaceEthernetFeatureId = transportWanVpnInterfaceEthernetFeatureId;
            return this;
        }

        /**
         * @param transportWanVpnInterfaceEthernetFeatureId Transport WAN VPN Interface Ethernet Feature ID
         * 
         * @return builder
         * 
         */
        public Builder transportWanVpnInterfaceEthernetFeatureId(String transportWanVpnInterfaceEthernetFeatureId) {
            return transportWanVpnInterfaceEthernetFeatureId(Output.of(transportWanVpnInterfaceEthernetFeatureId));
        }

        public GetTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerGroupFeatureArgs build() {
            if ($.featureProfileId == null) {
                throw new MissingRequiredPropertyException("GetTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerGroupFeatureArgs", "featureProfileId");
            }
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerGroupFeatureArgs", "id");
            }
            if ($.transportWanVpnFeatureId == null) {
                throw new MissingRequiredPropertyException("GetTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerGroupFeatureArgs", "transportWanVpnFeatureId");
            }
            if ($.transportWanVpnInterfaceEthernetFeatureId == null) {
                throw new MissingRequiredPropertyException("GetTransportWanVpnInterfaceEthernetFeatureAssociateIpv6TrackerGroupFeatureArgs", "transportWanVpnInterfaceEthernetFeatureId");
            }
            return $;
        }
    }

}
