// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.MeshTopologyPolicyDefinitionRegionArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MeshTopologyPolicyDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final MeshTopologyPolicyDefinitionArgs Empty = new MeshTopologyPolicyDefinitionArgs();

    /**
     * The description of the policy definition
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return The description of the policy definition
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * The name of the policy definition
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the policy definition
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * List of regions
     * 
     */
    @Import(name="regions", required=true)
    private Output<List<MeshTopologyPolicyDefinitionRegionArgs>> regions;

    /**
     * @return List of regions
     * 
     */
    public Output<List<MeshTopologyPolicyDefinitionRegionArgs>> regions() {
        return this.regions;
    }

    /**
     * VPN list ID
     * 
     */
    @Import(name="vpnListId")
    private @Nullable Output<String> vpnListId;

    /**
     * @return VPN list ID
     * 
     */
    public Optional<Output<String>> vpnListId() {
        return Optional.ofNullable(this.vpnListId);
    }

    /**
     * VPN list version
     * 
     */
    @Import(name="vpnListVersion")
    private @Nullable Output<Integer> vpnListVersion;

    /**
     * @return VPN list version
     * 
     */
    public Optional<Output<Integer>> vpnListVersion() {
        return Optional.ofNullable(this.vpnListVersion);
    }

    private MeshTopologyPolicyDefinitionArgs() {}

    private MeshTopologyPolicyDefinitionArgs(MeshTopologyPolicyDefinitionArgs $) {
        this.description = $.description;
        this.name = $.name;
        this.regions = $.regions;
        this.vpnListId = $.vpnListId;
        this.vpnListVersion = $.vpnListVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MeshTopologyPolicyDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MeshTopologyPolicyDefinitionArgs $;

        public Builder() {
            $ = new MeshTopologyPolicyDefinitionArgs();
        }

        public Builder(MeshTopologyPolicyDefinitionArgs defaults) {
            $ = new MeshTopologyPolicyDefinitionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The name of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param regions List of regions
         * 
         * @return builder
         * 
         */
        public Builder regions(Output<List<MeshTopologyPolicyDefinitionRegionArgs>> regions) {
            $.regions = regions;
            return this;
        }

        /**
         * @param regions List of regions
         * 
         * @return builder
         * 
         */
        public Builder regions(List<MeshTopologyPolicyDefinitionRegionArgs> regions) {
            return regions(Output.of(regions));
        }

        /**
         * @param regions List of regions
         * 
         * @return builder
         * 
         */
        public Builder regions(MeshTopologyPolicyDefinitionRegionArgs... regions) {
            return regions(List.of(regions));
        }

        /**
         * @param vpnListId VPN list ID
         * 
         * @return builder
         * 
         */
        public Builder vpnListId(@Nullable Output<String> vpnListId) {
            $.vpnListId = vpnListId;
            return this;
        }

        /**
         * @param vpnListId VPN list ID
         * 
         * @return builder
         * 
         */
        public Builder vpnListId(String vpnListId) {
            return vpnListId(Output.of(vpnListId));
        }

        /**
         * @param vpnListVersion VPN list version
         * 
         * @return builder
         * 
         */
        public Builder vpnListVersion(@Nullable Output<Integer> vpnListVersion) {
            $.vpnListVersion = vpnListVersion;
            return this;
        }

        /**
         * @param vpnListVersion VPN list version
         * 
         * @return builder
         * 
         */
        public Builder vpnListVersion(Integer vpnListVersion) {
            return vpnListVersion(Output.of(vpnListVersion));
        }

        public MeshTopologyPolicyDefinitionArgs build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("MeshTopologyPolicyDefinitionArgs", "description");
            }
            if ($.regions == null) {
                throw new MissingRequiredPropertyException("MeshTopologyPolicyDefinitionArgs", "regions");
            }
            return $;
        }
    }

}
