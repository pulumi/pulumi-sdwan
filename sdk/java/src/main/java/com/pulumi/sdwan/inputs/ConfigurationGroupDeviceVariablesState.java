// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.ConfigurationGroupDeviceVariablesDeviceArgs;
import com.pulumi.sdwan.inputs.ConfigurationGroupDeviceVariablesGroupArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationGroupDeviceVariablesState extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationGroupDeviceVariablesState Empty = new ConfigurationGroupDeviceVariablesState();

    /**
     * Configuration Group ID
     * 
     */
    @Import(name="configurationGroupId")
    private @Nullable Output<String> configurationGroupId;

    /**
     * @return Configuration Group ID
     * 
     */
    public Optional<Output<String>> configurationGroupId() {
        return Optional.ofNullable(this.configurationGroupId);
    }

    /**
     * List of devices
     * 
     */
    @Import(name="devices")
    private @Nullable Output<List<ConfigurationGroupDeviceVariablesDeviceArgs>> devices;

    /**
     * @return List of devices
     * 
     */
    public Optional<Output<List<ConfigurationGroupDeviceVariablesDeviceArgs>>> devices() {
        return Optional.ofNullable(this.devices);
    }

    /**
     * List of device groups
     * 
     */
    @Import(name="groups")
    private @Nullable Output<List<ConfigurationGroupDeviceVariablesGroupArgs>> groups;

    /**
     * @return List of device groups
     * 
     */
    public Optional<Output<List<ConfigurationGroupDeviceVariablesGroupArgs>>> groups() {
        return Optional.ofNullable(this.groups);
    }

    /**
     * Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
     * 
     */
    @Import(name="solution")
    private @Nullable Output<String> solution;

    /**
     * @return Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
     * 
     */
    public Optional<Output<String>> solution() {
        return Optional.ofNullable(this.solution);
    }

    private ConfigurationGroupDeviceVariablesState() {}

    private ConfigurationGroupDeviceVariablesState(ConfigurationGroupDeviceVariablesState $) {
        this.configurationGroupId = $.configurationGroupId;
        this.devices = $.devices;
        this.groups = $.groups;
        this.solution = $.solution;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationGroupDeviceVariablesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationGroupDeviceVariablesState $;

        public Builder() {
            $ = new ConfigurationGroupDeviceVariablesState();
        }

        public Builder(ConfigurationGroupDeviceVariablesState defaults) {
            $ = new ConfigurationGroupDeviceVariablesState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configurationGroupId Configuration Group ID
         * 
         * @return builder
         * 
         */
        public Builder configurationGroupId(@Nullable Output<String> configurationGroupId) {
            $.configurationGroupId = configurationGroupId;
            return this;
        }

        /**
         * @param configurationGroupId Configuration Group ID
         * 
         * @return builder
         * 
         */
        public Builder configurationGroupId(String configurationGroupId) {
            return configurationGroupId(Output.of(configurationGroupId));
        }

        /**
         * @param devices List of devices
         * 
         * @return builder
         * 
         */
        public Builder devices(@Nullable Output<List<ConfigurationGroupDeviceVariablesDeviceArgs>> devices) {
            $.devices = devices;
            return this;
        }

        /**
         * @param devices List of devices
         * 
         * @return builder
         * 
         */
        public Builder devices(List<ConfigurationGroupDeviceVariablesDeviceArgs> devices) {
            return devices(Output.of(devices));
        }

        /**
         * @param devices List of devices
         * 
         * @return builder
         * 
         */
        public Builder devices(ConfigurationGroupDeviceVariablesDeviceArgs... devices) {
            return devices(List.of(devices));
        }

        /**
         * @param groups List of device groups
         * 
         * @return builder
         * 
         */
        public Builder groups(@Nullable Output<List<ConfigurationGroupDeviceVariablesGroupArgs>> groups) {
            $.groups = groups;
            return this;
        }

        /**
         * @param groups List of device groups
         * 
         * @return builder
         * 
         */
        public Builder groups(List<ConfigurationGroupDeviceVariablesGroupArgs> groups) {
            return groups(Output.of(groups));
        }

        /**
         * @param groups List of device groups
         * 
         * @return builder
         * 
         */
        public Builder groups(ConfigurationGroupDeviceVariablesGroupArgs... groups) {
            return groups(List.of(groups));
        }

        /**
         * @param solution Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
         * 
         * @return builder
         * 
         */
        public Builder solution(@Nullable Output<String> solution) {
            $.solution = solution;
            return this;
        }

        /**
         * @param solution Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
         * 
         * @return builder
         * 
         */
        public Builder solution(String solution) {
            return solution(Output.of(solution));
        }

        public ConfigurationGroupDeviceVariablesState build() {
            return $;
        }
    }

}
