// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetCiscoWirelessLanFeatureTemplateSsid;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCiscoWirelessLanFeatureTemplateResult {
    /**
     * @return Set mobile express default gateway
     * 
     */
    private String controllerDefaultGateway;
    /**
     * @return Variable name
     * 
     */
    private String controllerDefaultGatewayVariable;
    /**
     * @return Set mobile express controller address
     * 
     */
    private String controllerIpAddress;
    /**
     * @return Variable name
     * 
     */
    private String controllerIpAddressVariable;
    /**
     * @return Set mobile express controller subnet mask
     * 
     */
    private String controllerSubnetMask;
    /**
     * @return Variable name
     * 
     */
    private String controllerSubnetMaskVariable;
    /**
     * @return Select country
     * 
     */
    private String country;
    /**
     * @return Variable name
     * 
     */
    private String countryVariable;
    /**
     * @return The description of the feature template
     * 
     */
    private String description;
    /**
     * @return List of supported device types
     * 
     */
    private List<String> deviceTypes;
    /**
     * @return The id of the feature template
     * 
     */
    private String id;
    /**
     * @return The name of the feature template
     * 
     */
    private String name;
    /**
     * @return Set management password
     * 
     */
    private String password;
    /**
     * @return Variable name
     * 
     */
    private String passwordVariable;
    /**
     * @return 2.4GHz Shutdown
     * 
     */
    private Boolean shutdown24ghz;
    /**
     * @return Variable name
     * 
     */
    private String shutdown24ghzVariable;
    /**
     * @return 5GHz Shutdown
     * 
     */
    private Boolean shutdown5ghz;
    /**
     * @return Variable name
     * 
     */
    private String shutdown5ghzVariable;
    /**
     * @return Configure Wi-Fi SSID
     * 
     */
    private List<GetCiscoWirelessLanFeatureTemplateSsid> ssids;
    /**
     * @return The template type
     * 
     */
    private String templateType;
    /**
     * @return Set management username
     * 
     */
    private String username;
    /**
     * @return Variable name
     * 
     */
    private String usernameVariable;
    /**
     * @return The version of the feature template
     * 
     */
    private Integer version;

    private GetCiscoWirelessLanFeatureTemplateResult() {}
    /**
     * @return Set mobile express default gateway
     * 
     */
    public String controllerDefaultGateway() {
        return this.controllerDefaultGateway;
    }
    /**
     * @return Variable name
     * 
     */
    public String controllerDefaultGatewayVariable() {
        return this.controllerDefaultGatewayVariable;
    }
    /**
     * @return Set mobile express controller address
     * 
     */
    public String controllerIpAddress() {
        return this.controllerIpAddress;
    }
    /**
     * @return Variable name
     * 
     */
    public String controllerIpAddressVariable() {
        return this.controllerIpAddressVariable;
    }
    /**
     * @return Set mobile express controller subnet mask
     * 
     */
    public String controllerSubnetMask() {
        return this.controllerSubnetMask;
    }
    /**
     * @return Variable name
     * 
     */
    public String controllerSubnetMaskVariable() {
        return this.controllerSubnetMaskVariable;
    }
    /**
     * @return Select country
     * 
     */
    public String country() {
        return this.country;
    }
    /**
     * @return Variable name
     * 
     */
    public String countryVariable() {
        return this.countryVariable;
    }
    /**
     * @return The description of the feature template
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return List of supported device types
     * 
     */
    public List<String> deviceTypes() {
        return this.deviceTypes;
    }
    /**
     * @return The id of the feature template
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the feature template
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Set management password
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return Variable name
     * 
     */
    public String passwordVariable() {
        return this.passwordVariable;
    }
    /**
     * @return 2.4GHz Shutdown
     * 
     */
    public Boolean shutdown24ghz() {
        return this.shutdown24ghz;
    }
    /**
     * @return Variable name
     * 
     */
    public String shutdown24ghzVariable() {
        return this.shutdown24ghzVariable;
    }
    /**
     * @return 5GHz Shutdown
     * 
     */
    public Boolean shutdown5ghz() {
        return this.shutdown5ghz;
    }
    /**
     * @return Variable name
     * 
     */
    public String shutdown5ghzVariable() {
        return this.shutdown5ghzVariable;
    }
    /**
     * @return Configure Wi-Fi SSID
     * 
     */
    public List<GetCiscoWirelessLanFeatureTemplateSsid> ssids() {
        return this.ssids;
    }
    /**
     * @return The template type
     * 
     */
    public String templateType() {
        return this.templateType;
    }
    /**
     * @return Set management username
     * 
     */
    public String username() {
        return this.username;
    }
    /**
     * @return Variable name
     * 
     */
    public String usernameVariable() {
        return this.usernameVariable;
    }
    /**
     * @return The version of the feature template
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCiscoWirelessLanFeatureTemplateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String controllerDefaultGateway;
        private String controllerDefaultGatewayVariable;
        private String controllerIpAddress;
        private String controllerIpAddressVariable;
        private String controllerSubnetMask;
        private String controllerSubnetMaskVariable;
        private String country;
        private String countryVariable;
        private String description;
        private List<String> deviceTypes;
        private String id;
        private String name;
        private String password;
        private String passwordVariable;
        private Boolean shutdown24ghz;
        private String shutdown24ghzVariable;
        private Boolean shutdown5ghz;
        private String shutdown5ghzVariable;
        private List<GetCiscoWirelessLanFeatureTemplateSsid> ssids;
        private String templateType;
        private String username;
        private String usernameVariable;
        private Integer version;
        public Builder() {}
        public Builder(GetCiscoWirelessLanFeatureTemplateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.controllerDefaultGateway = defaults.controllerDefaultGateway;
    	      this.controllerDefaultGatewayVariable = defaults.controllerDefaultGatewayVariable;
    	      this.controllerIpAddress = defaults.controllerIpAddress;
    	      this.controllerIpAddressVariable = defaults.controllerIpAddressVariable;
    	      this.controllerSubnetMask = defaults.controllerSubnetMask;
    	      this.controllerSubnetMaskVariable = defaults.controllerSubnetMaskVariable;
    	      this.country = defaults.country;
    	      this.countryVariable = defaults.countryVariable;
    	      this.description = defaults.description;
    	      this.deviceTypes = defaults.deviceTypes;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.password = defaults.password;
    	      this.passwordVariable = defaults.passwordVariable;
    	      this.shutdown24ghz = defaults.shutdown24ghz;
    	      this.shutdown24ghzVariable = defaults.shutdown24ghzVariable;
    	      this.shutdown5ghz = defaults.shutdown5ghz;
    	      this.shutdown5ghzVariable = defaults.shutdown5ghzVariable;
    	      this.ssids = defaults.ssids;
    	      this.templateType = defaults.templateType;
    	      this.username = defaults.username;
    	      this.usernameVariable = defaults.usernameVariable;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder controllerDefaultGateway(String controllerDefaultGateway) {
            if (controllerDefaultGateway == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "controllerDefaultGateway");
            }
            this.controllerDefaultGateway = controllerDefaultGateway;
            return this;
        }
        @CustomType.Setter
        public Builder controllerDefaultGatewayVariable(String controllerDefaultGatewayVariable) {
            if (controllerDefaultGatewayVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "controllerDefaultGatewayVariable");
            }
            this.controllerDefaultGatewayVariable = controllerDefaultGatewayVariable;
            return this;
        }
        @CustomType.Setter
        public Builder controllerIpAddress(String controllerIpAddress) {
            if (controllerIpAddress == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "controllerIpAddress");
            }
            this.controllerIpAddress = controllerIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder controllerIpAddressVariable(String controllerIpAddressVariable) {
            if (controllerIpAddressVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "controllerIpAddressVariable");
            }
            this.controllerIpAddressVariable = controllerIpAddressVariable;
            return this;
        }
        @CustomType.Setter
        public Builder controllerSubnetMask(String controllerSubnetMask) {
            if (controllerSubnetMask == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "controllerSubnetMask");
            }
            this.controllerSubnetMask = controllerSubnetMask;
            return this;
        }
        @CustomType.Setter
        public Builder controllerSubnetMaskVariable(String controllerSubnetMaskVariable) {
            if (controllerSubnetMaskVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "controllerSubnetMaskVariable");
            }
            this.controllerSubnetMaskVariable = controllerSubnetMaskVariable;
            return this;
        }
        @CustomType.Setter
        public Builder country(String country) {
            if (country == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "country");
            }
            this.country = country;
            return this;
        }
        @CustomType.Setter
        public Builder countryVariable(String countryVariable) {
            if (countryVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "countryVariable");
            }
            this.countryVariable = countryVariable;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder deviceTypes(List<String> deviceTypes) {
            if (deviceTypes == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "deviceTypes");
            }
            this.deviceTypes = deviceTypes;
            return this;
        }
        public Builder deviceTypes(String... deviceTypes) {
            return deviceTypes(List.of(deviceTypes));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder passwordVariable(String passwordVariable) {
            if (passwordVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "passwordVariable");
            }
            this.passwordVariable = passwordVariable;
            return this;
        }
        @CustomType.Setter
        public Builder shutdown24ghz(Boolean shutdown24ghz) {
            if (shutdown24ghz == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "shutdown24ghz");
            }
            this.shutdown24ghz = shutdown24ghz;
            return this;
        }
        @CustomType.Setter
        public Builder shutdown24ghzVariable(String shutdown24ghzVariable) {
            if (shutdown24ghzVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "shutdown24ghzVariable");
            }
            this.shutdown24ghzVariable = shutdown24ghzVariable;
            return this;
        }
        @CustomType.Setter
        public Builder shutdown5ghz(Boolean shutdown5ghz) {
            if (shutdown5ghz == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "shutdown5ghz");
            }
            this.shutdown5ghz = shutdown5ghz;
            return this;
        }
        @CustomType.Setter
        public Builder shutdown5ghzVariable(String shutdown5ghzVariable) {
            if (shutdown5ghzVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "shutdown5ghzVariable");
            }
            this.shutdown5ghzVariable = shutdown5ghzVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ssids(List<GetCiscoWirelessLanFeatureTemplateSsid> ssids) {
            if (ssids == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "ssids");
            }
            this.ssids = ssids;
            return this;
        }
        public Builder ssids(GetCiscoWirelessLanFeatureTemplateSsid... ssids) {
            return ssids(List.of(ssids));
        }
        @CustomType.Setter
        public Builder templateType(String templateType) {
            if (templateType == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "templateType");
            }
            this.templateType = templateType;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "username");
            }
            this.username = username;
            return this;
        }
        @CustomType.Setter
        public Builder usernameVariable(String usernameVariable) {
            if (usernameVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "usernameVariable");
            }
            this.usernameVariable = usernameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetCiscoWirelessLanFeatureTemplateResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetCiscoWirelessLanFeatureTemplateResult build() {
            final var _resultValue = new GetCiscoWirelessLanFeatureTemplateResult();
            _resultValue.controllerDefaultGateway = controllerDefaultGateway;
            _resultValue.controllerDefaultGatewayVariable = controllerDefaultGatewayVariable;
            _resultValue.controllerIpAddress = controllerIpAddress;
            _resultValue.controllerIpAddressVariable = controllerIpAddressVariable;
            _resultValue.controllerSubnetMask = controllerSubnetMask;
            _resultValue.controllerSubnetMaskVariable = controllerSubnetMaskVariable;
            _resultValue.country = country;
            _resultValue.countryVariable = countryVariable;
            _resultValue.description = description;
            _resultValue.deviceTypes = deviceTypes;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.password = password;
            _resultValue.passwordVariable = passwordVariable;
            _resultValue.shutdown24ghz = shutdown24ghz;
            _resultValue.shutdown24ghzVariable = shutdown24ghzVariable;
            _resultValue.shutdown5ghz = shutdown5ghz;
            _resultValue.shutdown5ghzVariable = shutdown5ghzVariable;
            _resultValue.ssids = ssids;
            _resultValue.templateType = templateType;
            _resultValue.username = username;
            _resultValue.usernameVariable = usernameVariable;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
