// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCedgeAaaFeatureTemplateAuthorizationRule {
    /**
     * @return Succeed if user has authenticated
     * 
     */
    private Boolean authenticated;
    /**
     * @return Comma separated list of groups
     * 
     */
    private String groups;
    /**
     * @return Method
     * 
     */
    private String method;
    /**
     * @return Configure Authorization Rule ID
     * 
     */
    private String name;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private Boolean optional;
    /**
     * @return Privilege level when method is commands
     * 
     */
    private String privilegeLevel;

    private GetCedgeAaaFeatureTemplateAuthorizationRule() {}
    /**
     * @return Succeed if user has authenticated
     * 
     */
    public Boolean authenticated() {
        return this.authenticated;
    }
    /**
     * @return Comma separated list of groups
     * 
     */
    public String groups() {
        return this.groups;
    }
    /**
     * @return Method
     * 
     */
    public String method() {
        return this.method;
    }
    /**
     * @return Configure Authorization Rule ID
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Boolean optional() {
        return this.optional;
    }
    /**
     * @return Privilege level when method is commands
     * 
     */
    public String privilegeLevel() {
        return this.privilegeLevel;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCedgeAaaFeatureTemplateAuthorizationRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean authenticated;
        private String groups;
        private String method;
        private String name;
        private Boolean optional;
        private String privilegeLevel;
        public Builder() {}
        public Builder(GetCedgeAaaFeatureTemplateAuthorizationRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticated = defaults.authenticated;
    	      this.groups = defaults.groups;
    	      this.method = defaults.method;
    	      this.name = defaults.name;
    	      this.optional = defaults.optional;
    	      this.privilegeLevel = defaults.privilegeLevel;
        }

        @CustomType.Setter
        public Builder authenticated(Boolean authenticated) {
            if (authenticated == null) {
              throw new MissingRequiredPropertyException("GetCedgeAaaFeatureTemplateAuthorizationRule", "authenticated");
            }
            this.authenticated = authenticated;
            return this;
        }
        @CustomType.Setter
        public Builder groups(String groups) {
            if (groups == null) {
              throw new MissingRequiredPropertyException("GetCedgeAaaFeatureTemplateAuthorizationRule", "groups");
            }
            this.groups = groups;
            return this;
        }
        @CustomType.Setter
        public Builder method(String method) {
            if (method == null) {
              throw new MissingRequiredPropertyException("GetCedgeAaaFeatureTemplateAuthorizationRule", "method");
            }
            this.method = method;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCedgeAaaFeatureTemplateAuthorizationRule", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder optional(Boolean optional) {
            if (optional == null) {
              throw new MissingRequiredPropertyException("GetCedgeAaaFeatureTemplateAuthorizationRule", "optional");
            }
            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder privilegeLevel(String privilegeLevel) {
            if (privilegeLevel == null) {
              throw new MissingRequiredPropertyException("GetCedgeAaaFeatureTemplateAuthorizationRule", "privilegeLevel");
            }
            this.privilegeLevel = privilegeLevel;
            return this;
        }
        public GetCedgeAaaFeatureTemplateAuthorizationRule build() {
            final var _resultValue = new GetCedgeAaaFeatureTemplateAuthorizationRule();
            _resultValue.authenticated = authenticated;
            _resultValue.groups = groups;
            _resultValue.method = method;
            _resultValue.name = name;
            _resultValue.optional = optional;
            _resultValue.privilegeLevel = privilegeLevel;
            return _resultValue;
        }
    }
}
