// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetCiscoVpnInterfaceFeatureTemplateIpv6VrrpIpv6Address;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCiscoVpnInterfaceFeatureTemplateIpv6Vrrp {
    /**
     * @return Group ID
     * 
     */
    private Integer groupId;
    /**
     * @return Variable name
     * 
     */
    private String groupIdVariable;
    /**
     * @return IPv6 VRRP
     * 
     */
    private List<GetCiscoVpnInterfaceFeatureTemplateIpv6VrrpIpv6Address> ipv6Addresses;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private Boolean optional;
    /**
     * @return Set priority
     * 
     */
    private Integer priority;
    /**
     * @return Variable name
     * 
     */
    private String priorityVariable;
    /**
     * @return Timer interval for successive advertisements, in milliseconds
     * 
     */
    private Integer timer;
    /**
     * @return Variable name
     * 
     */
    private String timerVariable;
    /**
     * @return Track OMP status
     * 
     */
    private Boolean trackOmp;
    /**
     * @return Variable name
     * 
     */
    private String trackOmpVariable;
    /**
     * @return Track Prefix List
     * 
     */
    private String trackPrefixList;
    /**
     * @return Variable name
     * 
     */
    private String trackPrefixListVariable;

    private GetCiscoVpnInterfaceFeatureTemplateIpv6Vrrp() {}
    /**
     * @return Group ID
     * 
     */
    public Integer groupId() {
        return this.groupId;
    }
    /**
     * @return Variable name
     * 
     */
    public String groupIdVariable() {
        return this.groupIdVariable;
    }
    /**
     * @return IPv6 VRRP
     * 
     */
    public List<GetCiscoVpnInterfaceFeatureTemplateIpv6VrrpIpv6Address> ipv6Addresses() {
        return this.ipv6Addresses;
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Boolean optional() {
        return this.optional;
    }
    /**
     * @return Set priority
     * 
     */
    public Integer priority() {
        return this.priority;
    }
    /**
     * @return Variable name
     * 
     */
    public String priorityVariable() {
        return this.priorityVariable;
    }
    /**
     * @return Timer interval for successive advertisements, in milliseconds
     * 
     */
    public Integer timer() {
        return this.timer;
    }
    /**
     * @return Variable name
     * 
     */
    public String timerVariable() {
        return this.timerVariable;
    }
    /**
     * @return Track OMP status
     * 
     */
    public Boolean trackOmp() {
        return this.trackOmp;
    }
    /**
     * @return Variable name
     * 
     */
    public String trackOmpVariable() {
        return this.trackOmpVariable;
    }
    /**
     * @return Track Prefix List
     * 
     */
    public String trackPrefixList() {
        return this.trackPrefixList;
    }
    /**
     * @return Variable name
     * 
     */
    public String trackPrefixListVariable() {
        return this.trackPrefixListVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCiscoVpnInterfaceFeatureTemplateIpv6Vrrp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer groupId;
        private String groupIdVariable;
        private List<GetCiscoVpnInterfaceFeatureTemplateIpv6VrrpIpv6Address> ipv6Addresses;
        private Boolean optional;
        private Integer priority;
        private String priorityVariable;
        private Integer timer;
        private String timerVariable;
        private Boolean trackOmp;
        private String trackOmpVariable;
        private String trackPrefixList;
        private String trackPrefixListVariable;
        public Builder() {}
        public Builder(GetCiscoVpnInterfaceFeatureTemplateIpv6Vrrp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.groupId = defaults.groupId;
    	      this.groupIdVariable = defaults.groupIdVariable;
    	      this.ipv6Addresses = defaults.ipv6Addresses;
    	      this.optional = defaults.optional;
    	      this.priority = defaults.priority;
    	      this.priorityVariable = defaults.priorityVariable;
    	      this.timer = defaults.timer;
    	      this.timerVariable = defaults.timerVariable;
    	      this.trackOmp = defaults.trackOmp;
    	      this.trackOmpVariable = defaults.trackOmpVariable;
    	      this.trackPrefixList = defaults.trackPrefixList;
    	      this.trackPrefixListVariable = defaults.trackPrefixListVariable;
        }

        @CustomType.Setter
        public Builder groupId(Integer groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnInterfaceFeatureTemplateIpv6Vrrp", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder groupIdVariable(String groupIdVariable) {
            if (groupIdVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnInterfaceFeatureTemplateIpv6Vrrp", "groupIdVariable");
            }
            this.groupIdVariable = groupIdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Addresses(List<GetCiscoVpnInterfaceFeatureTemplateIpv6VrrpIpv6Address> ipv6Addresses) {
            if (ipv6Addresses == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnInterfaceFeatureTemplateIpv6Vrrp", "ipv6Addresses");
            }
            this.ipv6Addresses = ipv6Addresses;
            return this;
        }
        public Builder ipv6Addresses(GetCiscoVpnInterfaceFeatureTemplateIpv6VrrpIpv6Address... ipv6Addresses) {
            return ipv6Addresses(List.of(ipv6Addresses));
        }
        @CustomType.Setter
        public Builder optional(Boolean optional) {
            if (optional == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnInterfaceFeatureTemplateIpv6Vrrp", "optional");
            }
            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnInterfaceFeatureTemplateIpv6Vrrp", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder priorityVariable(String priorityVariable) {
            if (priorityVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnInterfaceFeatureTemplateIpv6Vrrp", "priorityVariable");
            }
            this.priorityVariable = priorityVariable;
            return this;
        }
        @CustomType.Setter
        public Builder timer(Integer timer) {
            if (timer == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnInterfaceFeatureTemplateIpv6Vrrp", "timer");
            }
            this.timer = timer;
            return this;
        }
        @CustomType.Setter
        public Builder timerVariable(String timerVariable) {
            if (timerVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnInterfaceFeatureTemplateIpv6Vrrp", "timerVariable");
            }
            this.timerVariable = timerVariable;
            return this;
        }
        @CustomType.Setter
        public Builder trackOmp(Boolean trackOmp) {
            if (trackOmp == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnInterfaceFeatureTemplateIpv6Vrrp", "trackOmp");
            }
            this.trackOmp = trackOmp;
            return this;
        }
        @CustomType.Setter
        public Builder trackOmpVariable(String trackOmpVariable) {
            if (trackOmpVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnInterfaceFeatureTemplateIpv6Vrrp", "trackOmpVariable");
            }
            this.trackOmpVariable = trackOmpVariable;
            return this;
        }
        @CustomType.Setter
        public Builder trackPrefixList(String trackPrefixList) {
            if (trackPrefixList == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnInterfaceFeatureTemplateIpv6Vrrp", "trackPrefixList");
            }
            this.trackPrefixList = trackPrefixList;
            return this;
        }
        @CustomType.Setter
        public Builder trackPrefixListVariable(String trackPrefixListVariable) {
            if (trackPrefixListVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnInterfaceFeatureTemplateIpv6Vrrp", "trackPrefixListVariable");
            }
            this.trackPrefixListVariable = trackPrefixListVariable;
            return this;
        }
        public GetCiscoVpnInterfaceFeatureTemplateIpv6Vrrp build() {
            final var _resultValue = new GetCiscoVpnInterfaceFeatureTemplateIpv6Vrrp();
            _resultValue.groupId = groupId;
            _resultValue.groupIdVariable = groupIdVariable;
            _resultValue.ipv6Addresses = ipv6Addresses;
            _resultValue.optional = optional;
            _resultValue.priority = priority;
            _resultValue.priorityVariable = priorityVariable;
            _resultValue.timer = timer;
            _resultValue.timerVariable = timerVariable;
            _resultValue.trackOmp = trackOmp;
            _resultValue.trackOmpVariable = trackOmpVariable;
            _resultValue.trackPrefixList = trackPrefixList;
            _resultValue.trackPrefixListVariable = trackPrefixListVariable;
            return _resultValue;
        }
    }
}
