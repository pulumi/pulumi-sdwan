// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CiscoThousandeyesFeatureTemplateVirtualApplicationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CiscoThousandeyesFeatureTemplateVirtualApplicationArgs Empty = new CiscoThousandeyesFeatureTemplateVirtualApplicationArgs();

    /**
     * List of Virtual applications
     *   - Default value: `te`
     * 
     */
    @Import(name="applicationType")
    private @Nullable Output<String> applicationType;

    /**
     * @return List of Virtual applications
     *   - Default value: `te`
     * 
     */
    public Optional<Output<String>> applicationType() {
        return Optional.ofNullable(this.applicationType);
    }

    /**
     * List of Virtual applications
     *   - Default value: `1`
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return List of Virtual applications
     *   - Default value: `1`
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * Indicates if list item is considered optional.
     * 
     */
    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    /**
     * Set the Account Group Token
     * 
     */
    @Import(name="teAccountGroupToken")
    private @Nullable Output<String> teAccountGroupToken;

    /**
     * @return Set the Account Group Token
     * 
     */
    public Optional<Output<String>> teAccountGroupToken() {
        return Optional.ofNullable(this.teAccountGroupToken);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="teAccountGroupTokenVariable")
    private @Nullable Output<String> teAccountGroupTokenVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> teAccountGroupTokenVariable() {
        return Optional.ofNullable(this.teAccountGroupTokenVariable);
    }

    /**
     * Set the Agent IP Address
     * 
     */
    @Import(name="teAgentIp")
    private @Nullable Output<String> teAgentIp;

    /**
     * @return Set the Agent IP Address
     * 
     */
    public Optional<Output<String>> teAgentIp() {
        return Optional.ofNullable(this.teAgentIp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="teAgentIpVariable")
    private @Nullable Output<String> teAgentIpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> teAgentIpVariable() {
        return Optional.ofNullable(this.teAgentIpVariable);
    }

    /**
     * Set the Agent default gateway
     * 
     */
    @Import(name="teDefaultGateway")
    private @Nullable Output<String> teDefaultGateway;

    /**
     * @return Set the Agent default gateway
     * 
     */
    public Optional<Output<String>> teDefaultGateway() {
        return Optional.ofNullable(this.teDefaultGateway);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="teDefaultGatewayVariable")
    private @Nullable Output<String> teDefaultGatewayVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> teDefaultGatewayVariable() {
        return Optional.ofNullable(this.teDefaultGatewayVariable);
    }

    /**
     * Set the host name
     * 
     */
    @Import(name="teHostname")
    private @Nullable Output<String> teHostname;

    /**
     * @return Set the host name
     * 
     */
    public Optional<Output<String>> teHostname() {
        return Optional.ofNullable(this.teHostname);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="teHostnameVariable")
    private @Nullable Output<String> teHostnameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> teHostnameVariable() {
        return Optional.ofNullable(this.teHostnameVariable);
    }

    /**
     * Set the name server
     * 
     */
    @Import(name="teNameServer")
    private @Nullable Output<String> teNameServer;

    /**
     * @return Set the name server
     * 
     */
    public Optional<Output<String>> teNameServer() {
        return Optional.ofNullable(this.teNameServer);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="teNameServerVariable")
    private @Nullable Output<String> teNameServerVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> teNameServerVariable() {
        return Optional.ofNullable(this.teNameServerVariable);
    }

    /**
     * PAC URL
     * 
     */
    @Import(name="tePacUrl")
    private @Nullable Output<String> tePacUrl;

    /**
     * @return PAC URL
     * 
     */
    public Optional<Output<String>> tePacUrl() {
        return Optional.ofNullable(this.tePacUrl);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tePacUrlVariable")
    private @Nullable Output<String> tePacUrlVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tePacUrlVariable() {
        return Optional.ofNullable(this.tePacUrlVariable);
    }

    /**
     * Set the proxy host
     * 
     */
    @Import(name="teProxyHost")
    private @Nullable Output<String> teProxyHost;

    /**
     * @return Set the proxy host
     * 
     */
    public Optional<Output<String>> teProxyHost() {
        return Optional.ofNullable(this.teProxyHost);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="teProxyHostVariable")
    private @Nullable Output<String> teProxyHostVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> teProxyHostVariable() {
        return Optional.ofNullable(this.teProxyHostVariable);
    }

    /**
     * Set the proxy port
     *   - Range: `0`-`65535`
     * 
     */
    @Import(name="teProxyPort")
    private @Nullable Output<Integer> teProxyPort;

    /**
     * @return Set the proxy port
     *   - Range: `0`-`65535`
     * 
     */
    public Optional<Output<Integer>> teProxyPort() {
        return Optional.ofNullable(this.teProxyPort);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="teProxyPortVariable")
    private @Nullable Output<String> teProxyPortVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> teProxyPortVariable() {
        return Optional.ofNullable(this.teProxyPortVariable);
    }

    /**
     * VPN number
     *   - Range: `1`-`65535`
     * 
     */
    @Import(name="teVpn")
    private @Nullable Output<Integer> teVpn;

    /**
     * @return VPN number
     *   - Range: `1`-`65535`
     * 
     */
    public Optional<Output<Integer>> teVpn() {
        return Optional.ofNullable(this.teVpn);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="teVpnVariable")
    private @Nullable Output<String> teVpnVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> teVpnVariable() {
        return Optional.ofNullable(this.teVpnVariable);
    }

    /**
     * Web Proxy Type
     *   - Choices: `none`, `static`, `pac`
     *   - Default value: `none`
     * 
     */
    @Import(name="teWebProxyType")
    private @Nullable Output<String> teWebProxyType;

    /**
     * @return Web Proxy Type
     *   - Choices: `none`, `static`, `pac`
     *   - Default value: `none`
     * 
     */
    public Optional<Output<String>> teWebProxyType() {
        return Optional.ofNullable(this.teWebProxyType);
    }

    private CiscoThousandeyesFeatureTemplateVirtualApplicationArgs() {}

    private CiscoThousandeyesFeatureTemplateVirtualApplicationArgs(CiscoThousandeyesFeatureTemplateVirtualApplicationArgs $) {
        this.applicationType = $.applicationType;
        this.instanceId = $.instanceId;
        this.optional = $.optional;
        this.teAccountGroupToken = $.teAccountGroupToken;
        this.teAccountGroupTokenVariable = $.teAccountGroupTokenVariable;
        this.teAgentIp = $.teAgentIp;
        this.teAgentIpVariable = $.teAgentIpVariable;
        this.teDefaultGateway = $.teDefaultGateway;
        this.teDefaultGatewayVariable = $.teDefaultGatewayVariable;
        this.teHostname = $.teHostname;
        this.teHostnameVariable = $.teHostnameVariable;
        this.teNameServer = $.teNameServer;
        this.teNameServerVariable = $.teNameServerVariable;
        this.tePacUrl = $.tePacUrl;
        this.tePacUrlVariable = $.tePacUrlVariable;
        this.teProxyHost = $.teProxyHost;
        this.teProxyHostVariable = $.teProxyHostVariable;
        this.teProxyPort = $.teProxyPort;
        this.teProxyPortVariable = $.teProxyPortVariable;
        this.teVpn = $.teVpn;
        this.teVpnVariable = $.teVpnVariable;
        this.teWebProxyType = $.teWebProxyType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CiscoThousandeyesFeatureTemplateVirtualApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CiscoThousandeyesFeatureTemplateVirtualApplicationArgs $;

        public Builder() {
            $ = new CiscoThousandeyesFeatureTemplateVirtualApplicationArgs();
        }

        public Builder(CiscoThousandeyesFeatureTemplateVirtualApplicationArgs defaults) {
            $ = new CiscoThousandeyesFeatureTemplateVirtualApplicationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationType List of Virtual applications
         *   - Default value: `te`
         * 
         * @return builder
         * 
         */
        public Builder applicationType(@Nullable Output<String> applicationType) {
            $.applicationType = applicationType;
            return this;
        }

        /**
         * @param applicationType List of Virtual applications
         *   - Default value: `te`
         * 
         * @return builder
         * 
         */
        public Builder applicationType(String applicationType) {
            return applicationType(Output.of(applicationType));
        }

        /**
         * @param instanceId List of Virtual applications
         *   - Default value: `1`
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId List of Virtual applications
         *   - Default value: `1`
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        /**
         * @param teAccountGroupToken Set the Account Group Token
         * 
         * @return builder
         * 
         */
        public Builder teAccountGroupToken(@Nullable Output<String> teAccountGroupToken) {
            $.teAccountGroupToken = teAccountGroupToken;
            return this;
        }

        /**
         * @param teAccountGroupToken Set the Account Group Token
         * 
         * @return builder
         * 
         */
        public Builder teAccountGroupToken(String teAccountGroupToken) {
            return teAccountGroupToken(Output.of(teAccountGroupToken));
        }

        /**
         * @param teAccountGroupTokenVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder teAccountGroupTokenVariable(@Nullable Output<String> teAccountGroupTokenVariable) {
            $.teAccountGroupTokenVariable = teAccountGroupTokenVariable;
            return this;
        }

        /**
         * @param teAccountGroupTokenVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder teAccountGroupTokenVariable(String teAccountGroupTokenVariable) {
            return teAccountGroupTokenVariable(Output.of(teAccountGroupTokenVariable));
        }

        /**
         * @param teAgentIp Set the Agent IP Address
         * 
         * @return builder
         * 
         */
        public Builder teAgentIp(@Nullable Output<String> teAgentIp) {
            $.teAgentIp = teAgentIp;
            return this;
        }

        /**
         * @param teAgentIp Set the Agent IP Address
         * 
         * @return builder
         * 
         */
        public Builder teAgentIp(String teAgentIp) {
            return teAgentIp(Output.of(teAgentIp));
        }

        /**
         * @param teAgentIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder teAgentIpVariable(@Nullable Output<String> teAgentIpVariable) {
            $.teAgentIpVariable = teAgentIpVariable;
            return this;
        }

        /**
         * @param teAgentIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder teAgentIpVariable(String teAgentIpVariable) {
            return teAgentIpVariable(Output.of(teAgentIpVariable));
        }

        /**
         * @param teDefaultGateway Set the Agent default gateway
         * 
         * @return builder
         * 
         */
        public Builder teDefaultGateway(@Nullable Output<String> teDefaultGateway) {
            $.teDefaultGateway = teDefaultGateway;
            return this;
        }

        /**
         * @param teDefaultGateway Set the Agent default gateway
         * 
         * @return builder
         * 
         */
        public Builder teDefaultGateway(String teDefaultGateway) {
            return teDefaultGateway(Output.of(teDefaultGateway));
        }

        /**
         * @param teDefaultGatewayVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder teDefaultGatewayVariable(@Nullable Output<String> teDefaultGatewayVariable) {
            $.teDefaultGatewayVariable = teDefaultGatewayVariable;
            return this;
        }

        /**
         * @param teDefaultGatewayVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder teDefaultGatewayVariable(String teDefaultGatewayVariable) {
            return teDefaultGatewayVariable(Output.of(teDefaultGatewayVariable));
        }

        /**
         * @param teHostname Set the host name
         * 
         * @return builder
         * 
         */
        public Builder teHostname(@Nullable Output<String> teHostname) {
            $.teHostname = teHostname;
            return this;
        }

        /**
         * @param teHostname Set the host name
         * 
         * @return builder
         * 
         */
        public Builder teHostname(String teHostname) {
            return teHostname(Output.of(teHostname));
        }

        /**
         * @param teHostnameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder teHostnameVariable(@Nullable Output<String> teHostnameVariable) {
            $.teHostnameVariable = teHostnameVariable;
            return this;
        }

        /**
         * @param teHostnameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder teHostnameVariable(String teHostnameVariable) {
            return teHostnameVariable(Output.of(teHostnameVariable));
        }

        /**
         * @param teNameServer Set the name server
         * 
         * @return builder
         * 
         */
        public Builder teNameServer(@Nullable Output<String> teNameServer) {
            $.teNameServer = teNameServer;
            return this;
        }

        /**
         * @param teNameServer Set the name server
         * 
         * @return builder
         * 
         */
        public Builder teNameServer(String teNameServer) {
            return teNameServer(Output.of(teNameServer));
        }

        /**
         * @param teNameServerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder teNameServerVariable(@Nullable Output<String> teNameServerVariable) {
            $.teNameServerVariable = teNameServerVariable;
            return this;
        }

        /**
         * @param teNameServerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder teNameServerVariable(String teNameServerVariable) {
            return teNameServerVariable(Output.of(teNameServerVariable));
        }

        /**
         * @param tePacUrl PAC URL
         * 
         * @return builder
         * 
         */
        public Builder tePacUrl(@Nullable Output<String> tePacUrl) {
            $.tePacUrl = tePacUrl;
            return this;
        }

        /**
         * @param tePacUrl PAC URL
         * 
         * @return builder
         * 
         */
        public Builder tePacUrl(String tePacUrl) {
            return tePacUrl(Output.of(tePacUrl));
        }

        /**
         * @param tePacUrlVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tePacUrlVariable(@Nullable Output<String> tePacUrlVariable) {
            $.tePacUrlVariable = tePacUrlVariable;
            return this;
        }

        /**
         * @param tePacUrlVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tePacUrlVariable(String tePacUrlVariable) {
            return tePacUrlVariable(Output.of(tePacUrlVariable));
        }

        /**
         * @param teProxyHost Set the proxy host
         * 
         * @return builder
         * 
         */
        public Builder teProxyHost(@Nullable Output<String> teProxyHost) {
            $.teProxyHost = teProxyHost;
            return this;
        }

        /**
         * @param teProxyHost Set the proxy host
         * 
         * @return builder
         * 
         */
        public Builder teProxyHost(String teProxyHost) {
            return teProxyHost(Output.of(teProxyHost));
        }

        /**
         * @param teProxyHostVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder teProxyHostVariable(@Nullable Output<String> teProxyHostVariable) {
            $.teProxyHostVariable = teProxyHostVariable;
            return this;
        }

        /**
         * @param teProxyHostVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder teProxyHostVariable(String teProxyHostVariable) {
            return teProxyHostVariable(Output.of(teProxyHostVariable));
        }

        /**
         * @param teProxyPort Set the proxy port
         *   - Range: `0`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder teProxyPort(@Nullable Output<Integer> teProxyPort) {
            $.teProxyPort = teProxyPort;
            return this;
        }

        /**
         * @param teProxyPort Set the proxy port
         *   - Range: `0`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder teProxyPort(Integer teProxyPort) {
            return teProxyPort(Output.of(teProxyPort));
        }

        /**
         * @param teProxyPortVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder teProxyPortVariable(@Nullable Output<String> teProxyPortVariable) {
            $.teProxyPortVariable = teProxyPortVariable;
            return this;
        }

        /**
         * @param teProxyPortVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder teProxyPortVariable(String teProxyPortVariable) {
            return teProxyPortVariable(Output.of(teProxyPortVariable));
        }

        /**
         * @param teVpn VPN number
         *   - Range: `1`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder teVpn(@Nullable Output<Integer> teVpn) {
            $.teVpn = teVpn;
            return this;
        }

        /**
         * @param teVpn VPN number
         *   - Range: `1`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder teVpn(Integer teVpn) {
            return teVpn(Output.of(teVpn));
        }

        /**
         * @param teVpnVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder teVpnVariable(@Nullable Output<String> teVpnVariable) {
            $.teVpnVariable = teVpnVariable;
            return this;
        }

        /**
         * @param teVpnVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder teVpnVariable(String teVpnVariable) {
            return teVpnVariable(Output.of(teVpnVariable));
        }

        /**
         * @param teWebProxyType Web Proxy Type
         *   - Choices: `none`, `static`, `pac`
         *   - Default value: `none`
         * 
         * @return builder
         * 
         */
        public Builder teWebProxyType(@Nullable Output<String> teWebProxyType) {
            $.teWebProxyType = teWebProxyType;
            return this;
        }

        /**
         * @param teWebProxyType Web Proxy Type
         *   - Choices: `none`, `static`, `pac`
         *   - Default value: `none`
         * 
         * @return builder
         * 
         */
        public Builder teWebProxyType(String teWebProxyType) {
            return teWebProxyType(Output.of(teWebProxyType));
        }

        public CiscoThousandeyesFeatureTemplateVirtualApplicationArgs build() {
            return $;
        }
    }

}
