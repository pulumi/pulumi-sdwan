// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetConfigurationGroupDeviceVariable;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetConfigurationGroupDevice {
    /**
     * @return Deploy to device if enabled.
     * 
     */
    private Boolean deploy;
    /**
     * @return Device ID
     * 
     */
    private String id;
    /**
     * @return List of variables
     * 
     */
    private List<GetConfigurationGroupDeviceVariable> variables;

    private GetConfigurationGroupDevice() {}
    /**
     * @return Deploy to device if enabled.
     * 
     */
    public Boolean deploy() {
        return this.deploy;
    }
    /**
     * @return Device ID
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of variables
     * 
     */
    public List<GetConfigurationGroupDeviceVariable> variables() {
        return this.variables;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigurationGroupDevice defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean deploy;
        private String id;
        private List<GetConfigurationGroupDeviceVariable> variables;
        public Builder() {}
        public Builder(GetConfigurationGroupDevice defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deploy = defaults.deploy;
    	      this.id = defaults.id;
    	      this.variables = defaults.variables;
        }

        @CustomType.Setter
        public Builder deploy(Boolean deploy) {
            if (deploy == null) {
              throw new MissingRequiredPropertyException("GetConfigurationGroupDevice", "deploy");
            }
            this.deploy = deploy;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetConfigurationGroupDevice", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder variables(List<GetConfigurationGroupDeviceVariable> variables) {
            if (variables == null) {
              throw new MissingRequiredPropertyException("GetConfigurationGroupDevice", "variables");
            }
            this.variables = variables;
            return this;
        }
        public Builder variables(GetConfigurationGroupDeviceVariable... variables) {
            return variables(List.of(variables));
        }
        public GetConfigurationGroupDevice build() {
            final var _resultValue = new GetConfigurationGroupDevice();
            _resultValue.deploy = deploy;
            _resultValue.id = id;
            _resultValue.variables = variables;
            return _resultValue;
        }
    }
}
