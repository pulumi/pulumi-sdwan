// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetCiscoBgpFeatureTemplateAddressFamilyIpv4AggregateAddress;
import com.pulumi.sdwan.outputs.GetCiscoBgpFeatureTemplateAddressFamilyIpv4Network;
import com.pulumi.sdwan.outputs.GetCiscoBgpFeatureTemplateAddressFamilyIpv6AggregateAddress;
import com.pulumi.sdwan.outputs.GetCiscoBgpFeatureTemplateAddressFamilyIpv6Network;
import com.pulumi.sdwan.outputs.GetCiscoBgpFeatureTemplateAddressFamilyRedistributeRoute;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCiscoBgpFeatureTemplateAddressFamily {
    /**
     * @return BGP Default Information Originate
     * 
     */
    private Boolean defaultInformationOriginate;
    /**
     * @return Variable name
     * 
     */
    private String defaultInformationOriginateVariable;
    /**
     * @return Set BGP address family
     * 
     */
    private String familyType;
    /**
     * @return Aggregate prefixes in specific range
     * 
     */
    private List<GetCiscoBgpFeatureTemplateAddressFamilyIpv4AggregateAddress> ipv4AggregateAddresses;
    /**
     * @return Configure the networks for BGP to advertise
     * 
     */
    private List<GetCiscoBgpFeatureTemplateAddressFamilyIpv4Network> ipv4Networks;
    /**
     * @return IPv6 Aggregate prefixes in specific range
     * 
     */
    private List<GetCiscoBgpFeatureTemplateAddressFamilyIpv6AggregateAddress> ipv6AggregateAddresses;
    /**
     * @return Configure the networks for BGP to advertise
     * 
     */
    private List<GetCiscoBgpFeatureTemplateAddressFamilyIpv6Network> ipv6Networks;
    /**
     * @return Set maximum number of parallel IBGP paths for multipath load sharing
     * 
     */
    private Integer maximumPaths;
    /**
     * @return Variable name
     * 
     */
    private String maximumPathsVariable;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private Boolean optional;
    /**
     * @return Redistribute routes into BGP
     * 
     */
    private List<GetCiscoBgpFeatureTemplateAddressFamilyRedistributeRoute> redistributeRoutes;
    /**
     * @return Filter
     * 
     */
    private Boolean tableMapFilter;
    /**
     * @return Variable name
     * 
     */
    private String tableMapFilterVariable;
    /**
     * @return Map external entry attributes into routing table
     * 
     */
    private String tableMapPolicy;
    /**
     * @return Variable name
     * 
     */
    private String tableMapPolicyVariable;

    private GetCiscoBgpFeatureTemplateAddressFamily() {}
    /**
     * @return BGP Default Information Originate
     * 
     */
    public Boolean defaultInformationOriginate() {
        return this.defaultInformationOriginate;
    }
    /**
     * @return Variable name
     * 
     */
    public String defaultInformationOriginateVariable() {
        return this.defaultInformationOriginateVariable;
    }
    /**
     * @return Set BGP address family
     * 
     */
    public String familyType() {
        return this.familyType;
    }
    /**
     * @return Aggregate prefixes in specific range
     * 
     */
    public List<GetCiscoBgpFeatureTemplateAddressFamilyIpv4AggregateAddress> ipv4AggregateAddresses() {
        return this.ipv4AggregateAddresses;
    }
    /**
     * @return Configure the networks for BGP to advertise
     * 
     */
    public List<GetCiscoBgpFeatureTemplateAddressFamilyIpv4Network> ipv4Networks() {
        return this.ipv4Networks;
    }
    /**
     * @return IPv6 Aggregate prefixes in specific range
     * 
     */
    public List<GetCiscoBgpFeatureTemplateAddressFamilyIpv6AggregateAddress> ipv6AggregateAddresses() {
        return this.ipv6AggregateAddresses;
    }
    /**
     * @return Configure the networks for BGP to advertise
     * 
     */
    public List<GetCiscoBgpFeatureTemplateAddressFamilyIpv6Network> ipv6Networks() {
        return this.ipv6Networks;
    }
    /**
     * @return Set maximum number of parallel IBGP paths for multipath load sharing
     * 
     */
    public Integer maximumPaths() {
        return this.maximumPaths;
    }
    /**
     * @return Variable name
     * 
     */
    public String maximumPathsVariable() {
        return this.maximumPathsVariable;
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Boolean optional() {
        return this.optional;
    }
    /**
     * @return Redistribute routes into BGP
     * 
     */
    public List<GetCiscoBgpFeatureTemplateAddressFamilyRedistributeRoute> redistributeRoutes() {
        return this.redistributeRoutes;
    }
    /**
     * @return Filter
     * 
     */
    public Boolean tableMapFilter() {
        return this.tableMapFilter;
    }
    /**
     * @return Variable name
     * 
     */
    public String tableMapFilterVariable() {
        return this.tableMapFilterVariable;
    }
    /**
     * @return Map external entry attributes into routing table
     * 
     */
    public String tableMapPolicy() {
        return this.tableMapPolicy;
    }
    /**
     * @return Variable name
     * 
     */
    public String tableMapPolicyVariable() {
        return this.tableMapPolicyVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCiscoBgpFeatureTemplateAddressFamily defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean defaultInformationOriginate;
        private String defaultInformationOriginateVariable;
        private String familyType;
        private List<GetCiscoBgpFeatureTemplateAddressFamilyIpv4AggregateAddress> ipv4AggregateAddresses;
        private List<GetCiscoBgpFeatureTemplateAddressFamilyIpv4Network> ipv4Networks;
        private List<GetCiscoBgpFeatureTemplateAddressFamilyIpv6AggregateAddress> ipv6AggregateAddresses;
        private List<GetCiscoBgpFeatureTemplateAddressFamilyIpv6Network> ipv6Networks;
        private Integer maximumPaths;
        private String maximumPathsVariable;
        private Boolean optional;
        private List<GetCiscoBgpFeatureTemplateAddressFamilyRedistributeRoute> redistributeRoutes;
        private Boolean tableMapFilter;
        private String tableMapFilterVariable;
        private String tableMapPolicy;
        private String tableMapPolicyVariable;
        public Builder() {}
        public Builder(GetCiscoBgpFeatureTemplateAddressFamily defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultInformationOriginate = defaults.defaultInformationOriginate;
    	      this.defaultInformationOriginateVariable = defaults.defaultInformationOriginateVariable;
    	      this.familyType = defaults.familyType;
    	      this.ipv4AggregateAddresses = defaults.ipv4AggregateAddresses;
    	      this.ipv4Networks = defaults.ipv4Networks;
    	      this.ipv6AggregateAddresses = defaults.ipv6AggregateAddresses;
    	      this.ipv6Networks = defaults.ipv6Networks;
    	      this.maximumPaths = defaults.maximumPaths;
    	      this.maximumPathsVariable = defaults.maximumPathsVariable;
    	      this.optional = defaults.optional;
    	      this.redistributeRoutes = defaults.redistributeRoutes;
    	      this.tableMapFilter = defaults.tableMapFilter;
    	      this.tableMapFilterVariable = defaults.tableMapFilterVariable;
    	      this.tableMapPolicy = defaults.tableMapPolicy;
    	      this.tableMapPolicyVariable = defaults.tableMapPolicyVariable;
        }

        @CustomType.Setter
        public Builder defaultInformationOriginate(Boolean defaultInformationOriginate) {
            if (defaultInformationOriginate == null) {
              throw new MissingRequiredPropertyException("GetCiscoBgpFeatureTemplateAddressFamily", "defaultInformationOriginate");
            }
            this.defaultInformationOriginate = defaultInformationOriginate;
            return this;
        }
        @CustomType.Setter
        public Builder defaultInformationOriginateVariable(String defaultInformationOriginateVariable) {
            if (defaultInformationOriginateVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoBgpFeatureTemplateAddressFamily", "defaultInformationOriginateVariable");
            }
            this.defaultInformationOriginateVariable = defaultInformationOriginateVariable;
            return this;
        }
        @CustomType.Setter
        public Builder familyType(String familyType) {
            if (familyType == null) {
              throw new MissingRequiredPropertyException("GetCiscoBgpFeatureTemplateAddressFamily", "familyType");
            }
            this.familyType = familyType;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4AggregateAddresses(List<GetCiscoBgpFeatureTemplateAddressFamilyIpv4AggregateAddress> ipv4AggregateAddresses) {
            if (ipv4AggregateAddresses == null) {
              throw new MissingRequiredPropertyException("GetCiscoBgpFeatureTemplateAddressFamily", "ipv4AggregateAddresses");
            }
            this.ipv4AggregateAddresses = ipv4AggregateAddresses;
            return this;
        }
        public Builder ipv4AggregateAddresses(GetCiscoBgpFeatureTemplateAddressFamilyIpv4AggregateAddress... ipv4AggregateAddresses) {
            return ipv4AggregateAddresses(List.of(ipv4AggregateAddresses));
        }
        @CustomType.Setter
        public Builder ipv4Networks(List<GetCiscoBgpFeatureTemplateAddressFamilyIpv4Network> ipv4Networks) {
            if (ipv4Networks == null) {
              throw new MissingRequiredPropertyException("GetCiscoBgpFeatureTemplateAddressFamily", "ipv4Networks");
            }
            this.ipv4Networks = ipv4Networks;
            return this;
        }
        public Builder ipv4Networks(GetCiscoBgpFeatureTemplateAddressFamilyIpv4Network... ipv4Networks) {
            return ipv4Networks(List.of(ipv4Networks));
        }
        @CustomType.Setter
        public Builder ipv6AggregateAddresses(List<GetCiscoBgpFeatureTemplateAddressFamilyIpv6AggregateAddress> ipv6AggregateAddresses) {
            if (ipv6AggregateAddresses == null) {
              throw new MissingRequiredPropertyException("GetCiscoBgpFeatureTemplateAddressFamily", "ipv6AggregateAddresses");
            }
            this.ipv6AggregateAddresses = ipv6AggregateAddresses;
            return this;
        }
        public Builder ipv6AggregateAddresses(GetCiscoBgpFeatureTemplateAddressFamilyIpv6AggregateAddress... ipv6AggregateAddresses) {
            return ipv6AggregateAddresses(List.of(ipv6AggregateAddresses));
        }
        @CustomType.Setter
        public Builder ipv6Networks(List<GetCiscoBgpFeatureTemplateAddressFamilyIpv6Network> ipv6Networks) {
            if (ipv6Networks == null) {
              throw new MissingRequiredPropertyException("GetCiscoBgpFeatureTemplateAddressFamily", "ipv6Networks");
            }
            this.ipv6Networks = ipv6Networks;
            return this;
        }
        public Builder ipv6Networks(GetCiscoBgpFeatureTemplateAddressFamilyIpv6Network... ipv6Networks) {
            return ipv6Networks(List.of(ipv6Networks));
        }
        @CustomType.Setter
        public Builder maximumPaths(Integer maximumPaths) {
            if (maximumPaths == null) {
              throw new MissingRequiredPropertyException("GetCiscoBgpFeatureTemplateAddressFamily", "maximumPaths");
            }
            this.maximumPaths = maximumPaths;
            return this;
        }
        @CustomType.Setter
        public Builder maximumPathsVariable(String maximumPathsVariable) {
            if (maximumPathsVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoBgpFeatureTemplateAddressFamily", "maximumPathsVariable");
            }
            this.maximumPathsVariable = maximumPathsVariable;
            return this;
        }
        @CustomType.Setter
        public Builder optional(Boolean optional) {
            if (optional == null) {
              throw new MissingRequiredPropertyException("GetCiscoBgpFeatureTemplateAddressFamily", "optional");
            }
            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder redistributeRoutes(List<GetCiscoBgpFeatureTemplateAddressFamilyRedistributeRoute> redistributeRoutes) {
            if (redistributeRoutes == null) {
              throw new MissingRequiredPropertyException("GetCiscoBgpFeatureTemplateAddressFamily", "redistributeRoutes");
            }
            this.redistributeRoutes = redistributeRoutes;
            return this;
        }
        public Builder redistributeRoutes(GetCiscoBgpFeatureTemplateAddressFamilyRedistributeRoute... redistributeRoutes) {
            return redistributeRoutes(List.of(redistributeRoutes));
        }
        @CustomType.Setter
        public Builder tableMapFilter(Boolean tableMapFilter) {
            if (tableMapFilter == null) {
              throw new MissingRequiredPropertyException("GetCiscoBgpFeatureTemplateAddressFamily", "tableMapFilter");
            }
            this.tableMapFilter = tableMapFilter;
            return this;
        }
        @CustomType.Setter
        public Builder tableMapFilterVariable(String tableMapFilterVariable) {
            if (tableMapFilterVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoBgpFeatureTemplateAddressFamily", "tableMapFilterVariable");
            }
            this.tableMapFilterVariable = tableMapFilterVariable;
            return this;
        }
        @CustomType.Setter
        public Builder tableMapPolicy(String tableMapPolicy) {
            if (tableMapPolicy == null) {
              throw new MissingRequiredPropertyException("GetCiscoBgpFeatureTemplateAddressFamily", "tableMapPolicy");
            }
            this.tableMapPolicy = tableMapPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder tableMapPolicyVariable(String tableMapPolicyVariable) {
            if (tableMapPolicyVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoBgpFeatureTemplateAddressFamily", "tableMapPolicyVariable");
            }
            this.tableMapPolicyVariable = tableMapPolicyVariable;
            return this;
        }
        public GetCiscoBgpFeatureTemplateAddressFamily build() {
            final var _resultValue = new GetCiscoBgpFeatureTemplateAddressFamily();
            _resultValue.defaultInformationOriginate = defaultInformationOriginate;
            _resultValue.defaultInformationOriginateVariable = defaultInformationOriginateVariable;
            _resultValue.familyType = familyType;
            _resultValue.ipv4AggregateAddresses = ipv4AggregateAddresses;
            _resultValue.ipv4Networks = ipv4Networks;
            _resultValue.ipv6AggregateAddresses = ipv6AggregateAddresses;
            _resultValue.ipv6Networks = ipv6Networks;
            _resultValue.maximumPaths = maximumPaths;
            _resultValue.maximumPathsVariable = maximumPathsVariable;
            _resultValue.optional = optional;
            _resultValue.redistributeRoutes = redistributeRoutes;
            _resultValue.tableMapFilter = tableMapFilter;
            _resultValue.tableMapFilterVariable = tableMapFilterVariable;
            _resultValue.tableMapPolicy = tableMapPolicy;
            _resultValue.tableMapPolicyVariable = tableMapPolicyVariable;
            return _resultValue;
        }
    }
}
