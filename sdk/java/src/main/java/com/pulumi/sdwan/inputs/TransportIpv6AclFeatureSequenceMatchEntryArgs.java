// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.TransportIpv6AclFeatureSequenceMatchEntryDestinationPortArgs;
import com.pulumi.sdwan.inputs.TransportIpv6AclFeatureSequenceMatchEntrySourcePortArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransportIpv6AclFeatureSequenceMatchEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransportIpv6AclFeatureSequenceMatchEntryArgs Empty = new TransportIpv6AclFeatureSequenceMatchEntryArgs();

    /**
     * Destination Data IP Prefix
     * 
     */
    @Import(name="destinationDataPrefix")
    private @Nullable Output<String> destinationDataPrefix;

    /**
     * @return Destination Data IP Prefix
     * 
     */
    public Optional<Output<String>> destinationDataPrefix() {
        return Optional.ofNullable(this.destinationDataPrefix);
    }

    @Import(name="destinationDataPrefixListId")
    private @Nullable Output<String> destinationDataPrefixListId;

    public Optional<Output<String>> destinationDataPrefixListId() {
        return Optional.ofNullable(this.destinationDataPrefixListId);
    }

    /**
     * Destination Port List
     * 
     */
    @Import(name="destinationPorts")
    private @Nullable Output<List<TransportIpv6AclFeatureSequenceMatchEntryDestinationPortArgs>> destinationPorts;

    /**
     * @return Destination Port List
     * 
     */
    public Optional<Output<List<TransportIpv6AclFeatureSequenceMatchEntryDestinationPortArgs>>> destinationPorts() {
        return Optional.ofNullable(this.destinationPorts);
    }

    /**
     * ICMP6 Message
     * 
     */
    @Import(name="icmpMessages")
    private @Nullable Output<List<String>> icmpMessages;

    /**
     * @return ICMP6 Message
     * 
     */
    public Optional<Output<List<String>>> icmpMessages() {
        return Optional.ofNullable(this.icmpMessages);
    }

    /**
     * next header number
     *   - Range: `0`-`255`
     * 
     */
    @Import(name="nextHeader")
    private @Nullable Output<Integer> nextHeader;

    /**
     * @return next header number
     *   - Range: `0`-`255`
     * 
     */
    public Optional<Output<Integer>> nextHeader() {
        return Optional.ofNullable(this.nextHeader);
    }

    /**
     * Packet Length
     * 
     */
    @Import(name="packetLength")
    private @Nullable Output<String> packetLength;

    /**
     * @return Packet Length
     * 
     */
    public Optional<Output<String>> packetLength() {
        return Optional.ofNullable(this.packetLength);
    }

    /**
     * Source Data IP Prefix
     * 
     */
    @Import(name="sourceDataPrefix")
    private @Nullable Output<String> sourceDataPrefix;

    /**
     * @return Source Data IP Prefix
     * 
     */
    public Optional<Output<String>> sourceDataPrefix() {
        return Optional.ofNullable(this.sourceDataPrefix);
    }

    @Import(name="sourceDataPrefixListId")
    private @Nullable Output<String> sourceDataPrefixListId;

    public Optional<Output<String>> sourceDataPrefixListId() {
        return Optional.ofNullable(this.sourceDataPrefixListId);
    }

    /**
     * Source Port List
     * 
     */
    @Import(name="sourcePorts")
    private @Nullable Output<List<TransportIpv6AclFeatureSequenceMatchEntrySourcePortArgs>> sourcePorts;

    /**
     * @return Source Port List
     * 
     */
    public Optional<Output<List<TransportIpv6AclFeatureSequenceMatchEntrySourcePortArgs>>> sourcePorts() {
        return Optional.ofNullable(this.sourcePorts);
    }

    /**
     * TCP States
     *   - Choices: `syn`
     * 
     */
    @Import(name="tcpState")
    private @Nullable Output<String> tcpState;

    /**
     * @return TCP States
     *   - Choices: `syn`
     * 
     */
    public Optional<Output<String>> tcpState() {
        return Optional.ofNullable(this.tcpState);
    }

    /**
     * Select Traffic Class
     * 
     */
    @Import(name="trafficClasses")
    private @Nullable Output<List<Integer>> trafficClasses;

    /**
     * @return Select Traffic Class
     * 
     */
    public Optional<Output<List<Integer>>> trafficClasses() {
        return Optional.ofNullable(this.trafficClasses);
    }

    private TransportIpv6AclFeatureSequenceMatchEntryArgs() {}

    private TransportIpv6AclFeatureSequenceMatchEntryArgs(TransportIpv6AclFeatureSequenceMatchEntryArgs $) {
        this.destinationDataPrefix = $.destinationDataPrefix;
        this.destinationDataPrefixListId = $.destinationDataPrefixListId;
        this.destinationPorts = $.destinationPorts;
        this.icmpMessages = $.icmpMessages;
        this.nextHeader = $.nextHeader;
        this.packetLength = $.packetLength;
        this.sourceDataPrefix = $.sourceDataPrefix;
        this.sourceDataPrefixListId = $.sourceDataPrefixListId;
        this.sourcePorts = $.sourcePorts;
        this.tcpState = $.tcpState;
        this.trafficClasses = $.trafficClasses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransportIpv6AclFeatureSequenceMatchEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransportIpv6AclFeatureSequenceMatchEntryArgs $;

        public Builder() {
            $ = new TransportIpv6AclFeatureSequenceMatchEntryArgs();
        }

        public Builder(TransportIpv6AclFeatureSequenceMatchEntryArgs defaults) {
            $ = new TransportIpv6AclFeatureSequenceMatchEntryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinationDataPrefix Destination Data IP Prefix
         * 
         * @return builder
         * 
         */
        public Builder destinationDataPrefix(@Nullable Output<String> destinationDataPrefix) {
            $.destinationDataPrefix = destinationDataPrefix;
            return this;
        }

        /**
         * @param destinationDataPrefix Destination Data IP Prefix
         * 
         * @return builder
         * 
         */
        public Builder destinationDataPrefix(String destinationDataPrefix) {
            return destinationDataPrefix(Output.of(destinationDataPrefix));
        }

        public Builder destinationDataPrefixListId(@Nullable Output<String> destinationDataPrefixListId) {
            $.destinationDataPrefixListId = destinationDataPrefixListId;
            return this;
        }

        public Builder destinationDataPrefixListId(String destinationDataPrefixListId) {
            return destinationDataPrefixListId(Output.of(destinationDataPrefixListId));
        }

        /**
         * @param destinationPorts Destination Port List
         * 
         * @return builder
         * 
         */
        public Builder destinationPorts(@Nullable Output<List<TransportIpv6AclFeatureSequenceMatchEntryDestinationPortArgs>> destinationPorts) {
            $.destinationPorts = destinationPorts;
            return this;
        }

        /**
         * @param destinationPorts Destination Port List
         * 
         * @return builder
         * 
         */
        public Builder destinationPorts(List<TransportIpv6AclFeatureSequenceMatchEntryDestinationPortArgs> destinationPorts) {
            return destinationPorts(Output.of(destinationPorts));
        }

        /**
         * @param destinationPorts Destination Port List
         * 
         * @return builder
         * 
         */
        public Builder destinationPorts(TransportIpv6AclFeatureSequenceMatchEntryDestinationPortArgs... destinationPorts) {
            return destinationPorts(List.of(destinationPorts));
        }

        /**
         * @param icmpMessages ICMP6 Message
         * 
         * @return builder
         * 
         */
        public Builder icmpMessages(@Nullable Output<List<String>> icmpMessages) {
            $.icmpMessages = icmpMessages;
            return this;
        }

        /**
         * @param icmpMessages ICMP6 Message
         * 
         * @return builder
         * 
         */
        public Builder icmpMessages(List<String> icmpMessages) {
            return icmpMessages(Output.of(icmpMessages));
        }

        /**
         * @param icmpMessages ICMP6 Message
         * 
         * @return builder
         * 
         */
        public Builder icmpMessages(String... icmpMessages) {
            return icmpMessages(List.of(icmpMessages));
        }

        /**
         * @param nextHeader next header number
         *   - Range: `0`-`255`
         * 
         * @return builder
         * 
         */
        public Builder nextHeader(@Nullable Output<Integer> nextHeader) {
            $.nextHeader = nextHeader;
            return this;
        }

        /**
         * @param nextHeader next header number
         *   - Range: `0`-`255`
         * 
         * @return builder
         * 
         */
        public Builder nextHeader(Integer nextHeader) {
            return nextHeader(Output.of(nextHeader));
        }

        /**
         * @param packetLength Packet Length
         * 
         * @return builder
         * 
         */
        public Builder packetLength(@Nullable Output<String> packetLength) {
            $.packetLength = packetLength;
            return this;
        }

        /**
         * @param packetLength Packet Length
         * 
         * @return builder
         * 
         */
        public Builder packetLength(String packetLength) {
            return packetLength(Output.of(packetLength));
        }

        /**
         * @param sourceDataPrefix Source Data IP Prefix
         * 
         * @return builder
         * 
         */
        public Builder sourceDataPrefix(@Nullable Output<String> sourceDataPrefix) {
            $.sourceDataPrefix = sourceDataPrefix;
            return this;
        }

        /**
         * @param sourceDataPrefix Source Data IP Prefix
         * 
         * @return builder
         * 
         */
        public Builder sourceDataPrefix(String sourceDataPrefix) {
            return sourceDataPrefix(Output.of(sourceDataPrefix));
        }

        public Builder sourceDataPrefixListId(@Nullable Output<String> sourceDataPrefixListId) {
            $.sourceDataPrefixListId = sourceDataPrefixListId;
            return this;
        }

        public Builder sourceDataPrefixListId(String sourceDataPrefixListId) {
            return sourceDataPrefixListId(Output.of(sourceDataPrefixListId));
        }

        /**
         * @param sourcePorts Source Port List
         * 
         * @return builder
         * 
         */
        public Builder sourcePorts(@Nullable Output<List<TransportIpv6AclFeatureSequenceMatchEntrySourcePortArgs>> sourcePorts) {
            $.sourcePorts = sourcePorts;
            return this;
        }

        /**
         * @param sourcePorts Source Port List
         * 
         * @return builder
         * 
         */
        public Builder sourcePorts(List<TransportIpv6AclFeatureSequenceMatchEntrySourcePortArgs> sourcePorts) {
            return sourcePorts(Output.of(sourcePorts));
        }

        /**
         * @param sourcePorts Source Port List
         * 
         * @return builder
         * 
         */
        public Builder sourcePorts(TransportIpv6AclFeatureSequenceMatchEntrySourcePortArgs... sourcePorts) {
            return sourcePorts(List.of(sourcePorts));
        }

        /**
         * @param tcpState TCP States
         *   - Choices: `syn`
         * 
         * @return builder
         * 
         */
        public Builder tcpState(@Nullable Output<String> tcpState) {
            $.tcpState = tcpState;
            return this;
        }

        /**
         * @param tcpState TCP States
         *   - Choices: `syn`
         * 
         * @return builder
         * 
         */
        public Builder tcpState(String tcpState) {
            return tcpState(Output.of(tcpState));
        }

        /**
         * @param trafficClasses Select Traffic Class
         * 
         * @return builder
         * 
         */
        public Builder trafficClasses(@Nullable Output<List<Integer>> trafficClasses) {
            $.trafficClasses = trafficClasses;
            return this;
        }

        /**
         * @param trafficClasses Select Traffic Class
         * 
         * @return builder
         * 
         */
        public Builder trafficClasses(List<Integer> trafficClasses) {
            return trafficClasses(Output.of(trafficClasses));
        }

        /**
         * @param trafficClasses Select Traffic Class
         * 
         * @return builder
         * 
         */
        public Builder trafficClasses(Integer... trafficClasses) {
            return trafficClasses(List.of(trafficClasses));
        }

        public TransportIpv6AclFeatureSequenceMatchEntryArgs build() {
            return $;
        }
    }

}
