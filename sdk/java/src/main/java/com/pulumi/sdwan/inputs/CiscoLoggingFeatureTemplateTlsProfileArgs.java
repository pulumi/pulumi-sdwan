// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CiscoLoggingFeatureTemplateTlsProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final CiscoLoggingFeatureTemplateTlsProfileArgs Empty = new CiscoLoggingFeatureTemplateTlsProfileArgs();

    /**
     * Authentication Type
     *   - Choices: `Server`, `Mutual`
     * 
     */
    @Import(name="authenticationType")
    private @Nullable Output<String> authenticationType;

    /**
     * @return Authentication Type
     *   - Choices: `Server`, `Mutual`
     * 
     */
    public Optional<Output<String>> authenticationType() {
        return Optional.ofNullable(this.authenticationType);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ciphersuiteListVariable")
    private @Nullable Output<String> ciphersuiteListVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ciphersuiteListVariable() {
        return Optional.ofNullable(this.ciphersuiteListVariable);
    }

    /**
     * Syslog secure server ciphersuites. Possible values: `aes-128-cbc-sha`, `aes-256-cbc-sha`, `dhe-aes-cbc-sha2`, `dhe-aes-gcm-sha2`, `ecdhe-ecdsa-aes-gcm-sha2`, `ecdhe-rsa-aes-cbc-sha2`, `ecdhe-rsa-aes-gcm-sha2`, `rsa-aes-cbc-sha2`, `rsa-aes-gcm-sha2`
     * 
     */
    @Import(name="ciphersuiteLists")
    private @Nullable Output<List<String>> ciphersuiteLists;

    /**
     * @return Syslog secure server ciphersuites. Possible values: `aes-128-cbc-sha`, `aes-256-cbc-sha`, `dhe-aes-cbc-sha2`, `dhe-aes-gcm-sha2`, `ecdhe-ecdsa-aes-gcm-sha2`, `ecdhe-rsa-aes-cbc-sha2`, `ecdhe-rsa-aes-gcm-sha2`, `rsa-aes-cbc-sha2`, `rsa-aes-gcm-sha2`
     * 
     */
    public Optional<Output<List<String>>> ciphersuiteLists() {
        return Optional.ofNullable(this.ciphersuiteLists);
    }

    /**
     * Specify the name of the TLS profile
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specify the name of the TLS profile
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="nameVariable")
    private @Nullable Output<String> nameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> nameVariable() {
        return Optional.ofNullable(this.nameVariable);
    }

    /**
     * Indicates if list item is considered optional.
     * 
     */
    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    /**
     * TLS Version
     *   - Choices: `TLSv1.1`, `TLSv1.2`
     *   - Default value: `TLSv1.1`
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return TLS Version
     *   - Choices: `TLSv1.1`, `TLSv1.2`
     *   - Default value: `TLSv1.1`
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="versionVariable")
    private @Nullable Output<String> versionVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> versionVariable() {
        return Optional.ofNullable(this.versionVariable);
    }

    private CiscoLoggingFeatureTemplateTlsProfileArgs() {}

    private CiscoLoggingFeatureTemplateTlsProfileArgs(CiscoLoggingFeatureTemplateTlsProfileArgs $) {
        this.authenticationType = $.authenticationType;
        this.ciphersuiteListVariable = $.ciphersuiteListVariable;
        this.ciphersuiteLists = $.ciphersuiteLists;
        this.name = $.name;
        this.nameVariable = $.nameVariable;
        this.optional = $.optional;
        this.version = $.version;
        this.versionVariable = $.versionVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CiscoLoggingFeatureTemplateTlsProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CiscoLoggingFeatureTemplateTlsProfileArgs $;

        public Builder() {
            $ = new CiscoLoggingFeatureTemplateTlsProfileArgs();
        }

        public Builder(CiscoLoggingFeatureTemplateTlsProfileArgs defaults) {
            $ = new CiscoLoggingFeatureTemplateTlsProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationType Authentication Type
         *   - Choices: `Server`, `Mutual`
         * 
         * @return builder
         * 
         */
        public Builder authenticationType(@Nullable Output<String> authenticationType) {
            $.authenticationType = authenticationType;
            return this;
        }

        /**
         * @param authenticationType Authentication Type
         *   - Choices: `Server`, `Mutual`
         * 
         * @return builder
         * 
         */
        public Builder authenticationType(String authenticationType) {
            return authenticationType(Output.of(authenticationType));
        }

        /**
         * @param ciphersuiteListVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ciphersuiteListVariable(@Nullable Output<String> ciphersuiteListVariable) {
            $.ciphersuiteListVariable = ciphersuiteListVariable;
            return this;
        }

        /**
         * @param ciphersuiteListVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ciphersuiteListVariable(String ciphersuiteListVariable) {
            return ciphersuiteListVariable(Output.of(ciphersuiteListVariable));
        }

        /**
         * @param ciphersuiteLists Syslog secure server ciphersuites. Possible values: `aes-128-cbc-sha`, `aes-256-cbc-sha`, `dhe-aes-cbc-sha2`, `dhe-aes-gcm-sha2`, `ecdhe-ecdsa-aes-gcm-sha2`, `ecdhe-rsa-aes-cbc-sha2`, `ecdhe-rsa-aes-gcm-sha2`, `rsa-aes-cbc-sha2`, `rsa-aes-gcm-sha2`
         * 
         * @return builder
         * 
         */
        public Builder ciphersuiteLists(@Nullable Output<List<String>> ciphersuiteLists) {
            $.ciphersuiteLists = ciphersuiteLists;
            return this;
        }

        /**
         * @param ciphersuiteLists Syslog secure server ciphersuites. Possible values: `aes-128-cbc-sha`, `aes-256-cbc-sha`, `dhe-aes-cbc-sha2`, `dhe-aes-gcm-sha2`, `ecdhe-ecdsa-aes-gcm-sha2`, `ecdhe-rsa-aes-cbc-sha2`, `ecdhe-rsa-aes-gcm-sha2`, `rsa-aes-cbc-sha2`, `rsa-aes-gcm-sha2`
         * 
         * @return builder
         * 
         */
        public Builder ciphersuiteLists(List<String> ciphersuiteLists) {
            return ciphersuiteLists(Output.of(ciphersuiteLists));
        }

        /**
         * @param ciphersuiteLists Syslog secure server ciphersuites. Possible values: `aes-128-cbc-sha`, `aes-256-cbc-sha`, `dhe-aes-cbc-sha2`, `dhe-aes-gcm-sha2`, `ecdhe-ecdsa-aes-gcm-sha2`, `ecdhe-rsa-aes-cbc-sha2`, `ecdhe-rsa-aes-gcm-sha2`, `rsa-aes-cbc-sha2`, `rsa-aes-gcm-sha2`
         * 
         * @return builder
         * 
         */
        public Builder ciphersuiteLists(String... ciphersuiteLists) {
            return ciphersuiteLists(List.of(ciphersuiteLists));
        }

        /**
         * @param name Specify the name of the TLS profile
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specify the name of the TLS profile
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nameVariable(@Nullable Output<String> nameVariable) {
            $.nameVariable = nameVariable;
            return this;
        }

        /**
         * @param nameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nameVariable(String nameVariable) {
            return nameVariable(Output.of(nameVariable));
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        /**
         * @param version TLS Version
         *   - Choices: `TLSv1.1`, `TLSv1.2`
         *   - Default value: `TLSv1.1`
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version TLS Version
         *   - Choices: `TLSv1.1`, `TLSv1.2`
         *   - Default value: `TLSv1.1`
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        /**
         * @param versionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder versionVariable(@Nullable Output<String> versionVariable) {
            $.versionVariable = versionVariable;
            return this;
        }

        /**
         * @param versionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder versionVariable(String versionVariable) {
            return versionVariable(Output.of(versionVariable));
        }

        public CiscoLoggingFeatureTemplateTlsProfileArgs build() {
            return $;
        }
    }

}
