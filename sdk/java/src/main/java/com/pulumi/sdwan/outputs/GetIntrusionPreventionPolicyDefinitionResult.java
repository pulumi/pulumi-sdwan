// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetIntrusionPreventionPolicyDefinitionResult {
    /**
     * @return The description of the policy definition
     * 
     */
    private String description;
    /**
     * @return The id of the object
     * 
     */
    private String id;
    /**
     * @return The inspection mode
     * 
     */
    private String inspectionMode;
    /**
     * @return IPS signature list ID
     * 
     */
    private String ipsSignatureListId;
    /**
     * @return IPS signature list version
     * 
     */
    private Integer ipsSignatureListVersion;
    /**
     * @return Log level
     * 
     */
    private String logLevel;
    /**
     * @return The policy mode
     * 
     */
    private String mode;
    /**
     * @return The name of the policy definition
     * 
     */
    private String name;
    /**
     * @return Signature set
     * 
     */
    private String signatureSet;
    /**
     * @return List of VPN IDs
     * 
     */
    private List<String> targetVpns;
    /**
     * @return The version of the object
     * 
     */
    private Integer version;

    private GetIntrusionPreventionPolicyDefinitionResult() {}
    /**
     * @return The description of the policy definition
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The id of the object
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The inspection mode
     * 
     */
    public String inspectionMode() {
        return this.inspectionMode;
    }
    /**
     * @return IPS signature list ID
     * 
     */
    public String ipsSignatureListId() {
        return this.ipsSignatureListId;
    }
    /**
     * @return IPS signature list version
     * 
     */
    public Integer ipsSignatureListVersion() {
        return this.ipsSignatureListVersion;
    }
    /**
     * @return Log level
     * 
     */
    public String logLevel() {
        return this.logLevel;
    }
    /**
     * @return The policy mode
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return The name of the policy definition
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Signature set
     * 
     */
    public String signatureSet() {
        return this.signatureSet;
    }
    /**
     * @return List of VPN IDs
     * 
     */
    public List<String> targetVpns() {
        return this.targetVpns;
    }
    /**
     * @return The version of the object
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIntrusionPreventionPolicyDefinitionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String id;
        private String inspectionMode;
        private String ipsSignatureListId;
        private Integer ipsSignatureListVersion;
        private String logLevel;
        private String mode;
        private String name;
        private String signatureSet;
        private List<String> targetVpns;
        private Integer version;
        public Builder() {}
        public Builder(GetIntrusionPreventionPolicyDefinitionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.inspectionMode = defaults.inspectionMode;
    	      this.ipsSignatureListId = defaults.ipsSignatureListId;
    	      this.ipsSignatureListVersion = defaults.ipsSignatureListVersion;
    	      this.logLevel = defaults.logLevel;
    	      this.mode = defaults.mode;
    	      this.name = defaults.name;
    	      this.signatureSet = defaults.signatureSet;
    	      this.targetVpns = defaults.targetVpns;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetIntrusionPreventionPolicyDefinitionResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIntrusionPreventionPolicyDefinitionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inspectionMode(String inspectionMode) {
            if (inspectionMode == null) {
              throw new MissingRequiredPropertyException("GetIntrusionPreventionPolicyDefinitionResult", "inspectionMode");
            }
            this.inspectionMode = inspectionMode;
            return this;
        }
        @CustomType.Setter
        public Builder ipsSignatureListId(String ipsSignatureListId) {
            if (ipsSignatureListId == null) {
              throw new MissingRequiredPropertyException("GetIntrusionPreventionPolicyDefinitionResult", "ipsSignatureListId");
            }
            this.ipsSignatureListId = ipsSignatureListId;
            return this;
        }
        @CustomType.Setter
        public Builder ipsSignatureListVersion(Integer ipsSignatureListVersion) {
            if (ipsSignatureListVersion == null) {
              throw new MissingRequiredPropertyException("GetIntrusionPreventionPolicyDefinitionResult", "ipsSignatureListVersion");
            }
            this.ipsSignatureListVersion = ipsSignatureListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder logLevel(String logLevel) {
            if (logLevel == null) {
              throw new MissingRequiredPropertyException("GetIntrusionPreventionPolicyDefinitionResult", "logLevel");
            }
            this.logLevel = logLevel;
            return this;
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("GetIntrusionPreventionPolicyDefinitionResult", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetIntrusionPreventionPolicyDefinitionResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder signatureSet(String signatureSet) {
            if (signatureSet == null) {
              throw new MissingRequiredPropertyException("GetIntrusionPreventionPolicyDefinitionResult", "signatureSet");
            }
            this.signatureSet = signatureSet;
            return this;
        }
        @CustomType.Setter
        public Builder targetVpns(List<String> targetVpns) {
            if (targetVpns == null) {
              throw new MissingRequiredPropertyException("GetIntrusionPreventionPolicyDefinitionResult", "targetVpns");
            }
            this.targetVpns = targetVpns;
            return this;
        }
        public Builder targetVpns(String... targetVpns) {
            return targetVpns(List.of(targetVpns));
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetIntrusionPreventionPolicyDefinitionResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetIntrusionPreventionPolicyDefinitionResult build() {
            final var _resultValue = new GetIntrusionPreventionPolicyDefinitionResult();
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.inspectionMode = inspectionMode;
            _resultValue.ipsSignatureListId = ipsSignatureListId;
            _resultValue.ipsSignatureListVersion = ipsSignatureListVersion;
            _resultValue.logLevel = logLevel;
            _resultValue.mode = mode;
            _resultValue.name = name;
            _resultValue.signatureSet = signatureSet;
            _resultValue.targetVpns = targetVpns;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
