// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.TransportWanVpnInterfaceCellularFeatureArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.TransportWanVpnInterfaceCellularFeatureState;
import com.pulumi.sdwan.outputs.TransportWanVpnInterfaceCellularFeatureArp;
import com.pulumi.sdwan.outputs.TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulation;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Transport WAN VPN Interface Cellular Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Expected import identifier with the format: &#34;transport_wan_vpn_interface_cellular_feature_id,feature_profile_id,transport_wan_vpn_feature_id&#34;
 * 
 * ```sh
 * $ pulumi import sdwan:index/transportWanVpnInterfaceCellularFeature:TransportWanVpnInterfaceCellularFeature example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/transportWanVpnInterfaceCellularFeature:TransportWanVpnInterfaceCellularFeature")
public class TransportWanVpnInterfaceCellularFeature extends com.pulumi.resources.CustomResource {
    @Export(name="aclIpv4EgressFeatureId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> aclIpv4EgressFeatureId;

    public Output<Optional<String>> aclIpv4EgressFeatureId() {
        return Codegen.optional(this.aclIpv4EgressFeatureId);
    }
    @Export(name="aclIpv4IngressFeatureId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> aclIpv4IngressFeatureId;

    public Output<Optional<String>> aclIpv4IngressFeatureId() {
        return Codegen.optional(this.aclIpv4IngressFeatureId);
    }
    @Export(name="aclIpv6EgressFeatureId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> aclIpv6EgressFeatureId;

    public Output<Optional<String>> aclIpv6EgressFeatureId() {
        return Codegen.optional(this.aclIpv6EgressFeatureId);
    }
    @Export(name="aclIpv6IngressFeatureId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> aclIpv6IngressFeatureId;

    public Output<Optional<String>> aclIpv6IngressFeatureId() {
        return Codegen.optional(this.aclIpv6IngressFeatureId);
    }
    /**
     * Configure ARP entries
     * 
     */
    @Export(name="arps", refs={List.class,TransportWanVpnInterfaceCellularFeatureArp.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TransportWanVpnInterfaceCellularFeatureArp>> arps;

    /**
     * @return Configure ARP entries
     * 
     */
    public Output<Optional<List<TransportWanVpnInterfaceCellularFeatureArp>>> arps() {
        return Codegen.optional(this.arps);
    }
    /**
     * Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     * 
     */
    @Export(name="bandwidthDownstream", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> bandwidthDownstream;

    /**
     * @return Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     * 
     */
    public Output<Optional<Integer>> bandwidthDownstream() {
        return Codegen.optional(this.bandwidthDownstream);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="bandwidthDownstreamVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> bandwidthDownstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> bandwidthDownstreamVariable() {
        return Codegen.optional(this.bandwidthDownstreamVariable);
    }
    /**
     * Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     * 
     */
    @Export(name="bandwidthUpstream", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> bandwidthUpstream;

    /**
     * @return Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     * 
     */
    public Output<Optional<Integer>> bandwidthUpstream() {
        return Codegen.optional(this.bandwidthUpstream);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="bandwidthUpstreamVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> bandwidthUpstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> bandwidthUpstreamVariable() {
        return Codegen.optional(this.bandwidthUpstreamVariable);
    }
    /**
     * The description of the Feature
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Feature Profile ID
     * 
     */
    @Export(name="featureProfileId", refs={String.class}, tree="[0]")
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }
    @Export(name="interfaceDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceDescription;

    public Output<Optional<String>> interfaceDescription() {
        return Codegen.optional(this.interfaceDescription);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="interfaceDescriptionVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceDescriptionVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> interfaceDescriptionVariable() {
        return Codegen.optional(this.interfaceDescriptionVariable);
    }
    /**
     * Interface MTU GigabitEthernet0 &lt;1500..1518&gt;, Other GigabitEthernet &lt;1500..9216&gt; in bytes - Range: `1500`-`9216` -
     * Default value: `1500`
     * 
     */
    @Export(name="interfaceMtu", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> interfaceMtu;

    /**
     * @return Interface MTU GigabitEthernet0 &lt;1500..1518&gt;, Other GigabitEthernet &lt;1500..9216&gt; in bytes - Range: `1500`-`9216` -
     * Default value: `1500`
     * 
     */
    public Output<Optional<Integer>> interfaceMtu() {
        return Codegen.optional(this.interfaceMtu);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="interfaceMtuVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> interfaceMtuVariable() {
        return Codegen.optional(this.interfaceMtuVariable);
    }
    @Export(name="interfaceName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceName;

    public Output<Optional<String>> interfaceName() {
        return Codegen.optional(this.interfaceName);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="interfaceNameVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> interfaceNameVariable() {
        return Codegen.optional(this.interfaceNameVariable);
    }
    /**
     * IP Directed-Broadcast - Default value: `false`
     * 
     */
    @Export(name="ipDirectedBroadcast", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipDirectedBroadcast;

    /**
     * @return IP Directed-Broadcast - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> ipDirectedBroadcast() {
        return Codegen.optional(this.ipDirectedBroadcast);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipDirectedBroadcastVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipDirectedBroadcastVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipDirectedBroadcastVariable() {
        return Codegen.optional(this.ipDirectedBroadcastVariable);
    }
    /**
     * IP MTU for GigabitEthernet main &lt;576..Interface MTU&gt;, GigabitEthernet subinterface &lt;576..9216&gt;, Other Interfaces
     * &lt;576..2000&gt; in bytes - Range: `576`-`9216` - Default value: `1500`
     * 
     */
    @Export(name="ipMtu", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipMtu;

    /**
     * @return IP MTU for GigabitEthernet main &lt;576..Interface MTU&gt;, GigabitEthernet subinterface &lt;576..9216&gt;, Other Interfaces
     * &lt;576..2000&gt; in bytes - Range: `576`-`9216` - Default value: `1500`
     * 
     */
    public Output<Optional<Integer>> ipMtu() {
        return Codegen.optional(this.ipMtu);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipMtuVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipMtuVariable() {
        return Codegen.optional(this.ipMtuVariable);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4DhcpHelperVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4DhcpHelperVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4DhcpHelperVariable() {
        return Codegen.optional(this.ipv4DhcpHelperVariable);
    }
    /**
     * List of DHCP IPv4 helper addresses (min 1, max 8)
     * 
     */
    @Export(name="ipv4DhcpHelpers", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> ipv4DhcpHelpers;

    /**
     * @return List of DHCP IPv4 helper addresses (min 1, max 8)
     * 
     */
    public Output<Optional<List<String>>> ipv4DhcpHelpers() {
        return Codegen.optional(this.ipv4DhcpHelpers);
    }
    /**
     * The name of the Feature
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Network Address Translation on this interface - Default value: `false`
     * 
     */
    @Export(name="natIpv4", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> natIpv4;

    /**
     * @return Network Address Translation on this interface - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> natIpv4() {
        return Codegen.optional(this.natIpv4);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="natIpv4Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> natIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> natIpv4Variable() {
        return Codegen.optional(this.natIpv4Variable);
    }
    /**
     * Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
     * 
     */
    @Export(name="natTcpTimeout", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> natTcpTimeout;

    /**
     * @return Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
     * 
     */
    public Output<Optional<Integer>> natTcpTimeout() {
        return Codegen.optional(this.natTcpTimeout);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="natTcpTimeoutVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> natTcpTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> natTcpTimeoutVariable() {
        return Codegen.optional(this.natTcpTimeoutVariable);
    }
    /**
     * Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
     * 
     */
    @Export(name="natUdpTimeout", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> natUdpTimeout;

    /**
     * @return Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
     * 
     */
    public Output<Optional<Integer>> natUdpTimeout() {
        return Codegen.optional(this.natUdpTimeout);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="natUdpTimeoutVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> natUdpTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> natUdpTimeoutVariable() {
        return Codegen.optional(this.natUdpTimeoutVariable);
    }
    /**
     * Per-tunnel Qos - Default value: `false`
     * 
     */
    @Export(name="perTunnelQos", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> perTunnelQos;

    /**
     * @return Per-tunnel Qos - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> perTunnelQos() {
        return Codegen.optional(this.perTunnelQos);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="perTunnelQosVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> perTunnelQosVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> perTunnelQosVariable() {
        return Codegen.optional(this.perTunnelQosVariable);
    }
    /**
     * Adaptive QoS - Default value: `false`
     * 
     */
    @Export(name="qosAdaptive", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> qosAdaptive;

    /**
     * @return Adaptive QoS - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> qosAdaptive() {
        return Codegen.optional(this.qosAdaptive);
    }
    /**
     * Shaping Rate Downstream - Default value: `false`
     * 
     */
    @Export(name="qosAdaptiveBandwidthDownstream", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> qosAdaptiveBandwidthDownstream;

    /**
     * @return Shaping Rate Downstream - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> qosAdaptiveBandwidthDownstream() {
        return Codegen.optional(this.qosAdaptiveBandwidthDownstream);
    }
    /**
     * Shaping Rate Upstream - Default value: `false`
     * 
     */
    @Export(name="qosAdaptiveBandwidthUpstream", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> qosAdaptiveBandwidthUpstream;

    /**
     * @return Shaping Rate Upstream - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> qosAdaptiveBandwidthUpstream() {
        return Codegen.optional(this.qosAdaptiveBandwidthUpstream);
    }
    /**
     * Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
     * 
     */
    @Export(name="qosAdaptiveDefaultDownstream", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> qosAdaptiveDefaultDownstream;

    /**
     * @return Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
     * 
     */
    public Output<Optional<Integer>> qosAdaptiveDefaultDownstream() {
        return Codegen.optional(this.qosAdaptiveDefaultDownstream);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="qosAdaptiveDefaultDownstreamVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> qosAdaptiveDefaultDownstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> qosAdaptiveDefaultDownstreamVariable() {
        return Codegen.optional(this.qosAdaptiveDefaultDownstreamVariable);
    }
    /**
     * Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
     * 
     */
    @Export(name="qosAdaptiveDefaultUpstream", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> qosAdaptiveDefaultUpstream;

    /**
     * @return Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
     * 
     */
    public Output<Optional<Integer>> qosAdaptiveDefaultUpstream() {
        return Codegen.optional(this.qosAdaptiveDefaultUpstream);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="qosAdaptiveDefaultUpstreamVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> qosAdaptiveDefaultUpstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> qosAdaptiveDefaultUpstreamVariable() {
        return Codegen.optional(this.qosAdaptiveDefaultUpstreamVariable);
    }
    /**
     * Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
     * 
     */
    @Export(name="qosAdaptiveMaxDownstream", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> qosAdaptiveMaxDownstream;

    /**
     * @return Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
     * 
     */
    public Output<Optional<Integer>> qosAdaptiveMaxDownstream() {
        return Codegen.optional(this.qosAdaptiveMaxDownstream);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="qosAdaptiveMaxDownstreamVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> qosAdaptiveMaxDownstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> qosAdaptiveMaxDownstreamVariable() {
        return Codegen.optional(this.qosAdaptiveMaxDownstreamVariable);
    }
    /**
     * Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
     * 
     */
    @Export(name="qosAdaptiveMaxUpstream", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> qosAdaptiveMaxUpstream;

    /**
     * @return Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
     * 
     */
    public Output<Optional<Integer>> qosAdaptiveMaxUpstream() {
        return Codegen.optional(this.qosAdaptiveMaxUpstream);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="qosAdaptiveMaxUpstreamVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> qosAdaptiveMaxUpstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> qosAdaptiveMaxUpstreamVariable() {
        return Codegen.optional(this.qosAdaptiveMaxUpstreamVariable);
    }
    /**
     * Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
     * 
     */
    @Export(name="qosAdaptiveMinDownstream", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> qosAdaptiveMinDownstream;

    /**
     * @return Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
     * 
     */
    public Output<Optional<Integer>> qosAdaptiveMinDownstream() {
        return Codegen.optional(this.qosAdaptiveMinDownstream);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="qosAdaptiveMinDownstreamVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> qosAdaptiveMinDownstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> qosAdaptiveMinDownstreamVariable() {
        return Codegen.optional(this.qosAdaptiveMinDownstreamVariable);
    }
    /**
     * Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
     * 
     */
    @Export(name="qosAdaptiveMinUpstream", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> qosAdaptiveMinUpstream;

    /**
     * @return Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
     * 
     */
    public Output<Optional<Integer>> qosAdaptiveMinUpstream() {
        return Codegen.optional(this.qosAdaptiveMinUpstream);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="qosAdaptiveMinUpstreamVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> qosAdaptiveMinUpstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> qosAdaptiveMinUpstreamVariable() {
        return Codegen.optional(this.qosAdaptiveMinUpstreamVariable);
    }
    /**
     * Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
     * 
     */
    @Export(name="qosAdaptivePeriod", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> qosAdaptivePeriod;

    /**
     * @return Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
     * 
     */
    public Output<Optional<Integer>> qosAdaptivePeriod() {
        return Codegen.optional(this.qosAdaptivePeriod);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="qosAdaptivePeriodVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> qosAdaptivePeriodVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> qosAdaptivePeriodVariable() {
        return Codegen.optional(this.qosAdaptivePeriodVariable);
    }
    /**
     * Shaping Rate (Kbps) - Range: `8`-`100000000`
     * 
     */
    @Export(name="qosShapingRate", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> qosShapingRate;

    /**
     * @return Shaping Rate (Kbps) - Range: `8`-`100000000`
     * 
     */
    public Output<Optional<Integer>> qosShapingRate() {
        return Codegen.optional(this.qosShapingRate);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="qosShapingRateVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> qosShapingRateVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> qosShapingRateVariable() {
        return Codegen.optional(this.qosShapingRateVariable);
    }
    /**
     * Service Provider Name
     * 
     */
    @Export(name="serviceProvider", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> serviceProvider;

    /**
     * @return Service Provider Name
     * 
     */
    public Output<Optional<String>> serviceProvider() {
        return Codegen.optional(this.serviceProvider);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="serviceProviderVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> serviceProviderVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> serviceProviderVariable() {
        return Codegen.optional(this.serviceProviderVariable);
    }
    /**
     * - Default value: `true`
     * 
     */
    @Export(name="shutdown", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> shutdown;

    /**
     * @return - Default value: `true`
     * 
     */
    public Output<Optional<Boolean>> shutdown() {
        return Codegen.optional(this.shutdown);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="shutdownVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> shutdownVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> shutdownVariable() {
        return Codegen.optional(this.shutdownVariable);
    }
    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     * 
     */
    @Export(name="tcpMss", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tcpMss;

    /**
     * @return TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     * 
     */
    public Output<Optional<Integer>> tcpMss() {
        return Codegen.optional(this.tcpMss);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tcpMssVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tcpMssVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tcpMssVariable() {
        return Codegen.optional(this.tcpMssVariable);
    }
    /**
     * Extends a local TLOC to a remote node only for vpn 0
     * 
     */
    @Export(name="tlocExtension", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tlocExtension;

    /**
     * @return Extends a local TLOC to a remote node only for vpn 0
     * 
     */
    public Output<Optional<String>> tlocExtension() {
        return Codegen.optional(this.tlocExtension);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tlocExtensionVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tlocExtensionVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tlocExtensionVariable() {
        return Codegen.optional(this.tlocExtensionVariable);
    }
    /**
     * Enable tracker for this interface
     * 
     */
    @Export(name="tracker", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tracker;

    /**
     * @return Enable tracker for this interface
     * 
     */
    public Output<Optional<String>> tracker() {
        return Codegen.optional(this.tracker);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="trackerVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> trackerVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> trackerVariable() {
        return Codegen.optional(this.trackerVariable);
    }
    /**
     * Transport WAN VPN Feature ID
     * 
     */
    @Export(name="transportWanVpnFeatureId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> transportWanVpnFeatureId;

    /**
     * @return Transport WAN VPN Feature ID
     * 
     */
    public Output<Optional<String>> transportWanVpnFeatureId() {
        return Codegen.optional(this.transportWanVpnFeatureId);
    }
    /**
     * Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
     * 
     */
    @Export(name="tunnelBandwidthPercent", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tunnelBandwidthPercent;

    /**
     * @return Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
     * 
     */
    public Output<Optional<Integer>> tunnelBandwidthPercent() {
        return Codegen.optional(this.tunnelBandwidthPercent);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelBandwidthPercentVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelBandwidthPercentVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelBandwidthPercentVariable() {
        return Codegen.optional(this.tunnelBandwidthPercentVariable);
    }
    /**
     * Tunnel Interface on/off - Default value: `false`
     * 
     */
    @Export(name="tunnelInterface", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterface;

    /**
     * @return Tunnel Interface on/off - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterface() {
        return Codegen.optional(this.tunnelInterface);
    }
    /**
     * Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
     * 
     */
    @Export(name="tunnelInterfaceAllowAll", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceAllowAll;

    /**
     * @return Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceAllowAll() {
        return Codegen.optional(this.tunnelInterfaceAllowAll);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceAllowAllVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceAllowAllVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceAllowAllVariable() {
        return Codegen.optional(this.tunnelInterfaceAllowAllVariable);
    }
    /**
     * Allow/Deny BFD - Default value: `false`
     * 
     */
    @Export(name="tunnelInterfaceAllowBfd", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceAllowBfd;

    /**
     * @return Allow/Deny BFD - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceAllowBfd() {
        return Codegen.optional(this.tunnelInterfaceAllowBfd);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceAllowBfdVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceAllowBfdVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceAllowBfdVariable() {
        return Codegen.optional(this.tunnelInterfaceAllowBfdVariable);
    }
    /**
     * Allow/deny BGP - Default value: `false`
     * 
     */
    @Export(name="tunnelInterfaceAllowBgp", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceAllowBgp;

    /**
     * @return Allow/deny BGP - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceAllowBgp() {
        return Codegen.optional(this.tunnelInterfaceAllowBgp);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceAllowBgpVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceAllowBgpVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceAllowBgpVariable() {
        return Codegen.optional(this.tunnelInterfaceAllowBgpVariable);
    }
    /**
     * Allow/Deny DHCP - Default value: `true`
     * 
     */
    @Export(name="tunnelInterfaceAllowDhcp", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceAllowDhcp;

    /**
     * @return Allow/Deny DHCP - Default value: `true`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceAllowDhcp() {
        return Codegen.optional(this.tunnelInterfaceAllowDhcp);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceAllowDhcpVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceAllowDhcpVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceAllowDhcpVariable() {
        return Codegen.optional(this.tunnelInterfaceAllowDhcpVariable);
    }
    /**
     * Allow/Deny DNS - Default value: `true`
     * 
     */
    @Export(name="tunnelInterfaceAllowDns", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceAllowDns;

    /**
     * @return Allow/Deny DNS - Default value: `true`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceAllowDns() {
        return Codegen.optional(this.tunnelInterfaceAllowDns);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceAllowDnsVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceAllowDnsVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceAllowDnsVariable() {
        return Codegen.optional(this.tunnelInterfaceAllowDnsVariable);
    }
    /**
     * Allow/Deny HTTPS - Default value: `true`
     * 
     */
    @Export(name="tunnelInterfaceAllowHttps", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceAllowHttps;

    /**
     * @return Allow/Deny HTTPS - Default value: `true`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceAllowHttps() {
        return Codegen.optional(this.tunnelInterfaceAllowHttps);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceAllowHttpsVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceAllowHttpsVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceAllowHttpsVariable() {
        return Codegen.optional(this.tunnelInterfaceAllowHttpsVariable);
    }
    /**
     * Allow/Deny ICMP - Default value: `true`
     * 
     */
    @Export(name="tunnelInterfaceAllowIcmp", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceAllowIcmp;

    /**
     * @return Allow/Deny ICMP - Default value: `true`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceAllowIcmp() {
        return Codegen.optional(this.tunnelInterfaceAllowIcmp);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceAllowIcmpVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceAllowIcmpVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceAllowIcmpVariable() {
        return Codegen.optional(this.tunnelInterfaceAllowIcmpVariable);
    }
    /**
     * Allow/Deny NETCONF - Default value: `false`
     * 
     */
    @Export(name="tunnelInterfaceAllowNetconf", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceAllowNetconf;

    /**
     * @return Allow/Deny NETCONF - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceAllowNetconf() {
        return Codegen.optional(this.tunnelInterfaceAllowNetconf);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceAllowNetconfVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceAllowNetconfVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceAllowNetconfVariable() {
        return Codegen.optional(this.tunnelInterfaceAllowNetconfVariable);
    }
    /**
     * Allow/Deny NTP - Default value: `true`
     * 
     */
    @Export(name="tunnelInterfaceAllowNtp", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceAllowNtp;

    /**
     * @return Allow/Deny NTP - Default value: `true`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceAllowNtp() {
        return Codegen.optional(this.tunnelInterfaceAllowNtp);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceAllowNtpVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceAllowNtpVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceAllowNtpVariable() {
        return Codegen.optional(this.tunnelInterfaceAllowNtpVariable);
    }
    /**
     * Allow/Deny OSPF - Default value: `false`
     * 
     */
    @Export(name="tunnelInterfaceAllowOspf", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceAllowOspf;

    /**
     * @return Allow/Deny OSPF - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceAllowOspf() {
        return Codegen.optional(this.tunnelInterfaceAllowOspf);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceAllowOspfVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceAllowOspfVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceAllowOspfVariable() {
        return Codegen.optional(this.tunnelInterfaceAllowOspfVariable);
    }
    /**
     * Allow/Deny SNMP - Default value: `false`
     * 
     */
    @Export(name="tunnelInterfaceAllowSnmp", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceAllowSnmp;

    /**
     * @return Allow/Deny SNMP - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceAllowSnmp() {
        return Codegen.optional(this.tunnelInterfaceAllowSnmp);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceAllowSnmpVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceAllowSnmpVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceAllowSnmpVariable() {
        return Codegen.optional(this.tunnelInterfaceAllowSnmpVariable);
    }
    /**
     * Allow/Deny SSH - Default value: `true`
     * 
     */
    @Export(name="tunnelInterfaceAllowSsh", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceAllowSsh;

    /**
     * @return Allow/Deny SSH - Default value: `true`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceAllowSsh() {
        return Codegen.optional(this.tunnelInterfaceAllowSsh);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceAllowSshVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceAllowSshVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceAllowSshVariable() {
        return Codegen.optional(this.tunnelInterfaceAllowSshVariable);
    }
    /**
     * Allow/Deny STUN - Default value: `false`
     * 
     */
    @Export(name="tunnelInterfaceAllowStun", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceAllowStun;

    /**
     * @return Allow/Deny STUN - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceAllowStun() {
        return Codegen.optional(this.tunnelInterfaceAllowStun);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceAllowStunVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceAllowStunVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceAllowStunVariable() {
        return Codegen.optional(this.tunnelInterfaceAllowStunVariable);
    }
    /**
     * Bind loopback tunnel interface to a physical interface
     * 
     */
    @Export(name="tunnelInterfaceBindLoopbackTunnel", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceBindLoopbackTunnel;

    /**
     * @return Bind loopback tunnel interface to a physical interface
     * 
     */
    public Output<Optional<String>> tunnelInterfaceBindLoopbackTunnel() {
        return Codegen.optional(this.tunnelInterfaceBindLoopbackTunnel);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceBindLoopbackTunnelVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceBindLoopbackTunnelVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceBindLoopbackTunnelVariable() {
        return Codegen.optional(this.tunnelInterfaceBindLoopbackTunnelVariable);
    }
    /**
     * Set TLOC as border TLOC - Default value: `false`
     * 
     */
    @Export(name="tunnelInterfaceBorder", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceBorder;

    /**
     * @return Set TLOC as border TLOC - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceBorder() {
        return Codegen.optional(this.tunnelInterfaceBorder);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceBorderVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceBorderVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceBorderVariable() {
        return Codegen.optional(this.tunnelInterfaceBorderVariable);
    }
    /**
     * Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
     * `carrier7`, `carrier8` - Default value: `default`
     * 
     */
    @Export(name="tunnelInterfaceCarrier", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceCarrier;

    /**
     * @return Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
     * `carrier7`, `carrier8` - Default value: `default`
     * 
     */
    public Output<Optional<String>> tunnelInterfaceCarrier() {
        return Codegen.optional(this.tunnelInterfaceCarrier);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceCarrierVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceCarrierVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceCarrierVariable() {
        return Codegen.optional(this.tunnelInterfaceCarrierVariable);
    }
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     * 
     */
    @Export(name="tunnelInterfaceClearDontFragment", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceClearDontFragment;

    /**
     * @return Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceClearDontFragment() {
        return Codegen.optional(this.tunnelInterfaceClearDontFragment);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceClearDontFragmentVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceClearDontFragmentVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceClearDontFragmentVariable() {
        return Codegen.optional(this.tunnelInterfaceClearDontFragmentVariable);
    }
    /**
     * Set color for TLOC - Choices: `default`, `mpls`, `metro ethernet`, `biz internet`, `public internet`, `lte`, `3g`,
     * `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
     * `private4`, `private5`, `private6` - Default value: `mpls`
     * 
     */
    @Export(name="tunnelInterfaceColor", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceColor;

    /**
     * @return Set color for TLOC - Choices: `default`, `mpls`, `metro ethernet`, `biz internet`, `public internet`, `lte`, `3g`,
     * `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
     * `private4`, `private5`, `private6` - Default value: `mpls`
     * 
     */
    public Output<Optional<String>> tunnelInterfaceColor() {
        return Codegen.optional(this.tunnelInterfaceColor);
    }
    /**
     * Restrict this TLOC behavior - Default value: `false`
     * 
     */
    @Export(name="tunnelInterfaceColorRestrict", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceColorRestrict;

    /**
     * @return Restrict this TLOC behavior - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceColorRestrict() {
        return Codegen.optional(this.tunnelInterfaceColorRestrict);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceColorRestrictVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceColorRestrictVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceColorRestrictVariable() {
        return Codegen.optional(this.tunnelInterfaceColorRestrictVariable);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceColorVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceColorVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceColorVariable() {
        return Codegen.optional(this.tunnelInterfaceColorVariable);
    }
    /**
     * Encapsulation for TLOC
     * 
     */
    @Export(name="tunnelInterfaceEncapsulations", refs={List.class,TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulation.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulation>> tunnelInterfaceEncapsulations;

    /**
     * @return Encapsulation for TLOC
     * 
     */
    public Output<Optional<List<TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulation>>> tunnelInterfaceEncapsulations() {
        return Codegen.optional(this.tunnelInterfaceEncapsulations);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceExcludeControllerGroupListVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceExcludeControllerGroupListVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceExcludeControllerGroupListVariable() {
        return Codegen.optional(this.tunnelInterfaceExcludeControllerGroupListVariable);
    }
    /**
     * Exclude the following controller groups defined in this list.
     * 
     */
    @Export(name="tunnelInterfaceExcludeControllerGroupLists", refs={List.class,Integer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<Integer>> tunnelInterfaceExcludeControllerGroupLists;

    /**
     * @return Exclude the following controller groups defined in this list.
     * 
     */
    public Output<Optional<List<Integer>>> tunnelInterfaceExcludeControllerGroupLists() {
        return Codegen.optional(this.tunnelInterfaceExcludeControllerGroupLists);
    }
    /**
     * List of groups - Range: `1`-`4294967295`
     * 
     */
    @Export(name="tunnelInterfaceGroups", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tunnelInterfaceGroups;

    /**
     * @return List of groups - Range: `1`-`4294967295`
     * 
     */
    public Output<Optional<Integer>> tunnelInterfaceGroups() {
        return Codegen.optional(this.tunnelInterfaceGroups);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceGroupsVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceGroupsVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceGroupsVariable() {
        return Codegen.optional(this.tunnelInterfaceGroupsVariable);
    }
    /**
     * Set time period of control hello packets &lt;100..600000&gt; milli seconds - Range: `100`-`600000` - Default value: `1000`
     * 
     */
    @Export(name="tunnelInterfaceHelloInterval", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tunnelInterfaceHelloInterval;

    /**
     * @return Set time period of control hello packets &lt;100..600000&gt; milli seconds - Range: `100`-`600000` - Default value: `1000`
     * 
     */
    public Output<Optional<Integer>> tunnelInterfaceHelloInterval() {
        return Codegen.optional(this.tunnelInterfaceHelloInterval);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceHelloIntervalVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceHelloIntervalVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceHelloIntervalVariable() {
        return Codegen.optional(this.tunnelInterfaceHelloIntervalVariable);
    }
    /**
     * Set tolerance of control hello packets &lt;12..6000&gt; seconds - Range: `12`-`6000` - Default value: `12`
     * 
     */
    @Export(name="tunnelInterfaceHelloTolerance", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tunnelInterfaceHelloTolerance;

    /**
     * @return Set tolerance of control hello packets &lt;12..6000&gt; seconds - Range: `12`-`6000` - Default value: `12`
     * 
     */
    public Output<Optional<Integer>> tunnelInterfaceHelloTolerance() {
        return Codegen.optional(this.tunnelInterfaceHelloTolerance);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceHelloToleranceVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceHelloToleranceVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceHelloToleranceVariable() {
        return Codegen.optional(this.tunnelInterfaceHelloToleranceVariable);
    }
    /**
     * Set TLOC as last resort - Default value: `false`
     * 
     */
    @Export(name="tunnelInterfaceLastResortCircuit", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceLastResortCircuit;

    /**
     * @return Set TLOC as last resort - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceLastResortCircuit() {
        return Codegen.optional(this.tunnelInterfaceLastResortCircuit);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceLastResortCircuitVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceLastResortCircuitVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceLastResortCircuitVariable() {
        return Codegen.optional(this.tunnelInterfaceLastResortCircuitVariable);
    }
    /**
     * Set the interface as a low-bandwidth circuit - Default value: `false`
     * 
     */
    @Export(name="tunnelInterfaceLowBandwidthLink", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceLowBandwidthLink;

    /**
     * @return Set the interface as a low-bandwidth circuit - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceLowBandwidthLink() {
        return Codegen.optional(this.tunnelInterfaceLowBandwidthLink);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceLowBandwidthLinkVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceLowBandwidthLinkVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceLowBandwidthLinkVariable() {
        return Codegen.optional(this.tunnelInterfaceLowBandwidthLinkVariable);
    }
    /**
     * Maximum Control Connections - Range: `0`-`100`
     * 
     */
    @Export(name="tunnelInterfaceMaxControlConnections", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tunnelInterfaceMaxControlConnections;

    /**
     * @return Maximum Control Connections - Range: `0`-`100`
     * 
     */
    public Output<Optional<Integer>> tunnelInterfaceMaxControlConnections() {
        return Codegen.optional(this.tunnelInterfaceMaxControlConnections);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceMaxControlConnectionsVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceMaxControlConnectionsVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceMaxControlConnectionsVariable() {
        return Codegen.optional(this.tunnelInterfaceMaxControlConnectionsVariable);
    }
    /**
     * Set time period of nat refresh packets &lt;1...60&gt; seconds - Range: `1`-`60` - Default value: `5`
     * 
     */
    @Export(name="tunnelInterfaceNatRefreshInterval", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tunnelInterfaceNatRefreshInterval;

    /**
     * @return Set time period of nat refresh packets &lt;1...60&gt; seconds - Range: `1`-`60` - Default value: `5`
     * 
     */
    public Output<Optional<Integer>> tunnelInterfaceNatRefreshInterval() {
        return Codegen.optional(this.tunnelInterfaceNatRefreshInterval);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceNatRefreshIntervalVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceNatRefreshIntervalVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceNatRefreshIntervalVariable() {
        return Codegen.optional(this.tunnelInterfaceNatRefreshIntervalVariable);
    }
    /**
     * Accept and respond to network-prefix-directed broadcasts - Default value: `false`
     * 
     */
    @Export(name="tunnelInterfaceNetworkBroadcast", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceNetworkBroadcast;

    /**
     * @return Accept and respond to network-prefix-directed broadcasts - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceNetworkBroadcast() {
        return Codegen.optional(this.tunnelInterfaceNetworkBroadcast);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceNetworkBroadcastVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceNetworkBroadcastVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceNetworkBroadcastVariable() {
        return Codegen.optional(this.tunnelInterfaceNetworkBroadcastVariable);
    }
    /**
     * Disallow port hopping on the tunnel interface - Default value: `true`
     * 
     */
    @Export(name="tunnelInterfacePortHop", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfacePortHop;

    /**
     * @return Disallow port hopping on the tunnel interface - Default value: `true`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfacePortHop() {
        return Codegen.optional(this.tunnelInterfacePortHop);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfacePortHopVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfacePortHopVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfacePortHopVariable() {
        return Codegen.optional(this.tunnelInterfacePortHopVariable);
    }
    /**
     * Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     * 
     */
    @Export(name="tunnelInterfaceTunnelTcpMss", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tunnelInterfaceTunnelTcpMss;

    /**
     * @return Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     * 
     */
    public Output<Optional<Integer>> tunnelInterfaceTunnelTcpMss() {
        return Codegen.optional(this.tunnelInterfaceTunnelTcpMss);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceTunnelTcpMssVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceTunnelTcpMssVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceTunnelTcpMssVariable() {
        return Codegen.optional(this.tunnelInterfaceTunnelTcpMssVariable);
    }
    /**
     * Put this wan interface in STUN mode only - Default value: `false`
     * 
     */
    @Export(name="tunnelInterfaceVbondAsStunServer", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunnelInterfaceVbondAsStunServer;

    /**
     * @return Put this wan interface in STUN mode only - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> tunnelInterfaceVbondAsStunServer() {
        return Codegen.optional(this.tunnelInterfaceVbondAsStunServer);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceVbondAsStunServerVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceVbondAsStunServerVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceVbondAsStunServerVariable() {
        return Codegen.optional(this.tunnelInterfaceVbondAsStunServerVariable);
    }
    /**
     * Set interface preference for control connection to vManage &lt;0..8&gt; - Range: `0`-`8` - Default value: `5`
     * 
     */
    @Export(name="tunnelInterfaceVmanageConnectionPreference", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tunnelInterfaceVmanageConnectionPreference;

    /**
     * @return Set interface preference for control connection to vManage &lt;0..8&gt; - Range: `0`-`8` - Default value: `5`
     * 
     */
    public Output<Optional<Integer>> tunnelInterfaceVmanageConnectionPreference() {
        return Codegen.optional(this.tunnelInterfaceVmanageConnectionPreference);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelInterfaceVmanageConnectionPreferenceVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelInterfaceVmanageConnectionPreferenceVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelInterfaceVmanageConnectionPreferenceVariable() {
        return Codegen.optional(this.tunnelInterfaceVmanageConnectionPreferenceVariable);
    }
    /**
     * Set tunnel QoS mode - Choices: `hub`, `spoke`
     * 
     */
    @Export(name="tunnelQosMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelQosMode;

    /**
     * @return Set tunnel QoS mode - Choices: `hub`, `spoke`
     * 
     */
    public Output<Optional<String>> tunnelQosMode() {
        return Codegen.optional(this.tunnelQosMode);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tunnelQosModeVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tunnelQosModeVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tunnelQosModeVariable() {
        return Codegen.optional(this.tunnelQosModeVariable);
    }
    /**
     * The version of the Feature
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the Feature
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TransportWanVpnInterfaceCellularFeature(java.lang.String name) {
        this(name, TransportWanVpnInterfaceCellularFeatureArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TransportWanVpnInterfaceCellularFeature(java.lang.String name, TransportWanVpnInterfaceCellularFeatureArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TransportWanVpnInterfaceCellularFeature(java.lang.String name, TransportWanVpnInterfaceCellularFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/transportWanVpnInterfaceCellularFeature:TransportWanVpnInterfaceCellularFeature", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private TransportWanVpnInterfaceCellularFeature(java.lang.String name, Output<java.lang.String> id, @Nullable TransportWanVpnInterfaceCellularFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/transportWanVpnInterfaceCellularFeature:TransportWanVpnInterfaceCellularFeature", name, state, makeResourceOptions(options, id), false);
    }

    private static TransportWanVpnInterfaceCellularFeatureArgs makeArgs(TransportWanVpnInterfaceCellularFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TransportWanVpnInterfaceCellularFeatureArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TransportWanVpnInterfaceCellularFeature get(java.lang.String name, Output<java.lang.String> id, @Nullable TransportWanVpnInterfaceCellularFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TransportWanVpnInterfaceCellularFeature(name, id, state, options);
    }
}
