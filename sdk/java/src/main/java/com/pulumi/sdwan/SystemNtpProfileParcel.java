// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.SystemNtpProfileParcelArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.SystemNtpProfileParcelState;
import com.pulumi.sdwan.outputs.SystemNtpProfileParcelAuthenticationKey;
import com.pulumi.sdwan.outputs.SystemNtpProfileParcelServer;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a System NTP profile parcel.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sdwan.SystemNtpProfileParcel;
 * import com.pulumi.sdwan.SystemNtpProfileParcelArgs;
 * import com.pulumi.sdwan.inputs.SystemNtpProfileParcelServerArgs;
 * import com.pulumi.sdwan.inputs.SystemNtpProfileParcelAuthenticationKeyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new SystemNtpProfileParcel("example", SystemNtpProfileParcelArgs.builder()        
 *             .name("Example")
 *             .description("My Example")
 *             .featureProfileId("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac")
 *             .servers(SystemNtpProfileParcelServerArgs.builder()
 *                 .hostname_ip_address("1.1.1.1")
 *                 .authentication_key(41673)
 *                 .vpn(1)
 *                 .ntp_version(4)
 *                 .source_interface("Ethernet")
 *                 .prefer_this_ntp_server(false)
 *                 .build())
 *             .authenticationKeys(SystemNtpProfileParcelAuthenticationKeyArgs.builder()
 *                 .key_id(49737)
 *                 .md5_value("$CRYPT_CLUSTER")
 *                 .build())
 *             .trustedKeys(49737)
 *             .authoritativeNtpServer(false)
 *             .stratum(1)
 *             .sourceInterface("ATM")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import sdwan:index/systemNtpProfileParcel:SystemNtpProfileParcel example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/systemNtpProfileParcel:SystemNtpProfileParcel")
public class SystemNtpProfileParcel extends com.pulumi.resources.CustomResource {
    /**
     * Set MD5 authentication key
     * 
     */
    @Export(name="authenticationKeys", refs={List.class,SystemNtpProfileParcelAuthenticationKey.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SystemNtpProfileParcelAuthenticationKey>> authenticationKeys;

    /**
     * @return Set MD5 authentication key
     * 
     */
    public Output<Optional<List<SystemNtpProfileParcelAuthenticationKey>>> authenticationKeys() {
        return Codegen.optional(this.authenticationKeys);
    }
    /**
     * Enable device as NTP Leader - Default value: `false`
     * 
     */
    @Export(name="authoritativeNtpServer", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> authoritativeNtpServer;

    /**
     * @return Enable device as NTP Leader - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> authoritativeNtpServer() {
        return Codegen.optional(this.authoritativeNtpServer);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="authoritativeNtpServerVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> authoritativeNtpServerVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> authoritativeNtpServerVariable() {
        return Codegen.optional(this.authoritativeNtpServerVariable);
    }
    /**
     * The description of the profile parcel
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the profile parcel
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Feature Profile ID
     * 
     */
    @Export(name="featureProfileId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<Optional<String>> featureProfileId() {
        return Codegen.optional(this.featureProfileId);
    }
    /**
     * The name of the profile parcel
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the profile parcel
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Configure NTP servers
     * 
     */
    @Export(name="servers", refs={List.class,SystemNtpProfileParcelServer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SystemNtpProfileParcelServer>> servers;

    /**
     * @return Configure NTP servers
     * 
     */
    public Output<Optional<List<SystemNtpProfileParcelServer>>> servers() {
        return Codegen.optional(this.servers);
    }
    /**
     * Enable device as NTP Leader
     * 
     */
    @Export(name="sourceInterface", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sourceInterface;

    /**
     * @return Enable device as NTP Leader
     * 
     */
    public Output<Optional<String>> sourceInterface() {
        return Codegen.optional(this.sourceInterface);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="sourceInterfaceVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sourceInterfaceVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> sourceInterfaceVariable() {
        return Codegen.optional(this.sourceInterfaceVariable);
    }
    /**
     * Enable device as NTP Leader - Range: `1`-`15`
     * 
     */
    @Export(name="stratum", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> stratum;

    /**
     * @return Enable device as NTP Leader - Range: `1`-`15`
     * 
     */
    public Output<Optional<Integer>> stratum() {
        return Codegen.optional(this.stratum);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="stratumVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> stratumVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> stratumVariable() {
        return Codegen.optional(this.stratumVariable);
    }
    /**
     * Designate authentication key as trustworthy
     * 
     */
    @Export(name="trustedKeys", refs={List.class,Integer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<Integer>> trustedKeys;

    /**
     * @return Designate authentication key as trustworthy
     * 
     */
    public Output<Optional<List<Integer>>> trustedKeys() {
        return Codegen.optional(this.trustedKeys);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="trustedKeysVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> trustedKeysVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> trustedKeysVariable() {
        return Codegen.optional(this.trustedKeysVariable);
    }
    /**
     * The version of the profile parcel
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the profile parcel
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SystemNtpProfileParcel(String name) {
        this(name, SystemNtpProfileParcelArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SystemNtpProfileParcel(String name, @Nullable SystemNtpProfileParcelArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SystemNtpProfileParcel(String name, @Nullable SystemNtpProfileParcelArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/systemNtpProfileParcel:SystemNtpProfileParcel", name, args == null ? SystemNtpProfileParcelArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SystemNtpProfileParcel(String name, Output<String> id, @Nullable SystemNtpProfileParcelState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/systemNtpProfileParcel:SystemNtpProfileParcel", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SystemNtpProfileParcel get(String name, Output<String> id, @Nullable SystemNtpProfileParcelState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SystemNtpProfileParcel(name, id, state, options);
    }
}
