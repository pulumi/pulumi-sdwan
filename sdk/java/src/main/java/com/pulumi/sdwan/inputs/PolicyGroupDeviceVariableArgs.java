// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyGroupDeviceVariableArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyGroupDeviceVariableArgs Empty = new PolicyGroupDeviceVariableArgs();

    /**
     * Use this instead of `value` in case value is of type `List`.
     * 
     */
    @Import(name="listValues")
    private @Nullable Output<List<String>> listValues;

    /**
     * @return Use this instead of `value` in case value is of type `List`.
     * 
     */
    public Optional<Output<List<String>>> listValues() {
        return Optional.ofNullable(this.listValues);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Variable name
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Variable value
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return Variable value
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private PolicyGroupDeviceVariableArgs() {}

    private PolicyGroupDeviceVariableArgs(PolicyGroupDeviceVariableArgs $) {
        this.listValues = $.listValues;
        this.name = $.name;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyGroupDeviceVariableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyGroupDeviceVariableArgs $;

        public Builder() {
            $ = new PolicyGroupDeviceVariableArgs();
        }

        public Builder(PolicyGroupDeviceVariableArgs defaults) {
            $ = new PolicyGroupDeviceVariableArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param listValues Use this instead of `value` in case value is of type `List`.
         * 
         * @return builder
         * 
         */
        public Builder listValues(@Nullable Output<List<String>> listValues) {
            $.listValues = listValues;
            return this;
        }

        /**
         * @param listValues Use this instead of `value` in case value is of type `List`.
         * 
         * @return builder
         * 
         */
        public Builder listValues(List<String> listValues) {
            return listValues(Output.of(listValues));
        }

        /**
         * @param listValues Use this instead of `value` in case value is of type `List`.
         * 
         * @return builder
         * 
         */
        public Builder listValues(String... listValues) {
            return listValues(List.of(listValues));
        }

        /**
         * @param name Variable name
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Variable name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param value Variable value
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Variable value
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public PolicyGroupDeviceVariableArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("PolicyGroupDeviceVariableArgs", "name");
            }
            return $;
        }
    }

}
