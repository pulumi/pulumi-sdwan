// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServiceLanVpnFeatureAdvertiseOmpIpv4Prefix {
    /**
     * @return Aggregate Only
     * 
     */
    private Boolean aggregateOnly;
    private String networkAddress;
    /**
     * @return Variable name
     * 
     */
    private String networkAddressVariable;
    /**
     * @return Applied to Region
     * 
     */
    private String region;
    /**
     * @return Variable name
     * 
     */
    private String regionVariable;
    private String subnetMask;
    /**
     * @return Variable name
     * 
     */
    private String subnetMaskVariable;

    private GetServiceLanVpnFeatureAdvertiseOmpIpv4Prefix() {}
    /**
     * @return Aggregate Only
     * 
     */
    public Boolean aggregateOnly() {
        return this.aggregateOnly;
    }
    public String networkAddress() {
        return this.networkAddress;
    }
    /**
     * @return Variable name
     * 
     */
    public String networkAddressVariable() {
        return this.networkAddressVariable;
    }
    /**
     * @return Applied to Region
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return Variable name
     * 
     */
    public String regionVariable() {
        return this.regionVariable;
    }
    public String subnetMask() {
        return this.subnetMask;
    }
    /**
     * @return Variable name
     * 
     */
    public String subnetMaskVariable() {
        return this.subnetMaskVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceLanVpnFeatureAdvertiseOmpIpv4Prefix defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean aggregateOnly;
        private String networkAddress;
        private String networkAddressVariable;
        private String region;
        private String regionVariable;
        private String subnetMask;
        private String subnetMaskVariable;
        public Builder() {}
        public Builder(GetServiceLanVpnFeatureAdvertiseOmpIpv4Prefix defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregateOnly = defaults.aggregateOnly;
    	      this.networkAddress = defaults.networkAddress;
    	      this.networkAddressVariable = defaults.networkAddressVariable;
    	      this.region = defaults.region;
    	      this.regionVariable = defaults.regionVariable;
    	      this.subnetMask = defaults.subnetMask;
    	      this.subnetMaskVariable = defaults.subnetMaskVariable;
        }

        @CustomType.Setter
        public Builder aggregateOnly(Boolean aggregateOnly) {
            if (aggregateOnly == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureAdvertiseOmpIpv4Prefix", "aggregateOnly");
            }
            this.aggregateOnly = aggregateOnly;
            return this;
        }
        @CustomType.Setter
        public Builder networkAddress(String networkAddress) {
            if (networkAddress == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureAdvertiseOmpIpv4Prefix", "networkAddress");
            }
            this.networkAddress = networkAddress;
            return this;
        }
        @CustomType.Setter
        public Builder networkAddressVariable(String networkAddressVariable) {
            if (networkAddressVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureAdvertiseOmpIpv4Prefix", "networkAddressVariable");
            }
            this.networkAddressVariable = networkAddressVariable;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureAdvertiseOmpIpv4Prefix", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder regionVariable(String regionVariable) {
            if (regionVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureAdvertiseOmpIpv4Prefix", "regionVariable");
            }
            this.regionVariable = regionVariable;
            return this;
        }
        @CustomType.Setter
        public Builder subnetMask(String subnetMask) {
            if (subnetMask == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureAdvertiseOmpIpv4Prefix", "subnetMask");
            }
            this.subnetMask = subnetMask;
            return this;
        }
        @CustomType.Setter
        public Builder subnetMaskVariable(String subnetMaskVariable) {
            if (subnetMaskVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureAdvertiseOmpIpv4Prefix", "subnetMaskVariable");
            }
            this.subnetMaskVariable = subnetMaskVariable;
            return this;
        }
        public GetServiceLanVpnFeatureAdvertiseOmpIpv4Prefix build() {
            final var _resultValue = new GetServiceLanVpnFeatureAdvertiseOmpIpv4Prefix();
            _resultValue.aggregateOnly = aggregateOnly;
            _resultValue.networkAddress = networkAddress;
            _resultValue.networkAddressVariable = networkAddressVariable;
            _resultValue.region = region;
            _resultValue.regionVariable = regionVariable;
            _resultValue.subnetMask = subnetMask;
            _resultValue.subnetMaskVariable = subnetMaskVariable;
            return _resultValue;
        }
    }
}
