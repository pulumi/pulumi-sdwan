// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.AttachFeatureDeviceTemplateArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.AttachFeatureDeviceTemplateState;
import com.pulumi.sdwan.outputs.AttachFeatureDeviceTemplateDevice;
import java.lang.Integer;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can attach a feature device template. Due to limitations of the API, once a device template is attached to a device, only one change can be applied per `pulumi up` operation. More information is available here.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sdwan.AttachFeatureDeviceTemplate;
 * import com.pulumi.sdwan.AttachFeatureDeviceTemplateArgs;
 * import com.pulumi.sdwan.inputs.AttachFeatureDeviceTemplateDeviceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new AttachFeatureDeviceTemplate("example", AttachFeatureDeviceTemplateArgs.builder()        
 *             .id(DT1.id())
 *             .devices(AttachFeatureDeviceTemplateDeviceArgs.builder()
 *                 .id("C8K-CC678D1C-8EDF-3966-4F51-ABFAB64F5ABE")
 *                 .variables(Map.ofEntries(
 *                     Map.entry("systemSiteId", "1001"),
 *                     Map.entry("systemSystemIp", "1.1.1.1"),
 *                     Map.entry("systemHostName", "router1"),
 *                     Map.entry("vpnIfNameDefaultVEdgeDHCPTunnelInterface", "GigabitEthernet1")
 *                 ))
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="sdwan:index/attachFeatureDeviceTemplate:AttachFeatureDeviceTemplate")
public class AttachFeatureDeviceTemplate extends com.pulumi.resources.CustomResource {
    /**
     * Devices
     * 
     */
    @Export(name="devices", refs={List.class,AttachFeatureDeviceTemplateDevice.class}, tree="[0,1]")
    private Output<List<AttachFeatureDeviceTemplateDevice>> devices;

    /**
     * @return Devices
     * 
     */
    public Output<List<AttachFeatureDeviceTemplateDevice>> devices() {
        return this.devices;
    }
    /**
     * The version of the device template
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> version;

    /**
     * @return The version of the device template
     * 
     */
    public Output<Optional<Integer>> version() {
        return Codegen.optional(this.version);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AttachFeatureDeviceTemplate(String name) {
        this(name, AttachFeatureDeviceTemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AttachFeatureDeviceTemplate(String name, AttachFeatureDeviceTemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AttachFeatureDeviceTemplate(String name, AttachFeatureDeviceTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/attachFeatureDeviceTemplate:AttachFeatureDeviceTemplate", name, args == null ? AttachFeatureDeviceTemplateArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AttachFeatureDeviceTemplate(String name, Output<String> id, @Nullable AttachFeatureDeviceTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/attachFeatureDeviceTemplate:AttachFeatureDeviceTemplate", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AttachFeatureDeviceTemplate get(String name, Output<String> id, @Nullable AttachFeatureDeviceTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AttachFeatureDeviceTemplate(name, id, state, options);
    }
}
