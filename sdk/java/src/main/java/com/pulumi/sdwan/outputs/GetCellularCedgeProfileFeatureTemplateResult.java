// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCellularCedgeProfileFeatureTemplateResult {
    /**
     * @return Set access point name
     * 
     */
    private String accessPointName;
    /**
     * @return Variable name
     * 
     */
    private String accessPointNameVariable;
    /**
     * @return Set authentication type
     * 
     */
    private String authenticationType;
    /**
     * @return Variable name
     * 
     */
    private String authenticationTypeVariable;
    /**
     * @return The description of the feature template
     * 
     */
    private String description;
    /**
     * @return List of supported device types
     * 
     */
    private List<String> deviceTypes;
    /**
     * @return The id of the feature template
     * 
     */
    private String id;
    /**
     * @return The name of the feature template
     * 
     */
    private String name;
    /**
     * @return No Overwrite
     * 
     */
    private Boolean noOverwrite;
    /**
     * @return Variable name
     * 
     */
    private String noOverwriteVariable;
    /**
     * @return Set packet data network type
     * 
     */
    private String packetDataNetworkType;
    /**
     * @return Variable name
     * 
     */
    private String packetDataNetworkTypeVariable;
    /**
     * @return Set Profile ID
     * 
     */
    private Integer profileId;
    /**
     * @return Variable name
     * 
     */
    private String profileIdVariable;
    /**
     * @return Set the profile password
     * 
     */
    private String profilePassword;
    /**
     * @return Variable name
     * 
     */
    private String profilePasswordVariable;
    /**
     * @return Set the profile username
     * 
     */
    private String profileUsername;
    /**
     * @return Variable name
     * 
     */
    private String profileUsernameVariable;
    /**
     * @return The template type
     * 
     */
    private String templateType;
    /**
     * @return The version of the feature template
     * 
     */
    private Integer version;

    private GetCellularCedgeProfileFeatureTemplateResult() {}
    /**
     * @return Set access point name
     * 
     */
    public String accessPointName() {
        return this.accessPointName;
    }
    /**
     * @return Variable name
     * 
     */
    public String accessPointNameVariable() {
        return this.accessPointNameVariable;
    }
    /**
     * @return Set authentication type
     * 
     */
    public String authenticationType() {
        return this.authenticationType;
    }
    /**
     * @return Variable name
     * 
     */
    public String authenticationTypeVariable() {
        return this.authenticationTypeVariable;
    }
    /**
     * @return The description of the feature template
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return List of supported device types
     * 
     */
    public List<String> deviceTypes() {
        return this.deviceTypes;
    }
    /**
     * @return The id of the feature template
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the feature template
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return No Overwrite
     * 
     */
    public Boolean noOverwrite() {
        return this.noOverwrite;
    }
    /**
     * @return Variable name
     * 
     */
    public String noOverwriteVariable() {
        return this.noOverwriteVariable;
    }
    /**
     * @return Set packet data network type
     * 
     */
    public String packetDataNetworkType() {
        return this.packetDataNetworkType;
    }
    /**
     * @return Variable name
     * 
     */
    public String packetDataNetworkTypeVariable() {
        return this.packetDataNetworkTypeVariable;
    }
    /**
     * @return Set Profile ID
     * 
     */
    public Integer profileId() {
        return this.profileId;
    }
    /**
     * @return Variable name
     * 
     */
    public String profileIdVariable() {
        return this.profileIdVariable;
    }
    /**
     * @return Set the profile password
     * 
     */
    public String profilePassword() {
        return this.profilePassword;
    }
    /**
     * @return Variable name
     * 
     */
    public String profilePasswordVariable() {
        return this.profilePasswordVariable;
    }
    /**
     * @return Set the profile username
     * 
     */
    public String profileUsername() {
        return this.profileUsername;
    }
    /**
     * @return Variable name
     * 
     */
    public String profileUsernameVariable() {
        return this.profileUsernameVariable;
    }
    /**
     * @return The template type
     * 
     */
    public String templateType() {
        return this.templateType;
    }
    /**
     * @return The version of the feature template
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCellularCedgeProfileFeatureTemplateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessPointName;
        private String accessPointNameVariable;
        private String authenticationType;
        private String authenticationTypeVariable;
        private String description;
        private List<String> deviceTypes;
        private String id;
        private String name;
        private Boolean noOverwrite;
        private String noOverwriteVariable;
        private String packetDataNetworkType;
        private String packetDataNetworkTypeVariable;
        private Integer profileId;
        private String profileIdVariable;
        private String profilePassword;
        private String profilePasswordVariable;
        private String profileUsername;
        private String profileUsernameVariable;
        private String templateType;
        private Integer version;
        public Builder() {}
        public Builder(GetCellularCedgeProfileFeatureTemplateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPointName = defaults.accessPointName;
    	      this.accessPointNameVariable = defaults.accessPointNameVariable;
    	      this.authenticationType = defaults.authenticationType;
    	      this.authenticationTypeVariable = defaults.authenticationTypeVariable;
    	      this.description = defaults.description;
    	      this.deviceTypes = defaults.deviceTypes;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.noOverwrite = defaults.noOverwrite;
    	      this.noOverwriteVariable = defaults.noOverwriteVariable;
    	      this.packetDataNetworkType = defaults.packetDataNetworkType;
    	      this.packetDataNetworkTypeVariable = defaults.packetDataNetworkTypeVariable;
    	      this.profileId = defaults.profileId;
    	      this.profileIdVariable = defaults.profileIdVariable;
    	      this.profilePassword = defaults.profilePassword;
    	      this.profilePasswordVariable = defaults.profilePasswordVariable;
    	      this.profileUsername = defaults.profileUsername;
    	      this.profileUsernameVariable = defaults.profileUsernameVariable;
    	      this.templateType = defaults.templateType;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder accessPointName(String accessPointName) {
            if (accessPointName == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "accessPointName");
            }
            this.accessPointName = accessPointName;
            return this;
        }
        @CustomType.Setter
        public Builder accessPointNameVariable(String accessPointNameVariable) {
            if (accessPointNameVariable == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "accessPointNameVariable");
            }
            this.accessPointNameVariable = accessPointNameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationType(String authenticationType) {
            if (authenticationType == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "authenticationType");
            }
            this.authenticationType = authenticationType;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationTypeVariable(String authenticationTypeVariable) {
            if (authenticationTypeVariable == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "authenticationTypeVariable");
            }
            this.authenticationTypeVariable = authenticationTypeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder deviceTypes(List<String> deviceTypes) {
            if (deviceTypes == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "deviceTypes");
            }
            this.deviceTypes = deviceTypes;
            return this;
        }
        public Builder deviceTypes(String... deviceTypes) {
            return deviceTypes(List.of(deviceTypes));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder noOverwrite(Boolean noOverwrite) {
            if (noOverwrite == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "noOverwrite");
            }
            this.noOverwrite = noOverwrite;
            return this;
        }
        @CustomType.Setter
        public Builder noOverwriteVariable(String noOverwriteVariable) {
            if (noOverwriteVariable == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "noOverwriteVariable");
            }
            this.noOverwriteVariable = noOverwriteVariable;
            return this;
        }
        @CustomType.Setter
        public Builder packetDataNetworkType(String packetDataNetworkType) {
            if (packetDataNetworkType == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "packetDataNetworkType");
            }
            this.packetDataNetworkType = packetDataNetworkType;
            return this;
        }
        @CustomType.Setter
        public Builder packetDataNetworkTypeVariable(String packetDataNetworkTypeVariable) {
            if (packetDataNetworkTypeVariable == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "packetDataNetworkTypeVariable");
            }
            this.packetDataNetworkTypeVariable = packetDataNetworkTypeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder profileId(Integer profileId) {
            if (profileId == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "profileId");
            }
            this.profileId = profileId;
            return this;
        }
        @CustomType.Setter
        public Builder profileIdVariable(String profileIdVariable) {
            if (profileIdVariable == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "profileIdVariable");
            }
            this.profileIdVariable = profileIdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder profilePassword(String profilePassword) {
            if (profilePassword == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "profilePassword");
            }
            this.profilePassword = profilePassword;
            return this;
        }
        @CustomType.Setter
        public Builder profilePasswordVariable(String profilePasswordVariable) {
            if (profilePasswordVariable == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "profilePasswordVariable");
            }
            this.profilePasswordVariable = profilePasswordVariable;
            return this;
        }
        @CustomType.Setter
        public Builder profileUsername(String profileUsername) {
            if (profileUsername == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "profileUsername");
            }
            this.profileUsername = profileUsername;
            return this;
        }
        @CustomType.Setter
        public Builder profileUsernameVariable(String profileUsernameVariable) {
            if (profileUsernameVariable == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "profileUsernameVariable");
            }
            this.profileUsernameVariable = profileUsernameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder templateType(String templateType) {
            if (templateType == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "templateType");
            }
            this.templateType = templateType;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetCellularCedgeProfileFeatureTemplateResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetCellularCedgeProfileFeatureTemplateResult build() {
            final var _resultValue = new GetCellularCedgeProfileFeatureTemplateResult();
            _resultValue.accessPointName = accessPointName;
            _resultValue.accessPointNameVariable = accessPointNameVariable;
            _resultValue.authenticationType = authenticationType;
            _resultValue.authenticationTypeVariable = authenticationTypeVariable;
            _resultValue.description = description;
            _resultValue.deviceTypes = deviceTypes;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.noOverwrite = noOverwrite;
            _resultValue.noOverwriteVariable = noOverwriteVariable;
            _resultValue.packetDataNetworkType = packetDataNetworkType;
            _resultValue.packetDataNetworkTypeVariable = packetDataNetworkTypeVariable;
            _resultValue.profileId = profileId;
            _resultValue.profileIdVariable = profileIdVariable;
            _resultValue.profilePassword = profilePassword;
            _resultValue.profilePasswordVariable = profilePasswordVariable;
            _resultValue.profileUsername = profileUsername;
            _resultValue.profileUsernameVariable = profileUsernameVariable;
            _resultValue.templateType = templateType;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
