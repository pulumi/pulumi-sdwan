// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTlsSslDecryptionPolicyDefinitionUrlRule {
    /**
     * @return Country
     * 
     */
    private String ruleName;
    /**
     * @return List of VPN IDs
     * 
     */
    private List<String> targetVpns;
    /**
     * @return TLS SSL Profile Policy ID
     * 
     */
    private String tlsSslProfilePolicyId;
    /**
     * @return TLS SSL Profile Policy version
     * 
     */
    private Integer tlsSslProfileVersion;

    private GetTlsSslDecryptionPolicyDefinitionUrlRule() {}
    /**
     * @return Country
     * 
     */
    public String ruleName() {
        return this.ruleName;
    }
    /**
     * @return List of VPN IDs
     * 
     */
    public List<String> targetVpns() {
        return this.targetVpns;
    }
    /**
     * @return TLS SSL Profile Policy ID
     * 
     */
    public String tlsSslProfilePolicyId() {
        return this.tlsSslProfilePolicyId;
    }
    /**
     * @return TLS SSL Profile Policy version
     * 
     */
    public Integer tlsSslProfileVersion() {
        return this.tlsSslProfileVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTlsSslDecryptionPolicyDefinitionUrlRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String ruleName;
        private List<String> targetVpns;
        private String tlsSslProfilePolicyId;
        private Integer tlsSslProfileVersion;
        public Builder() {}
        public Builder(GetTlsSslDecryptionPolicyDefinitionUrlRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ruleName = defaults.ruleName;
    	      this.targetVpns = defaults.targetVpns;
    	      this.tlsSslProfilePolicyId = defaults.tlsSslProfilePolicyId;
    	      this.tlsSslProfileVersion = defaults.tlsSslProfileVersion;
        }

        @CustomType.Setter
        public Builder ruleName(String ruleName) {
            if (ruleName == null) {
              throw new MissingRequiredPropertyException("GetTlsSslDecryptionPolicyDefinitionUrlRule", "ruleName");
            }
            this.ruleName = ruleName;
            return this;
        }
        @CustomType.Setter
        public Builder targetVpns(List<String> targetVpns) {
            if (targetVpns == null) {
              throw new MissingRequiredPropertyException("GetTlsSslDecryptionPolicyDefinitionUrlRule", "targetVpns");
            }
            this.targetVpns = targetVpns;
            return this;
        }
        public Builder targetVpns(String... targetVpns) {
            return targetVpns(List.of(targetVpns));
        }
        @CustomType.Setter
        public Builder tlsSslProfilePolicyId(String tlsSslProfilePolicyId) {
            if (tlsSslProfilePolicyId == null) {
              throw new MissingRequiredPropertyException("GetTlsSslDecryptionPolicyDefinitionUrlRule", "tlsSslProfilePolicyId");
            }
            this.tlsSslProfilePolicyId = tlsSslProfilePolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder tlsSslProfileVersion(Integer tlsSslProfileVersion) {
            if (tlsSslProfileVersion == null) {
              throw new MissingRequiredPropertyException("GetTlsSslDecryptionPolicyDefinitionUrlRule", "tlsSslProfileVersion");
            }
            this.tlsSslProfileVersion = tlsSslProfileVersion;
            return this;
        }
        public GetTlsSslDecryptionPolicyDefinitionUrlRule build() {
            final var _resultValue = new GetTlsSslDecryptionPolicyDefinitionUrlRule();
            _resultValue.ruleName = ruleName;
            _resultValue.targetVpns = targetVpns;
            _resultValue.tlsSslProfilePolicyId = tlsSslProfilePolicyId;
            _resultValue.tlsSslProfileVersion = tlsSslProfileVersion;
            return _resultValue;
        }
    }
}
