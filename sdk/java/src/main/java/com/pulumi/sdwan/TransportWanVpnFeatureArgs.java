// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.TransportWanVpnFeatureIpv4StaticRouteArgs;
import com.pulumi.sdwan.inputs.TransportWanVpnFeatureIpv6StaticRouteArgs;
import com.pulumi.sdwan.inputs.TransportWanVpnFeatureNat64V4PoolArgs;
import com.pulumi.sdwan.inputs.TransportWanVpnFeatureNewHostMappingArgs;
import com.pulumi.sdwan.inputs.TransportWanVpnFeatureServiceArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransportWanVpnFeatureArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransportWanVpnFeatureArgs Empty = new TransportWanVpnFeatureArgs();

    /**
     * The description of the Feature
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Enhance ECMP Keying - Default value: `false`
     * 
     */
    @Import(name="enhanceEcmpKeying")
    private @Nullable Output<Boolean> enhanceEcmpKeying;

    /**
     * @return Enhance ECMP Keying - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> enhanceEcmpKeying() {
        return Optional.ofNullable(this.enhanceEcmpKeying);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="enhanceEcmpKeyingVariable")
    private @Nullable Output<String> enhanceEcmpKeyingVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> enhanceEcmpKeyingVariable() {
        return Optional.ofNullable(this.enhanceEcmpKeyingVariable);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId", required=true)
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }

    /**
     * IPv4 Static Route
     * 
     */
    @Import(name="ipv4StaticRoutes")
    private @Nullable Output<List<TransportWanVpnFeatureIpv4StaticRouteArgs>> ipv4StaticRoutes;

    /**
     * @return IPv4 Static Route
     * 
     */
    public Optional<Output<List<TransportWanVpnFeatureIpv4StaticRouteArgs>>> ipv4StaticRoutes() {
        return Optional.ofNullable(this.ipv4StaticRoutes);
    }

    /**
     * IPv6 Static Route
     * 
     */
    @Import(name="ipv6StaticRoutes")
    private @Nullable Output<List<TransportWanVpnFeatureIpv6StaticRouteArgs>> ipv6StaticRoutes;

    /**
     * @return IPv6 Static Route
     * 
     */
    public Optional<Output<List<TransportWanVpnFeatureIpv6StaticRouteArgs>>> ipv6StaticRoutes() {
        return Optional.ofNullable(this.ipv6StaticRoutes);
    }

    /**
     * The name of the Feature
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * NAT64 V4 Pool
     * 
     */
    @Import(name="nat64V4Pools")
    private @Nullable Output<List<TransportWanVpnFeatureNat64V4PoolArgs>> nat64V4Pools;

    /**
     * @return NAT64 V4 Pool
     * 
     */
    public Optional<Output<List<TransportWanVpnFeatureNat64V4PoolArgs>>> nat64V4Pools() {
        return Optional.ofNullable(this.nat64V4Pools);
    }

    @Import(name="newHostMappings")
    private @Nullable Output<List<TransportWanVpnFeatureNewHostMappingArgs>> newHostMappings;

    public Optional<Output<List<TransportWanVpnFeatureNewHostMappingArgs>>> newHostMappings() {
        return Optional.ofNullable(this.newHostMappings);
    }

    /**
     * Primary DNS Address (IPv4)
     * 
     */
    @Import(name="primaryDnsAddressIpv4")
    private @Nullable Output<String> primaryDnsAddressIpv4;

    /**
     * @return Primary DNS Address (IPv4)
     * 
     */
    public Optional<Output<String>> primaryDnsAddressIpv4() {
        return Optional.ofNullable(this.primaryDnsAddressIpv4);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="primaryDnsAddressIpv4Variable")
    private @Nullable Output<String> primaryDnsAddressIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> primaryDnsAddressIpv4Variable() {
        return Optional.ofNullable(this.primaryDnsAddressIpv4Variable);
    }

    /**
     * Primary DNS Address (IPv6)
     * 
     */
    @Import(name="primaryDnsAddressIpv6")
    private @Nullable Output<String> primaryDnsAddressIpv6;

    /**
     * @return Primary DNS Address (IPv6)
     * 
     */
    public Optional<Output<String>> primaryDnsAddressIpv6() {
        return Optional.ofNullable(this.primaryDnsAddressIpv6);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="primaryDnsAddressIpv6Variable")
    private @Nullable Output<String> primaryDnsAddressIpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> primaryDnsAddressIpv6Variable() {
        return Optional.ofNullable(this.primaryDnsAddressIpv6Variable);
    }

    /**
     * Secondary DNS Address (IPv4)
     * 
     */
    @Import(name="secondaryDnsAddressIpv4")
    private @Nullable Output<String> secondaryDnsAddressIpv4;

    /**
     * @return Secondary DNS Address (IPv4)
     * 
     */
    public Optional<Output<String>> secondaryDnsAddressIpv4() {
        return Optional.ofNullable(this.secondaryDnsAddressIpv4);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="secondaryDnsAddressIpv4Variable")
    private @Nullable Output<String> secondaryDnsAddressIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> secondaryDnsAddressIpv4Variable() {
        return Optional.ofNullable(this.secondaryDnsAddressIpv4Variable);
    }

    /**
     * Secondary DNS Address (IPv6)
     * 
     */
    @Import(name="secondaryDnsAddressIpv6")
    private @Nullable Output<String> secondaryDnsAddressIpv6;

    /**
     * @return Secondary DNS Address (IPv6)
     * 
     */
    public Optional<Output<String>> secondaryDnsAddressIpv6() {
        return Optional.ofNullable(this.secondaryDnsAddressIpv6);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="secondaryDnsAddressIpv6Variable")
    private @Nullable Output<String> secondaryDnsAddressIpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> secondaryDnsAddressIpv6Variable() {
        return Optional.ofNullable(this.secondaryDnsAddressIpv6Variable);
    }

    /**
     * Service
     * 
     */
    @Import(name="services")
    private @Nullable Output<List<TransportWanVpnFeatureServiceArgs>> services;

    /**
     * @return Service
     * 
     */
    public Optional<Output<List<TransportWanVpnFeatureServiceArgs>>> services() {
        return Optional.ofNullable(this.services);
    }

    /**
     * VPN - Default value: `0`
     * 
     */
    @Import(name="vpn")
    private @Nullable Output<Integer> vpn;

    /**
     * @return VPN - Default value: `0`
     * 
     */
    public Optional<Output<Integer>> vpn() {
        return Optional.ofNullable(this.vpn);
    }

    private TransportWanVpnFeatureArgs() {}

    private TransportWanVpnFeatureArgs(TransportWanVpnFeatureArgs $) {
        this.description = $.description;
        this.enhanceEcmpKeying = $.enhanceEcmpKeying;
        this.enhanceEcmpKeyingVariable = $.enhanceEcmpKeyingVariable;
        this.featureProfileId = $.featureProfileId;
        this.ipv4StaticRoutes = $.ipv4StaticRoutes;
        this.ipv6StaticRoutes = $.ipv6StaticRoutes;
        this.name = $.name;
        this.nat64V4Pools = $.nat64V4Pools;
        this.newHostMappings = $.newHostMappings;
        this.primaryDnsAddressIpv4 = $.primaryDnsAddressIpv4;
        this.primaryDnsAddressIpv4Variable = $.primaryDnsAddressIpv4Variable;
        this.primaryDnsAddressIpv6 = $.primaryDnsAddressIpv6;
        this.primaryDnsAddressIpv6Variable = $.primaryDnsAddressIpv6Variable;
        this.secondaryDnsAddressIpv4 = $.secondaryDnsAddressIpv4;
        this.secondaryDnsAddressIpv4Variable = $.secondaryDnsAddressIpv4Variable;
        this.secondaryDnsAddressIpv6 = $.secondaryDnsAddressIpv6;
        this.secondaryDnsAddressIpv6Variable = $.secondaryDnsAddressIpv6Variable;
        this.services = $.services;
        this.vpn = $.vpn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransportWanVpnFeatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransportWanVpnFeatureArgs $;

        public Builder() {
            $ = new TransportWanVpnFeatureArgs();
        }

        public Builder(TransportWanVpnFeatureArgs defaults) {
            $ = new TransportWanVpnFeatureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param enhanceEcmpKeying Enhance ECMP Keying - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder enhanceEcmpKeying(@Nullable Output<Boolean> enhanceEcmpKeying) {
            $.enhanceEcmpKeying = enhanceEcmpKeying;
            return this;
        }

        /**
         * @param enhanceEcmpKeying Enhance ECMP Keying - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder enhanceEcmpKeying(Boolean enhanceEcmpKeying) {
            return enhanceEcmpKeying(Output.of(enhanceEcmpKeying));
        }

        /**
         * @param enhanceEcmpKeyingVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enhanceEcmpKeyingVariable(@Nullable Output<String> enhanceEcmpKeyingVariable) {
            $.enhanceEcmpKeyingVariable = enhanceEcmpKeyingVariable;
            return this;
        }

        /**
         * @param enhanceEcmpKeyingVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enhanceEcmpKeyingVariable(String enhanceEcmpKeyingVariable) {
            return enhanceEcmpKeyingVariable(Output.of(enhanceEcmpKeyingVariable));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param ipv4StaticRoutes IPv4 Static Route
         * 
         * @return builder
         * 
         */
        public Builder ipv4StaticRoutes(@Nullable Output<List<TransportWanVpnFeatureIpv4StaticRouteArgs>> ipv4StaticRoutes) {
            $.ipv4StaticRoutes = ipv4StaticRoutes;
            return this;
        }

        /**
         * @param ipv4StaticRoutes IPv4 Static Route
         * 
         * @return builder
         * 
         */
        public Builder ipv4StaticRoutes(List<TransportWanVpnFeatureIpv4StaticRouteArgs> ipv4StaticRoutes) {
            return ipv4StaticRoutes(Output.of(ipv4StaticRoutes));
        }

        /**
         * @param ipv4StaticRoutes IPv4 Static Route
         * 
         * @return builder
         * 
         */
        public Builder ipv4StaticRoutes(TransportWanVpnFeatureIpv4StaticRouteArgs... ipv4StaticRoutes) {
            return ipv4StaticRoutes(List.of(ipv4StaticRoutes));
        }

        /**
         * @param ipv6StaticRoutes IPv6 Static Route
         * 
         * @return builder
         * 
         */
        public Builder ipv6StaticRoutes(@Nullable Output<List<TransportWanVpnFeatureIpv6StaticRouteArgs>> ipv6StaticRoutes) {
            $.ipv6StaticRoutes = ipv6StaticRoutes;
            return this;
        }

        /**
         * @param ipv6StaticRoutes IPv6 Static Route
         * 
         * @return builder
         * 
         */
        public Builder ipv6StaticRoutes(List<TransportWanVpnFeatureIpv6StaticRouteArgs> ipv6StaticRoutes) {
            return ipv6StaticRoutes(Output.of(ipv6StaticRoutes));
        }

        /**
         * @param ipv6StaticRoutes IPv6 Static Route
         * 
         * @return builder
         * 
         */
        public Builder ipv6StaticRoutes(TransportWanVpnFeatureIpv6StaticRouteArgs... ipv6StaticRoutes) {
            return ipv6StaticRoutes(List.of(ipv6StaticRoutes));
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nat64V4Pools NAT64 V4 Pool
         * 
         * @return builder
         * 
         */
        public Builder nat64V4Pools(@Nullable Output<List<TransportWanVpnFeatureNat64V4PoolArgs>> nat64V4Pools) {
            $.nat64V4Pools = nat64V4Pools;
            return this;
        }

        /**
         * @param nat64V4Pools NAT64 V4 Pool
         * 
         * @return builder
         * 
         */
        public Builder nat64V4Pools(List<TransportWanVpnFeatureNat64V4PoolArgs> nat64V4Pools) {
            return nat64V4Pools(Output.of(nat64V4Pools));
        }

        /**
         * @param nat64V4Pools NAT64 V4 Pool
         * 
         * @return builder
         * 
         */
        public Builder nat64V4Pools(TransportWanVpnFeatureNat64V4PoolArgs... nat64V4Pools) {
            return nat64V4Pools(List.of(nat64V4Pools));
        }

        public Builder newHostMappings(@Nullable Output<List<TransportWanVpnFeatureNewHostMappingArgs>> newHostMappings) {
            $.newHostMappings = newHostMappings;
            return this;
        }

        public Builder newHostMappings(List<TransportWanVpnFeatureNewHostMappingArgs> newHostMappings) {
            return newHostMappings(Output.of(newHostMappings));
        }

        public Builder newHostMappings(TransportWanVpnFeatureNewHostMappingArgs... newHostMappings) {
            return newHostMappings(List.of(newHostMappings));
        }

        /**
         * @param primaryDnsAddressIpv4 Primary DNS Address (IPv4)
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv4(@Nullable Output<String> primaryDnsAddressIpv4) {
            $.primaryDnsAddressIpv4 = primaryDnsAddressIpv4;
            return this;
        }

        /**
         * @param primaryDnsAddressIpv4 Primary DNS Address (IPv4)
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv4(String primaryDnsAddressIpv4) {
            return primaryDnsAddressIpv4(Output.of(primaryDnsAddressIpv4));
        }

        /**
         * @param primaryDnsAddressIpv4Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv4Variable(@Nullable Output<String> primaryDnsAddressIpv4Variable) {
            $.primaryDnsAddressIpv4Variable = primaryDnsAddressIpv4Variable;
            return this;
        }

        /**
         * @param primaryDnsAddressIpv4Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv4Variable(String primaryDnsAddressIpv4Variable) {
            return primaryDnsAddressIpv4Variable(Output.of(primaryDnsAddressIpv4Variable));
        }

        /**
         * @param primaryDnsAddressIpv6 Primary DNS Address (IPv6)
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv6(@Nullable Output<String> primaryDnsAddressIpv6) {
            $.primaryDnsAddressIpv6 = primaryDnsAddressIpv6;
            return this;
        }

        /**
         * @param primaryDnsAddressIpv6 Primary DNS Address (IPv6)
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv6(String primaryDnsAddressIpv6) {
            return primaryDnsAddressIpv6(Output.of(primaryDnsAddressIpv6));
        }

        /**
         * @param primaryDnsAddressIpv6Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv6Variable(@Nullable Output<String> primaryDnsAddressIpv6Variable) {
            $.primaryDnsAddressIpv6Variable = primaryDnsAddressIpv6Variable;
            return this;
        }

        /**
         * @param primaryDnsAddressIpv6Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv6Variable(String primaryDnsAddressIpv6Variable) {
            return primaryDnsAddressIpv6Variable(Output.of(primaryDnsAddressIpv6Variable));
        }

        /**
         * @param secondaryDnsAddressIpv4 Secondary DNS Address (IPv4)
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv4(@Nullable Output<String> secondaryDnsAddressIpv4) {
            $.secondaryDnsAddressIpv4 = secondaryDnsAddressIpv4;
            return this;
        }

        /**
         * @param secondaryDnsAddressIpv4 Secondary DNS Address (IPv4)
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv4(String secondaryDnsAddressIpv4) {
            return secondaryDnsAddressIpv4(Output.of(secondaryDnsAddressIpv4));
        }

        /**
         * @param secondaryDnsAddressIpv4Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv4Variable(@Nullable Output<String> secondaryDnsAddressIpv4Variable) {
            $.secondaryDnsAddressIpv4Variable = secondaryDnsAddressIpv4Variable;
            return this;
        }

        /**
         * @param secondaryDnsAddressIpv4Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv4Variable(String secondaryDnsAddressIpv4Variable) {
            return secondaryDnsAddressIpv4Variable(Output.of(secondaryDnsAddressIpv4Variable));
        }

        /**
         * @param secondaryDnsAddressIpv6 Secondary DNS Address (IPv6)
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv6(@Nullable Output<String> secondaryDnsAddressIpv6) {
            $.secondaryDnsAddressIpv6 = secondaryDnsAddressIpv6;
            return this;
        }

        /**
         * @param secondaryDnsAddressIpv6 Secondary DNS Address (IPv6)
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv6(String secondaryDnsAddressIpv6) {
            return secondaryDnsAddressIpv6(Output.of(secondaryDnsAddressIpv6));
        }

        /**
         * @param secondaryDnsAddressIpv6Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv6Variable(@Nullable Output<String> secondaryDnsAddressIpv6Variable) {
            $.secondaryDnsAddressIpv6Variable = secondaryDnsAddressIpv6Variable;
            return this;
        }

        /**
         * @param secondaryDnsAddressIpv6Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv6Variable(String secondaryDnsAddressIpv6Variable) {
            return secondaryDnsAddressIpv6Variable(Output.of(secondaryDnsAddressIpv6Variable));
        }

        /**
         * @param services Service
         * 
         * @return builder
         * 
         */
        public Builder services(@Nullable Output<List<TransportWanVpnFeatureServiceArgs>> services) {
            $.services = services;
            return this;
        }

        /**
         * @param services Service
         * 
         * @return builder
         * 
         */
        public Builder services(List<TransportWanVpnFeatureServiceArgs> services) {
            return services(Output.of(services));
        }

        /**
         * @param services Service
         * 
         * @return builder
         * 
         */
        public Builder services(TransportWanVpnFeatureServiceArgs... services) {
            return services(List.of(services));
        }

        /**
         * @param vpn VPN - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder vpn(@Nullable Output<Integer> vpn) {
            $.vpn = vpn;
            return this;
        }

        /**
         * @param vpn VPN - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder vpn(Integer vpn) {
            return vpn(Output.of(vpn));
        }

        public TransportWanVpnFeatureArgs build() {
            if ($.featureProfileId == null) {
                throw new MissingRequiredPropertyException("TransportWanVpnFeatureArgs", "featureProfileId");
            }
            return $;
        }
    }

}
