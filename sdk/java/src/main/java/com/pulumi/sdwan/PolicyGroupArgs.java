// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.PolicyGroupDeviceArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyGroupArgs Empty = new PolicyGroupArgs();

    /**
     * Description
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return Description
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * List of devices
     * 
     */
    @Import(name="devices")
    private @Nullable Output<List<PolicyGroupDeviceArgs>> devices;

    /**
     * @return List of devices
     * 
     */
    public Optional<Output<List<PolicyGroupDeviceArgs>>> devices() {
        return Optional.ofNullable(this.devices);
    }

    /**
     * List of feature profile IDs
     * 
     */
    @Import(name="featureProfileIds")
    private @Nullable Output<List<String>> featureProfileIds;

    /**
     * @return List of feature profile IDs
     * 
     */
    public Optional<Output<List<String>>> featureProfileIds() {
        return Optional.ofNullable(this.featureProfileIds);
    }

    /**
     * The name of the policy group
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the policy group
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * List of all associated policy versions
     * 
     */
    @Import(name="policyVersions")
    private @Nullable Output<List<String>> policyVersions;

    /**
     * @return List of all associated policy versions
     * 
     */
    public Optional<Output<List<String>>> policyVersions() {
        return Optional.ofNullable(this.policyVersions);
    }

    /**
     * Type of solution
     *   - Choices: `sdwan`
     * 
     */
    @Import(name="solution", required=true)
    private Output<String> solution;

    /**
     * @return Type of solution
     *   - Choices: `sdwan`
     * 
     */
    public Output<String> solution() {
        return this.solution;
    }

    private PolicyGroupArgs() {}

    private PolicyGroupArgs(PolicyGroupArgs $) {
        this.description = $.description;
        this.devices = $.devices;
        this.featureProfileIds = $.featureProfileIds;
        this.name = $.name;
        this.policyVersions = $.policyVersions;
        this.solution = $.solution;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyGroupArgs $;

        public Builder() {
            $ = new PolicyGroupArgs();
        }

        public Builder(PolicyGroupArgs defaults) {
            $ = new PolicyGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param devices List of devices
         * 
         * @return builder
         * 
         */
        public Builder devices(@Nullable Output<List<PolicyGroupDeviceArgs>> devices) {
            $.devices = devices;
            return this;
        }

        /**
         * @param devices List of devices
         * 
         * @return builder
         * 
         */
        public Builder devices(List<PolicyGroupDeviceArgs> devices) {
            return devices(Output.of(devices));
        }

        /**
         * @param devices List of devices
         * 
         * @return builder
         * 
         */
        public Builder devices(PolicyGroupDeviceArgs... devices) {
            return devices(List.of(devices));
        }

        /**
         * @param featureProfileIds List of feature profile IDs
         * 
         * @return builder
         * 
         */
        public Builder featureProfileIds(@Nullable Output<List<String>> featureProfileIds) {
            $.featureProfileIds = featureProfileIds;
            return this;
        }

        /**
         * @param featureProfileIds List of feature profile IDs
         * 
         * @return builder
         * 
         */
        public Builder featureProfileIds(List<String> featureProfileIds) {
            return featureProfileIds(Output.of(featureProfileIds));
        }

        /**
         * @param featureProfileIds List of feature profile IDs
         * 
         * @return builder
         * 
         */
        public Builder featureProfileIds(String... featureProfileIds) {
            return featureProfileIds(List.of(featureProfileIds));
        }

        /**
         * @param name The name of the policy group
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the policy group
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param policyVersions List of all associated policy versions
         * 
         * @return builder
         * 
         */
        public Builder policyVersions(@Nullable Output<List<String>> policyVersions) {
            $.policyVersions = policyVersions;
            return this;
        }

        /**
         * @param policyVersions List of all associated policy versions
         * 
         * @return builder
         * 
         */
        public Builder policyVersions(List<String> policyVersions) {
            return policyVersions(Output.of(policyVersions));
        }

        /**
         * @param policyVersions List of all associated policy versions
         * 
         * @return builder
         * 
         */
        public Builder policyVersions(String... policyVersions) {
            return policyVersions(List.of(policyVersions));
        }

        /**
         * @param solution Type of solution
         *   - Choices: `sdwan`
         * 
         * @return builder
         * 
         */
        public Builder solution(Output<String> solution) {
            $.solution = solution;
            return this;
        }

        /**
         * @param solution Type of solution
         *   - Choices: `sdwan`
         * 
         * @return builder
         * 
         */
        public Builder solution(String solution) {
            return solution(Output.of(solution));
        }

        public PolicyGroupArgs build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("PolicyGroupArgs", "description");
            }
            if ($.solution == null) {
                throw new MissingRequiredPropertyException("PolicyGroupArgs", "solution");
            }
            return $;
        }
    }

}
