// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.ServiceLanVpnInterfaceSviFeatureArpArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddressArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnInterfaceSviFeatureIpv4VrrpArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelperArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddressArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnInterfaceSviFeatureIpv6VrrpArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceLanVpnInterfaceSviFeatureArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceLanVpnInterfaceSviFeatureArgs Empty = new ServiceLanVpnInterfaceSviFeatureArgs();

    /**
     * Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2678400` - Default value: `1200`
     * 
     */
    @Import(name="arpTimeout")
    private @Nullable Output<Integer> arpTimeout;

    /**
     * @return Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2678400` - Default value: `1200`
     * 
     */
    public Optional<Output<Integer>> arpTimeout() {
        return Optional.ofNullable(this.arpTimeout);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="arpTimeoutVariable")
    private @Nullable Output<String> arpTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> arpTimeoutVariable() {
        return Optional.ofNullable(this.arpTimeoutVariable);
    }

    /**
     * Configure static ARP entries
     * 
     */
    @Import(name="arps")
    private @Nullable Output<List<ServiceLanVpnInterfaceSviFeatureArpArgs>> arps;

    /**
     * @return Configure static ARP entries
     * 
     */
    public Optional<Output<List<ServiceLanVpnInterfaceSviFeatureArpArgs>>> arps() {
        return Optional.ofNullable(this.arps);
    }

    /**
     * The description of the Feature
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Enable DHCPv6 - Default value: `false`
     * 
     */
    @Import(name="enableDhcpv6")
    private @Nullable Output<Boolean> enableDhcpv6;

    /**
     * @return Enable DHCPv6 - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> enableDhcpv6() {
        return Optional.ofNullable(this.enableDhcpv6);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="enableDhcpv6Variable")
    private @Nullable Output<String> enableDhcpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> enableDhcpv6Variable() {
        return Optional.ofNullable(this.enableDhcpv6Variable);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId", required=true)
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }

    /**
     * ICMP/ICMPv6 Redirect Disable - Default value: `true`
     * 
     */
    @Import(name="icmpRedirectDisable")
    private @Nullable Output<Boolean> icmpRedirectDisable;

    /**
     * @return ICMP/ICMPv6 Redirect Disable - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> icmpRedirectDisable() {
        return Optional.ofNullable(this.icmpRedirectDisable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="icmpRedirectDisableVariable")
    private @Nullable Output<String> icmpRedirectDisableVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> icmpRedirectDisableVariable() {
        return Optional.ofNullable(this.icmpRedirectDisableVariable);
    }

    /**
     * Interface description
     * 
     */
    @Import(name="interfaceDescription")
    private @Nullable Output<String> interfaceDescription;

    /**
     * @return Interface description
     * 
     */
    public Optional<Output<String>> interfaceDescription() {
        return Optional.ofNullable(this.interfaceDescription);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceDescriptionVariable")
    private @Nullable Output<String> interfaceDescriptionVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceDescriptionVariable() {
        return Optional.ofNullable(this.interfaceDescriptionVariable);
    }

    /**
     * Interface MTU &lt;1500..9216&gt; in bytes - Range: `1500`-`9216` - Default value: `1500`
     * 
     */
    @Import(name="interfaceMtu")
    private @Nullable Output<Integer> interfaceMtu;

    /**
     * @return Interface MTU &lt;1500..9216&gt; in bytes - Range: `1500`-`9216` - Default value: `1500`
     * 
     */
    public Optional<Output<Integer>> interfaceMtu() {
        return Optional.ofNullable(this.interfaceMtu);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceMtuVariable")
    private @Nullable Output<String> interfaceMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceMtuVariable() {
        return Optional.ofNullable(this.interfaceMtuVariable);
    }

    /**
     * Interface name: VLAN 1 - VLAN 4094 when present
     * 
     */
    @Import(name="interfaceName", required=true)
    private Output<String> interfaceName;

    /**
     * @return Interface name: VLAN 1 - VLAN 4094 when present
     * 
     */
    public Output<String> interfaceName() {
        return this.interfaceName;
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceNameVariable")
    private @Nullable Output<String> interfaceNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceNameVariable() {
        return Optional.ofNullable(this.interfaceNameVariable);
    }

    /**
     * IP Directed-Broadcast - Default value: `false`
     * 
     */
    @Import(name="ipDirectedBroadcast")
    private @Nullable Output<Boolean> ipDirectedBroadcast;

    /**
     * @return IP Directed-Broadcast - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> ipDirectedBroadcast() {
        return Optional.ofNullable(this.ipDirectedBroadcast);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipDirectedBroadcastVariable")
    private @Nullable Output<String> ipDirectedBroadcastVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipDirectedBroadcastVariable() {
        return Optional.ofNullable(this.ipDirectedBroadcastVariable);
    }

    /**
     * IP MTU &lt;576..Interface MTU&gt;, in bytes - Range: `576`-`9216` - Default value: `1500`
     * 
     */
    @Import(name="ipMtu")
    private @Nullable Output<Integer> ipMtu;

    /**
     * @return IP MTU &lt;576..Interface MTU&gt;, in bytes - Range: `576`-`9216` - Default value: `1500`
     * 
     */
    public Optional<Output<Integer>> ipMtu() {
        return Optional.ofNullable(this.ipMtu);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipMtuVariable")
    private @Nullable Output<String> ipMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipMtuVariable() {
        return Optional.ofNullable(this.ipMtuVariable);
    }

    /**
     * IP Address
     * 
     */
    @Import(name="ipv4Address", required=true)
    private Output<String> ipv4Address;

    /**
     * @return IP Address
     * 
     */
    public Output<String> ipv4Address() {
        return this.ipv4Address;
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4AddressVariable")
    private @Nullable Output<String> ipv4AddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4AddressVariable() {
        return Optional.ofNullable(this.ipv4AddressVariable);
    }

    /**
     * List of DHCP helper addresses
     * 
     */
    @Import(name="ipv4DhcpHelpers")
    private @Nullable Output<List<String>> ipv4DhcpHelpers;

    /**
     * @return List of DHCP helper addresses
     * 
     */
    public Optional<Output<List<String>>> ipv4DhcpHelpers() {
        return Optional.ofNullable(this.ipv4DhcpHelpers);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4DhcpHelpersVariable")
    private @Nullable Output<String> ipv4DhcpHelpersVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4DhcpHelpersVariable() {
        return Optional.ofNullable(this.ipv4DhcpHelpersVariable);
    }

    /**
     * Assign secondary IP addresses
     * 
     */
    @Import(name="ipv4SecondaryAddresses")
    private @Nullable Output<List<ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddressArgs>> ipv4SecondaryAddresses;

    /**
     * @return Assign secondary IP addresses
     * 
     */
    public Optional<Output<List<ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddressArgs>>> ipv4SecondaryAddresses() {
        return Optional.ofNullable(this.ipv4SecondaryAddresses);
    }

    /**
     * Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     * 
     */
    @Import(name="ipv4SubnetMask", required=true)
    private Output<String> ipv4SubnetMask;

    /**
     * @return Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     * 
     */
    public Output<String> ipv4SubnetMask() {
        return this.ipv4SubnetMask;
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4SubnetMaskVariable")
    private @Nullable Output<String> ipv4SubnetMaskVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4SubnetMaskVariable() {
        return Optional.ofNullable(this.ipv4SubnetMaskVariable);
    }

    /**
     * Enable ipv4 VRRP
     * 
     */
    @Import(name="ipv4Vrrps")
    private @Nullable Output<List<ServiceLanVpnInterfaceSviFeatureIpv4VrrpArgs>> ipv4Vrrps;

    /**
     * @return Enable ipv4 VRRP
     * 
     */
    public Optional<Output<List<ServiceLanVpnInterfaceSviFeatureIpv4VrrpArgs>>> ipv4Vrrps() {
        return Optional.ofNullable(this.ipv4Vrrps);
    }

    /**
     * Assign IPv6 address
     * 
     */
    @Import(name="ipv6Address")
    private @Nullable Output<String> ipv6Address;

    /**
     * @return Assign IPv6 address
     * 
     */
    public Optional<Output<String>> ipv6Address() {
        return Optional.ofNullable(this.ipv6Address);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv6AddressVariable")
    private @Nullable Output<String> ipv6AddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv6AddressVariable() {
        return Optional.ofNullable(this.ipv6AddressVariable);
    }

    /**
     * DHCPv6 Helper
     * 
     */
    @Import(name="ipv6DhcpHelpers")
    private @Nullable Output<List<ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelperArgs>> ipv6DhcpHelpers;

    /**
     * @return DHCPv6 Helper
     * 
     */
    public Optional<Output<List<ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelperArgs>>> ipv6DhcpHelpers() {
        return Optional.ofNullable(this.ipv6DhcpHelpers);
    }

    /**
     * Assign secondary IPv6 addresses
     * 
     */
    @Import(name="ipv6SecondaryAddresses")
    private @Nullable Output<List<ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddressArgs>> ipv6SecondaryAddresses;

    /**
     * @return Assign secondary IPv6 addresses
     * 
     */
    public Optional<Output<List<ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddressArgs>>> ipv6SecondaryAddresses() {
        return Optional.ofNullable(this.ipv6SecondaryAddresses);
    }

    /**
     * Enable ipv6 VRRP
     * 
     */
    @Import(name="ipv6Vrrps")
    private @Nullable Output<List<ServiceLanVpnInterfaceSviFeatureIpv6VrrpArgs>> ipv6Vrrps;

    /**
     * @return Enable ipv6 VRRP
     * 
     */
    public Optional<Output<List<ServiceLanVpnInterfaceSviFeatureIpv6VrrpArgs>>> ipv6Vrrps() {
        return Optional.ofNullable(this.ipv6Vrrps);
    }

    /**
     * The name of the Feature
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Service LAN VPN Feature ID
     * 
     */
    @Import(name="serviceLanVpnFeatureId")
    private @Nullable Output<String> serviceLanVpnFeatureId;

    /**
     * @return Service LAN VPN Feature ID
     * 
     */
    public Optional<Output<String>> serviceLanVpnFeatureId() {
        return Optional.ofNullable(this.serviceLanVpnFeatureId);
    }

    /**
     * Administrative state - Default value: `true`
     * 
     */
    @Import(name="shutdown")
    private @Nullable Output<Boolean> shutdown;

    /**
     * @return Administrative state - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> shutdown() {
        return Optional.ofNullable(this.shutdown);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="shutdownVariable")
    private @Nullable Output<String> shutdownVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> shutdownVariable() {
        return Optional.ofNullable(this.shutdownVariable);
    }

    /**
     * TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
     * 
     */
    @Import(name="tcpMss")
    private @Nullable Output<Integer> tcpMss;

    /**
     * @return TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
     * 
     */
    public Optional<Output<Integer>> tcpMss() {
        return Optional.ofNullable(this.tcpMss);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tcpMssVariable")
    private @Nullable Output<String> tcpMssVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tcpMssVariable() {
        return Optional.ofNullable(this.tcpMssVariable);
    }

    private ServiceLanVpnInterfaceSviFeatureArgs() {}

    private ServiceLanVpnInterfaceSviFeatureArgs(ServiceLanVpnInterfaceSviFeatureArgs $) {
        this.arpTimeout = $.arpTimeout;
        this.arpTimeoutVariable = $.arpTimeoutVariable;
        this.arps = $.arps;
        this.description = $.description;
        this.enableDhcpv6 = $.enableDhcpv6;
        this.enableDhcpv6Variable = $.enableDhcpv6Variable;
        this.featureProfileId = $.featureProfileId;
        this.icmpRedirectDisable = $.icmpRedirectDisable;
        this.icmpRedirectDisableVariable = $.icmpRedirectDisableVariable;
        this.interfaceDescription = $.interfaceDescription;
        this.interfaceDescriptionVariable = $.interfaceDescriptionVariable;
        this.interfaceMtu = $.interfaceMtu;
        this.interfaceMtuVariable = $.interfaceMtuVariable;
        this.interfaceName = $.interfaceName;
        this.interfaceNameVariable = $.interfaceNameVariable;
        this.ipDirectedBroadcast = $.ipDirectedBroadcast;
        this.ipDirectedBroadcastVariable = $.ipDirectedBroadcastVariable;
        this.ipMtu = $.ipMtu;
        this.ipMtuVariable = $.ipMtuVariable;
        this.ipv4Address = $.ipv4Address;
        this.ipv4AddressVariable = $.ipv4AddressVariable;
        this.ipv4DhcpHelpers = $.ipv4DhcpHelpers;
        this.ipv4DhcpHelpersVariable = $.ipv4DhcpHelpersVariable;
        this.ipv4SecondaryAddresses = $.ipv4SecondaryAddresses;
        this.ipv4SubnetMask = $.ipv4SubnetMask;
        this.ipv4SubnetMaskVariable = $.ipv4SubnetMaskVariable;
        this.ipv4Vrrps = $.ipv4Vrrps;
        this.ipv6Address = $.ipv6Address;
        this.ipv6AddressVariable = $.ipv6AddressVariable;
        this.ipv6DhcpHelpers = $.ipv6DhcpHelpers;
        this.ipv6SecondaryAddresses = $.ipv6SecondaryAddresses;
        this.ipv6Vrrps = $.ipv6Vrrps;
        this.name = $.name;
        this.serviceLanVpnFeatureId = $.serviceLanVpnFeatureId;
        this.shutdown = $.shutdown;
        this.shutdownVariable = $.shutdownVariable;
        this.tcpMss = $.tcpMss;
        this.tcpMssVariable = $.tcpMssVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceLanVpnInterfaceSviFeatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceLanVpnInterfaceSviFeatureArgs $;

        public Builder() {
            $ = new ServiceLanVpnInterfaceSviFeatureArgs();
        }

        public Builder(ServiceLanVpnInterfaceSviFeatureArgs defaults) {
            $ = new ServiceLanVpnInterfaceSviFeatureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param arpTimeout Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2678400` - Default value: `1200`
         * 
         * @return builder
         * 
         */
        public Builder arpTimeout(@Nullable Output<Integer> arpTimeout) {
            $.arpTimeout = arpTimeout;
            return this;
        }

        /**
         * @param arpTimeout Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2678400` - Default value: `1200`
         * 
         * @return builder
         * 
         */
        public Builder arpTimeout(Integer arpTimeout) {
            return arpTimeout(Output.of(arpTimeout));
        }

        /**
         * @param arpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder arpTimeoutVariable(@Nullable Output<String> arpTimeoutVariable) {
            $.arpTimeoutVariable = arpTimeoutVariable;
            return this;
        }

        /**
         * @param arpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder arpTimeoutVariable(String arpTimeoutVariable) {
            return arpTimeoutVariable(Output.of(arpTimeoutVariable));
        }

        /**
         * @param arps Configure static ARP entries
         * 
         * @return builder
         * 
         */
        public Builder arps(@Nullable Output<List<ServiceLanVpnInterfaceSviFeatureArpArgs>> arps) {
            $.arps = arps;
            return this;
        }

        /**
         * @param arps Configure static ARP entries
         * 
         * @return builder
         * 
         */
        public Builder arps(List<ServiceLanVpnInterfaceSviFeatureArpArgs> arps) {
            return arps(Output.of(arps));
        }

        /**
         * @param arps Configure static ARP entries
         * 
         * @return builder
         * 
         */
        public Builder arps(ServiceLanVpnInterfaceSviFeatureArpArgs... arps) {
            return arps(List.of(arps));
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param enableDhcpv6 Enable DHCPv6 - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder enableDhcpv6(@Nullable Output<Boolean> enableDhcpv6) {
            $.enableDhcpv6 = enableDhcpv6;
            return this;
        }

        /**
         * @param enableDhcpv6 Enable DHCPv6 - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder enableDhcpv6(Boolean enableDhcpv6) {
            return enableDhcpv6(Output.of(enableDhcpv6));
        }

        /**
         * @param enableDhcpv6Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enableDhcpv6Variable(@Nullable Output<String> enableDhcpv6Variable) {
            $.enableDhcpv6Variable = enableDhcpv6Variable;
            return this;
        }

        /**
         * @param enableDhcpv6Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enableDhcpv6Variable(String enableDhcpv6Variable) {
            return enableDhcpv6Variable(Output.of(enableDhcpv6Variable));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param icmpRedirectDisable ICMP/ICMPv6 Redirect Disable - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder icmpRedirectDisable(@Nullable Output<Boolean> icmpRedirectDisable) {
            $.icmpRedirectDisable = icmpRedirectDisable;
            return this;
        }

        /**
         * @param icmpRedirectDisable ICMP/ICMPv6 Redirect Disable - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder icmpRedirectDisable(Boolean icmpRedirectDisable) {
            return icmpRedirectDisable(Output.of(icmpRedirectDisable));
        }

        /**
         * @param icmpRedirectDisableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder icmpRedirectDisableVariable(@Nullable Output<String> icmpRedirectDisableVariable) {
            $.icmpRedirectDisableVariable = icmpRedirectDisableVariable;
            return this;
        }

        /**
         * @param icmpRedirectDisableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder icmpRedirectDisableVariable(String icmpRedirectDisableVariable) {
            return icmpRedirectDisableVariable(Output.of(icmpRedirectDisableVariable));
        }

        /**
         * @param interfaceDescription Interface description
         * 
         * @return builder
         * 
         */
        public Builder interfaceDescription(@Nullable Output<String> interfaceDescription) {
            $.interfaceDescription = interfaceDescription;
            return this;
        }

        /**
         * @param interfaceDescription Interface description
         * 
         * @return builder
         * 
         */
        public Builder interfaceDescription(String interfaceDescription) {
            return interfaceDescription(Output.of(interfaceDescription));
        }

        /**
         * @param interfaceDescriptionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceDescriptionVariable(@Nullable Output<String> interfaceDescriptionVariable) {
            $.interfaceDescriptionVariable = interfaceDescriptionVariable;
            return this;
        }

        /**
         * @param interfaceDescriptionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceDescriptionVariable(String interfaceDescriptionVariable) {
            return interfaceDescriptionVariable(Output.of(interfaceDescriptionVariable));
        }

        /**
         * @param interfaceMtu Interface MTU &lt;1500..9216&gt; in bytes - Range: `1500`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder interfaceMtu(@Nullable Output<Integer> interfaceMtu) {
            $.interfaceMtu = interfaceMtu;
            return this;
        }

        /**
         * @param interfaceMtu Interface MTU &lt;1500..9216&gt; in bytes - Range: `1500`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder interfaceMtu(Integer interfaceMtu) {
            return interfaceMtu(Output.of(interfaceMtu));
        }

        /**
         * @param interfaceMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceMtuVariable(@Nullable Output<String> interfaceMtuVariable) {
            $.interfaceMtuVariable = interfaceMtuVariable;
            return this;
        }

        /**
         * @param interfaceMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceMtuVariable(String interfaceMtuVariable) {
            return interfaceMtuVariable(Output.of(interfaceMtuVariable));
        }

        /**
         * @param interfaceName Interface name: VLAN 1 - VLAN 4094 when present
         * 
         * @return builder
         * 
         */
        public Builder interfaceName(Output<String> interfaceName) {
            $.interfaceName = interfaceName;
            return this;
        }

        /**
         * @param interfaceName Interface name: VLAN 1 - VLAN 4094 when present
         * 
         * @return builder
         * 
         */
        public Builder interfaceName(String interfaceName) {
            return interfaceName(Output.of(interfaceName));
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(@Nullable Output<String> interfaceNameVariable) {
            $.interfaceNameVariable = interfaceNameVariable;
            return this;
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(String interfaceNameVariable) {
            return interfaceNameVariable(Output.of(interfaceNameVariable));
        }

        /**
         * @param ipDirectedBroadcast IP Directed-Broadcast - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcast(@Nullable Output<Boolean> ipDirectedBroadcast) {
            $.ipDirectedBroadcast = ipDirectedBroadcast;
            return this;
        }

        /**
         * @param ipDirectedBroadcast IP Directed-Broadcast - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcast(Boolean ipDirectedBroadcast) {
            return ipDirectedBroadcast(Output.of(ipDirectedBroadcast));
        }

        /**
         * @param ipDirectedBroadcastVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcastVariable(@Nullable Output<String> ipDirectedBroadcastVariable) {
            $.ipDirectedBroadcastVariable = ipDirectedBroadcastVariable;
            return this;
        }

        /**
         * @param ipDirectedBroadcastVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcastVariable(String ipDirectedBroadcastVariable) {
            return ipDirectedBroadcastVariable(Output.of(ipDirectedBroadcastVariable));
        }

        /**
         * @param ipMtu IP MTU &lt;576..Interface MTU&gt;, in bytes - Range: `576`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder ipMtu(@Nullable Output<Integer> ipMtu) {
            $.ipMtu = ipMtu;
            return this;
        }

        /**
         * @param ipMtu IP MTU &lt;576..Interface MTU&gt;, in bytes - Range: `576`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder ipMtu(Integer ipMtu) {
            return ipMtu(Output.of(ipMtu));
        }

        /**
         * @param ipMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipMtuVariable(@Nullable Output<String> ipMtuVariable) {
            $.ipMtuVariable = ipMtuVariable;
            return this;
        }

        /**
         * @param ipMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipMtuVariable(String ipMtuVariable) {
            return ipMtuVariable(Output.of(ipMtuVariable));
        }

        /**
         * @param ipv4Address IP Address
         * 
         * @return builder
         * 
         */
        public Builder ipv4Address(Output<String> ipv4Address) {
            $.ipv4Address = ipv4Address;
            return this;
        }

        /**
         * @param ipv4Address IP Address
         * 
         * @return builder
         * 
         */
        public Builder ipv4Address(String ipv4Address) {
            return ipv4Address(Output.of(ipv4Address));
        }

        /**
         * @param ipv4AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4AddressVariable(@Nullable Output<String> ipv4AddressVariable) {
            $.ipv4AddressVariable = ipv4AddressVariable;
            return this;
        }

        /**
         * @param ipv4AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4AddressVariable(String ipv4AddressVariable) {
            return ipv4AddressVariable(Output.of(ipv4AddressVariable));
        }

        /**
         * @param ipv4DhcpHelpers List of DHCP helper addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpers(@Nullable Output<List<String>> ipv4DhcpHelpers) {
            $.ipv4DhcpHelpers = ipv4DhcpHelpers;
            return this;
        }

        /**
         * @param ipv4DhcpHelpers List of DHCP helper addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpers(List<String> ipv4DhcpHelpers) {
            return ipv4DhcpHelpers(Output.of(ipv4DhcpHelpers));
        }

        /**
         * @param ipv4DhcpHelpers List of DHCP helper addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpers(String... ipv4DhcpHelpers) {
            return ipv4DhcpHelpers(List.of(ipv4DhcpHelpers));
        }

        /**
         * @param ipv4DhcpHelpersVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpersVariable(@Nullable Output<String> ipv4DhcpHelpersVariable) {
            $.ipv4DhcpHelpersVariable = ipv4DhcpHelpersVariable;
            return this;
        }

        /**
         * @param ipv4DhcpHelpersVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpersVariable(String ipv4DhcpHelpersVariable) {
            return ipv4DhcpHelpersVariable(Output.of(ipv4DhcpHelpersVariable));
        }

        /**
         * @param ipv4SecondaryAddresses Assign secondary IP addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4SecondaryAddresses(@Nullable Output<List<ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddressArgs>> ipv4SecondaryAddresses) {
            $.ipv4SecondaryAddresses = ipv4SecondaryAddresses;
            return this;
        }

        /**
         * @param ipv4SecondaryAddresses Assign secondary IP addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4SecondaryAddresses(List<ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddressArgs> ipv4SecondaryAddresses) {
            return ipv4SecondaryAddresses(Output.of(ipv4SecondaryAddresses));
        }

        /**
         * @param ipv4SecondaryAddresses Assign secondary IP addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4SecondaryAddresses(ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddressArgs... ipv4SecondaryAddresses) {
            return ipv4SecondaryAddresses(List.of(ipv4SecondaryAddresses));
        }

        /**
         * @param ipv4SubnetMask Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
         * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
         * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
         * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
         * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder ipv4SubnetMask(Output<String> ipv4SubnetMask) {
            $.ipv4SubnetMask = ipv4SubnetMask;
            return this;
        }

        /**
         * @param ipv4SubnetMask Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
         * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
         * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
         * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
         * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder ipv4SubnetMask(String ipv4SubnetMask) {
            return ipv4SubnetMask(Output.of(ipv4SubnetMask));
        }

        /**
         * @param ipv4SubnetMaskVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4SubnetMaskVariable(@Nullable Output<String> ipv4SubnetMaskVariable) {
            $.ipv4SubnetMaskVariable = ipv4SubnetMaskVariable;
            return this;
        }

        /**
         * @param ipv4SubnetMaskVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4SubnetMaskVariable(String ipv4SubnetMaskVariable) {
            return ipv4SubnetMaskVariable(Output.of(ipv4SubnetMaskVariable));
        }

        /**
         * @param ipv4Vrrps Enable ipv4 VRRP
         * 
         * @return builder
         * 
         */
        public Builder ipv4Vrrps(@Nullable Output<List<ServiceLanVpnInterfaceSviFeatureIpv4VrrpArgs>> ipv4Vrrps) {
            $.ipv4Vrrps = ipv4Vrrps;
            return this;
        }

        /**
         * @param ipv4Vrrps Enable ipv4 VRRP
         * 
         * @return builder
         * 
         */
        public Builder ipv4Vrrps(List<ServiceLanVpnInterfaceSviFeatureIpv4VrrpArgs> ipv4Vrrps) {
            return ipv4Vrrps(Output.of(ipv4Vrrps));
        }

        /**
         * @param ipv4Vrrps Enable ipv4 VRRP
         * 
         * @return builder
         * 
         */
        public Builder ipv4Vrrps(ServiceLanVpnInterfaceSviFeatureIpv4VrrpArgs... ipv4Vrrps) {
            return ipv4Vrrps(List.of(ipv4Vrrps));
        }

        /**
         * @param ipv6Address Assign IPv6 address
         * 
         * @return builder
         * 
         */
        public Builder ipv6Address(@Nullable Output<String> ipv6Address) {
            $.ipv6Address = ipv6Address;
            return this;
        }

        /**
         * @param ipv6Address Assign IPv6 address
         * 
         * @return builder
         * 
         */
        public Builder ipv6Address(String ipv6Address) {
            return ipv6Address(Output.of(ipv6Address));
        }

        /**
         * @param ipv6AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv6AddressVariable(@Nullable Output<String> ipv6AddressVariable) {
            $.ipv6AddressVariable = ipv6AddressVariable;
            return this;
        }

        /**
         * @param ipv6AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv6AddressVariable(String ipv6AddressVariable) {
            return ipv6AddressVariable(Output.of(ipv6AddressVariable));
        }

        /**
         * @param ipv6DhcpHelpers DHCPv6 Helper
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpHelpers(@Nullable Output<List<ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelperArgs>> ipv6DhcpHelpers) {
            $.ipv6DhcpHelpers = ipv6DhcpHelpers;
            return this;
        }

        /**
         * @param ipv6DhcpHelpers DHCPv6 Helper
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpHelpers(List<ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelperArgs> ipv6DhcpHelpers) {
            return ipv6DhcpHelpers(Output.of(ipv6DhcpHelpers));
        }

        /**
         * @param ipv6DhcpHelpers DHCPv6 Helper
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpHelpers(ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelperArgs... ipv6DhcpHelpers) {
            return ipv6DhcpHelpers(List.of(ipv6DhcpHelpers));
        }

        /**
         * @param ipv6SecondaryAddresses Assign secondary IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv6SecondaryAddresses(@Nullable Output<List<ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddressArgs>> ipv6SecondaryAddresses) {
            $.ipv6SecondaryAddresses = ipv6SecondaryAddresses;
            return this;
        }

        /**
         * @param ipv6SecondaryAddresses Assign secondary IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv6SecondaryAddresses(List<ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddressArgs> ipv6SecondaryAddresses) {
            return ipv6SecondaryAddresses(Output.of(ipv6SecondaryAddresses));
        }

        /**
         * @param ipv6SecondaryAddresses Assign secondary IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv6SecondaryAddresses(ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddressArgs... ipv6SecondaryAddresses) {
            return ipv6SecondaryAddresses(List.of(ipv6SecondaryAddresses));
        }

        /**
         * @param ipv6Vrrps Enable ipv6 VRRP
         * 
         * @return builder
         * 
         */
        public Builder ipv6Vrrps(@Nullable Output<List<ServiceLanVpnInterfaceSviFeatureIpv6VrrpArgs>> ipv6Vrrps) {
            $.ipv6Vrrps = ipv6Vrrps;
            return this;
        }

        /**
         * @param ipv6Vrrps Enable ipv6 VRRP
         * 
         * @return builder
         * 
         */
        public Builder ipv6Vrrps(List<ServiceLanVpnInterfaceSviFeatureIpv6VrrpArgs> ipv6Vrrps) {
            return ipv6Vrrps(Output.of(ipv6Vrrps));
        }

        /**
         * @param ipv6Vrrps Enable ipv6 VRRP
         * 
         * @return builder
         * 
         */
        public Builder ipv6Vrrps(ServiceLanVpnInterfaceSviFeatureIpv6VrrpArgs... ipv6Vrrps) {
            return ipv6Vrrps(List.of(ipv6Vrrps));
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param serviceLanVpnFeatureId Service LAN VPN Feature ID
         * 
         * @return builder
         * 
         */
        public Builder serviceLanVpnFeatureId(@Nullable Output<String> serviceLanVpnFeatureId) {
            $.serviceLanVpnFeatureId = serviceLanVpnFeatureId;
            return this;
        }

        /**
         * @param serviceLanVpnFeatureId Service LAN VPN Feature ID
         * 
         * @return builder
         * 
         */
        public Builder serviceLanVpnFeatureId(String serviceLanVpnFeatureId) {
            return serviceLanVpnFeatureId(Output.of(serviceLanVpnFeatureId));
        }

        /**
         * @param shutdown Administrative state - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder shutdown(@Nullable Output<Boolean> shutdown) {
            $.shutdown = shutdown;
            return this;
        }

        /**
         * @param shutdown Administrative state - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder shutdown(Boolean shutdown) {
            return shutdown(Output.of(shutdown));
        }

        /**
         * @param shutdownVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdownVariable(@Nullable Output<String> shutdownVariable) {
            $.shutdownVariable = shutdownVariable;
            return this;
        }

        /**
         * @param shutdownVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdownVariable(String shutdownVariable) {
            return shutdownVariable(Output.of(shutdownVariable));
        }

        /**
         * @param tcpMss TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
         * 
         * @return builder
         * 
         */
        public Builder tcpMss(@Nullable Output<Integer> tcpMss) {
            $.tcpMss = tcpMss;
            return this;
        }

        /**
         * @param tcpMss TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
         * 
         * @return builder
         * 
         */
        public Builder tcpMss(Integer tcpMss) {
            return tcpMss(Output.of(tcpMss));
        }

        /**
         * @param tcpMssVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tcpMssVariable(@Nullable Output<String> tcpMssVariable) {
            $.tcpMssVariable = tcpMssVariable;
            return this;
        }

        /**
         * @param tcpMssVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tcpMssVariable(String tcpMssVariable) {
            return tcpMssVariable(Output.of(tcpMssVariable));
        }

        public ServiceLanVpnInterfaceSviFeatureArgs build() {
            if ($.featureProfileId == null) {
                throw new MissingRequiredPropertyException("ServiceLanVpnInterfaceSviFeatureArgs", "featureProfileId");
            }
            if ($.interfaceName == null) {
                throw new MissingRequiredPropertyException("ServiceLanVpnInterfaceSviFeatureArgs", "interfaceName");
            }
            if ($.ipv4Address == null) {
                throw new MissingRequiredPropertyException("ServiceLanVpnInterfaceSviFeatureArgs", "ipv4Address");
            }
            if ($.ipv4SubnetMask == null) {
                throw new MissingRequiredPropertyException("ServiceLanVpnInterfaceSviFeatureArgs", "ipv4SubnetMask");
            }
            return $;
        }
    }

}
