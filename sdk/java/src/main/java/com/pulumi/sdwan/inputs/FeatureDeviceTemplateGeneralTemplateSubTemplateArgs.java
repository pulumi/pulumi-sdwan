// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.FeatureDeviceTemplateGeneralTemplateSubTemplateSubTemplateArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FeatureDeviceTemplateGeneralTemplateSubTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final FeatureDeviceTemplateGeneralTemplateSubTemplateArgs Empty = new FeatureDeviceTemplateGeneralTemplateSubTemplateArgs();

    /**
     * Feature template ID
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return Feature template ID
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * List of sub templates
     * 
     */
    @Import(name="subTemplates")
    private @Nullable Output<List<FeatureDeviceTemplateGeneralTemplateSubTemplateSubTemplateArgs>> subTemplates;

    /**
     * @return List of sub templates
     * 
     */
    public Optional<Output<List<FeatureDeviceTemplateGeneralTemplateSubTemplateSubTemplateArgs>>> subTemplates() {
        return Optional.ofNullable(this.subTemplates);
    }

    /**
     * Feature template type
     *   - Choices: `cisco_logging`, `cisco_ntp`, `cisco_ospf`, `cisco_bgp`, `cisco_vpn_interface`, `cisco_vpn_interface_ipsec`, `vpn-interface-svi`, `cisco_secure_internet_gateway`
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Feature template type
     *   - Choices: `cisco_logging`, `cisco_ntp`, `cisco_ospf`, `cisco_bgp`, `cisco_vpn_interface`, `cisco_vpn_interface_ipsec`, `vpn-interface-svi`, `cisco_secure_internet_gateway`
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * Feature template version
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return Feature template version
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private FeatureDeviceTemplateGeneralTemplateSubTemplateArgs() {}

    private FeatureDeviceTemplateGeneralTemplateSubTemplateArgs(FeatureDeviceTemplateGeneralTemplateSubTemplateArgs $) {
        this.id = $.id;
        this.subTemplates = $.subTemplates;
        this.type = $.type;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeatureDeviceTemplateGeneralTemplateSubTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeatureDeviceTemplateGeneralTemplateSubTemplateArgs $;

        public Builder() {
            $ = new FeatureDeviceTemplateGeneralTemplateSubTemplateArgs();
        }

        public Builder(FeatureDeviceTemplateGeneralTemplateSubTemplateArgs defaults) {
            $ = new FeatureDeviceTemplateGeneralTemplateSubTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Feature template ID
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Feature template ID
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param subTemplates List of sub templates
         * 
         * @return builder
         * 
         */
        public Builder subTemplates(@Nullable Output<List<FeatureDeviceTemplateGeneralTemplateSubTemplateSubTemplateArgs>> subTemplates) {
            $.subTemplates = subTemplates;
            return this;
        }

        /**
         * @param subTemplates List of sub templates
         * 
         * @return builder
         * 
         */
        public Builder subTemplates(List<FeatureDeviceTemplateGeneralTemplateSubTemplateSubTemplateArgs> subTemplates) {
            return subTemplates(Output.of(subTemplates));
        }

        /**
         * @param subTemplates List of sub templates
         * 
         * @return builder
         * 
         */
        public Builder subTemplates(FeatureDeviceTemplateGeneralTemplateSubTemplateSubTemplateArgs... subTemplates) {
            return subTemplates(List.of(subTemplates));
        }

        /**
         * @param type Feature template type
         *   - Choices: `cisco_logging`, `cisco_ntp`, `cisco_ospf`, `cisco_bgp`, `cisco_vpn_interface`, `cisco_vpn_interface_ipsec`, `vpn-interface-svi`, `cisco_secure_internet_gateway`
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Feature template type
         *   - Choices: `cisco_logging`, `cisco_ntp`, `cisco_ospf`, `cisco_bgp`, `cisco_vpn_interface`, `cisco_vpn_interface_ipsec`, `vpn-interface-svi`, `cisco_secure_internet_gateway`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param version Feature template version
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Feature template version
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public FeatureDeviceTemplateGeneralTemplateSubTemplateArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("FeatureDeviceTemplateGeneralTemplateSubTemplateArgs", "id");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("FeatureDeviceTemplateGeneralTemplateSubTemplateArgs", "type");
            }
            return $;
        }
    }

}
