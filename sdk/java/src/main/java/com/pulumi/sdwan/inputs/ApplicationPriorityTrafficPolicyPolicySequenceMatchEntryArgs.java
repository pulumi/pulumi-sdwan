// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationPriorityTrafficPolicyPolicySequenceMatchEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationPriorityTrafficPolicyPolicySequenceMatchEntryArgs Empty = new ApplicationPriorityTrafficPolicyPolicySequenceMatchEntryArgs();

    @Import(name="applicationListId")
    private @Nullable Output<String> applicationListId;

    public Optional<Output<String>> applicationListId() {
        return Optional.ofNullable(this.applicationListId);
    }

    @Import(name="destinationDataIpv4PrefixListId")
    private @Nullable Output<String> destinationDataIpv4PrefixListId;

    public Optional<Output<String>> destinationDataIpv4PrefixListId() {
        return Optional.ofNullable(this.destinationDataIpv4PrefixListId);
    }

    @Import(name="destinationDataIpv6PrefixListId")
    private @Nullable Output<String> destinationDataIpv6PrefixListId;

    public Optional<Output<String>> destinationDataIpv6PrefixListId() {
        return Optional.ofNullable(this.destinationDataIpv6PrefixListId);
    }

    /**
     * Destination Data IP Prefix
     * 
     */
    @Import(name="destinationIpv4Prefix")
    private @Nullable Output<String> destinationIpv4Prefix;

    /**
     * @return Destination Data IP Prefix
     * 
     */
    public Optional<Output<String>> destinationIpv4Prefix() {
        return Optional.ofNullable(this.destinationIpv4Prefix);
    }

    /**
     * Destination Data IP Prefix
     * 
     */
    @Import(name="destinationIpv6Prefix")
    private @Nullable Output<String> destinationIpv6Prefix;

    /**
     * @return Destination Data IP Prefix
     * 
     */
    public Optional<Output<String>> destinationIpv6Prefix() {
        return Optional.ofNullable(this.destinationIpv6Prefix);
    }

    /**
     * Destination Port (0-65535) range or individual number separated by space
     * 
     */
    @Import(name="destinationPorts")
    private @Nullable Output<List<String>> destinationPorts;

    /**
     * @return Destination Port (0-65535) range or individual number separated by space
     * 
     */
    public Optional<Output<List<String>>> destinationPorts() {
        return Optional.ofNullable(this.destinationPorts);
    }

    /**
     * Destination Region
     *   - Choices: `primary-region`, `secondary-region`, `other-region`
     * 
     */
    @Import(name="destinationRegion")
    private @Nullable Output<String> destinationRegion;

    /**
     * @return Destination Region
     *   - Choices: `primary-region`, `secondary-region`, `other-region`
     * 
     */
    public Optional<Output<String>> destinationRegion() {
        return Optional.ofNullable(this.destinationRegion);
    }

    /**
     * Dns
     *   - Choices: `request`, `response`
     * 
     */
    @Import(name="dns")
    private @Nullable Output<String> dns;

    /**
     * @return Dns
     *   - Choices: `request`, `response`
     * 
     */
    public Optional<Output<String>> dns() {
        return Optional.ofNullable(this.dns);
    }

    @Import(name="dnsApplicationListId")
    private @Nullable Output<String> dnsApplicationListId;

    public Optional<Output<String>> dnsApplicationListId() {
        return Optional.ofNullable(this.dnsApplicationListId);
    }

    /**
     * DSCP number
     *   - Range: `0`-`63`
     * 
     */
    @Import(name="dscp")
    private @Nullable Output<Integer> dscp;

    /**
     * @return DSCP number
     *   - Range: `0`-`63`
     * 
     */
    public Optional<Output<Integer>> dscp() {
        return Optional.ofNullable(this.dscp);
    }

    /**
     * ICMP6 Message
     * 
     */
    @Import(name="icmp6Messages")
    private @Nullable Output<List<String>> icmp6Messages;

    /**
     * @return ICMP6 Message
     * 
     */
    public Optional<Output<List<String>>> icmp6Messages() {
        return Optional.ofNullable(this.icmp6Messages);
    }

    /**
     * ICMP Message
     * 
     */
    @Import(name="icmpMessages")
    private @Nullable Output<List<String>> icmpMessages;

    /**
     * @return ICMP Message
     * 
     */
    public Optional<Output<List<String>>> icmpMessages() {
        return Optional.ofNullable(this.icmpMessages);
    }

    /**
     * Packet Length
     * 
     */
    @Import(name="packetLength")
    private @Nullable Output<String> packetLength;

    /**
     * @return Packet Length
     * 
     */
    public Optional<Output<String>> packetLength() {
        return Optional.ofNullable(this.packetLength);
    }

    /**
     * protocol (0-255) range or individual number separated by space
     * 
     */
    @Import(name="protocols")
    private @Nullable Output<List<String>> protocols;

    /**
     * @return protocol (0-255) range or individual number separated by space
     * 
     */
    public Optional<Output<List<String>>> protocols() {
        return Optional.ofNullable(this.protocols);
    }

    @Import(name="saasApplicationListId")
    private @Nullable Output<String> saasApplicationListId;

    public Optional<Output<String>> saasApplicationListId() {
        return Optional.ofNullable(this.saasApplicationListId);
    }

    /**
     * M365 Service Area
     * 
     */
    @Import(name="serviceAreas")
    private @Nullable Output<List<String>> serviceAreas;

    /**
     * @return M365 Service Area
     * 
     */
    public Optional<Output<List<String>>> serviceAreas() {
        return Optional.ofNullable(this.serviceAreas);
    }

    @Import(name="sourceDataIpv4PrefxListId")
    private @Nullable Output<String> sourceDataIpv4PrefxListId;

    public Optional<Output<String>> sourceDataIpv4PrefxListId() {
        return Optional.ofNullable(this.sourceDataIpv4PrefxListId);
    }

    @Import(name="sourceDataIpv6PrefxListId")
    private @Nullable Output<String> sourceDataIpv6PrefxListId;

    public Optional<Output<String>> sourceDataIpv6PrefxListId() {
        return Optional.ofNullable(this.sourceDataIpv6PrefxListId);
    }

    /**
     * Source Data IP Prefix
     * 
     */
    @Import(name="sourceIpv4Prefix")
    private @Nullable Output<String> sourceIpv4Prefix;

    /**
     * @return Source Data IP Prefix
     * 
     */
    public Optional<Output<String>> sourceIpv4Prefix() {
        return Optional.ofNullable(this.sourceIpv4Prefix);
    }

    /**
     * Source Data IP Prefix
     * 
     */
    @Import(name="sourceIpv6Prefix")
    private @Nullable Output<String> sourceIpv6Prefix;

    /**
     * @return Source Data IP Prefix
     * 
     */
    public Optional<Output<String>> sourceIpv6Prefix() {
        return Optional.ofNullable(this.sourceIpv6Prefix);
    }

    /**
     * Source Port (0-65535) range or individual number separated by space
     * 
     */
    @Import(name="sourcePorts")
    private @Nullable Output<List<String>> sourcePorts;

    /**
     * @return Source Port (0-65535) range or individual number separated by space
     * 
     */
    public Optional<Output<List<String>>> sourcePorts() {
        return Optional.ofNullable(this.sourcePorts);
    }

    /**
     * TCP States
     *   - Choices: `syn`
     * 
     */
    @Import(name="tcp")
    private @Nullable Output<String> tcp;

    /**
     * @return TCP States
     *   - Choices: `syn`
     * 
     */
    public Optional<Output<String>> tcp() {
        return Optional.ofNullable(this.tcp);
    }

    /**
     * M365 Traffic Category
     *   - Choices: `optimize-allow`, `optimize`, `all`
     * 
     */
    @Import(name="trafficCategory")
    private @Nullable Output<String> trafficCategory;

    /**
     * @return M365 Traffic Category
     *   - Choices: `optimize-allow`, `optimize`, `all`
     * 
     */
    public Optional<Output<String>> trafficCategory() {
        return Optional.ofNullable(this.trafficCategory);
    }

    /**
     * Traffic Class
     *   - Choices: `gold-voip-telephony`, `gold-broadcast-video`, `gold-real-time-interactive`, `gold-multimedia-conferencing`, `gold-multimedia-streaming`, `gold-network-control`, `gold-signaling`, `gold-ops-admin-mgmt`, `gold-transactional-data`, `gold-bulk-data`, `silver`, `bronze`
     * 
     */
    @Import(name="trafficClass")
    private @Nullable Output<String> trafficClass;

    /**
     * @return Traffic Class
     *   - Choices: `gold-voip-telephony`, `gold-broadcast-video`, `gold-real-time-interactive`, `gold-multimedia-conferencing`, `gold-multimedia-streaming`, `gold-network-control`, `gold-signaling`, `gold-ops-admin-mgmt`, `gold-transactional-data`, `gold-bulk-data`, `silver`, `bronze`
     * 
     */
    public Optional<Output<String>> trafficClass() {
        return Optional.ofNullable(this.trafficClass);
    }

    /**
     * Traffic to
     *   - Choices: `core`, `service`, `access`
     * 
     */
    @Import(name="trafficTo")
    private @Nullable Output<String> trafficTo;

    /**
     * @return Traffic to
     *   - Choices: `core`, `service`, `access`
     * 
     */
    public Optional<Output<String>> trafficTo() {
        return Optional.ofNullable(this.trafficTo);
    }

    private ApplicationPriorityTrafficPolicyPolicySequenceMatchEntryArgs() {}

    private ApplicationPriorityTrafficPolicyPolicySequenceMatchEntryArgs(ApplicationPriorityTrafficPolicyPolicySequenceMatchEntryArgs $) {
        this.applicationListId = $.applicationListId;
        this.destinationDataIpv4PrefixListId = $.destinationDataIpv4PrefixListId;
        this.destinationDataIpv6PrefixListId = $.destinationDataIpv6PrefixListId;
        this.destinationIpv4Prefix = $.destinationIpv4Prefix;
        this.destinationIpv6Prefix = $.destinationIpv6Prefix;
        this.destinationPorts = $.destinationPorts;
        this.destinationRegion = $.destinationRegion;
        this.dns = $.dns;
        this.dnsApplicationListId = $.dnsApplicationListId;
        this.dscp = $.dscp;
        this.icmp6Messages = $.icmp6Messages;
        this.icmpMessages = $.icmpMessages;
        this.packetLength = $.packetLength;
        this.protocols = $.protocols;
        this.saasApplicationListId = $.saasApplicationListId;
        this.serviceAreas = $.serviceAreas;
        this.sourceDataIpv4PrefxListId = $.sourceDataIpv4PrefxListId;
        this.sourceDataIpv6PrefxListId = $.sourceDataIpv6PrefxListId;
        this.sourceIpv4Prefix = $.sourceIpv4Prefix;
        this.sourceIpv6Prefix = $.sourceIpv6Prefix;
        this.sourcePorts = $.sourcePorts;
        this.tcp = $.tcp;
        this.trafficCategory = $.trafficCategory;
        this.trafficClass = $.trafficClass;
        this.trafficTo = $.trafficTo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationPriorityTrafficPolicyPolicySequenceMatchEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationPriorityTrafficPolicyPolicySequenceMatchEntryArgs $;

        public Builder() {
            $ = new ApplicationPriorityTrafficPolicyPolicySequenceMatchEntryArgs();
        }

        public Builder(ApplicationPriorityTrafficPolicyPolicySequenceMatchEntryArgs defaults) {
            $ = new ApplicationPriorityTrafficPolicyPolicySequenceMatchEntryArgs(Objects.requireNonNull(defaults));
        }

        public Builder applicationListId(@Nullable Output<String> applicationListId) {
            $.applicationListId = applicationListId;
            return this;
        }

        public Builder applicationListId(String applicationListId) {
            return applicationListId(Output.of(applicationListId));
        }

        public Builder destinationDataIpv4PrefixListId(@Nullable Output<String> destinationDataIpv4PrefixListId) {
            $.destinationDataIpv4PrefixListId = destinationDataIpv4PrefixListId;
            return this;
        }

        public Builder destinationDataIpv4PrefixListId(String destinationDataIpv4PrefixListId) {
            return destinationDataIpv4PrefixListId(Output.of(destinationDataIpv4PrefixListId));
        }

        public Builder destinationDataIpv6PrefixListId(@Nullable Output<String> destinationDataIpv6PrefixListId) {
            $.destinationDataIpv6PrefixListId = destinationDataIpv6PrefixListId;
            return this;
        }

        public Builder destinationDataIpv6PrefixListId(String destinationDataIpv6PrefixListId) {
            return destinationDataIpv6PrefixListId(Output.of(destinationDataIpv6PrefixListId));
        }

        /**
         * @param destinationIpv4Prefix Destination Data IP Prefix
         * 
         * @return builder
         * 
         */
        public Builder destinationIpv4Prefix(@Nullable Output<String> destinationIpv4Prefix) {
            $.destinationIpv4Prefix = destinationIpv4Prefix;
            return this;
        }

        /**
         * @param destinationIpv4Prefix Destination Data IP Prefix
         * 
         * @return builder
         * 
         */
        public Builder destinationIpv4Prefix(String destinationIpv4Prefix) {
            return destinationIpv4Prefix(Output.of(destinationIpv4Prefix));
        }

        /**
         * @param destinationIpv6Prefix Destination Data IP Prefix
         * 
         * @return builder
         * 
         */
        public Builder destinationIpv6Prefix(@Nullable Output<String> destinationIpv6Prefix) {
            $.destinationIpv6Prefix = destinationIpv6Prefix;
            return this;
        }

        /**
         * @param destinationIpv6Prefix Destination Data IP Prefix
         * 
         * @return builder
         * 
         */
        public Builder destinationIpv6Prefix(String destinationIpv6Prefix) {
            return destinationIpv6Prefix(Output.of(destinationIpv6Prefix));
        }

        /**
         * @param destinationPorts Destination Port (0-65535) range or individual number separated by space
         * 
         * @return builder
         * 
         */
        public Builder destinationPorts(@Nullable Output<List<String>> destinationPorts) {
            $.destinationPorts = destinationPorts;
            return this;
        }

        /**
         * @param destinationPorts Destination Port (0-65535) range or individual number separated by space
         * 
         * @return builder
         * 
         */
        public Builder destinationPorts(List<String> destinationPorts) {
            return destinationPorts(Output.of(destinationPorts));
        }

        /**
         * @param destinationPorts Destination Port (0-65535) range or individual number separated by space
         * 
         * @return builder
         * 
         */
        public Builder destinationPorts(String... destinationPorts) {
            return destinationPorts(List.of(destinationPorts));
        }

        /**
         * @param destinationRegion Destination Region
         *   - Choices: `primary-region`, `secondary-region`, `other-region`
         * 
         * @return builder
         * 
         */
        public Builder destinationRegion(@Nullable Output<String> destinationRegion) {
            $.destinationRegion = destinationRegion;
            return this;
        }

        /**
         * @param destinationRegion Destination Region
         *   - Choices: `primary-region`, `secondary-region`, `other-region`
         * 
         * @return builder
         * 
         */
        public Builder destinationRegion(String destinationRegion) {
            return destinationRegion(Output.of(destinationRegion));
        }

        /**
         * @param dns Dns
         *   - Choices: `request`, `response`
         * 
         * @return builder
         * 
         */
        public Builder dns(@Nullable Output<String> dns) {
            $.dns = dns;
            return this;
        }

        /**
         * @param dns Dns
         *   - Choices: `request`, `response`
         * 
         * @return builder
         * 
         */
        public Builder dns(String dns) {
            return dns(Output.of(dns));
        }

        public Builder dnsApplicationListId(@Nullable Output<String> dnsApplicationListId) {
            $.dnsApplicationListId = dnsApplicationListId;
            return this;
        }

        public Builder dnsApplicationListId(String dnsApplicationListId) {
            return dnsApplicationListId(Output.of(dnsApplicationListId));
        }

        /**
         * @param dscp DSCP number
         *   - Range: `0`-`63`
         * 
         * @return builder
         * 
         */
        public Builder dscp(@Nullable Output<Integer> dscp) {
            $.dscp = dscp;
            return this;
        }

        /**
         * @param dscp DSCP number
         *   - Range: `0`-`63`
         * 
         * @return builder
         * 
         */
        public Builder dscp(Integer dscp) {
            return dscp(Output.of(dscp));
        }

        /**
         * @param icmp6Messages ICMP6 Message
         * 
         * @return builder
         * 
         */
        public Builder icmp6Messages(@Nullable Output<List<String>> icmp6Messages) {
            $.icmp6Messages = icmp6Messages;
            return this;
        }

        /**
         * @param icmp6Messages ICMP6 Message
         * 
         * @return builder
         * 
         */
        public Builder icmp6Messages(List<String> icmp6Messages) {
            return icmp6Messages(Output.of(icmp6Messages));
        }

        /**
         * @param icmp6Messages ICMP6 Message
         * 
         * @return builder
         * 
         */
        public Builder icmp6Messages(String... icmp6Messages) {
            return icmp6Messages(List.of(icmp6Messages));
        }

        /**
         * @param icmpMessages ICMP Message
         * 
         * @return builder
         * 
         */
        public Builder icmpMessages(@Nullable Output<List<String>> icmpMessages) {
            $.icmpMessages = icmpMessages;
            return this;
        }

        /**
         * @param icmpMessages ICMP Message
         * 
         * @return builder
         * 
         */
        public Builder icmpMessages(List<String> icmpMessages) {
            return icmpMessages(Output.of(icmpMessages));
        }

        /**
         * @param icmpMessages ICMP Message
         * 
         * @return builder
         * 
         */
        public Builder icmpMessages(String... icmpMessages) {
            return icmpMessages(List.of(icmpMessages));
        }

        /**
         * @param packetLength Packet Length
         * 
         * @return builder
         * 
         */
        public Builder packetLength(@Nullable Output<String> packetLength) {
            $.packetLength = packetLength;
            return this;
        }

        /**
         * @param packetLength Packet Length
         * 
         * @return builder
         * 
         */
        public Builder packetLength(String packetLength) {
            return packetLength(Output.of(packetLength));
        }

        /**
         * @param protocols protocol (0-255) range or individual number separated by space
         * 
         * @return builder
         * 
         */
        public Builder protocols(@Nullable Output<List<String>> protocols) {
            $.protocols = protocols;
            return this;
        }

        /**
         * @param protocols protocol (0-255) range or individual number separated by space
         * 
         * @return builder
         * 
         */
        public Builder protocols(List<String> protocols) {
            return protocols(Output.of(protocols));
        }

        /**
         * @param protocols protocol (0-255) range or individual number separated by space
         * 
         * @return builder
         * 
         */
        public Builder protocols(String... protocols) {
            return protocols(List.of(protocols));
        }

        public Builder saasApplicationListId(@Nullable Output<String> saasApplicationListId) {
            $.saasApplicationListId = saasApplicationListId;
            return this;
        }

        public Builder saasApplicationListId(String saasApplicationListId) {
            return saasApplicationListId(Output.of(saasApplicationListId));
        }

        /**
         * @param serviceAreas M365 Service Area
         * 
         * @return builder
         * 
         */
        public Builder serviceAreas(@Nullable Output<List<String>> serviceAreas) {
            $.serviceAreas = serviceAreas;
            return this;
        }

        /**
         * @param serviceAreas M365 Service Area
         * 
         * @return builder
         * 
         */
        public Builder serviceAreas(List<String> serviceAreas) {
            return serviceAreas(Output.of(serviceAreas));
        }

        /**
         * @param serviceAreas M365 Service Area
         * 
         * @return builder
         * 
         */
        public Builder serviceAreas(String... serviceAreas) {
            return serviceAreas(List.of(serviceAreas));
        }

        public Builder sourceDataIpv4PrefxListId(@Nullable Output<String> sourceDataIpv4PrefxListId) {
            $.sourceDataIpv4PrefxListId = sourceDataIpv4PrefxListId;
            return this;
        }

        public Builder sourceDataIpv4PrefxListId(String sourceDataIpv4PrefxListId) {
            return sourceDataIpv4PrefxListId(Output.of(sourceDataIpv4PrefxListId));
        }

        public Builder sourceDataIpv6PrefxListId(@Nullable Output<String> sourceDataIpv6PrefxListId) {
            $.sourceDataIpv6PrefxListId = sourceDataIpv6PrefxListId;
            return this;
        }

        public Builder sourceDataIpv6PrefxListId(String sourceDataIpv6PrefxListId) {
            return sourceDataIpv6PrefxListId(Output.of(sourceDataIpv6PrefxListId));
        }

        /**
         * @param sourceIpv4Prefix Source Data IP Prefix
         * 
         * @return builder
         * 
         */
        public Builder sourceIpv4Prefix(@Nullable Output<String> sourceIpv4Prefix) {
            $.sourceIpv4Prefix = sourceIpv4Prefix;
            return this;
        }

        /**
         * @param sourceIpv4Prefix Source Data IP Prefix
         * 
         * @return builder
         * 
         */
        public Builder sourceIpv4Prefix(String sourceIpv4Prefix) {
            return sourceIpv4Prefix(Output.of(sourceIpv4Prefix));
        }

        /**
         * @param sourceIpv6Prefix Source Data IP Prefix
         * 
         * @return builder
         * 
         */
        public Builder sourceIpv6Prefix(@Nullable Output<String> sourceIpv6Prefix) {
            $.sourceIpv6Prefix = sourceIpv6Prefix;
            return this;
        }

        /**
         * @param sourceIpv6Prefix Source Data IP Prefix
         * 
         * @return builder
         * 
         */
        public Builder sourceIpv6Prefix(String sourceIpv6Prefix) {
            return sourceIpv6Prefix(Output.of(sourceIpv6Prefix));
        }

        /**
         * @param sourcePorts Source Port (0-65535) range or individual number separated by space
         * 
         * @return builder
         * 
         */
        public Builder sourcePorts(@Nullable Output<List<String>> sourcePorts) {
            $.sourcePorts = sourcePorts;
            return this;
        }

        /**
         * @param sourcePorts Source Port (0-65535) range or individual number separated by space
         * 
         * @return builder
         * 
         */
        public Builder sourcePorts(List<String> sourcePorts) {
            return sourcePorts(Output.of(sourcePorts));
        }

        /**
         * @param sourcePorts Source Port (0-65535) range or individual number separated by space
         * 
         * @return builder
         * 
         */
        public Builder sourcePorts(String... sourcePorts) {
            return sourcePorts(List.of(sourcePorts));
        }

        /**
         * @param tcp TCP States
         *   - Choices: `syn`
         * 
         * @return builder
         * 
         */
        public Builder tcp(@Nullable Output<String> tcp) {
            $.tcp = tcp;
            return this;
        }

        /**
         * @param tcp TCP States
         *   - Choices: `syn`
         * 
         * @return builder
         * 
         */
        public Builder tcp(String tcp) {
            return tcp(Output.of(tcp));
        }

        /**
         * @param trafficCategory M365 Traffic Category
         *   - Choices: `optimize-allow`, `optimize`, `all`
         * 
         * @return builder
         * 
         */
        public Builder trafficCategory(@Nullable Output<String> trafficCategory) {
            $.trafficCategory = trafficCategory;
            return this;
        }

        /**
         * @param trafficCategory M365 Traffic Category
         *   - Choices: `optimize-allow`, `optimize`, `all`
         * 
         * @return builder
         * 
         */
        public Builder trafficCategory(String trafficCategory) {
            return trafficCategory(Output.of(trafficCategory));
        }

        /**
         * @param trafficClass Traffic Class
         *   - Choices: `gold-voip-telephony`, `gold-broadcast-video`, `gold-real-time-interactive`, `gold-multimedia-conferencing`, `gold-multimedia-streaming`, `gold-network-control`, `gold-signaling`, `gold-ops-admin-mgmt`, `gold-transactional-data`, `gold-bulk-data`, `silver`, `bronze`
         * 
         * @return builder
         * 
         */
        public Builder trafficClass(@Nullable Output<String> trafficClass) {
            $.trafficClass = trafficClass;
            return this;
        }

        /**
         * @param trafficClass Traffic Class
         *   - Choices: `gold-voip-telephony`, `gold-broadcast-video`, `gold-real-time-interactive`, `gold-multimedia-conferencing`, `gold-multimedia-streaming`, `gold-network-control`, `gold-signaling`, `gold-ops-admin-mgmt`, `gold-transactional-data`, `gold-bulk-data`, `silver`, `bronze`
         * 
         * @return builder
         * 
         */
        public Builder trafficClass(String trafficClass) {
            return trafficClass(Output.of(trafficClass));
        }

        /**
         * @param trafficTo Traffic to
         *   - Choices: `core`, `service`, `access`
         * 
         * @return builder
         * 
         */
        public Builder trafficTo(@Nullable Output<String> trafficTo) {
            $.trafficTo = trafficTo;
            return this;
        }

        /**
         * @param trafficTo Traffic to
         *   - Choices: `core`, `service`, `access`
         * 
         * @return builder
         * 
         */
        public Builder trafficTo(String trafficTo) {
            return trafficTo(Output.of(trafficTo));
        }

        public ApplicationPriorityTrafficPolicyPolicySequenceMatchEntryArgs build() {
            return $;
        }
    }

}
