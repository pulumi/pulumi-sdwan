// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetEigrpFeatureTemplateAddressFamily;
import com.pulumi.sdwan.outputs.GetEigrpFeatureTemplateInterface;
import com.pulumi.sdwan.outputs.GetEigrpFeatureTemplateKey;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEigrpFeatureTemplateResult {
    /**
     * @return Set EIGRP address family
     * 
     */
    private List<GetEigrpFeatureTemplateAddressFamily> addressFamilies;
    /**
     * @return Set autonomous system ID \n\n
     * 
     */
    private Integer asNumber;
    /**
     * @return Variable name
     * 
     */
    private String asNumberVariable;
    /**
     * @return Set EIGRP router authentication type
     * 
     */
    private String authenticationType;
    /**
     * @return Variable name
     * 
     */
    private String authenticationTypeVariable;
    /**
     * @return The description of the feature template
     * 
     */
    private String description;
    /**
     * @return List of supported device types
     * 
     */
    private List<String> deviceTypes;
    /**
     * @return Selective route download
     * 
     */
    private Boolean filter;
    /**
     * @return Variable name
     * 
     */
    private String filterVariable;
    /**
     * @return Set EIGRP hello interval
     * 
     */
    private Integer helloInterval;
    /**
     * @return Variable name
     * 
     */
    private String helloIntervalVariable;
    /**
     * @return Set hmac-sha-256 authentication key
     * 
     */
    private String hmacAuthenticationKey;
    /**
     * @return Variable name
     * 
     */
    private String hmacAuthenticationKeyVariable;
    /**
     * @return Set EIGRP hold time
     * 
     */
    private Integer holdTime;
    /**
     * @return Variable name
     * 
     */
    private String holdTimeVariable;
    /**
     * @return The id of the feature template
     * 
     */
    private String id;
    /**
     * @return Configure IPv4 Static Routes
     * 
     */
    private List<GetEigrpFeatureTemplateInterface> interfaces;
    /**
     * @return Set keychain name
     * 
     */
    private List<GetEigrpFeatureTemplateKey> keys;
    /**
     * @return The name of the feature template
     * 
     */
    private String name;
    /**
     * @return Configure policy to apply to prefixes received from EIGRP neighbor
     * 
     */
    private String routePolicyName;
    /**
     * @return Variable name
     * 
     */
    private String routePolicyNameVariable;
    /**
     * @return The template type
     * 
     */
    private String templateType;
    /**
     * @return The version of the feature template
     * 
     */
    private Integer version;

    private GetEigrpFeatureTemplateResult() {}
    /**
     * @return Set EIGRP address family
     * 
     */
    public List<GetEigrpFeatureTemplateAddressFamily> addressFamilies() {
        return this.addressFamilies;
    }
    /**
     * @return Set autonomous system ID \n\n
     * 
     */
    public Integer asNumber() {
        return this.asNumber;
    }
    /**
     * @return Variable name
     * 
     */
    public String asNumberVariable() {
        return this.asNumberVariable;
    }
    /**
     * @return Set EIGRP router authentication type
     * 
     */
    public String authenticationType() {
        return this.authenticationType;
    }
    /**
     * @return Variable name
     * 
     */
    public String authenticationTypeVariable() {
        return this.authenticationTypeVariable;
    }
    /**
     * @return The description of the feature template
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return List of supported device types
     * 
     */
    public List<String> deviceTypes() {
        return this.deviceTypes;
    }
    /**
     * @return Selective route download
     * 
     */
    public Boolean filter() {
        return this.filter;
    }
    /**
     * @return Variable name
     * 
     */
    public String filterVariable() {
        return this.filterVariable;
    }
    /**
     * @return Set EIGRP hello interval
     * 
     */
    public Integer helloInterval() {
        return this.helloInterval;
    }
    /**
     * @return Variable name
     * 
     */
    public String helloIntervalVariable() {
        return this.helloIntervalVariable;
    }
    /**
     * @return Set hmac-sha-256 authentication key
     * 
     */
    public String hmacAuthenticationKey() {
        return this.hmacAuthenticationKey;
    }
    /**
     * @return Variable name
     * 
     */
    public String hmacAuthenticationKeyVariable() {
        return this.hmacAuthenticationKeyVariable;
    }
    /**
     * @return Set EIGRP hold time
     * 
     */
    public Integer holdTime() {
        return this.holdTime;
    }
    /**
     * @return Variable name
     * 
     */
    public String holdTimeVariable() {
        return this.holdTimeVariable;
    }
    /**
     * @return The id of the feature template
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Configure IPv4 Static Routes
     * 
     */
    public List<GetEigrpFeatureTemplateInterface> interfaces() {
        return this.interfaces;
    }
    /**
     * @return Set keychain name
     * 
     */
    public List<GetEigrpFeatureTemplateKey> keys() {
        return this.keys;
    }
    /**
     * @return The name of the feature template
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Configure policy to apply to prefixes received from EIGRP neighbor
     * 
     */
    public String routePolicyName() {
        return this.routePolicyName;
    }
    /**
     * @return Variable name
     * 
     */
    public String routePolicyNameVariable() {
        return this.routePolicyNameVariable;
    }
    /**
     * @return The template type
     * 
     */
    public String templateType() {
        return this.templateType;
    }
    /**
     * @return The version of the feature template
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEigrpFeatureTemplateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetEigrpFeatureTemplateAddressFamily> addressFamilies;
        private Integer asNumber;
        private String asNumberVariable;
        private String authenticationType;
        private String authenticationTypeVariable;
        private String description;
        private List<String> deviceTypes;
        private Boolean filter;
        private String filterVariable;
        private Integer helloInterval;
        private String helloIntervalVariable;
        private String hmacAuthenticationKey;
        private String hmacAuthenticationKeyVariable;
        private Integer holdTime;
        private String holdTimeVariable;
        private String id;
        private List<GetEigrpFeatureTemplateInterface> interfaces;
        private List<GetEigrpFeatureTemplateKey> keys;
        private String name;
        private String routePolicyName;
        private String routePolicyNameVariable;
        private String templateType;
        private Integer version;
        public Builder() {}
        public Builder(GetEigrpFeatureTemplateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressFamilies = defaults.addressFamilies;
    	      this.asNumber = defaults.asNumber;
    	      this.asNumberVariable = defaults.asNumberVariable;
    	      this.authenticationType = defaults.authenticationType;
    	      this.authenticationTypeVariable = defaults.authenticationTypeVariable;
    	      this.description = defaults.description;
    	      this.deviceTypes = defaults.deviceTypes;
    	      this.filter = defaults.filter;
    	      this.filterVariable = defaults.filterVariable;
    	      this.helloInterval = defaults.helloInterval;
    	      this.helloIntervalVariable = defaults.helloIntervalVariable;
    	      this.hmacAuthenticationKey = defaults.hmacAuthenticationKey;
    	      this.hmacAuthenticationKeyVariable = defaults.hmacAuthenticationKeyVariable;
    	      this.holdTime = defaults.holdTime;
    	      this.holdTimeVariable = defaults.holdTimeVariable;
    	      this.id = defaults.id;
    	      this.interfaces = defaults.interfaces;
    	      this.keys = defaults.keys;
    	      this.name = defaults.name;
    	      this.routePolicyName = defaults.routePolicyName;
    	      this.routePolicyNameVariable = defaults.routePolicyNameVariable;
    	      this.templateType = defaults.templateType;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder addressFamilies(List<GetEigrpFeatureTemplateAddressFamily> addressFamilies) {
            if (addressFamilies == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "addressFamilies");
            }
            this.addressFamilies = addressFamilies;
            return this;
        }
        public Builder addressFamilies(GetEigrpFeatureTemplateAddressFamily... addressFamilies) {
            return addressFamilies(List.of(addressFamilies));
        }
        @CustomType.Setter
        public Builder asNumber(Integer asNumber) {
            if (asNumber == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "asNumber");
            }
            this.asNumber = asNumber;
            return this;
        }
        @CustomType.Setter
        public Builder asNumberVariable(String asNumberVariable) {
            if (asNumberVariable == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "asNumberVariable");
            }
            this.asNumberVariable = asNumberVariable;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationType(String authenticationType) {
            if (authenticationType == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "authenticationType");
            }
            this.authenticationType = authenticationType;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationTypeVariable(String authenticationTypeVariable) {
            if (authenticationTypeVariable == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "authenticationTypeVariable");
            }
            this.authenticationTypeVariable = authenticationTypeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder deviceTypes(List<String> deviceTypes) {
            if (deviceTypes == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "deviceTypes");
            }
            this.deviceTypes = deviceTypes;
            return this;
        }
        public Builder deviceTypes(String... deviceTypes) {
            return deviceTypes(List.of(deviceTypes));
        }
        @CustomType.Setter
        public Builder filter(Boolean filter) {
            if (filter == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "filter");
            }
            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder filterVariable(String filterVariable) {
            if (filterVariable == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "filterVariable");
            }
            this.filterVariable = filterVariable;
            return this;
        }
        @CustomType.Setter
        public Builder helloInterval(Integer helloInterval) {
            if (helloInterval == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "helloInterval");
            }
            this.helloInterval = helloInterval;
            return this;
        }
        @CustomType.Setter
        public Builder helloIntervalVariable(String helloIntervalVariable) {
            if (helloIntervalVariable == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "helloIntervalVariable");
            }
            this.helloIntervalVariable = helloIntervalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder hmacAuthenticationKey(String hmacAuthenticationKey) {
            if (hmacAuthenticationKey == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "hmacAuthenticationKey");
            }
            this.hmacAuthenticationKey = hmacAuthenticationKey;
            return this;
        }
        @CustomType.Setter
        public Builder hmacAuthenticationKeyVariable(String hmacAuthenticationKeyVariable) {
            if (hmacAuthenticationKeyVariable == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "hmacAuthenticationKeyVariable");
            }
            this.hmacAuthenticationKeyVariable = hmacAuthenticationKeyVariable;
            return this;
        }
        @CustomType.Setter
        public Builder holdTime(Integer holdTime) {
            if (holdTime == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "holdTime");
            }
            this.holdTime = holdTime;
            return this;
        }
        @CustomType.Setter
        public Builder holdTimeVariable(String holdTimeVariable) {
            if (holdTimeVariable == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "holdTimeVariable");
            }
            this.holdTimeVariable = holdTimeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder interfaces(List<GetEigrpFeatureTemplateInterface> interfaces) {
            if (interfaces == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "interfaces");
            }
            this.interfaces = interfaces;
            return this;
        }
        public Builder interfaces(GetEigrpFeatureTemplateInterface... interfaces) {
            return interfaces(List.of(interfaces));
        }
        @CustomType.Setter
        public Builder keys(List<GetEigrpFeatureTemplateKey> keys) {
            if (keys == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "keys");
            }
            this.keys = keys;
            return this;
        }
        public Builder keys(GetEigrpFeatureTemplateKey... keys) {
            return keys(List.of(keys));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder routePolicyName(String routePolicyName) {
            if (routePolicyName == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "routePolicyName");
            }
            this.routePolicyName = routePolicyName;
            return this;
        }
        @CustomType.Setter
        public Builder routePolicyNameVariable(String routePolicyNameVariable) {
            if (routePolicyNameVariable == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "routePolicyNameVariable");
            }
            this.routePolicyNameVariable = routePolicyNameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder templateType(String templateType) {
            if (templateType == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "templateType");
            }
            this.templateType = templateType;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetEigrpFeatureTemplateResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetEigrpFeatureTemplateResult build() {
            final var _resultValue = new GetEigrpFeatureTemplateResult();
            _resultValue.addressFamilies = addressFamilies;
            _resultValue.asNumber = asNumber;
            _resultValue.asNumberVariable = asNumberVariable;
            _resultValue.authenticationType = authenticationType;
            _resultValue.authenticationTypeVariable = authenticationTypeVariable;
            _resultValue.description = description;
            _resultValue.deviceTypes = deviceTypes;
            _resultValue.filter = filter;
            _resultValue.filterVariable = filterVariable;
            _resultValue.helloInterval = helloInterval;
            _resultValue.helloIntervalVariable = helloIntervalVariable;
            _resultValue.hmacAuthenticationKey = hmacAuthenticationKey;
            _resultValue.hmacAuthenticationKeyVariable = hmacAuthenticationKeyVariable;
            _resultValue.holdTime = holdTime;
            _resultValue.holdTimeVariable = holdTimeVariable;
            _resultValue.id = id;
            _resultValue.interfaces = interfaces;
            _resultValue.keys = keys;
            _resultValue.name = name;
            _resultValue.routePolicyName = routePolicyName;
            _resultValue.routePolicyNameVariable = routePolicyNameVariable;
            _resultValue.templateType = templateType;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
