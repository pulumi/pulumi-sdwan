// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPreferredColorGroupPolicyObjectResult {
    /**
     * @return The id of the object
     * 
     */
    private String id;
    /**
     * @return The name of the policy object
     * 
     */
    private String name;
    /**
     * @return Color or space separated list of colors
     * 
     */
    private String primaryColorPreference;
    /**
     * @return Path preference
     * 
     */
    private String primaryPathPreference;
    /**
     * @return Color or space separated list of colors
     * 
     */
    private String secondaryColorPreference;
    /**
     * @return Path preference
     * 
     */
    private String secondaryPathPreference;
    /**
     * @return Color or space separated list of colors
     * 
     */
    private String tertiaryColorPreference;
    /**
     * @return Path preference
     * 
     */
    private String tertiaryPathPreference;
    /**
     * @return The version of the object
     * 
     */
    private Integer version;

    private GetPreferredColorGroupPolicyObjectResult() {}
    /**
     * @return The id of the object
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the policy object
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Color or space separated list of colors
     * 
     */
    public String primaryColorPreference() {
        return this.primaryColorPreference;
    }
    /**
     * @return Path preference
     * 
     */
    public String primaryPathPreference() {
        return this.primaryPathPreference;
    }
    /**
     * @return Color or space separated list of colors
     * 
     */
    public String secondaryColorPreference() {
        return this.secondaryColorPreference;
    }
    /**
     * @return Path preference
     * 
     */
    public String secondaryPathPreference() {
        return this.secondaryPathPreference;
    }
    /**
     * @return Color or space separated list of colors
     * 
     */
    public String tertiaryColorPreference() {
        return this.tertiaryColorPreference;
    }
    /**
     * @return Path preference
     * 
     */
    public String tertiaryPathPreference() {
        return this.tertiaryPathPreference;
    }
    /**
     * @return The version of the object
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPreferredColorGroupPolicyObjectResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String name;
        private String primaryColorPreference;
        private String primaryPathPreference;
        private String secondaryColorPreference;
        private String secondaryPathPreference;
        private String tertiaryColorPreference;
        private String tertiaryPathPreference;
        private Integer version;
        public Builder() {}
        public Builder(GetPreferredColorGroupPolicyObjectResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.primaryColorPreference = defaults.primaryColorPreference;
    	      this.primaryPathPreference = defaults.primaryPathPreference;
    	      this.secondaryColorPreference = defaults.secondaryColorPreference;
    	      this.secondaryPathPreference = defaults.secondaryPathPreference;
    	      this.tertiaryColorPreference = defaults.tertiaryColorPreference;
    	      this.tertiaryPathPreference = defaults.tertiaryPathPreference;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPreferredColorGroupPolicyObjectResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetPreferredColorGroupPolicyObjectResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder primaryColorPreference(String primaryColorPreference) {
            if (primaryColorPreference == null) {
              throw new MissingRequiredPropertyException("GetPreferredColorGroupPolicyObjectResult", "primaryColorPreference");
            }
            this.primaryColorPreference = primaryColorPreference;
            return this;
        }
        @CustomType.Setter
        public Builder primaryPathPreference(String primaryPathPreference) {
            if (primaryPathPreference == null) {
              throw new MissingRequiredPropertyException("GetPreferredColorGroupPolicyObjectResult", "primaryPathPreference");
            }
            this.primaryPathPreference = primaryPathPreference;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryColorPreference(String secondaryColorPreference) {
            if (secondaryColorPreference == null) {
              throw new MissingRequiredPropertyException("GetPreferredColorGroupPolicyObjectResult", "secondaryColorPreference");
            }
            this.secondaryColorPreference = secondaryColorPreference;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryPathPreference(String secondaryPathPreference) {
            if (secondaryPathPreference == null) {
              throw new MissingRequiredPropertyException("GetPreferredColorGroupPolicyObjectResult", "secondaryPathPreference");
            }
            this.secondaryPathPreference = secondaryPathPreference;
            return this;
        }
        @CustomType.Setter
        public Builder tertiaryColorPreference(String tertiaryColorPreference) {
            if (tertiaryColorPreference == null) {
              throw new MissingRequiredPropertyException("GetPreferredColorGroupPolicyObjectResult", "tertiaryColorPreference");
            }
            this.tertiaryColorPreference = tertiaryColorPreference;
            return this;
        }
        @CustomType.Setter
        public Builder tertiaryPathPreference(String tertiaryPathPreference) {
            if (tertiaryPathPreference == null) {
              throw new MissingRequiredPropertyException("GetPreferredColorGroupPolicyObjectResult", "tertiaryPathPreference");
            }
            this.tertiaryPathPreference = tertiaryPathPreference;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetPreferredColorGroupPolicyObjectResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetPreferredColorGroupPolicyObjectResult build() {
            final var _resultValue = new GetPreferredColorGroupPolicyObjectResult();
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.primaryColorPreference = primaryColorPreference;
            _resultValue.primaryPathPreference = primaryPathPreference;
            _resultValue.secondaryColorPreference = secondaryColorPreference;
            _resultValue.secondaryPathPreference = secondaryPathPreference;
            _resultValue.tertiaryColorPreference = tertiaryColorPreference;
            _resultValue.tertiaryPathPreference = tertiaryPathPreference;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
