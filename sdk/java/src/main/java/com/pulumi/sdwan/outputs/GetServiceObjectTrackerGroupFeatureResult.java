// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetServiceObjectTrackerGroupFeatureTrackerElement;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceObjectTrackerGroupFeatureResult {
    /**
     * @return The description of the Feature
     * 
     */
    private String description;
    /**
     * @return Feature Profile ID
     * 
     */
    private String featureProfileId;
    /**
     * @return The id of the Feature
     * 
     */
    private String id;
    /**
     * @return The name of the Feature
     * 
     */
    private String name;
    /**
     * @return Object ID
     * 
     */
    private Integer objectTrackerId;
    /**
     * @return Variable name
     * 
     */
    private String objectTrackerIdVariable;
    /**
     * @return tracker ref list criteria boolean and or
     * 
     */
    private String reachable;
    /**
     * @return Variable name
     * 
     */
    private String reachableVariable;
    /**
     * @return Group Tracks ID Refs
     * 
     */
    private List<GetServiceObjectTrackerGroupFeatureTrackerElement> trackerElements;
    /**
     * @return The version of the Feature
     * 
     */
    private Integer version;

    private GetServiceObjectTrackerGroupFeatureResult() {}
    /**
     * @return The description of the Feature
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Feature Profile ID
     * 
     */
    public String featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * @return The id of the Feature
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the Feature
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Object ID
     * 
     */
    public Integer objectTrackerId() {
        return this.objectTrackerId;
    }
    /**
     * @return Variable name
     * 
     */
    public String objectTrackerIdVariable() {
        return this.objectTrackerIdVariable;
    }
    /**
     * @return tracker ref list criteria boolean and or
     * 
     */
    public String reachable() {
        return this.reachable;
    }
    /**
     * @return Variable name
     * 
     */
    public String reachableVariable() {
        return this.reachableVariable;
    }
    /**
     * @return Group Tracks ID Refs
     * 
     */
    public List<GetServiceObjectTrackerGroupFeatureTrackerElement> trackerElements() {
        return this.trackerElements;
    }
    /**
     * @return The version of the Feature
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceObjectTrackerGroupFeatureResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String featureProfileId;
        private String id;
        private String name;
        private Integer objectTrackerId;
        private String objectTrackerIdVariable;
        private String reachable;
        private String reachableVariable;
        private List<GetServiceObjectTrackerGroupFeatureTrackerElement> trackerElements;
        private Integer version;
        public Builder() {}
        public Builder(GetServiceObjectTrackerGroupFeatureResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.featureProfileId = defaults.featureProfileId;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.objectTrackerId = defaults.objectTrackerId;
    	      this.objectTrackerIdVariable = defaults.objectTrackerIdVariable;
    	      this.reachable = defaults.reachable;
    	      this.reachableVariable = defaults.reachableVariable;
    	      this.trackerElements = defaults.trackerElements;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetServiceObjectTrackerGroupFeatureResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder featureProfileId(String featureProfileId) {
            if (featureProfileId == null) {
              throw new MissingRequiredPropertyException("GetServiceObjectTrackerGroupFeatureResult", "featureProfileId");
            }
            this.featureProfileId = featureProfileId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetServiceObjectTrackerGroupFeatureResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetServiceObjectTrackerGroupFeatureResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder objectTrackerId(Integer objectTrackerId) {
            if (objectTrackerId == null) {
              throw new MissingRequiredPropertyException("GetServiceObjectTrackerGroupFeatureResult", "objectTrackerId");
            }
            this.objectTrackerId = objectTrackerId;
            return this;
        }
        @CustomType.Setter
        public Builder objectTrackerIdVariable(String objectTrackerIdVariable) {
            if (objectTrackerIdVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceObjectTrackerGroupFeatureResult", "objectTrackerIdVariable");
            }
            this.objectTrackerIdVariable = objectTrackerIdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder reachable(String reachable) {
            if (reachable == null) {
              throw new MissingRequiredPropertyException("GetServiceObjectTrackerGroupFeatureResult", "reachable");
            }
            this.reachable = reachable;
            return this;
        }
        @CustomType.Setter
        public Builder reachableVariable(String reachableVariable) {
            if (reachableVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceObjectTrackerGroupFeatureResult", "reachableVariable");
            }
            this.reachableVariable = reachableVariable;
            return this;
        }
        @CustomType.Setter
        public Builder trackerElements(List<GetServiceObjectTrackerGroupFeatureTrackerElement> trackerElements) {
            if (trackerElements == null) {
              throw new MissingRequiredPropertyException("GetServiceObjectTrackerGroupFeatureResult", "trackerElements");
            }
            this.trackerElements = trackerElements;
            return this;
        }
        public Builder trackerElements(GetServiceObjectTrackerGroupFeatureTrackerElement... trackerElements) {
            return trackerElements(List.of(trackerElements));
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetServiceObjectTrackerGroupFeatureResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetServiceObjectTrackerGroupFeatureResult build() {
            final var _resultValue = new GetServiceObjectTrackerGroupFeatureResult();
            _resultValue.description = description;
            _resultValue.featureProfileId = featureProfileId;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.objectTrackerId = objectTrackerId;
            _resultValue.objectTrackerIdVariable = objectTrackerIdVariable;
            _resultValue.reachable = reachable;
            _resultValue.reachableVariable = reachableVariable;
            _resultValue.trackerElements = trackerElements;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
