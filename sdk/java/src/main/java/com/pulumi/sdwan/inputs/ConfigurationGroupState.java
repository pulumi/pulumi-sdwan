// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.ConfigurationGroupDeviceArgs;
import com.pulumi.sdwan.inputs.ConfigurationGroupTopologyDeviceArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationGroupState extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationGroupState Empty = new ConfigurationGroupState();

    /**
     * Description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * List of devices
     * 
     */
    @Import(name="devices")
    private @Nullable Output<List<ConfigurationGroupDeviceArgs>> devices;

    /**
     * @return List of devices
     * 
     */
    public Optional<Output<List<ConfigurationGroupDeviceArgs>>> devices() {
        return Optional.ofNullable(this.devices);
    }

    /**
     * List of feature profile IDs
     * 
     */
    @Import(name="featureProfileIds")
    private @Nullable Output<List<String>> featureProfileIds;

    /**
     * @return List of feature profile IDs
     * 
     */
    public Optional<Output<List<String>>> featureProfileIds() {
        return Optional.ofNullable(this.featureProfileIds);
    }

    /**
     * List of all associated feature versions
     * 
     */
    @Import(name="featureVersions")
    private @Nullable Output<List<String>> featureVersions;

    /**
     * @return List of all associated feature versions
     * 
     */
    public Optional<Output<List<String>>> featureVersions() {
        return Optional.ofNullable(this.featureVersions);
    }

    /**
     * The name of the configuration group
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the configuration group
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
     * 
     */
    @Import(name="solution")
    private @Nullable Output<String> solution;

    /**
     * @return Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
     * 
     */
    public Optional<Output<String>> solution() {
        return Optional.ofNullable(this.solution);
    }

    /**
     * List of topology device types
     * 
     */
    @Import(name="topologyDevices")
    private @Nullable Output<List<ConfigurationGroupTopologyDeviceArgs>> topologyDevices;

    /**
     * @return List of topology device types
     * 
     */
    public Optional<Output<List<ConfigurationGroupTopologyDeviceArgs>>> topologyDevices() {
        return Optional.ofNullable(this.topologyDevices);
    }

    /**
     * Number of devices per site - Range: `1`-`20`
     * 
     */
    @Import(name="topologySiteDevices")
    private @Nullable Output<Integer> topologySiteDevices;

    /**
     * @return Number of devices per site - Range: `1`-`20`
     * 
     */
    public Optional<Output<Integer>> topologySiteDevices() {
        return Optional.ofNullable(this.topologySiteDevices);
    }

    private ConfigurationGroupState() {}

    private ConfigurationGroupState(ConfigurationGroupState $) {
        this.description = $.description;
        this.devices = $.devices;
        this.featureProfileIds = $.featureProfileIds;
        this.featureVersions = $.featureVersions;
        this.name = $.name;
        this.solution = $.solution;
        this.topologyDevices = $.topologyDevices;
        this.topologySiteDevices = $.topologySiteDevices;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationGroupState $;

        public Builder() {
            $ = new ConfigurationGroupState();
        }

        public Builder(ConfigurationGroupState defaults) {
            $ = new ConfigurationGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param devices List of devices
         * 
         * @return builder
         * 
         */
        public Builder devices(@Nullable Output<List<ConfigurationGroupDeviceArgs>> devices) {
            $.devices = devices;
            return this;
        }

        /**
         * @param devices List of devices
         * 
         * @return builder
         * 
         */
        public Builder devices(List<ConfigurationGroupDeviceArgs> devices) {
            return devices(Output.of(devices));
        }

        /**
         * @param devices List of devices
         * 
         * @return builder
         * 
         */
        public Builder devices(ConfigurationGroupDeviceArgs... devices) {
            return devices(List.of(devices));
        }

        /**
         * @param featureProfileIds List of feature profile IDs
         * 
         * @return builder
         * 
         */
        public Builder featureProfileIds(@Nullable Output<List<String>> featureProfileIds) {
            $.featureProfileIds = featureProfileIds;
            return this;
        }

        /**
         * @param featureProfileIds List of feature profile IDs
         * 
         * @return builder
         * 
         */
        public Builder featureProfileIds(List<String> featureProfileIds) {
            return featureProfileIds(Output.of(featureProfileIds));
        }

        /**
         * @param featureProfileIds List of feature profile IDs
         * 
         * @return builder
         * 
         */
        public Builder featureProfileIds(String... featureProfileIds) {
            return featureProfileIds(List.of(featureProfileIds));
        }

        /**
         * @param featureVersions List of all associated feature versions
         * 
         * @return builder
         * 
         */
        public Builder featureVersions(@Nullable Output<List<String>> featureVersions) {
            $.featureVersions = featureVersions;
            return this;
        }

        /**
         * @param featureVersions List of all associated feature versions
         * 
         * @return builder
         * 
         */
        public Builder featureVersions(List<String> featureVersions) {
            return featureVersions(Output.of(featureVersions));
        }

        /**
         * @param featureVersions List of all associated feature versions
         * 
         * @return builder
         * 
         */
        public Builder featureVersions(String... featureVersions) {
            return featureVersions(List.of(featureVersions));
        }

        /**
         * @param name The name of the configuration group
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the configuration group
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param solution Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
         * 
         * @return builder
         * 
         */
        public Builder solution(@Nullable Output<String> solution) {
            $.solution = solution;
            return this;
        }

        /**
         * @param solution Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
         * 
         * @return builder
         * 
         */
        public Builder solution(String solution) {
            return solution(Output.of(solution));
        }

        /**
         * @param topologyDevices List of topology device types
         * 
         * @return builder
         * 
         */
        public Builder topologyDevices(@Nullable Output<List<ConfigurationGroupTopologyDeviceArgs>> topologyDevices) {
            $.topologyDevices = topologyDevices;
            return this;
        }

        /**
         * @param topologyDevices List of topology device types
         * 
         * @return builder
         * 
         */
        public Builder topologyDevices(List<ConfigurationGroupTopologyDeviceArgs> topologyDevices) {
            return topologyDevices(Output.of(topologyDevices));
        }

        /**
         * @param topologyDevices List of topology device types
         * 
         * @return builder
         * 
         */
        public Builder topologyDevices(ConfigurationGroupTopologyDeviceArgs... topologyDevices) {
            return topologyDevices(List.of(topologyDevices));
        }

        /**
         * @param topologySiteDevices Number of devices per site - Range: `1`-`20`
         * 
         * @return builder
         * 
         */
        public Builder topologySiteDevices(@Nullable Output<Integer> topologySiteDevices) {
            $.topologySiteDevices = topologySiteDevices;
            return this;
        }

        /**
         * @param topologySiteDevices Number of devices per site - Range: `1`-`20`
         * 
         * @return builder
         * 
         */
        public Builder topologySiteDevices(Integer topologySiteDevices) {
            return topologySiteDevices(Output.of(topologySiteDevices));
        }

        public ConfigurationGroupState build() {
            return $;
        }
    }

}
