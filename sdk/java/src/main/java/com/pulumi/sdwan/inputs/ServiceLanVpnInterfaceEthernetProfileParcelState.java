// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.ServiceLanVpnInterfaceEthernetProfileParcelArpArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnInterfaceEthernetProfileParcelIpv4VrrpArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpHelperArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnInterfaceEthernetProfileParcelIpv6VrrpArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnInterfaceEthernetProfileParcelStaticNatArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceLanVpnInterfaceEthernetProfileParcelState extends com.pulumi.resources.ResourceArgs {

    public static final ServiceLanVpnInterfaceEthernetProfileParcelState Empty = new ServiceLanVpnInterfaceEthernetProfileParcelState();

    @Import(name="aclIpv4EgressPolicyId")
    private @Nullable Output<String> aclIpv4EgressPolicyId;

    public Optional<Output<String>> aclIpv4EgressPolicyId() {
        return Optional.ofNullable(this.aclIpv4EgressPolicyId);
    }

    @Import(name="aclIpv4IngressPolicyId")
    private @Nullable Output<String> aclIpv4IngressPolicyId;

    public Optional<Output<String>> aclIpv4IngressPolicyId() {
        return Optional.ofNullable(this.aclIpv4IngressPolicyId);
    }

    @Import(name="aclIpv6EgressPolicyId")
    private @Nullable Output<String> aclIpv6EgressPolicyId;

    public Optional<Output<String>> aclIpv6EgressPolicyId() {
        return Optional.ofNullable(this.aclIpv6EgressPolicyId);
    }

    @Import(name="aclIpv6IngressPolicyId")
    private @Nullable Output<String> aclIpv6IngressPolicyId;

    public Optional<Output<String>> aclIpv6IngressPolicyId() {
        return Optional.ofNullable(this.aclIpv6IngressPolicyId);
    }

    /**
     * Shaping Rate (Kbps) - Range: `8`-`100000000`
     * 
     */
    @Import(name="aclShapingRate")
    private @Nullable Output<Integer> aclShapingRate;

    /**
     * @return Shaping Rate (Kbps) - Range: `8`-`100000000`
     * 
     */
    public Optional<Output<Integer>> aclShapingRate() {
        return Optional.ofNullable(this.aclShapingRate);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="aclShapingRateVariable")
    private @Nullable Output<String> aclShapingRateVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> aclShapingRateVariable() {
        return Optional.ofNullable(this.aclShapingRateVariable);
    }

    /**
     * Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2147483` - Default value: `1200`
     * 
     */
    @Import(name="arpTimeout")
    private @Nullable Output<Integer> arpTimeout;

    /**
     * @return Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2147483` - Default value: `1200`
     * 
     */
    public Optional<Output<Integer>> arpTimeout() {
        return Optional.ofNullable(this.arpTimeout);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="arpTimeoutVariable")
    private @Nullable Output<String> arpTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> arpTimeoutVariable() {
        return Optional.ofNullable(this.arpTimeoutVariable);
    }

    /**
     * Configure ARP entries
     * 
     */
    @Import(name="arps")
    private @Nullable Output<List<ServiceLanVpnInterfaceEthernetProfileParcelArpArgs>> arps;

    /**
     * @return Configure ARP entries
     * 
     */
    public Optional<Output<List<ServiceLanVpnInterfaceEthernetProfileParcelArpArgs>>> arps() {
        return Optional.ofNullable(this.arps);
    }

    /**
     * Link autonegotiation
     * 
     */
    @Import(name="autonegotiate")
    private @Nullable Output<Boolean> autonegotiate;

    /**
     * @return Link autonegotiation
     * 
     */
    public Optional<Output<Boolean>> autonegotiate() {
        return Optional.ofNullable(this.autonegotiate);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="autonegotiateVariable")
    private @Nullable Output<String> autonegotiateVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> autonegotiateVariable() {
        return Optional.ofNullable(this.autonegotiateVariable);
    }

    @Import(name="configDescription")
    private @Nullable Output<String> configDescription;

    public Optional<Output<String>> configDescription() {
        return Optional.ofNullable(this.configDescription);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="configDescriptionVariable")
    private @Nullable Output<String> configDescriptionVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> configDescriptionVariable() {
        return Optional.ofNullable(this.configDescriptionVariable);
    }

    /**
     * The description of the profile parcel
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the profile parcel
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Duplex mode - Choices: `full`, `half`, `auto`
     * 
     */
    @Import(name="duplex")
    private @Nullable Output<String> duplex;

    /**
     * @return Duplex mode - Choices: `full`, `half`, `auto`
     * 
     */
    public Optional<Output<String>> duplex() {
        return Optional.ofNullable(this.duplex);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="duplexVariable")
    private @Nullable Output<String> duplexVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> duplexVariable() {
        return Optional.ofNullable(this.duplexVariable);
    }

    /**
     * Enable DHCPv6
     * 
     */
    @Import(name="enableDhcpv6")
    private @Nullable Output<Boolean> enableDhcpv6;

    /**
     * @return Enable DHCPv6
     * 
     */
    public Optional<Output<Boolean>> enableDhcpv6() {
        return Optional.ofNullable(this.enableDhcpv6);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId")
    private @Nullable Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Optional<Output<String>> featureProfileId() {
        return Optional.ofNullable(this.featureProfileId);
    }

    /**
     * ICMP/ICMPv6 Redirect Disable - Default value: `true`
     * 
     */
    @Import(name="icmpRedirectDisable")
    private @Nullable Output<Boolean> icmpRedirectDisable;

    /**
     * @return ICMP/ICMPv6 Redirect Disable - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> icmpRedirectDisable() {
        return Optional.ofNullable(this.icmpRedirectDisable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="icmpRedirectDisableVariable")
    private @Nullable Output<String> icmpRedirectDisableVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> icmpRedirectDisableVariable() {
        return Optional.ofNullable(this.icmpRedirectDisableVariable);
    }

    /**
     * Interface MTU - Range: `1500`-`9216` - Default value: `1500`
     * 
     */
    @Import(name="interfaceMtu")
    private @Nullable Output<Integer> interfaceMtu;

    /**
     * @return Interface MTU - Range: `1500`-`9216` - Default value: `1500`
     * 
     */
    public Optional<Output<Integer>> interfaceMtu() {
        return Optional.ofNullable(this.interfaceMtu);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceMtuVariable")
    private @Nullable Output<String> interfaceMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceMtuVariable() {
        return Optional.ofNullable(this.interfaceMtuVariable);
    }

    @Import(name="interfaceName")
    private @Nullable Output<String> interfaceName;

    public Optional<Output<String>> interfaceName() {
        return Optional.ofNullable(this.interfaceName);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceNameVariable")
    private @Nullable Output<String> interfaceNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceNameVariable() {
        return Optional.ofNullable(this.interfaceNameVariable);
    }

    /**
     * IP Directed-Broadcast - Default value: `false`
     * 
     */
    @Import(name="ipDirectedBroadcast")
    private @Nullable Output<Boolean> ipDirectedBroadcast;

    /**
     * @return IP Directed-Broadcast - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> ipDirectedBroadcast() {
        return Optional.ofNullable(this.ipDirectedBroadcast);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipDirectedBroadcastVariable")
    private @Nullable Output<String> ipDirectedBroadcastVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipDirectedBroadcastVariable() {
        return Optional.ofNullable(this.ipDirectedBroadcastVariable);
    }

    /**
     * IP MTU for GigabitEthernet main &lt;576..Interface MTU&gt;, GigabitEthernet subinterface &lt;576..9216&gt;, Other Interfaces
     * &lt;576..2000&gt; in bytes - Range: `576`-`9216` - Default value: `1500`
     * 
     */
    @Import(name="ipMtu")
    private @Nullable Output<Integer> ipMtu;

    /**
     * @return IP MTU for GigabitEthernet main &lt;576..Interface MTU&gt;, GigabitEthernet subinterface &lt;576..9216&gt;, Other Interfaces
     * &lt;576..2000&gt; in bytes - Range: `576`-`9216` - Default value: `1500`
     * 
     */
    public Optional<Output<Integer>> ipMtu() {
        return Optional.ofNullable(this.ipMtu);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipMtuVariable")
    private @Nullable Output<String> ipMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipMtuVariable() {
        return Optional.ofNullable(this.ipMtuVariable);
    }

    /**
     * IP Address
     * 
     */
    @Import(name="ipv4Address")
    private @Nullable Output<String> ipv4Address;

    /**
     * @return IP Address
     * 
     */
    public Optional<Output<String>> ipv4Address() {
        return Optional.ofNullable(this.ipv4Address);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4AddressVariable")
    private @Nullable Output<String> ipv4AddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4AddressVariable() {
        return Optional.ofNullable(this.ipv4AddressVariable);
    }

    /**
     * DHCP Distance - Range: `1`-`65536`
     * 
     */
    @Import(name="ipv4DhcpDistance")
    private @Nullable Output<Integer> ipv4DhcpDistance;

    /**
     * @return DHCP Distance - Range: `1`-`65536`
     * 
     */
    public Optional<Output<Integer>> ipv4DhcpDistance() {
        return Optional.ofNullable(this.ipv4DhcpDistance);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4DhcpDistanceVariable")
    private @Nullable Output<String> ipv4DhcpDistanceVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4DhcpDistanceVariable() {
        return Optional.ofNullable(this.ipv4DhcpDistanceVariable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4DhcpHelperVariable")
    private @Nullable Output<String> ipv4DhcpHelperVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4DhcpHelperVariable() {
        return Optional.ofNullable(this.ipv4DhcpHelperVariable);
    }

    /**
     * List of DHCP IPv4 helper addresses (min 1, max 8)
     * 
     */
    @Import(name="ipv4DhcpHelpers")
    private @Nullable Output<List<String>> ipv4DhcpHelpers;

    /**
     * @return List of DHCP IPv4 helper addresses (min 1, max 8)
     * 
     */
    public Optional<Output<List<String>>> ipv4DhcpHelpers() {
        return Optional.ofNullable(this.ipv4DhcpHelpers);
    }

    /**
     * enable Network Address Translation on this interface - Default value: `false`
     * 
     */
    @Import(name="ipv4Nat")
    private @Nullable Output<Boolean> ipv4Nat;

    /**
     * @return enable Network Address Translation on this interface - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> ipv4Nat() {
        return Optional.ofNullable(this.ipv4Nat);
    }

    /**
     * NAT Inside Source Loopback Interface
     * 
     */
    @Import(name="ipv4NatLoopback")
    private @Nullable Output<String> ipv4NatLoopback;

    /**
     * @return NAT Inside Source Loopback Interface
     * 
     */
    public Optional<Output<String>> ipv4NatLoopback() {
        return Optional.ofNullable(this.ipv4NatLoopback);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4NatLoopbackVariable")
    private @Nullable Output<String> ipv4NatLoopbackVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4NatLoopbackVariable() {
        return Optional.ofNullable(this.ipv4NatLoopbackVariable);
    }

    /**
     * NAT Overload - Default value: `true`
     * 
     */
    @Import(name="ipv4NatOverload")
    private @Nullable Output<Boolean> ipv4NatOverload;

    /**
     * @return NAT Overload - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> ipv4NatOverload() {
        return Optional.ofNullable(this.ipv4NatOverload);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4NatOverloadVariable")
    private @Nullable Output<String> ipv4NatOverloadVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4NatOverloadVariable() {
        return Optional.ofNullable(this.ipv4NatOverloadVariable);
    }

    /**
     * NAT Pool Prefix Length - Range: `1`-`32`
     * 
     */
    @Import(name="ipv4NatPrefixLength")
    private @Nullable Output<Integer> ipv4NatPrefixLength;

    /**
     * @return NAT Pool Prefix Length - Range: `1`-`32`
     * 
     */
    public Optional<Output<Integer>> ipv4NatPrefixLength() {
        return Optional.ofNullable(this.ipv4NatPrefixLength);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4NatPrefixLengthVariable")
    private @Nullable Output<String> ipv4NatPrefixLengthVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4NatPrefixLengthVariable() {
        return Optional.ofNullable(this.ipv4NatPrefixLengthVariable);
    }

    /**
     * NAT Pool Range End
     * 
     */
    @Import(name="ipv4NatRangeEnd")
    private @Nullable Output<String> ipv4NatRangeEnd;

    /**
     * @return NAT Pool Range End
     * 
     */
    public Optional<Output<String>> ipv4NatRangeEnd() {
        return Optional.ofNullable(this.ipv4NatRangeEnd);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4NatRangeEndVariable")
    private @Nullable Output<String> ipv4NatRangeEndVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4NatRangeEndVariable() {
        return Optional.ofNullable(this.ipv4NatRangeEndVariable);
    }

    /**
     * NAT Pool Range Start
     * 
     */
    @Import(name="ipv4NatRangeStart")
    private @Nullable Output<String> ipv4NatRangeStart;

    /**
     * @return NAT Pool Range Start
     * 
     */
    public Optional<Output<String>> ipv4NatRangeStart() {
        return Optional.ofNullable(this.ipv4NatRangeStart);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4NatRangeStartVariable")
    private @Nullable Output<String> ipv4NatRangeStartVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4NatRangeStartVariable() {
        return Optional.ofNullable(this.ipv4NatRangeStartVariable);
    }

    /**
     * Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
     * 
     */
    @Import(name="ipv4NatTcpTimeout")
    private @Nullable Output<Integer> ipv4NatTcpTimeout;

    /**
     * @return Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
     * 
     */
    public Optional<Output<Integer>> ipv4NatTcpTimeout() {
        return Optional.ofNullable(this.ipv4NatTcpTimeout);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4NatTcpTimeoutVariable")
    private @Nullable Output<String> ipv4NatTcpTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4NatTcpTimeoutVariable() {
        return Optional.ofNullable(this.ipv4NatTcpTimeoutVariable);
    }

    /**
     * NAT Type - Choices: `pool`, `loopback`
     * 
     */
    @Import(name="ipv4NatType")
    private @Nullable Output<String> ipv4NatType;

    /**
     * @return NAT Type - Choices: `pool`, `loopback`
     * 
     */
    public Optional<Output<String>> ipv4NatType() {
        return Optional.ofNullable(this.ipv4NatType);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4NatTypeVariable")
    private @Nullable Output<String> ipv4NatTypeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4NatTypeVariable() {
        return Optional.ofNullable(this.ipv4NatTypeVariable);
    }

    /**
     * Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
     * 
     */
    @Import(name="ipv4NatUdpTimeout")
    private @Nullable Output<Integer> ipv4NatUdpTimeout;

    /**
     * @return Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
     * 
     */
    public Optional<Output<Integer>> ipv4NatUdpTimeout() {
        return Optional.ofNullable(this.ipv4NatUdpTimeout);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4NatUdpTimeoutVariable")
    private @Nullable Output<String> ipv4NatUdpTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4NatUdpTimeoutVariable() {
        return Optional.ofNullable(this.ipv4NatUdpTimeoutVariable);
    }

    /**
     * Secondary IpV4 Addresses
     * 
     */
    @Import(name="ipv4SecondaryAddresses")
    private @Nullable Output<List<ServiceLanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArgs>> ipv4SecondaryAddresses;

    /**
     * @return Secondary IpV4 Addresses
     * 
     */
    public Optional<Output<List<ServiceLanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArgs>>> ipv4SecondaryAddresses() {
        return Optional.ofNullable(this.ipv4SecondaryAddresses);
    }

    /**
     * Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     * 
     */
    @Import(name="ipv4SubnetMask")
    private @Nullable Output<String> ipv4SubnetMask;

    /**
     * @return Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     * 
     */
    public Optional<Output<String>> ipv4SubnetMask() {
        return Optional.ofNullable(this.ipv4SubnetMask);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4SubnetMaskVariable")
    private @Nullable Output<String> ipv4SubnetMaskVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4SubnetMaskVariable() {
        return Optional.ofNullable(this.ipv4SubnetMaskVariable);
    }

    /**
     * Enable VRRP
     * 
     */
    @Import(name="ipv4Vrrps")
    private @Nullable Output<List<ServiceLanVpnInterfaceEthernetProfileParcelIpv4VrrpArgs>> ipv4Vrrps;

    /**
     * @return Enable VRRP
     * 
     */
    public Optional<Output<List<ServiceLanVpnInterfaceEthernetProfileParcelIpv4VrrpArgs>>> ipv4Vrrps() {
        return Optional.ofNullable(this.ipv4Vrrps);
    }

    /**
     * IPv6 Address Secondary
     * 
     */
    @Import(name="ipv6Address")
    private @Nullable Output<String> ipv6Address;

    /**
     * @return IPv6 Address Secondary
     * 
     */
    public Optional<Output<String>> ipv6Address() {
        return Optional.ofNullable(this.ipv6Address);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv6AddressVariable")
    private @Nullable Output<String> ipv6AddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv6AddressVariable() {
        return Optional.ofNullable(this.ipv6AddressVariable);
    }

    /**
     * DHCPv6 Helper
     * 
     */
    @Import(name="ipv6DhcpHelpers")
    private @Nullable Output<List<ServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpHelperArgs>> ipv6DhcpHelpers;

    /**
     * @return DHCPv6 Helper
     * 
     */
    public Optional<Output<List<ServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpHelperArgs>>> ipv6DhcpHelpers() {
        return Optional.ofNullable(this.ipv6DhcpHelpers);
    }

    /**
     * secondary IPv6 addresses
     * 
     */
    @Import(name="ipv6DhcpSecondaryAddresses")
    private @Nullable Output<List<ServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArgs>> ipv6DhcpSecondaryAddresses;

    /**
     * @return secondary IPv6 addresses
     * 
     */
    public Optional<Output<List<ServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArgs>>> ipv6DhcpSecondaryAddresses() {
        return Optional.ofNullable(this.ipv6DhcpSecondaryAddresses);
    }

    /**
     * enable Network Address Translation ipv6 on this interface - Default value: `false`
     * 
     */
    @Import(name="ipv6Nat")
    private @Nullable Output<Boolean> ipv6Nat;

    /**
     * @return enable Network Address Translation ipv6 on this interface - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> ipv6Nat() {
        return Optional.ofNullable(this.ipv6Nat);
    }

    /**
     * Static secondary IPv6 addresses
     * 
     */
    @Import(name="ipv6SecondaryAddresses")
    private @Nullable Output<List<ServiceLanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArgs>> ipv6SecondaryAddresses;

    /**
     * @return Static secondary IPv6 addresses
     * 
     */
    public Optional<Output<List<ServiceLanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArgs>>> ipv6SecondaryAddresses() {
        return Optional.ofNullable(this.ipv6SecondaryAddresses);
    }

    /**
     * Enable VRRP Ipv6
     * 
     */
    @Import(name="ipv6Vrrps")
    private @Nullable Output<List<ServiceLanVpnInterfaceEthernetProfileParcelIpv6VrrpArgs>> ipv6Vrrps;

    /**
     * @return Enable VRRP Ipv6
     * 
     */
    public Optional<Output<List<ServiceLanVpnInterfaceEthernetProfileParcelIpv6VrrpArgs>>> ipv6Vrrps() {
        return Optional.ofNullable(this.ipv6Vrrps);
    }

    /**
     * Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
     * 
     */
    @Import(name="loadInterval")
    private @Nullable Output<Integer> loadInterval;

    /**
     * @return Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
     * 
     */
    public Optional<Output<Integer>> loadInterval() {
        return Optional.ofNullable(this.loadInterval);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="loadIntervalVariable")
    private @Nullable Output<String> loadIntervalVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> loadIntervalVariable() {
        return Optional.ofNullable(this.loadIntervalVariable);
    }

    /**
     * MAC Address
     * 
     */
    @Import(name="macAddress")
    private @Nullable Output<String> macAddress;

    /**
     * @return MAC Address
     * 
     */
    public Optional<Output<String>> macAddress() {
        return Optional.ofNullable(this.macAddress);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="macAddressVariable")
    private @Nullable Output<String> macAddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> macAddressVariable() {
        return Optional.ofNullable(this.macAddressVariable);
    }

    /**
     * Media type - Choices: `auto-select`, `rj45`, `sfp`
     * 
     */
    @Import(name="mediaType")
    private @Nullable Output<String> mediaType;

    /**
     * @return Media type - Choices: `auto-select`, `rj45`, `sfp`
     * 
     */
    public Optional<Output<String>> mediaType() {
        return Optional.ofNullable(this.mediaType);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="mediaTypeVariable")
    private @Nullable Output<String> mediaTypeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> mediaTypeVariable() {
        return Optional.ofNullable(this.mediaTypeVariable);
    }

    /**
     * The name of the profile parcel
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the profile parcel
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * NAT64 on this interface - Default value: `false`
     * 
     */
    @Import(name="nat64")
    private @Nullable Output<Boolean> nat64;

    /**
     * @return NAT64 on this interface - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> nat64() {
        return Optional.ofNullable(this.nat64);
    }

    /**
     * Service LAN VPN Profile Profile ID
     * 
     */
    @Import(name="serviceLanVpnProfileParcelId")
    private @Nullable Output<String> serviceLanVpnProfileParcelId;

    /**
     * @return Service LAN VPN Profile Profile ID
     * 
     */
    public Optional<Output<String>> serviceLanVpnProfileParcelId() {
        return Optional.ofNullable(this.serviceLanVpnProfileParcelId);
    }

    /**
     * - Default value: `true`
     * 
     */
    @Import(name="shutdown")
    private @Nullable Output<Boolean> shutdown;

    /**
     * @return - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> shutdown() {
        return Optional.ofNullable(this.shutdown);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="shutdownVariable")
    private @Nullable Output<String> shutdownVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> shutdownVariable() {
        return Optional.ofNullable(this.shutdownVariable);
    }

    /**
     * Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
     * 
     */
    @Import(name="speed")
    private @Nullable Output<String> speed;

    /**
     * @return Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
     * 
     */
    public Optional<Output<String>> speed() {
        return Optional.ofNullable(this.speed);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="speedVariable")
    private @Nullable Output<String> speedVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> speedVariable() {
        return Optional.ofNullable(this.speedVariable);
    }

    /**
     * static NAT
     * 
     */
    @Import(name="staticNats")
    private @Nullable Output<List<ServiceLanVpnInterfaceEthernetProfileParcelStaticNatArgs>> staticNats;

    /**
     * @return static NAT
     * 
     */
    public Optional<Output<List<ServiceLanVpnInterfaceEthernetProfileParcelStaticNatArgs>>> staticNats() {
        return Optional.ofNullable(this.staticNats);
    }

    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     * 
     */
    @Import(name="tcpMss")
    private @Nullable Output<Integer> tcpMss;

    /**
     * @return TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     * 
     */
    public Optional<Output<Integer>> tcpMss() {
        return Optional.ofNullable(this.tcpMss);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tcpMssVariable")
    private @Nullable Output<String> tcpMssVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tcpMssVariable() {
        return Optional.ofNullable(this.tcpMssVariable);
    }

    /**
     * Enable tracker for this interface
     * 
     */
    @Import(name="tracker")
    private @Nullable Output<String> tracker;

    /**
     * @return Enable tracker for this interface
     * 
     */
    public Optional<Output<String>> tracker() {
        return Optional.ofNullable(this.tracker);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="trackerVariable")
    private @Nullable Output<String> trackerVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> trackerVariable() {
        return Optional.ofNullable(this.trackerVariable);
    }

    /**
     * Enable/Disable SGT Enforcement on an interface
     * 
     */
    @Import(name="trustsecEnableEnforcedPropogation")
    private @Nullable Output<Boolean> trustsecEnableEnforcedPropogation;

    /**
     * @return Enable/Disable SGT Enforcement on an interface
     * 
     */
    public Optional<Output<Boolean>> trustsecEnableEnforcedPropogation() {
        return Optional.ofNullable(this.trustsecEnableEnforcedPropogation);
    }

    /**
     * Indicates that the interface is trustworthy for CTS - Default value: `false`
     * 
     */
    @Import(name="trustsecEnableSgtPropogation")
    private @Nullable Output<Boolean> trustsecEnableSgtPropogation;

    /**
     * @return Indicates that the interface is trustworthy for CTS - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> trustsecEnableSgtPropogation() {
        return Optional.ofNullable(this.trustsecEnableSgtPropogation);
    }

    /**
     * SGT value between 2 and 65519 - Range: `2`-`65519`
     * 
     */
    @Import(name="trustsecEnforcedSecurityGroupTag")
    private @Nullable Output<Integer> trustsecEnforcedSecurityGroupTag;

    /**
     * @return SGT value between 2 and 65519 - Range: `2`-`65519`
     * 
     */
    public Optional<Output<Integer>> trustsecEnforcedSecurityGroupTag() {
        return Optional.ofNullable(this.trustsecEnforcedSecurityGroupTag);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="trustsecEnforcedSecurityGroupTagVariable")
    private @Nullable Output<String> trustsecEnforcedSecurityGroupTagVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> trustsecEnforcedSecurityGroupTagVariable() {
        return Optional.ofNullable(this.trustsecEnforcedSecurityGroupTagVariable);
    }

    /**
     * Enables the interface for CTS SGT authorization and forwarding - Default value: `true`
     * 
     */
    @Import(name="trustsecPropogate")
    private @Nullable Output<Boolean> trustsecPropogate;

    /**
     * @return Enables the interface for CTS SGT authorization and forwarding - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> trustsecPropogate() {
        return Optional.ofNullable(this.trustsecPropogate);
    }

    /**
     * SGT value between 2 and 65519 - Range: `2`-`65519`
     * 
     */
    @Import(name="trustsecSecurityGroupTag")
    private @Nullable Output<Integer> trustsecSecurityGroupTag;

    /**
     * @return SGT value between 2 and 65519 - Range: `2`-`65519`
     * 
     */
    public Optional<Output<Integer>> trustsecSecurityGroupTag() {
        return Optional.ofNullable(this.trustsecSecurityGroupTag);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="trustsecSecurityGroupTagVariable")
    private @Nullable Output<String> trustsecSecurityGroupTagVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> trustsecSecurityGroupTagVariable() {
        return Optional.ofNullable(this.trustsecSecurityGroupTagVariable);
    }

    /**
     * The version of the profile parcel
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the profile parcel
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    /**
     * Extend remote TLOC over a GRE tunnel to a local LAN interface
     * 
     */
    @Import(name="xconnect")
    private @Nullable Output<String> xconnect;

    /**
     * @return Extend remote TLOC over a GRE tunnel to a local LAN interface
     * 
     */
    public Optional<Output<String>> xconnect() {
        return Optional.ofNullable(this.xconnect);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="xconnectVariable")
    private @Nullable Output<String> xconnectVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> xconnectVariable() {
        return Optional.ofNullable(this.xconnectVariable);
    }

    private ServiceLanVpnInterfaceEthernetProfileParcelState() {}

    private ServiceLanVpnInterfaceEthernetProfileParcelState(ServiceLanVpnInterfaceEthernetProfileParcelState $) {
        this.aclIpv4EgressPolicyId = $.aclIpv4EgressPolicyId;
        this.aclIpv4IngressPolicyId = $.aclIpv4IngressPolicyId;
        this.aclIpv6EgressPolicyId = $.aclIpv6EgressPolicyId;
        this.aclIpv6IngressPolicyId = $.aclIpv6IngressPolicyId;
        this.aclShapingRate = $.aclShapingRate;
        this.aclShapingRateVariable = $.aclShapingRateVariable;
        this.arpTimeout = $.arpTimeout;
        this.arpTimeoutVariable = $.arpTimeoutVariable;
        this.arps = $.arps;
        this.autonegotiate = $.autonegotiate;
        this.autonegotiateVariable = $.autonegotiateVariable;
        this.configDescription = $.configDescription;
        this.configDescriptionVariable = $.configDescriptionVariable;
        this.description = $.description;
        this.duplex = $.duplex;
        this.duplexVariable = $.duplexVariable;
        this.enableDhcpv6 = $.enableDhcpv6;
        this.featureProfileId = $.featureProfileId;
        this.icmpRedirectDisable = $.icmpRedirectDisable;
        this.icmpRedirectDisableVariable = $.icmpRedirectDisableVariable;
        this.interfaceMtu = $.interfaceMtu;
        this.interfaceMtuVariable = $.interfaceMtuVariable;
        this.interfaceName = $.interfaceName;
        this.interfaceNameVariable = $.interfaceNameVariable;
        this.ipDirectedBroadcast = $.ipDirectedBroadcast;
        this.ipDirectedBroadcastVariable = $.ipDirectedBroadcastVariable;
        this.ipMtu = $.ipMtu;
        this.ipMtuVariable = $.ipMtuVariable;
        this.ipv4Address = $.ipv4Address;
        this.ipv4AddressVariable = $.ipv4AddressVariable;
        this.ipv4DhcpDistance = $.ipv4DhcpDistance;
        this.ipv4DhcpDistanceVariable = $.ipv4DhcpDistanceVariable;
        this.ipv4DhcpHelperVariable = $.ipv4DhcpHelperVariable;
        this.ipv4DhcpHelpers = $.ipv4DhcpHelpers;
        this.ipv4Nat = $.ipv4Nat;
        this.ipv4NatLoopback = $.ipv4NatLoopback;
        this.ipv4NatLoopbackVariable = $.ipv4NatLoopbackVariable;
        this.ipv4NatOverload = $.ipv4NatOverload;
        this.ipv4NatOverloadVariable = $.ipv4NatOverloadVariable;
        this.ipv4NatPrefixLength = $.ipv4NatPrefixLength;
        this.ipv4NatPrefixLengthVariable = $.ipv4NatPrefixLengthVariable;
        this.ipv4NatRangeEnd = $.ipv4NatRangeEnd;
        this.ipv4NatRangeEndVariable = $.ipv4NatRangeEndVariable;
        this.ipv4NatRangeStart = $.ipv4NatRangeStart;
        this.ipv4NatRangeStartVariable = $.ipv4NatRangeStartVariable;
        this.ipv4NatTcpTimeout = $.ipv4NatTcpTimeout;
        this.ipv4NatTcpTimeoutVariable = $.ipv4NatTcpTimeoutVariable;
        this.ipv4NatType = $.ipv4NatType;
        this.ipv4NatTypeVariable = $.ipv4NatTypeVariable;
        this.ipv4NatUdpTimeout = $.ipv4NatUdpTimeout;
        this.ipv4NatUdpTimeoutVariable = $.ipv4NatUdpTimeoutVariable;
        this.ipv4SecondaryAddresses = $.ipv4SecondaryAddresses;
        this.ipv4SubnetMask = $.ipv4SubnetMask;
        this.ipv4SubnetMaskVariable = $.ipv4SubnetMaskVariable;
        this.ipv4Vrrps = $.ipv4Vrrps;
        this.ipv6Address = $.ipv6Address;
        this.ipv6AddressVariable = $.ipv6AddressVariable;
        this.ipv6DhcpHelpers = $.ipv6DhcpHelpers;
        this.ipv6DhcpSecondaryAddresses = $.ipv6DhcpSecondaryAddresses;
        this.ipv6Nat = $.ipv6Nat;
        this.ipv6SecondaryAddresses = $.ipv6SecondaryAddresses;
        this.ipv6Vrrps = $.ipv6Vrrps;
        this.loadInterval = $.loadInterval;
        this.loadIntervalVariable = $.loadIntervalVariable;
        this.macAddress = $.macAddress;
        this.macAddressVariable = $.macAddressVariable;
        this.mediaType = $.mediaType;
        this.mediaTypeVariable = $.mediaTypeVariable;
        this.name = $.name;
        this.nat64 = $.nat64;
        this.serviceLanVpnProfileParcelId = $.serviceLanVpnProfileParcelId;
        this.shutdown = $.shutdown;
        this.shutdownVariable = $.shutdownVariable;
        this.speed = $.speed;
        this.speedVariable = $.speedVariable;
        this.staticNats = $.staticNats;
        this.tcpMss = $.tcpMss;
        this.tcpMssVariable = $.tcpMssVariable;
        this.tracker = $.tracker;
        this.trackerVariable = $.trackerVariable;
        this.trustsecEnableEnforcedPropogation = $.trustsecEnableEnforcedPropogation;
        this.trustsecEnableSgtPropogation = $.trustsecEnableSgtPropogation;
        this.trustsecEnforcedSecurityGroupTag = $.trustsecEnforcedSecurityGroupTag;
        this.trustsecEnforcedSecurityGroupTagVariable = $.trustsecEnforcedSecurityGroupTagVariable;
        this.trustsecPropogate = $.trustsecPropogate;
        this.trustsecSecurityGroupTag = $.trustsecSecurityGroupTag;
        this.trustsecSecurityGroupTagVariable = $.trustsecSecurityGroupTagVariable;
        this.version = $.version;
        this.xconnect = $.xconnect;
        this.xconnectVariable = $.xconnectVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceLanVpnInterfaceEthernetProfileParcelState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceLanVpnInterfaceEthernetProfileParcelState $;

        public Builder() {
            $ = new ServiceLanVpnInterfaceEthernetProfileParcelState();
        }

        public Builder(ServiceLanVpnInterfaceEthernetProfileParcelState defaults) {
            $ = new ServiceLanVpnInterfaceEthernetProfileParcelState(Objects.requireNonNull(defaults));
        }

        public Builder aclIpv4EgressPolicyId(@Nullable Output<String> aclIpv4EgressPolicyId) {
            $.aclIpv4EgressPolicyId = aclIpv4EgressPolicyId;
            return this;
        }

        public Builder aclIpv4EgressPolicyId(String aclIpv4EgressPolicyId) {
            return aclIpv4EgressPolicyId(Output.of(aclIpv4EgressPolicyId));
        }

        public Builder aclIpv4IngressPolicyId(@Nullable Output<String> aclIpv4IngressPolicyId) {
            $.aclIpv4IngressPolicyId = aclIpv4IngressPolicyId;
            return this;
        }

        public Builder aclIpv4IngressPolicyId(String aclIpv4IngressPolicyId) {
            return aclIpv4IngressPolicyId(Output.of(aclIpv4IngressPolicyId));
        }

        public Builder aclIpv6EgressPolicyId(@Nullable Output<String> aclIpv6EgressPolicyId) {
            $.aclIpv6EgressPolicyId = aclIpv6EgressPolicyId;
            return this;
        }

        public Builder aclIpv6EgressPolicyId(String aclIpv6EgressPolicyId) {
            return aclIpv6EgressPolicyId(Output.of(aclIpv6EgressPolicyId));
        }

        public Builder aclIpv6IngressPolicyId(@Nullable Output<String> aclIpv6IngressPolicyId) {
            $.aclIpv6IngressPolicyId = aclIpv6IngressPolicyId;
            return this;
        }

        public Builder aclIpv6IngressPolicyId(String aclIpv6IngressPolicyId) {
            return aclIpv6IngressPolicyId(Output.of(aclIpv6IngressPolicyId));
        }

        /**
         * @param aclShapingRate Shaping Rate (Kbps) - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder aclShapingRate(@Nullable Output<Integer> aclShapingRate) {
            $.aclShapingRate = aclShapingRate;
            return this;
        }

        /**
         * @param aclShapingRate Shaping Rate (Kbps) - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder aclShapingRate(Integer aclShapingRate) {
            return aclShapingRate(Output.of(aclShapingRate));
        }

        /**
         * @param aclShapingRateVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder aclShapingRateVariable(@Nullable Output<String> aclShapingRateVariable) {
            $.aclShapingRateVariable = aclShapingRateVariable;
            return this;
        }

        /**
         * @param aclShapingRateVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder aclShapingRateVariable(String aclShapingRateVariable) {
            return aclShapingRateVariable(Output.of(aclShapingRateVariable));
        }

        /**
         * @param arpTimeout Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2147483` - Default value: `1200`
         * 
         * @return builder
         * 
         */
        public Builder arpTimeout(@Nullable Output<Integer> arpTimeout) {
            $.arpTimeout = arpTimeout;
            return this;
        }

        /**
         * @param arpTimeout Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2147483` - Default value: `1200`
         * 
         * @return builder
         * 
         */
        public Builder arpTimeout(Integer arpTimeout) {
            return arpTimeout(Output.of(arpTimeout));
        }

        /**
         * @param arpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder arpTimeoutVariable(@Nullable Output<String> arpTimeoutVariable) {
            $.arpTimeoutVariable = arpTimeoutVariable;
            return this;
        }

        /**
         * @param arpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder arpTimeoutVariable(String arpTimeoutVariable) {
            return arpTimeoutVariable(Output.of(arpTimeoutVariable));
        }

        /**
         * @param arps Configure ARP entries
         * 
         * @return builder
         * 
         */
        public Builder arps(@Nullable Output<List<ServiceLanVpnInterfaceEthernetProfileParcelArpArgs>> arps) {
            $.arps = arps;
            return this;
        }

        /**
         * @param arps Configure ARP entries
         * 
         * @return builder
         * 
         */
        public Builder arps(List<ServiceLanVpnInterfaceEthernetProfileParcelArpArgs> arps) {
            return arps(Output.of(arps));
        }

        /**
         * @param arps Configure ARP entries
         * 
         * @return builder
         * 
         */
        public Builder arps(ServiceLanVpnInterfaceEthernetProfileParcelArpArgs... arps) {
            return arps(List.of(arps));
        }

        /**
         * @param autonegotiate Link autonegotiation
         * 
         * @return builder
         * 
         */
        public Builder autonegotiate(@Nullable Output<Boolean> autonegotiate) {
            $.autonegotiate = autonegotiate;
            return this;
        }

        /**
         * @param autonegotiate Link autonegotiation
         * 
         * @return builder
         * 
         */
        public Builder autonegotiate(Boolean autonegotiate) {
            return autonegotiate(Output.of(autonegotiate));
        }

        /**
         * @param autonegotiateVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder autonegotiateVariable(@Nullable Output<String> autonegotiateVariable) {
            $.autonegotiateVariable = autonegotiateVariable;
            return this;
        }

        /**
         * @param autonegotiateVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder autonegotiateVariable(String autonegotiateVariable) {
            return autonegotiateVariable(Output.of(autonegotiateVariable));
        }

        public Builder configDescription(@Nullable Output<String> configDescription) {
            $.configDescription = configDescription;
            return this;
        }

        public Builder configDescription(String configDescription) {
            return configDescription(Output.of(configDescription));
        }

        /**
         * @param configDescriptionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder configDescriptionVariable(@Nullable Output<String> configDescriptionVariable) {
            $.configDescriptionVariable = configDescriptionVariable;
            return this;
        }

        /**
         * @param configDescriptionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder configDescriptionVariable(String configDescriptionVariable) {
            return configDescriptionVariable(Output.of(configDescriptionVariable));
        }

        /**
         * @param description The description of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param duplex Duplex mode - Choices: `full`, `half`, `auto`
         * 
         * @return builder
         * 
         */
        public Builder duplex(@Nullable Output<String> duplex) {
            $.duplex = duplex;
            return this;
        }

        /**
         * @param duplex Duplex mode - Choices: `full`, `half`, `auto`
         * 
         * @return builder
         * 
         */
        public Builder duplex(String duplex) {
            return duplex(Output.of(duplex));
        }

        /**
         * @param duplexVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder duplexVariable(@Nullable Output<String> duplexVariable) {
            $.duplexVariable = duplexVariable;
            return this;
        }

        /**
         * @param duplexVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder duplexVariable(String duplexVariable) {
            return duplexVariable(Output.of(duplexVariable));
        }

        /**
         * @param enableDhcpv6 Enable DHCPv6
         * 
         * @return builder
         * 
         */
        public Builder enableDhcpv6(@Nullable Output<Boolean> enableDhcpv6) {
            $.enableDhcpv6 = enableDhcpv6;
            return this;
        }

        /**
         * @param enableDhcpv6 Enable DHCPv6
         * 
         * @return builder
         * 
         */
        public Builder enableDhcpv6(Boolean enableDhcpv6) {
            return enableDhcpv6(Output.of(enableDhcpv6));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(@Nullable Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param icmpRedirectDisable ICMP/ICMPv6 Redirect Disable - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder icmpRedirectDisable(@Nullable Output<Boolean> icmpRedirectDisable) {
            $.icmpRedirectDisable = icmpRedirectDisable;
            return this;
        }

        /**
         * @param icmpRedirectDisable ICMP/ICMPv6 Redirect Disable - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder icmpRedirectDisable(Boolean icmpRedirectDisable) {
            return icmpRedirectDisable(Output.of(icmpRedirectDisable));
        }

        /**
         * @param icmpRedirectDisableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder icmpRedirectDisableVariable(@Nullable Output<String> icmpRedirectDisableVariable) {
            $.icmpRedirectDisableVariable = icmpRedirectDisableVariable;
            return this;
        }

        /**
         * @param icmpRedirectDisableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder icmpRedirectDisableVariable(String icmpRedirectDisableVariable) {
            return icmpRedirectDisableVariable(Output.of(icmpRedirectDisableVariable));
        }

        /**
         * @param interfaceMtu Interface MTU - Range: `1500`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder interfaceMtu(@Nullable Output<Integer> interfaceMtu) {
            $.interfaceMtu = interfaceMtu;
            return this;
        }

        /**
         * @param interfaceMtu Interface MTU - Range: `1500`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder interfaceMtu(Integer interfaceMtu) {
            return interfaceMtu(Output.of(interfaceMtu));
        }

        /**
         * @param interfaceMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceMtuVariable(@Nullable Output<String> interfaceMtuVariable) {
            $.interfaceMtuVariable = interfaceMtuVariable;
            return this;
        }

        /**
         * @param interfaceMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceMtuVariable(String interfaceMtuVariable) {
            return interfaceMtuVariable(Output.of(interfaceMtuVariable));
        }

        public Builder interfaceName(@Nullable Output<String> interfaceName) {
            $.interfaceName = interfaceName;
            return this;
        }

        public Builder interfaceName(String interfaceName) {
            return interfaceName(Output.of(interfaceName));
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(@Nullable Output<String> interfaceNameVariable) {
            $.interfaceNameVariable = interfaceNameVariable;
            return this;
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(String interfaceNameVariable) {
            return interfaceNameVariable(Output.of(interfaceNameVariable));
        }

        /**
         * @param ipDirectedBroadcast IP Directed-Broadcast - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcast(@Nullable Output<Boolean> ipDirectedBroadcast) {
            $.ipDirectedBroadcast = ipDirectedBroadcast;
            return this;
        }

        /**
         * @param ipDirectedBroadcast IP Directed-Broadcast - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcast(Boolean ipDirectedBroadcast) {
            return ipDirectedBroadcast(Output.of(ipDirectedBroadcast));
        }

        /**
         * @param ipDirectedBroadcastVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcastVariable(@Nullable Output<String> ipDirectedBroadcastVariable) {
            $.ipDirectedBroadcastVariable = ipDirectedBroadcastVariable;
            return this;
        }

        /**
         * @param ipDirectedBroadcastVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcastVariable(String ipDirectedBroadcastVariable) {
            return ipDirectedBroadcastVariable(Output.of(ipDirectedBroadcastVariable));
        }

        /**
         * @param ipMtu IP MTU for GigabitEthernet main &lt;576..Interface MTU&gt;, GigabitEthernet subinterface &lt;576..9216&gt;, Other Interfaces
         * &lt;576..2000&gt; in bytes - Range: `576`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder ipMtu(@Nullable Output<Integer> ipMtu) {
            $.ipMtu = ipMtu;
            return this;
        }

        /**
         * @param ipMtu IP MTU for GigabitEthernet main &lt;576..Interface MTU&gt;, GigabitEthernet subinterface &lt;576..9216&gt;, Other Interfaces
         * &lt;576..2000&gt; in bytes - Range: `576`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder ipMtu(Integer ipMtu) {
            return ipMtu(Output.of(ipMtu));
        }

        /**
         * @param ipMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipMtuVariable(@Nullable Output<String> ipMtuVariable) {
            $.ipMtuVariable = ipMtuVariable;
            return this;
        }

        /**
         * @param ipMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipMtuVariable(String ipMtuVariable) {
            return ipMtuVariable(Output.of(ipMtuVariable));
        }

        /**
         * @param ipv4Address IP Address
         * 
         * @return builder
         * 
         */
        public Builder ipv4Address(@Nullable Output<String> ipv4Address) {
            $.ipv4Address = ipv4Address;
            return this;
        }

        /**
         * @param ipv4Address IP Address
         * 
         * @return builder
         * 
         */
        public Builder ipv4Address(String ipv4Address) {
            return ipv4Address(Output.of(ipv4Address));
        }

        /**
         * @param ipv4AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4AddressVariable(@Nullable Output<String> ipv4AddressVariable) {
            $.ipv4AddressVariable = ipv4AddressVariable;
            return this;
        }

        /**
         * @param ipv4AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4AddressVariable(String ipv4AddressVariable) {
            return ipv4AddressVariable(Output.of(ipv4AddressVariable));
        }

        /**
         * @param ipv4DhcpDistance DHCP Distance - Range: `1`-`65536`
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpDistance(@Nullable Output<Integer> ipv4DhcpDistance) {
            $.ipv4DhcpDistance = ipv4DhcpDistance;
            return this;
        }

        /**
         * @param ipv4DhcpDistance DHCP Distance - Range: `1`-`65536`
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpDistance(Integer ipv4DhcpDistance) {
            return ipv4DhcpDistance(Output.of(ipv4DhcpDistance));
        }

        /**
         * @param ipv4DhcpDistanceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpDistanceVariable(@Nullable Output<String> ipv4DhcpDistanceVariable) {
            $.ipv4DhcpDistanceVariable = ipv4DhcpDistanceVariable;
            return this;
        }

        /**
         * @param ipv4DhcpDistanceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpDistanceVariable(String ipv4DhcpDistanceVariable) {
            return ipv4DhcpDistanceVariable(Output.of(ipv4DhcpDistanceVariable));
        }

        /**
         * @param ipv4DhcpHelperVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelperVariable(@Nullable Output<String> ipv4DhcpHelperVariable) {
            $.ipv4DhcpHelperVariable = ipv4DhcpHelperVariable;
            return this;
        }

        /**
         * @param ipv4DhcpHelperVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelperVariable(String ipv4DhcpHelperVariable) {
            return ipv4DhcpHelperVariable(Output.of(ipv4DhcpHelperVariable));
        }

        /**
         * @param ipv4DhcpHelpers List of DHCP IPv4 helper addresses (min 1, max 8)
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpers(@Nullable Output<List<String>> ipv4DhcpHelpers) {
            $.ipv4DhcpHelpers = ipv4DhcpHelpers;
            return this;
        }

        /**
         * @param ipv4DhcpHelpers List of DHCP IPv4 helper addresses (min 1, max 8)
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpers(List<String> ipv4DhcpHelpers) {
            return ipv4DhcpHelpers(Output.of(ipv4DhcpHelpers));
        }

        /**
         * @param ipv4DhcpHelpers List of DHCP IPv4 helper addresses (min 1, max 8)
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpers(String... ipv4DhcpHelpers) {
            return ipv4DhcpHelpers(List.of(ipv4DhcpHelpers));
        }

        /**
         * @param ipv4Nat enable Network Address Translation on this interface - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipv4Nat(@Nullable Output<Boolean> ipv4Nat) {
            $.ipv4Nat = ipv4Nat;
            return this;
        }

        /**
         * @param ipv4Nat enable Network Address Translation on this interface - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipv4Nat(Boolean ipv4Nat) {
            return ipv4Nat(Output.of(ipv4Nat));
        }

        /**
         * @param ipv4NatLoopback NAT Inside Source Loopback Interface
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatLoopback(@Nullable Output<String> ipv4NatLoopback) {
            $.ipv4NatLoopback = ipv4NatLoopback;
            return this;
        }

        /**
         * @param ipv4NatLoopback NAT Inside Source Loopback Interface
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatLoopback(String ipv4NatLoopback) {
            return ipv4NatLoopback(Output.of(ipv4NatLoopback));
        }

        /**
         * @param ipv4NatLoopbackVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatLoopbackVariable(@Nullable Output<String> ipv4NatLoopbackVariable) {
            $.ipv4NatLoopbackVariable = ipv4NatLoopbackVariable;
            return this;
        }

        /**
         * @param ipv4NatLoopbackVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatLoopbackVariable(String ipv4NatLoopbackVariable) {
            return ipv4NatLoopbackVariable(Output.of(ipv4NatLoopbackVariable));
        }

        /**
         * @param ipv4NatOverload NAT Overload - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatOverload(@Nullable Output<Boolean> ipv4NatOverload) {
            $.ipv4NatOverload = ipv4NatOverload;
            return this;
        }

        /**
         * @param ipv4NatOverload NAT Overload - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatOverload(Boolean ipv4NatOverload) {
            return ipv4NatOverload(Output.of(ipv4NatOverload));
        }

        /**
         * @param ipv4NatOverloadVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatOverloadVariable(@Nullable Output<String> ipv4NatOverloadVariable) {
            $.ipv4NatOverloadVariable = ipv4NatOverloadVariable;
            return this;
        }

        /**
         * @param ipv4NatOverloadVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatOverloadVariable(String ipv4NatOverloadVariable) {
            return ipv4NatOverloadVariable(Output.of(ipv4NatOverloadVariable));
        }

        /**
         * @param ipv4NatPrefixLength NAT Pool Prefix Length - Range: `1`-`32`
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatPrefixLength(@Nullable Output<Integer> ipv4NatPrefixLength) {
            $.ipv4NatPrefixLength = ipv4NatPrefixLength;
            return this;
        }

        /**
         * @param ipv4NatPrefixLength NAT Pool Prefix Length - Range: `1`-`32`
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatPrefixLength(Integer ipv4NatPrefixLength) {
            return ipv4NatPrefixLength(Output.of(ipv4NatPrefixLength));
        }

        /**
         * @param ipv4NatPrefixLengthVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatPrefixLengthVariable(@Nullable Output<String> ipv4NatPrefixLengthVariable) {
            $.ipv4NatPrefixLengthVariable = ipv4NatPrefixLengthVariable;
            return this;
        }

        /**
         * @param ipv4NatPrefixLengthVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatPrefixLengthVariable(String ipv4NatPrefixLengthVariable) {
            return ipv4NatPrefixLengthVariable(Output.of(ipv4NatPrefixLengthVariable));
        }

        /**
         * @param ipv4NatRangeEnd NAT Pool Range End
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatRangeEnd(@Nullable Output<String> ipv4NatRangeEnd) {
            $.ipv4NatRangeEnd = ipv4NatRangeEnd;
            return this;
        }

        /**
         * @param ipv4NatRangeEnd NAT Pool Range End
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatRangeEnd(String ipv4NatRangeEnd) {
            return ipv4NatRangeEnd(Output.of(ipv4NatRangeEnd));
        }

        /**
         * @param ipv4NatRangeEndVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatRangeEndVariable(@Nullable Output<String> ipv4NatRangeEndVariable) {
            $.ipv4NatRangeEndVariable = ipv4NatRangeEndVariable;
            return this;
        }

        /**
         * @param ipv4NatRangeEndVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatRangeEndVariable(String ipv4NatRangeEndVariable) {
            return ipv4NatRangeEndVariable(Output.of(ipv4NatRangeEndVariable));
        }

        /**
         * @param ipv4NatRangeStart NAT Pool Range Start
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatRangeStart(@Nullable Output<String> ipv4NatRangeStart) {
            $.ipv4NatRangeStart = ipv4NatRangeStart;
            return this;
        }

        /**
         * @param ipv4NatRangeStart NAT Pool Range Start
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatRangeStart(String ipv4NatRangeStart) {
            return ipv4NatRangeStart(Output.of(ipv4NatRangeStart));
        }

        /**
         * @param ipv4NatRangeStartVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatRangeStartVariable(@Nullable Output<String> ipv4NatRangeStartVariable) {
            $.ipv4NatRangeStartVariable = ipv4NatRangeStartVariable;
            return this;
        }

        /**
         * @param ipv4NatRangeStartVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatRangeStartVariable(String ipv4NatRangeStartVariable) {
            return ipv4NatRangeStartVariable(Output.of(ipv4NatRangeStartVariable));
        }

        /**
         * @param ipv4NatTcpTimeout Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatTcpTimeout(@Nullable Output<Integer> ipv4NatTcpTimeout) {
            $.ipv4NatTcpTimeout = ipv4NatTcpTimeout;
            return this;
        }

        /**
         * @param ipv4NatTcpTimeout Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatTcpTimeout(Integer ipv4NatTcpTimeout) {
            return ipv4NatTcpTimeout(Output.of(ipv4NatTcpTimeout));
        }

        /**
         * @param ipv4NatTcpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatTcpTimeoutVariable(@Nullable Output<String> ipv4NatTcpTimeoutVariable) {
            $.ipv4NatTcpTimeoutVariable = ipv4NatTcpTimeoutVariable;
            return this;
        }

        /**
         * @param ipv4NatTcpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatTcpTimeoutVariable(String ipv4NatTcpTimeoutVariable) {
            return ipv4NatTcpTimeoutVariable(Output.of(ipv4NatTcpTimeoutVariable));
        }

        /**
         * @param ipv4NatType NAT Type - Choices: `pool`, `loopback`
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatType(@Nullable Output<String> ipv4NatType) {
            $.ipv4NatType = ipv4NatType;
            return this;
        }

        /**
         * @param ipv4NatType NAT Type - Choices: `pool`, `loopback`
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatType(String ipv4NatType) {
            return ipv4NatType(Output.of(ipv4NatType));
        }

        /**
         * @param ipv4NatTypeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatTypeVariable(@Nullable Output<String> ipv4NatTypeVariable) {
            $.ipv4NatTypeVariable = ipv4NatTypeVariable;
            return this;
        }

        /**
         * @param ipv4NatTypeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatTypeVariable(String ipv4NatTypeVariable) {
            return ipv4NatTypeVariable(Output.of(ipv4NatTypeVariable));
        }

        /**
         * @param ipv4NatUdpTimeout Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatUdpTimeout(@Nullable Output<Integer> ipv4NatUdpTimeout) {
            $.ipv4NatUdpTimeout = ipv4NatUdpTimeout;
            return this;
        }

        /**
         * @param ipv4NatUdpTimeout Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatUdpTimeout(Integer ipv4NatUdpTimeout) {
            return ipv4NatUdpTimeout(Output.of(ipv4NatUdpTimeout));
        }

        /**
         * @param ipv4NatUdpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatUdpTimeoutVariable(@Nullable Output<String> ipv4NatUdpTimeoutVariable) {
            $.ipv4NatUdpTimeoutVariable = ipv4NatUdpTimeoutVariable;
            return this;
        }

        /**
         * @param ipv4NatUdpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4NatUdpTimeoutVariable(String ipv4NatUdpTimeoutVariable) {
            return ipv4NatUdpTimeoutVariable(Output.of(ipv4NatUdpTimeoutVariable));
        }

        /**
         * @param ipv4SecondaryAddresses Secondary IpV4 Addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4SecondaryAddresses(@Nullable Output<List<ServiceLanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArgs>> ipv4SecondaryAddresses) {
            $.ipv4SecondaryAddresses = ipv4SecondaryAddresses;
            return this;
        }

        /**
         * @param ipv4SecondaryAddresses Secondary IpV4 Addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4SecondaryAddresses(List<ServiceLanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArgs> ipv4SecondaryAddresses) {
            return ipv4SecondaryAddresses(Output.of(ipv4SecondaryAddresses));
        }

        /**
         * @param ipv4SecondaryAddresses Secondary IpV4 Addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4SecondaryAddresses(ServiceLanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArgs... ipv4SecondaryAddresses) {
            return ipv4SecondaryAddresses(List.of(ipv4SecondaryAddresses));
        }

        /**
         * @param ipv4SubnetMask Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
         * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
         * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
         * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
         * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder ipv4SubnetMask(@Nullable Output<String> ipv4SubnetMask) {
            $.ipv4SubnetMask = ipv4SubnetMask;
            return this;
        }

        /**
         * @param ipv4SubnetMask Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
         * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
         * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
         * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
         * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder ipv4SubnetMask(String ipv4SubnetMask) {
            return ipv4SubnetMask(Output.of(ipv4SubnetMask));
        }

        /**
         * @param ipv4SubnetMaskVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4SubnetMaskVariable(@Nullable Output<String> ipv4SubnetMaskVariable) {
            $.ipv4SubnetMaskVariable = ipv4SubnetMaskVariable;
            return this;
        }

        /**
         * @param ipv4SubnetMaskVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4SubnetMaskVariable(String ipv4SubnetMaskVariable) {
            return ipv4SubnetMaskVariable(Output.of(ipv4SubnetMaskVariable));
        }

        /**
         * @param ipv4Vrrps Enable VRRP
         * 
         * @return builder
         * 
         */
        public Builder ipv4Vrrps(@Nullable Output<List<ServiceLanVpnInterfaceEthernetProfileParcelIpv4VrrpArgs>> ipv4Vrrps) {
            $.ipv4Vrrps = ipv4Vrrps;
            return this;
        }

        /**
         * @param ipv4Vrrps Enable VRRP
         * 
         * @return builder
         * 
         */
        public Builder ipv4Vrrps(List<ServiceLanVpnInterfaceEthernetProfileParcelIpv4VrrpArgs> ipv4Vrrps) {
            return ipv4Vrrps(Output.of(ipv4Vrrps));
        }

        /**
         * @param ipv4Vrrps Enable VRRP
         * 
         * @return builder
         * 
         */
        public Builder ipv4Vrrps(ServiceLanVpnInterfaceEthernetProfileParcelIpv4VrrpArgs... ipv4Vrrps) {
            return ipv4Vrrps(List.of(ipv4Vrrps));
        }

        /**
         * @param ipv6Address IPv6 Address Secondary
         * 
         * @return builder
         * 
         */
        public Builder ipv6Address(@Nullable Output<String> ipv6Address) {
            $.ipv6Address = ipv6Address;
            return this;
        }

        /**
         * @param ipv6Address IPv6 Address Secondary
         * 
         * @return builder
         * 
         */
        public Builder ipv6Address(String ipv6Address) {
            return ipv6Address(Output.of(ipv6Address));
        }

        /**
         * @param ipv6AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv6AddressVariable(@Nullable Output<String> ipv6AddressVariable) {
            $.ipv6AddressVariable = ipv6AddressVariable;
            return this;
        }

        /**
         * @param ipv6AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv6AddressVariable(String ipv6AddressVariable) {
            return ipv6AddressVariable(Output.of(ipv6AddressVariable));
        }

        /**
         * @param ipv6DhcpHelpers DHCPv6 Helper
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpHelpers(@Nullable Output<List<ServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpHelperArgs>> ipv6DhcpHelpers) {
            $.ipv6DhcpHelpers = ipv6DhcpHelpers;
            return this;
        }

        /**
         * @param ipv6DhcpHelpers DHCPv6 Helper
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpHelpers(List<ServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpHelperArgs> ipv6DhcpHelpers) {
            return ipv6DhcpHelpers(Output.of(ipv6DhcpHelpers));
        }

        /**
         * @param ipv6DhcpHelpers DHCPv6 Helper
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpHelpers(ServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpHelperArgs... ipv6DhcpHelpers) {
            return ipv6DhcpHelpers(List.of(ipv6DhcpHelpers));
        }

        /**
         * @param ipv6DhcpSecondaryAddresses secondary IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpSecondaryAddresses(@Nullable Output<List<ServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArgs>> ipv6DhcpSecondaryAddresses) {
            $.ipv6DhcpSecondaryAddresses = ipv6DhcpSecondaryAddresses;
            return this;
        }

        /**
         * @param ipv6DhcpSecondaryAddresses secondary IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpSecondaryAddresses(List<ServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArgs> ipv6DhcpSecondaryAddresses) {
            return ipv6DhcpSecondaryAddresses(Output.of(ipv6DhcpSecondaryAddresses));
        }

        /**
         * @param ipv6DhcpSecondaryAddresses secondary IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpSecondaryAddresses(ServiceLanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArgs... ipv6DhcpSecondaryAddresses) {
            return ipv6DhcpSecondaryAddresses(List.of(ipv6DhcpSecondaryAddresses));
        }

        /**
         * @param ipv6Nat enable Network Address Translation ipv6 on this interface - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipv6Nat(@Nullable Output<Boolean> ipv6Nat) {
            $.ipv6Nat = ipv6Nat;
            return this;
        }

        /**
         * @param ipv6Nat enable Network Address Translation ipv6 on this interface - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipv6Nat(Boolean ipv6Nat) {
            return ipv6Nat(Output.of(ipv6Nat));
        }

        /**
         * @param ipv6SecondaryAddresses Static secondary IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv6SecondaryAddresses(@Nullable Output<List<ServiceLanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArgs>> ipv6SecondaryAddresses) {
            $.ipv6SecondaryAddresses = ipv6SecondaryAddresses;
            return this;
        }

        /**
         * @param ipv6SecondaryAddresses Static secondary IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv6SecondaryAddresses(List<ServiceLanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArgs> ipv6SecondaryAddresses) {
            return ipv6SecondaryAddresses(Output.of(ipv6SecondaryAddresses));
        }

        /**
         * @param ipv6SecondaryAddresses Static secondary IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv6SecondaryAddresses(ServiceLanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArgs... ipv6SecondaryAddresses) {
            return ipv6SecondaryAddresses(List.of(ipv6SecondaryAddresses));
        }

        /**
         * @param ipv6Vrrps Enable VRRP Ipv6
         * 
         * @return builder
         * 
         */
        public Builder ipv6Vrrps(@Nullable Output<List<ServiceLanVpnInterfaceEthernetProfileParcelIpv6VrrpArgs>> ipv6Vrrps) {
            $.ipv6Vrrps = ipv6Vrrps;
            return this;
        }

        /**
         * @param ipv6Vrrps Enable VRRP Ipv6
         * 
         * @return builder
         * 
         */
        public Builder ipv6Vrrps(List<ServiceLanVpnInterfaceEthernetProfileParcelIpv6VrrpArgs> ipv6Vrrps) {
            return ipv6Vrrps(Output.of(ipv6Vrrps));
        }

        /**
         * @param ipv6Vrrps Enable VRRP Ipv6
         * 
         * @return builder
         * 
         */
        public Builder ipv6Vrrps(ServiceLanVpnInterfaceEthernetProfileParcelIpv6VrrpArgs... ipv6Vrrps) {
            return ipv6Vrrps(List.of(ipv6Vrrps));
        }

        /**
         * @param loadInterval Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
         * 
         * @return builder
         * 
         */
        public Builder loadInterval(@Nullable Output<Integer> loadInterval) {
            $.loadInterval = loadInterval;
            return this;
        }

        /**
         * @param loadInterval Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
         * 
         * @return builder
         * 
         */
        public Builder loadInterval(Integer loadInterval) {
            return loadInterval(Output.of(loadInterval));
        }

        /**
         * @param loadIntervalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder loadIntervalVariable(@Nullable Output<String> loadIntervalVariable) {
            $.loadIntervalVariable = loadIntervalVariable;
            return this;
        }

        /**
         * @param loadIntervalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder loadIntervalVariable(String loadIntervalVariable) {
            return loadIntervalVariable(Output.of(loadIntervalVariable));
        }

        /**
         * @param macAddress MAC Address
         * 
         * @return builder
         * 
         */
        public Builder macAddress(@Nullable Output<String> macAddress) {
            $.macAddress = macAddress;
            return this;
        }

        /**
         * @param macAddress MAC Address
         * 
         * @return builder
         * 
         */
        public Builder macAddress(String macAddress) {
            return macAddress(Output.of(macAddress));
        }

        /**
         * @param macAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder macAddressVariable(@Nullable Output<String> macAddressVariable) {
            $.macAddressVariable = macAddressVariable;
            return this;
        }

        /**
         * @param macAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder macAddressVariable(String macAddressVariable) {
            return macAddressVariable(Output.of(macAddressVariable));
        }

        /**
         * @param mediaType Media type - Choices: `auto-select`, `rj45`, `sfp`
         * 
         * @return builder
         * 
         */
        public Builder mediaType(@Nullable Output<String> mediaType) {
            $.mediaType = mediaType;
            return this;
        }

        /**
         * @param mediaType Media type - Choices: `auto-select`, `rj45`, `sfp`
         * 
         * @return builder
         * 
         */
        public Builder mediaType(String mediaType) {
            return mediaType(Output.of(mediaType));
        }

        /**
         * @param mediaTypeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder mediaTypeVariable(@Nullable Output<String> mediaTypeVariable) {
            $.mediaTypeVariable = mediaTypeVariable;
            return this;
        }

        /**
         * @param mediaTypeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder mediaTypeVariable(String mediaTypeVariable) {
            return mediaTypeVariable(Output.of(mediaTypeVariable));
        }

        /**
         * @param name The name of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nat64 NAT64 on this interface - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder nat64(@Nullable Output<Boolean> nat64) {
            $.nat64 = nat64;
            return this;
        }

        /**
         * @param nat64 NAT64 on this interface - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder nat64(Boolean nat64) {
            return nat64(Output.of(nat64));
        }

        /**
         * @param serviceLanVpnProfileParcelId Service LAN VPN Profile Profile ID
         * 
         * @return builder
         * 
         */
        public Builder serviceLanVpnProfileParcelId(@Nullable Output<String> serviceLanVpnProfileParcelId) {
            $.serviceLanVpnProfileParcelId = serviceLanVpnProfileParcelId;
            return this;
        }

        /**
         * @param serviceLanVpnProfileParcelId Service LAN VPN Profile Profile ID
         * 
         * @return builder
         * 
         */
        public Builder serviceLanVpnProfileParcelId(String serviceLanVpnProfileParcelId) {
            return serviceLanVpnProfileParcelId(Output.of(serviceLanVpnProfileParcelId));
        }

        /**
         * @param shutdown - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder shutdown(@Nullable Output<Boolean> shutdown) {
            $.shutdown = shutdown;
            return this;
        }

        /**
         * @param shutdown - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder shutdown(Boolean shutdown) {
            return shutdown(Output.of(shutdown));
        }

        /**
         * @param shutdownVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdownVariable(@Nullable Output<String> shutdownVariable) {
            $.shutdownVariable = shutdownVariable;
            return this;
        }

        /**
         * @param shutdownVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdownVariable(String shutdownVariable) {
            return shutdownVariable(Output.of(shutdownVariable));
        }

        /**
         * @param speed Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
         * 
         * @return builder
         * 
         */
        public Builder speed(@Nullable Output<String> speed) {
            $.speed = speed;
            return this;
        }

        /**
         * @param speed Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
         * 
         * @return builder
         * 
         */
        public Builder speed(String speed) {
            return speed(Output.of(speed));
        }

        /**
         * @param speedVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder speedVariable(@Nullable Output<String> speedVariable) {
            $.speedVariable = speedVariable;
            return this;
        }

        /**
         * @param speedVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder speedVariable(String speedVariable) {
            return speedVariable(Output.of(speedVariable));
        }

        /**
         * @param staticNats static NAT
         * 
         * @return builder
         * 
         */
        public Builder staticNats(@Nullable Output<List<ServiceLanVpnInterfaceEthernetProfileParcelStaticNatArgs>> staticNats) {
            $.staticNats = staticNats;
            return this;
        }

        /**
         * @param staticNats static NAT
         * 
         * @return builder
         * 
         */
        public Builder staticNats(List<ServiceLanVpnInterfaceEthernetProfileParcelStaticNatArgs> staticNats) {
            return staticNats(Output.of(staticNats));
        }

        /**
         * @param staticNats static NAT
         * 
         * @return builder
         * 
         */
        public Builder staticNats(ServiceLanVpnInterfaceEthernetProfileParcelStaticNatArgs... staticNats) {
            return staticNats(List.of(staticNats));
        }

        /**
         * @param tcpMss TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
         * 
         * @return builder
         * 
         */
        public Builder tcpMss(@Nullable Output<Integer> tcpMss) {
            $.tcpMss = tcpMss;
            return this;
        }

        /**
         * @param tcpMss TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
         * 
         * @return builder
         * 
         */
        public Builder tcpMss(Integer tcpMss) {
            return tcpMss(Output.of(tcpMss));
        }

        /**
         * @param tcpMssVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tcpMssVariable(@Nullable Output<String> tcpMssVariable) {
            $.tcpMssVariable = tcpMssVariable;
            return this;
        }

        /**
         * @param tcpMssVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tcpMssVariable(String tcpMssVariable) {
            return tcpMssVariable(Output.of(tcpMssVariable));
        }

        /**
         * @param tracker Enable tracker for this interface
         * 
         * @return builder
         * 
         */
        public Builder tracker(@Nullable Output<String> tracker) {
            $.tracker = tracker;
            return this;
        }

        /**
         * @param tracker Enable tracker for this interface
         * 
         * @return builder
         * 
         */
        public Builder tracker(String tracker) {
            return tracker(Output.of(tracker));
        }

        /**
         * @param trackerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackerVariable(@Nullable Output<String> trackerVariable) {
            $.trackerVariable = trackerVariable;
            return this;
        }

        /**
         * @param trackerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackerVariable(String trackerVariable) {
            return trackerVariable(Output.of(trackerVariable));
        }

        /**
         * @param trustsecEnableEnforcedPropogation Enable/Disable SGT Enforcement on an interface
         * 
         * @return builder
         * 
         */
        public Builder trustsecEnableEnforcedPropogation(@Nullable Output<Boolean> trustsecEnableEnforcedPropogation) {
            $.trustsecEnableEnforcedPropogation = trustsecEnableEnforcedPropogation;
            return this;
        }

        /**
         * @param trustsecEnableEnforcedPropogation Enable/Disable SGT Enforcement on an interface
         * 
         * @return builder
         * 
         */
        public Builder trustsecEnableEnforcedPropogation(Boolean trustsecEnableEnforcedPropogation) {
            return trustsecEnableEnforcedPropogation(Output.of(trustsecEnableEnforcedPropogation));
        }

        /**
         * @param trustsecEnableSgtPropogation Indicates that the interface is trustworthy for CTS - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder trustsecEnableSgtPropogation(@Nullable Output<Boolean> trustsecEnableSgtPropogation) {
            $.trustsecEnableSgtPropogation = trustsecEnableSgtPropogation;
            return this;
        }

        /**
         * @param trustsecEnableSgtPropogation Indicates that the interface is trustworthy for CTS - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder trustsecEnableSgtPropogation(Boolean trustsecEnableSgtPropogation) {
            return trustsecEnableSgtPropogation(Output.of(trustsecEnableSgtPropogation));
        }

        /**
         * @param trustsecEnforcedSecurityGroupTag SGT value between 2 and 65519 - Range: `2`-`65519`
         * 
         * @return builder
         * 
         */
        public Builder trustsecEnforcedSecurityGroupTag(@Nullable Output<Integer> trustsecEnforcedSecurityGroupTag) {
            $.trustsecEnforcedSecurityGroupTag = trustsecEnforcedSecurityGroupTag;
            return this;
        }

        /**
         * @param trustsecEnforcedSecurityGroupTag SGT value between 2 and 65519 - Range: `2`-`65519`
         * 
         * @return builder
         * 
         */
        public Builder trustsecEnforcedSecurityGroupTag(Integer trustsecEnforcedSecurityGroupTag) {
            return trustsecEnforcedSecurityGroupTag(Output.of(trustsecEnforcedSecurityGroupTag));
        }

        /**
         * @param trustsecEnforcedSecurityGroupTagVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trustsecEnforcedSecurityGroupTagVariable(@Nullable Output<String> trustsecEnforcedSecurityGroupTagVariable) {
            $.trustsecEnforcedSecurityGroupTagVariable = trustsecEnforcedSecurityGroupTagVariable;
            return this;
        }

        /**
         * @param trustsecEnforcedSecurityGroupTagVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trustsecEnforcedSecurityGroupTagVariable(String trustsecEnforcedSecurityGroupTagVariable) {
            return trustsecEnforcedSecurityGroupTagVariable(Output.of(trustsecEnforcedSecurityGroupTagVariable));
        }

        /**
         * @param trustsecPropogate Enables the interface for CTS SGT authorization and forwarding - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder trustsecPropogate(@Nullable Output<Boolean> trustsecPropogate) {
            $.trustsecPropogate = trustsecPropogate;
            return this;
        }

        /**
         * @param trustsecPropogate Enables the interface for CTS SGT authorization and forwarding - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder trustsecPropogate(Boolean trustsecPropogate) {
            return trustsecPropogate(Output.of(trustsecPropogate));
        }

        /**
         * @param trustsecSecurityGroupTag SGT value between 2 and 65519 - Range: `2`-`65519`
         * 
         * @return builder
         * 
         */
        public Builder trustsecSecurityGroupTag(@Nullable Output<Integer> trustsecSecurityGroupTag) {
            $.trustsecSecurityGroupTag = trustsecSecurityGroupTag;
            return this;
        }

        /**
         * @param trustsecSecurityGroupTag SGT value between 2 and 65519 - Range: `2`-`65519`
         * 
         * @return builder
         * 
         */
        public Builder trustsecSecurityGroupTag(Integer trustsecSecurityGroupTag) {
            return trustsecSecurityGroupTag(Output.of(trustsecSecurityGroupTag));
        }

        /**
         * @param trustsecSecurityGroupTagVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trustsecSecurityGroupTagVariable(@Nullable Output<String> trustsecSecurityGroupTagVariable) {
            $.trustsecSecurityGroupTagVariable = trustsecSecurityGroupTagVariable;
            return this;
        }

        /**
         * @param trustsecSecurityGroupTagVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trustsecSecurityGroupTagVariable(String trustsecSecurityGroupTagVariable) {
            return trustsecSecurityGroupTagVariable(Output.of(trustsecSecurityGroupTagVariable));
        }

        /**
         * @param version The version of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        /**
         * @param xconnect Extend remote TLOC over a GRE tunnel to a local LAN interface
         * 
         * @return builder
         * 
         */
        public Builder xconnect(@Nullable Output<String> xconnect) {
            $.xconnect = xconnect;
            return this;
        }

        /**
         * @param xconnect Extend remote TLOC over a GRE tunnel to a local LAN interface
         * 
         * @return builder
         * 
         */
        public Builder xconnect(String xconnect) {
            return xconnect(Output.of(xconnect));
        }

        /**
         * @param xconnectVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder xconnectVariable(@Nullable Output<String> xconnectVariable) {
            $.xconnectVariable = xconnectVariable;
            return this;
        }

        /**
         * @param xconnectVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder xconnectVariable(String xconnectVariable) {
            return xconnectVariable(Output.of(xconnectVariable));
        }

        public ServiceLanVpnInterfaceEthernetProfileParcelState build() {
            return $;
        }
    }

}
