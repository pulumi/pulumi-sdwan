// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter {
    /**
     * @return Community value, e.g. `1000:10000` or `internet` or `local-AS`
     * 
     */
    private String community;
    /**
     * @return Community additive
     * 
     */
    private Boolean communityAdditive;
    /**
     * @return OMP tag
     * 
     */
    private Integer ompTag;
    /**
     * @return Preference
     * 
     */
    private Integer preference;
    /**
     * @return Service TLOC color
     * 
     */
    private String serviceTlocColor;
    /**
     * @return Service TLOC encapsulation
     * 
     */
    private String serviceTlocEncapsulation;
    /**
     * @return Service TLOC IP address
     * 
     */
    private String serviceTlocIp;
    /**
     * @return Service TLOC list ID
     * 
     */
    private String serviceTlocListId;
    /**
     * @return Service TLOC list version
     * 
     */
    private Integer serviceTlocListVersion;
    /**
     * @return Service type
     * 
     */
    private String serviceType;
    /**
     * @return Service VPN ID
     * 
     */
    private Integer serviceVpnId;
    /**
     * @return TLOC action
     * 
     */
    private String tlocAction;
    /**
     * @return TLOC color
     * 
     */
    private String tlocColor;
    /**
     * @return TLOC encapsulation
     * 
     */
    private String tlocEncapsulation;
    /**
     * @return TLOC IP address
     * 
     */
    private String tlocIp;
    /**
     * @return TLOC list ID
     * 
     */
    private String tlocListId;
    /**
     * @return TLOC list version
     * 
     */
    private Integer tlocListVersion;
    /**
     * @return Type of set parameter
     * 
     */
    private String type;

    private GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter() {}
    /**
     * @return Community value, e.g. `1000:10000` or `internet` or `local-AS`
     * 
     */
    public String community() {
        return this.community;
    }
    /**
     * @return Community additive
     * 
     */
    public Boolean communityAdditive() {
        return this.communityAdditive;
    }
    /**
     * @return OMP tag
     * 
     */
    public Integer ompTag() {
        return this.ompTag;
    }
    /**
     * @return Preference
     * 
     */
    public Integer preference() {
        return this.preference;
    }
    /**
     * @return Service TLOC color
     * 
     */
    public String serviceTlocColor() {
        return this.serviceTlocColor;
    }
    /**
     * @return Service TLOC encapsulation
     * 
     */
    public String serviceTlocEncapsulation() {
        return this.serviceTlocEncapsulation;
    }
    /**
     * @return Service TLOC IP address
     * 
     */
    public String serviceTlocIp() {
        return this.serviceTlocIp;
    }
    /**
     * @return Service TLOC list ID
     * 
     */
    public String serviceTlocListId() {
        return this.serviceTlocListId;
    }
    /**
     * @return Service TLOC list version
     * 
     */
    public Integer serviceTlocListVersion() {
        return this.serviceTlocListVersion;
    }
    /**
     * @return Service type
     * 
     */
    public String serviceType() {
        return this.serviceType;
    }
    /**
     * @return Service VPN ID
     * 
     */
    public Integer serviceVpnId() {
        return this.serviceVpnId;
    }
    /**
     * @return TLOC action
     * 
     */
    public String tlocAction() {
        return this.tlocAction;
    }
    /**
     * @return TLOC color
     * 
     */
    public String tlocColor() {
        return this.tlocColor;
    }
    /**
     * @return TLOC encapsulation
     * 
     */
    public String tlocEncapsulation() {
        return this.tlocEncapsulation;
    }
    /**
     * @return TLOC IP address
     * 
     */
    public String tlocIp() {
        return this.tlocIp;
    }
    /**
     * @return TLOC list ID
     * 
     */
    public String tlocListId() {
        return this.tlocListId;
    }
    /**
     * @return TLOC list version
     * 
     */
    public Integer tlocListVersion() {
        return this.tlocListVersion;
    }
    /**
     * @return Type of set parameter
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String community;
        private Boolean communityAdditive;
        private Integer ompTag;
        private Integer preference;
        private String serviceTlocColor;
        private String serviceTlocEncapsulation;
        private String serviceTlocIp;
        private String serviceTlocListId;
        private Integer serviceTlocListVersion;
        private String serviceType;
        private Integer serviceVpnId;
        private String tlocAction;
        private String tlocColor;
        private String tlocEncapsulation;
        private String tlocIp;
        private String tlocListId;
        private Integer tlocListVersion;
        private String type;
        public Builder() {}
        public Builder(GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.community = defaults.community;
    	      this.communityAdditive = defaults.communityAdditive;
    	      this.ompTag = defaults.ompTag;
    	      this.preference = defaults.preference;
    	      this.serviceTlocColor = defaults.serviceTlocColor;
    	      this.serviceTlocEncapsulation = defaults.serviceTlocEncapsulation;
    	      this.serviceTlocIp = defaults.serviceTlocIp;
    	      this.serviceTlocListId = defaults.serviceTlocListId;
    	      this.serviceTlocListVersion = defaults.serviceTlocListVersion;
    	      this.serviceType = defaults.serviceType;
    	      this.serviceVpnId = defaults.serviceVpnId;
    	      this.tlocAction = defaults.tlocAction;
    	      this.tlocColor = defaults.tlocColor;
    	      this.tlocEncapsulation = defaults.tlocEncapsulation;
    	      this.tlocIp = defaults.tlocIp;
    	      this.tlocListId = defaults.tlocListId;
    	      this.tlocListVersion = defaults.tlocListVersion;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder community(String community) {
            if (community == null) {
              throw new MissingRequiredPropertyException("GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter", "community");
            }
            this.community = community;
            return this;
        }
        @CustomType.Setter
        public Builder communityAdditive(Boolean communityAdditive) {
            if (communityAdditive == null) {
              throw new MissingRequiredPropertyException("GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter", "communityAdditive");
            }
            this.communityAdditive = communityAdditive;
            return this;
        }
        @CustomType.Setter
        public Builder ompTag(Integer ompTag) {
            if (ompTag == null) {
              throw new MissingRequiredPropertyException("GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter", "ompTag");
            }
            this.ompTag = ompTag;
            return this;
        }
        @CustomType.Setter
        public Builder preference(Integer preference) {
            if (preference == null) {
              throw new MissingRequiredPropertyException("GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter", "preference");
            }
            this.preference = preference;
            return this;
        }
        @CustomType.Setter
        public Builder serviceTlocColor(String serviceTlocColor) {
            if (serviceTlocColor == null) {
              throw new MissingRequiredPropertyException("GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter", "serviceTlocColor");
            }
            this.serviceTlocColor = serviceTlocColor;
            return this;
        }
        @CustomType.Setter
        public Builder serviceTlocEncapsulation(String serviceTlocEncapsulation) {
            if (serviceTlocEncapsulation == null) {
              throw new MissingRequiredPropertyException("GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter", "serviceTlocEncapsulation");
            }
            this.serviceTlocEncapsulation = serviceTlocEncapsulation;
            return this;
        }
        @CustomType.Setter
        public Builder serviceTlocIp(String serviceTlocIp) {
            if (serviceTlocIp == null) {
              throw new MissingRequiredPropertyException("GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter", "serviceTlocIp");
            }
            this.serviceTlocIp = serviceTlocIp;
            return this;
        }
        @CustomType.Setter
        public Builder serviceTlocListId(String serviceTlocListId) {
            if (serviceTlocListId == null) {
              throw new MissingRequiredPropertyException("GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter", "serviceTlocListId");
            }
            this.serviceTlocListId = serviceTlocListId;
            return this;
        }
        @CustomType.Setter
        public Builder serviceTlocListVersion(Integer serviceTlocListVersion) {
            if (serviceTlocListVersion == null) {
              throw new MissingRequiredPropertyException("GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter", "serviceTlocListVersion");
            }
            this.serviceTlocListVersion = serviceTlocListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder serviceType(String serviceType) {
            if (serviceType == null) {
              throw new MissingRequiredPropertyException("GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter", "serviceType");
            }
            this.serviceType = serviceType;
            return this;
        }
        @CustomType.Setter
        public Builder serviceVpnId(Integer serviceVpnId) {
            if (serviceVpnId == null) {
              throw new MissingRequiredPropertyException("GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter", "serviceVpnId");
            }
            this.serviceVpnId = serviceVpnId;
            return this;
        }
        @CustomType.Setter
        public Builder tlocAction(String tlocAction) {
            if (tlocAction == null) {
              throw new MissingRequiredPropertyException("GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter", "tlocAction");
            }
            this.tlocAction = tlocAction;
            return this;
        }
        @CustomType.Setter
        public Builder tlocColor(String tlocColor) {
            if (tlocColor == null) {
              throw new MissingRequiredPropertyException("GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter", "tlocColor");
            }
            this.tlocColor = tlocColor;
            return this;
        }
        @CustomType.Setter
        public Builder tlocEncapsulation(String tlocEncapsulation) {
            if (tlocEncapsulation == null) {
              throw new MissingRequiredPropertyException("GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter", "tlocEncapsulation");
            }
            this.tlocEncapsulation = tlocEncapsulation;
            return this;
        }
        @CustomType.Setter
        public Builder tlocIp(String tlocIp) {
            if (tlocIp == null) {
              throw new MissingRequiredPropertyException("GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter", "tlocIp");
            }
            this.tlocIp = tlocIp;
            return this;
        }
        @CustomType.Setter
        public Builder tlocListId(String tlocListId) {
            if (tlocListId == null) {
              throw new MissingRequiredPropertyException("GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter", "tlocListId");
            }
            this.tlocListId = tlocListId;
            return this;
        }
        @CustomType.Setter
        public Builder tlocListVersion(Integer tlocListVersion) {
            if (tlocListVersion == null) {
              throw new MissingRequiredPropertyException("GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter", "tlocListVersion");
            }
            this.tlocListVersion = tlocListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter", "type");
            }
            this.type = type;
            return this;
        }
        public GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter build() {
            final var _resultValue = new GetCustomControlTopologyPolicyDefinitionSequenceActionEntrySetParameter();
            _resultValue.community = community;
            _resultValue.communityAdditive = communityAdditive;
            _resultValue.ompTag = ompTag;
            _resultValue.preference = preference;
            _resultValue.serviceTlocColor = serviceTlocColor;
            _resultValue.serviceTlocEncapsulation = serviceTlocEncapsulation;
            _resultValue.serviceTlocIp = serviceTlocIp;
            _resultValue.serviceTlocListId = serviceTlocListId;
            _resultValue.serviceTlocListVersion = serviceTlocListVersion;
            _resultValue.serviceType = serviceType;
            _resultValue.serviceVpnId = serviceVpnId;
            _resultValue.tlocAction = tlocAction;
            _resultValue.tlocColor = tlocColor;
            _resultValue.tlocEncapsulation = tlocEncapsulation;
            _resultValue.tlocIp = tlocIp;
            _resultValue.tlocListId = tlocListId;
            _resultValue.tlocListVersion = tlocListVersion;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
