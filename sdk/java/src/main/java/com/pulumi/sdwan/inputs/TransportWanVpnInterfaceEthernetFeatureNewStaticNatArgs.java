// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransportWanVpnInterfaceEthernetFeatureNewStaticNatArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransportWanVpnInterfaceEthernetFeatureNewStaticNatArgs Empty = new TransportWanVpnInterfaceEthernetFeatureNewStaticNatArgs();

    /**
     * Direction of static NAT translation
     *   - Choices: `inside`, `outside`
     *   - Default value: `inside`
     * 
     */
    @Import(name="direction")
    private @Nullable Output<String> direction;

    /**
     * @return Direction of static NAT translation
     *   - Choices: `inside`, `outside`
     *   - Default value: `inside`
     * 
     */
    public Optional<Output<String>> direction() {
        return Optional.ofNullable(this.direction);
    }

    /**
     * Source IP address to be translated
     * 
     */
    @Import(name="sourceIp")
    private @Nullable Output<String> sourceIp;

    /**
     * @return Source IP address to be translated
     * 
     */
    public Optional<Output<String>> sourceIp() {
        return Optional.ofNullable(this.sourceIp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sourceIpVariable")
    private @Nullable Output<String> sourceIpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sourceIpVariable() {
        return Optional.ofNullable(this.sourceIpVariable);
    }

    /**
     * Source VPN ID
     *   - Range: `0`-`65530`
     *   - Default value: `0`
     * 
     */
    @Import(name="sourceVpn")
    private @Nullable Output<Integer> sourceVpn;

    /**
     * @return Source VPN ID
     *   - Range: `0`-`65530`
     *   - Default value: `0`
     * 
     */
    public Optional<Output<Integer>> sourceVpn() {
        return Optional.ofNullable(this.sourceVpn);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sourceVpnVariable")
    private @Nullable Output<String> sourceVpnVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sourceVpnVariable() {
        return Optional.ofNullable(this.sourceVpnVariable);
    }

    /**
     * Statically translated source IP address
     * 
     */
    @Import(name="translatedIp")
    private @Nullable Output<String> translatedIp;

    /**
     * @return Statically translated source IP address
     * 
     */
    public Optional<Output<String>> translatedIp() {
        return Optional.ofNullable(this.translatedIp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="translatedIpVariable")
    private @Nullable Output<String> translatedIpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> translatedIpVariable() {
        return Optional.ofNullable(this.translatedIpVariable);
    }

    private TransportWanVpnInterfaceEthernetFeatureNewStaticNatArgs() {}

    private TransportWanVpnInterfaceEthernetFeatureNewStaticNatArgs(TransportWanVpnInterfaceEthernetFeatureNewStaticNatArgs $) {
        this.direction = $.direction;
        this.sourceIp = $.sourceIp;
        this.sourceIpVariable = $.sourceIpVariable;
        this.sourceVpn = $.sourceVpn;
        this.sourceVpnVariable = $.sourceVpnVariable;
        this.translatedIp = $.translatedIp;
        this.translatedIpVariable = $.translatedIpVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransportWanVpnInterfaceEthernetFeatureNewStaticNatArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransportWanVpnInterfaceEthernetFeatureNewStaticNatArgs $;

        public Builder() {
            $ = new TransportWanVpnInterfaceEthernetFeatureNewStaticNatArgs();
        }

        public Builder(TransportWanVpnInterfaceEthernetFeatureNewStaticNatArgs defaults) {
            $ = new TransportWanVpnInterfaceEthernetFeatureNewStaticNatArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param direction Direction of static NAT translation
         *   - Choices: `inside`, `outside`
         *   - Default value: `inside`
         * 
         * @return builder
         * 
         */
        public Builder direction(@Nullable Output<String> direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param direction Direction of static NAT translation
         *   - Choices: `inside`, `outside`
         *   - Default value: `inside`
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            return direction(Output.of(direction));
        }

        /**
         * @param sourceIp Source IP address to be translated
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(@Nullable Output<String> sourceIp) {
            $.sourceIp = sourceIp;
            return this;
        }

        /**
         * @param sourceIp Source IP address to be translated
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(String sourceIp) {
            return sourceIp(Output.of(sourceIp));
        }

        /**
         * @param sourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceIpVariable(@Nullable Output<String> sourceIpVariable) {
            $.sourceIpVariable = sourceIpVariable;
            return this;
        }

        /**
         * @param sourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceIpVariable(String sourceIpVariable) {
            return sourceIpVariable(Output.of(sourceIpVariable));
        }

        /**
         * @param sourceVpn Source VPN ID
         *   - Range: `0`-`65530`
         *   - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder sourceVpn(@Nullable Output<Integer> sourceVpn) {
            $.sourceVpn = sourceVpn;
            return this;
        }

        /**
         * @param sourceVpn Source VPN ID
         *   - Range: `0`-`65530`
         *   - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder sourceVpn(Integer sourceVpn) {
            return sourceVpn(Output.of(sourceVpn));
        }

        /**
         * @param sourceVpnVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceVpnVariable(@Nullable Output<String> sourceVpnVariable) {
            $.sourceVpnVariable = sourceVpnVariable;
            return this;
        }

        /**
         * @param sourceVpnVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceVpnVariable(String sourceVpnVariable) {
            return sourceVpnVariable(Output.of(sourceVpnVariable));
        }

        /**
         * @param translatedIp Statically translated source IP address
         * 
         * @return builder
         * 
         */
        public Builder translatedIp(@Nullable Output<String> translatedIp) {
            $.translatedIp = translatedIp;
            return this;
        }

        /**
         * @param translatedIp Statically translated source IP address
         * 
         * @return builder
         * 
         */
        public Builder translatedIp(String translatedIp) {
            return translatedIp(Output.of(translatedIp));
        }

        /**
         * @param translatedIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder translatedIpVariable(@Nullable Output<String> translatedIpVariable) {
            $.translatedIpVariable = translatedIpVariable;
            return this;
        }

        /**
         * @param translatedIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder translatedIpVariable(String translatedIpVariable) {
            return translatedIpVariable(Output.of(translatedIpVariable));
        }

        public TransportWanVpnInterfaceEthernetFeatureNewStaticNatArgs build() {
            return $;
        }
    }

}
