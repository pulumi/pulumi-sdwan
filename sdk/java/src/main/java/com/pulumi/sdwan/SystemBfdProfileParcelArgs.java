// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.SystemBfdProfileParcelColorArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SystemBfdProfileParcelArgs extends com.pulumi.resources.ResourceArgs {

    public static final SystemBfdProfileParcelArgs Empty = new SystemBfdProfileParcelArgs();

    /**
     * Set color that identifies the WAN transport tunnel
     * 
     */
    @Import(name="colors")
    private @Nullable Output<List<SystemBfdProfileParcelColorArgs>> colors;

    /**
     * @return Set color that identifies the WAN transport tunnel
     * 
     */
    public Optional<Output<List<SystemBfdProfileParcelColorArgs>>> colors() {
        return Optional.ofNullable(this.colors);
    }

    /**
     * - Range: `0`-`63` - Default value: `48`
     * 
     */
    @Import(name="defaultDscp")
    private @Nullable Output<Integer> defaultDscp;

    /**
     * @return - Range: `0`-`63` - Default value: `48`
     * 
     */
    public Optional<Output<Integer>> defaultDscp() {
        return Optional.ofNullable(this.defaultDscp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="defaultDscpVariable")
    private @Nullable Output<String> defaultDscpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> defaultDscpVariable() {
        return Optional.ofNullable(this.defaultDscpVariable);
    }

    /**
     * The description of the profile parcel
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the profile parcel
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId", required=true)
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }

    /**
     * - Range: `1`-`6` - Default value: `6`
     * 
     */
    @Import(name="multiplier")
    private @Nullable Output<Integer> multiplier;

    /**
     * @return - Range: `1`-`6` - Default value: `6`
     * 
     */
    public Optional<Output<Integer>> multiplier() {
        return Optional.ofNullable(this.multiplier);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="multiplierVariable")
    private @Nullable Output<String> multiplierVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> multiplierVariable() {
        return Optional.ofNullable(this.multiplierVariable);
    }

    /**
     * The name of the profile parcel
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the profile parcel
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * - Range: `1`-`4294967295` - Default value: `600000`
     * 
     */
    @Import(name="pollInterval")
    private @Nullable Output<Integer> pollInterval;

    /**
     * @return - Range: `1`-`4294967295` - Default value: `600000`
     * 
     */
    public Optional<Output<Integer>> pollInterval() {
        return Optional.ofNullable(this.pollInterval);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="pollIntervalVariable")
    private @Nullable Output<String> pollIntervalVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> pollIntervalVariable() {
        return Optional.ofNullable(this.pollIntervalVariable);
    }

    private SystemBfdProfileParcelArgs() {}

    private SystemBfdProfileParcelArgs(SystemBfdProfileParcelArgs $) {
        this.colors = $.colors;
        this.defaultDscp = $.defaultDscp;
        this.defaultDscpVariable = $.defaultDscpVariable;
        this.description = $.description;
        this.featureProfileId = $.featureProfileId;
        this.multiplier = $.multiplier;
        this.multiplierVariable = $.multiplierVariable;
        this.name = $.name;
        this.pollInterval = $.pollInterval;
        this.pollIntervalVariable = $.pollIntervalVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SystemBfdProfileParcelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SystemBfdProfileParcelArgs $;

        public Builder() {
            $ = new SystemBfdProfileParcelArgs();
        }

        public Builder(SystemBfdProfileParcelArgs defaults) {
            $ = new SystemBfdProfileParcelArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param colors Set color that identifies the WAN transport tunnel
         * 
         * @return builder
         * 
         */
        public Builder colors(@Nullable Output<List<SystemBfdProfileParcelColorArgs>> colors) {
            $.colors = colors;
            return this;
        }

        /**
         * @param colors Set color that identifies the WAN transport tunnel
         * 
         * @return builder
         * 
         */
        public Builder colors(List<SystemBfdProfileParcelColorArgs> colors) {
            return colors(Output.of(colors));
        }

        /**
         * @param colors Set color that identifies the WAN transport tunnel
         * 
         * @return builder
         * 
         */
        public Builder colors(SystemBfdProfileParcelColorArgs... colors) {
            return colors(List.of(colors));
        }

        /**
         * @param defaultDscp - Range: `0`-`63` - Default value: `48`
         * 
         * @return builder
         * 
         */
        public Builder defaultDscp(@Nullable Output<Integer> defaultDscp) {
            $.defaultDscp = defaultDscp;
            return this;
        }

        /**
         * @param defaultDscp - Range: `0`-`63` - Default value: `48`
         * 
         * @return builder
         * 
         */
        public Builder defaultDscp(Integer defaultDscp) {
            return defaultDscp(Output.of(defaultDscp));
        }

        /**
         * @param defaultDscpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder defaultDscpVariable(@Nullable Output<String> defaultDscpVariable) {
            $.defaultDscpVariable = defaultDscpVariable;
            return this;
        }

        /**
         * @param defaultDscpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder defaultDscpVariable(String defaultDscpVariable) {
            return defaultDscpVariable(Output.of(defaultDscpVariable));
        }

        /**
         * @param description The description of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param multiplier - Range: `1`-`6` - Default value: `6`
         * 
         * @return builder
         * 
         */
        public Builder multiplier(@Nullable Output<Integer> multiplier) {
            $.multiplier = multiplier;
            return this;
        }

        /**
         * @param multiplier - Range: `1`-`6` - Default value: `6`
         * 
         * @return builder
         * 
         */
        public Builder multiplier(Integer multiplier) {
            return multiplier(Output.of(multiplier));
        }

        /**
         * @param multiplierVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder multiplierVariable(@Nullable Output<String> multiplierVariable) {
            $.multiplierVariable = multiplierVariable;
            return this;
        }

        /**
         * @param multiplierVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder multiplierVariable(String multiplierVariable) {
            return multiplierVariable(Output.of(multiplierVariable));
        }

        /**
         * @param name The name of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param pollInterval - Range: `1`-`4294967295` - Default value: `600000`
         * 
         * @return builder
         * 
         */
        public Builder pollInterval(@Nullable Output<Integer> pollInterval) {
            $.pollInterval = pollInterval;
            return this;
        }

        /**
         * @param pollInterval - Range: `1`-`4294967295` - Default value: `600000`
         * 
         * @return builder
         * 
         */
        public Builder pollInterval(Integer pollInterval) {
            return pollInterval(Output.of(pollInterval));
        }

        /**
         * @param pollIntervalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder pollIntervalVariable(@Nullable Output<String> pollIntervalVariable) {
            $.pollIntervalVariable = pollIntervalVariable;
            return this;
        }

        /**
         * @param pollIntervalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder pollIntervalVariable(String pollIntervalVariable) {
            return pollIntervalVariable(Output.of(pollIntervalVariable));
        }

        public SystemBfdProfileParcelArgs build() {
            if ($.featureProfileId == null) {
                throw new MissingRequiredPropertyException("SystemBfdProfileParcelArgs", "featureProfileId");
            }
            return $;
        }
    }

}
