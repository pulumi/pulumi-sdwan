// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CedgeAaaFeatureTemplateRadiusServerGroupServerArgs extends com.pulumi.resources.ResourceArgs {

    public static final CedgeAaaFeatureTemplateRadiusServerGroupServerArgs Empty = new CedgeAaaFeatureTemplateRadiusServerGroupServerArgs();

    /**
     * Set Accounting port to use to connect to Radius server
     *   - Range: `1`-`65534`
     *   - Default value: `1813`
     * 
     */
    @Import(name="accountingPort")
    private @Nullable Output<Integer> accountingPort;

    /**
     * @return Set Accounting port to use to connect to Radius server
     *   - Range: `1`-`65534`
     *   - Default value: `1813`
     * 
     */
    public Optional<Output<Integer>> accountingPort() {
        return Optional.ofNullable(this.accountingPort);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="accountingPortVariable")
    private @Nullable Output<String> accountingPortVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> accountingPortVariable() {
        return Optional.ofNullable(this.accountingPortVariable);
    }

    /**
     * Set IP address of Radius server
     * 
     */
    @Import(name="address")
    private @Nullable Output<String> address;

    /**
     * @return Set IP address of Radius server
     * 
     */
    public Optional<Output<String>> address() {
        return Optional.ofNullable(this.address);
    }

    /**
     * Set Authentication port to use to connect to Radius server
     *   - Range: `1`-`65534`
     *   - Default value: `1812`
     * 
     */
    @Import(name="authenticationPort")
    private @Nullable Output<Integer> authenticationPort;

    /**
     * @return Set Authentication port to use to connect to Radius server
     *   - Range: `1`-`65534`
     *   - Default value: `1812`
     * 
     */
    public Optional<Output<Integer>> authenticationPort() {
        return Optional.ofNullable(this.authenticationPort);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="authenticationPortVariable")
    private @Nullable Output<String> authenticationPortVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> authenticationPortVariable() {
        return Optional.ofNullable(this.authenticationPortVariable);
    }

    /**
     * Type of encyption. To be used for type 6
     *   - Choices: `6`, `7`
     * 
     */
    @Import(name="encryptionType")
    private @Nullable Output<String> encryptionType;

    /**
     * @return Type of encyption. To be used for type 6
     *   - Choices: `6`, `7`
     * 
     */
    public Optional<Output<String>> encryptionType() {
        return Optional.ofNullable(this.encryptionType);
    }

    /**
     * Set the Radius server shared key
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return Set the Radius server shared key
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * key type
     *   - Choices: `key`, `pac`
     *   - Default value: `key`
     * 
     */
    @Import(name="keyType")
    private @Nullable Output<String> keyType;

    /**
     * @return key type
     *   - Choices: `key`, `pac`
     *   - Default value: `key`
     * 
     */
    public Optional<Output<String>> keyType() {
        return Optional.ofNullable(this.keyType);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="keyTypeVariable")
    private @Nullable Output<String> keyTypeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> keyTypeVariable() {
        return Optional.ofNullable(this.keyTypeVariable);
    }

    /**
     * Indicates if list item is considered optional.
     * 
     */
    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    /**
     * Configure how many times to contact this Radius server
     *   - Range: `1`-`100`
     *   - Default value: `3`
     * 
     */
    @Import(name="retransmit")
    private @Nullable Output<Integer> retransmit;

    /**
     * @return Configure how many times to contact this Radius server
     *   - Range: `1`-`100`
     *   - Default value: `3`
     * 
     */
    public Optional<Output<Integer>> retransmit() {
        return Optional.ofNullable(this.retransmit);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="retransmitVariable")
    private @Nullable Output<String> retransmitVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> retransmitVariable() {
        return Optional.ofNullable(this.retransmitVariable);
    }

    /**
     * Set the Radius server shared type 7 encrypted key
     * 
     */
    @Import(name="secretKey")
    private @Nullable Output<String> secretKey;

    /**
     * @return Set the Radius server shared type 7 encrypted key
     * 
     */
    public Optional<Output<String>> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="secretKeyVariable")
    private @Nullable Output<String> secretKeyVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> secretKeyVariable() {
        return Optional.ofNullable(this.secretKeyVariable);
    }

    /**
     * Configure how long to wait for replies from the Radius server
     *   - Range: `1`-`1000`
     *   - Default value: `5`
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<Integer> timeout;

    /**
     * @return Configure how long to wait for replies from the Radius server
     *   - Range: `1`-`1000`
     *   - Default value: `5`
     * 
     */
    public Optional<Output<Integer>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="timeoutVariable")
    private @Nullable Output<String> timeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> timeoutVariable() {
        return Optional.ofNullable(this.timeoutVariable);
    }

    private CedgeAaaFeatureTemplateRadiusServerGroupServerArgs() {}

    private CedgeAaaFeatureTemplateRadiusServerGroupServerArgs(CedgeAaaFeatureTemplateRadiusServerGroupServerArgs $) {
        this.accountingPort = $.accountingPort;
        this.accountingPortVariable = $.accountingPortVariable;
        this.address = $.address;
        this.authenticationPort = $.authenticationPort;
        this.authenticationPortVariable = $.authenticationPortVariable;
        this.encryptionType = $.encryptionType;
        this.key = $.key;
        this.keyType = $.keyType;
        this.keyTypeVariable = $.keyTypeVariable;
        this.optional = $.optional;
        this.retransmit = $.retransmit;
        this.retransmitVariable = $.retransmitVariable;
        this.secretKey = $.secretKey;
        this.secretKeyVariable = $.secretKeyVariable;
        this.timeout = $.timeout;
        this.timeoutVariable = $.timeoutVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CedgeAaaFeatureTemplateRadiusServerGroupServerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CedgeAaaFeatureTemplateRadiusServerGroupServerArgs $;

        public Builder() {
            $ = new CedgeAaaFeatureTemplateRadiusServerGroupServerArgs();
        }

        public Builder(CedgeAaaFeatureTemplateRadiusServerGroupServerArgs defaults) {
            $ = new CedgeAaaFeatureTemplateRadiusServerGroupServerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountingPort Set Accounting port to use to connect to Radius server
         *   - Range: `1`-`65534`
         *   - Default value: `1813`
         * 
         * @return builder
         * 
         */
        public Builder accountingPort(@Nullable Output<Integer> accountingPort) {
            $.accountingPort = accountingPort;
            return this;
        }

        /**
         * @param accountingPort Set Accounting port to use to connect to Radius server
         *   - Range: `1`-`65534`
         *   - Default value: `1813`
         * 
         * @return builder
         * 
         */
        public Builder accountingPort(Integer accountingPort) {
            return accountingPort(Output.of(accountingPort));
        }

        /**
         * @param accountingPortVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder accountingPortVariable(@Nullable Output<String> accountingPortVariable) {
            $.accountingPortVariable = accountingPortVariable;
            return this;
        }

        /**
         * @param accountingPortVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder accountingPortVariable(String accountingPortVariable) {
            return accountingPortVariable(Output.of(accountingPortVariable));
        }

        /**
         * @param address Set IP address of Radius server
         * 
         * @return builder
         * 
         */
        public Builder address(@Nullable Output<String> address) {
            $.address = address;
            return this;
        }

        /**
         * @param address Set IP address of Radius server
         * 
         * @return builder
         * 
         */
        public Builder address(String address) {
            return address(Output.of(address));
        }

        /**
         * @param authenticationPort Set Authentication port to use to connect to Radius server
         *   - Range: `1`-`65534`
         *   - Default value: `1812`
         * 
         * @return builder
         * 
         */
        public Builder authenticationPort(@Nullable Output<Integer> authenticationPort) {
            $.authenticationPort = authenticationPort;
            return this;
        }

        /**
         * @param authenticationPort Set Authentication port to use to connect to Radius server
         *   - Range: `1`-`65534`
         *   - Default value: `1812`
         * 
         * @return builder
         * 
         */
        public Builder authenticationPort(Integer authenticationPort) {
            return authenticationPort(Output.of(authenticationPort));
        }

        /**
         * @param authenticationPortVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder authenticationPortVariable(@Nullable Output<String> authenticationPortVariable) {
            $.authenticationPortVariable = authenticationPortVariable;
            return this;
        }

        /**
         * @param authenticationPortVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder authenticationPortVariable(String authenticationPortVariable) {
            return authenticationPortVariable(Output.of(authenticationPortVariable));
        }

        /**
         * @param encryptionType Type of encyption. To be used for type 6
         *   - Choices: `6`, `7`
         * 
         * @return builder
         * 
         */
        public Builder encryptionType(@Nullable Output<String> encryptionType) {
            $.encryptionType = encryptionType;
            return this;
        }

        /**
         * @param encryptionType Type of encyption. To be used for type 6
         *   - Choices: `6`, `7`
         * 
         * @return builder
         * 
         */
        public Builder encryptionType(String encryptionType) {
            return encryptionType(Output.of(encryptionType));
        }

        /**
         * @param key Set the Radius server shared key
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Set the Radius server shared key
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param keyType key type
         *   - Choices: `key`, `pac`
         *   - Default value: `key`
         * 
         * @return builder
         * 
         */
        public Builder keyType(@Nullable Output<String> keyType) {
            $.keyType = keyType;
            return this;
        }

        /**
         * @param keyType key type
         *   - Choices: `key`, `pac`
         *   - Default value: `key`
         * 
         * @return builder
         * 
         */
        public Builder keyType(String keyType) {
            return keyType(Output.of(keyType));
        }

        /**
         * @param keyTypeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder keyTypeVariable(@Nullable Output<String> keyTypeVariable) {
            $.keyTypeVariable = keyTypeVariable;
            return this;
        }

        /**
         * @param keyTypeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder keyTypeVariable(String keyTypeVariable) {
            return keyTypeVariable(Output.of(keyTypeVariable));
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        /**
         * @param retransmit Configure how many times to contact this Radius server
         *   - Range: `1`-`100`
         *   - Default value: `3`
         * 
         * @return builder
         * 
         */
        public Builder retransmit(@Nullable Output<Integer> retransmit) {
            $.retransmit = retransmit;
            return this;
        }

        /**
         * @param retransmit Configure how many times to contact this Radius server
         *   - Range: `1`-`100`
         *   - Default value: `3`
         * 
         * @return builder
         * 
         */
        public Builder retransmit(Integer retransmit) {
            return retransmit(Output.of(retransmit));
        }

        /**
         * @param retransmitVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder retransmitVariable(@Nullable Output<String> retransmitVariable) {
            $.retransmitVariable = retransmitVariable;
            return this;
        }

        /**
         * @param retransmitVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder retransmitVariable(String retransmitVariable) {
            return retransmitVariable(Output.of(retransmitVariable));
        }

        /**
         * @param secretKey Set the Radius server shared type 7 encrypted key
         * 
         * @return builder
         * 
         */
        public Builder secretKey(@Nullable Output<String> secretKey) {
            $.secretKey = secretKey;
            return this;
        }

        /**
         * @param secretKey Set the Radius server shared type 7 encrypted key
         * 
         * @return builder
         * 
         */
        public Builder secretKey(String secretKey) {
            return secretKey(Output.of(secretKey));
        }

        /**
         * @param secretKeyVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder secretKeyVariable(@Nullable Output<String> secretKeyVariable) {
            $.secretKeyVariable = secretKeyVariable;
            return this;
        }

        /**
         * @param secretKeyVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder secretKeyVariable(String secretKeyVariable) {
            return secretKeyVariable(Output.of(secretKeyVariable));
        }

        /**
         * @param timeout Configure how long to wait for replies from the Radius server
         *   - Range: `1`-`1000`
         *   - Default value: `5`
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout Configure how long to wait for replies from the Radius server
         *   - Range: `1`-`1000`
         *   - Default value: `5`
         * 
         * @return builder
         * 
         */
        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        /**
         * @param timeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder timeoutVariable(@Nullable Output<String> timeoutVariable) {
            $.timeoutVariable = timeoutVariable;
            return this;
        }

        /**
         * @param timeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder timeoutVariable(String timeoutVariable) {
            return timeoutVariable(Output.of(timeoutVariable));
        }

        public CedgeAaaFeatureTemplateRadiusServerGroupServerArgs build() {
            return $;
        }
    }

}
