// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.TransportManagementVpnFeatureIpv4StaticRouteArgs;
import com.pulumi.sdwan.inputs.TransportManagementVpnFeatureIpv6StaticRouteArgs;
import com.pulumi.sdwan.inputs.TransportManagementVpnFeatureNewHostMappingArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransportManagementVpnFeatureArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransportManagementVpnFeatureArgs Empty = new TransportManagementVpnFeatureArgs();

    /**
     * The description of the Feature
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId", required=true)
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }

    /**
     * IPv4 Static Route
     * 
     */
    @Import(name="ipv4StaticRoutes")
    private @Nullable Output<List<TransportManagementVpnFeatureIpv4StaticRouteArgs>> ipv4StaticRoutes;

    /**
     * @return IPv4 Static Route
     * 
     */
    public Optional<Output<List<TransportManagementVpnFeatureIpv4StaticRouteArgs>>> ipv4StaticRoutes() {
        return Optional.ofNullable(this.ipv4StaticRoutes);
    }

    /**
     * IPv6 Static Route
     * 
     */
    @Import(name="ipv6StaticRoutes")
    private @Nullable Output<List<TransportManagementVpnFeatureIpv6StaticRouteArgs>> ipv6StaticRoutes;

    /**
     * @return IPv6 Static Route
     * 
     */
    public Optional<Output<List<TransportManagementVpnFeatureIpv6StaticRouteArgs>>> ipv6StaticRoutes() {
        return Optional.ofNullable(this.ipv6StaticRoutes);
    }

    /**
     * The name of the Feature
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="newHostMappings")
    private @Nullable Output<List<TransportManagementVpnFeatureNewHostMappingArgs>> newHostMappings;

    public Optional<Output<List<TransportManagementVpnFeatureNewHostMappingArgs>>> newHostMappings() {
        return Optional.ofNullable(this.newHostMappings);
    }

    /**
     * Primary DNS Address (IPv4)
     * 
     */
    @Import(name="primaryDnsAddressIpv4")
    private @Nullable Output<String> primaryDnsAddressIpv4;

    /**
     * @return Primary DNS Address (IPv4)
     * 
     */
    public Optional<Output<String>> primaryDnsAddressIpv4() {
        return Optional.ofNullable(this.primaryDnsAddressIpv4);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="primaryDnsAddressIpv4Variable")
    private @Nullable Output<String> primaryDnsAddressIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> primaryDnsAddressIpv4Variable() {
        return Optional.ofNullable(this.primaryDnsAddressIpv4Variable);
    }

    /**
     * Primary DNS Address (IPv6)
     * 
     */
    @Import(name="primaryDnsAddressIpv6")
    private @Nullable Output<String> primaryDnsAddressIpv6;

    /**
     * @return Primary DNS Address (IPv6)
     * 
     */
    public Optional<Output<String>> primaryDnsAddressIpv6() {
        return Optional.ofNullable(this.primaryDnsAddressIpv6);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="primaryDnsAddressIpv6Variable")
    private @Nullable Output<String> primaryDnsAddressIpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> primaryDnsAddressIpv6Variable() {
        return Optional.ofNullable(this.primaryDnsAddressIpv6Variable);
    }

    /**
     * Secondary DNS Address (IPv4)
     * 
     */
    @Import(name="secondaryDnsAddressIpv4")
    private @Nullable Output<String> secondaryDnsAddressIpv4;

    /**
     * @return Secondary DNS Address (IPv4)
     * 
     */
    public Optional<Output<String>> secondaryDnsAddressIpv4() {
        return Optional.ofNullable(this.secondaryDnsAddressIpv4);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="secondaryDnsAddressIpv4Variable")
    private @Nullable Output<String> secondaryDnsAddressIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> secondaryDnsAddressIpv4Variable() {
        return Optional.ofNullable(this.secondaryDnsAddressIpv4Variable);
    }

    /**
     * Secondary DNS Address (IPv6)
     * 
     */
    @Import(name="secondaryDnsAddressIpv6")
    private @Nullable Output<String> secondaryDnsAddressIpv6;

    /**
     * @return Secondary DNS Address (IPv6)
     * 
     */
    public Optional<Output<String>> secondaryDnsAddressIpv6() {
        return Optional.ofNullable(this.secondaryDnsAddressIpv6);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="secondaryDnsAddressIpv6Variable")
    private @Nullable Output<String> secondaryDnsAddressIpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> secondaryDnsAddressIpv6Variable() {
        return Optional.ofNullable(this.secondaryDnsAddressIpv6Variable);
    }

    /**
     * Name
     * 
     */
    @Import(name="vpnDescription")
    private @Nullable Output<String> vpnDescription;

    /**
     * @return Name
     * 
     */
    public Optional<Output<String>> vpnDescription() {
        return Optional.ofNullable(this.vpnDescription);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="vpnDescriptionVariable")
    private @Nullable Output<String> vpnDescriptionVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> vpnDescriptionVariable() {
        return Optional.ofNullable(this.vpnDescriptionVariable);
    }

    private TransportManagementVpnFeatureArgs() {}

    private TransportManagementVpnFeatureArgs(TransportManagementVpnFeatureArgs $) {
        this.description = $.description;
        this.featureProfileId = $.featureProfileId;
        this.ipv4StaticRoutes = $.ipv4StaticRoutes;
        this.ipv6StaticRoutes = $.ipv6StaticRoutes;
        this.name = $.name;
        this.newHostMappings = $.newHostMappings;
        this.primaryDnsAddressIpv4 = $.primaryDnsAddressIpv4;
        this.primaryDnsAddressIpv4Variable = $.primaryDnsAddressIpv4Variable;
        this.primaryDnsAddressIpv6 = $.primaryDnsAddressIpv6;
        this.primaryDnsAddressIpv6Variable = $.primaryDnsAddressIpv6Variable;
        this.secondaryDnsAddressIpv4 = $.secondaryDnsAddressIpv4;
        this.secondaryDnsAddressIpv4Variable = $.secondaryDnsAddressIpv4Variable;
        this.secondaryDnsAddressIpv6 = $.secondaryDnsAddressIpv6;
        this.secondaryDnsAddressIpv6Variable = $.secondaryDnsAddressIpv6Variable;
        this.vpnDescription = $.vpnDescription;
        this.vpnDescriptionVariable = $.vpnDescriptionVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransportManagementVpnFeatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransportManagementVpnFeatureArgs $;

        public Builder() {
            $ = new TransportManagementVpnFeatureArgs();
        }

        public Builder(TransportManagementVpnFeatureArgs defaults) {
            $ = new TransportManagementVpnFeatureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param ipv4StaticRoutes IPv4 Static Route
         * 
         * @return builder
         * 
         */
        public Builder ipv4StaticRoutes(@Nullable Output<List<TransportManagementVpnFeatureIpv4StaticRouteArgs>> ipv4StaticRoutes) {
            $.ipv4StaticRoutes = ipv4StaticRoutes;
            return this;
        }

        /**
         * @param ipv4StaticRoutes IPv4 Static Route
         * 
         * @return builder
         * 
         */
        public Builder ipv4StaticRoutes(List<TransportManagementVpnFeatureIpv4StaticRouteArgs> ipv4StaticRoutes) {
            return ipv4StaticRoutes(Output.of(ipv4StaticRoutes));
        }

        /**
         * @param ipv4StaticRoutes IPv4 Static Route
         * 
         * @return builder
         * 
         */
        public Builder ipv4StaticRoutes(TransportManagementVpnFeatureIpv4StaticRouteArgs... ipv4StaticRoutes) {
            return ipv4StaticRoutes(List.of(ipv4StaticRoutes));
        }

        /**
         * @param ipv6StaticRoutes IPv6 Static Route
         * 
         * @return builder
         * 
         */
        public Builder ipv6StaticRoutes(@Nullable Output<List<TransportManagementVpnFeatureIpv6StaticRouteArgs>> ipv6StaticRoutes) {
            $.ipv6StaticRoutes = ipv6StaticRoutes;
            return this;
        }

        /**
         * @param ipv6StaticRoutes IPv6 Static Route
         * 
         * @return builder
         * 
         */
        public Builder ipv6StaticRoutes(List<TransportManagementVpnFeatureIpv6StaticRouteArgs> ipv6StaticRoutes) {
            return ipv6StaticRoutes(Output.of(ipv6StaticRoutes));
        }

        /**
         * @param ipv6StaticRoutes IPv6 Static Route
         * 
         * @return builder
         * 
         */
        public Builder ipv6StaticRoutes(TransportManagementVpnFeatureIpv6StaticRouteArgs... ipv6StaticRoutes) {
            return ipv6StaticRoutes(List.of(ipv6StaticRoutes));
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder newHostMappings(@Nullable Output<List<TransportManagementVpnFeatureNewHostMappingArgs>> newHostMappings) {
            $.newHostMappings = newHostMappings;
            return this;
        }

        public Builder newHostMappings(List<TransportManagementVpnFeatureNewHostMappingArgs> newHostMappings) {
            return newHostMappings(Output.of(newHostMappings));
        }

        public Builder newHostMappings(TransportManagementVpnFeatureNewHostMappingArgs... newHostMappings) {
            return newHostMappings(List.of(newHostMappings));
        }

        /**
         * @param primaryDnsAddressIpv4 Primary DNS Address (IPv4)
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv4(@Nullable Output<String> primaryDnsAddressIpv4) {
            $.primaryDnsAddressIpv4 = primaryDnsAddressIpv4;
            return this;
        }

        /**
         * @param primaryDnsAddressIpv4 Primary DNS Address (IPv4)
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv4(String primaryDnsAddressIpv4) {
            return primaryDnsAddressIpv4(Output.of(primaryDnsAddressIpv4));
        }

        /**
         * @param primaryDnsAddressIpv4Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv4Variable(@Nullable Output<String> primaryDnsAddressIpv4Variable) {
            $.primaryDnsAddressIpv4Variable = primaryDnsAddressIpv4Variable;
            return this;
        }

        /**
         * @param primaryDnsAddressIpv4Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv4Variable(String primaryDnsAddressIpv4Variable) {
            return primaryDnsAddressIpv4Variable(Output.of(primaryDnsAddressIpv4Variable));
        }

        /**
         * @param primaryDnsAddressIpv6 Primary DNS Address (IPv6)
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv6(@Nullable Output<String> primaryDnsAddressIpv6) {
            $.primaryDnsAddressIpv6 = primaryDnsAddressIpv6;
            return this;
        }

        /**
         * @param primaryDnsAddressIpv6 Primary DNS Address (IPv6)
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv6(String primaryDnsAddressIpv6) {
            return primaryDnsAddressIpv6(Output.of(primaryDnsAddressIpv6));
        }

        /**
         * @param primaryDnsAddressIpv6Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv6Variable(@Nullable Output<String> primaryDnsAddressIpv6Variable) {
            $.primaryDnsAddressIpv6Variable = primaryDnsAddressIpv6Variable;
            return this;
        }

        /**
         * @param primaryDnsAddressIpv6Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv6Variable(String primaryDnsAddressIpv6Variable) {
            return primaryDnsAddressIpv6Variable(Output.of(primaryDnsAddressIpv6Variable));
        }

        /**
         * @param secondaryDnsAddressIpv4 Secondary DNS Address (IPv4)
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv4(@Nullable Output<String> secondaryDnsAddressIpv4) {
            $.secondaryDnsAddressIpv4 = secondaryDnsAddressIpv4;
            return this;
        }

        /**
         * @param secondaryDnsAddressIpv4 Secondary DNS Address (IPv4)
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv4(String secondaryDnsAddressIpv4) {
            return secondaryDnsAddressIpv4(Output.of(secondaryDnsAddressIpv4));
        }

        /**
         * @param secondaryDnsAddressIpv4Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv4Variable(@Nullable Output<String> secondaryDnsAddressIpv4Variable) {
            $.secondaryDnsAddressIpv4Variable = secondaryDnsAddressIpv4Variable;
            return this;
        }

        /**
         * @param secondaryDnsAddressIpv4Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv4Variable(String secondaryDnsAddressIpv4Variable) {
            return secondaryDnsAddressIpv4Variable(Output.of(secondaryDnsAddressIpv4Variable));
        }

        /**
         * @param secondaryDnsAddressIpv6 Secondary DNS Address (IPv6)
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv6(@Nullable Output<String> secondaryDnsAddressIpv6) {
            $.secondaryDnsAddressIpv6 = secondaryDnsAddressIpv6;
            return this;
        }

        /**
         * @param secondaryDnsAddressIpv6 Secondary DNS Address (IPv6)
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv6(String secondaryDnsAddressIpv6) {
            return secondaryDnsAddressIpv6(Output.of(secondaryDnsAddressIpv6));
        }

        /**
         * @param secondaryDnsAddressIpv6Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv6Variable(@Nullable Output<String> secondaryDnsAddressIpv6Variable) {
            $.secondaryDnsAddressIpv6Variable = secondaryDnsAddressIpv6Variable;
            return this;
        }

        /**
         * @param secondaryDnsAddressIpv6Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv6Variable(String secondaryDnsAddressIpv6Variable) {
            return secondaryDnsAddressIpv6Variable(Output.of(secondaryDnsAddressIpv6Variable));
        }

        /**
         * @param vpnDescription Name
         * 
         * @return builder
         * 
         */
        public Builder vpnDescription(@Nullable Output<String> vpnDescription) {
            $.vpnDescription = vpnDescription;
            return this;
        }

        /**
         * @param vpnDescription Name
         * 
         * @return builder
         * 
         */
        public Builder vpnDescription(String vpnDescription) {
            return vpnDescription(Output.of(vpnDescription));
        }

        /**
         * @param vpnDescriptionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vpnDescriptionVariable(@Nullable Output<String> vpnDescriptionVariable) {
            $.vpnDescriptionVariable = vpnDescriptionVariable;
            return this;
        }

        /**
         * @param vpnDescriptionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vpnDescriptionVariable(String vpnDescriptionVariable) {
            return vpnDescriptionVariable(Output.of(vpnDescriptionVariable));
        }

        public TransportManagementVpnFeatureArgs build() {
            if ($.featureProfileId == null) {
                throw new MissingRequiredPropertyException("TransportManagementVpnFeatureArgs", "featureProfileId");
            }
            return $;
        }
    }

}
