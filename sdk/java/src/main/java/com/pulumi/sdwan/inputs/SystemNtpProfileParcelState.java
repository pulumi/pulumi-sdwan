// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.SystemNtpProfileParcelAuthenticationKeyArgs;
import com.pulumi.sdwan.inputs.SystemNtpProfileParcelServerArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SystemNtpProfileParcelState extends com.pulumi.resources.ResourceArgs {

    public static final SystemNtpProfileParcelState Empty = new SystemNtpProfileParcelState();

    /**
     * Set MD5 authentication key
     * 
     */
    @Import(name="authenticationKeys")
    private @Nullable Output<List<SystemNtpProfileParcelAuthenticationKeyArgs>> authenticationKeys;

    /**
     * @return Set MD5 authentication key
     * 
     */
    public Optional<Output<List<SystemNtpProfileParcelAuthenticationKeyArgs>>> authenticationKeys() {
        return Optional.ofNullable(this.authenticationKeys);
    }

    /**
     * Enable device as NTP Leader - Default value: `false`
     * 
     */
    @Import(name="authoritativeNtpServer")
    private @Nullable Output<Boolean> authoritativeNtpServer;

    /**
     * @return Enable device as NTP Leader - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> authoritativeNtpServer() {
        return Optional.ofNullable(this.authoritativeNtpServer);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="authoritativeNtpServerVariable")
    private @Nullable Output<String> authoritativeNtpServerVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> authoritativeNtpServerVariable() {
        return Optional.ofNullable(this.authoritativeNtpServerVariable);
    }

    /**
     * The description of the profile parcel
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the profile parcel
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId")
    private @Nullable Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Optional<Output<String>> featureProfileId() {
        return Optional.ofNullable(this.featureProfileId);
    }

    /**
     * The name of the profile parcel
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the profile parcel
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Configure NTP servers
     * 
     */
    @Import(name="servers")
    private @Nullable Output<List<SystemNtpProfileParcelServerArgs>> servers;

    /**
     * @return Configure NTP servers
     * 
     */
    public Optional<Output<List<SystemNtpProfileParcelServerArgs>>> servers() {
        return Optional.ofNullable(this.servers);
    }

    /**
     * Enable device as NTP Leader
     * 
     */
    @Import(name="sourceInterface")
    private @Nullable Output<String> sourceInterface;

    /**
     * @return Enable device as NTP Leader
     * 
     */
    public Optional<Output<String>> sourceInterface() {
        return Optional.ofNullable(this.sourceInterface);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sourceInterfaceVariable")
    private @Nullable Output<String> sourceInterfaceVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sourceInterfaceVariable() {
        return Optional.ofNullable(this.sourceInterfaceVariable);
    }

    /**
     * Enable device as NTP Leader - Range: `1`-`15`
     * 
     */
    @Import(name="stratum")
    private @Nullable Output<Integer> stratum;

    /**
     * @return Enable device as NTP Leader - Range: `1`-`15`
     * 
     */
    public Optional<Output<Integer>> stratum() {
        return Optional.ofNullable(this.stratum);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="stratumVariable")
    private @Nullable Output<String> stratumVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> stratumVariable() {
        return Optional.ofNullable(this.stratumVariable);
    }

    /**
     * Designate authentication key as trustworthy
     * 
     */
    @Import(name="trustedKeys")
    private @Nullable Output<List<Integer>> trustedKeys;

    /**
     * @return Designate authentication key as trustworthy
     * 
     */
    public Optional<Output<List<Integer>>> trustedKeys() {
        return Optional.ofNullable(this.trustedKeys);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="trustedKeysVariable")
    private @Nullable Output<String> trustedKeysVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> trustedKeysVariable() {
        return Optional.ofNullable(this.trustedKeysVariable);
    }

    /**
     * The version of the profile parcel
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the profile parcel
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private SystemNtpProfileParcelState() {}

    private SystemNtpProfileParcelState(SystemNtpProfileParcelState $) {
        this.authenticationKeys = $.authenticationKeys;
        this.authoritativeNtpServer = $.authoritativeNtpServer;
        this.authoritativeNtpServerVariable = $.authoritativeNtpServerVariable;
        this.description = $.description;
        this.featureProfileId = $.featureProfileId;
        this.name = $.name;
        this.servers = $.servers;
        this.sourceInterface = $.sourceInterface;
        this.sourceInterfaceVariable = $.sourceInterfaceVariable;
        this.stratum = $.stratum;
        this.stratumVariable = $.stratumVariable;
        this.trustedKeys = $.trustedKeys;
        this.trustedKeysVariable = $.trustedKeysVariable;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SystemNtpProfileParcelState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SystemNtpProfileParcelState $;

        public Builder() {
            $ = new SystemNtpProfileParcelState();
        }

        public Builder(SystemNtpProfileParcelState defaults) {
            $ = new SystemNtpProfileParcelState(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationKeys Set MD5 authentication key
         * 
         * @return builder
         * 
         */
        public Builder authenticationKeys(@Nullable Output<List<SystemNtpProfileParcelAuthenticationKeyArgs>> authenticationKeys) {
            $.authenticationKeys = authenticationKeys;
            return this;
        }

        /**
         * @param authenticationKeys Set MD5 authentication key
         * 
         * @return builder
         * 
         */
        public Builder authenticationKeys(List<SystemNtpProfileParcelAuthenticationKeyArgs> authenticationKeys) {
            return authenticationKeys(Output.of(authenticationKeys));
        }

        /**
         * @param authenticationKeys Set MD5 authentication key
         * 
         * @return builder
         * 
         */
        public Builder authenticationKeys(SystemNtpProfileParcelAuthenticationKeyArgs... authenticationKeys) {
            return authenticationKeys(List.of(authenticationKeys));
        }

        /**
         * @param authoritativeNtpServer Enable device as NTP Leader - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder authoritativeNtpServer(@Nullable Output<Boolean> authoritativeNtpServer) {
            $.authoritativeNtpServer = authoritativeNtpServer;
            return this;
        }

        /**
         * @param authoritativeNtpServer Enable device as NTP Leader - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder authoritativeNtpServer(Boolean authoritativeNtpServer) {
            return authoritativeNtpServer(Output.of(authoritativeNtpServer));
        }

        /**
         * @param authoritativeNtpServerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder authoritativeNtpServerVariable(@Nullable Output<String> authoritativeNtpServerVariable) {
            $.authoritativeNtpServerVariable = authoritativeNtpServerVariable;
            return this;
        }

        /**
         * @param authoritativeNtpServerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder authoritativeNtpServerVariable(String authoritativeNtpServerVariable) {
            return authoritativeNtpServerVariable(Output.of(authoritativeNtpServerVariable));
        }

        /**
         * @param description The description of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(@Nullable Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param name The name of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param servers Configure NTP servers
         * 
         * @return builder
         * 
         */
        public Builder servers(@Nullable Output<List<SystemNtpProfileParcelServerArgs>> servers) {
            $.servers = servers;
            return this;
        }

        /**
         * @param servers Configure NTP servers
         * 
         * @return builder
         * 
         */
        public Builder servers(List<SystemNtpProfileParcelServerArgs> servers) {
            return servers(Output.of(servers));
        }

        /**
         * @param servers Configure NTP servers
         * 
         * @return builder
         * 
         */
        public Builder servers(SystemNtpProfileParcelServerArgs... servers) {
            return servers(List.of(servers));
        }

        /**
         * @param sourceInterface Enable device as NTP Leader
         * 
         * @return builder
         * 
         */
        public Builder sourceInterface(@Nullable Output<String> sourceInterface) {
            $.sourceInterface = sourceInterface;
            return this;
        }

        /**
         * @param sourceInterface Enable device as NTP Leader
         * 
         * @return builder
         * 
         */
        public Builder sourceInterface(String sourceInterface) {
            return sourceInterface(Output.of(sourceInterface));
        }

        /**
         * @param sourceInterfaceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceInterfaceVariable(@Nullable Output<String> sourceInterfaceVariable) {
            $.sourceInterfaceVariable = sourceInterfaceVariable;
            return this;
        }

        /**
         * @param sourceInterfaceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceInterfaceVariable(String sourceInterfaceVariable) {
            return sourceInterfaceVariable(Output.of(sourceInterfaceVariable));
        }

        /**
         * @param stratum Enable device as NTP Leader - Range: `1`-`15`
         * 
         * @return builder
         * 
         */
        public Builder stratum(@Nullable Output<Integer> stratum) {
            $.stratum = stratum;
            return this;
        }

        /**
         * @param stratum Enable device as NTP Leader - Range: `1`-`15`
         * 
         * @return builder
         * 
         */
        public Builder stratum(Integer stratum) {
            return stratum(Output.of(stratum));
        }

        /**
         * @param stratumVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder stratumVariable(@Nullable Output<String> stratumVariable) {
            $.stratumVariable = stratumVariable;
            return this;
        }

        /**
         * @param stratumVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder stratumVariable(String stratumVariable) {
            return stratumVariable(Output.of(stratumVariable));
        }

        /**
         * @param trustedKeys Designate authentication key as trustworthy
         * 
         * @return builder
         * 
         */
        public Builder trustedKeys(@Nullable Output<List<Integer>> trustedKeys) {
            $.trustedKeys = trustedKeys;
            return this;
        }

        /**
         * @param trustedKeys Designate authentication key as trustworthy
         * 
         * @return builder
         * 
         */
        public Builder trustedKeys(List<Integer> trustedKeys) {
            return trustedKeys(Output.of(trustedKeys));
        }

        /**
         * @param trustedKeys Designate authentication key as trustworthy
         * 
         * @return builder
         * 
         */
        public Builder trustedKeys(Integer... trustedKeys) {
            return trustedKeys(List.of(trustedKeys));
        }

        /**
         * @param trustedKeysVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trustedKeysVariable(@Nullable Output<String> trustedKeysVariable) {
            $.trustedKeysVariable = trustedKeysVariable;
            return this;
        }

        /**
         * @param trustedKeysVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trustedKeysVariable(String trustedKeysVariable) {
            return trustedKeysVariable(Output.of(trustedKeysVariable));
        }

        /**
         * @param version The version of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public SystemNtpProfileParcelState build() {
            return $;
        }
    }

}
