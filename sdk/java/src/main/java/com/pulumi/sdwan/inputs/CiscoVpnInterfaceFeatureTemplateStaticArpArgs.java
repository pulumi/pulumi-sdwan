// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CiscoVpnInterfaceFeatureTemplateStaticArpArgs extends com.pulumi.resources.ResourceArgs {

    public static final CiscoVpnInterfaceFeatureTemplateStaticArpArgs Empty = new CiscoVpnInterfaceFeatureTemplateStaticArpArgs();

    /**
     * IP Address
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    /**
     * @return IP Address
     * 
     */
    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipAddressVariable")
    private @Nullable Output<String> ipAddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipAddressVariable() {
        return Optional.ofNullable(this.ipAddressVariable);
    }

    /**
     * MAC address
     * 
     */
    @Import(name="mac")
    private @Nullable Output<String> mac;

    /**
     * @return MAC address
     * 
     */
    public Optional<Output<String>> mac() {
        return Optional.ofNullable(this.mac);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="macVariable")
    private @Nullable Output<String> macVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> macVariable() {
        return Optional.ofNullable(this.macVariable);
    }

    /**
     * Indicates if list item is considered optional.
     * 
     */
    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    private CiscoVpnInterfaceFeatureTemplateStaticArpArgs() {}

    private CiscoVpnInterfaceFeatureTemplateStaticArpArgs(CiscoVpnInterfaceFeatureTemplateStaticArpArgs $) {
        this.ipAddress = $.ipAddress;
        this.ipAddressVariable = $.ipAddressVariable;
        this.mac = $.mac;
        this.macVariable = $.macVariable;
        this.optional = $.optional;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CiscoVpnInterfaceFeatureTemplateStaticArpArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CiscoVpnInterfaceFeatureTemplateStaticArpArgs $;

        public Builder() {
            $ = new CiscoVpnInterfaceFeatureTemplateStaticArpArgs();
        }

        public Builder(CiscoVpnInterfaceFeatureTemplateStaticArpArgs defaults) {
            $ = new CiscoVpnInterfaceFeatureTemplateStaticArpArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipAddress IP Address
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress IP Address
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param ipAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipAddressVariable(@Nullable Output<String> ipAddressVariable) {
            $.ipAddressVariable = ipAddressVariable;
            return this;
        }

        /**
         * @param ipAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipAddressVariable(String ipAddressVariable) {
            return ipAddressVariable(Output.of(ipAddressVariable));
        }

        /**
         * @param mac MAC address
         * 
         * @return builder
         * 
         */
        public Builder mac(@Nullable Output<String> mac) {
            $.mac = mac;
            return this;
        }

        /**
         * @param mac MAC address
         * 
         * @return builder
         * 
         */
        public Builder mac(String mac) {
            return mac(Output.of(mac));
        }

        /**
         * @param macVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder macVariable(@Nullable Output<String> macVariable) {
            $.macVariable = macVariable;
            return this;
        }

        /**
         * @param macVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder macVariable(String macVariable) {
            return macVariable(Output.of(macVariable));
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        public CiscoVpnInterfaceFeatureTemplateStaticArpArgs build() {
            return $;
        }
    }

}
