// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sdwan.outputs.ServiceMulticastFeatureIgmpInterfaceJoinGroup;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceMulticastFeatureIgmpInterface {
    /**
     * @return Set interface name
     * 
     */
    private @Nullable String interfaceName;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String interfaceNameVariable;
    /**
     * @return Configure static joins
     * 
     */
    private @Nullable List<ServiceMulticastFeatureIgmpInterfaceJoinGroup> joinGroups;
    /**
     * @return igmp Version &lt;1..3&gt;
     *   - Range: `1`-`3`
     *   - Default value: `2`
     * 
     */
    private @Nullable Integer version;

    private ServiceMulticastFeatureIgmpInterface() {}
    /**
     * @return Set interface name
     * 
     */
    public Optional<String> interfaceName() {
        return Optional.ofNullable(this.interfaceName);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> interfaceNameVariable() {
        return Optional.ofNullable(this.interfaceNameVariable);
    }
    /**
     * @return Configure static joins
     * 
     */
    public List<ServiceMulticastFeatureIgmpInterfaceJoinGroup> joinGroups() {
        return this.joinGroups == null ? List.of() : this.joinGroups;
    }
    /**
     * @return igmp Version &lt;1..3&gt;
     *   - Range: `1`-`3`
     *   - Default value: `2`
     * 
     */
    public Optional<Integer> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceMulticastFeatureIgmpInterface defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String interfaceName;
        private @Nullable String interfaceNameVariable;
        private @Nullable List<ServiceMulticastFeatureIgmpInterfaceJoinGroup> joinGroups;
        private @Nullable Integer version;
        public Builder() {}
        public Builder(ServiceMulticastFeatureIgmpInterface defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.interfaceName = defaults.interfaceName;
    	      this.interfaceNameVariable = defaults.interfaceNameVariable;
    	      this.joinGroups = defaults.joinGroups;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder interfaceName(@Nullable String interfaceName) {

            this.interfaceName = interfaceName;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceNameVariable(@Nullable String interfaceNameVariable) {

            this.interfaceNameVariable = interfaceNameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder joinGroups(@Nullable List<ServiceMulticastFeatureIgmpInterfaceJoinGroup> joinGroups) {

            this.joinGroups = joinGroups;
            return this;
        }
        public Builder joinGroups(ServiceMulticastFeatureIgmpInterfaceJoinGroup... joinGroups) {
            return joinGroups(List.of(joinGroups));
        }
        @CustomType.Setter
        public Builder version(@Nullable Integer version) {

            this.version = version;
            return this;
        }
        public ServiceMulticastFeatureIgmpInterface build() {
            final var _resultValue = new ServiceMulticastFeatureIgmpInterface();
            _resultValue.interfaceName = interfaceName;
            _resultValue.interfaceNameVariable = interfaceNameVariable;
            _resultValue.joinGroups = joinGroups;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
