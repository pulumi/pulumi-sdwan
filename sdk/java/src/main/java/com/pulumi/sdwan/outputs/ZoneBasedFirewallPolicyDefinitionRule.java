// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.ZoneBasedFirewallPolicyDefinitionRuleActionEntry;
import com.pulumi.sdwan.outputs.ZoneBasedFirewallPolicyDefinitionRuleMatchEntry;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ZoneBasedFirewallPolicyDefinitionRule {
    /**
     * @return List of actions entries
     * 
     */
    private @Nullable List<ZoneBasedFirewallPolicyDefinitionRuleActionEntry> actionEntries;
    /**
     * @return Base action
     *   - Choices: `pass`, `drop`, `inspect`
     * 
     */
    private String baseAction;
    /**
     * @return List of match entries
     * 
     */
    private @Nullable List<ZoneBasedFirewallPolicyDefinitionRuleMatchEntry> matchEntries;
    /**
     * @return Rule name
     * 
     */
    private String ruleName;
    /**
     * @return Rule
     * 
     */
    private Integer ruleOrder;

    private ZoneBasedFirewallPolicyDefinitionRule() {}
    /**
     * @return List of actions entries
     * 
     */
    public List<ZoneBasedFirewallPolicyDefinitionRuleActionEntry> actionEntries() {
        return this.actionEntries == null ? List.of() : this.actionEntries;
    }
    /**
     * @return Base action
     *   - Choices: `pass`, `drop`, `inspect`
     * 
     */
    public String baseAction() {
        return this.baseAction;
    }
    /**
     * @return List of match entries
     * 
     */
    public List<ZoneBasedFirewallPolicyDefinitionRuleMatchEntry> matchEntries() {
        return this.matchEntries == null ? List.of() : this.matchEntries;
    }
    /**
     * @return Rule name
     * 
     */
    public String ruleName() {
        return this.ruleName;
    }
    /**
     * @return Rule
     * 
     */
    public Integer ruleOrder() {
        return this.ruleOrder;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ZoneBasedFirewallPolicyDefinitionRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ZoneBasedFirewallPolicyDefinitionRuleActionEntry> actionEntries;
        private String baseAction;
        private @Nullable List<ZoneBasedFirewallPolicyDefinitionRuleMatchEntry> matchEntries;
        private String ruleName;
        private Integer ruleOrder;
        public Builder() {}
        public Builder(ZoneBasedFirewallPolicyDefinitionRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionEntries = defaults.actionEntries;
    	      this.baseAction = defaults.baseAction;
    	      this.matchEntries = defaults.matchEntries;
    	      this.ruleName = defaults.ruleName;
    	      this.ruleOrder = defaults.ruleOrder;
        }

        @CustomType.Setter
        public Builder actionEntries(@Nullable List<ZoneBasedFirewallPolicyDefinitionRuleActionEntry> actionEntries) {

            this.actionEntries = actionEntries;
            return this;
        }
        public Builder actionEntries(ZoneBasedFirewallPolicyDefinitionRuleActionEntry... actionEntries) {
            return actionEntries(List.of(actionEntries));
        }
        @CustomType.Setter
        public Builder baseAction(String baseAction) {
            if (baseAction == null) {
              throw new MissingRequiredPropertyException("ZoneBasedFirewallPolicyDefinitionRule", "baseAction");
            }
            this.baseAction = baseAction;
            return this;
        }
        @CustomType.Setter
        public Builder matchEntries(@Nullable List<ZoneBasedFirewallPolicyDefinitionRuleMatchEntry> matchEntries) {

            this.matchEntries = matchEntries;
            return this;
        }
        public Builder matchEntries(ZoneBasedFirewallPolicyDefinitionRuleMatchEntry... matchEntries) {
            return matchEntries(List.of(matchEntries));
        }
        @CustomType.Setter
        public Builder ruleName(String ruleName) {
            if (ruleName == null) {
              throw new MissingRequiredPropertyException("ZoneBasedFirewallPolicyDefinitionRule", "ruleName");
            }
            this.ruleName = ruleName;
            return this;
        }
        @CustomType.Setter
        public Builder ruleOrder(Integer ruleOrder) {
            if (ruleOrder == null) {
              throw new MissingRequiredPropertyException("ZoneBasedFirewallPolicyDefinitionRule", "ruleOrder");
            }
            this.ruleOrder = ruleOrder;
            return this;
        }
        public ZoneBasedFirewallPolicyDefinitionRule build() {
            final var _resultValue = new ZoneBasedFirewallPolicyDefinitionRule();
            _resultValue.actionEntries = actionEntries;
            _resultValue.baseAction = baseAction;
            _resultValue.matchEntries = matchEntries;
            _resultValue.ruleName = ruleName;
            _resultValue.ruleOrder = ruleOrder;
            return _resultValue;
        }
    }
}
