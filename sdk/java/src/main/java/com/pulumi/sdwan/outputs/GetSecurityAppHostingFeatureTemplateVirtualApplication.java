// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSecurityAppHostingFeatureTemplateVirtualApplication {
    /**
     * @return List of Virtual applications
     * 
     */
    private String applicationType;
    /**
     * @return Data Gateway IP
     * 
     */
    private String dataGatewayIp;
    /**
     * @return Variable name
     * 
     */
    private String dataGatewayIpVariable;
    /**
     * @return Data Service IP
     * 
     */
    private String dataServiceIp;
    /**
     * @return Variable name
     * 
     */
    private String dataServiceIpVariable;
    /**
     * @return Download URL Database on Device
     * 
     */
    private Boolean databaseUrl;
    /**
     * @return Variable name
     * 
     */
    private String databaseUrlVariable;
    /**
     * @return List of Virtual applications
     * 
     */
    private String instanceId;
    /**
     * @return Is Nat enabled
     * 
     */
    private Boolean nat;
    /**
     * @return Variable name
     * 
     */
    private String natVariable;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private Boolean optional;
    /**
     * @return Resource Profile
     * 
     */
    private String resourceProfile;
    /**
     * @return Variable name
     * 
     */
    private String resourceProfileVariable;
    /**
     * @return Service Gateway IP (Management interface)
     * 
     */
    private String serviceGatewayIp;
    /**
     * @return Variable name
     * 
     */
    private String serviceGatewayIpVariable;
    /**
     * @return Service IP
     * 
     */
    private String serviceIp;
    /**
     * @return Variable name
     * 
     */
    private String serviceIpVariable;

    private GetSecurityAppHostingFeatureTemplateVirtualApplication() {}
    /**
     * @return List of Virtual applications
     * 
     */
    public String applicationType() {
        return this.applicationType;
    }
    /**
     * @return Data Gateway IP
     * 
     */
    public String dataGatewayIp() {
        return this.dataGatewayIp;
    }
    /**
     * @return Variable name
     * 
     */
    public String dataGatewayIpVariable() {
        return this.dataGatewayIpVariable;
    }
    /**
     * @return Data Service IP
     * 
     */
    public String dataServiceIp() {
        return this.dataServiceIp;
    }
    /**
     * @return Variable name
     * 
     */
    public String dataServiceIpVariable() {
        return this.dataServiceIpVariable;
    }
    /**
     * @return Download URL Database on Device
     * 
     */
    public Boolean databaseUrl() {
        return this.databaseUrl;
    }
    /**
     * @return Variable name
     * 
     */
    public String databaseUrlVariable() {
        return this.databaseUrlVariable;
    }
    /**
     * @return List of Virtual applications
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return Is Nat enabled
     * 
     */
    public Boolean nat() {
        return this.nat;
    }
    /**
     * @return Variable name
     * 
     */
    public String natVariable() {
        return this.natVariable;
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Boolean optional() {
        return this.optional;
    }
    /**
     * @return Resource Profile
     * 
     */
    public String resourceProfile() {
        return this.resourceProfile;
    }
    /**
     * @return Variable name
     * 
     */
    public String resourceProfileVariable() {
        return this.resourceProfileVariable;
    }
    /**
     * @return Service Gateway IP (Management interface)
     * 
     */
    public String serviceGatewayIp() {
        return this.serviceGatewayIp;
    }
    /**
     * @return Variable name
     * 
     */
    public String serviceGatewayIpVariable() {
        return this.serviceGatewayIpVariable;
    }
    /**
     * @return Service IP
     * 
     */
    public String serviceIp() {
        return this.serviceIp;
    }
    /**
     * @return Variable name
     * 
     */
    public String serviceIpVariable() {
        return this.serviceIpVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityAppHostingFeatureTemplateVirtualApplication defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationType;
        private String dataGatewayIp;
        private String dataGatewayIpVariable;
        private String dataServiceIp;
        private String dataServiceIpVariable;
        private Boolean databaseUrl;
        private String databaseUrlVariable;
        private String instanceId;
        private Boolean nat;
        private String natVariable;
        private Boolean optional;
        private String resourceProfile;
        private String resourceProfileVariable;
        private String serviceGatewayIp;
        private String serviceGatewayIpVariable;
        private String serviceIp;
        private String serviceIpVariable;
        public Builder() {}
        public Builder(GetSecurityAppHostingFeatureTemplateVirtualApplication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationType = defaults.applicationType;
    	      this.dataGatewayIp = defaults.dataGatewayIp;
    	      this.dataGatewayIpVariable = defaults.dataGatewayIpVariable;
    	      this.dataServiceIp = defaults.dataServiceIp;
    	      this.dataServiceIpVariable = defaults.dataServiceIpVariable;
    	      this.databaseUrl = defaults.databaseUrl;
    	      this.databaseUrlVariable = defaults.databaseUrlVariable;
    	      this.instanceId = defaults.instanceId;
    	      this.nat = defaults.nat;
    	      this.natVariable = defaults.natVariable;
    	      this.optional = defaults.optional;
    	      this.resourceProfile = defaults.resourceProfile;
    	      this.resourceProfileVariable = defaults.resourceProfileVariable;
    	      this.serviceGatewayIp = defaults.serviceGatewayIp;
    	      this.serviceGatewayIpVariable = defaults.serviceGatewayIpVariable;
    	      this.serviceIp = defaults.serviceIp;
    	      this.serviceIpVariable = defaults.serviceIpVariable;
        }

        @CustomType.Setter
        public Builder applicationType(String applicationType) {
            if (applicationType == null) {
              throw new MissingRequiredPropertyException("GetSecurityAppHostingFeatureTemplateVirtualApplication", "applicationType");
            }
            this.applicationType = applicationType;
            return this;
        }
        @CustomType.Setter
        public Builder dataGatewayIp(String dataGatewayIp) {
            if (dataGatewayIp == null) {
              throw new MissingRequiredPropertyException("GetSecurityAppHostingFeatureTemplateVirtualApplication", "dataGatewayIp");
            }
            this.dataGatewayIp = dataGatewayIp;
            return this;
        }
        @CustomType.Setter
        public Builder dataGatewayIpVariable(String dataGatewayIpVariable) {
            if (dataGatewayIpVariable == null) {
              throw new MissingRequiredPropertyException("GetSecurityAppHostingFeatureTemplateVirtualApplication", "dataGatewayIpVariable");
            }
            this.dataGatewayIpVariable = dataGatewayIpVariable;
            return this;
        }
        @CustomType.Setter
        public Builder dataServiceIp(String dataServiceIp) {
            if (dataServiceIp == null) {
              throw new MissingRequiredPropertyException("GetSecurityAppHostingFeatureTemplateVirtualApplication", "dataServiceIp");
            }
            this.dataServiceIp = dataServiceIp;
            return this;
        }
        @CustomType.Setter
        public Builder dataServiceIpVariable(String dataServiceIpVariable) {
            if (dataServiceIpVariable == null) {
              throw new MissingRequiredPropertyException("GetSecurityAppHostingFeatureTemplateVirtualApplication", "dataServiceIpVariable");
            }
            this.dataServiceIpVariable = dataServiceIpVariable;
            return this;
        }
        @CustomType.Setter
        public Builder databaseUrl(Boolean databaseUrl) {
            if (databaseUrl == null) {
              throw new MissingRequiredPropertyException("GetSecurityAppHostingFeatureTemplateVirtualApplication", "databaseUrl");
            }
            this.databaseUrl = databaseUrl;
            return this;
        }
        @CustomType.Setter
        public Builder databaseUrlVariable(String databaseUrlVariable) {
            if (databaseUrlVariable == null) {
              throw new MissingRequiredPropertyException("GetSecurityAppHostingFeatureTemplateVirtualApplication", "databaseUrlVariable");
            }
            this.databaseUrlVariable = databaseUrlVariable;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetSecurityAppHostingFeatureTemplateVirtualApplication", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder nat(Boolean nat) {
            if (nat == null) {
              throw new MissingRequiredPropertyException("GetSecurityAppHostingFeatureTemplateVirtualApplication", "nat");
            }
            this.nat = nat;
            return this;
        }
        @CustomType.Setter
        public Builder natVariable(String natVariable) {
            if (natVariable == null) {
              throw new MissingRequiredPropertyException("GetSecurityAppHostingFeatureTemplateVirtualApplication", "natVariable");
            }
            this.natVariable = natVariable;
            return this;
        }
        @CustomType.Setter
        public Builder optional(Boolean optional) {
            if (optional == null) {
              throw new MissingRequiredPropertyException("GetSecurityAppHostingFeatureTemplateVirtualApplication", "optional");
            }
            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder resourceProfile(String resourceProfile) {
            if (resourceProfile == null) {
              throw new MissingRequiredPropertyException("GetSecurityAppHostingFeatureTemplateVirtualApplication", "resourceProfile");
            }
            this.resourceProfile = resourceProfile;
            return this;
        }
        @CustomType.Setter
        public Builder resourceProfileVariable(String resourceProfileVariable) {
            if (resourceProfileVariable == null) {
              throw new MissingRequiredPropertyException("GetSecurityAppHostingFeatureTemplateVirtualApplication", "resourceProfileVariable");
            }
            this.resourceProfileVariable = resourceProfileVariable;
            return this;
        }
        @CustomType.Setter
        public Builder serviceGatewayIp(String serviceGatewayIp) {
            if (serviceGatewayIp == null) {
              throw new MissingRequiredPropertyException("GetSecurityAppHostingFeatureTemplateVirtualApplication", "serviceGatewayIp");
            }
            this.serviceGatewayIp = serviceGatewayIp;
            return this;
        }
        @CustomType.Setter
        public Builder serviceGatewayIpVariable(String serviceGatewayIpVariable) {
            if (serviceGatewayIpVariable == null) {
              throw new MissingRequiredPropertyException("GetSecurityAppHostingFeatureTemplateVirtualApplication", "serviceGatewayIpVariable");
            }
            this.serviceGatewayIpVariable = serviceGatewayIpVariable;
            return this;
        }
        @CustomType.Setter
        public Builder serviceIp(String serviceIp) {
            if (serviceIp == null) {
              throw new MissingRequiredPropertyException("GetSecurityAppHostingFeatureTemplateVirtualApplication", "serviceIp");
            }
            this.serviceIp = serviceIp;
            return this;
        }
        @CustomType.Setter
        public Builder serviceIpVariable(String serviceIpVariable) {
            if (serviceIpVariable == null) {
              throw new MissingRequiredPropertyException("GetSecurityAppHostingFeatureTemplateVirtualApplication", "serviceIpVariable");
            }
            this.serviceIpVariable = serviceIpVariable;
            return this;
        }
        public GetSecurityAppHostingFeatureTemplateVirtualApplication build() {
            final var _resultValue = new GetSecurityAppHostingFeatureTemplateVirtualApplication();
            _resultValue.applicationType = applicationType;
            _resultValue.dataGatewayIp = dataGatewayIp;
            _resultValue.dataGatewayIpVariable = dataGatewayIpVariable;
            _resultValue.dataServiceIp = dataServiceIp;
            _resultValue.dataServiceIpVariable = dataServiceIpVariable;
            _resultValue.databaseUrl = databaseUrl;
            _resultValue.databaseUrlVariable = databaseUrlVariable;
            _resultValue.instanceId = instanceId;
            _resultValue.nat = nat;
            _resultValue.natVariable = natVariable;
            _resultValue.optional = optional;
            _resultValue.resourceProfile = resourceProfile;
            _resultValue.resourceProfileVariable = resourceProfileVariable;
            _resultValue.serviceGatewayIp = serviceGatewayIp;
            _resultValue.serviceGatewayIpVariable = serviceGatewayIpVariable;
            _resultValue.serviceIp = serviceIp;
            _resultValue.serviceIpVariable = serviceIpVariable;
            return _resultValue;
        }
    }
}
