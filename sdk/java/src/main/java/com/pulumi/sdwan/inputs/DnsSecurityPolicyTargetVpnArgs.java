// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DnsSecurityPolicyTargetVpnArgs extends com.pulumi.resources.ResourceArgs {

    public static final DnsSecurityPolicyTargetVpnArgs Empty = new DnsSecurityPolicyTargetVpnArgs();

    /**
     * Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
     * 
     */
    @Import(name="dnsServerIp")
    private @Nullable Output<String> dnsServerIp;

    /**
     * @return Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
     * 
     */
    public Optional<Output<String>> dnsServerIp() {
        return Optional.ofNullable(this.dnsServerIp);
    }

    /**
     * Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
     * 
     */
    @Import(name="localDomainBypassEnabled")
    private @Nullable Output<Boolean> localDomainBypassEnabled;

    /**
     * @return Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
     * 
     */
    public Optional<Output<Boolean>> localDomainBypassEnabled() {
        return Optional.ofNullable(this.localDomainBypassEnabled);
    }

    /**
     * non empty interger string
     * 
     */
    @Import(name="uid")
    private @Nullable Output<String> uid;

    /**
     * @return non empty interger string
     * 
     */
    public Optional<Output<String>> uid() {
        return Optional.ofNullable(this.uid);
    }

    /**
     * Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
     * 
     */
    @Import(name="umbrellaDefault")
    private @Nullable Output<Boolean> umbrellaDefault;

    /**
     * @return Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
     * 
     */
    public Optional<Output<Boolean>> umbrellaDefault() {
        return Optional.ofNullable(this.umbrellaDefault);
    }

    @Import(name="vpns")
    private @Nullable Output<List<String>> vpns;

    public Optional<Output<List<String>>> vpns() {
        return Optional.ofNullable(this.vpns);
    }

    private DnsSecurityPolicyTargetVpnArgs() {}

    private DnsSecurityPolicyTargetVpnArgs(DnsSecurityPolicyTargetVpnArgs $) {
        this.dnsServerIp = $.dnsServerIp;
        this.localDomainBypassEnabled = $.localDomainBypassEnabled;
        this.uid = $.uid;
        this.umbrellaDefault = $.umbrellaDefault;
        this.vpns = $.vpns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DnsSecurityPolicyTargetVpnArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DnsSecurityPolicyTargetVpnArgs $;

        public Builder() {
            $ = new DnsSecurityPolicyTargetVpnArgs();
        }

        public Builder(DnsSecurityPolicyTargetVpnArgs defaults) {
            $ = new DnsSecurityPolicyTargetVpnArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dnsServerIp Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
         * 
         * @return builder
         * 
         */
        public Builder dnsServerIp(@Nullable Output<String> dnsServerIp) {
            $.dnsServerIp = dnsServerIp;
            return this;
        }

        /**
         * @param dnsServerIp Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
         * 
         * @return builder
         * 
         */
        public Builder dnsServerIp(String dnsServerIp) {
            return dnsServerIp(Output.of(dnsServerIp));
        }

        /**
         * @param localDomainBypassEnabled Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
         * 
         * @return builder
         * 
         */
        public Builder localDomainBypassEnabled(@Nullable Output<Boolean> localDomainBypassEnabled) {
            $.localDomainBypassEnabled = localDomainBypassEnabled;
            return this;
        }

        /**
         * @param localDomainBypassEnabled Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
         * 
         * @return builder
         * 
         */
        public Builder localDomainBypassEnabled(Boolean localDomainBypassEnabled) {
            return localDomainBypassEnabled(Output.of(localDomainBypassEnabled));
        }

        /**
         * @param uid non empty interger string
         * 
         * @return builder
         * 
         */
        public Builder uid(@Nullable Output<String> uid) {
            $.uid = uid;
            return this;
        }

        /**
         * @param uid non empty interger string
         * 
         * @return builder
         * 
         */
        public Builder uid(String uid) {
            return uid(Output.of(uid));
        }

        /**
         * @param umbrellaDefault Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
         * 
         * @return builder
         * 
         */
        public Builder umbrellaDefault(@Nullable Output<Boolean> umbrellaDefault) {
            $.umbrellaDefault = umbrellaDefault;
            return this;
        }

        /**
         * @param umbrellaDefault Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
         * 
         * @return builder
         * 
         */
        public Builder umbrellaDefault(Boolean umbrellaDefault) {
            return umbrellaDefault(Output.of(umbrellaDefault));
        }

        public Builder vpns(@Nullable Output<List<String>> vpns) {
            $.vpns = vpns;
            return this;
        }

        public Builder vpns(List<String> vpns) {
            return vpns(Output.of(vpns));
        }

        public Builder vpns(String... vpns) {
            return vpns(List.of(vpns));
        }

        public DnsSecurityPolicyTargetVpnArgs build() {
            return $;
        }
    }

}
