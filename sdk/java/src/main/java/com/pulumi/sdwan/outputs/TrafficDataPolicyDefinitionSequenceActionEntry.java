// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.TrafficDataPolicyDefinitionSequenceActionEntryNatParameter;
import com.pulumi.sdwan.outputs.TrafficDataPolicyDefinitionSequenceActionEntrySetParameter;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TrafficDataPolicyDefinitionSequenceActionEntry {
    /**
     * @return Enable cflowd
     * 
     */
    private @Nullable Boolean cflowd;
    /**
     * @return Counter name
     * 
     */
    private @Nullable String counter;
    /**
     * @return Enable DRE optimization
     * 
     */
    private @Nullable Boolean dreOptimization;
    /**
     * @return Enable fallback to routing
     * 
     */
    private @Nullable Boolean fallbackToRouting;
    /**
     * @return Enable logging
     * 
     */
    private @Nullable Boolean log;
    /**
     * @return Loss correction
     *   - Choices: `fecAdaptive`, `fecAlways`, `packetDuplication`
     * 
     */
    private @Nullable String lossCorrection;
    /**
     * @return Loss correction FEC
     *   - Choices: `fecAdaptive`, `fecAlways`, `packetDuplication`
     * 
     */
    private @Nullable String lossCorrectionFec;
    /**
     * @return Loss correction FEC threshold
     *   - Range: `1`-`5`
     * 
     */
    private @Nullable Integer lossCorrectionFecThreshold;
    /**
     * @return List of NAT parameters
     * 
     */
    private @Nullable List<TrafficDataPolicyDefinitionSequenceActionEntryNatParameter> natParameters;
    /**
     * @return NAT pool
     *   - Choices: `pool`
     * 
     */
    private @Nullable String natPool;
    /**
     * @return NAT pool ID
     *   - Range: `1`-`31`
     * 
     */
    private @Nullable Integer natPoolId;
    /**
     * @return Redirect DNS
     *   - Choices: `dnsType`, `ipAddress`
     * 
     */
    private @Nullable String redirectDns;
    /**
     * @return Redirect DNS IP address
     * 
     */
    private @Nullable String redirectDnsAddress;
    /**
     * @return Redirect DNS type
     *   - Choices: `host`, `umbrella`
     * 
     */
    private @Nullable String redirectDnsType;
    /**
     * @return Enable secure internet gateway
     * 
     */
    private @Nullable Boolean secureInternetGateway;
    /**
     * @return Service node group
     * 
     */
    private @Nullable String serviceNodeGroup;
    /**
     * @return List of set parameters
     * 
     */
    private @Nullable List<TrafficDataPolicyDefinitionSequenceActionEntrySetParameter> setParameters;
    /**
     * @return Enable TCP optimization
     * 
     */
    private @Nullable Boolean tcpOptimization;
    /**
     * @return Type of action entry
     *   - Choices: `cflowd`, `count`, `dreOptimization`, `fallbackToRouting`, `log`, `lossProtect`, `lossProtectFec`, `nat`, `redirectDns`, `serviceNodeGroup`, `set`, `sig`, `tcpOptimization`
     * 
     */
    private String type;

    private TrafficDataPolicyDefinitionSequenceActionEntry() {}
    /**
     * @return Enable cflowd
     * 
     */
    public Optional<Boolean> cflowd() {
        return Optional.ofNullable(this.cflowd);
    }
    /**
     * @return Counter name
     * 
     */
    public Optional<String> counter() {
        return Optional.ofNullable(this.counter);
    }
    /**
     * @return Enable DRE optimization
     * 
     */
    public Optional<Boolean> dreOptimization() {
        return Optional.ofNullable(this.dreOptimization);
    }
    /**
     * @return Enable fallback to routing
     * 
     */
    public Optional<Boolean> fallbackToRouting() {
        return Optional.ofNullable(this.fallbackToRouting);
    }
    /**
     * @return Enable logging
     * 
     */
    public Optional<Boolean> log() {
        return Optional.ofNullable(this.log);
    }
    /**
     * @return Loss correction
     *   - Choices: `fecAdaptive`, `fecAlways`, `packetDuplication`
     * 
     */
    public Optional<String> lossCorrection() {
        return Optional.ofNullable(this.lossCorrection);
    }
    /**
     * @return Loss correction FEC
     *   - Choices: `fecAdaptive`, `fecAlways`, `packetDuplication`
     * 
     */
    public Optional<String> lossCorrectionFec() {
        return Optional.ofNullable(this.lossCorrectionFec);
    }
    /**
     * @return Loss correction FEC threshold
     *   - Range: `1`-`5`
     * 
     */
    public Optional<Integer> lossCorrectionFecThreshold() {
        return Optional.ofNullable(this.lossCorrectionFecThreshold);
    }
    /**
     * @return List of NAT parameters
     * 
     */
    public List<TrafficDataPolicyDefinitionSequenceActionEntryNatParameter> natParameters() {
        return this.natParameters == null ? List.of() : this.natParameters;
    }
    /**
     * @return NAT pool
     *   - Choices: `pool`
     * 
     */
    public Optional<String> natPool() {
        return Optional.ofNullable(this.natPool);
    }
    /**
     * @return NAT pool ID
     *   - Range: `1`-`31`
     * 
     */
    public Optional<Integer> natPoolId() {
        return Optional.ofNullable(this.natPoolId);
    }
    /**
     * @return Redirect DNS
     *   - Choices: `dnsType`, `ipAddress`
     * 
     */
    public Optional<String> redirectDns() {
        return Optional.ofNullable(this.redirectDns);
    }
    /**
     * @return Redirect DNS IP address
     * 
     */
    public Optional<String> redirectDnsAddress() {
        return Optional.ofNullable(this.redirectDnsAddress);
    }
    /**
     * @return Redirect DNS type
     *   - Choices: `host`, `umbrella`
     * 
     */
    public Optional<String> redirectDnsType() {
        return Optional.ofNullable(this.redirectDnsType);
    }
    /**
     * @return Enable secure internet gateway
     * 
     */
    public Optional<Boolean> secureInternetGateway() {
        return Optional.ofNullable(this.secureInternetGateway);
    }
    /**
     * @return Service node group
     * 
     */
    public Optional<String> serviceNodeGroup() {
        return Optional.ofNullable(this.serviceNodeGroup);
    }
    /**
     * @return List of set parameters
     * 
     */
    public List<TrafficDataPolicyDefinitionSequenceActionEntrySetParameter> setParameters() {
        return this.setParameters == null ? List.of() : this.setParameters;
    }
    /**
     * @return Enable TCP optimization
     * 
     */
    public Optional<Boolean> tcpOptimization() {
        return Optional.ofNullable(this.tcpOptimization);
    }
    /**
     * @return Type of action entry
     *   - Choices: `cflowd`, `count`, `dreOptimization`, `fallbackToRouting`, `log`, `lossProtect`, `lossProtectFec`, `nat`, `redirectDns`, `serviceNodeGroup`, `set`, `sig`, `tcpOptimization`
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TrafficDataPolicyDefinitionSequenceActionEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean cflowd;
        private @Nullable String counter;
        private @Nullable Boolean dreOptimization;
        private @Nullable Boolean fallbackToRouting;
        private @Nullable Boolean log;
        private @Nullable String lossCorrection;
        private @Nullable String lossCorrectionFec;
        private @Nullable Integer lossCorrectionFecThreshold;
        private @Nullable List<TrafficDataPolicyDefinitionSequenceActionEntryNatParameter> natParameters;
        private @Nullable String natPool;
        private @Nullable Integer natPoolId;
        private @Nullable String redirectDns;
        private @Nullable String redirectDnsAddress;
        private @Nullable String redirectDnsType;
        private @Nullable Boolean secureInternetGateway;
        private @Nullable String serviceNodeGroup;
        private @Nullable List<TrafficDataPolicyDefinitionSequenceActionEntrySetParameter> setParameters;
        private @Nullable Boolean tcpOptimization;
        private String type;
        public Builder() {}
        public Builder(TrafficDataPolicyDefinitionSequenceActionEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cflowd = defaults.cflowd;
    	      this.counter = defaults.counter;
    	      this.dreOptimization = defaults.dreOptimization;
    	      this.fallbackToRouting = defaults.fallbackToRouting;
    	      this.log = defaults.log;
    	      this.lossCorrection = defaults.lossCorrection;
    	      this.lossCorrectionFec = defaults.lossCorrectionFec;
    	      this.lossCorrectionFecThreshold = defaults.lossCorrectionFecThreshold;
    	      this.natParameters = defaults.natParameters;
    	      this.natPool = defaults.natPool;
    	      this.natPoolId = defaults.natPoolId;
    	      this.redirectDns = defaults.redirectDns;
    	      this.redirectDnsAddress = defaults.redirectDnsAddress;
    	      this.redirectDnsType = defaults.redirectDnsType;
    	      this.secureInternetGateway = defaults.secureInternetGateway;
    	      this.serviceNodeGroup = defaults.serviceNodeGroup;
    	      this.setParameters = defaults.setParameters;
    	      this.tcpOptimization = defaults.tcpOptimization;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder cflowd(@Nullable Boolean cflowd) {

            this.cflowd = cflowd;
            return this;
        }
        @CustomType.Setter
        public Builder counter(@Nullable String counter) {

            this.counter = counter;
            return this;
        }
        @CustomType.Setter
        public Builder dreOptimization(@Nullable Boolean dreOptimization) {

            this.dreOptimization = dreOptimization;
            return this;
        }
        @CustomType.Setter
        public Builder fallbackToRouting(@Nullable Boolean fallbackToRouting) {

            this.fallbackToRouting = fallbackToRouting;
            return this;
        }
        @CustomType.Setter
        public Builder log(@Nullable Boolean log) {

            this.log = log;
            return this;
        }
        @CustomType.Setter
        public Builder lossCorrection(@Nullable String lossCorrection) {

            this.lossCorrection = lossCorrection;
            return this;
        }
        @CustomType.Setter
        public Builder lossCorrectionFec(@Nullable String lossCorrectionFec) {

            this.lossCorrectionFec = lossCorrectionFec;
            return this;
        }
        @CustomType.Setter
        public Builder lossCorrectionFecThreshold(@Nullable Integer lossCorrectionFecThreshold) {

            this.lossCorrectionFecThreshold = lossCorrectionFecThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder natParameters(@Nullable List<TrafficDataPolicyDefinitionSequenceActionEntryNatParameter> natParameters) {

            this.natParameters = natParameters;
            return this;
        }
        public Builder natParameters(TrafficDataPolicyDefinitionSequenceActionEntryNatParameter... natParameters) {
            return natParameters(List.of(natParameters));
        }
        @CustomType.Setter
        public Builder natPool(@Nullable String natPool) {

            this.natPool = natPool;
            return this;
        }
        @CustomType.Setter
        public Builder natPoolId(@Nullable Integer natPoolId) {

            this.natPoolId = natPoolId;
            return this;
        }
        @CustomType.Setter
        public Builder redirectDns(@Nullable String redirectDns) {

            this.redirectDns = redirectDns;
            return this;
        }
        @CustomType.Setter
        public Builder redirectDnsAddress(@Nullable String redirectDnsAddress) {

            this.redirectDnsAddress = redirectDnsAddress;
            return this;
        }
        @CustomType.Setter
        public Builder redirectDnsType(@Nullable String redirectDnsType) {

            this.redirectDnsType = redirectDnsType;
            return this;
        }
        @CustomType.Setter
        public Builder secureInternetGateway(@Nullable Boolean secureInternetGateway) {

            this.secureInternetGateway = secureInternetGateway;
            return this;
        }
        @CustomType.Setter
        public Builder serviceNodeGroup(@Nullable String serviceNodeGroup) {

            this.serviceNodeGroup = serviceNodeGroup;
            return this;
        }
        @CustomType.Setter
        public Builder setParameters(@Nullable List<TrafficDataPolicyDefinitionSequenceActionEntrySetParameter> setParameters) {

            this.setParameters = setParameters;
            return this;
        }
        public Builder setParameters(TrafficDataPolicyDefinitionSequenceActionEntrySetParameter... setParameters) {
            return setParameters(List.of(setParameters));
        }
        @CustomType.Setter
        public Builder tcpOptimization(@Nullable Boolean tcpOptimization) {

            this.tcpOptimization = tcpOptimization;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("TrafficDataPolicyDefinitionSequenceActionEntry", "type");
            }
            this.type = type;
            return this;
        }
        public TrafficDataPolicyDefinitionSequenceActionEntry build() {
            final var _resultValue = new TrafficDataPolicyDefinitionSequenceActionEntry();
            _resultValue.cflowd = cflowd;
            _resultValue.counter = counter;
            _resultValue.dreOptimization = dreOptimization;
            _resultValue.fallbackToRouting = fallbackToRouting;
            _resultValue.log = log;
            _resultValue.lossCorrection = lossCorrection;
            _resultValue.lossCorrectionFec = lossCorrectionFec;
            _resultValue.lossCorrectionFecThreshold = lossCorrectionFecThreshold;
            _resultValue.natParameters = natParameters;
            _resultValue.natPool = natPool;
            _resultValue.natPoolId = natPoolId;
            _resultValue.redirectDns = redirectDns;
            _resultValue.redirectDnsAddress = redirectDnsAddress;
            _resultValue.redirectDnsType = redirectDnsType;
            _resultValue.secureInternetGateway = secureInternetGateway;
            _resultValue.serviceNodeGroup = serviceNodeGroup;
            _resultValue.setParameters = setParameters;
            _resultValue.tcpOptimization = tcpOptimization;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
