// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpnInterfaceDslIpoeFeatureTemplateVdslConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpnInterfaceDslIpoeFeatureTemplateVdslConfigurationArgs Empty = new VpnInterfaceDslIpoeFeatureTemplateVdslConfigurationArgs();

    /**
     * Set module slot/subslot/port number
     * 
     */
    @Import(name="controllerVdslSlot")
    private @Nullable Output<String> controllerVdslSlot;

    /**
     * @return Set module slot/subslot/port number
     * 
     */
    public Optional<Output<String>> controllerVdslSlot() {
        return Optional.ofNullable(this.controllerVdslSlot);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="controllerVdslSlotVariable")
    private @Nullable Output<String> controllerVdslSlotVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> controllerVdslSlotVariable() {
        return Optional.ofNullable(this.controllerVdslSlotVariable);
    }

    /**
     * Set VDSL operating mode to adsl1
     *   - Default value: `false`
     * 
     */
    @Import(name="modeAdsl1")
    private @Nullable Output<Boolean> modeAdsl1;

    /**
     * @return Set VDSL operating mode to adsl1
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> modeAdsl1() {
        return Optional.ofNullable(this.modeAdsl1);
    }

    /**
     * Set VDSL operating mode to adsl2
     *   - Default value: `false`
     * 
     */
    @Import(name="modeAdsl2")
    private @Nullable Output<Boolean> modeAdsl2;

    /**
     * @return Set VDSL operating mode to adsl2
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> modeAdsl2() {
        return Optional.ofNullable(this.modeAdsl2);
    }

    /**
     * Set VDSL operating mode to adsl2plus
     *   - Default value: `false`
     * 
     */
    @Import(name="modeAdsl2plus")
    private @Nullable Output<Boolean> modeAdsl2plus;

    /**
     * @return Set VDSL operating mode to adsl2plus
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> modeAdsl2plus() {
        return Optional.ofNullable(this.modeAdsl2plus);
    }

    /**
     * Set VDSL operating mode to ansi
     *   - Default value: `false`
     * 
     */
    @Import(name="modeAnsi")
    private @Nullable Output<Boolean> modeAnsi;

    /**
     * @return Set VDSL operating mode to ansi
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> modeAnsi() {
        return Optional.ofNullable(this.modeAnsi);
    }

    /**
     * Set VDSL operating mode to vdsl2
     *   - Default value: `false`
     * 
     */
    @Import(name="modeVdsl2")
    private @Nullable Output<Boolean> modeVdsl2;

    /**
     * @return Set VDSL operating mode to vdsl2
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> modeVdsl2() {
        return Optional.ofNullable(this.modeVdsl2);
    }

    /**
     * Indicates if list item is considered optional.
     * 
     */
    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    /**
     * Seamless rate adaption
     *   - Default value: `true`
     * 
     */
    @Import(name="sra")
    private @Nullable Output<Boolean> sra;

    /**
     * @return Seamless rate adaption
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> sra() {
        return Optional.ofNullable(this.sra);
    }

    /**
     * Set module slot/subslot/port number
     * 
     */
    @Import(name="vdslModemConfiguration")
    private @Nullable Output<String> vdslModemConfiguration;

    /**
     * @return Set module slot/subslot/port number
     * 
     */
    public Optional<Output<String>> vdslModemConfiguration() {
        return Optional.ofNullable(this.vdslModemConfiguration);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="vdslModemConfigurationVariable")
    private @Nullable Output<String> vdslModemConfigurationVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> vdslModemConfigurationVariable() {
        return Optional.ofNullable(this.vdslModemConfigurationVariable);
    }

    private VpnInterfaceDslIpoeFeatureTemplateVdslConfigurationArgs() {}

    private VpnInterfaceDslIpoeFeatureTemplateVdslConfigurationArgs(VpnInterfaceDslIpoeFeatureTemplateVdslConfigurationArgs $) {
        this.controllerVdslSlot = $.controllerVdslSlot;
        this.controllerVdslSlotVariable = $.controllerVdslSlotVariable;
        this.modeAdsl1 = $.modeAdsl1;
        this.modeAdsl2 = $.modeAdsl2;
        this.modeAdsl2plus = $.modeAdsl2plus;
        this.modeAnsi = $.modeAnsi;
        this.modeVdsl2 = $.modeVdsl2;
        this.optional = $.optional;
        this.sra = $.sra;
        this.vdslModemConfiguration = $.vdslModemConfiguration;
        this.vdslModemConfigurationVariable = $.vdslModemConfigurationVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpnInterfaceDslIpoeFeatureTemplateVdslConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpnInterfaceDslIpoeFeatureTemplateVdslConfigurationArgs $;

        public Builder() {
            $ = new VpnInterfaceDslIpoeFeatureTemplateVdslConfigurationArgs();
        }

        public Builder(VpnInterfaceDslIpoeFeatureTemplateVdslConfigurationArgs defaults) {
            $ = new VpnInterfaceDslIpoeFeatureTemplateVdslConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param controllerVdslSlot Set module slot/subslot/port number
         * 
         * @return builder
         * 
         */
        public Builder controllerVdslSlot(@Nullable Output<String> controllerVdslSlot) {
            $.controllerVdslSlot = controllerVdslSlot;
            return this;
        }

        /**
         * @param controllerVdslSlot Set module slot/subslot/port number
         * 
         * @return builder
         * 
         */
        public Builder controllerVdslSlot(String controllerVdslSlot) {
            return controllerVdslSlot(Output.of(controllerVdslSlot));
        }

        /**
         * @param controllerVdslSlotVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder controllerVdslSlotVariable(@Nullable Output<String> controllerVdslSlotVariable) {
            $.controllerVdslSlotVariable = controllerVdslSlotVariable;
            return this;
        }

        /**
         * @param controllerVdslSlotVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder controllerVdslSlotVariable(String controllerVdslSlotVariable) {
            return controllerVdslSlotVariable(Output.of(controllerVdslSlotVariable));
        }

        /**
         * @param modeAdsl1 Set VDSL operating mode to adsl1
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder modeAdsl1(@Nullable Output<Boolean> modeAdsl1) {
            $.modeAdsl1 = modeAdsl1;
            return this;
        }

        /**
         * @param modeAdsl1 Set VDSL operating mode to adsl1
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder modeAdsl1(Boolean modeAdsl1) {
            return modeAdsl1(Output.of(modeAdsl1));
        }

        /**
         * @param modeAdsl2 Set VDSL operating mode to adsl2
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder modeAdsl2(@Nullable Output<Boolean> modeAdsl2) {
            $.modeAdsl2 = modeAdsl2;
            return this;
        }

        /**
         * @param modeAdsl2 Set VDSL operating mode to adsl2
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder modeAdsl2(Boolean modeAdsl2) {
            return modeAdsl2(Output.of(modeAdsl2));
        }

        /**
         * @param modeAdsl2plus Set VDSL operating mode to adsl2plus
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder modeAdsl2plus(@Nullable Output<Boolean> modeAdsl2plus) {
            $.modeAdsl2plus = modeAdsl2plus;
            return this;
        }

        /**
         * @param modeAdsl2plus Set VDSL operating mode to adsl2plus
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder modeAdsl2plus(Boolean modeAdsl2plus) {
            return modeAdsl2plus(Output.of(modeAdsl2plus));
        }

        /**
         * @param modeAnsi Set VDSL operating mode to ansi
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder modeAnsi(@Nullable Output<Boolean> modeAnsi) {
            $.modeAnsi = modeAnsi;
            return this;
        }

        /**
         * @param modeAnsi Set VDSL operating mode to ansi
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder modeAnsi(Boolean modeAnsi) {
            return modeAnsi(Output.of(modeAnsi));
        }

        /**
         * @param modeVdsl2 Set VDSL operating mode to vdsl2
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder modeVdsl2(@Nullable Output<Boolean> modeVdsl2) {
            $.modeVdsl2 = modeVdsl2;
            return this;
        }

        /**
         * @param modeVdsl2 Set VDSL operating mode to vdsl2
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder modeVdsl2(Boolean modeVdsl2) {
            return modeVdsl2(Output.of(modeVdsl2));
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        /**
         * @param sra Seamless rate adaption
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder sra(@Nullable Output<Boolean> sra) {
            $.sra = sra;
            return this;
        }

        /**
         * @param sra Seamless rate adaption
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder sra(Boolean sra) {
            return sra(Output.of(sra));
        }

        /**
         * @param vdslModemConfiguration Set module slot/subslot/port number
         * 
         * @return builder
         * 
         */
        public Builder vdslModemConfiguration(@Nullable Output<String> vdslModemConfiguration) {
            $.vdslModemConfiguration = vdslModemConfiguration;
            return this;
        }

        /**
         * @param vdslModemConfiguration Set module slot/subslot/port number
         * 
         * @return builder
         * 
         */
        public Builder vdslModemConfiguration(String vdslModemConfiguration) {
            return vdslModemConfiguration(Output.of(vdslModemConfiguration));
        }

        /**
         * @param vdslModemConfigurationVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vdslModemConfigurationVariable(@Nullable Output<String> vdslModemConfigurationVariable) {
            $.vdslModemConfigurationVariable = vdslModemConfigurationVariable;
            return this;
        }

        /**
         * @param vdslModemConfigurationVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vdslModemConfigurationVariable(String vdslModemConfigurationVariable) {
            return vdslModemConfigurationVariable(Output.of(vdslModemConfigurationVariable));
        }

        public VpnInterfaceDslIpoeFeatureTemplateVdslConfigurationArgs build() {
            return $;
        }
    }

}
