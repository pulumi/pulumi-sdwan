// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetConfigurationGroupDeviceVariablesDeviceVariable;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetConfigurationGroupDeviceVariablesDevice {
    /**
     * @return Device ID
     * 
     */
    private String deviceId;
    /**
     * @return List of variables
     * 
     */
    private List<GetConfigurationGroupDeviceVariablesDeviceVariable> variables;

    private GetConfigurationGroupDeviceVariablesDevice() {}
    /**
     * @return Device ID
     * 
     */
    public String deviceId() {
        return this.deviceId;
    }
    /**
     * @return List of variables
     * 
     */
    public List<GetConfigurationGroupDeviceVariablesDeviceVariable> variables() {
        return this.variables;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigurationGroupDeviceVariablesDevice defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String deviceId;
        private List<GetConfigurationGroupDeviceVariablesDeviceVariable> variables;
        public Builder() {}
        public Builder(GetConfigurationGroupDeviceVariablesDevice defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deviceId = defaults.deviceId;
    	      this.variables = defaults.variables;
        }

        @CustomType.Setter
        public Builder deviceId(String deviceId) {
            if (deviceId == null) {
              throw new MissingRequiredPropertyException("GetConfigurationGroupDeviceVariablesDevice", "deviceId");
            }
            this.deviceId = deviceId;
            return this;
        }
        @CustomType.Setter
        public Builder variables(List<GetConfigurationGroupDeviceVariablesDeviceVariable> variables) {
            if (variables == null) {
              throw new MissingRequiredPropertyException("GetConfigurationGroupDeviceVariablesDevice", "variables");
            }
            this.variables = variables;
            return this;
        }
        public Builder variables(GetConfigurationGroupDeviceVariablesDeviceVariable... variables) {
            return variables(List.of(variables));
        }
        public GetConfigurationGroupDeviceVariablesDevice build() {
            final var _resultValue = new GetConfigurationGroupDeviceVariablesDevice();
            _resultValue.deviceId = deviceId;
            _resultValue.variables = variables;
            return _resultValue;
        }
    }
}
