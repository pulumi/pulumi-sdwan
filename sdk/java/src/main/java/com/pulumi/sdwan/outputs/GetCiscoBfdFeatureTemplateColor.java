// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCiscoBfdFeatureTemplateColor {
    /**
     * @return Set color that identifies the WAN transport tunnel
     * 
     */
    private String color;
    /**
     * @return Variable name
     * 
     */
    private String colorVariable;
    /**
     * @return Set BFD Default DSCP value for tloc color
     * 
     */
    private Integer dscp;
    /**
     * @return Variable name
     * 
     */
    private String dscpVariable;
    /**
     * @return Set how often BFD sends Hello packets
     * 
     */
    private Integer helloInterval;
    /**
     * @return Variable name
     * 
     */
    private String helloIntervalVariable;
    /**
     * @return Set how many Hello packet intervals to wait before declaring that a tunnel has failed
     * 
     */
    private Integer multiplier;
    /**
     * @return Variable name
     * 
     */
    private String multiplierVariable;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private Boolean optional;
    /**
     * @return Control automatic path MTU discovery
     * 
     */
    private Boolean pmtuDiscovery;
    /**
     * @return Variable name
     * 
     */
    private String pmtuDiscoveryVariable;

    private GetCiscoBfdFeatureTemplateColor() {}
    /**
     * @return Set color that identifies the WAN transport tunnel
     * 
     */
    public String color() {
        return this.color;
    }
    /**
     * @return Variable name
     * 
     */
    public String colorVariable() {
        return this.colorVariable;
    }
    /**
     * @return Set BFD Default DSCP value for tloc color
     * 
     */
    public Integer dscp() {
        return this.dscp;
    }
    /**
     * @return Variable name
     * 
     */
    public String dscpVariable() {
        return this.dscpVariable;
    }
    /**
     * @return Set how often BFD sends Hello packets
     * 
     */
    public Integer helloInterval() {
        return this.helloInterval;
    }
    /**
     * @return Variable name
     * 
     */
    public String helloIntervalVariable() {
        return this.helloIntervalVariable;
    }
    /**
     * @return Set how many Hello packet intervals to wait before declaring that a tunnel has failed
     * 
     */
    public Integer multiplier() {
        return this.multiplier;
    }
    /**
     * @return Variable name
     * 
     */
    public String multiplierVariable() {
        return this.multiplierVariable;
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Boolean optional() {
        return this.optional;
    }
    /**
     * @return Control automatic path MTU discovery
     * 
     */
    public Boolean pmtuDiscovery() {
        return this.pmtuDiscovery;
    }
    /**
     * @return Variable name
     * 
     */
    public String pmtuDiscoveryVariable() {
        return this.pmtuDiscoveryVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCiscoBfdFeatureTemplateColor defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String color;
        private String colorVariable;
        private Integer dscp;
        private String dscpVariable;
        private Integer helloInterval;
        private String helloIntervalVariable;
        private Integer multiplier;
        private String multiplierVariable;
        private Boolean optional;
        private Boolean pmtuDiscovery;
        private String pmtuDiscoveryVariable;
        public Builder() {}
        public Builder(GetCiscoBfdFeatureTemplateColor defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.color = defaults.color;
    	      this.colorVariable = defaults.colorVariable;
    	      this.dscp = defaults.dscp;
    	      this.dscpVariable = defaults.dscpVariable;
    	      this.helloInterval = defaults.helloInterval;
    	      this.helloIntervalVariable = defaults.helloIntervalVariable;
    	      this.multiplier = defaults.multiplier;
    	      this.multiplierVariable = defaults.multiplierVariable;
    	      this.optional = defaults.optional;
    	      this.pmtuDiscovery = defaults.pmtuDiscovery;
    	      this.pmtuDiscoveryVariable = defaults.pmtuDiscoveryVariable;
        }

        @CustomType.Setter
        public Builder color(String color) {
            if (color == null) {
              throw new MissingRequiredPropertyException("GetCiscoBfdFeatureTemplateColor", "color");
            }
            this.color = color;
            return this;
        }
        @CustomType.Setter
        public Builder colorVariable(String colorVariable) {
            if (colorVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoBfdFeatureTemplateColor", "colorVariable");
            }
            this.colorVariable = colorVariable;
            return this;
        }
        @CustomType.Setter
        public Builder dscp(Integer dscp) {
            if (dscp == null) {
              throw new MissingRequiredPropertyException("GetCiscoBfdFeatureTemplateColor", "dscp");
            }
            this.dscp = dscp;
            return this;
        }
        @CustomType.Setter
        public Builder dscpVariable(String dscpVariable) {
            if (dscpVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoBfdFeatureTemplateColor", "dscpVariable");
            }
            this.dscpVariable = dscpVariable;
            return this;
        }
        @CustomType.Setter
        public Builder helloInterval(Integer helloInterval) {
            if (helloInterval == null) {
              throw new MissingRequiredPropertyException("GetCiscoBfdFeatureTemplateColor", "helloInterval");
            }
            this.helloInterval = helloInterval;
            return this;
        }
        @CustomType.Setter
        public Builder helloIntervalVariable(String helloIntervalVariable) {
            if (helloIntervalVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoBfdFeatureTemplateColor", "helloIntervalVariable");
            }
            this.helloIntervalVariable = helloIntervalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder multiplier(Integer multiplier) {
            if (multiplier == null) {
              throw new MissingRequiredPropertyException("GetCiscoBfdFeatureTemplateColor", "multiplier");
            }
            this.multiplier = multiplier;
            return this;
        }
        @CustomType.Setter
        public Builder multiplierVariable(String multiplierVariable) {
            if (multiplierVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoBfdFeatureTemplateColor", "multiplierVariable");
            }
            this.multiplierVariable = multiplierVariable;
            return this;
        }
        @CustomType.Setter
        public Builder optional(Boolean optional) {
            if (optional == null) {
              throw new MissingRequiredPropertyException("GetCiscoBfdFeatureTemplateColor", "optional");
            }
            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder pmtuDiscovery(Boolean pmtuDiscovery) {
            if (pmtuDiscovery == null) {
              throw new MissingRequiredPropertyException("GetCiscoBfdFeatureTemplateColor", "pmtuDiscovery");
            }
            this.pmtuDiscovery = pmtuDiscovery;
            return this;
        }
        @CustomType.Setter
        public Builder pmtuDiscoveryVariable(String pmtuDiscoveryVariable) {
            if (pmtuDiscoveryVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoBfdFeatureTemplateColor", "pmtuDiscoveryVariable");
            }
            this.pmtuDiscoveryVariable = pmtuDiscoveryVariable;
            return this;
        }
        public GetCiscoBfdFeatureTemplateColor build() {
            final var _resultValue = new GetCiscoBfdFeatureTemplateColor();
            _resultValue.color = color;
            _resultValue.colorVariable = colorVariable;
            _resultValue.dscp = dscp;
            _resultValue.dscpVariable = dscpVariable;
            _resultValue.helloInterval = helloInterval;
            _resultValue.helloIntervalVariable = helloIntervalVariable;
            _resultValue.multiplier = multiplier;
            _resultValue.multiplierVariable = multiplierVariable;
            _resultValue.optional = optional;
            _resultValue.pmtuDiscovery = pmtuDiscovery;
            _resultValue.pmtuDiscoveryVariable = pmtuDiscoveryVariable;
            return _resultValue;
        }
    }
}
