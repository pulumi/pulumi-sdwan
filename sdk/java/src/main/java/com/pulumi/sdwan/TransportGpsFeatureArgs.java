// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransportGpsFeatureArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransportGpsFeatureArgs Empty = new TransportGpsFeatureArgs();

    /**
     * The description of the Feature
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId", required=true)
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }

    /**
     * Enable/disable GPS - Default value: `false`
     * 
     */
    @Import(name="gpsEnable")
    private @Nullable Output<Boolean> gpsEnable;

    /**
     * @return Enable/disable GPS - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> gpsEnable() {
        return Optional.ofNullable(this.gpsEnable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="gpsEnableVariable")
    private @Nullable Output<String> gpsEnableVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> gpsEnableVariable() {
        return Optional.ofNullable(this.gpsEnableVariable);
    }

    /**
     * Select GPS mode - Choices: `ms-based`, `standalone` - Default value: `ms-based`
     * 
     */
    @Import(name="gpsMode")
    private @Nullable Output<String> gpsMode;

    /**
     * @return Select GPS mode - Choices: `ms-based`, `standalone` - Default value: `ms-based`
     * 
     */
    public Optional<Output<String>> gpsMode() {
        return Optional.ofNullable(this.gpsMode);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="gpsModeVariable")
    private @Nullable Output<String> gpsModeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> gpsModeVariable() {
        return Optional.ofNullable(this.gpsModeVariable);
    }

    /**
     * The name of the Feature
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Destination address
     * 
     */
    @Import(name="nmeaDestinationAddress")
    private @Nullable Output<String> nmeaDestinationAddress;

    /**
     * @return Destination address
     * 
     */
    public Optional<Output<String>> nmeaDestinationAddress() {
        return Optional.ofNullable(this.nmeaDestinationAddress);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="nmeaDestinationAddressVariable")
    private @Nullable Output<String> nmeaDestinationAddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> nmeaDestinationAddressVariable() {
        return Optional.ofNullable(this.nmeaDestinationAddressVariable);
    }

    /**
     * Destination port - Range: `1`-`65535`
     * 
     */
    @Import(name="nmeaDestinationPort")
    private @Nullable Output<Integer> nmeaDestinationPort;

    /**
     * @return Destination port - Range: `1`-`65535`
     * 
     */
    public Optional<Output<Integer>> nmeaDestinationPort() {
        return Optional.ofNullable(this.nmeaDestinationPort);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="nmeaDestinationPortVariable")
    private @Nullable Output<String> nmeaDestinationPortVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> nmeaDestinationPortVariable() {
        return Optional.ofNullable(this.nmeaDestinationPortVariable);
    }

    /**
     * Enable/disable NMEA data - Default value: `false`
     * 
     */
    @Import(name="nmeaEnable")
    private @Nullable Output<Boolean> nmeaEnable;

    /**
     * @return Enable/disable NMEA data - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> nmeaEnable() {
        return Optional.ofNullable(this.nmeaEnable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="nmeaEnableVariable")
    private @Nullable Output<String> nmeaEnableVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> nmeaEnableVariable() {
        return Optional.ofNullable(this.nmeaEnableVariable);
    }

    /**
     * Source address
     * 
     */
    @Import(name="nmeaSourceAddress")
    private @Nullable Output<String> nmeaSourceAddress;

    /**
     * @return Source address
     * 
     */
    public Optional<Output<String>> nmeaSourceAddress() {
        return Optional.ofNullable(this.nmeaSourceAddress);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="nmeaSourceAddressVariable")
    private @Nullable Output<String> nmeaSourceAddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> nmeaSourceAddressVariable() {
        return Optional.ofNullable(this.nmeaSourceAddressVariable);
    }

    private TransportGpsFeatureArgs() {}

    private TransportGpsFeatureArgs(TransportGpsFeatureArgs $) {
        this.description = $.description;
        this.featureProfileId = $.featureProfileId;
        this.gpsEnable = $.gpsEnable;
        this.gpsEnableVariable = $.gpsEnableVariable;
        this.gpsMode = $.gpsMode;
        this.gpsModeVariable = $.gpsModeVariable;
        this.name = $.name;
        this.nmeaDestinationAddress = $.nmeaDestinationAddress;
        this.nmeaDestinationAddressVariable = $.nmeaDestinationAddressVariable;
        this.nmeaDestinationPort = $.nmeaDestinationPort;
        this.nmeaDestinationPortVariable = $.nmeaDestinationPortVariable;
        this.nmeaEnable = $.nmeaEnable;
        this.nmeaEnableVariable = $.nmeaEnableVariable;
        this.nmeaSourceAddress = $.nmeaSourceAddress;
        this.nmeaSourceAddressVariable = $.nmeaSourceAddressVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransportGpsFeatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransportGpsFeatureArgs $;

        public Builder() {
            $ = new TransportGpsFeatureArgs();
        }

        public Builder(TransportGpsFeatureArgs defaults) {
            $ = new TransportGpsFeatureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param gpsEnable Enable/disable GPS - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder gpsEnable(@Nullable Output<Boolean> gpsEnable) {
            $.gpsEnable = gpsEnable;
            return this;
        }

        /**
         * @param gpsEnable Enable/disable GPS - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder gpsEnable(Boolean gpsEnable) {
            return gpsEnable(Output.of(gpsEnable));
        }

        /**
         * @param gpsEnableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder gpsEnableVariable(@Nullable Output<String> gpsEnableVariable) {
            $.gpsEnableVariable = gpsEnableVariable;
            return this;
        }

        /**
         * @param gpsEnableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder gpsEnableVariable(String gpsEnableVariable) {
            return gpsEnableVariable(Output.of(gpsEnableVariable));
        }

        /**
         * @param gpsMode Select GPS mode - Choices: `ms-based`, `standalone` - Default value: `ms-based`
         * 
         * @return builder
         * 
         */
        public Builder gpsMode(@Nullable Output<String> gpsMode) {
            $.gpsMode = gpsMode;
            return this;
        }

        /**
         * @param gpsMode Select GPS mode - Choices: `ms-based`, `standalone` - Default value: `ms-based`
         * 
         * @return builder
         * 
         */
        public Builder gpsMode(String gpsMode) {
            return gpsMode(Output.of(gpsMode));
        }

        /**
         * @param gpsModeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder gpsModeVariable(@Nullable Output<String> gpsModeVariable) {
            $.gpsModeVariable = gpsModeVariable;
            return this;
        }

        /**
         * @param gpsModeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder gpsModeVariable(String gpsModeVariable) {
            return gpsModeVariable(Output.of(gpsModeVariable));
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nmeaDestinationAddress Destination address
         * 
         * @return builder
         * 
         */
        public Builder nmeaDestinationAddress(@Nullable Output<String> nmeaDestinationAddress) {
            $.nmeaDestinationAddress = nmeaDestinationAddress;
            return this;
        }

        /**
         * @param nmeaDestinationAddress Destination address
         * 
         * @return builder
         * 
         */
        public Builder nmeaDestinationAddress(String nmeaDestinationAddress) {
            return nmeaDestinationAddress(Output.of(nmeaDestinationAddress));
        }

        /**
         * @param nmeaDestinationAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nmeaDestinationAddressVariable(@Nullable Output<String> nmeaDestinationAddressVariable) {
            $.nmeaDestinationAddressVariable = nmeaDestinationAddressVariable;
            return this;
        }

        /**
         * @param nmeaDestinationAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nmeaDestinationAddressVariable(String nmeaDestinationAddressVariable) {
            return nmeaDestinationAddressVariable(Output.of(nmeaDestinationAddressVariable));
        }

        /**
         * @param nmeaDestinationPort Destination port - Range: `1`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder nmeaDestinationPort(@Nullable Output<Integer> nmeaDestinationPort) {
            $.nmeaDestinationPort = nmeaDestinationPort;
            return this;
        }

        /**
         * @param nmeaDestinationPort Destination port - Range: `1`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder nmeaDestinationPort(Integer nmeaDestinationPort) {
            return nmeaDestinationPort(Output.of(nmeaDestinationPort));
        }

        /**
         * @param nmeaDestinationPortVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nmeaDestinationPortVariable(@Nullable Output<String> nmeaDestinationPortVariable) {
            $.nmeaDestinationPortVariable = nmeaDestinationPortVariable;
            return this;
        }

        /**
         * @param nmeaDestinationPortVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nmeaDestinationPortVariable(String nmeaDestinationPortVariable) {
            return nmeaDestinationPortVariable(Output.of(nmeaDestinationPortVariable));
        }

        /**
         * @param nmeaEnable Enable/disable NMEA data - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder nmeaEnable(@Nullable Output<Boolean> nmeaEnable) {
            $.nmeaEnable = nmeaEnable;
            return this;
        }

        /**
         * @param nmeaEnable Enable/disable NMEA data - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder nmeaEnable(Boolean nmeaEnable) {
            return nmeaEnable(Output.of(nmeaEnable));
        }

        /**
         * @param nmeaEnableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nmeaEnableVariable(@Nullable Output<String> nmeaEnableVariable) {
            $.nmeaEnableVariable = nmeaEnableVariable;
            return this;
        }

        /**
         * @param nmeaEnableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nmeaEnableVariable(String nmeaEnableVariable) {
            return nmeaEnableVariable(Output.of(nmeaEnableVariable));
        }

        /**
         * @param nmeaSourceAddress Source address
         * 
         * @return builder
         * 
         */
        public Builder nmeaSourceAddress(@Nullable Output<String> nmeaSourceAddress) {
            $.nmeaSourceAddress = nmeaSourceAddress;
            return this;
        }

        /**
         * @param nmeaSourceAddress Source address
         * 
         * @return builder
         * 
         */
        public Builder nmeaSourceAddress(String nmeaSourceAddress) {
            return nmeaSourceAddress(Output.of(nmeaSourceAddress));
        }

        /**
         * @param nmeaSourceAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nmeaSourceAddressVariable(@Nullable Output<String> nmeaSourceAddressVariable) {
            $.nmeaSourceAddressVariable = nmeaSourceAddressVariable;
            return this;
        }

        /**
         * @param nmeaSourceAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nmeaSourceAddressVariable(String nmeaSourceAddressVariable) {
            return nmeaSourceAddressVariable(Output.of(nmeaSourceAddressVariable));
        }

        public TransportGpsFeatureArgs build() {
            if ($.featureProfileId == null) {
                throw new MissingRequiredPropertyException("TransportGpsFeatureArgs", "featureProfileId");
            }
            return $;
        }
    }

}
