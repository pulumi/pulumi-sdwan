// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.ServiceWirelessLanFeatureArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.ServiceWirelessLanFeatureState;
import com.pulumi.sdwan.outputs.ServiceWirelessLanFeatureSsid;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Service Wireless LAN Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * Expected import identifier with the format: &#34;service_wireless_lan_feature_id,feature_profile_id&#34;
 * 
 * ```sh
 * $ pulumi import sdwan:index/serviceWirelessLanFeature:ServiceWirelessLanFeature example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/serviceWirelessLanFeature:ServiceWirelessLanFeature")
public class ServiceWirelessLanFeature extends com.pulumi.resources.CustomResource {
    /**
     * Select country
     *   - Choices: `AE`, `AR`, `AT`, `AU`, `BA`, `BB`, `BE`, `BG`, `BH`, `BN`, `BO`, `BR`, `BY`, `CA`, `CA2`, `CH`, `CL`, `CM`, `CN`, `CO`, `CR`, `CY`, `CZ`, `DE`, `DK`, `DO`, `DZ`, `EC`, `EE`, `EG`, `ES`, `FI`, `FJ`, `FR`, `GB`, `GH`, `GI`, `GR`, `HK`, `HR`, `HU`, `ID`, `IE`, `IL`, `IO`, `IN`, `IQ`, `IS`, `IT`, `J2`, `J4`, `JM`, `JO`, `KE`, `KN`, `KW`, `KZ`, `LB`, `LI`, `LK`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `ME`, `MK`, `MN`, `MO`, `MT`, `MX`, `MY`, `NL`, `NO`, `NZ`, `OM`, `PA`, `PE`, `PH`, `PH2`, `PK`, `PL`, `PR`, `PT`, `PY`, `QA`, `RO`, `RS`, `RU`, `SA`, `SE`, `SG`, `SI`, `SK`, `TH`, `TN`, `TR`, `TW`, `UA`, `US`, `UY`, `VE`, `VN`, `ZA`
     * 
     */
    @Export(name="country", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> country;

    /**
     * @return Select country
     *   - Choices: `AE`, `AR`, `AT`, `AU`, `BA`, `BB`, `BE`, `BG`, `BH`, `BN`, `BO`, `BR`, `BY`, `CA`, `CA2`, `CH`, `CL`, `CM`, `CN`, `CO`, `CR`, `CY`, `CZ`, `DE`, `DK`, `DO`, `DZ`, `EC`, `EE`, `EG`, `ES`, `FI`, `FJ`, `FR`, `GB`, `GH`, `GI`, `GR`, `HK`, `HR`, `HU`, `ID`, `IE`, `IL`, `IO`, `IN`, `IQ`, `IS`, `IT`, `J2`, `J4`, `JM`, `JO`, `KE`, `KN`, `KW`, `KZ`, `LB`, `LI`, `LK`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `ME`, `MK`, `MN`, `MO`, `MT`, `MX`, `MY`, `NL`, `NO`, `NZ`, `OM`, `PA`, `PE`, `PH`, `PH2`, `PK`, `PL`, `PR`, `PT`, `PY`, `QA`, `RO`, `RS`, `RU`, `SA`, `SE`, `SG`, `SI`, `SK`, `TH`, `TN`, `TR`, `TW`, `UA`, `US`, `UY`, `VE`, `VN`, `ZA`
     * 
     */
    public Output<Optional<String>> country() {
        return Codegen.optional(this.country);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="countryVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> countryVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> countryVariable() {
        return Codegen.optional(this.countryVariable);
    }
    /**
     * The description of the Feature
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * 2.4GHz Enabled
     *   - Default value: `true`
     * 
     */
    @Export(name="enable24g", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enable24g;

    /**
     * @return 2.4GHz Enabled
     *   - Default value: `true`
     * 
     */
    public Output<Optional<Boolean>> enable24g() {
        return Codegen.optional(this.enable24g);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="enable24gVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> enable24gVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> enable24gVariable() {
        return Codegen.optional(this.enable24gVariable);
    }
    /**
     * 5GHz Enabled
     *   - Default value: `true`
     * 
     */
    @Export(name="enable5g", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enable5g;

    /**
     * @return 5GHz Enabled
     *   - Default value: `true`
     * 
     */
    public Output<Optional<Boolean>> enable5g() {
        return Codegen.optional(this.enable5g);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="enable5gVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> enable5gVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> enable5gVariable() {
        return Codegen.optional(this.enable5gVariable);
    }
    /**
     * Feature Profile ID
     * 
     */
    @Export(name="featureProfileId", refs={String.class}, tree="[0]")
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * Set mobile express default gateway
     * 
     */
    @Export(name="meDefaultGateway", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> meDefaultGateway;

    /**
     * @return Set mobile express default gateway
     * 
     */
    public Output<Optional<String>> meDefaultGateway() {
        return Codegen.optional(this.meDefaultGateway);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="meDefaultGatewayVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> meDefaultGatewayVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> meDefaultGatewayVariable() {
        return Codegen.optional(this.meDefaultGatewayVariable);
    }
    /**
     * ME management IP dynamic allocated by DHCP
     * 
     */
    @Export(name="meDynamicIpEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> meDynamicIpEnabled;

    /**
     * @return ME management IP dynamic allocated by DHCP
     * 
     */
    public Output<Boolean> meDynamicIpEnabled() {
        return this.meDynamicIpEnabled;
    }
    /**
     * Set mobile express controller address
     * 
     */
    @Export(name="meIpv4Address", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> meIpv4Address;

    /**
     * @return Set mobile express controller address
     * 
     */
    public Output<Optional<String>> meIpv4Address() {
        return Codegen.optional(this.meIpv4Address);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="meIpv4AddressVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> meIpv4AddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> meIpv4AddressVariable() {
        return Codegen.optional(this.meIpv4AddressVariable);
    }
    /**
     * Set mobile express controller subnet mask
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     * 
     */
    @Export(name="meSubnetMask", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> meSubnetMask;

    /**
     * @return Set mobile express controller subnet mask
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     * 
     */
    public Output<Optional<String>> meSubnetMask() {
        return Codegen.optional(this.meSubnetMask);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="meSubnetMaskVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> meSubnetMaskVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> meSubnetMaskVariable() {
        return Codegen.optional(this.meSubnetMaskVariable);
    }
    /**
     * The name of the Feature
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Set management password,the password must contains characters from all of the following classes,lowercase letters,uppercase letters,digits,and special characters. No character in the password can be repeated more than three times consecutively. The password must not be the same as the associated username or the username reversed. The password must not be cisco,ocsic,or any variant obtained by changing the capitalization of the letters in word cisco. In addition,you can&#39;t substitute 1,l,or ! for i,0 for o,$ for s.
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> password;

    /**
     * @return Set management password,the password must contains characters from all of the following classes,lowercase letters,uppercase letters,digits,and special characters. No character in the password can be repeated more than three times consecutively. The password must not be the same as the associated username or the username reversed. The password must not be cisco,ocsic,or any variant obtained by changing the capitalization of the letters in word cisco. In addition,you can&#39;t substitute 1,l,or ! for i,0 for o,$ for s.
     * 
     */
    public Output<Optional<String>> password() {
        return Codegen.optional(this.password);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="passwordVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> passwordVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> passwordVariable() {
        return Codegen.optional(this.passwordVariable);
    }
    /**
     * Configure Wi-Fi SSID profile
     * 
     */
    @Export(name="ssids", refs={List.class,ServiceWirelessLanFeatureSsid.class}, tree="[0,1]")
    private Output<List<ServiceWirelessLanFeatureSsid>> ssids;

    /**
     * @return Configure Wi-Fi SSID profile
     * 
     */
    public Output<List<ServiceWirelessLanFeatureSsid>> ssids() {
        return this.ssids;
    }
    /**
     * Set management username
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> username;

    /**
     * @return Set management username
     * 
     */
    public Output<Optional<String>> username() {
        return Codegen.optional(this.username);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="usernameVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> usernameVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> usernameVariable() {
        return Codegen.optional(this.usernameVariable);
    }
    /**
     * The version of the Feature
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the Feature
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServiceWirelessLanFeature(java.lang.String name) {
        this(name, ServiceWirelessLanFeatureArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServiceWirelessLanFeature(java.lang.String name, ServiceWirelessLanFeatureArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServiceWirelessLanFeature(java.lang.String name, ServiceWirelessLanFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/serviceWirelessLanFeature:ServiceWirelessLanFeature", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ServiceWirelessLanFeature(java.lang.String name, Output<java.lang.String> id, @Nullable ServiceWirelessLanFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/serviceWirelessLanFeature:ServiceWirelessLanFeature", name, state, makeResourceOptions(options, id), false);
    }

    private static ServiceWirelessLanFeatureArgs makeArgs(ServiceWirelessLanFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ServiceWirelessLanFeatureArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServiceWirelessLanFeature get(java.lang.String name, Output<java.lang.String> id, @Nullable ServiceWirelessLanFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServiceWirelessLanFeature(name, id, state, options);
    }
}
