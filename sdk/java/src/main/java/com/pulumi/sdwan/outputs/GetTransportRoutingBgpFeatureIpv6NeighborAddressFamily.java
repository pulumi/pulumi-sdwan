// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTransportRoutingBgpFeatureIpv6NeighborAddressFamily {
    /**
     * @return Set IPv6 unicast address family
     * 
     */
    private String familyType;
    private String inRoutePolicyId;
    /**
     * @return Set maximum number of prefixes accepted from BGP peer
     * 
     */
    private Integer maxNumberOfPrefixes;
    /**
     * @return Variable name
     * 
     */
    private String maxNumberOfPrefixesVariable;
    private String outRoutePolicyId;
    /**
     * @return Neighbor received maximum prefix policy is disabled.
     * 
     */
    private String policyType;
    /**
     * @return Set the restart interval(minutes) when to restart BGP connection if threshold is exceeded
     * 
     */
    private Integer restartInterval;
    /**
     * @return Variable name
     * 
     */
    private String restartIntervalVariable;
    /**
     * @return Set threshold(1 to 100) at which to generate a warning message
     * 
     */
    private Integer threshold;
    /**
     * @return Variable name
     * 
     */
    private String thresholdVariable;

    private GetTransportRoutingBgpFeatureIpv6NeighborAddressFamily() {}
    /**
     * @return Set IPv6 unicast address family
     * 
     */
    public String familyType() {
        return this.familyType;
    }
    public String inRoutePolicyId() {
        return this.inRoutePolicyId;
    }
    /**
     * @return Set maximum number of prefixes accepted from BGP peer
     * 
     */
    public Integer maxNumberOfPrefixes() {
        return this.maxNumberOfPrefixes;
    }
    /**
     * @return Variable name
     * 
     */
    public String maxNumberOfPrefixesVariable() {
        return this.maxNumberOfPrefixesVariable;
    }
    public String outRoutePolicyId() {
        return this.outRoutePolicyId;
    }
    /**
     * @return Neighbor received maximum prefix policy is disabled.
     * 
     */
    public String policyType() {
        return this.policyType;
    }
    /**
     * @return Set the restart interval(minutes) when to restart BGP connection if threshold is exceeded
     * 
     */
    public Integer restartInterval() {
        return this.restartInterval;
    }
    /**
     * @return Variable name
     * 
     */
    public String restartIntervalVariable() {
        return this.restartIntervalVariable;
    }
    /**
     * @return Set threshold(1 to 100) at which to generate a warning message
     * 
     */
    public Integer threshold() {
        return this.threshold;
    }
    /**
     * @return Variable name
     * 
     */
    public String thresholdVariable() {
        return this.thresholdVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTransportRoutingBgpFeatureIpv6NeighborAddressFamily defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String familyType;
        private String inRoutePolicyId;
        private Integer maxNumberOfPrefixes;
        private String maxNumberOfPrefixesVariable;
        private String outRoutePolicyId;
        private String policyType;
        private Integer restartInterval;
        private String restartIntervalVariable;
        private Integer threshold;
        private String thresholdVariable;
        public Builder() {}
        public Builder(GetTransportRoutingBgpFeatureIpv6NeighborAddressFamily defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.familyType = defaults.familyType;
    	      this.inRoutePolicyId = defaults.inRoutePolicyId;
    	      this.maxNumberOfPrefixes = defaults.maxNumberOfPrefixes;
    	      this.maxNumberOfPrefixesVariable = defaults.maxNumberOfPrefixesVariable;
    	      this.outRoutePolicyId = defaults.outRoutePolicyId;
    	      this.policyType = defaults.policyType;
    	      this.restartInterval = defaults.restartInterval;
    	      this.restartIntervalVariable = defaults.restartIntervalVariable;
    	      this.threshold = defaults.threshold;
    	      this.thresholdVariable = defaults.thresholdVariable;
        }

        @CustomType.Setter
        public Builder familyType(String familyType) {
            if (familyType == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingBgpFeatureIpv6NeighborAddressFamily", "familyType");
            }
            this.familyType = familyType;
            return this;
        }
        @CustomType.Setter
        public Builder inRoutePolicyId(String inRoutePolicyId) {
            if (inRoutePolicyId == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingBgpFeatureIpv6NeighborAddressFamily", "inRoutePolicyId");
            }
            this.inRoutePolicyId = inRoutePolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder maxNumberOfPrefixes(Integer maxNumberOfPrefixes) {
            if (maxNumberOfPrefixes == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingBgpFeatureIpv6NeighborAddressFamily", "maxNumberOfPrefixes");
            }
            this.maxNumberOfPrefixes = maxNumberOfPrefixes;
            return this;
        }
        @CustomType.Setter
        public Builder maxNumberOfPrefixesVariable(String maxNumberOfPrefixesVariable) {
            if (maxNumberOfPrefixesVariable == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingBgpFeatureIpv6NeighborAddressFamily", "maxNumberOfPrefixesVariable");
            }
            this.maxNumberOfPrefixesVariable = maxNumberOfPrefixesVariable;
            return this;
        }
        @CustomType.Setter
        public Builder outRoutePolicyId(String outRoutePolicyId) {
            if (outRoutePolicyId == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingBgpFeatureIpv6NeighborAddressFamily", "outRoutePolicyId");
            }
            this.outRoutePolicyId = outRoutePolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder policyType(String policyType) {
            if (policyType == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingBgpFeatureIpv6NeighborAddressFamily", "policyType");
            }
            this.policyType = policyType;
            return this;
        }
        @CustomType.Setter
        public Builder restartInterval(Integer restartInterval) {
            if (restartInterval == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingBgpFeatureIpv6NeighborAddressFamily", "restartInterval");
            }
            this.restartInterval = restartInterval;
            return this;
        }
        @CustomType.Setter
        public Builder restartIntervalVariable(String restartIntervalVariable) {
            if (restartIntervalVariable == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingBgpFeatureIpv6NeighborAddressFamily", "restartIntervalVariable");
            }
            this.restartIntervalVariable = restartIntervalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder threshold(Integer threshold) {
            if (threshold == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingBgpFeatureIpv6NeighborAddressFamily", "threshold");
            }
            this.threshold = threshold;
            return this;
        }
        @CustomType.Setter
        public Builder thresholdVariable(String thresholdVariable) {
            if (thresholdVariable == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingBgpFeatureIpv6NeighborAddressFamily", "thresholdVariable");
            }
            this.thresholdVariable = thresholdVariable;
            return this;
        }
        public GetTransportRoutingBgpFeatureIpv6NeighborAddressFamily build() {
            final var _resultValue = new GetTransportRoutingBgpFeatureIpv6NeighborAddressFamily();
            _resultValue.familyType = familyType;
            _resultValue.inRoutePolicyId = inRoutePolicyId;
            _resultValue.maxNumberOfPrefixes = maxNumberOfPrefixes;
            _resultValue.maxNumberOfPrefixesVariable = maxNumberOfPrefixesVariable;
            _resultValue.outRoutePolicyId = outRoutePolicyId;
            _resultValue.policyType = policyType;
            _resultValue.restartInterval = restartInterval;
            _resultValue.restartIntervalVariable = restartIntervalVariable;
            _resultValue.threshold = threshold;
            _resultValue.thresholdVariable = thresholdVariable;
            return _resultValue;
        }
    }
}
