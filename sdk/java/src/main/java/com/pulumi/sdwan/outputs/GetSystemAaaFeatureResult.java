// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetSystemAaaFeatureAccountingRule;
import com.pulumi.sdwan.outputs.GetSystemAaaFeatureAuthorizationRule;
import com.pulumi.sdwan.outputs.GetSystemAaaFeatureRadiusGroup;
import com.pulumi.sdwan.outputs.GetSystemAaaFeatureTacacsGroup;
import com.pulumi.sdwan.outputs.GetSystemAaaFeatureUser;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSystemAaaFeatureResult {
    /**
     * @return Accounting configurations parameters
     * 
     */
    private Boolean accountingGroup;
    /**
     * @return Variable name
     * 
     */
    private String accountingGroupVariable;
    /**
     * @return Configure the accounting rules
     * 
     */
    private List<GetSystemAaaFeatureAccountingRule> accountingRules;
    /**
     * @return Authentication configurations parameters
     * 
     */
    private Boolean authenticationGroup;
    /**
     * @return Variable name
     * 
     */
    private String authenticationGroupVariable;
    /**
     * @return For configuration mode commands.
     * 
     */
    private Boolean authorizationConfigCommands;
    /**
     * @return Variable name
     * 
     */
    private String authorizationConfigCommandsVariable;
    /**
     * @return For enabling console authorization
     * 
     */
    private Boolean authorizationConsole;
    /**
     * @return Variable name
     * 
     */
    private String authorizationConsoleVariable;
    /**
     * @return Configure the Authorization Rules
     * 
     */
    private List<GetSystemAaaFeatureAuthorizationRule> authorizationRules;
    /**
     * @return The description of the Feature
     * 
     */
    private String description;
    /**
     * @return Feature Profile ID
     * 
     */
    private String featureProfileId;
    /**
     * @return The id of the Feature
     * 
     */
    private String id;
    /**
     * @return The name of the Feature
     * 
     */
    private String name;
    /**
     * @return Configure the Radius serverGroup
     * 
     */
    private List<GetSystemAaaFeatureRadiusGroup> radiusGroups;
    /**
     * @return ServerGroups priority order
     * 
     */
    private List<String> serverAuthOrders;
    /**
     * @return Configure the TACACS serverGroup
     * 
     */
    private List<GetSystemAaaFeatureTacacsGroup> tacacsGroups;
    /**
     * @return Create local login account
     * 
     */
    private List<GetSystemAaaFeatureUser> users;
    /**
     * @return The version of the Feature
     * 
     */
    private Integer version;

    private GetSystemAaaFeatureResult() {}
    /**
     * @return Accounting configurations parameters
     * 
     */
    public Boolean accountingGroup() {
        return this.accountingGroup;
    }
    /**
     * @return Variable name
     * 
     */
    public String accountingGroupVariable() {
        return this.accountingGroupVariable;
    }
    /**
     * @return Configure the accounting rules
     * 
     */
    public List<GetSystemAaaFeatureAccountingRule> accountingRules() {
        return this.accountingRules;
    }
    /**
     * @return Authentication configurations parameters
     * 
     */
    public Boolean authenticationGroup() {
        return this.authenticationGroup;
    }
    /**
     * @return Variable name
     * 
     */
    public String authenticationGroupVariable() {
        return this.authenticationGroupVariable;
    }
    /**
     * @return For configuration mode commands.
     * 
     */
    public Boolean authorizationConfigCommands() {
        return this.authorizationConfigCommands;
    }
    /**
     * @return Variable name
     * 
     */
    public String authorizationConfigCommandsVariable() {
        return this.authorizationConfigCommandsVariable;
    }
    /**
     * @return For enabling console authorization
     * 
     */
    public Boolean authorizationConsole() {
        return this.authorizationConsole;
    }
    /**
     * @return Variable name
     * 
     */
    public String authorizationConsoleVariable() {
        return this.authorizationConsoleVariable;
    }
    /**
     * @return Configure the Authorization Rules
     * 
     */
    public List<GetSystemAaaFeatureAuthorizationRule> authorizationRules() {
        return this.authorizationRules;
    }
    /**
     * @return The description of the Feature
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Feature Profile ID
     * 
     */
    public String featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * @return The id of the Feature
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the Feature
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Configure the Radius serverGroup
     * 
     */
    public List<GetSystemAaaFeatureRadiusGroup> radiusGroups() {
        return this.radiusGroups;
    }
    /**
     * @return ServerGroups priority order
     * 
     */
    public List<String> serverAuthOrders() {
        return this.serverAuthOrders;
    }
    /**
     * @return Configure the TACACS serverGroup
     * 
     */
    public List<GetSystemAaaFeatureTacacsGroup> tacacsGroups() {
        return this.tacacsGroups;
    }
    /**
     * @return Create local login account
     * 
     */
    public List<GetSystemAaaFeatureUser> users() {
        return this.users;
    }
    /**
     * @return The version of the Feature
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSystemAaaFeatureResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean accountingGroup;
        private String accountingGroupVariable;
        private List<GetSystemAaaFeatureAccountingRule> accountingRules;
        private Boolean authenticationGroup;
        private String authenticationGroupVariable;
        private Boolean authorizationConfigCommands;
        private String authorizationConfigCommandsVariable;
        private Boolean authorizationConsole;
        private String authorizationConsoleVariable;
        private List<GetSystemAaaFeatureAuthorizationRule> authorizationRules;
        private String description;
        private String featureProfileId;
        private String id;
        private String name;
        private List<GetSystemAaaFeatureRadiusGroup> radiusGroups;
        private List<String> serverAuthOrders;
        private List<GetSystemAaaFeatureTacacsGroup> tacacsGroups;
        private List<GetSystemAaaFeatureUser> users;
        private Integer version;
        public Builder() {}
        public Builder(GetSystemAaaFeatureResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountingGroup = defaults.accountingGroup;
    	      this.accountingGroupVariable = defaults.accountingGroupVariable;
    	      this.accountingRules = defaults.accountingRules;
    	      this.authenticationGroup = defaults.authenticationGroup;
    	      this.authenticationGroupVariable = defaults.authenticationGroupVariable;
    	      this.authorizationConfigCommands = defaults.authorizationConfigCommands;
    	      this.authorizationConfigCommandsVariable = defaults.authorizationConfigCommandsVariable;
    	      this.authorizationConsole = defaults.authorizationConsole;
    	      this.authorizationConsoleVariable = defaults.authorizationConsoleVariable;
    	      this.authorizationRules = defaults.authorizationRules;
    	      this.description = defaults.description;
    	      this.featureProfileId = defaults.featureProfileId;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.radiusGroups = defaults.radiusGroups;
    	      this.serverAuthOrders = defaults.serverAuthOrders;
    	      this.tacacsGroups = defaults.tacacsGroups;
    	      this.users = defaults.users;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder accountingGroup(Boolean accountingGroup) {
            if (accountingGroup == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "accountingGroup");
            }
            this.accountingGroup = accountingGroup;
            return this;
        }
        @CustomType.Setter
        public Builder accountingGroupVariable(String accountingGroupVariable) {
            if (accountingGroupVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "accountingGroupVariable");
            }
            this.accountingGroupVariable = accountingGroupVariable;
            return this;
        }
        @CustomType.Setter
        public Builder accountingRules(List<GetSystemAaaFeatureAccountingRule> accountingRules) {
            if (accountingRules == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "accountingRules");
            }
            this.accountingRules = accountingRules;
            return this;
        }
        public Builder accountingRules(GetSystemAaaFeatureAccountingRule... accountingRules) {
            return accountingRules(List.of(accountingRules));
        }
        @CustomType.Setter
        public Builder authenticationGroup(Boolean authenticationGroup) {
            if (authenticationGroup == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "authenticationGroup");
            }
            this.authenticationGroup = authenticationGroup;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationGroupVariable(String authenticationGroupVariable) {
            if (authenticationGroupVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "authenticationGroupVariable");
            }
            this.authenticationGroupVariable = authenticationGroupVariable;
            return this;
        }
        @CustomType.Setter
        public Builder authorizationConfigCommands(Boolean authorizationConfigCommands) {
            if (authorizationConfigCommands == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "authorizationConfigCommands");
            }
            this.authorizationConfigCommands = authorizationConfigCommands;
            return this;
        }
        @CustomType.Setter
        public Builder authorizationConfigCommandsVariable(String authorizationConfigCommandsVariable) {
            if (authorizationConfigCommandsVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "authorizationConfigCommandsVariable");
            }
            this.authorizationConfigCommandsVariable = authorizationConfigCommandsVariable;
            return this;
        }
        @CustomType.Setter
        public Builder authorizationConsole(Boolean authorizationConsole) {
            if (authorizationConsole == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "authorizationConsole");
            }
            this.authorizationConsole = authorizationConsole;
            return this;
        }
        @CustomType.Setter
        public Builder authorizationConsoleVariable(String authorizationConsoleVariable) {
            if (authorizationConsoleVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "authorizationConsoleVariable");
            }
            this.authorizationConsoleVariable = authorizationConsoleVariable;
            return this;
        }
        @CustomType.Setter
        public Builder authorizationRules(List<GetSystemAaaFeatureAuthorizationRule> authorizationRules) {
            if (authorizationRules == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "authorizationRules");
            }
            this.authorizationRules = authorizationRules;
            return this;
        }
        public Builder authorizationRules(GetSystemAaaFeatureAuthorizationRule... authorizationRules) {
            return authorizationRules(List.of(authorizationRules));
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder featureProfileId(String featureProfileId) {
            if (featureProfileId == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "featureProfileId");
            }
            this.featureProfileId = featureProfileId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder radiusGroups(List<GetSystemAaaFeatureRadiusGroup> radiusGroups) {
            if (radiusGroups == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "radiusGroups");
            }
            this.radiusGroups = radiusGroups;
            return this;
        }
        public Builder radiusGroups(GetSystemAaaFeatureRadiusGroup... radiusGroups) {
            return radiusGroups(List.of(radiusGroups));
        }
        @CustomType.Setter
        public Builder serverAuthOrders(List<String> serverAuthOrders) {
            if (serverAuthOrders == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "serverAuthOrders");
            }
            this.serverAuthOrders = serverAuthOrders;
            return this;
        }
        public Builder serverAuthOrders(String... serverAuthOrders) {
            return serverAuthOrders(List.of(serverAuthOrders));
        }
        @CustomType.Setter
        public Builder tacacsGroups(List<GetSystemAaaFeatureTacacsGroup> tacacsGroups) {
            if (tacacsGroups == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "tacacsGroups");
            }
            this.tacacsGroups = tacacsGroups;
            return this;
        }
        public Builder tacacsGroups(GetSystemAaaFeatureTacacsGroup... tacacsGroups) {
            return tacacsGroups(List.of(tacacsGroups));
        }
        @CustomType.Setter
        public Builder users(List<GetSystemAaaFeatureUser> users) {
            if (users == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "users");
            }
            this.users = users;
            return this;
        }
        public Builder users(GetSystemAaaFeatureUser... users) {
            return users(List.of(users));
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetSystemAaaFeatureResult build() {
            final var _resultValue = new GetSystemAaaFeatureResult();
            _resultValue.accountingGroup = accountingGroup;
            _resultValue.accountingGroupVariable = accountingGroupVariable;
            _resultValue.accountingRules = accountingRules;
            _resultValue.authenticationGroup = authenticationGroup;
            _resultValue.authenticationGroupVariable = authenticationGroupVariable;
            _resultValue.authorizationConfigCommands = authorizationConfigCommands;
            _resultValue.authorizationConfigCommandsVariable = authorizationConfigCommandsVariable;
            _resultValue.authorizationConsole = authorizationConsole;
            _resultValue.authorizationConsoleVariable = authorizationConsoleVariable;
            _resultValue.authorizationRules = authorizationRules;
            _resultValue.description = description;
            _resultValue.featureProfileId = featureProfileId;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.radiusGroups = radiusGroups;
            _resultValue.serverAuthOrders = serverAuthOrders;
            _resultValue.tacacsGroups = tacacsGroups;
            _resultValue.users = users;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
