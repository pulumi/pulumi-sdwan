// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CedgeAaaFeatureTemplateAuthorizationRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final CedgeAaaFeatureTemplateAuthorizationRuleArgs Empty = new CedgeAaaFeatureTemplateAuthorizationRuleArgs();

    /**
     * Succeed if user has authenticated
     *   - Default value: `false`
     * 
     */
    @Import(name="authenticated")
    private @Nullable Output<Boolean> authenticated;

    /**
     * @return Succeed if user has authenticated
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> authenticated() {
        return Optional.ofNullable(this.authenticated);
    }

    /**
     * Comma separated list of groups
     * 
     */
    @Import(name="groups")
    private @Nullable Output<String> groups;

    /**
     * @return Comma separated list of groups
     * 
     */
    public Optional<Output<String>> groups() {
        return Optional.ofNullable(this.groups);
    }

    /**
     * Method
     *   - Choices: `commands`
     * 
     */
    @Import(name="method")
    private @Nullable Output<String> method;

    /**
     * @return Method
     *   - Choices: `commands`
     * 
     */
    public Optional<Output<String>> method() {
        return Optional.ofNullable(this.method);
    }

    /**
     * Configure Authorization Rule ID
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Configure Authorization Rule ID
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Indicates if list item is considered optional.
     * 
     */
    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    /**
     * Privilege level when method is commands
     *   - Choices: `1`, `15`
     * 
     */
    @Import(name="privilegeLevel")
    private @Nullable Output<String> privilegeLevel;

    /**
     * @return Privilege level when method is commands
     *   - Choices: `1`, `15`
     * 
     */
    public Optional<Output<String>> privilegeLevel() {
        return Optional.ofNullable(this.privilegeLevel);
    }

    private CedgeAaaFeatureTemplateAuthorizationRuleArgs() {}

    private CedgeAaaFeatureTemplateAuthorizationRuleArgs(CedgeAaaFeatureTemplateAuthorizationRuleArgs $) {
        this.authenticated = $.authenticated;
        this.groups = $.groups;
        this.method = $.method;
        this.name = $.name;
        this.optional = $.optional;
        this.privilegeLevel = $.privilegeLevel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CedgeAaaFeatureTemplateAuthorizationRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CedgeAaaFeatureTemplateAuthorizationRuleArgs $;

        public Builder() {
            $ = new CedgeAaaFeatureTemplateAuthorizationRuleArgs();
        }

        public Builder(CedgeAaaFeatureTemplateAuthorizationRuleArgs defaults) {
            $ = new CedgeAaaFeatureTemplateAuthorizationRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticated Succeed if user has authenticated
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder authenticated(@Nullable Output<Boolean> authenticated) {
            $.authenticated = authenticated;
            return this;
        }

        /**
         * @param authenticated Succeed if user has authenticated
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder authenticated(Boolean authenticated) {
            return authenticated(Output.of(authenticated));
        }

        /**
         * @param groups Comma separated list of groups
         * 
         * @return builder
         * 
         */
        public Builder groups(@Nullable Output<String> groups) {
            $.groups = groups;
            return this;
        }

        /**
         * @param groups Comma separated list of groups
         * 
         * @return builder
         * 
         */
        public Builder groups(String groups) {
            return groups(Output.of(groups));
        }

        /**
         * @param method Method
         *   - Choices: `commands`
         * 
         * @return builder
         * 
         */
        public Builder method(@Nullable Output<String> method) {
            $.method = method;
            return this;
        }

        /**
         * @param method Method
         *   - Choices: `commands`
         * 
         * @return builder
         * 
         */
        public Builder method(String method) {
            return method(Output.of(method));
        }

        /**
         * @param name Configure Authorization Rule ID
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Configure Authorization Rule ID
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        /**
         * @param privilegeLevel Privilege level when method is commands
         *   - Choices: `1`, `15`
         * 
         * @return builder
         * 
         */
        public Builder privilegeLevel(@Nullable Output<String> privilegeLevel) {
            $.privilegeLevel = privilegeLevel;
            return this;
        }

        /**
         * @param privilegeLevel Privilege level when method is commands
         *   - Choices: `1`, `15`
         * 
         * @return builder
         * 
         */
        public Builder privilegeLevel(String privilegeLevel) {
            return privilegeLevel(Output.of(privilegeLevel));
        }

        public CedgeAaaFeatureTemplateAuthorizationRuleArgs build() {
            return $;
        }
    }

}
