// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DnsSecurityPolicyTargetVpn {
    /**
     * @return Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
     * 
     */
    private @Nullable String dnsServerIp;
    /**
     * @return Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
     * 
     */
    private @Nullable Boolean localDomainBypassEnabled;
    /**
     * @return non empty interger string
     * 
     */
    private @Nullable String uid;
    /**
     * @return Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
     * 
     */
    private @Nullable Boolean umbrellaDefault;
    private @Nullable List<String> vpns;

    private DnsSecurityPolicyTargetVpn() {}
    /**
     * @return Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
     * 
     */
    public Optional<String> dnsServerIp() {
        return Optional.ofNullable(this.dnsServerIp);
    }
    /**
     * @return Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
     * 
     */
    public Optional<Boolean> localDomainBypassEnabled() {
        return Optional.ofNullable(this.localDomainBypassEnabled);
    }
    /**
     * @return non empty interger string
     * 
     */
    public Optional<String> uid() {
        return Optional.ofNullable(this.uid);
    }
    /**
     * @return Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
     * 
     */
    public Optional<Boolean> umbrellaDefault() {
        return Optional.ofNullable(this.umbrellaDefault);
    }
    public List<String> vpns() {
        return this.vpns == null ? List.of() : this.vpns;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DnsSecurityPolicyTargetVpn defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dnsServerIp;
        private @Nullable Boolean localDomainBypassEnabled;
        private @Nullable String uid;
        private @Nullable Boolean umbrellaDefault;
        private @Nullable List<String> vpns;
        public Builder() {}
        public Builder(DnsSecurityPolicyTargetVpn defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dnsServerIp = defaults.dnsServerIp;
    	      this.localDomainBypassEnabled = defaults.localDomainBypassEnabled;
    	      this.uid = defaults.uid;
    	      this.umbrellaDefault = defaults.umbrellaDefault;
    	      this.vpns = defaults.vpns;
        }

        @CustomType.Setter
        public Builder dnsServerIp(@Nullable String dnsServerIp) {

            this.dnsServerIp = dnsServerIp;
            return this;
        }
        @CustomType.Setter
        public Builder localDomainBypassEnabled(@Nullable Boolean localDomainBypassEnabled) {

            this.localDomainBypassEnabled = localDomainBypassEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder uid(@Nullable String uid) {

            this.uid = uid;
            return this;
        }
        @CustomType.Setter
        public Builder umbrellaDefault(@Nullable Boolean umbrellaDefault) {

            this.umbrellaDefault = umbrellaDefault;
            return this;
        }
        @CustomType.Setter
        public Builder vpns(@Nullable List<String> vpns) {

            this.vpns = vpns;
            return this;
        }
        public Builder vpns(String... vpns) {
            return vpns(List.of(vpns));
        }
        public DnsSecurityPolicyTargetVpn build() {
            final var _resultValue = new DnsSecurityPolicyTargetVpn();
            _resultValue.dnsServerIp = dnsServerIp;
            _resultValue.localDomainBypassEnabled = localDomainBypassEnabled;
            _resultValue.uid = uid;
            _resultValue.umbrellaDefault = umbrellaDefault;
            _resultValue.vpns = vpns;
            return _resultValue;
        }
    }
}
