// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.ServiceSwitchportFeatureInterfaceArgs;
import com.pulumi.sdwan.inputs.ServiceSwitchportFeatureStaticMacAddressArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceSwitchportFeatureState extends com.pulumi.resources.ResourceArgs {

    public static final ServiceSwitchportFeatureState Empty = new ServiceSwitchportFeatureState();

    /**
     * Set when a MAC table entry ages out (0 to disable, 10-1000000 otherwise)
     *   - Range: `0`-`1000000`
     *   - Default value: `300`
     * 
     */
    @Import(name="ageOutTime")
    private @Nullable Output<Integer> ageOutTime;

    /**
     * @return Set when a MAC table entry ages out (0 to disable, 10-1000000 otherwise)
     *   - Range: `0`-`1000000`
     *   - Default value: `300`
     * 
     */
    public Optional<Output<Integer>> ageOutTime() {
        return Optional.ofNullable(this.ageOutTime);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ageOutTimeVariable")
    private @Nullable Output<String> ageOutTimeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ageOutTimeVariable() {
        return Optional.ofNullable(this.ageOutTimeVariable);
    }

    /**
     * The description of the Feature
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId")
    private @Nullable Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Optional<Output<String>> featureProfileId() {
        return Optional.ofNullable(this.featureProfileId);
    }

    /**
     * Interface name: GigabitEthernet0/&lt;&gt;/&lt;&gt; when present
     * 
     */
    @Import(name="interfaces")
    private @Nullable Output<List<ServiceSwitchportFeatureInterfaceArgs>> interfaces;

    /**
     * @return Interface name: GigabitEthernet0/&lt;&gt;/&lt;&gt; when present
     * 
     */
    public Optional<Output<List<ServiceSwitchportFeatureInterfaceArgs>>> interfaces() {
        return Optional.ofNullable(this.interfaces);
    }

    /**
     * The name of the Feature
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Add static MAC address entries for interface
     * 
     */
    @Import(name="staticMacAddresses")
    private @Nullable Output<List<ServiceSwitchportFeatureStaticMacAddressArgs>> staticMacAddresses;

    /**
     * @return Add static MAC address entries for interface
     * 
     */
    public Optional<Output<List<ServiceSwitchportFeatureStaticMacAddressArgs>>> staticMacAddresses() {
        return Optional.ofNullable(this.staticMacAddresses);
    }

    /**
     * The version of the Feature
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the Feature
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private ServiceSwitchportFeatureState() {}

    private ServiceSwitchportFeatureState(ServiceSwitchportFeatureState $) {
        this.ageOutTime = $.ageOutTime;
        this.ageOutTimeVariable = $.ageOutTimeVariable;
        this.description = $.description;
        this.featureProfileId = $.featureProfileId;
        this.interfaces = $.interfaces;
        this.name = $.name;
        this.staticMacAddresses = $.staticMacAddresses;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceSwitchportFeatureState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceSwitchportFeatureState $;

        public Builder() {
            $ = new ServiceSwitchportFeatureState();
        }

        public Builder(ServiceSwitchportFeatureState defaults) {
            $ = new ServiceSwitchportFeatureState(Objects.requireNonNull(defaults));
        }

        /**
         * @param ageOutTime Set when a MAC table entry ages out (0 to disable, 10-1000000 otherwise)
         *   - Range: `0`-`1000000`
         *   - Default value: `300`
         * 
         * @return builder
         * 
         */
        public Builder ageOutTime(@Nullable Output<Integer> ageOutTime) {
            $.ageOutTime = ageOutTime;
            return this;
        }

        /**
         * @param ageOutTime Set when a MAC table entry ages out (0 to disable, 10-1000000 otherwise)
         *   - Range: `0`-`1000000`
         *   - Default value: `300`
         * 
         * @return builder
         * 
         */
        public Builder ageOutTime(Integer ageOutTime) {
            return ageOutTime(Output.of(ageOutTime));
        }

        /**
         * @param ageOutTimeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ageOutTimeVariable(@Nullable Output<String> ageOutTimeVariable) {
            $.ageOutTimeVariable = ageOutTimeVariable;
            return this;
        }

        /**
         * @param ageOutTimeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ageOutTimeVariable(String ageOutTimeVariable) {
            return ageOutTimeVariable(Output.of(ageOutTimeVariable));
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(@Nullable Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param interfaces Interface name: GigabitEthernet0/&lt;&gt;/&lt;&gt; when present
         * 
         * @return builder
         * 
         */
        public Builder interfaces(@Nullable Output<List<ServiceSwitchportFeatureInterfaceArgs>> interfaces) {
            $.interfaces = interfaces;
            return this;
        }

        /**
         * @param interfaces Interface name: GigabitEthernet0/&lt;&gt;/&lt;&gt; when present
         * 
         * @return builder
         * 
         */
        public Builder interfaces(List<ServiceSwitchportFeatureInterfaceArgs> interfaces) {
            return interfaces(Output.of(interfaces));
        }

        /**
         * @param interfaces Interface name: GigabitEthernet0/&lt;&gt;/&lt;&gt; when present
         * 
         * @return builder
         * 
         */
        public Builder interfaces(ServiceSwitchportFeatureInterfaceArgs... interfaces) {
            return interfaces(List.of(interfaces));
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param staticMacAddresses Add static MAC address entries for interface
         * 
         * @return builder
         * 
         */
        public Builder staticMacAddresses(@Nullable Output<List<ServiceSwitchportFeatureStaticMacAddressArgs>> staticMacAddresses) {
            $.staticMacAddresses = staticMacAddresses;
            return this;
        }

        /**
         * @param staticMacAddresses Add static MAC address entries for interface
         * 
         * @return builder
         * 
         */
        public Builder staticMacAddresses(List<ServiceSwitchportFeatureStaticMacAddressArgs> staticMacAddresses) {
            return staticMacAddresses(Output.of(staticMacAddresses));
        }

        /**
         * @param staticMacAddresses Add static MAC address entries for interface
         * 
         * @return builder
         * 
         */
        public Builder staticMacAddresses(ServiceSwitchportFeatureStaticMacAddressArgs... staticMacAddresses) {
            return staticMacAddresses(List.of(staticMacAddresses));
        }

        /**
         * @param version The version of the Feature
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the Feature
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public ServiceSwitchportFeatureState build() {
            return $;
        }
    }

}
