// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetCiscoOspfv3FeatureTemplateIpv4Area;
import com.pulumi.sdwan.outputs.GetCiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsa;
import com.pulumi.sdwan.outputs.GetCiscoOspfv3FeatureTemplateIpv4Redistribute;
import com.pulumi.sdwan.outputs.GetCiscoOspfv3FeatureTemplateIpv6Area;
import com.pulumi.sdwan.outputs.GetCiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsa;
import com.pulumi.sdwan.outputs.GetCiscoOspfv3FeatureTemplateIpv6Redistribute;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCiscoOspfv3FeatureTemplateResult {
    /**
     * @return The description of the feature template
     * 
     */
    private String description;
    /**
     * @return List of supported device types
     * 
     */
    private List<String> deviceTypes;
    /**
     * @return The id of the feature template
     * 
     */
    private String id;
    /**
     * @return Configure OSPF area
     * 
     */
    private List<GetCiscoOspfv3FeatureTemplateIpv4Area> ipv4Areas;
    /**
     * @return Set reference bandwidth method to assign OSPF cost
     * 
     */
    private Integer ipv4AutoCostReferenceBandwidth;
    /**
     * @return Variable name
     * 
     */
    private String ipv4AutoCostReferenceBandwidthVariable;
    /**
     * @return Calculate summary route cost based on RFC 1583
     * 
     */
    private Boolean ipv4CompatibleRfc1583;
    /**
     * @return Variable name
     * 
     */
    private String ipv4CompatibleRfc1583Variable;
    /**
     * @return Distribute default external route into OSPF
     * 
     */
    private Boolean ipv4DefaultInformationOriginate;
    /**
     * @return Always advertise default route
     * 
     */
    private Boolean ipv4DefaultInformationOriginateAlways;
    /**
     * @return Variable name
     * 
     */
    private String ipv4DefaultInformationOriginateAlwaysVariable;
    /**
     * @return Set metric used to generate default route \n\n
     * 
     */
    private Integer ipv4DefaultInformationOriginateMetric;
    /**
     * @return Set default route type
     * 
     */
    private String ipv4DefaultInformationOriginateMetricType;
    /**
     * @return Variable name
     * 
     */
    private String ipv4DefaultInformationOriginateMetricTypeVariable;
    /**
     * @return Variable name
     * 
     */
    private String ipv4DefaultInformationOriginateMetricVariable;
    /**
     * @return Distance
     * 
     */
    private Integer ipv4Distance;
    /**
     * @return Set distance for external routes
     * 
     */
    private Integer ipv4DistanceExternal;
    /**
     * @return Variable name
     * 
     */
    private String ipv4DistanceExternalVariable;
    /**
     * @return Set distance for inter-area routes
     * 
     */
    private Integer ipv4DistanceInterArea;
    /**
     * @return Variable name
     * 
     */
    private String ipv4DistanceInterAreaVariable;
    /**
     * @return Set distance for intra-area routes
     * 
     */
    private Integer ipv4DistanceIntraArea;
    /**
     * @return Variable name
     * 
     */
    private String ipv4DistanceIntraAreaVariable;
    /**
     * @return Variable name
     * 
     */
    private String ipv4DistanceVariable;
    /**
     * @return Filter
     * 
     */
    private Boolean ipv4Filter;
    /**
     * @return Variable name
     * 
     */
    private String ipv4FilterVariable;
    /**
     * @return Advertise own router LSA with infinite distance
     * 
     */
    private List<GetCiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsa> ipv4MaxMetricRouterLsas;
    /**
     * @return Policy Name
     * 
     */
    private String ipv4PolicyName;
    /**
     * @return Variable name
     * 
     */
    private String ipv4PolicyNameVariable;
    /**
     * @return Redistribute routes
     * 
     */
    private List<GetCiscoOspfv3FeatureTemplateIpv4Redistribute> ipv4Redistributes;
    /**
     * @return Set OSPF router ID to override system IP address
     * 
     */
    private String ipv4RouterId;
    /**
     * @return Variable name
     * 
     */
    private String ipv4RouterIdVariable;
    /**
     * @return Set delay from first change received until performing SPF calculation
     * 
     */
    private Integer ipv4TimersSpfDelay;
    /**
     * @return Variable name
     * 
     */
    private String ipv4TimersSpfDelayVariable;
    /**
     * @return Set initial hold time between consecutive SPF calculations
     * 
     */
    private Integer ipv4TimersSpfInitialHold;
    /**
     * @return Variable name
     * 
     */
    private String ipv4TimersSpfInitialHoldVariable;
    /**
     * @return Set maximum hold time between consecutive SPF calculations
     * 
     */
    private Integer ipv4TimersSpfMaxHold;
    /**
     * @return Variable name
     * 
     */
    private String ipv4TimersSpfMaxHoldVariable;
    /**
     * @return Configure OSPF area
     * 
     */
    private List<GetCiscoOspfv3FeatureTemplateIpv6Area> ipv6Areas;
    /**
     * @return Set reference bandwidth method to assign OSPF cost
     * 
     */
    private Integer ipv6AutoCostReferenceBandwidth;
    /**
     * @return Variable name
     * 
     */
    private String ipv6AutoCostReferenceBandwidthVariable;
    /**
     * @return Calculate summary route cost based on RFC 1583
     * 
     */
    private Boolean ipv6CompatibleRfc1583;
    /**
     * @return Variable name
     * 
     */
    private String ipv6CompatibleRfc1583Variable;
    /**
     * @return Distribute default external route into OSPF
     * 
     */
    private Boolean ipv6DefaultInformationOriginate;
    /**
     * @return Always advertise default route
     * 
     */
    private Boolean ipv6DefaultInformationOriginateAlways;
    /**
     * @return Variable name
     * 
     */
    private String ipv6DefaultInformationOriginateAlwaysVariable;
    /**
     * @return Set metric used to generate default route \n\n
     * 
     */
    private Integer ipv6DefaultInformationOriginateMetric;
    /**
     * @return Set default route type
     * 
     */
    private String ipv6DefaultInformationOriginateMetricType;
    /**
     * @return Variable name
     * 
     */
    private String ipv6DefaultInformationOriginateMetricTypeVariable;
    /**
     * @return Variable name
     * 
     */
    private String ipv6DefaultInformationOriginateMetricVariable;
    /**
     * @return Distance
     * 
     */
    private Integer ipv6Distance;
    /**
     * @return Set distance for external routes
     * 
     */
    private Integer ipv6DistanceExternal;
    /**
     * @return Variable name
     * 
     */
    private String ipv6DistanceExternalVariable;
    /**
     * @return Set distance for inter-area routes
     * 
     */
    private Integer ipv6DistanceInterArea;
    /**
     * @return Variable name
     * 
     */
    private String ipv6DistanceInterAreaVariable;
    /**
     * @return Set distance for intra-area routes
     * 
     */
    private Integer ipv6DistanceIntraArea;
    /**
     * @return Variable name
     * 
     */
    private String ipv6DistanceIntraAreaVariable;
    /**
     * @return Variable name
     * 
     */
    private String ipv6DistanceVariable;
    /**
     * @return Filter
     * 
     */
    private Boolean ipv6Filter;
    /**
     * @return Variable name
     * 
     */
    private String ipv6FilterVariable;
    /**
     * @return Advertise own router LSA with infinite distance
     * 
     */
    private List<GetCiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsa> ipv6MaxMetricRouterLsas;
    /**
     * @return Name
     * 
     */
    private String ipv6PolicyName;
    /**
     * @return Variable name
     * 
     */
    private String ipv6PolicyNameVariable;
    /**
     * @return Redistribute routes
     * 
     */
    private List<GetCiscoOspfv3FeatureTemplateIpv6Redistribute> ipv6Redistributes;
    /**
     * @return Set OSPF router ID to override system IP address
     * 
     */
    private String ipv6RouterId;
    /**
     * @return Variable name
     * 
     */
    private String ipv6RouterIdVariable;
    /**
     * @return Set delay from first change received until performing SPF calculation
     * 
     */
    private Integer ipv6TimersSpfDelay;
    /**
     * @return Variable name
     * 
     */
    private String ipv6TimersSpfDelayVariable;
    /**
     * @return Set initial hold time between consecutive SPF calculations
     * 
     */
    private Integer ipv6TimersSpfInitialHold;
    /**
     * @return Variable name
     * 
     */
    private String ipv6TimersSpfInitialHoldVariable;
    /**
     * @return Set maximum hold time between consecutive SPF calculations
     * 
     */
    private Integer ipv6TimersSpfMaxHold;
    /**
     * @return Variable name
     * 
     */
    private String ipv6TimersSpfMaxHoldVariable;
    /**
     * @return The name of the feature template
     * 
     */
    private String name;
    /**
     * @return The template type
     * 
     */
    private String templateType;
    /**
     * @return The version of the feature template
     * 
     */
    private Integer version;

    private GetCiscoOspfv3FeatureTemplateResult() {}
    /**
     * @return The description of the feature template
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return List of supported device types
     * 
     */
    public List<String> deviceTypes() {
        return this.deviceTypes;
    }
    /**
     * @return The id of the feature template
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Configure OSPF area
     * 
     */
    public List<GetCiscoOspfv3FeatureTemplateIpv4Area> ipv4Areas() {
        return this.ipv4Areas;
    }
    /**
     * @return Set reference bandwidth method to assign OSPF cost
     * 
     */
    public Integer ipv4AutoCostReferenceBandwidth() {
        return this.ipv4AutoCostReferenceBandwidth;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv4AutoCostReferenceBandwidthVariable() {
        return this.ipv4AutoCostReferenceBandwidthVariable;
    }
    /**
     * @return Calculate summary route cost based on RFC 1583
     * 
     */
    public Boolean ipv4CompatibleRfc1583() {
        return this.ipv4CompatibleRfc1583;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv4CompatibleRfc1583Variable() {
        return this.ipv4CompatibleRfc1583Variable;
    }
    /**
     * @return Distribute default external route into OSPF
     * 
     */
    public Boolean ipv4DefaultInformationOriginate() {
        return this.ipv4DefaultInformationOriginate;
    }
    /**
     * @return Always advertise default route
     * 
     */
    public Boolean ipv4DefaultInformationOriginateAlways() {
        return this.ipv4DefaultInformationOriginateAlways;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv4DefaultInformationOriginateAlwaysVariable() {
        return this.ipv4DefaultInformationOriginateAlwaysVariable;
    }
    /**
     * @return Set metric used to generate default route \n\n
     * 
     */
    public Integer ipv4DefaultInformationOriginateMetric() {
        return this.ipv4DefaultInformationOriginateMetric;
    }
    /**
     * @return Set default route type
     * 
     */
    public String ipv4DefaultInformationOriginateMetricType() {
        return this.ipv4DefaultInformationOriginateMetricType;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv4DefaultInformationOriginateMetricTypeVariable() {
        return this.ipv4DefaultInformationOriginateMetricTypeVariable;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv4DefaultInformationOriginateMetricVariable() {
        return this.ipv4DefaultInformationOriginateMetricVariable;
    }
    /**
     * @return Distance
     * 
     */
    public Integer ipv4Distance() {
        return this.ipv4Distance;
    }
    /**
     * @return Set distance for external routes
     * 
     */
    public Integer ipv4DistanceExternal() {
        return this.ipv4DistanceExternal;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv4DistanceExternalVariable() {
        return this.ipv4DistanceExternalVariable;
    }
    /**
     * @return Set distance for inter-area routes
     * 
     */
    public Integer ipv4DistanceInterArea() {
        return this.ipv4DistanceInterArea;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv4DistanceInterAreaVariable() {
        return this.ipv4DistanceInterAreaVariable;
    }
    /**
     * @return Set distance for intra-area routes
     * 
     */
    public Integer ipv4DistanceIntraArea() {
        return this.ipv4DistanceIntraArea;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv4DistanceIntraAreaVariable() {
        return this.ipv4DistanceIntraAreaVariable;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv4DistanceVariable() {
        return this.ipv4DistanceVariable;
    }
    /**
     * @return Filter
     * 
     */
    public Boolean ipv4Filter() {
        return this.ipv4Filter;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv4FilterVariable() {
        return this.ipv4FilterVariable;
    }
    /**
     * @return Advertise own router LSA with infinite distance
     * 
     */
    public List<GetCiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsa> ipv4MaxMetricRouterLsas() {
        return this.ipv4MaxMetricRouterLsas;
    }
    /**
     * @return Policy Name
     * 
     */
    public String ipv4PolicyName() {
        return this.ipv4PolicyName;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv4PolicyNameVariable() {
        return this.ipv4PolicyNameVariable;
    }
    /**
     * @return Redistribute routes
     * 
     */
    public List<GetCiscoOspfv3FeatureTemplateIpv4Redistribute> ipv4Redistributes() {
        return this.ipv4Redistributes;
    }
    /**
     * @return Set OSPF router ID to override system IP address
     * 
     */
    public String ipv4RouterId() {
        return this.ipv4RouterId;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv4RouterIdVariable() {
        return this.ipv4RouterIdVariable;
    }
    /**
     * @return Set delay from first change received until performing SPF calculation
     * 
     */
    public Integer ipv4TimersSpfDelay() {
        return this.ipv4TimersSpfDelay;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv4TimersSpfDelayVariable() {
        return this.ipv4TimersSpfDelayVariable;
    }
    /**
     * @return Set initial hold time between consecutive SPF calculations
     * 
     */
    public Integer ipv4TimersSpfInitialHold() {
        return this.ipv4TimersSpfInitialHold;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv4TimersSpfInitialHoldVariable() {
        return this.ipv4TimersSpfInitialHoldVariable;
    }
    /**
     * @return Set maximum hold time between consecutive SPF calculations
     * 
     */
    public Integer ipv4TimersSpfMaxHold() {
        return this.ipv4TimersSpfMaxHold;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv4TimersSpfMaxHoldVariable() {
        return this.ipv4TimersSpfMaxHoldVariable;
    }
    /**
     * @return Configure OSPF area
     * 
     */
    public List<GetCiscoOspfv3FeatureTemplateIpv6Area> ipv6Areas() {
        return this.ipv6Areas;
    }
    /**
     * @return Set reference bandwidth method to assign OSPF cost
     * 
     */
    public Integer ipv6AutoCostReferenceBandwidth() {
        return this.ipv6AutoCostReferenceBandwidth;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv6AutoCostReferenceBandwidthVariable() {
        return this.ipv6AutoCostReferenceBandwidthVariable;
    }
    /**
     * @return Calculate summary route cost based on RFC 1583
     * 
     */
    public Boolean ipv6CompatibleRfc1583() {
        return this.ipv6CompatibleRfc1583;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv6CompatibleRfc1583Variable() {
        return this.ipv6CompatibleRfc1583Variable;
    }
    /**
     * @return Distribute default external route into OSPF
     * 
     */
    public Boolean ipv6DefaultInformationOriginate() {
        return this.ipv6DefaultInformationOriginate;
    }
    /**
     * @return Always advertise default route
     * 
     */
    public Boolean ipv6DefaultInformationOriginateAlways() {
        return this.ipv6DefaultInformationOriginateAlways;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv6DefaultInformationOriginateAlwaysVariable() {
        return this.ipv6DefaultInformationOriginateAlwaysVariable;
    }
    /**
     * @return Set metric used to generate default route \n\n
     * 
     */
    public Integer ipv6DefaultInformationOriginateMetric() {
        return this.ipv6DefaultInformationOriginateMetric;
    }
    /**
     * @return Set default route type
     * 
     */
    public String ipv6DefaultInformationOriginateMetricType() {
        return this.ipv6DefaultInformationOriginateMetricType;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv6DefaultInformationOriginateMetricTypeVariable() {
        return this.ipv6DefaultInformationOriginateMetricTypeVariable;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv6DefaultInformationOriginateMetricVariable() {
        return this.ipv6DefaultInformationOriginateMetricVariable;
    }
    /**
     * @return Distance
     * 
     */
    public Integer ipv6Distance() {
        return this.ipv6Distance;
    }
    /**
     * @return Set distance for external routes
     * 
     */
    public Integer ipv6DistanceExternal() {
        return this.ipv6DistanceExternal;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv6DistanceExternalVariable() {
        return this.ipv6DistanceExternalVariable;
    }
    /**
     * @return Set distance for inter-area routes
     * 
     */
    public Integer ipv6DistanceInterArea() {
        return this.ipv6DistanceInterArea;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv6DistanceInterAreaVariable() {
        return this.ipv6DistanceInterAreaVariable;
    }
    /**
     * @return Set distance for intra-area routes
     * 
     */
    public Integer ipv6DistanceIntraArea() {
        return this.ipv6DistanceIntraArea;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv6DistanceIntraAreaVariable() {
        return this.ipv6DistanceIntraAreaVariable;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv6DistanceVariable() {
        return this.ipv6DistanceVariable;
    }
    /**
     * @return Filter
     * 
     */
    public Boolean ipv6Filter() {
        return this.ipv6Filter;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv6FilterVariable() {
        return this.ipv6FilterVariable;
    }
    /**
     * @return Advertise own router LSA with infinite distance
     * 
     */
    public List<GetCiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsa> ipv6MaxMetricRouterLsas() {
        return this.ipv6MaxMetricRouterLsas;
    }
    /**
     * @return Name
     * 
     */
    public String ipv6PolicyName() {
        return this.ipv6PolicyName;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv6PolicyNameVariable() {
        return this.ipv6PolicyNameVariable;
    }
    /**
     * @return Redistribute routes
     * 
     */
    public List<GetCiscoOspfv3FeatureTemplateIpv6Redistribute> ipv6Redistributes() {
        return this.ipv6Redistributes;
    }
    /**
     * @return Set OSPF router ID to override system IP address
     * 
     */
    public String ipv6RouterId() {
        return this.ipv6RouterId;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv6RouterIdVariable() {
        return this.ipv6RouterIdVariable;
    }
    /**
     * @return Set delay from first change received until performing SPF calculation
     * 
     */
    public Integer ipv6TimersSpfDelay() {
        return this.ipv6TimersSpfDelay;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv6TimersSpfDelayVariable() {
        return this.ipv6TimersSpfDelayVariable;
    }
    /**
     * @return Set initial hold time between consecutive SPF calculations
     * 
     */
    public Integer ipv6TimersSpfInitialHold() {
        return this.ipv6TimersSpfInitialHold;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv6TimersSpfInitialHoldVariable() {
        return this.ipv6TimersSpfInitialHoldVariable;
    }
    /**
     * @return Set maximum hold time between consecutive SPF calculations
     * 
     */
    public Integer ipv6TimersSpfMaxHold() {
        return this.ipv6TimersSpfMaxHold;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv6TimersSpfMaxHoldVariable() {
        return this.ipv6TimersSpfMaxHoldVariable;
    }
    /**
     * @return The name of the feature template
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The template type
     * 
     */
    public String templateType() {
        return this.templateType;
    }
    /**
     * @return The version of the feature template
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCiscoOspfv3FeatureTemplateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private List<String> deviceTypes;
        private String id;
        private List<GetCiscoOspfv3FeatureTemplateIpv4Area> ipv4Areas;
        private Integer ipv4AutoCostReferenceBandwidth;
        private String ipv4AutoCostReferenceBandwidthVariable;
        private Boolean ipv4CompatibleRfc1583;
        private String ipv4CompatibleRfc1583Variable;
        private Boolean ipv4DefaultInformationOriginate;
        private Boolean ipv4DefaultInformationOriginateAlways;
        private String ipv4DefaultInformationOriginateAlwaysVariable;
        private Integer ipv4DefaultInformationOriginateMetric;
        private String ipv4DefaultInformationOriginateMetricType;
        private String ipv4DefaultInformationOriginateMetricTypeVariable;
        private String ipv4DefaultInformationOriginateMetricVariable;
        private Integer ipv4Distance;
        private Integer ipv4DistanceExternal;
        private String ipv4DistanceExternalVariable;
        private Integer ipv4DistanceInterArea;
        private String ipv4DistanceInterAreaVariable;
        private Integer ipv4DistanceIntraArea;
        private String ipv4DistanceIntraAreaVariable;
        private String ipv4DistanceVariable;
        private Boolean ipv4Filter;
        private String ipv4FilterVariable;
        private List<GetCiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsa> ipv4MaxMetricRouterLsas;
        private String ipv4PolicyName;
        private String ipv4PolicyNameVariable;
        private List<GetCiscoOspfv3FeatureTemplateIpv4Redistribute> ipv4Redistributes;
        private String ipv4RouterId;
        private String ipv4RouterIdVariable;
        private Integer ipv4TimersSpfDelay;
        private String ipv4TimersSpfDelayVariable;
        private Integer ipv4TimersSpfInitialHold;
        private String ipv4TimersSpfInitialHoldVariable;
        private Integer ipv4TimersSpfMaxHold;
        private String ipv4TimersSpfMaxHoldVariable;
        private List<GetCiscoOspfv3FeatureTemplateIpv6Area> ipv6Areas;
        private Integer ipv6AutoCostReferenceBandwidth;
        private String ipv6AutoCostReferenceBandwidthVariable;
        private Boolean ipv6CompatibleRfc1583;
        private String ipv6CompatibleRfc1583Variable;
        private Boolean ipv6DefaultInformationOriginate;
        private Boolean ipv6DefaultInformationOriginateAlways;
        private String ipv6DefaultInformationOriginateAlwaysVariable;
        private Integer ipv6DefaultInformationOriginateMetric;
        private String ipv6DefaultInformationOriginateMetricType;
        private String ipv6DefaultInformationOriginateMetricTypeVariable;
        private String ipv6DefaultInformationOriginateMetricVariable;
        private Integer ipv6Distance;
        private Integer ipv6DistanceExternal;
        private String ipv6DistanceExternalVariable;
        private Integer ipv6DistanceInterArea;
        private String ipv6DistanceInterAreaVariable;
        private Integer ipv6DistanceIntraArea;
        private String ipv6DistanceIntraAreaVariable;
        private String ipv6DistanceVariable;
        private Boolean ipv6Filter;
        private String ipv6FilterVariable;
        private List<GetCiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsa> ipv6MaxMetricRouterLsas;
        private String ipv6PolicyName;
        private String ipv6PolicyNameVariable;
        private List<GetCiscoOspfv3FeatureTemplateIpv6Redistribute> ipv6Redistributes;
        private String ipv6RouterId;
        private String ipv6RouterIdVariable;
        private Integer ipv6TimersSpfDelay;
        private String ipv6TimersSpfDelayVariable;
        private Integer ipv6TimersSpfInitialHold;
        private String ipv6TimersSpfInitialHoldVariable;
        private Integer ipv6TimersSpfMaxHold;
        private String ipv6TimersSpfMaxHoldVariable;
        private String name;
        private String templateType;
        private Integer version;
        public Builder() {}
        public Builder(GetCiscoOspfv3FeatureTemplateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.deviceTypes = defaults.deviceTypes;
    	      this.id = defaults.id;
    	      this.ipv4Areas = defaults.ipv4Areas;
    	      this.ipv4AutoCostReferenceBandwidth = defaults.ipv4AutoCostReferenceBandwidth;
    	      this.ipv4AutoCostReferenceBandwidthVariable = defaults.ipv4AutoCostReferenceBandwidthVariable;
    	      this.ipv4CompatibleRfc1583 = defaults.ipv4CompatibleRfc1583;
    	      this.ipv4CompatibleRfc1583Variable = defaults.ipv4CompatibleRfc1583Variable;
    	      this.ipv4DefaultInformationOriginate = defaults.ipv4DefaultInformationOriginate;
    	      this.ipv4DefaultInformationOriginateAlways = defaults.ipv4DefaultInformationOriginateAlways;
    	      this.ipv4DefaultInformationOriginateAlwaysVariable = defaults.ipv4DefaultInformationOriginateAlwaysVariable;
    	      this.ipv4DefaultInformationOriginateMetric = defaults.ipv4DefaultInformationOriginateMetric;
    	      this.ipv4DefaultInformationOriginateMetricType = defaults.ipv4DefaultInformationOriginateMetricType;
    	      this.ipv4DefaultInformationOriginateMetricTypeVariable = defaults.ipv4DefaultInformationOriginateMetricTypeVariable;
    	      this.ipv4DefaultInformationOriginateMetricVariable = defaults.ipv4DefaultInformationOriginateMetricVariable;
    	      this.ipv4Distance = defaults.ipv4Distance;
    	      this.ipv4DistanceExternal = defaults.ipv4DistanceExternal;
    	      this.ipv4DistanceExternalVariable = defaults.ipv4DistanceExternalVariable;
    	      this.ipv4DistanceInterArea = defaults.ipv4DistanceInterArea;
    	      this.ipv4DistanceInterAreaVariable = defaults.ipv4DistanceInterAreaVariable;
    	      this.ipv4DistanceIntraArea = defaults.ipv4DistanceIntraArea;
    	      this.ipv4DistanceIntraAreaVariable = defaults.ipv4DistanceIntraAreaVariable;
    	      this.ipv4DistanceVariable = defaults.ipv4DistanceVariable;
    	      this.ipv4Filter = defaults.ipv4Filter;
    	      this.ipv4FilterVariable = defaults.ipv4FilterVariable;
    	      this.ipv4MaxMetricRouterLsas = defaults.ipv4MaxMetricRouterLsas;
    	      this.ipv4PolicyName = defaults.ipv4PolicyName;
    	      this.ipv4PolicyNameVariable = defaults.ipv4PolicyNameVariable;
    	      this.ipv4Redistributes = defaults.ipv4Redistributes;
    	      this.ipv4RouterId = defaults.ipv4RouterId;
    	      this.ipv4RouterIdVariable = defaults.ipv4RouterIdVariable;
    	      this.ipv4TimersSpfDelay = defaults.ipv4TimersSpfDelay;
    	      this.ipv4TimersSpfDelayVariable = defaults.ipv4TimersSpfDelayVariable;
    	      this.ipv4TimersSpfInitialHold = defaults.ipv4TimersSpfInitialHold;
    	      this.ipv4TimersSpfInitialHoldVariable = defaults.ipv4TimersSpfInitialHoldVariable;
    	      this.ipv4TimersSpfMaxHold = defaults.ipv4TimersSpfMaxHold;
    	      this.ipv4TimersSpfMaxHoldVariable = defaults.ipv4TimersSpfMaxHoldVariable;
    	      this.ipv6Areas = defaults.ipv6Areas;
    	      this.ipv6AutoCostReferenceBandwidth = defaults.ipv6AutoCostReferenceBandwidth;
    	      this.ipv6AutoCostReferenceBandwidthVariable = defaults.ipv6AutoCostReferenceBandwidthVariable;
    	      this.ipv6CompatibleRfc1583 = defaults.ipv6CompatibleRfc1583;
    	      this.ipv6CompatibleRfc1583Variable = defaults.ipv6CompatibleRfc1583Variable;
    	      this.ipv6DefaultInformationOriginate = defaults.ipv6DefaultInformationOriginate;
    	      this.ipv6DefaultInformationOriginateAlways = defaults.ipv6DefaultInformationOriginateAlways;
    	      this.ipv6DefaultInformationOriginateAlwaysVariable = defaults.ipv6DefaultInformationOriginateAlwaysVariable;
    	      this.ipv6DefaultInformationOriginateMetric = defaults.ipv6DefaultInformationOriginateMetric;
    	      this.ipv6DefaultInformationOriginateMetricType = defaults.ipv6DefaultInformationOriginateMetricType;
    	      this.ipv6DefaultInformationOriginateMetricTypeVariable = defaults.ipv6DefaultInformationOriginateMetricTypeVariable;
    	      this.ipv6DefaultInformationOriginateMetricVariable = defaults.ipv6DefaultInformationOriginateMetricVariable;
    	      this.ipv6Distance = defaults.ipv6Distance;
    	      this.ipv6DistanceExternal = defaults.ipv6DistanceExternal;
    	      this.ipv6DistanceExternalVariable = defaults.ipv6DistanceExternalVariable;
    	      this.ipv6DistanceInterArea = defaults.ipv6DistanceInterArea;
    	      this.ipv6DistanceInterAreaVariable = defaults.ipv6DistanceInterAreaVariable;
    	      this.ipv6DistanceIntraArea = defaults.ipv6DistanceIntraArea;
    	      this.ipv6DistanceIntraAreaVariable = defaults.ipv6DistanceIntraAreaVariable;
    	      this.ipv6DistanceVariable = defaults.ipv6DistanceVariable;
    	      this.ipv6Filter = defaults.ipv6Filter;
    	      this.ipv6FilterVariable = defaults.ipv6FilterVariable;
    	      this.ipv6MaxMetricRouterLsas = defaults.ipv6MaxMetricRouterLsas;
    	      this.ipv6PolicyName = defaults.ipv6PolicyName;
    	      this.ipv6PolicyNameVariable = defaults.ipv6PolicyNameVariable;
    	      this.ipv6Redistributes = defaults.ipv6Redistributes;
    	      this.ipv6RouterId = defaults.ipv6RouterId;
    	      this.ipv6RouterIdVariable = defaults.ipv6RouterIdVariable;
    	      this.ipv6TimersSpfDelay = defaults.ipv6TimersSpfDelay;
    	      this.ipv6TimersSpfDelayVariable = defaults.ipv6TimersSpfDelayVariable;
    	      this.ipv6TimersSpfInitialHold = defaults.ipv6TimersSpfInitialHold;
    	      this.ipv6TimersSpfInitialHoldVariable = defaults.ipv6TimersSpfInitialHoldVariable;
    	      this.ipv6TimersSpfMaxHold = defaults.ipv6TimersSpfMaxHold;
    	      this.ipv6TimersSpfMaxHoldVariable = defaults.ipv6TimersSpfMaxHoldVariable;
    	      this.name = defaults.name;
    	      this.templateType = defaults.templateType;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder deviceTypes(List<String> deviceTypes) {
            if (deviceTypes == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "deviceTypes");
            }
            this.deviceTypes = deviceTypes;
            return this;
        }
        public Builder deviceTypes(String... deviceTypes) {
            return deviceTypes(List.of(deviceTypes));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4Areas(List<GetCiscoOspfv3FeatureTemplateIpv4Area> ipv4Areas) {
            if (ipv4Areas == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4Areas");
            }
            this.ipv4Areas = ipv4Areas;
            return this;
        }
        public Builder ipv4Areas(GetCiscoOspfv3FeatureTemplateIpv4Area... ipv4Areas) {
            return ipv4Areas(List.of(ipv4Areas));
        }
        @CustomType.Setter
        public Builder ipv4AutoCostReferenceBandwidth(Integer ipv4AutoCostReferenceBandwidth) {
            if (ipv4AutoCostReferenceBandwidth == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4AutoCostReferenceBandwidth");
            }
            this.ipv4AutoCostReferenceBandwidth = ipv4AutoCostReferenceBandwidth;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4AutoCostReferenceBandwidthVariable(String ipv4AutoCostReferenceBandwidthVariable) {
            if (ipv4AutoCostReferenceBandwidthVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4AutoCostReferenceBandwidthVariable");
            }
            this.ipv4AutoCostReferenceBandwidthVariable = ipv4AutoCostReferenceBandwidthVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4CompatibleRfc1583(Boolean ipv4CompatibleRfc1583) {
            if (ipv4CompatibleRfc1583 == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4CompatibleRfc1583");
            }
            this.ipv4CompatibleRfc1583 = ipv4CompatibleRfc1583;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4CompatibleRfc1583Variable(String ipv4CompatibleRfc1583Variable) {
            if (ipv4CompatibleRfc1583Variable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4CompatibleRfc1583Variable");
            }
            this.ipv4CompatibleRfc1583Variable = ipv4CompatibleRfc1583Variable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4DefaultInformationOriginate(Boolean ipv4DefaultInformationOriginate) {
            if (ipv4DefaultInformationOriginate == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4DefaultInformationOriginate");
            }
            this.ipv4DefaultInformationOriginate = ipv4DefaultInformationOriginate;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4DefaultInformationOriginateAlways(Boolean ipv4DefaultInformationOriginateAlways) {
            if (ipv4DefaultInformationOriginateAlways == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4DefaultInformationOriginateAlways");
            }
            this.ipv4DefaultInformationOriginateAlways = ipv4DefaultInformationOriginateAlways;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4DefaultInformationOriginateAlwaysVariable(String ipv4DefaultInformationOriginateAlwaysVariable) {
            if (ipv4DefaultInformationOriginateAlwaysVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4DefaultInformationOriginateAlwaysVariable");
            }
            this.ipv4DefaultInformationOriginateAlwaysVariable = ipv4DefaultInformationOriginateAlwaysVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4DefaultInformationOriginateMetric(Integer ipv4DefaultInformationOriginateMetric) {
            if (ipv4DefaultInformationOriginateMetric == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4DefaultInformationOriginateMetric");
            }
            this.ipv4DefaultInformationOriginateMetric = ipv4DefaultInformationOriginateMetric;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4DefaultInformationOriginateMetricType(String ipv4DefaultInformationOriginateMetricType) {
            if (ipv4DefaultInformationOriginateMetricType == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4DefaultInformationOriginateMetricType");
            }
            this.ipv4DefaultInformationOriginateMetricType = ipv4DefaultInformationOriginateMetricType;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4DefaultInformationOriginateMetricTypeVariable(String ipv4DefaultInformationOriginateMetricTypeVariable) {
            if (ipv4DefaultInformationOriginateMetricTypeVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4DefaultInformationOriginateMetricTypeVariable");
            }
            this.ipv4DefaultInformationOriginateMetricTypeVariable = ipv4DefaultInformationOriginateMetricTypeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4DefaultInformationOriginateMetricVariable(String ipv4DefaultInformationOriginateMetricVariable) {
            if (ipv4DefaultInformationOriginateMetricVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4DefaultInformationOriginateMetricVariable");
            }
            this.ipv4DefaultInformationOriginateMetricVariable = ipv4DefaultInformationOriginateMetricVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4Distance(Integer ipv4Distance) {
            if (ipv4Distance == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4Distance");
            }
            this.ipv4Distance = ipv4Distance;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4DistanceExternal(Integer ipv4DistanceExternal) {
            if (ipv4DistanceExternal == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4DistanceExternal");
            }
            this.ipv4DistanceExternal = ipv4DistanceExternal;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4DistanceExternalVariable(String ipv4DistanceExternalVariable) {
            if (ipv4DistanceExternalVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4DistanceExternalVariable");
            }
            this.ipv4DistanceExternalVariable = ipv4DistanceExternalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4DistanceInterArea(Integer ipv4DistanceInterArea) {
            if (ipv4DistanceInterArea == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4DistanceInterArea");
            }
            this.ipv4DistanceInterArea = ipv4DistanceInterArea;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4DistanceInterAreaVariable(String ipv4DistanceInterAreaVariable) {
            if (ipv4DistanceInterAreaVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4DistanceInterAreaVariable");
            }
            this.ipv4DistanceInterAreaVariable = ipv4DistanceInterAreaVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4DistanceIntraArea(Integer ipv4DistanceIntraArea) {
            if (ipv4DistanceIntraArea == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4DistanceIntraArea");
            }
            this.ipv4DistanceIntraArea = ipv4DistanceIntraArea;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4DistanceIntraAreaVariable(String ipv4DistanceIntraAreaVariable) {
            if (ipv4DistanceIntraAreaVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4DistanceIntraAreaVariable");
            }
            this.ipv4DistanceIntraAreaVariable = ipv4DistanceIntraAreaVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4DistanceVariable(String ipv4DistanceVariable) {
            if (ipv4DistanceVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4DistanceVariable");
            }
            this.ipv4DistanceVariable = ipv4DistanceVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4Filter(Boolean ipv4Filter) {
            if (ipv4Filter == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4Filter");
            }
            this.ipv4Filter = ipv4Filter;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4FilterVariable(String ipv4FilterVariable) {
            if (ipv4FilterVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4FilterVariable");
            }
            this.ipv4FilterVariable = ipv4FilterVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4MaxMetricRouterLsas(List<GetCiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsa> ipv4MaxMetricRouterLsas) {
            if (ipv4MaxMetricRouterLsas == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4MaxMetricRouterLsas");
            }
            this.ipv4MaxMetricRouterLsas = ipv4MaxMetricRouterLsas;
            return this;
        }
        public Builder ipv4MaxMetricRouterLsas(GetCiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsa... ipv4MaxMetricRouterLsas) {
            return ipv4MaxMetricRouterLsas(List.of(ipv4MaxMetricRouterLsas));
        }
        @CustomType.Setter
        public Builder ipv4PolicyName(String ipv4PolicyName) {
            if (ipv4PolicyName == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4PolicyName");
            }
            this.ipv4PolicyName = ipv4PolicyName;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4PolicyNameVariable(String ipv4PolicyNameVariable) {
            if (ipv4PolicyNameVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4PolicyNameVariable");
            }
            this.ipv4PolicyNameVariable = ipv4PolicyNameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4Redistributes(List<GetCiscoOspfv3FeatureTemplateIpv4Redistribute> ipv4Redistributes) {
            if (ipv4Redistributes == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4Redistributes");
            }
            this.ipv4Redistributes = ipv4Redistributes;
            return this;
        }
        public Builder ipv4Redistributes(GetCiscoOspfv3FeatureTemplateIpv4Redistribute... ipv4Redistributes) {
            return ipv4Redistributes(List.of(ipv4Redistributes));
        }
        @CustomType.Setter
        public Builder ipv4RouterId(String ipv4RouterId) {
            if (ipv4RouterId == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4RouterId");
            }
            this.ipv4RouterId = ipv4RouterId;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4RouterIdVariable(String ipv4RouterIdVariable) {
            if (ipv4RouterIdVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4RouterIdVariable");
            }
            this.ipv4RouterIdVariable = ipv4RouterIdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4TimersSpfDelay(Integer ipv4TimersSpfDelay) {
            if (ipv4TimersSpfDelay == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4TimersSpfDelay");
            }
            this.ipv4TimersSpfDelay = ipv4TimersSpfDelay;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4TimersSpfDelayVariable(String ipv4TimersSpfDelayVariable) {
            if (ipv4TimersSpfDelayVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4TimersSpfDelayVariable");
            }
            this.ipv4TimersSpfDelayVariable = ipv4TimersSpfDelayVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4TimersSpfInitialHold(Integer ipv4TimersSpfInitialHold) {
            if (ipv4TimersSpfInitialHold == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4TimersSpfInitialHold");
            }
            this.ipv4TimersSpfInitialHold = ipv4TimersSpfInitialHold;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4TimersSpfInitialHoldVariable(String ipv4TimersSpfInitialHoldVariable) {
            if (ipv4TimersSpfInitialHoldVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4TimersSpfInitialHoldVariable");
            }
            this.ipv4TimersSpfInitialHoldVariable = ipv4TimersSpfInitialHoldVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4TimersSpfMaxHold(Integer ipv4TimersSpfMaxHold) {
            if (ipv4TimersSpfMaxHold == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4TimersSpfMaxHold");
            }
            this.ipv4TimersSpfMaxHold = ipv4TimersSpfMaxHold;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4TimersSpfMaxHoldVariable(String ipv4TimersSpfMaxHoldVariable) {
            if (ipv4TimersSpfMaxHoldVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv4TimersSpfMaxHoldVariable");
            }
            this.ipv4TimersSpfMaxHoldVariable = ipv4TimersSpfMaxHoldVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Areas(List<GetCiscoOspfv3FeatureTemplateIpv6Area> ipv6Areas) {
            if (ipv6Areas == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6Areas");
            }
            this.ipv6Areas = ipv6Areas;
            return this;
        }
        public Builder ipv6Areas(GetCiscoOspfv3FeatureTemplateIpv6Area... ipv6Areas) {
            return ipv6Areas(List.of(ipv6Areas));
        }
        @CustomType.Setter
        public Builder ipv6AutoCostReferenceBandwidth(Integer ipv6AutoCostReferenceBandwidth) {
            if (ipv6AutoCostReferenceBandwidth == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6AutoCostReferenceBandwidth");
            }
            this.ipv6AutoCostReferenceBandwidth = ipv6AutoCostReferenceBandwidth;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6AutoCostReferenceBandwidthVariable(String ipv6AutoCostReferenceBandwidthVariable) {
            if (ipv6AutoCostReferenceBandwidthVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6AutoCostReferenceBandwidthVariable");
            }
            this.ipv6AutoCostReferenceBandwidthVariable = ipv6AutoCostReferenceBandwidthVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6CompatibleRfc1583(Boolean ipv6CompatibleRfc1583) {
            if (ipv6CompatibleRfc1583 == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6CompatibleRfc1583");
            }
            this.ipv6CompatibleRfc1583 = ipv6CompatibleRfc1583;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6CompatibleRfc1583Variable(String ipv6CompatibleRfc1583Variable) {
            if (ipv6CompatibleRfc1583Variable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6CompatibleRfc1583Variable");
            }
            this.ipv6CompatibleRfc1583Variable = ipv6CompatibleRfc1583Variable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6DefaultInformationOriginate(Boolean ipv6DefaultInformationOriginate) {
            if (ipv6DefaultInformationOriginate == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6DefaultInformationOriginate");
            }
            this.ipv6DefaultInformationOriginate = ipv6DefaultInformationOriginate;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6DefaultInformationOriginateAlways(Boolean ipv6DefaultInformationOriginateAlways) {
            if (ipv6DefaultInformationOriginateAlways == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6DefaultInformationOriginateAlways");
            }
            this.ipv6DefaultInformationOriginateAlways = ipv6DefaultInformationOriginateAlways;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6DefaultInformationOriginateAlwaysVariable(String ipv6DefaultInformationOriginateAlwaysVariable) {
            if (ipv6DefaultInformationOriginateAlwaysVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6DefaultInformationOriginateAlwaysVariable");
            }
            this.ipv6DefaultInformationOriginateAlwaysVariable = ipv6DefaultInformationOriginateAlwaysVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6DefaultInformationOriginateMetric(Integer ipv6DefaultInformationOriginateMetric) {
            if (ipv6DefaultInformationOriginateMetric == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6DefaultInformationOriginateMetric");
            }
            this.ipv6DefaultInformationOriginateMetric = ipv6DefaultInformationOriginateMetric;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6DefaultInformationOriginateMetricType(String ipv6DefaultInformationOriginateMetricType) {
            if (ipv6DefaultInformationOriginateMetricType == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6DefaultInformationOriginateMetricType");
            }
            this.ipv6DefaultInformationOriginateMetricType = ipv6DefaultInformationOriginateMetricType;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6DefaultInformationOriginateMetricTypeVariable(String ipv6DefaultInformationOriginateMetricTypeVariable) {
            if (ipv6DefaultInformationOriginateMetricTypeVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6DefaultInformationOriginateMetricTypeVariable");
            }
            this.ipv6DefaultInformationOriginateMetricTypeVariable = ipv6DefaultInformationOriginateMetricTypeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6DefaultInformationOriginateMetricVariable(String ipv6DefaultInformationOriginateMetricVariable) {
            if (ipv6DefaultInformationOriginateMetricVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6DefaultInformationOriginateMetricVariable");
            }
            this.ipv6DefaultInformationOriginateMetricVariable = ipv6DefaultInformationOriginateMetricVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Distance(Integer ipv6Distance) {
            if (ipv6Distance == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6Distance");
            }
            this.ipv6Distance = ipv6Distance;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6DistanceExternal(Integer ipv6DistanceExternal) {
            if (ipv6DistanceExternal == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6DistanceExternal");
            }
            this.ipv6DistanceExternal = ipv6DistanceExternal;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6DistanceExternalVariable(String ipv6DistanceExternalVariable) {
            if (ipv6DistanceExternalVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6DistanceExternalVariable");
            }
            this.ipv6DistanceExternalVariable = ipv6DistanceExternalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6DistanceInterArea(Integer ipv6DistanceInterArea) {
            if (ipv6DistanceInterArea == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6DistanceInterArea");
            }
            this.ipv6DistanceInterArea = ipv6DistanceInterArea;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6DistanceInterAreaVariable(String ipv6DistanceInterAreaVariable) {
            if (ipv6DistanceInterAreaVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6DistanceInterAreaVariable");
            }
            this.ipv6DistanceInterAreaVariable = ipv6DistanceInterAreaVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6DistanceIntraArea(Integer ipv6DistanceIntraArea) {
            if (ipv6DistanceIntraArea == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6DistanceIntraArea");
            }
            this.ipv6DistanceIntraArea = ipv6DistanceIntraArea;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6DistanceIntraAreaVariable(String ipv6DistanceIntraAreaVariable) {
            if (ipv6DistanceIntraAreaVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6DistanceIntraAreaVariable");
            }
            this.ipv6DistanceIntraAreaVariable = ipv6DistanceIntraAreaVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6DistanceVariable(String ipv6DistanceVariable) {
            if (ipv6DistanceVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6DistanceVariable");
            }
            this.ipv6DistanceVariable = ipv6DistanceVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Filter(Boolean ipv6Filter) {
            if (ipv6Filter == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6Filter");
            }
            this.ipv6Filter = ipv6Filter;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6FilterVariable(String ipv6FilterVariable) {
            if (ipv6FilterVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6FilterVariable");
            }
            this.ipv6FilterVariable = ipv6FilterVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6MaxMetricRouterLsas(List<GetCiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsa> ipv6MaxMetricRouterLsas) {
            if (ipv6MaxMetricRouterLsas == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6MaxMetricRouterLsas");
            }
            this.ipv6MaxMetricRouterLsas = ipv6MaxMetricRouterLsas;
            return this;
        }
        public Builder ipv6MaxMetricRouterLsas(GetCiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsa... ipv6MaxMetricRouterLsas) {
            return ipv6MaxMetricRouterLsas(List.of(ipv6MaxMetricRouterLsas));
        }
        @CustomType.Setter
        public Builder ipv6PolicyName(String ipv6PolicyName) {
            if (ipv6PolicyName == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6PolicyName");
            }
            this.ipv6PolicyName = ipv6PolicyName;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6PolicyNameVariable(String ipv6PolicyNameVariable) {
            if (ipv6PolicyNameVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6PolicyNameVariable");
            }
            this.ipv6PolicyNameVariable = ipv6PolicyNameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Redistributes(List<GetCiscoOspfv3FeatureTemplateIpv6Redistribute> ipv6Redistributes) {
            if (ipv6Redistributes == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6Redistributes");
            }
            this.ipv6Redistributes = ipv6Redistributes;
            return this;
        }
        public Builder ipv6Redistributes(GetCiscoOspfv3FeatureTemplateIpv6Redistribute... ipv6Redistributes) {
            return ipv6Redistributes(List.of(ipv6Redistributes));
        }
        @CustomType.Setter
        public Builder ipv6RouterId(String ipv6RouterId) {
            if (ipv6RouterId == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6RouterId");
            }
            this.ipv6RouterId = ipv6RouterId;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6RouterIdVariable(String ipv6RouterIdVariable) {
            if (ipv6RouterIdVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6RouterIdVariable");
            }
            this.ipv6RouterIdVariable = ipv6RouterIdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6TimersSpfDelay(Integer ipv6TimersSpfDelay) {
            if (ipv6TimersSpfDelay == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6TimersSpfDelay");
            }
            this.ipv6TimersSpfDelay = ipv6TimersSpfDelay;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6TimersSpfDelayVariable(String ipv6TimersSpfDelayVariable) {
            if (ipv6TimersSpfDelayVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6TimersSpfDelayVariable");
            }
            this.ipv6TimersSpfDelayVariable = ipv6TimersSpfDelayVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6TimersSpfInitialHold(Integer ipv6TimersSpfInitialHold) {
            if (ipv6TimersSpfInitialHold == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6TimersSpfInitialHold");
            }
            this.ipv6TimersSpfInitialHold = ipv6TimersSpfInitialHold;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6TimersSpfInitialHoldVariable(String ipv6TimersSpfInitialHoldVariable) {
            if (ipv6TimersSpfInitialHoldVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6TimersSpfInitialHoldVariable");
            }
            this.ipv6TimersSpfInitialHoldVariable = ipv6TimersSpfInitialHoldVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6TimersSpfMaxHold(Integer ipv6TimersSpfMaxHold) {
            if (ipv6TimersSpfMaxHold == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6TimersSpfMaxHold");
            }
            this.ipv6TimersSpfMaxHold = ipv6TimersSpfMaxHold;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6TimersSpfMaxHoldVariable(String ipv6TimersSpfMaxHoldVariable) {
            if (ipv6TimersSpfMaxHoldVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "ipv6TimersSpfMaxHoldVariable");
            }
            this.ipv6TimersSpfMaxHoldVariable = ipv6TimersSpfMaxHoldVariable;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder templateType(String templateType) {
            if (templateType == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "templateType");
            }
            this.templateType = templateType;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetCiscoOspfv3FeatureTemplateResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetCiscoOspfv3FeatureTemplateResult build() {
            final var _resultValue = new GetCiscoOspfv3FeatureTemplateResult();
            _resultValue.description = description;
            _resultValue.deviceTypes = deviceTypes;
            _resultValue.id = id;
            _resultValue.ipv4Areas = ipv4Areas;
            _resultValue.ipv4AutoCostReferenceBandwidth = ipv4AutoCostReferenceBandwidth;
            _resultValue.ipv4AutoCostReferenceBandwidthVariable = ipv4AutoCostReferenceBandwidthVariable;
            _resultValue.ipv4CompatibleRfc1583 = ipv4CompatibleRfc1583;
            _resultValue.ipv4CompatibleRfc1583Variable = ipv4CompatibleRfc1583Variable;
            _resultValue.ipv4DefaultInformationOriginate = ipv4DefaultInformationOriginate;
            _resultValue.ipv4DefaultInformationOriginateAlways = ipv4DefaultInformationOriginateAlways;
            _resultValue.ipv4DefaultInformationOriginateAlwaysVariable = ipv4DefaultInformationOriginateAlwaysVariable;
            _resultValue.ipv4DefaultInformationOriginateMetric = ipv4DefaultInformationOriginateMetric;
            _resultValue.ipv4DefaultInformationOriginateMetricType = ipv4DefaultInformationOriginateMetricType;
            _resultValue.ipv4DefaultInformationOriginateMetricTypeVariable = ipv4DefaultInformationOriginateMetricTypeVariable;
            _resultValue.ipv4DefaultInformationOriginateMetricVariable = ipv4DefaultInformationOriginateMetricVariable;
            _resultValue.ipv4Distance = ipv4Distance;
            _resultValue.ipv4DistanceExternal = ipv4DistanceExternal;
            _resultValue.ipv4DistanceExternalVariable = ipv4DistanceExternalVariable;
            _resultValue.ipv4DistanceInterArea = ipv4DistanceInterArea;
            _resultValue.ipv4DistanceInterAreaVariable = ipv4DistanceInterAreaVariable;
            _resultValue.ipv4DistanceIntraArea = ipv4DistanceIntraArea;
            _resultValue.ipv4DistanceIntraAreaVariable = ipv4DistanceIntraAreaVariable;
            _resultValue.ipv4DistanceVariable = ipv4DistanceVariable;
            _resultValue.ipv4Filter = ipv4Filter;
            _resultValue.ipv4FilterVariable = ipv4FilterVariable;
            _resultValue.ipv4MaxMetricRouterLsas = ipv4MaxMetricRouterLsas;
            _resultValue.ipv4PolicyName = ipv4PolicyName;
            _resultValue.ipv4PolicyNameVariable = ipv4PolicyNameVariable;
            _resultValue.ipv4Redistributes = ipv4Redistributes;
            _resultValue.ipv4RouterId = ipv4RouterId;
            _resultValue.ipv4RouterIdVariable = ipv4RouterIdVariable;
            _resultValue.ipv4TimersSpfDelay = ipv4TimersSpfDelay;
            _resultValue.ipv4TimersSpfDelayVariable = ipv4TimersSpfDelayVariable;
            _resultValue.ipv4TimersSpfInitialHold = ipv4TimersSpfInitialHold;
            _resultValue.ipv4TimersSpfInitialHoldVariable = ipv4TimersSpfInitialHoldVariable;
            _resultValue.ipv4TimersSpfMaxHold = ipv4TimersSpfMaxHold;
            _resultValue.ipv4TimersSpfMaxHoldVariable = ipv4TimersSpfMaxHoldVariable;
            _resultValue.ipv6Areas = ipv6Areas;
            _resultValue.ipv6AutoCostReferenceBandwidth = ipv6AutoCostReferenceBandwidth;
            _resultValue.ipv6AutoCostReferenceBandwidthVariable = ipv6AutoCostReferenceBandwidthVariable;
            _resultValue.ipv6CompatibleRfc1583 = ipv6CompatibleRfc1583;
            _resultValue.ipv6CompatibleRfc1583Variable = ipv6CompatibleRfc1583Variable;
            _resultValue.ipv6DefaultInformationOriginate = ipv6DefaultInformationOriginate;
            _resultValue.ipv6DefaultInformationOriginateAlways = ipv6DefaultInformationOriginateAlways;
            _resultValue.ipv6DefaultInformationOriginateAlwaysVariable = ipv6DefaultInformationOriginateAlwaysVariable;
            _resultValue.ipv6DefaultInformationOriginateMetric = ipv6DefaultInformationOriginateMetric;
            _resultValue.ipv6DefaultInformationOriginateMetricType = ipv6DefaultInformationOriginateMetricType;
            _resultValue.ipv6DefaultInformationOriginateMetricTypeVariable = ipv6DefaultInformationOriginateMetricTypeVariable;
            _resultValue.ipv6DefaultInformationOriginateMetricVariable = ipv6DefaultInformationOriginateMetricVariable;
            _resultValue.ipv6Distance = ipv6Distance;
            _resultValue.ipv6DistanceExternal = ipv6DistanceExternal;
            _resultValue.ipv6DistanceExternalVariable = ipv6DistanceExternalVariable;
            _resultValue.ipv6DistanceInterArea = ipv6DistanceInterArea;
            _resultValue.ipv6DistanceInterAreaVariable = ipv6DistanceInterAreaVariable;
            _resultValue.ipv6DistanceIntraArea = ipv6DistanceIntraArea;
            _resultValue.ipv6DistanceIntraAreaVariable = ipv6DistanceIntraAreaVariable;
            _resultValue.ipv6DistanceVariable = ipv6DistanceVariable;
            _resultValue.ipv6Filter = ipv6Filter;
            _resultValue.ipv6FilterVariable = ipv6FilterVariable;
            _resultValue.ipv6MaxMetricRouterLsas = ipv6MaxMetricRouterLsas;
            _resultValue.ipv6PolicyName = ipv6PolicyName;
            _resultValue.ipv6PolicyNameVariable = ipv6PolicyNameVariable;
            _resultValue.ipv6Redistributes = ipv6Redistributes;
            _resultValue.ipv6RouterId = ipv6RouterId;
            _resultValue.ipv6RouterIdVariable = ipv6RouterIdVariable;
            _resultValue.ipv6TimersSpfDelay = ipv6TimersSpfDelay;
            _resultValue.ipv6TimersSpfDelayVariable = ipv6TimersSpfDelayVariable;
            _resultValue.ipv6TimersSpfInitialHold = ipv6TimersSpfInitialHold;
            _resultValue.ipv6TimersSpfInitialHoldVariable = ipv6TimersSpfInitialHoldVariable;
            _resultValue.ipv6TimersSpfMaxHold = ipv6TimersSpfMaxHold;
            _resultValue.ipv6TimersSpfMaxHoldVariable = ipv6TimersSpfMaxHoldVariable;
            _resultValue.name = name;
            _resultValue.templateType = templateType;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
