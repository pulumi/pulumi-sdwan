// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetObjectGroupPolicyDefinitionResult {
    /**
     * @return Data FQDN prefix list ID
     * 
     */
    private String dataFqdnPrefixListId;
    /**
     * @return Data FQDN prefix list version
     * 
     */
    private Integer dataFqdnPrefixListVersion;
    /**
     * @return Data IPv4 prefix list ID
     * 
     */
    private String dataIpv4PrefixListId;
    /**
     * @return Data IPv4 prefix list version
     * 
     */
    private Integer dataIpv4PrefixListVersion;
    /**
     * @return The description of the policy definition
     * 
     */
    private String description;
    /**
     * @return Fully qualified domain name
     * 
     */
    private String fqdn;
    /**
     * @return Geo location
     * 
     */
    private String geoLocation;
    /**
     * @return Geo location list ID
     * 
     */
    private String geoLocationListId;
    /**
     * @return Geo location list version
     * 
     */
    private Integer geoLocationListVersion;
    /**
     * @return The id of the object
     * 
     */
    private String id;
    /**
     * @return IPv4 prefix
     * 
     */
    private String ipv4Prefix;
    /**
     * @return IPv4 prefix variable name
     * 
     */
    private String ipv4PrefixVariable;
    /**
     * @return The name of the policy definition
     * 
     */
    private String name;
    /**
     * @return Port or range of ports
     * 
     */
    private String port;
    /**
     * @return Port list ID
     * 
     */
    private String portListId;
    /**
     * @return Port list version
     * 
     */
    private Integer portListVersion;
    /**
     * @return The version of the object
     * 
     */
    private Integer version;

    private GetObjectGroupPolicyDefinitionResult() {}
    /**
     * @return Data FQDN prefix list ID
     * 
     */
    public String dataFqdnPrefixListId() {
        return this.dataFqdnPrefixListId;
    }
    /**
     * @return Data FQDN prefix list version
     * 
     */
    public Integer dataFqdnPrefixListVersion() {
        return this.dataFqdnPrefixListVersion;
    }
    /**
     * @return Data IPv4 prefix list ID
     * 
     */
    public String dataIpv4PrefixListId() {
        return this.dataIpv4PrefixListId;
    }
    /**
     * @return Data IPv4 prefix list version
     * 
     */
    public Integer dataIpv4PrefixListVersion() {
        return this.dataIpv4PrefixListVersion;
    }
    /**
     * @return The description of the policy definition
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Fully qualified domain name
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return Geo location
     * 
     */
    public String geoLocation() {
        return this.geoLocation;
    }
    /**
     * @return Geo location list ID
     * 
     */
    public String geoLocationListId() {
        return this.geoLocationListId;
    }
    /**
     * @return Geo location list version
     * 
     */
    public Integer geoLocationListVersion() {
        return this.geoLocationListVersion;
    }
    /**
     * @return The id of the object
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return IPv4 prefix
     * 
     */
    public String ipv4Prefix() {
        return this.ipv4Prefix;
    }
    /**
     * @return IPv4 prefix variable name
     * 
     */
    public String ipv4PrefixVariable() {
        return this.ipv4PrefixVariable;
    }
    /**
     * @return The name of the policy definition
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Port or range of ports
     * 
     */
    public String port() {
        return this.port;
    }
    /**
     * @return Port list ID
     * 
     */
    public String portListId() {
        return this.portListId;
    }
    /**
     * @return Port list version
     * 
     */
    public Integer portListVersion() {
        return this.portListVersion;
    }
    /**
     * @return The version of the object
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetObjectGroupPolicyDefinitionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dataFqdnPrefixListId;
        private Integer dataFqdnPrefixListVersion;
        private String dataIpv4PrefixListId;
        private Integer dataIpv4PrefixListVersion;
        private String description;
        private String fqdn;
        private String geoLocation;
        private String geoLocationListId;
        private Integer geoLocationListVersion;
        private String id;
        private String ipv4Prefix;
        private String ipv4PrefixVariable;
        private String name;
        private String port;
        private String portListId;
        private Integer portListVersion;
        private Integer version;
        public Builder() {}
        public Builder(GetObjectGroupPolicyDefinitionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataFqdnPrefixListId = defaults.dataFqdnPrefixListId;
    	      this.dataFqdnPrefixListVersion = defaults.dataFqdnPrefixListVersion;
    	      this.dataIpv4PrefixListId = defaults.dataIpv4PrefixListId;
    	      this.dataIpv4PrefixListVersion = defaults.dataIpv4PrefixListVersion;
    	      this.description = defaults.description;
    	      this.fqdn = defaults.fqdn;
    	      this.geoLocation = defaults.geoLocation;
    	      this.geoLocationListId = defaults.geoLocationListId;
    	      this.geoLocationListVersion = defaults.geoLocationListVersion;
    	      this.id = defaults.id;
    	      this.ipv4Prefix = defaults.ipv4Prefix;
    	      this.ipv4PrefixVariable = defaults.ipv4PrefixVariable;
    	      this.name = defaults.name;
    	      this.port = defaults.port;
    	      this.portListId = defaults.portListId;
    	      this.portListVersion = defaults.portListVersion;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder dataFqdnPrefixListId(String dataFqdnPrefixListId) {
            if (dataFqdnPrefixListId == null) {
              throw new MissingRequiredPropertyException("GetObjectGroupPolicyDefinitionResult", "dataFqdnPrefixListId");
            }
            this.dataFqdnPrefixListId = dataFqdnPrefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder dataFqdnPrefixListVersion(Integer dataFqdnPrefixListVersion) {
            if (dataFqdnPrefixListVersion == null) {
              throw new MissingRequiredPropertyException("GetObjectGroupPolicyDefinitionResult", "dataFqdnPrefixListVersion");
            }
            this.dataFqdnPrefixListVersion = dataFqdnPrefixListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder dataIpv4PrefixListId(String dataIpv4PrefixListId) {
            if (dataIpv4PrefixListId == null) {
              throw new MissingRequiredPropertyException("GetObjectGroupPolicyDefinitionResult", "dataIpv4PrefixListId");
            }
            this.dataIpv4PrefixListId = dataIpv4PrefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder dataIpv4PrefixListVersion(Integer dataIpv4PrefixListVersion) {
            if (dataIpv4PrefixListVersion == null) {
              throw new MissingRequiredPropertyException("GetObjectGroupPolicyDefinitionResult", "dataIpv4PrefixListVersion");
            }
            this.dataIpv4PrefixListVersion = dataIpv4PrefixListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetObjectGroupPolicyDefinitionResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder fqdn(String fqdn) {
            if (fqdn == null) {
              throw new MissingRequiredPropertyException("GetObjectGroupPolicyDefinitionResult", "fqdn");
            }
            this.fqdn = fqdn;
            return this;
        }
        @CustomType.Setter
        public Builder geoLocation(String geoLocation) {
            if (geoLocation == null) {
              throw new MissingRequiredPropertyException("GetObjectGroupPolicyDefinitionResult", "geoLocation");
            }
            this.geoLocation = geoLocation;
            return this;
        }
        @CustomType.Setter
        public Builder geoLocationListId(String geoLocationListId) {
            if (geoLocationListId == null) {
              throw new MissingRequiredPropertyException("GetObjectGroupPolicyDefinitionResult", "geoLocationListId");
            }
            this.geoLocationListId = geoLocationListId;
            return this;
        }
        @CustomType.Setter
        public Builder geoLocationListVersion(Integer geoLocationListVersion) {
            if (geoLocationListVersion == null) {
              throw new MissingRequiredPropertyException("GetObjectGroupPolicyDefinitionResult", "geoLocationListVersion");
            }
            this.geoLocationListVersion = geoLocationListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetObjectGroupPolicyDefinitionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4Prefix(String ipv4Prefix) {
            if (ipv4Prefix == null) {
              throw new MissingRequiredPropertyException("GetObjectGroupPolicyDefinitionResult", "ipv4Prefix");
            }
            this.ipv4Prefix = ipv4Prefix;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4PrefixVariable(String ipv4PrefixVariable) {
            if (ipv4PrefixVariable == null) {
              throw new MissingRequiredPropertyException("GetObjectGroupPolicyDefinitionResult", "ipv4PrefixVariable");
            }
            this.ipv4PrefixVariable = ipv4PrefixVariable;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetObjectGroupPolicyDefinitionResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder port(String port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetObjectGroupPolicyDefinitionResult", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder portListId(String portListId) {
            if (portListId == null) {
              throw new MissingRequiredPropertyException("GetObjectGroupPolicyDefinitionResult", "portListId");
            }
            this.portListId = portListId;
            return this;
        }
        @CustomType.Setter
        public Builder portListVersion(Integer portListVersion) {
            if (portListVersion == null) {
              throw new MissingRequiredPropertyException("GetObjectGroupPolicyDefinitionResult", "portListVersion");
            }
            this.portListVersion = portListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetObjectGroupPolicyDefinitionResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetObjectGroupPolicyDefinitionResult build() {
            final var _resultValue = new GetObjectGroupPolicyDefinitionResult();
            _resultValue.dataFqdnPrefixListId = dataFqdnPrefixListId;
            _resultValue.dataFqdnPrefixListVersion = dataFqdnPrefixListVersion;
            _resultValue.dataIpv4PrefixListId = dataIpv4PrefixListId;
            _resultValue.dataIpv4PrefixListVersion = dataIpv4PrefixListVersion;
            _resultValue.description = description;
            _resultValue.fqdn = fqdn;
            _resultValue.geoLocation = geoLocation;
            _resultValue.geoLocationListId = geoLocationListId;
            _resultValue.geoLocationListVersion = geoLocationListVersion;
            _resultValue.id = id;
            _resultValue.ipv4Prefix = ipv4Prefix;
            _resultValue.ipv4PrefixVariable = ipv4PrefixVariable;
            _resultValue.name = name;
            _resultValue.port = port;
            _resultValue.portListId = portListId;
            _resultValue.portListVersion = portListVersion;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
