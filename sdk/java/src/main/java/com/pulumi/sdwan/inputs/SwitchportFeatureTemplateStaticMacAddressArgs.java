// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SwitchportFeatureTemplateStaticMacAddressArgs extends com.pulumi.resources.ResourceArgs {

    public static final SwitchportFeatureTemplateStaticMacAddressArgs Empty = new SwitchportFeatureTemplateStaticMacAddressArgs();

    /**
     * Interface name: GigabitEthernet0/&lt;&gt;/&lt;&gt;
     * 
     */
    @Import(name="ifName")
    private @Nullable Output<String> ifName;

    /**
     * @return Interface name: GigabitEthernet0/&lt;&gt;/&lt;&gt;
     * 
     */
    public Optional<Output<String>> ifName() {
        return Optional.ofNullable(this.ifName);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ifNameVariable")
    private @Nullable Output<String> ifNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ifNameVariable() {
        return Optional.ofNullable(this.ifNameVariable);
    }

    /**
     * Set MAC address in xxxx.xxxx.xxxx format
     * 
     */
    @Import(name="macAddress")
    private @Nullable Output<String> macAddress;

    /**
     * @return Set MAC address in xxxx.xxxx.xxxx format
     * 
     */
    public Optional<Output<String>> macAddress() {
        return Optional.ofNullable(this.macAddress);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="macAddressVariable")
    private @Nullable Output<String> macAddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> macAddressVariable() {
        return Optional.ofNullable(this.macAddressVariable);
    }

    /**
     * Indicates if list item is considered optional.
     * 
     */
    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    /**
     * Configure VLAN ID used with the mac and interface
     *   - Range: `1`-`4094`
     * 
     */
    @Import(name="vlan")
    private @Nullable Output<Integer> vlan;

    /**
     * @return Configure VLAN ID used with the mac and interface
     *   - Range: `1`-`4094`
     * 
     */
    public Optional<Output<Integer>> vlan() {
        return Optional.ofNullable(this.vlan);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="vlanVariable")
    private @Nullable Output<String> vlanVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> vlanVariable() {
        return Optional.ofNullable(this.vlanVariable);
    }

    private SwitchportFeatureTemplateStaticMacAddressArgs() {}

    private SwitchportFeatureTemplateStaticMacAddressArgs(SwitchportFeatureTemplateStaticMacAddressArgs $) {
        this.ifName = $.ifName;
        this.ifNameVariable = $.ifNameVariable;
        this.macAddress = $.macAddress;
        this.macAddressVariable = $.macAddressVariable;
        this.optional = $.optional;
        this.vlan = $.vlan;
        this.vlanVariable = $.vlanVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SwitchportFeatureTemplateStaticMacAddressArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SwitchportFeatureTemplateStaticMacAddressArgs $;

        public Builder() {
            $ = new SwitchportFeatureTemplateStaticMacAddressArgs();
        }

        public Builder(SwitchportFeatureTemplateStaticMacAddressArgs defaults) {
            $ = new SwitchportFeatureTemplateStaticMacAddressArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ifName Interface name: GigabitEthernet0/&lt;&gt;/&lt;&gt;
         * 
         * @return builder
         * 
         */
        public Builder ifName(@Nullable Output<String> ifName) {
            $.ifName = ifName;
            return this;
        }

        /**
         * @param ifName Interface name: GigabitEthernet0/&lt;&gt;/&lt;&gt;
         * 
         * @return builder
         * 
         */
        public Builder ifName(String ifName) {
            return ifName(Output.of(ifName));
        }

        /**
         * @param ifNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ifNameVariable(@Nullable Output<String> ifNameVariable) {
            $.ifNameVariable = ifNameVariable;
            return this;
        }

        /**
         * @param ifNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ifNameVariable(String ifNameVariable) {
            return ifNameVariable(Output.of(ifNameVariable));
        }

        /**
         * @param macAddress Set MAC address in xxxx.xxxx.xxxx format
         * 
         * @return builder
         * 
         */
        public Builder macAddress(@Nullable Output<String> macAddress) {
            $.macAddress = macAddress;
            return this;
        }

        /**
         * @param macAddress Set MAC address in xxxx.xxxx.xxxx format
         * 
         * @return builder
         * 
         */
        public Builder macAddress(String macAddress) {
            return macAddress(Output.of(macAddress));
        }

        /**
         * @param macAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder macAddressVariable(@Nullable Output<String> macAddressVariable) {
            $.macAddressVariable = macAddressVariable;
            return this;
        }

        /**
         * @param macAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder macAddressVariable(String macAddressVariable) {
            return macAddressVariable(Output.of(macAddressVariable));
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        /**
         * @param vlan Configure VLAN ID used with the mac and interface
         *   - Range: `1`-`4094`
         * 
         * @return builder
         * 
         */
        public Builder vlan(@Nullable Output<Integer> vlan) {
            $.vlan = vlan;
            return this;
        }

        /**
         * @param vlan Configure VLAN ID used with the mac and interface
         *   - Range: `1`-`4094`
         * 
         * @return builder
         * 
         */
        public Builder vlan(Integer vlan) {
            return vlan(Output.of(vlan));
        }

        /**
         * @param vlanVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vlanVariable(@Nullable Output<String> vlanVariable) {
            $.vlanVariable = vlanVariable;
            return this;
        }

        /**
         * @param vlanVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vlanVariable(String vlanVariable) {
            return vlanVariable(Output.of(vlanVariable));
        }

        public SwitchportFeatureTemplateStaticMacAddressArgs build() {
            return $;
        }
    }

}
