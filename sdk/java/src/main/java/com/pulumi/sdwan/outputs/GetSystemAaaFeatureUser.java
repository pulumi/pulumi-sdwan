// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetSystemAaaFeatureUserPublicKey;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSystemAaaFeatureUser {
    /**
     * @return Set the username
     * 
     */
    private String name;
    /**
     * @return Variable name
     * 
     */
    private String nameVariable;
    /**
     * @return Set the user password
     * 
     */
    private String password;
    /**
     * @return Variable name
     * 
     */
    private String passwordVariable;
    /**
     * @return Set Privilege Level for this user
     * 
     */
    private String privilege;
    /**
     * @return Variable name
     * 
     */
    private String privilegeVariable;
    /**
     * @return List of RSA public-keys per user
     * 
     */
    private List<GetSystemAaaFeatureUserPublicKey> publicKeys;

    private GetSystemAaaFeatureUser() {}
    /**
     * @return Set the username
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Variable name
     * 
     */
    public String nameVariable() {
        return this.nameVariable;
    }
    /**
     * @return Set the user password
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return Variable name
     * 
     */
    public String passwordVariable() {
        return this.passwordVariable;
    }
    /**
     * @return Set Privilege Level for this user
     * 
     */
    public String privilege() {
        return this.privilege;
    }
    /**
     * @return Variable name
     * 
     */
    public String privilegeVariable() {
        return this.privilegeVariable;
    }
    /**
     * @return List of RSA public-keys per user
     * 
     */
    public List<GetSystemAaaFeatureUserPublicKey> publicKeys() {
        return this.publicKeys;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSystemAaaFeatureUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private String nameVariable;
        private String password;
        private String passwordVariable;
        private String privilege;
        private String privilegeVariable;
        private List<GetSystemAaaFeatureUserPublicKey> publicKeys;
        public Builder() {}
        public Builder(GetSystemAaaFeatureUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.nameVariable = defaults.nameVariable;
    	      this.password = defaults.password;
    	      this.passwordVariable = defaults.passwordVariable;
    	      this.privilege = defaults.privilege;
    	      this.privilegeVariable = defaults.privilegeVariable;
    	      this.publicKeys = defaults.publicKeys;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureUser", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nameVariable(String nameVariable) {
            if (nameVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureUser", "nameVariable");
            }
            this.nameVariable = nameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureUser", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder passwordVariable(String passwordVariable) {
            if (passwordVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureUser", "passwordVariable");
            }
            this.passwordVariable = passwordVariable;
            return this;
        }
        @CustomType.Setter
        public Builder privilege(String privilege) {
            if (privilege == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureUser", "privilege");
            }
            this.privilege = privilege;
            return this;
        }
        @CustomType.Setter
        public Builder privilegeVariable(String privilegeVariable) {
            if (privilegeVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureUser", "privilegeVariable");
            }
            this.privilegeVariable = privilegeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder publicKeys(List<GetSystemAaaFeatureUserPublicKey> publicKeys) {
            if (publicKeys == null) {
              throw new MissingRequiredPropertyException("GetSystemAaaFeatureUser", "publicKeys");
            }
            this.publicKeys = publicKeys;
            return this;
        }
        public Builder publicKeys(GetSystemAaaFeatureUserPublicKey... publicKeys) {
            return publicKeys(List.of(publicKeys));
        }
        public GetSystemAaaFeatureUser build() {
            final var _resultValue = new GetSystemAaaFeatureUser();
            _resultValue.name = name;
            _resultValue.nameVariable = nameVariable;
            _resultValue.password = password;
            _resultValue.passwordVariable = passwordVariable;
            _resultValue.privilege = privilege;
            _resultValue.privilegeVariable = privilegeVariable;
            _resultValue.publicKeys = publicKeys;
            return _resultValue;
        }
    }
}
