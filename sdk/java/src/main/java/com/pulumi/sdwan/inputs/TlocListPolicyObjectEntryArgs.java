// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TlocListPolicyObjectEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final TlocListPolicyObjectEntryArgs Empty = new TlocListPolicyObjectEntryArgs();

    /**
     * Color
     *   - Choices: `default`, `3g`, `biz-internet`, `blue`, `bronze`, `custom1`, `custom2`, `custom3`, `gold`, `green`, `lte`, `metro-ethernet`, `mpls`, `private1`, `private2`, `private3`, `private4`, `private5`, `private6`, `public-internet`, `red`, `silver`
     * 
     */
    @Import(name="color", required=true)
    private Output<String> color;

    /**
     * @return Color
     *   - Choices: `default`, `3g`, `biz-internet`, `blue`, `bronze`, `custom1`, `custom2`, `custom3`, `gold`, `green`, `lte`, `metro-ethernet`, `mpls`, `private1`, `private2`, `private3`, `private4`, `private5`, `private6`, `public-internet`, `red`, `silver`
     * 
     */
    public Output<String> color() {
        return this.color;
    }

    /**
     * Encapsulation
     *   - Choices: `ipsec`, `gre`
     * 
     */
    @Import(name="encapsulation", required=true)
    private Output<String> encapsulation;

    /**
     * @return Encapsulation
     *   - Choices: `ipsec`, `gre`
     * 
     */
    public Output<String> encapsulation() {
        return this.encapsulation;
    }

    /**
     * Preference
     *   - Range: `0`-`4294967295`
     * 
     */
    @Import(name="preference")
    private @Nullable Output<Integer> preference;

    /**
     * @return Preference
     *   - Range: `0`-`4294967295`
     * 
     */
    public Optional<Output<Integer>> preference() {
        return Optional.ofNullable(this.preference);
    }

    /**
     * TLOC IP
     * 
     */
    @Import(name="tlocIp", required=true)
    private Output<String> tlocIp;

    /**
     * @return TLOC IP
     * 
     */
    public Output<String> tlocIp() {
        return this.tlocIp;
    }

    private TlocListPolicyObjectEntryArgs() {}

    private TlocListPolicyObjectEntryArgs(TlocListPolicyObjectEntryArgs $) {
        this.color = $.color;
        this.encapsulation = $.encapsulation;
        this.preference = $.preference;
        this.tlocIp = $.tlocIp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TlocListPolicyObjectEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TlocListPolicyObjectEntryArgs $;

        public Builder() {
            $ = new TlocListPolicyObjectEntryArgs();
        }

        public Builder(TlocListPolicyObjectEntryArgs defaults) {
            $ = new TlocListPolicyObjectEntryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param color Color
         *   - Choices: `default`, `3g`, `biz-internet`, `blue`, `bronze`, `custom1`, `custom2`, `custom3`, `gold`, `green`, `lte`, `metro-ethernet`, `mpls`, `private1`, `private2`, `private3`, `private4`, `private5`, `private6`, `public-internet`, `red`, `silver`
         * 
         * @return builder
         * 
         */
        public Builder color(Output<String> color) {
            $.color = color;
            return this;
        }

        /**
         * @param color Color
         *   - Choices: `default`, `3g`, `biz-internet`, `blue`, `bronze`, `custom1`, `custom2`, `custom3`, `gold`, `green`, `lte`, `metro-ethernet`, `mpls`, `private1`, `private2`, `private3`, `private4`, `private5`, `private6`, `public-internet`, `red`, `silver`
         * 
         * @return builder
         * 
         */
        public Builder color(String color) {
            return color(Output.of(color));
        }

        /**
         * @param encapsulation Encapsulation
         *   - Choices: `ipsec`, `gre`
         * 
         * @return builder
         * 
         */
        public Builder encapsulation(Output<String> encapsulation) {
            $.encapsulation = encapsulation;
            return this;
        }

        /**
         * @param encapsulation Encapsulation
         *   - Choices: `ipsec`, `gre`
         * 
         * @return builder
         * 
         */
        public Builder encapsulation(String encapsulation) {
            return encapsulation(Output.of(encapsulation));
        }

        /**
         * @param preference Preference
         *   - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder preference(@Nullable Output<Integer> preference) {
            $.preference = preference;
            return this;
        }

        /**
         * @param preference Preference
         *   - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder preference(Integer preference) {
            return preference(Output.of(preference));
        }

        /**
         * @param tlocIp TLOC IP
         * 
         * @return builder
         * 
         */
        public Builder tlocIp(Output<String> tlocIp) {
            $.tlocIp = tlocIp;
            return this;
        }

        /**
         * @param tlocIp TLOC IP
         * 
         * @return builder
         * 
         */
        public Builder tlocIp(String tlocIp) {
            return tlocIp(Output.of(tlocIp));
        }

        public TlocListPolicyObjectEntryArgs build() {
            if ($.color == null) {
                throw new MissingRequiredPropertyException("TlocListPolicyObjectEntryArgs", "color");
            }
            if ($.encapsulation == null) {
                throw new MissingRequiredPropertyException("TlocListPolicyObjectEntryArgs", "encapsulation");
            }
            if ($.tlocIp == null) {
                throw new MissingRequiredPropertyException("TlocListPolicyObjectEntryArgs", "tlocIp");
            }
            return $;
        }
    }

}
