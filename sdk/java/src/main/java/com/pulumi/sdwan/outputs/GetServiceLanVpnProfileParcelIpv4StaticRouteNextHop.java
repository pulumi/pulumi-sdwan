// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServiceLanVpnProfileParcelIpv4StaticRouteNextHop {
    /**
     * @return Address
     * 
     */
    private String address;
    /**
     * @return Variable name
     * 
     */
    private String addressVariable;
    /**
     * @return Administrative distance
     * 
     */
    private Integer administrativeDistance;
    /**
     * @return Variable name
     * 
     */
    private String administrativeDistanceVariable;

    private GetServiceLanVpnProfileParcelIpv4StaticRouteNextHop() {}
    /**
     * @return Address
     * 
     */
    public String address() {
        return this.address;
    }
    /**
     * @return Variable name
     * 
     */
    public String addressVariable() {
        return this.addressVariable;
    }
    /**
     * @return Administrative distance
     * 
     */
    public Integer administrativeDistance() {
        return this.administrativeDistance;
    }
    /**
     * @return Variable name
     * 
     */
    public String administrativeDistanceVariable() {
        return this.administrativeDistanceVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceLanVpnProfileParcelIpv4StaticRouteNextHop defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String address;
        private String addressVariable;
        private Integer administrativeDistance;
        private String administrativeDistanceVariable;
        public Builder() {}
        public Builder(GetServiceLanVpnProfileParcelIpv4StaticRouteNextHop defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.addressVariable = defaults.addressVariable;
    	      this.administrativeDistance = defaults.administrativeDistance;
    	      this.administrativeDistanceVariable = defaults.administrativeDistanceVariable;
        }

        @CustomType.Setter
        public Builder address(String address) {
            if (address == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnProfileParcelIpv4StaticRouteNextHop", "address");
            }
            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder addressVariable(String addressVariable) {
            if (addressVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnProfileParcelIpv4StaticRouteNextHop", "addressVariable");
            }
            this.addressVariable = addressVariable;
            return this;
        }
        @CustomType.Setter
        public Builder administrativeDistance(Integer administrativeDistance) {
            if (administrativeDistance == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnProfileParcelIpv4StaticRouteNextHop", "administrativeDistance");
            }
            this.administrativeDistance = administrativeDistance;
            return this;
        }
        @CustomType.Setter
        public Builder administrativeDistanceVariable(String administrativeDistanceVariable) {
            if (administrativeDistanceVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnProfileParcelIpv4StaticRouteNextHop", "administrativeDistanceVariable");
            }
            this.administrativeDistanceVariable = administrativeDistanceVariable;
            return this;
        }
        public GetServiceLanVpnProfileParcelIpv4StaticRouteNextHop build() {
            final var _resultValue = new GetServiceLanVpnProfileParcelIpv4StaticRouteNextHop();
            _resultValue.address = address;
            _resultValue.addressVariable = addressVariable;
            _resultValue.administrativeDistance = administrativeDistance;
            _resultValue.administrativeDistanceVariable = administrativeDistanceVariable;
            return _resultValue;
        }
    }
}
