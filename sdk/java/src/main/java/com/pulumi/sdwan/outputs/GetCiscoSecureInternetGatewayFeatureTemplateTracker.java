// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCiscoSecureInternetGatewayFeatureTemplateTracker {
    /**
     * @return API url of endpoint
     * 
     */
    private String endpointApiUrl;
    /**
     * @return Variable name
     * 
     */
    private String endpointApiUrlVariable;
    /**
     * @return Probe interval \n\n seconds
     * 
     */
    private Integer interval;
    /**
     * @return Variable name
     * 
     */
    private String intervalVariable;
    /**
     * @return Probe failure multiplier \n\n failed attempts
     * 
     */
    private Integer multiplier;
    /**
     * @return Variable name
     * 
     */
    private String multiplierVariable;
    /**
     * @return Tracker name
     * 
     */
    private String name;
    /**
     * @return Variable name
     * 
     */
    private String nameVariable;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private Boolean optional;
    /**
     * @return Probe Timeout threshold \n\n milliseconds
     * 
     */
    private Integer threshold;
    /**
     * @return Variable name
     * 
     */
    private String thresholdVariable;
    private String trackerType;

    private GetCiscoSecureInternetGatewayFeatureTemplateTracker() {}
    /**
     * @return API url of endpoint
     * 
     */
    public String endpointApiUrl() {
        return this.endpointApiUrl;
    }
    /**
     * @return Variable name
     * 
     */
    public String endpointApiUrlVariable() {
        return this.endpointApiUrlVariable;
    }
    /**
     * @return Probe interval \n\n seconds
     * 
     */
    public Integer interval() {
        return this.interval;
    }
    /**
     * @return Variable name
     * 
     */
    public String intervalVariable() {
        return this.intervalVariable;
    }
    /**
     * @return Probe failure multiplier \n\n failed attempts
     * 
     */
    public Integer multiplier() {
        return this.multiplier;
    }
    /**
     * @return Variable name
     * 
     */
    public String multiplierVariable() {
        return this.multiplierVariable;
    }
    /**
     * @return Tracker name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Variable name
     * 
     */
    public String nameVariable() {
        return this.nameVariable;
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Boolean optional() {
        return this.optional;
    }
    /**
     * @return Probe Timeout threshold \n\n milliseconds
     * 
     */
    public Integer threshold() {
        return this.threshold;
    }
    /**
     * @return Variable name
     * 
     */
    public String thresholdVariable() {
        return this.thresholdVariable;
    }
    public String trackerType() {
        return this.trackerType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCiscoSecureInternetGatewayFeatureTemplateTracker defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String endpointApiUrl;
        private String endpointApiUrlVariable;
        private Integer interval;
        private String intervalVariable;
        private Integer multiplier;
        private String multiplierVariable;
        private String name;
        private String nameVariable;
        private Boolean optional;
        private Integer threshold;
        private String thresholdVariable;
        private String trackerType;
        public Builder() {}
        public Builder(GetCiscoSecureInternetGatewayFeatureTemplateTracker defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpointApiUrl = defaults.endpointApiUrl;
    	      this.endpointApiUrlVariable = defaults.endpointApiUrlVariable;
    	      this.interval = defaults.interval;
    	      this.intervalVariable = defaults.intervalVariable;
    	      this.multiplier = defaults.multiplier;
    	      this.multiplierVariable = defaults.multiplierVariable;
    	      this.name = defaults.name;
    	      this.nameVariable = defaults.nameVariable;
    	      this.optional = defaults.optional;
    	      this.threshold = defaults.threshold;
    	      this.thresholdVariable = defaults.thresholdVariable;
    	      this.trackerType = defaults.trackerType;
        }

        @CustomType.Setter
        public Builder endpointApiUrl(String endpointApiUrl) {
            if (endpointApiUrl == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecureInternetGatewayFeatureTemplateTracker", "endpointApiUrl");
            }
            this.endpointApiUrl = endpointApiUrl;
            return this;
        }
        @CustomType.Setter
        public Builder endpointApiUrlVariable(String endpointApiUrlVariable) {
            if (endpointApiUrlVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecureInternetGatewayFeatureTemplateTracker", "endpointApiUrlVariable");
            }
            this.endpointApiUrlVariable = endpointApiUrlVariable;
            return this;
        }
        @CustomType.Setter
        public Builder interval(Integer interval) {
            if (interval == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecureInternetGatewayFeatureTemplateTracker", "interval");
            }
            this.interval = interval;
            return this;
        }
        @CustomType.Setter
        public Builder intervalVariable(String intervalVariable) {
            if (intervalVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecureInternetGatewayFeatureTemplateTracker", "intervalVariable");
            }
            this.intervalVariable = intervalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder multiplier(Integer multiplier) {
            if (multiplier == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecureInternetGatewayFeatureTemplateTracker", "multiplier");
            }
            this.multiplier = multiplier;
            return this;
        }
        @CustomType.Setter
        public Builder multiplierVariable(String multiplierVariable) {
            if (multiplierVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecureInternetGatewayFeatureTemplateTracker", "multiplierVariable");
            }
            this.multiplierVariable = multiplierVariable;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecureInternetGatewayFeatureTemplateTracker", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nameVariable(String nameVariable) {
            if (nameVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecureInternetGatewayFeatureTemplateTracker", "nameVariable");
            }
            this.nameVariable = nameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder optional(Boolean optional) {
            if (optional == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecureInternetGatewayFeatureTemplateTracker", "optional");
            }
            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder threshold(Integer threshold) {
            if (threshold == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecureInternetGatewayFeatureTemplateTracker", "threshold");
            }
            this.threshold = threshold;
            return this;
        }
        @CustomType.Setter
        public Builder thresholdVariable(String thresholdVariable) {
            if (thresholdVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecureInternetGatewayFeatureTemplateTracker", "thresholdVariable");
            }
            this.thresholdVariable = thresholdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder trackerType(String trackerType) {
            if (trackerType == null) {
              throw new MissingRequiredPropertyException("GetCiscoSecureInternetGatewayFeatureTemplateTracker", "trackerType");
            }
            this.trackerType = trackerType;
            return this;
        }
        public GetCiscoSecureInternetGatewayFeatureTemplateTracker build() {
            final var _resultValue = new GetCiscoSecureInternetGatewayFeatureTemplateTracker();
            _resultValue.endpointApiUrl = endpointApiUrl;
            _resultValue.endpointApiUrlVariable = endpointApiUrlVariable;
            _resultValue.interval = interval;
            _resultValue.intervalVariable = intervalVariable;
            _resultValue.multiplier = multiplier;
            _resultValue.multiplierVariable = multiplierVariable;
            _resultValue.name = name;
            _resultValue.nameVariable = nameVariable;
            _resultValue.optional = optional;
            _resultValue.threshold = threshold;
            _resultValue.thresholdVariable = thresholdVariable;
            _resultValue.trackerType = trackerType;
            return _resultValue;
        }
    }
}
