// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.TransportWanVpnFeatureArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.TransportWanVpnFeatureState;
import com.pulumi.sdwan.outputs.TransportWanVpnFeatureIpv4StaticRoute;
import com.pulumi.sdwan.outputs.TransportWanVpnFeatureIpv6StaticRoute;
import com.pulumi.sdwan.outputs.TransportWanVpnFeatureNat64V4Pool;
import com.pulumi.sdwan.outputs.TransportWanVpnFeatureNewHostMapping;
import com.pulumi.sdwan.outputs.TransportWanVpnFeatureService;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Transport WAN VPN Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * Expected import identifier with the format: &#34;transport_wan_vpn_feature_id,feature_profile_id&#34;
 * 
 * ```sh
 * $ pulumi import sdwan:index/transportWanVpnFeature:TransportWanVpnFeature example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/transportWanVpnFeature:TransportWanVpnFeature")
public class TransportWanVpnFeature extends com.pulumi.resources.CustomResource {
    /**
     * The description of the Feature
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Enhance ECMP Keying
     *   - Default value: `false`
     * 
     */
    @Export(name="enhanceEcmpKeying", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enhanceEcmpKeying;

    /**
     * @return Enhance ECMP Keying
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> enhanceEcmpKeying() {
        return Codegen.optional(this.enhanceEcmpKeying);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="enhanceEcmpKeyingVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> enhanceEcmpKeyingVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> enhanceEcmpKeyingVariable() {
        return Codegen.optional(this.enhanceEcmpKeyingVariable);
    }
    /**
     * Feature Profile ID
     * 
     */
    @Export(name="featureProfileId", refs={String.class}, tree="[0]")
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * IPv4 Static Route
     * 
     */
    @Export(name="ipv4StaticRoutes", refs={List.class,TransportWanVpnFeatureIpv4StaticRoute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TransportWanVpnFeatureIpv4StaticRoute>> ipv4StaticRoutes;

    /**
     * @return IPv4 Static Route
     * 
     */
    public Output<Optional<List<TransportWanVpnFeatureIpv4StaticRoute>>> ipv4StaticRoutes() {
        return Codegen.optional(this.ipv4StaticRoutes);
    }
    /**
     * IPv6 Static Route
     * 
     */
    @Export(name="ipv6StaticRoutes", refs={List.class,TransportWanVpnFeatureIpv6StaticRoute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TransportWanVpnFeatureIpv6StaticRoute>> ipv6StaticRoutes;

    /**
     * @return IPv6 Static Route
     * 
     */
    public Output<Optional<List<TransportWanVpnFeatureIpv6StaticRoute>>> ipv6StaticRoutes() {
        return Codegen.optional(this.ipv6StaticRoutes);
    }
    /**
     * The name of the Feature
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * NAT64 V4 Pool
     * 
     */
    @Export(name="nat64V4Pools", refs={List.class,TransportWanVpnFeatureNat64V4Pool.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TransportWanVpnFeatureNat64V4Pool>> nat64V4Pools;

    /**
     * @return NAT64 V4 Pool
     * 
     */
    public Output<Optional<List<TransportWanVpnFeatureNat64V4Pool>>> nat64V4Pools() {
        return Codegen.optional(this.nat64V4Pools);
    }
    @Export(name="newHostMappings", refs={List.class,TransportWanVpnFeatureNewHostMapping.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TransportWanVpnFeatureNewHostMapping>> newHostMappings;

    public Output<Optional<List<TransportWanVpnFeatureNewHostMapping>>> newHostMappings() {
        return Codegen.optional(this.newHostMappings);
    }
    /**
     * Primary DNS Address (IPv4)
     * 
     */
    @Export(name="primaryDnsAddressIpv4", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primaryDnsAddressIpv4;

    /**
     * @return Primary DNS Address (IPv4)
     * 
     */
    public Output<Optional<String>> primaryDnsAddressIpv4() {
        return Codegen.optional(this.primaryDnsAddressIpv4);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="primaryDnsAddressIpv4Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primaryDnsAddressIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> primaryDnsAddressIpv4Variable() {
        return Codegen.optional(this.primaryDnsAddressIpv4Variable);
    }
    /**
     * Primary DNS Address (IPv6)
     * 
     */
    @Export(name="primaryDnsAddressIpv6", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primaryDnsAddressIpv6;

    /**
     * @return Primary DNS Address (IPv6)
     * 
     */
    public Output<Optional<String>> primaryDnsAddressIpv6() {
        return Codegen.optional(this.primaryDnsAddressIpv6);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="primaryDnsAddressIpv6Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primaryDnsAddressIpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> primaryDnsAddressIpv6Variable() {
        return Codegen.optional(this.primaryDnsAddressIpv6Variable);
    }
    /**
     * Secondary DNS Address (IPv4)
     * 
     */
    @Export(name="secondaryDnsAddressIpv4", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryDnsAddressIpv4;

    /**
     * @return Secondary DNS Address (IPv4)
     * 
     */
    public Output<Optional<String>> secondaryDnsAddressIpv4() {
        return Codegen.optional(this.secondaryDnsAddressIpv4);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="secondaryDnsAddressIpv4Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryDnsAddressIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> secondaryDnsAddressIpv4Variable() {
        return Codegen.optional(this.secondaryDnsAddressIpv4Variable);
    }
    /**
     * Secondary DNS Address (IPv6)
     * 
     */
    @Export(name="secondaryDnsAddressIpv6", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryDnsAddressIpv6;

    /**
     * @return Secondary DNS Address (IPv6)
     * 
     */
    public Output<Optional<String>> secondaryDnsAddressIpv6() {
        return Codegen.optional(this.secondaryDnsAddressIpv6);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="secondaryDnsAddressIpv6Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryDnsAddressIpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> secondaryDnsAddressIpv6Variable() {
        return Codegen.optional(this.secondaryDnsAddressIpv6Variable);
    }
    /**
     * Service
     * 
     */
    @Export(name="services", refs={List.class,TransportWanVpnFeatureService.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TransportWanVpnFeatureService>> services;

    /**
     * @return Service
     * 
     */
    public Output<Optional<List<TransportWanVpnFeatureService>>> services() {
        return Codegen.optional(this.services);
    }
    /**
     * The version of the Feature
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the Feature
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }
    /**
     * VPN
     *   - Default value: `0`
     * 
     */
    @Export(name="vpn", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> vpn;

    /**
     * @return VPN
     *   - Default value: `0`
     * 
     */
    public Output<Optional<Integer>> vpn() {
        return Codegen.optional(this.vpn);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TransportWanVpnFeature(java.lang.String name) {
        this(name, TransportWanVpnFeatureArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TransportWanVpnFeature(java.lang.String name, TransportWanVpnFeatureArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TransportWanVpnFeature(java.lang.String name, TransportWanVpnFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/transportWanVpnFeature:TransportWanVpnFeature", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private TransportWanVpnFeature(java.lang.String name, Output<java.lang.String> id, @Nullable TransportWanVpnFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/transportWanVpnFeature:TransportWanVpnFeature", name, state, makeResourceOptions(options, id), false);
    }

    private static TransportWanVpnFeatureArgs makeArgs(TransportWanVpnFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TransportWanVpnFeatureArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TransportWanVpnFeature get(java.lang.String name, Output<java.lang.String> id, @Nullable TransportWanVpnFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TransportWanVpnFeature(name, id, state, options);
    }
}
