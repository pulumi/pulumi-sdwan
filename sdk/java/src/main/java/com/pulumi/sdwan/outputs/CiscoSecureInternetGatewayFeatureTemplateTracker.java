// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CiscoSecureInternetGatewayFeatureTemplateTracker {
    /**
     * @return API url of endpoint
     * 
     */
    private @Nullable String endpointApiUrl;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String endpointApiUrlVariable;
    /**
     * @return Probe interval &lt;10..600&gt; seconds
     *   - Range: `20`-`600`
     *   - Default value: `60`
     * 
     */
    private @Nullable Integer interval;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String intervalVariable;
    /**
     * @return Probe failure multiplier &lt;1..10&gt; failed attempts
     *   - Range: `1`-`10`
     *   - Default value: `3`
     * 
     */
    private @Nullable Integer multiplier;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String multiplierVariable;
    /**
     * @return Tracker name
     * 
     */
    private @Nullable String name;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String nameVariable;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private @Nullable Boolean optional;
    /**
     * @return Probe Timeout threshold &lt;100..1000&gt; milliseconds
     *   - Range: `100`-`1000`
     *   - Default value: `300`
     * 
     */
    private @Nullable Integer threshold;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String thresholdVariable;
    /**
     * @return - Choices: `SIG`
     *   - Default value: `  SIG `
     * 
     */
    private @Nullable String trackerType;

    private CiscoSecureInternetGatewayFeatureTemplateTracker() {}
    /**
     * @return API url of endpoint
     * 
     */
    public Optional<String> endpointApiUrl() {
        return Optional.ofNullable(this.endpointApiUrl);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> endpointApiUrlVariable() {
        return Optional.ofNullable(this.endpointApiUrlVariable);
    }
    /**
     * @return Probe interval &lt;10..600&gt; seconds
     *   - Range: `20`-`600`
     *   - Default value: `60`
     * 
     */
    public Optional<Integer> interval() {
        return Optional.ofNullable(this.interval);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> intervalVariable() {
        return Optional.ofNullable(this.intervalVariable);
    }
    /**
     * @return Probe failure multiplier &lt;1..10&gt; failed attempts
     *   - Range: `1`-`10`
     *   - Default value: `3`
     * 
     */
    public Optional<Integer> multiplier() {
        return Optional.ofNullable(this.multiplier);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> multiplierVariable() {
        return Optional.ofNullable(this.multiplierVariable);
    }
    /**
     * @return Tracker name
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> nameVariable() {
        return Optional.ofNullable(this.nameVariable);
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Boolean> optional() {
        return Optional.ofNullable(this.optional);
    }
    /**
     * @return Probe Timeout threshold &lt;100..1000&gt; milliseconds
     *   - Range: `100`-`1000`
     *   - Default value: `300`
     * 
     */
    public Optional<Integer> threshold() {
        return Optional.ofNullable(this.threshold);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> thresholdVariable() {
        return Optional.ofNullable(this.thresholdVariable);
    }
    /**
     * @return - Choices: `SIG`
     *   - Default value: `  SIG `
     * 
     */
    public Optional<String> trackerType() {
        return Optional.ofNullable(this.trackerType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CiscoSecureInternetGatewayFeatureTemplateTracker defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String endpointApiUrl;
        private @Nullable String endpointApiUrlVariable;
        private @Nullable Integer interval;
        private @Nullable String intervalVariable;
        private @Nullable Integer multiplier;
        private @Nullable String multiplierVariable;
        private @Nullable String name;
        private @Nullable String nameVariable;
        private @Nullable Boolean optional;
        private @Nullable Integer threshold;
        private @Nullable String thresholdVariable;
        private @Nullable String trackerType;
        public Builder() {}
        public Builder(CiscoSecureInternetGatewayFeatureTemplateTracker defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpointApiUrl = defaults.endpointApiUrl;
    	      this.endpointApiUrlVariable = defaults.endpointApiUrlVariable;
    	      this.interval = defaults.interval;
    	      this.intervalVariable = defaults.intervalVariable;
    	      this.multiplier = defaults.multiplier;
    	      this.multiplierVariable = defaults.multiplierVariable;
    	      this.name = defaults.name;
    	      this.nameVariable = defaults.nameVariable;
    	      this.optional = defaults.optional;
    	      this.threshold = defaults.threshold;
    	      this.thresholdVariable = defaults.thresholdVariable;
    	      this.trackerType = defaults.trackerType;
        }

        @CustomType.Setter
        public Builder endpointApiUrl(@Nullable String endpointApiUrl) {

            this.endpointApiUrl = endpointApiUrl;
            return this;
        }
        @CustomType.Setter
        public Builder endpointApiUrlVariable(@Nullable String endpointApiUrlVariable) {

            this.endpointApiUrlVariable = endpointApiUrlVariable;
            return this;
        }
        @CustomType.Setter
        public Builder interval(@Nullable Integer interval) {

            this.interval = interval;
            return this;
        }
        @CustomType.Setter
        public Builder intervalVariable(@Nullable String intervalVariable) {

            this.intervalVariable = intervalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder multiplier(@Nullable Integer multiplier) {

            this.multiplier = multiplier;
            return this;
        }
        @CustomType.Setter
        public Builder multiplierVariable(@Nullable String multiplierVariable) {

            this.multiplierVariable = multiplierVariable;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nameVariable(@Nullable String nameVariable) {

            this.nameVariable = nameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder optional(@Nullable Boolean optional) {

            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder threshold(@Nullable Integer threshold) {

            this.threshold = threshold;
            return this;
        }
        @CustomType.Setter
        public Builder thresholdVariable(@Nullable String thresholdVariable) {

            this.thresholdVariable = thresholdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder trackerType(@Nullable String trackerType) {

            this.trackerType = trackerType;
            return this;
        }
        public CiscoSecureInternetGatewayFeatureTemplateTracker build() {
            final var _resultValue = new CiscoSecureInternetGatewayFeatureTemplateTracker();
            _resultValue.endpointApiUrl = endpointApiUrl;
            _resultValue.endpointApiUrlVariable = endpointApiUrlVariable;
            _resultValue.interval = interval;
            _resultValue.intervalVariable = intervalVariable;
            _resultValue.multiplier = multiplier;
            _resultValue.multiplierVariable = multiplierVariable;
            _resultValue.name = name;
            _resultValue.nameVariable = nameVariable;
            _resultValue.optional = optional;
            _resultValue.threshold = threshold;
            _resultValue.thresholdVariable = thresholdVariable;
            _resultValue.trackerType = trackerType;
            return _resultValue;
        }
    }
}
