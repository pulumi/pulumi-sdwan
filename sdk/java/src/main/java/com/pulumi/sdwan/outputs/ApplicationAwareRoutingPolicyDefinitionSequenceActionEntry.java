// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.ApplicationAwareRoutingPolicyDefinitionSequenceActionEntrySlaClassParameter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationAwareRoutingPolicyDefinitionSequenceActionEntry {
    /**
     * @return Backup SLA preferred color (Single value or multiple values separated by spaces), Attribute conditional on `type` being equal to `backupSlaPreferredColor`
     * 
     */
    private @Nullable String backupSlaPreferredColor;
    /**
     * @return Cloud SLA, Attribute conditional on `type` being equal to `cloudSaas`
     * 
     */
    private @Nullable Boolean cloudSla;
    /**
     * @return Counter name, Attribute conditional on `type` being equal to `count`
     * 
     */
    private @Nullable String counter;
    /**
     * @return Enable logging, Attribute conditional on `type` being equal to `log`
     * 
     */
    private @Nullable Boolean log;
    /**
     * @return List of SLA class parameters, Attribute conditional on `type` being equal to `slaClass`
     * 
     */
    private @Nullable List<ApplicationAwareRoutingPolicyDefinitionSequenceActionEntrySlaClassParameter> slaClassParameters;
    /**
     * @return Type of action entry
     *   - Choices: `backupSlaPreferredColor`, `count`, `log`, `slaClass`, `cloudSaas`
     * 
     */
    private String type;

    private ApplicationAwareRoutingPolicyDefinitionSequenceActionEntry() {}
    /**
     * @return Backup SLA preferred color (Single value or multiple values separated by spaces), Attribute conditional on `type` being equal to `backupSlaPreferredColor`
     * 
     */
    public Optional<String> backupSlaPreferredColor() {
        return Optional.ofNullable(this.backupSlaPreferredColor);
    }
    /**
     * @return Cloud SLA, Attribute conditional on `type` being equal to `cloudSaas`
     * 
     */
    public Optional<Boolean> cloudSla() {
        return Optional.ofNullable(this.cloudSla);
    }
    /**
     * @return Counter name, Attribute conditional on `type` being equal to `count`
     * 
     */
    public Optional<String> counter() {
        return Optional.ofNullable(this.counter);
    }
    /**
     * @return Enable logging, Attribute conditional on `type` being equal to `log`
     * 
     */
    public Optional<Boolean> log() {
        return Optional.ofNullable(this.log);
    }
    /**
     * @return List of SLA class parameters, Attribute conditional on `type` being equal to `slaClass`
     * 
     */
    public List<ApplicationAwareRoutingPolicyDefinitionSequenceActionEntrySlaClassParameter> slaClassParameters() {
        return this.slaClassParameters == null ? List.of() : this.slaClassParameters;
    }
    /**
     * @return Type of action entry
     *   - Choices: `backupSlaPreferredColor`, `count`, `log`, `slaClass`, `cloudSaas`
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationAwareRoutingPolicyDefinitionSequenceActionEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String backupSlaPreferredColor;
        private @Nullable Boolean cloudSla;
        private @Nullable String counter;
        private @Nullable Boolean log;
        private @Nullable List<ApplicationAwareRoutingPolicyDefinitionSequenceActionEntrySlaClassParameter> slaClassParameters;
        private String type;
        public Builder() {}
        public Builder(ApplicationAwareRoutingPolicyDefinitionSequenceActionEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupSlaPreferredColor = defaults.backupSlaPreferredColor;
    	      this.cloudSla = defaults.cloudSla;
    	      this.counter = defaults.counter;
    	      this.log = defaults.log;
    	      this.slaClassParameters = defaults.slaClassParameters;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder backupSlaPreferredColor(@Nullable String backupSlaPreferredColor) {

            this.backupSlaPreferredColor = backupSlaPreferredColor;
            return this;
        }
        @CustomType.Setter
        public Builder cloudSla(@Nullable Boolean cloudSla) {

            this.cloudSla = cloudSla;
            return this;
        }
        @CustomType.Setter
        public Builder counter(@Nullable String counter) {

            this.counter = counter;
            return this;
        }
        @CustomType.Setter
        public Builder log(@Nullable Boolean log) {

            this.log = log;
            return this;
        }
        @CustomType.Setter
        public Builder slaClassParameters(@Nullable List<ApplicationAwareRoutingPolicyDefinitionSequenceActionEntrySlaClassParameter> slaClassParameters) {

            this.slaClassParameters = slaClassParameters;
            return this;
        }
        public Builder slaClassParameters(ApplicationAwareRoutingPolicyDefinitionSequenceActionEntrySlaClassParameter... slaClassParameters) {
            return slaClassParameters(List.of(slaClassParameters));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("ApplicationAwareRoutingPolicyDefinitionSequenceActionEntry", "type");
            }
            this.type = type;
            return this;
        }
        public ApplicationAwareRoutingPolicyDefinitionSequenceActionEntry build() {
            final var _resultValue = new ApplicationAwareRoutingPolicyDefinitionSequenceActionEntry();
            _resultValue.backupSlaPreferredColor = backupSlaPreferredColor;
            _resultValue.cloudSla = cloudSla;
            _resultValue.counter = counter;
            _resultValue.log = log;
            _resultValue.slaClassParameters = slaClassParameters;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
