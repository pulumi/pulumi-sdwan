// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.AppProbeClassPolicyObjectMappingArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppProbeClassPolicyObjectState extends com.pulumi.resources.ResourceArgs {

    public static final AppProbeClassPolicyObjectState Empty = new AppProbeClassPolicyObjectState();

    /**
     * Forwarding class name
     * 
     */
    @Import(name="forwardingClass")
    private @Nullable Output<String> forwardingClass;

    /**
     * @return Forwarding class name
     * 
     */
    public Optional<Output<String>> forwardingClass() {
        return Optional.ofNullable(this.forwardingClass);
    }

    /**
     * Color mappings
     * 
     */
    @Import(name="mappings")
    private @Nullable Output<List<AppProbeClassPolicyObjectMappingArgs>> mappings;

    /**
     * @return Color mappings
     * 
     */
    public Optional<Output<List<AppProbeClassPolicyObjectMappingArgs>>> mappings() {
        return Optional.ofNullable(this.mappings);
    }

    /**
     * The name of the policy object
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the policy object
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The version of the object
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the object
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private AppProbeClassPolicyObjectState() {}

    private AppProbeClassPolicyObjectState(AppProbeClassPolicyObjectState $) {
        this.forwardingClass = $.forwardingClass;
        this.mappings = $.mappings;
        this.name = $.name;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppProbeClassPolicyObjectState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppProbeClassPolicyObjectState $;

        public Builder() {
            $ = new AppProbeClassPolicyObjectState();
        }

        public Builder(AppProbeClassPolicyObjectState defaults) {
            $ = new AppProbeClassPolicyObjectState(Objects.requireNonNull(defaults));
        }

        /**
         * @param forwardingClass Forwarding class name
         * 
         * @return builder
         * 
         */
        public Builder forwardingClass(@Nullable Output<String> forwardingClass) {
            $.forwardingClass = forwardingClass;
            return this;
        }

        /**
         * @param forwardingClass Forwarding class name
         * 
         * @return builder
         * 
         */
        public Builder forwardingClass(String forwardingClass) {
            return forwardingClass(Output.of(forwardingClass));
        }

        /**
         * @param mappings Color mappings
         * 
         * @return builder
         * 
         */
        public Builder mappings(@Nullable Output<List<AppProbeClassPolicyObjectMappingArgs>> mappings) {
            $.mappings = mappings;
            return this;
        }

        /**
         * @param mappings Color mappings
         * 
         * @return builder
         * 
         */
        public Builder mappings(List<AppProbeClassPolicyObjectMappingArgs> mappings) {
            return mappings(Output.of(mappings));
        }

        /**
         * @param mappings Color mappings
         * 
         * @return builder
         * 
         */
        public Builder mappings(AppProbeClassPolicyObjectMappingArgs... mappings) {
            return mappings(List.of(mappings));
        }

        /**
         * @param name The name of the policy object
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the policy object
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param version The version of the object
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the object
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public AppProbeClassPolicyObjectState build() {
            return $;
        }
    }

}
