// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRoutePolicyDefinitionSequenceActionEntry {
    /**
     * @return Aggregator
     * 
     */
    private Integer aggregator;
    /**
     * @return IP address
     * 
     */
    private String aggregatorIpAddress;
    /**
     * @return Space separated list of ASN to exclude
     * 
     */
    private String asPathExclude;
    /**
     * @return Space separated list of ASN to prepend
     * 
     */
    private String asPathPrepend;
    /**
     * @return Atomic aggregate
     * 
     */
    private Boolean atomicAggregate;
    /**
     * @return Community value, e.g. `1000:10000` or `internet` or `local-AS`
     * 
     */
    private String community;
    /**
     * @return Community additive
     * 
     */
    private Boolean communityAdditive;
    /**
     * @return Local preference
     * 
     */
    private Integer localPreference;
    /**
     * @return Metric
     * 
     */
    private Integer metric;
    /**
     * @return Metric type
     * 
     */
    private String metricType;
    /**
     * @return Next hop IP
     * 
     */
    private String nextHop;
    /**
     * @return OMP tag
     * 
     */
    private Integer ompTag;
    /**
     * @return Origin
     * 
     */
    private String origin;
    /**
     * @return Originator IP
     * 
     */
    private String originator;
    /**
     * @return OSPF tag
     * 
     */
    private Integer ospfTag;
    /**
     * @return Type of action entry
     * 
     */
    private String type;
    /**
     * @return Weight
     * 
     */
    private Integer weight;

    private GetRoutePolicyDefinitionSequenceActionEntry() {}
    /**
     * @return Aggregator
     * 
     */
    public Integer aggregator() {
        return this.aggregator;
    }
    /**
     * @return IP address
     * 
     */
    public String aggregatorIpAddress() {
        return this.aggregatorIpAddress;
    }
    /**
     * @return Space separated list of ASN to exclude
     * 
     */
    public String asPathExclude() {
        return this.asPathExclude;
    }
    /**
     * @return Space separated list of ASN to prepend
     * 
     */
    public String asPathPrepend() {
        return this.asPathPrepend;
    }
    /**
     * @return Atomic aggregate
     * 
     */
    public Boolean atomicAggregate() {
        return this.atomicAggregate;
    }
    /**
     * @return Community value, e.g. `1000:10000` or `internet` or `local-AS`
     * 
     */
    public String community() {
        return this.community;
    }
    /**
     * @return Community additive
     * 
     */
    public Boolean communityAdditive() {
        return this.communityAdditive;
    }
    /**
     * @return Local preference
     * 
     */
    public Integer localPreference() {
        return this.localPreference;
    }
    /**
     * @return Metric
     * 
     */
    public Integer metric() {
        return this.metric;
    }
    /**
     * @return Metric type
     * 
     */
    public String metricType() {
        return this.metricType;
    }
    /**
     * @return Next hop IP
     * 
     */
    public String nextHop() {
        return this.nextHop;
    }
    /**
     * @return OMP tag
     * 
     */
    public Integer ompTag() {
        return this.ompTag;
    }
    /**
     * @return Origin
     * 
     */
    public String origin() {
        return this.origin;
    }
    /**
     * @return Originator IP
     * 
     */
    public String originator() {
        return this.originator;
    }
    /**
     * @return OSPF tag
     * 
     */
    public Integer ospfTag() {
        return this.ospfTag;
    }
    /**
     * @return Type of action entry
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Weight
     * 
     */
    public Integer weight() {
        return this.weight;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRoutePolicyDefinitionSequenceActionEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer aggregator;
        private String aggregatorIpAddress;
        private String asPathExclude;
        private String asPathPrepend;
        private Boolean atomicAggregate;
        private String community;
        private Boolean communityAdditive;
        private Integer localPreference;
        private Integer metric;
        private String metricType;
        private String nextHop;
        private Integer ompTag;
        private String origin;
        private String originator;
        private Integer ospfTag;
        private String type;
        private Integer weight;
        public Builder() {}
        public Builder(GetRoutePolicyDefinitionSequenceActionEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregator = defaults.aggregator;
    	      this.aggregatorIpAddress = defaults.aggregatorIpAddress;
    	      this.asPathExclude = defaults.asPathExclude;
    	      this.asPathPrepend = defaults.asPathPrepend;
    	      this.atomicAggregate = defaults.atomicAggregate;
    	      this.community = defaults.community;
    	      this.communityAdditive = defaults.communityAdditive;
    	      this.localPreference = defaults.localPreference;
    	      this.metric = defaults.metric;
    	      this.metricType = defaults.metricType;
    	      this.nextHop = defaults.nextHop;
    	      this.ompTag = defaults.ompTag;
    	      this.origin = defaults.origin;
    	      this.originator = defaults.originator;
    	      this.ospfTag = defaults.ospfTag;
    	      this.type = defaults.type;
    	      this.weight = defaults.weight;
        }

        @CustomType.Setter
        public Builder aggregator(Integer aggregator) {
            if (aggregator == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceActionEntry", "aggregator");
            }
            this.aggregator = aggregator;
            return this;
        }
        @CustomType.Setter
        public Builder aggregatorIpAddress(String aggregatorIpAddress) {
            if (aggregatorIpAddress == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceActionEntry", "aggregatorIpAddress");
            }
            this.aggregatorIpAddress = aggregatorIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder asPathExclude(String asPathExclude) {
            if (asPathExclude == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceActionEntry", "asPathExclude");
            }
            this.asPathExclude = asPathExclude;
            return this;
        }
        @CustomType.Setter
        public Builder asPathPrepend(String asPathPrepend) {
            if (asPathPrepend == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceActionEntry", "asPathPrepend");
            }
            this.asPathPrepend = asPathPrepend;
            return this;
        }
        @CustomType.Setter
        public Builder atomicAggregate(Boolean atomicAggregate) {
            if (atomicAggregate == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceActionEntry", "atomicAggregate");
            }
            this.atomicAggregate = atomicAggregate;
            return this;
        }
        @CustomType.Setter
        public Builder community(String community) {
            if (community == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceActionEntry", "community");
            }
            this.community = community;
            return this;
        }
        @CustomType.Setter
        public Builder communityAdditive(Boolean communityAdditive) {
            if (communityAdditive == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceActionEntry", "communityAdditive");
            }
            this.communityAdditive = communityAdditive;
            return this;
        }
        @CustomType.Setter
        public Builder localPreference(Integer localPreference) {
            if (localPreference == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceActionEntry", "localPreference");
            }
            this.localPreference = localPreference;
            return this;
        }
        @CustomType.Setter
        public Builder metric(Integer metric) {
            if (metric == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceActionEntry", "metric");
            }
            this.metric = metric;
            return this;
        }
        @CustomType.Setter
        public Builder metricType(String metricType) {
            if (metricType == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceActionEntry", "metricType");
            }
            this.metricType = metricType;
            return this;
        }
        @CustomType.Setter
        public Builder nextHop(String nextHop) {
            if (nextHop == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceActionEntry", "nextHop");
            }
            this.nextHop = nextHop;
            return this;
        }
        @CustomType.Setter
        public Builder ompTag(Integer ompTag) {
            if (ompTag == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceActionEntry", "ompTag");
            }
            this.ompTag = ompTag;
            return this;
        }
        @CustomType.Setter
        public Builder origin(String origin) {
            if (origin == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceActionEntry", "origin");
            }
            this.origin = origin;
            return this;
        }
        @CustomType.Setter
        public Builder originator(String originator) {
            if (originator == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceActionEntry", "originator");
            }
            this.originator = originator;
            return this;
        }
        @CustomType.Setter
        public Builder ospfTag(Integer ospfTag) {
            if (ospfTag == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceActionEntry", "ospfTag");
            }
            this.ospfTag = ospfTag;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceActionEntry", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder weight(Integer weight) {
            if (weight == null) {
              throw new MissingRequiredPropertyException("GetRoutePolicyDefinitionSequenceActionEntry", "weight");
            }
            this.weight = weight;
            return this;
        }
        public GetRoutePolicyDefinitionSequenceActionEntry build() {
            final var _resultValue = new GetRoutePolicyDefinitionSequenceActionEntry();
            _resultValue.aggregator = aggregator;
            _resultValue.aggregatorIpAddress = aggregatorIpAddress;
            _resultValue.asPathExclude = asPathExclude;
            _resultValue.asPathPrepend = asPathPrepend;
            _resultValue.atomicAggregate = atomicAggregate;
            _resultValue.community = community;
            _resultValue.communityAdditive = communityAdditive;
            _resultValue.localPreference = localPreference;
            _resultValue.metric = metric;
            _resultValue.metricType = metricType;
            _resultValue.nextHop = nextHop;
            _resultValue.ompTag = ompTag;
            _resultValue.origin = origin;
            _resultValue.originator = originator;
            _resultValue.ospfTag = ospfTag;
            _resultValue.type = type;
            _resultValue.weight = weight;
            return _resultValue;
        }
    }
}
