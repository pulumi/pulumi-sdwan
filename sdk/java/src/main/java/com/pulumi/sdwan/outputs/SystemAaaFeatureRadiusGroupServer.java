// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SystemAaaFeatureRadiusGroupServer {
    /**
     * @return Set Accounting port to use to connect to Radius server
     *   - Range: `1`-`65534`
     *   - Default value: `1813`
     * 
     */
    private @Nullable Integer acctPort;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String acctPortVariable;
    /**
     * @return Set IP address of Radius server
     * 
     */
    private @Nullable String address;
    /**
     * @return Set Authentication port to use to connect to Radius server
     *   - Range: `1`-`65534`
     *   - Default value: `1812`
     * 
     */
    private @Nullable Integer authPort;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String authPortVariable;
    /**
     * @return Set the Radius server shared key
     * 
     */
    private @Nullable String key;
    /**
     * @return Type of encyption. To be used for type 6
     *   - Choices: `6`, `7`
     * 
     */
    private @Nullable String keyEnum;
    /**
     * @return key type
     *   - Choices: `key`, `pac`
     *   - Default value: `key`
     * 
     */
    private @Nullable String keyType;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String keyTypeVariable;
    /**
     * @return Configure how many times to contact this Radius server
     *   - Range: `1`-`100`
     *   - Default value: `3`
     * 
     */
    private @Nullable Integer retransmit;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String retransmitVariable;
    /**
     * @return Set the Radius server shared type 7 encrypted key
     * 
     */
    private @Nullable String secretKey;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String secretKeyVariable;
    /**
     * @return Configure how long to wait for replies from the Radius server
     *   - Range: `1`-`1000`
     *   - Default value: `5`
     * 
     */
    private @Nullable Integer timeout;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String timeoutVariable;

    private SystemAaaFeatureRadiusGroupServer() {}
    /**
     * @return Set Accounting port to use to connect to Radius server
     *   - Range: `1`-`65534`
     *   - Default value: `1813`
     * 
     */
    public Optional<Integer> acctPort() {
        return Optional.ofNullable(this.acctPort);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> acctPortVariable() {
        return Optional.ofNullable(this.acctPortVariable);
    }
    /**
     * @return Set IP address of Radius server
     * 
     */
    public Optional<String> address() {
        return Optional.ofNullable(this.address);
    }
    /**
     * @return Set Authentication port to use to connect to Radius server
     *   - Range: `1`-`65534`
     *   - Default value: `1812`
     * 
     */
    public Optional<Integer> authPort() {
        return Optional.ofNullable(this.authPort);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> authPortVariable() {
        return Optional.ofNullable(this.authPortVariable);
    }
    /**
     * @return Set the Radius server shared key
     * 
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return Type of encyption. To be used for type 6
     *   - Choices: `6`, `7`
     * 
     */
    public Optional<String> keyEnum() {
        return Optional.ofNullable(this.keyEnum);
    }
    /**
     * @return key type
     *   - Choices: `key`, `pac`
     *   - Default value: `key`
     * 
     */
    public Optional<String> keyType() {
        return Optional.ofNullable(this.keyType);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> keyTypeVariable() {
        return Optional.ofNullable(this.keyTypeVariable);
    }
    /**
     * @return Configure how many times to contact this Radius server
     *   - Range: `1`-`100`
     *   - Default value: `3`
     * 
     */
    public Optional<Integer> retransmit() {
        return Optional.ofNullable(this.retransmit);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> retransmitVariable() {
        return Optional.ofNullable(this.retransmitVariable);
    }
    /**
     * @return Set the Radius server shared type 7 encrypted key
     * 
     */
    public Optional<String> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> secretKeyVariable() {
        return Optional.ofNullable(this.secretKeyVariable);
    }
    /**
     * @return Configure how long to wait for replies from the Radius server
     *   - Range: `1`-`1000`
     *   - Default value: `5`
     * 
     */
    public Optional<Integer> timeout() {
        return Optional.ofNullable(this.timeout);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> timeoutVariable() {
        return Optional.ofNullable(this.timeoutVariable);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SystemAaaFeatureRadiusGroupServer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer acctPort;
        private @Nullable String acctPortVariable;
        private @Nullable String address;
        private @Nullable Integer authPort;
        private @Nullable String authPortVariable;
        private @Nullable String key;
        private @Nullable String keyEnum;
        private @Nullable String keyType;
        private @Nullable String keyTypeVariable;
        private @Nullable Integer retransmit;
        private @Nullable String retransmitVariable;
        private @Nullable String secretKey;
        private @Nullable String secretKeyVariable;
        private @Nullable Integer timeout;
        private @Nullable String timeoutVariable;
        public Builder() {}
        public Builder(SystemAaaFeatureRadiusGroupServer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acctPort = defaults.acctPort;
    	      this.acctPortVariable = defaults.acctPortVariable;
    	      this.address = defaults.address;
    	      this.authPort = defaults.authPort;
    	      this.authPortVariable = defaults.authPortVariable;
    	      this.key = defaults.key;
    	      this.keyEnum = defaults.keyEnum;
    	      this.keyType = defaults.keyType;
    	      this.keyTypeVariable = defaults.keyTypeVariable;
    	      this.retransmit = defaults.retransmit;
    	      this.retransmitVariable = defaults.retransmitVariable;
    	      this.secretKey = defaults.secretKey;
    	      this.secretKeyVariable = defaults.secretKeyVariable;
    	      this.timeout = defaults.timeout;
    	      this.timeoutVariable = defaults.timeoutVariable;
        }

        @CustomType.Setter
        public Builder acctPort(@Nullable Integer acctPort) {

            this.acctPort = acctPort;
            return this;
        }
        @CustomType.Setter
        public Builder acctPortVariable(@Nullable String acctPortVariable) {

            this.acctPortVariable = acctPortVariable;
            return this;
        }
        @CustomType.Setter
        public Builder address(@Nullable String address) {

            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder authPort(@Nullable Integer authPort) {

            this.authPort = authPort;
            return this;
        }
        @CustomType.Setter
        public Builder authPortVariable(@Nullable String authPortVariable) {

            this.authPortVariable = authPortVariable;
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable String key) {

            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder keyEnum(@Nullable String keyEnum) {

            this.keyEnum = keyEnum;
            return this;
        }
        @CustomType.Setter
        public Builder keyType(@Nullable String keyType) {

            this.keyType = keyType;
            return this;
        }
        @CustomType.Setter
        public Builder keyTypeVariable(@Nullable String keyTypeVariable) {

            this.keyTypeVariable = keyTypeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder retransmit(@Nullable Integer retransmit) {

            this.retransmit = retransmit;
            return this;
        }
        @CustomType.Setter
        public Builder retransmitVariable(@Nullable String retransmitVariable) {

            this.retransmitVariable = retransmitVariable;
            return this;
        }
        @CustomType.Setter
        public Builder secretKey(@Nullable String secretKey) {

            this.secretKey = secretKey;
            return this;
        }
        @CustomType.Setter
        public Builder secretKeyVariable(@Nullable String secretKeyVariable) {

            this.secretKeyVariable = secretKeyVariable;
            return this;
        }
        @CustomType.Setter
        public Builder timeout(@Nullable Integer timeout) {

            this.timeout = timeout;
            return this;
        }
        @CustomType.Setter
        public Builder timeoutVariable(@Nullable String timeoutVariable) {

            this.timeoutVariable = timeoutVariable;
            return this;
        }
        public SystemAaaFeatureRadiusGroupServer build() {
            final var _resultValue = new SystemAaaFeatureRadiusGroupServer();
            _resultValue.acctPort = acctPort;
            _resultValue.acctPortVariable = acctPortVariable;
            _resultValue.address = address;
            _resultValue.authPort = authPort;
            _resultValue.authPortVariable = authPortVariable;
            _resultValue.key = key;
            _resultValue.keyEnum = keyEnum;
            _resultValue.keyType = keyType;
            _resultValue.keyTypeVariable = keyTypeVariable;
            _resultValue.retransmit = retransmit;
            _resultValue.retransmitVariable = retransmitVariable;
            _resultValue.secretKey = secretKey;
            _resultValue.secretKeyVariable = secretKeyVariable;
            _resultValue.timeout = timeout;
            _resultValue.timeoutVariable = timeoutVariable;
            return _resultValue;
        }
    }
}
