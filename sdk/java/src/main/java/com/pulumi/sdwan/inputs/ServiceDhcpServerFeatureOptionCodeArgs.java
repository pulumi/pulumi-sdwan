// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceDhcpServerFeatureOptionCodeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceDhcpServerFeatureOptionCodeArgs Empty = new ServiceDhcpServerFeatureOptionCodeArgs();

    /**
     * Set ASCII value
     * 
     */
    @Import(name="ascii")
    private @Nullable Output<String> ascii;

    /**
     * @return Set ASCII value
     * 
     */
    public Optional<Output<String>> ascii() {
        return Optional.ofNullable(this.ascii);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="asciiVariable")
    private @Nullable Output<String> asciiVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> asciiVariable() {
        return Optional.ofNullable(this.asciiVariable);
    }

    /**
     * Set Option Code
     *   - Range: `1`-`254`
     * 
     */
    @Import(name="code")
    private @Nullable Output<Integer> code;

    /**
     * @return Set Option Code
     *   - Range: `1`-`254`
     * 
     */
    public Optional<Output<Integer>> code() {
        return Optional.ofNullable(this.code);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="codeVariable")
    private @Nullable Output<String> codeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> codeVariable() {
        return Optional.ofNullable(this.codeVariable);
    }

    /**
     * Set HEX value
     * 
     */
    @Import(name="hex")
    private @Nullable Output<String> hex;

    /**
     * @return Set HEX value
     * 
     */
    public Optional<Output<String>> hex() {
        return Optional.ofNullable(this.hex);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="hexVariable")
    private @Nullable Output<String> hexVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> hexVariable() {
        return Optional.ofNullable(this.hexVariable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipVariable")
    private @Nullable Output<String> ipVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipVariable() {
        return Optional.ofNullable(this.ipVariable);
    }

    /**
     * Set ip address
     * 
     */
    @Import(name="ips")
    private @Nullable Output<List<String>> ips;

    /**
     * @return Set ip address
     * 
     */
    public Optional<Output<List<String>>> ips() {
        return Optional.ofNullable(this.ips);
    }

    private ServiceDhcpServerFeatureOptionCodeArgs() {}

    private ServiceDhcpServerFeatureOptionCodeArgs(ServiceDhcpServerFeatureOptionCodeArgs $) {
        this.ascii = $.ascii;
        this.asciiVariable = $.asciiVariable;
        this.code = $.code;
        this.codeVariable = $.codeVariable;
        this.hex = $.hex;
        this.hexVariable = $.hexVariable;
        this.ipVariable = $.ipVariable;
        this.ips = $.ips;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceDhcpServerFeatureOptionCodeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceDhcpServerFeatureOptionCodeArgs $;

        public Builder() {
            $ = new ServiceDhcpServerFeatureOptionCodeArgs();
        }

        public Builder(ServiceDhcpServerFeatureOptionCodeArgs defaults) {
            $ = new ServiceDhcpServerFeatureOptionCodeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ascii Set ASCII value
         * 
         * @return builder
         * 
         */
        public Builder ascii(@Nullable Output<String> ascii) {
            $.ascii = ascii;
            return this;
        }

        /**
         * @param ascii Set ASCII value
         * 
         * @return builder
         * 
         */
        public Builder ascii(String ascii) {
            return ascii(Output.of(ascii));
        }

        /**
         * @param asciiVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder asciiVariable(@Nullable Output<String> asciiVariable) {
            $.asciiVariable = asciiVariable;
            return this;
        }

        /**
         * @param asciiVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder asciiVariable(String asciiVariable) {
            return asciiVariable(Output.of(asciiVariable));
        }

        /**
         * @param code Set Option Code
         *   - Range: `1`-`254`
         * 
         * @return builder
         * 
         */
        public Builder code(@Nullable Output<Integer> code) {
            $.code = code;
            return this;
        }

        /**
         * @param code Set Option Code
         *   - Range: `1`-`254`
         * 
         * @return builder
         * 
         */
        public Builder code(Integer code) {
            return code(Output.of(code));
        }

        /**
         * @param codeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder codeVariable(@Nullable Output<String> codeVariable) {
            $.codeVariable = codeVariable;
            return this;
        }

        /**
         * @param codeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder codeVariable(String codeVariable) {
            return codeVariable(Output.of(codeVariable));
        }

        /**
         * @param hex Set HEX value
         * 
         * @return builder
         * 
         */
        public Builder hex(@Nullable Output<String> hex) {
            $.hex = hex;
            return this;
        }

        /**
         * @param hex Set HEX value
         * 
         * @return builder
         * 
         */
        public Builder hex(String hex) {
            return hex(Output.of(hex));
        }

        /**
         * @param hexVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder hexVariable(@Nullable Output<String> hexVariable) {
            $.hexVariable = hexVariable;
            return this;
        }

        /**
         * @param hexVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder hexVariable(String hexVariable) {
            return hexVariable(Output.of(hexVariable));
        }

        /**
         * @param ipVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipVariable(@Nullable Output<String> ipVariable) {
            $.ipVariable = ipVariable;
            return this;
        }

        /**
         * @param ipVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipVariable(String ipVariable) {
            return ipVariable(Output.of(ipVariable));
        }

        /**
         * @param ips Set ip address
         * 
         * @return builder
         * 
         */
        public Builder ips(@Nullable Output<List<String>> ips) {
            $.ips = ips;
            return this;
        }

        /**
         * @param ips Set ip address
         * 
         * @return builder
         * 
         */
        public Builder ips(List<String> ips) {
            return ips(Output.of(ips));
        }

        /**
         * @param ips Set ip address
         * 
         * @return builder
         * 
         */
        public Builder ips(String... ips) {
            return ips(List.of(ips));
        }

        public ServiceDhcpServerFeatureOptionCodeArgs build() {
            return $;
        }
    }

}
