// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.CiscoTrustsecFeatureTemplateSxpConnectionArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CiscoTrustsecFeatureTemplateState extends com.pulumi.resources.ResourceArgs {

    public static final CiscoTrustsecFeatureTemplateState Empty = new CiscoTrustsecFeatureTemplateState();

    /**
     * Specify the TrustSec Network Access Device ID, should be same as mentioned in the Identity Services Engine (upto 32
     * char)
     * 
     */
    @Import(name="credentialsId")
    private @Nullable Output<String> credentialsId;

    /**
     * @return Specify the TrustSec Network Access Device ID, should be same as mentioned in the Identity Services Engine (upto 32
     * char)
     * 
     */
    public Optional<Output<String>> credentialsId() {
        return Optional.ofNullable(this.credentialsId);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="credentialsIdVariable")
    private @Nullable Output<String> credentialsIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> credentialsIdVariable() {
        return Optional.ofNullable(this.credentialsIdVariable);
    }

    /**
     * Set the password for the device
     * 
     */
    @Import(name="credentialsPassword")
    private @Nullable Output<String> credentialsPassword;

    /**
     * @return Set the password for the device
     * 
     */
    public Optional<Output<String>> credentialsPassword() {
        return Optional.ofNullable(this.credentialsPassword);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="credentialsPasswordVariable")
    private @Nullable Output<String> credentialsPasswordVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> credentialsPasswordVariable() {
        return Optional.ofNullable(this.credentialsPasswordVariable);
    }

    /**
     * The description of the feature template
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the feature template
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Configure Local device security group &lt;2..65519&gt; - Range: `2`-`65519`
     * 
     */
    @Import(name="deviceSgt")
    private @Nullable Output<Integer> deviceSgt;

    /**
     * @return Configure Local device security group &lt;2..65519&gt; - Range: `2`-`65519`
     * 
     */
    public Optional<Output<Integer>> deviceSgt() {
        return Optional.ofNullable(this.deviceSgt);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="deviceSgtVariable")
    private @Nullable Output<String> deviceSgtVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> deviceSgtVariable() {
        return Optional.ofNullable(this.deviceSgtVariable);
    }

    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    @Import(name="deviceTypes")
    private @Nullable Output<List<String>> deviceTypes;

    /**
     * @return List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    public Optional<Output<List<String>>> deviceTypes() {
        return Optional.ofNullable(this.deviceTypes);
    }

    /**
     * Enable Role-based Access Control enforcement - Default value: `false`
     * 
     */
    @Import(name="enableEnforcement")
    private @Nullable Output<Boolean> enableEnforcement;

    /**
     * @return Enable Role-based Access Control enforcement - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> enableEnforcement() {
        return Optional.ofNullable(this.enableEnforcement);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="enableEnforcementVariable")
    private @Nullable Output<String> enableEnforcementVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> enableEnforcementVariable() {
        return Optional.ofNullable(this.enableEnforcementVariable);
    }

    /**
     * Enable CTS SXP support - Default value: `false`
     * 
     */
    @Import(name="enableSxp")
    private @Nullable Output<Boolean> enableSxp;

    /**
     * @return Enable CTS SXP support - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> enableSxp() {
        return Optional.ofNullable(this.enableSxp);
    }

    /**
     * Configure Maximum allowed hold-time for listener in seconds &lt;1..65534&gt; - Range: `1`-`65534` - Default value: `180`
     * 
     */
    @Import(name="maximumListenerHoldTime")
    private @Nullable Output<Integer> maximumListenerHoldTime;

    /**
     * @return Configure Maximum allowed hold-time for listener in seconds &lt;1..65534&gt; - Range: `1`-`65534` - Default value: `180`
     * 
     */
    public Optional<Output<Integer>> maximumListenerHoldTime() {
        return Optional.ofNullable(this.maximumListenerHoldTime);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="maximumListenerHoldTimeVariable")
    private @Nullable Output<String> maximumListenerHoldTimeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> maximumListenerHoldTimeVariable() {
        return Optional.ofNullable(this.maximumListenerHoldTimeVariable);
    }

    /**
     * Configure Minimum allowed hold-time for listener in seconds &lt;1..65534&gt; - Range: `1`-`65534` - Default value: `90`
     * 
     */
    @Import(name="minimumListenerHoldTime")
    private @Nullable Output<Integer> minimumListenerHoldTime;

    /**
     * @return Configure Minimum allowed hold-time for listener in seconds &lt;1..65534&gt; - Range: `1`-`65534` - Default value: `90`
     * 
     */
    public Optional<Output<Integer>> minimumListenerHoldTime() {
        return Optional.ofNullable(this.minimumListenerHoldTime);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="minimumListenerHoldTimeVariable")
    private @Nullable Output<String> minimumListenerHoldTimeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> minimumListenerHoldTimeVariable() {
        return Optional.ofNullable(this.minimumListenerHoldTimeVariable);
    }

    /**
     * The name of the feature template
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the feature template
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Configure Speaker hold-time in seconds &lt;1..65534&gt; - Range: `1`-`65534` - Default value: `120`
     * 
     */
    @Import(name="speakerHoldTime")
    private @Nullable Output<Integer> speakerHoldTime;

    /**
     * @return Configure Speaker hold-time in seconds &lt;1..65534&gt; - Range: `1`-`65534` - Default value: `120`
     * 
     */
    public Optional<Output<Integer>> speakerHoldTime() {
        return Optional.ofNullable(this.speakerHoldTime);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="speakerHoldTimeVariable")
    private @Nullable Output<String> speakerHoldTimeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> speakerHoldTimeVariable() {
        return Optional.ofNullable(this.speakerHoldTimeVariable);
    }

    /**
     * Configure SXP Connections
     * 
     */
    @Import(name="sxpConnections")
    private @Nullable Output<List<CiscoTrustsecFeatureTemplateSxpConnectionArgs>> sxpConnections;

    /**
     * @return Configure SXP Connections
     * 
     */
    public Optional<Output<List<CiscoTrustsecFeatureTemplateSxpConnectionArgs>>> sxpConnections() {
        return Optional.ofNullable(this.sxpConnections);
    }

    /**
     * Configure SXP default password
     * 
     */
    @Import(name="sxpDefaultPassword")
    private @Nullable Output<String> sxpDefaultPassword;

    /**
     * @return Configure SXP default password
     * 
     */
    public Optional<Output<String>> sxpDefaultPassword() {
        return Optional.ofNullable(this.sxpDefaultPassword);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sxpDefaultPasswordVariable")
    private @Nullable Output<String> sxpDefaultPasswordVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sxpDefaultPasswordVariable() {
        return Optional.ofNullable(this.sxpDefaultPasswordVariable);
    }

    /**
     * Configure SXP key-chain
     * 
     */
    @Import(name="sxpKeyChain")
    private @Nullable Output<String> sxpKeyChain;

    /**
     * @return Configure SXP key-chain
     * 
     */
    public Optional<Output<String>> sxpKeyChain() {
        return Optional.ofNullable(this.sxpKeyChain);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sxpKeyChainVariable")
    private @Nullable Output<String> sxpKeyChainVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sxpKeyChainVariable() {
        return Optional.ofNullable(this.sxpKeyChainVariable);
    }

    /**
     * Enables logging for IP-to-SGT binding changes - Default value: `false`
     * 
     */
    @Import(name="sxpLogBindingChanges")
    private @Nullable Output<Boolean> sxpLogBindingChanges;

    /**
     * @return Enables logging for IP-to-SGT binding changes - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> sxpLogBindingChanges() {
        return Optional.ofNullable(this.sxpLogBindingChanges);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sxpLogBindingChangesVariable")
    private @Nullable Output<String> sxpLogBindingChangesVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sxpLogBindingChangesVariable() {
        return Optional.ofNullable(this.sxpLogBindingChangesVariable);
    }

    /**
     * Configure SXP Node ID &lt;IP, 8 char string or interface name&gt;
     * 
     */
    @Import(name="sxpNodeId")
    private @Nullable Output<String> sxpNodeId;

    /**
     * @return Configure SXP Node ID &lt;IP, 8 char string or interface name&gt;
     * 
     */
    public Optional<Output<String>> sxpNodeId() {
        return Optional.ofNullable(this.sxpNodeId);
    }

    /**
     * Define SXP Node ID type &lt;IP, 8 char string or interface name&gt; - Choices: `ip`, `interface-name`, `8-char-hex-string` -
     * Default value: `ip`
     * 
     */
    @Import(name="sxpNodeIdType")
    private @Nullable Output<String> sxpNodeIdType;

    /**
     * @return Define SXP Node ID type &lt;IP, 8 char string or interface name&gt; - Choices: `ip`, `interface-name`, `8-char-hex-string` -
     * Default value: `ip`
     * 
     */
    public Optional<Output<String>> sxpNodeIdType() {
        return Optional.ofNullable(this.sxpNodeIdType);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sxpNodeIdVariable")
    private @Nullable Output<String> sxpNodeIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sxpNodeIdVariable() {
        return Optional.ofNullable(this.sxpNodeIdVariable);
    }

    /**
     * Configure the SXP reconciliation period in seconds &lt;0..64000&gt; - Range: `0`-`64000` - Default value: `120`
     * 
     */
    @Import(name="sxpReconciliationPeriod")
    private @Nullable Output<Integer> sxpReconciliationPeriod;

    /**
     * @return Configure the SXP reconciliation period in seconds &lt;0..64000&gt; - Range: `0`-`64000` - Default value: `120`
     * 
     */
    public Optional<Output<Integer>> sxpReconciliationPeriod() {
        return Optional.ofNullable(this.sxpReconciliationPeriod);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sxpReconciliationPeriodVariable")
    private @Nullable Output<String> sxpReconciliationPeriodVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sxpReconciliationPeriodVariable() {
        return Optional.ofNullable(this.sxpReconciliationPeriodVariable);
    }

    /**
     * Configure Retry period for SXP connection in seconds &lt;0..64000&gt; - Range: `0`-`64000` - Default value: `120`
     * 
     */
    @Import(name="sxpRetryPeriod")
    private @Nullable Output<Integer> sxpRetryPeriod;

    /**
     * @return Configure Retry period for SXP connection in seconds &lt;0..64000&gt; - Range: `0`-`64000` - Default value: `120`
     * 
     */
    public Optional<Output<Integer>> sxpRetryPeriod() {
        return Optional.ofNullable(this.sxpRetryPeriod);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sxpRetryPeriodVariable")
    private @Nullable Output<String> sxpRetryPeriodVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sxpRetryPeriodVariable() {
        return Optional.ofNullable(this.sxpRetryPeriodVariable);
    }

    /**
     * SXP Source IP
     * 
     */
    @Import(name="sxpSourceIp")
    private @Nullable Output<String> sxpSourceIp;

    /**
     * @return SXP Source IP
     * 
     */
    public Optional<Output<String>> sxpSourceIp() {
        return Optional.ofNullable(this.sxpSourceIp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sxpSourceIpVariable")
    private @Nullable Output<String> sxpSourceIpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sxpSourceIpVariable() {
        return Optional.ofNullable(this.sxpSourceIpVariable);
    }

    /**
     * The template type
     * 
     */
    @Import(name="templateType")
    private @Nullable Output<String> templateType;

    /**
     * @return The template type
     * 
     */
    public Optional<Output<String>> templateType() {
        return Optional.ofNullable(this.templateType);
    }

    /**
     * The version of the feature template
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the feature template
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private CiscoTrustsecFeatureTemplateState() {}

    private CiscoTrustsecFeatureTemplateState(CiscoTrustsecFeatureTemplateState $) {
        this.credentialsId = $.credentialsId;
        this.credentialsIdVariable = $.credentialsIdVariable;
        this.credentialsPassword = $.credentialsPassword;
        this.credentialsPasswordVariable = $.credentialsPasswordVariable;
        this.description = $.description;
        this.deviceSgt = $.deviceSgt;
        this.deviceSgtVariable = $.deviceSgtVariable;
        this.deviceTypes = $.deviceTypes;
        this.enableEnforcement = $.enableEnforcement;
        this.enableEnforcementVariable = $.enableEnforcementVariable;
        this.enableSxp = $.enableSxp;
        this.maximumListenerHoldTime = $.maximumListenerHoldTime;
        this.maximumListenerHoldTimeVariable = $.maximumListenerHoldTimeVariable;
        this.minimumListenerHoldTime = $.minimumListenerHoldTime;
        this.minimumListenerHoldTimeVariable = $.minimumListenerHoldTimeVariable;
        this.name = $.name;
        this.speakerHoldTime = $.speakerHoldTime;
        this.speakerHoldTimeVariable = $.speakerHoldTimeVariable;
        this.sxpConnections = $.sxpConnections;
        this.sxpDefaultPassword = $.sxpDefaultPassword;
        this.sxpDefaultPasswordVariable = $.sxpDefaultPasswordVariable;
        this.sxpKeyChain = $.sxpKeyChain;
        this.sxpKeyChainVariable = $.sxpKeyChainVariable;
        this.sxpLogBindingChanges = $.sxpLogBindingChanges;
        this.sxpLogBindingChangesVariable = $.sxpLogBindingChangesVariable;
        this.sxpNodeId = $.sxpNodeId;
        this.sxpNodeIdType = $.sxpNodeIdType;
        this.sxpNodeIdVariable = $.sxpNodeIdVariable;
        this.sxpReconciliationPeriod = $.sxpReconciliationPeriod;
        this.sxpReconciliationPeriodVariable = $.sxpReconciliationPeriodVariable;
        this.sxpRetryPeriod = $.sxpRetryPeriod;
        this.sxpRetryPeriodVariable = $.sxpRetryPeriodVariable;
        this.sxpSourceIp = $.sxpSourceIp;
        this.sxpSourceIpVariable = $.sxpSourceIpVariable;
        this.templateType = $.templateType;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CiscoTrustsecFeatureTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CiscoTrustsecFeatureTemplateState $;

        public Builder() {
            $ = new CiscoTrustsecFeatureTemplateState();
        }

        public Builder(CiscoTrustsecFeatureTemplateState defaults) {
            $ = new CiscoTrustsecFeatureTemplateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param credentialsId Specify the TrustSec Network Access Device ID, should be same as mentioned in the Identity Services Engine (upto 32
         * char)
         * 
         * @return builder
         * 
         */
        public Builder credentialsId(@Nullable Output<String> credentialsId) {
            $.credentialsId = credentialsId;
            return this;
        }

        /**
         * @param credentialsId Specify the TrustSec Network Access Device ID, should be same as mentioned in the Identity Services Engine (upto 32
         * char)
         * 
         * @return builder
         * 
         */
        public Builder credentialsId(String credentialsId) {
            return credentialsId(Output.of(credentialsId));
        }

        /**
         * @param credentialsIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder credentialsIdVariable(@Nullable Output<String> credentialsIdVariable) {
            $.credentialsIdVariable = credentialsIdVariable;
            return this;
        }

        /**
         * @param credentialsIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder credentialsIdVariable(String credentialsIdVariable) {
            return credentialsIdVariable(Output.of(credentialsIdVariable));
        }

        /**
         * @param credentialsPassword Set the password for the device
         * 
         * @return builder
         * 
         */
        public Builder credentialsPassword(@Nullable Output<String> credentialsPassword) {
            $.credentialsPassword = credentialsPassword;
            return this;
        }

        /**
         * @param credentialsPassword Set the password for the device
         * 
         * @return builder
         * 
         */
        public Builder credentialsPassword(String credentialsPassword) {
            return credentialsPassword(Output.of(credentialsPassword));
        }

        /**
         * @param credentialsPasswordVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder credentialsPasswordVariable(@Nullable Output<String> credentialsPasswordVariable) {
            $.credentialsPasswordVariable = credentialsPasswordVariable;
            return this;
        }

        /**
         * @param credentialsPasswordVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder credentialsPasswordVariable(String credentialsPasswordVariable) {
            return credentialsPasswordVariable(Output.of(credentialsPasswordVariable));
        }

        /**
         * @param description The description of the feature template
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the feature template
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param deviceSgt Configure Local device security group &lt;2..65519&gt; - Range: `2`-`65519`
         * 
         * @return builder
         * 
         */
        public Builder deviceSgt(@Nullable Output<Integer> deviceSgt) {
            $.deviceSgt = deviceSgt;
            return this;
        }

        /**
         * @param deviceSgt Configure Local device security group &lt;2..65519&gt; - Range: `2`-`65519`
         * 
         * @return builder
         * 
         */
        public Builder deviceSgt(Integer deviceSgt) {
            return deviceSgt(Output.of(deviceSgt));
        }

        /**
         * @param deviceSgtVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder deviceSgtVariable(@Nullable Output<String> deviceSgtVariable) {
            $.deviceSgtVariable = deviceSgtVariable;
            return this;
        }

        /**
         * @param deviceSgtVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder deviceSgtVariable(String deviceSgtVariable) {
            return deviceSgtVariable(Output.of(deviceSgtVariable));
        }

        /**
         * @param deviceTypes List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
         * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
         * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(@Nullable Output<List<String>> deviceTypes) {
            $.deviceTypes = deviceTypes;
            return this;
        }

        /**
         * @param deviceTypes List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
         * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
         * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(List<String> deviceTypes) {
            return deviceTypes(Output.of(deviceTypes));
        }

        /**
         * @param deviceTypes List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
         * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
         * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(String... deviceTypes) {
            return deviceTypes(List.of(deviceTypes));
        }

        /**
         * @param enableEnforcement Enable Role-based Access Control enforcement - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder enableEnforcement(@Nullable Output<Boolean> enableEnforcement) {
            $.enableEnforcement = enableEnforcement;
            return this;
        }

        /**
         * @param enableEnforcement Enable Role-based Access Control enforcement - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder enableEnforcement(Boolean enableEnforcement) {
            return enableEnforcement(Output.of(enableEnforcement));
        }

        /**
         * @param enableEnforcementVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enableEnforcementVariable(@Nullable Output<String> enableEnforcementVariable) {
            $.enableEnforcementVariable = enableEnforcementVariable;
            return this;
        }

        /**
         * @param enableEnforcementVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enableEnforcementVariable(String enableEnforcementVariable) {
            return enableEnforcementVariable(Output.of(enableEnforcementVariable));
        }

        /**
         * @param enableSxp Enable CTS SXP support - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder enableSxp(@Nullable Output<Boolean> enableSxp) {
            $.enableSxp = enableSxp;
            return this;
        }

        /**
         * @param enableSxp Enable CTS SXP support - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder enableSxp(Boolean enableSxp) {
            return enableSxp(Output.of(enableSxp));
        }

        /**
         * @param maximumListenerHoldTime Configure Maximum allowed hold-time for listener in seconds &lt;1..65534&gt; - Range: `1`-`65534` - Default value: `180`
         * 
         * @return builder
         * 
         */
        public Builder maximumListenerHoldTime(@Nullable Output<Integer> maximumListenerHoldTime) {
            $.maximumListenerHoldTime = maximumListenerHoldTime;
            return this;
        }

        /**
         * @param maximumListenerHoldTime Configure Maximum allowed hold-time for listener in seconds &lt;1..65534&gt; - Range: `1`-`65534` - Default value: `180`
         * 
         * @return builder
         * 
         */
        public Builder maximumListenerHoldTime(Integer maximumListenerHoldTime) {
            return maximumListenerHoldTime(Output.of(maximumListenerHoldTime));
        }

        /**
         * @param maximumListenerHoldTimeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder maximumListenerHoldTimeVariable(@Nullable Output<String> maximumListenerHoldTimeVariable) {
            $.maximumListenerHoldTimeVariable = maximumListenerHoldTimeVariable;
            return this;
        }

        /**
         * @param maximumListenerHoldTimeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder maximumListenerHoldTimeVariable(String maximumListenerHoldTimeVariable) {
            return maximumListenerHoldTimeVariable(Output.of(maximumListenerHoldTimeVariable));
        }

        /**
         * @param minimumListenerHoldTime Configure Minimum allowed hold-time for listener in seconds &lt;1..65534&gt; - Range: `1`-`65534` - Default value: `90`
         * 
         * @return builder
         * 
         */
        public Builder minimumListenerHoldTime(@Nullable Output<Integer> minimumListenerHoldTime) {
            $.minimumListenerHoldTime = minimumListenerHoldTime;
            return this;
        }

        /**
         * @param minimumListenerHoldTime Configure Minimum allowed hold-time for listener in seconds &lt;1..65534&gt; - Range: `1`-`65534` - Default value: `90`
         * 
         * @return builder
         * 
         */
        public Builder minimumListenerHoldTime(Integer minimumListenerHoldTime) {
            return minimumListenerHoldTime(Output.of(minimumListenerHoldTime));
        }

        /**
         * @param minimumListenerHoldTimeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder minimumListenerHoldTimeVariable(@Nullable Output<String> minimumListenerHoldTimeVariable) {
            $.minimumListenerHoldTimeVariable = minimumListenerHoldTimeVariable;
            return this;
        }

        /**
         * @param minimumListenerHoldTimeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder minimumListenerHoldTimeVariable(String minimumListenerHoldTimeVariable) {
            return minimumListenerHoldTimeVariable(Output.of(minimumListenerHoldTimeVariable));
        }

        /**
         * @param name The name of the feature template
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the feature template
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param speakerHoldTime Configure Speaker hold-time in seconds &lt;1..65534&gt; - Range: `1`-`65534` - Default value: `120`
         * 
         * @return builder
         * 
         */
        public Builder speakerHoldTime(@Nullable Output<Integer> speakerHoldTime) {
            $.speakerHoldTime = speakerHoldTime;
            return this;
        }

        /**
         * @param speakerHoldTime Configure Speaker hold-time in seconds &lt;1..65534&gt; - Range: `1`-`65534` - Default value: `120`
         * 
         * @return builder
         * 
         */
        public Builder speakerHoldTime(Integer speakerHoldTime) {
            return speakerHoldTime(Output.of(speakerHoldTime));
        }

        /**
         * @param speakerHoldTimeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder speakerHoldTimeVariable(@Nullable Output<String> speakerHoldTimeVariable) {
            $.speakerHoldTimeVariable = speakerHoldTimeVariable;
            return this;
        }

        /**
         * @param speakerHoldTimeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder speakerHoldTimeVariable(String speakerHoldTimeVariable) {
            return speakerHoldTimeVariable(Output.of(speakerHoldTimeVariable));
        }

        /**
         * @param sxpConnections Configure SXP Connections
         * 
         * @return builder
         * 
         */
        public Builder sxpConnections(@Nullable Output<List<CiscoTrustsecFeatureTemplateSxpConnectionArgs>> sxpConnections) {
            $.sxpConnections = sxpConnections;
            return this;
        }

        /**
         * @param sxpConnections Configure SXP Connections
         * 
         * @return builder
         * 
         */
        public Builder sxpConnections(List<CiscoTrustsecFeatureTemplateSxpConnectionArgs> sxpConnections) {
            return sxpConnections(Output.of(sxpConnections));
        }

        /**
         * @param sxpConnections Configure SXP Connections
         * 
         * @return builder
         * 
         */
        public Builder sxpConnections(CiscoTrustsecFeatureTemplateSxpConnectionArgs... sxpConnections) {
            return sxpConnections(List.of(sxpConnections));
        }

        /**
         * @param sxpDefaultPassword Configure SXP default password
         * 
         * @return builder
         * 
         */
        public Builder sxpDefaultPassword(@Nullable Output<String> sxpDefaultPassword) {
            $.sxpDefaultPassword = sxpDefaultPassword;
            return this;
        }

        /**
         * @param sxpDefaultPassword Configure SXP default password
         * 
         * @return builder
         * 
         */
        public Builder sxpDefaultPassword(String sxpDefaultPassword) {
            return sxpDefaultPassword(Output.of(sxpDefaultPassword));
        }

        /**
         * @param sxpDefaultPasswordVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sxpDefaultPasswordVariable(@Nullable Output<String> sxpDefaultPasswordVariable) {
            $.sxpDefaultPasswordVariable = sxpDefaultPasswordVariable;
            return this;
        }

        /**
         * @param sxpDefaultPasswordVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sxpDefaultPasswordVariable(String sxpDefaultPasswordVariable) {
            return sxpDefaultPasswordVariable(Output.of(sxpDefaultPasswordVariable));
        }

        /**
         * @param sxpKeyChain Configure SXP key-chain
         * 
         * @return builder
         * 
         */
        public Builder sxpKeyChain(@Nullable Output<String> sxpKeyChain) {
            $.sxpKeyChain = sxpKeyChain;
            return this;
        }

        /**
         * @param sxpKeyChain Configure SXP key-chain
         * 
         * @return builder
         * 
         */
        public Builder sxpKeyChain(String sxpKeyChain) {
            return sxpKeyChain(Output.of(sxpKeyChain));
        }

        /**
         * @param sxpKeyChainVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sxpKeyChainVariable(@Nullable Output<String> sxpKeyChainVariable) {
            $.sxpKeyChainVariable = sxpKeyChainVariable;
            return this;
        }

        /**
         * @param sxpKeyChainVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sxpKeyChainVariable(String sxpKeyChainVariable) {
            return sxpKeyChainVariable(Output.of(sxpKeyChainVariable));
        }

        /**
         * @param sxpLogBindingChanges Enables logging for IP-to-SGT binding changes - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder sxpLogBindingChanges(@Nullable Output<Boolean> sxpLogBindingChanges) {
            $.sxpLogBindingChanges = sxpLogBindingChanges;
            return this;
        }

        /**
         * @param sxpLogBindingChanges Enables logging for IP-to-SGT binding changes - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder sxpLogBindingChanges(Boolean sxpLogBindingChanges) {
            return sxpLogBindingChanges(Output.of(sxpLogBindingChanges));
        }

        /**
         * @param sxpLogBindingChangesVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sxpLogBindingChangesVariable(@Nullable Output<String> sxpLogBindingChangesVariable) {
            $.sxpLogBindingChangesVariable = sxpLogBindingChangesVariable;
            return this;
        }

        /**
         * @param sxpLogBindingChangesVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sxpLogBindingChangesVariable(String sxpLogBindingChangesVariable) {
            return sxpLogBindingChangesVariable(Output.of(sxpLogBindingChangesVariable));
        }

        /**
         * @param sxpNodeId Configure SXP Node ID &lt;IP, 8 char string or interface name&gt;
         * 
         * @return builder
         * 
         */
        public Builder sxpNodeId(@Nullable Output<String> sxpNodeId) {
            $.sxpNodeId = sxpNodeId;
            return this;
        }

        /**
         * @param sxpNodeId Configure SXP Node ID &lt;IP, 8 char string or interface name&gt;
         * 
         * @return builder
         * 
         */
        public Builder sxpNodeId(String sxpNodeId) {
            return sxpNodeId(Output.of(sxpNodeId));
        }

        /**
         * @param sxpNodeIdType Define SXP Node ID type &lt;IP, 8 char string or interface name&gt; - Choices: `ip`, `interface-name`, `8-char-hex-string` -
         * Default value: `ip`
         * 
         * @return builder
         * 
         */
        public Builder sxpNodeIdType(@Nullable Output<String> sxpNodeIdType) {
            $.sxpNodeIdType = sxpNodeIdType;
            return this;
        }

        /**
         * @param sxpNodeIdType Define SXP Node ID type &lt;IP, 8 char string or interface name&gt; - Choices: `ip`, `interface-name`, `8-char-hex-string` -
         * Default value: `ip`
         * 
         * @return builder
         * 
         */
        public Builder sxpNodeIdType(String sxpNodeIdType) {
            return sxpNodeIdType(Output.of(sxpNodeIdType));
        }

        /**
         * @param sxpNodeIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sxpNodeIdVariable(@Nullable Output<String> sxpNodeIdVariable) {
            $.sxpNodeIdVariable = sxpNodeIdVariable;
            return this;
        }

        /**
         * @param sxpNodeIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sxpNodeIdVariable(String sxpNodeIdVariable) {
            return sxpNodeIdVariable(Output.of(sxpNodeIdVariable));
        }

        /**
         * @param sxpReconciliationPeriod Configure the SXP reconciliation period in seconds &lt;0..64000&gt; - Range: `0`-`64000` - Default value: `120`
         * 
         * @return builder
         * 
         */
        public Builder sxpReconciliationPeriod(@Nullable Output<Integer> sxpReconciliationPeriod) {
            $.sxpReconciliationPeriod = sxpReconciliationPeriod;
            return this;
        }

        /**
         * @param sxpReconciliationPeriod Configure the SXP reconciliation period in seconds &lt;0..64000&gt; - Range: `0`-`64000` - Default value: `120`
         * 
         * @return builder
         * 
         */
        public Builder sxpReconciliationPeriod(Integer sxpReconciliationPeriod) {
            return sxpReconciliationPeriod(Output.of(sxpReconciliationPeriod));
        }

        /**
         * @param sxpReconciliationPeriodVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sxpReconciliationPeriodVariable(@Nullable Output<String> sxpReconciliationPeriodVariable) {
            $.sxpReconciliationPeriodVariable = sxpReconciliationPeriodVariable;
            return this;
        }

        /**
         * @param sxpReconciliationPeriodVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sxpReconciliationPeriodVariable(String sxpReconciliationPeriodVariable) {
            return sxpReconciliationPeriodVariable(Output.of(sxpReconciliationPeriodVariable));
        }

        /**
         * @param sxpRetryPeriod Configure Retry period for SXP connection in seconds &lt;0..64000&gt; - Range: `0`-`64000` - Default value: `120`
         * 
         * @return builder
         * 
         */
        public Builder sxpRetryPeriod(@Nullable Output<Integer> sxpRetryPeriod) {
            $.sxpRetryPeriod = sxpRetryPeriod;
            return this;
        }

        /**
         * @param sxpRetryPeriod Configure Retry period for SXP connection in seconds &lt;0..64000&gt; - Range: `0`-`64000` - Default value: `120`
         * 
         * @return builder
         * 
         */
        public Builder sxpRetryPeriod(Integer sxpRetryPeriod) {
            return sxpRetryPeriod(Output.of(sxpRetryPeriod));
        }

        /**
         * @param sxpRetryPeriodVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sxpRetryPeriodVariable(@Nullable Output<String> sxpRetryPeriodVariable) {
            $.sxpRetryPeriodVariable = sxpRetryPeriodVariable;
            return this;
        }

        /**
         * @param sxpRetryPeriodVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sxpRetryPeriodVariable(String sxpRetryPeriodVariable) {
            return sxpRetryPeriodVariable(Output.of(sxpRetryPeriodVariable));
        }

        /**
         * @param sxpSourceIp SXP Source IP
         * 
         * @return builder
         * 
         */
        public Builder sxpSourceIp(@Nullable Output<String> sxpSourceIp) {
            $.sxpSourceIp = sxpSourceIp;
            return this;
        }

        /**
         * @param sxpSourceIp SXP Source IP
         * 
         * @return builder
         * 
         */
        public Builder sxpSourceIp(String sxpSourceIp) {
            return sxpSourceIp(Output.of(sxpSourceIp));
        }

        /**
         * @param sxpSourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sxpSourceIpVariable(@Nullable Output<String> sxpSourceIpVariable) {
            $.sxpSourceIpVariable = sxpSourceIpVariable;
            return this;
        }

        /**
         * @param sxpSourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sxpSourceIpVariable(String sxpSourceIpVariable) {
            return sxpSourceIpVariable(Output.of(sxpSourceIpVariable));
        }

        /**
         * @param templateType The template type
         * 
         * @return builder
         * 
         */
        public Builder templateType(@Nullable Output<String> templateType) {
            $.templateType = templateType;
            return this;
        }

        /**
         * @param templateType The template type
         * 
         * @return builder
         * 
         */
        public Builder templateType(String templateType) {
            return templateType(Output.of(templateType));
        }

        /**
         * @param version The version of the feature template
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the feature template
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public CiscoTrustsecFeatureTemplateState build() {
            return $;
        }
    }

}
