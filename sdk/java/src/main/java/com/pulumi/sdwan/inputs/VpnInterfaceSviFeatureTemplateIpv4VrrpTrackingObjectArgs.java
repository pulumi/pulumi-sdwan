// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpnInterfaceSviFeatureTemplateIpv4VrrpTrackingObjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpnInterfaceSviFeatureTemplateIpv4VrrpTrackingObjectArgs Empty = new VpnInterfaceSviFeatureTemplateIpv4VrrpTrackingObjectArgs();

    /**
     * Decrement Value for VRRP priority
     *   - Range: `1`-`255`
     * 
     */
    @Import(name="decrementValue")
    private @Nullable Output<Integer> decrementValue;

    /**
     * @return Decrement Value for VRRP priority
     *   - Range: `1`-`255`
     * 
     */
    public Optional<Output<Integer>> decrementValue() {
        return Optional.ofNullable(this.decrementValue);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="decrementValueVariable")
    private @Nullable Output<String> decrementValueVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> decrementValueVariable() {
        return Optional.ofNullable(this.decrementValueVariable);
    }

    /**
     * Tracker ID
     *   - Range: `1`-`1000`
     * 
     */
    @Import(name="name")
    private @Nullable Output<Integer> name;

    /**
     * @return Tracker ID
     *   - Range: `1`-`1000`
     * 
     */
    public Optional<Output<Integer>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="nameVariable")
    private @Nullable Output<String> nameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> nameVariable() {
        return Optional.ofNullable(this.nameVariable);
    }

    /**
     * Indicates if list item is considered optional.
     * 
     */
    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    /**
     * Track Action
     *   - Choices: `decrement`, `shutdown`
     *   - Default value: `decrement`
     * 
     */
    @Import(name="trackAction")
    private @Nullable Output<String> trackAction;

    /**
     * @return Track Action
     *   - Choices: `decrement`, `shutdown`
     *   - Default value: `decrement`
     * 
     */
    public Optional<Output<String>> trackAction() {
        return Optional.ofNullable(this.trackAction);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="trackActionVariable")
    private @Nullable Output<String> trackActionVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> trackActionVariable() {
        return Optional.ofNullable(this.trackActionVariable);
    }

    private VpnInterfaceSviFeatureTemplateIpv4VrrpTrackingObjectArgs() {}

    private VpnInterfaceSviFeatureTemplateIpv4VrrpTrackingObjectArgs(VpnInterfaceSviFeatureTemplateIpv4VrrpTrackingObjectArgs $) {
        this.decrementValue = $.decrementValue;
        this.decrementValueVariable = $.decrementValueVariable;
        this.name = $.name;
        this.nameVariable = $.nameVariable;
        this.optional = $.optional;
        this.trackAction = $.trackAction;
        this.trackActionVariable = $.trackActionVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpnInterfaceSviFeatureTemplateIpv4VrrpTrackingObjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpnInterfaceSviFeatureTemplateIpv4VrrpTrackingObjectArgs $;

        public Builder() {
            $ = new VpnInterfaceSviFeatureTemplateIpv4VrrpTrackingObjectArgs();
        }

        public Builder(VpnInterfaceSviFeatureTemplateIpv4VrrpTrackingObjectArgs defaults) {
            $ = new VpnInterfaceSviFeatureTemplateIpv4VrrpTrackingObjectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param decrementValue Decrement Value for VRRP priority
         *   - Range: `1`-`255`
         * 
         * @return builder
         * 
         */
        public Builder decrementValue(@Nullable Output<Integer> decrementValue) {
            $.decrementValue = decrementValue;
            return this;
        }

        /**
         * @param decrementValue Decrement Value for VRRP priority
         *   - Range: `1`-`255`
         * 
         * @return builder
         * 
         */
        public Builder decrementValue(Integer decrementValue) {
            return decrementValue(Output.of(decrementValue));
        }

        /**
         * @param decrementValueVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder decrementValueVariable(@Nullable Output<String> decrementValueVariable) {
            $.decrementValueVariable = decrementValueVariable;
            return this;
        }

        /**
         * @param decrementValueVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder decrementValueVariable(String decrementValueVariable) {
            return decrementValueVariable(Output.of(decrementValueVariable));
        }

        /**
         * @param name Tracker ID
         *   - Range: `1`-`1000`
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<Integer> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Tracker ID
         *   - Range: `1`-`1000`
         * 
         * @return builder
         * 
         */
        public Builder name(Integer name) {
            return name(Output.of(name));
        }

        /**
         * @param nameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nameVariable(@Nullable Output<String> nameVariable) {
            $.nameVariable = nameVariable;
            return this;
        }

        /**
         * @param nameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nameVariable(String nameVariable) {
            return nameVariable(Output.of(nameVariable));
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        /**
         * @param trackAction Track Action
         *   - Choices: `decrement`, `shutdown`
         *   - Default value: `decrement`
         * 
         * @return builder
         * 
         */
        public Builder trackAction(@Nullable Output<String> trackAction) {
            $.trackAction = trackAction;
            return this;
        }

        /**
         * @param trackAction Track Action
         *   - Choices: `decrement`, `shutdown`
         *   - Default value: `decrement`
         * 
         * @return builder
         * 
         */
        public Builder trackAction(String trackAction) {
            return trackAction(Output.of(trackAction));
        }

        /**
         * @param trackActionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackActionVariable(@Nullable Output<String> trackActionVariable) {
            $.trackActionVariable = trackActionVariable;
            return this;
        }

        /**
         * @param trackActionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackActionVariable(String trackActionVariable) {
            return trackActionVariable(Output.of(trackActionVariable));
        }

        public VpnInterfaceSviFeatureTemplateIpv4VrrpTrackingObjectArgs build() {
            return $;
        }
    }

}
