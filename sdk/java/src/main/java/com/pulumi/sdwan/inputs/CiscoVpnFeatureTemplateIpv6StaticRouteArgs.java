// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.CiscoVpnFeatureTemplateIpv6StaticRouteNextHopArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CiscoVpnFeatureTemplateIpv6StaticRouteArgs extends com.pulumi.resources.ResourceArgs {

    public static final CiscoVpnFeatureTemplateIpv6StaticRouteArgs Empty = new CiscoVpnFeatureTemplateIpv6StaticRouteArgs();

    /**
     * NAT
     *   - Choices: `NAT64`, `NAT66`
     *   - Default value: `NAT64`
     * 
     */
    @Import(name="nat")
    private @Nullable Output<String> nat;

    /**
     * @return NAT
     *   - Choices: `NAT64`, `NAT66`
     *   - Default value: `NAT64`
     * 
     */
    public Optional<Output<String>> nat() {
        return Optional.ofNullable(this.nat);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="natVariable")
    private @Nullable Output<String> natVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> natVariable() {
        return Optional.ofNullable(this.natVariable);
    }

    /**
     * IP gateway address
     * 
     */
    @Import(name="nextHops")
    private @Nullable Output<List<CiscoVpnFeatureTemplateIpv6StaticRouteNextHopArgs>> nextHops;

    /**
     * @return IP gateway address
     * 
     */
    public Optional<Output<List<CiscoVpnFeatureTemplateIpv6StaticRouteNextHopArgs>>> nextHops() {
        return Optional.ofNullable(this.nextHops);
    }

    /**
     * null0
     *   - Default value: `false`
     * 
     */
    @Import(name="null0")
    private @Nullable Output<Boolean> null0;

    /**
     * @return null0
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> null0() {
        return Optional.ofNullable(this.null0);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="null0Variable")
    private @Nullable Output<String> null0Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> null0Variable() {
        return Optional.ofNullable(this.null0Variable);
    }

    /**
     * Indicates if list item is considered optional.
     * 
     */
    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    /**
     * Prefix
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    /**
     * @return Prefix
     * 
     */
    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="prefixVariable")
    private @Nullable Output<String> prefixVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> prefixVariable() {
        return Optional.ofNullable(this.prefixVariable);
    }

    /**
     * Destination VPN(!=0 or !=512) to resolve the prefix
     *   - Default value: `0`
     * 
     */
    @Import(name="vpnId")
    private @Nullable Output<Integer> vpnId;

    /**
     * @return Destination VPN(!=0 or !=512) to resolve the prefix
     *   - Default value: `0`
     * 
     */
    public Optional<Output<Integer>> vpnId() {
        return Optional.ofNullable(this.vpnId);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="vpnIdVariable")
    private @Nullable Output<String> vpnIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> vpnIdVariable() {
        return Optional.ofNullable(this.vpnIdVariable);
    }

    private CiscoVpnFeatureTemplateIpv6StaticRouteArgs() {}

    private CiscoVpnFeatureTemplateIpv6StaticRouteArgs(CiscoVpnFeatureTemplateIpv6StaticRouteArgs $) {
        this.nat = $.nat;
        this.natVariable = $.natVariable;
        this.nextHops = $.nextHops;
        this.null0 = $.null0;
        this.null0Variable = $.null0Variable;
        this.optional = $.optional;
        this.prefix = $.prefix;
        this.prefixVariable = $.prefixVariable;
        this.vpnId = $.vpnId;
        this.vpnIdVariable = $.vpnIdVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CiscoVpnFeatureTemplateIpv6StaticRouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CiscoVpnFeatureTemplateIpv6StaticRouteArgs $;

        public Builder() {
            $ = new CiscoVpnFeatureTemplateIpv6StaticRouteArgs();
        }

        public Builder(CiscoVpnFeatureTemplateIpv6StaticRouteArgs defaults) {
            $ = new CiscoVpnFeatureTemplateIpv6StaticRouteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param nat NAT
         *   - Choices: `NAT64`, `NAT66`
         *   - Default value: `NAT64`
         * 
         * @return builder
         * 
         */
        public Builder nat(@Nullable Output<String> nat) {
            $.nat = nat;
            return this;
        }

        /**
         * @param nat NAT
         *   - Choices: `NAT64`, `NAT66`
         *   - Default value: `NAT64`
         * 
         * @return builder
         * 
         */
        public Builder nat(String nat) {
            return nat(Output.of(nat));
        }

        /**
         * @param natVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natVariable(@Nullable Output<String> natVariable) {
            $.natVariable = natVariable;
            return this;
        }

        /**
         * @param natVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natVariable(String natVariable) {
            return natVariable(Output.of(natVariable));
        }

        /**
         * @param nextHops IP gateway address
         * 
         * @return builder
         * 
         */
        public Builder nextHops(@Nullable Output<List<CiscoVpnFeatureTemplateIpv6StaticRouteNextHopArgs>> nextHops) {
            $.nextHops = nextHops;
            return this;
        }

        /**
         * @param nextHops IP gateway address
         * 
         * @return builder
         * 
         */
        public Builder nextHops(List<CiscoVpnFeatureTemplateIpv6StaticRouteNextHopArgs> nextHops) {
            return nextHops(Output.of(nextHops));
        }

        /**
         * @param nextHops IP gateway address
         * 
         * @return builder
         * 
         */
        public Builder nextHops(CiscoVpnFeatureTemplateIpv6StaticRouteNextHopArgs... nextHops) {
            return nextHops(List.of(nextHops));
        }

        /**
         * @param null0 null0
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder null0(@Nullable Output<Boolean> null0) {
            $.null0 = null0;
            return this;
        }

        /**
         * @param null0 null0
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder null0(Boolean null0) {
            return null0(Output.of(null0));
        }

        /**
         * @param null0Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder null0Variable(@Nullable Output<String> null0Variable) {
            $.null0Variable = null0Variable;
            return this;
        }

        /**
         * @param null0Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder null0Variable(String null0Variable) {
            return null0Variable(Output.of(null0Variable));
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        /**
         * @param prefix Prefix
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix Prefix
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param prefixVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder prefixVariable(@Nullable Output<String> prefixVariable) {
            $.prefixVariable = prefixVariable;
            return this;
        }

        /**
         * @param prefixVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder prefixVariable(String prefixVariable) {
            return prefixVariable(Output.of(prefixVariable));
        }

        /**
         * @param vpnId Destination VPN(!=0 or !=512) to resolve the prefix
         *   - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder vpnId(@Nullable Output<Integer> vpnId) {
            $.vpnId = vpnId;
            return this;
        }

        /**
         * @param vpnId Destination VPN(!=0 or !=512) to resolve the prefix
         *   - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder vpnId(Integer vpnId) {
            return vpnId(Output.of(vpnId));
        }

        /**
         * @param vpnIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vpnIdVariable(@Nullable Output<String> vpnIdVariable) {
            $.vpnIdVariable = vpnIdVariable;
            return this;
        }

        /**
         * @param vpnIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vpnIdVariable(String vpnIdVariable) {
            return vpnIdVariable(Output.of(vpnIdVariable));
        }

        public CiscoVpnFeatureTemplateIpv6StaticRouteArgs build() {
            return $;
        }
    }

}
