// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceSwitchportFeatureStaticMacAddressArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceSwitchportFeatureStaticMacAddressArgs Empty = new ServiceSwitchportFeatureStaticMacAddressArgs();

    /**
     * Interface name: GigabitEthernet0/&lt;&gt;/&lt;&gt;
     * 
     */
    @Import(name="interfaceName")
    private @Nullable Output<String> interfaceName;

    /**
     * @return Interface name: GigabitEthernet0/&lt;&gt;/&lt;&gt;
     * 
     */
    public Optional<Output<String>> interfaceName() {
        return Optional.ofNullable(this.interfaceName);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceNameVariable")
    private @Nullable Output<String> interfaceNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceNameVariable() {
        return Optional.ofNullable(this.interfaceNameVariable);
    }

    /**
     * Set MAC address in xxxx.xxxx.xxxx format
     * 
     */
    @Import(name="macAddress")
    private @Nullable Output<String> macAddress;

    /**
     * @return Set MAC address in xxxx.xxxx.xxxx format
     * 
     */
    public Optional<Output<String>> macAddress() {
        return Optional.ofNullable(this.macAddress);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="macAddressVariable")
    private @Nullable Output<String> macAddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> macAddressVariable() {
        return Optional.ofNullable(this.macAddressVariable);
    }

    /**
     * Configure VLAN ID used with the mac and interface
     *   - Range: `1`-`4094`
     * 
     */
    @Import(name="vlanId")
    private @Nullable Output<Integer> vlanId;

    /**
     * @return Configure VLAN ID used with the mac and interface
     *   - Range: `1`-`4094`
     * 
     */
    public Optional<Output<Integer>> vlanId() {
        return Optional.ofNullable(this.vlanId);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="vlanIdVariable")
    private @Nullable Output<String> vlanIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> vlanIdVariable() {
        return Optional.ofNullable(this.vlanIdVariable);
    }

    private ServiceSwitchportFeatureStaticMacAddressArgs() {}

    private ServiceSwitchportFeatureStaticMacAddressArgs(ServiceSwitchportFeatureStaticMacAddressArgs $) {
        this.interfaceName = $.interfaceName;
        this.interfaceNameVariable = $.interfaceNameVariable;
        this.macAddress = $.macAddress;
        this.macAddressVariable = $.macAddressVariable;
        this.vlanId = $.vlanId;
        this.vlanIdVariable = $.vlanIdVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceSwitchportFeatureStaticMacAddressArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceSwitchportFeatureStaticMacAddressArgs $;

        public Builder() {
            $ = new ServiceSwitchportFeatureStaticMacAddressArgs();
        }

        public Builder(ServiceSwitchportFeatureStaticMacAddressArgs defaults) {
            $ = new ServiceSwitchportFeatureStaticMacAddressArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param interfaceName Interface name: GigabitEthernet0/&lt;&gt;/&lt;&gt;
         * 
         * @return builder
         * 
         */
        public Builder interfaceName(@Nullable Output<String> interfaceName) {
            $.interfaceName = interfaceName;
            return this;
        }

        /**
         * @param interfaceName Interface name: GigabitEthernet0/&lt;&gt;/&lt;&gt;
         * 
         * @return builder
         * 
         */
        public Builder interfaceName(String interfaceName) {
            return interfaceName(Output.of(interfaceName));
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(@Nullable Output<String> interfaceNameVariable) {
            $.interfaceNameVariable = interfaceNameVariable;
            return this;
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(String interfaceNameVariable) {
            return interfaceNameVariable(Output.of(interfaceNameVariable));
        }

        /**
         * @param macAddress Set MAC address in xxxx.xxxx.xxxx format
         * 
         * @return builder
         * 
         */
        public Builder macAddress(@Nullable Output<String> macAddress) {
            $.macAddress = macAddress;
            return this;
        }

        /**
         * @param macAddress Set MAC address in xxxx.xxxx.xxxx format
         * 
         * @return builder
         * 
         */
        public Builder macAddress(String macAddress) {
            return macAddress(Output.of(macAddress));
        }

        /**
         * @param macAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder macAddressVariable(@Nullable Output<String> macAddressVariable) {
            $.macAddressVariable = macAddressVariable;
            return this;
        }

        /**
         * @param macAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder macAddressVariable(String macAddressVariable) {
            return macAddressVariable(Output.of(macAddressVariable));
        }

        /**
         * @param vlanId Configure VLAN ID used with the mac and interface
         *   - Range: `1`-`4094`
         * 
         * @return builder
         * 
         */
        public Builder vlanId(@Nullable Output<Integer> vlanId) {
            $.vlanId = vlanId;
            return this;
        }

        /**
         * @param vlanId Configure VLAN ID used with the mac and interface
         *   - Range: `1`-`4094`
         * 
         * @return builder
         * 
         */
        public Builder vlanId(Integer vlanId) {
            return vlanId(Output.of(vlanId));
        }

        /**
         * @param vlanIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vlanIdVariable(@Nullable Output<String> vlanIdVariable) {
            $.vlanIdVariable = vlanIdVariable;
            return this;
        }

        /**
         * @param vlanIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vlanIdVariable(String vlanIdVariable) {
            return vlanIdVariable(Output.of(vlanIdVariable));
        }

        public ServiceSwitchportFeatureStaticMacAddressArgs build() {
            return $;
        }
    }

}
