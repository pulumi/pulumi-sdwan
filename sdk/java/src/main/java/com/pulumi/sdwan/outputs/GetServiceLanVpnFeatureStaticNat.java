// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServiceLanVpnFeatureStaticNat {
    /**
     * @return NAT Pool Name
     * 
     */
    private Integer natPoolName;
    /**
     * @return Variable name
     * 
     */
    private String natPoolNameVariable;
    /**
     * @return Source IP Address
     * 
     */
    private String sourceIp;
    /**
     * @return Variable name
     * 
     */
    private String sourceIpVariable;
    /**
     * @return Static NAT Direction
     * 
     */
    private String staticNatDirection;
    /**
     * @return Variable name
     * 
     */
    private String staticNatDirectionVariable;
    private String trackerObjectId;
    /**
     * @return Translated Source IP Address
     * 
     */
    private String translatedSourceIp;
    /**
     * @return Variable name
     * 
     */
    private String translatedSourceIpVariable;

    private GetServiceLanVpnFeatureStaticNat() {}
    /**
     * @return NAT Pool Name
     * 
     */
    public Integer natPoolName() {
        return this.natPoolName;
    }
    /**
     * @return Variable name
     * 
     */
    public String natPoolNameVariable() {
        return this.natPoolNameVariable;
    }
    /**
     * @return Source IP Address
     * 
     */
    public String sourceIp() {
        return this.sourceIp;
    }
    /**
     * @return Variable name
     * 
     */
    public String sourceIpVariable() {
        return this.sourceIpVariable;
    }
    /**
     * @return Static NAT Direction
     * 
     */
    public String staticNatDirection() {
        return this.staticNatDirection;
    }
    /**
     * @return Variable name
     * 
     */
    public String staticNatDirectionVariable() {
        return this.staticNatDirectionVariable;
    }
    public String trackerObjectId() {
        return this.trackerObjectId;
    }
    /**
     * @return Translated Source IP Address
     * 
     */
    public String translatedSourceIp() {
        return this.translatedSourceIp;
    }
    /**
     * @return Variable name
     * 
     */
    public String translatedSourceIpVariable() {
        return this.translatedSourceIpVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceLanVpnFeatureStaticNat defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer natPoolName;
        private String natPoolNameVariable;
        private String sourceIp;
        private String sourceIpVariable;
        private String staticNatDirection;
        private String staticNatDirectionVariable;
        private String trackerObjectId;
        private String translatedSourceIp;
        private String translatedSourceIpVariable;
        public Builder() {}
        public Builder(GetServiceLanVpnFeatureStaticNat defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.natPoolName = defaults.natPoolName;
    	      this.natPoolNameVariable = defaults.natPoolNameVariable;
    	      this.sourceIp = defaults.sourceIp;
    	      this.sourceIpVariable = defaults.sourceIpVariable;
    	      this.staticNatDirection = defaults.staticNatDirection;
    	      this.staticNatDirectionVariable = defaults.staticNatDirectionVariable;
    	      this.trackerObjectId = defaults.trackerObjectId;
    	      this.translatedSourceIp = defaults.translatedSourceIp;
    	      this.translatedSourceIpVariable = defaults.translatedSourceIpVariable;
        }

        @CustomType.Setter
        public Builder natPoolName(Integer natPoolName) {
            if (natPoolName == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureStaticNat", "natPoolName");
            }
            this.natPoolName = natPoolName;
            return this;
        }
        @CustomType.Setter
        public Builder natPoolNameVariable(String natPoolNameVariable) {
            if (natPoolNameVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureStaticNat", "natPoolNameVariable");
            }
            this.natPoolNameVariable = natPoolNameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder sourceIp(String sourceIp) {
            if (sourceIp == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureStaticNat", "sourceIp");
            }
            this.sourceIp = sourceIp;
            return this;
        }
        @CustomType.Setter
        public Builder sourceIpVariable(String sourceIpVariable) {
            if (sourceIpVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureStaticNat", "sourceIpVariable");
            }
            this.sourceIpVariable = sourceIpVariable;
            return this;
        }
        @CustomType.Setter
        public Builder staticNatDirection(String staticNatDirection) {
            if (staticNatDirection == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureStaticNat", "staticNatDirection");
            }
            this.staticNatDirection = staticNatDirection;
            return this;
        }
        @CustomType.Setter
        public Builder staticNatDirectionVariable(String staticNatDirectionVariable) {
            if (staticNatDirectionVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureStaticNat", "staticNatDirectionVariable");
            }
            this.staticNatDirectionVariable = staticNatDirectionVariable;
            return this;
        }
        @CustomType.Setter
        public Builder trackerObjectId(String trackerObjectId) {
            if (trackerObjectId == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureStaticNat", "trackerObjectId");
            }
            this.trackerObjectId = trackerObjectId;
            return this;
        }
        @CustomType.Setter
        public Builder translatedSourceIp(String translatedSourceIp) {
            if (translatedSourceIp == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureStaticNat", "translatedSourceIp");
            }
            this.translatedSourceIp = translatedSourceIp;
            return this;
        }
        @CustomType.Setter
        public Builder translatedSourceIpVariable(String translatedSourceIpVariable) {
            if (translatedSourceIpVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceLanVpnFeatureStaticNat", "translatedSourceIpVariable");
            }
            this.translatedSourceIpVariable = translatedSourceIpVariable;
            return this;
        }
        public GetServiceLanVpnFeatureStaticNat build() {
            final var _resultValue = new GetServiceLanVpnFeatureStaticNat();
            _resultValue.natPoolName = natPoolName;
            _resultValue.natPoolNameVariable = natPoolNameVariable;
            _resultValue.sourceIp = sourceIp;
            _resultValue.sourceIpVariable = sourceIpVariable;
            _resultValue.staticNatDirection = staticNatDirection;
            _resultValue.staticNatDirectionVariable = staticNatDirectionVariable;
            _resultValue.trackerObjectId = trackerObjectId;
            _resultValue.translatedSourceIp = translatedSourceIp;
            _resultValue.translatedSourceIpVariable = translatedSourceIpVariable;
            return _resultValue;
        }
    }
}
