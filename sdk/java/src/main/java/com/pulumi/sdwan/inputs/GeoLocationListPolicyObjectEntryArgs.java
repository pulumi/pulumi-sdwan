// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GeoLocationListPolicyObjectEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final GeoLocationListPolicyObjectEntryArgs Empty = new GeoLocationListPolicyObjectEntryArgs();

    /**
     * Continent
     *   - Choices: `AF`, `AN`, `AS`, `EU`, `NA`, `OC`, `SA`
     * 
     */
    @Import(name="continent")
    private @Nullable Output<String> continent;

    /**
     * @return Continent
     *   - Choices: `AF`, `AN`, `AS`, `EU`, `NA`, `OC`, `SA`
     * 
     */
    public Optional<Output<String>> continent() {
        return Optional.ofNullable(this.continent);
    }

    /**
     * Country
     * 
     */
    @Import(name="country")
    private @Nullable Output<String> country;

    /**
     * @return Country
     * 
     */
    public Optional<Output<String>> country() {
        return Optional.ofNullable(this.country);
    }

    private GeoLocationListPolicyObjectEntryArgs() {}

    private GeoLocationListPolicyObjectEntryArgs(GeoLocationListPolicyObjectEntryArgs $) {
        this.continent = $.continent;
        this.country = $.country;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GeoLocationListPolicyObjectEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GeoLocationListPolicyObjectEntryArgs $;

        public Builder() {
            $ = new GeoLocationListPolicyObjectEntryArgs();
        }

        public Builder(GeoLocationListPolicyObjectEntryArgs defaults) {
            $ = new GeoLocationListPolicyObjectEntryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param continent Continent
         *   - Choices: `AF`, `AN`, `AS`, `EU`, `NA`, `OC`, `SA`
         * 
         * @return builder
         * 
         */
        public Builder continent(@Nullable Output<String> continent) {
            $.continent = continent;
            return this;
        }

        /**
         * @param continent Continent
         *   - Choices: `AF`, `AN`, `AS`, `EU`, `NA`, `OC`, `SA`
         * 
         * @return builder
         * 
         */
        public Builder continent(String continent) {
            return continent(Output.of(continent));
        }

        /**
         * @param country Country
         * 
         * @return builder
         * 
         */
        public Builder country(@Nullable Output<String> country) {
            $.country = country;
            return this;
        }

        /**
         * @param country Country
         * 
         * @return builder
         * 
         */
        public Builder country(String country) {
            return country(Output.of(country));
        }

        public GeoLocationListPolicyObjectEntryArgs build() {
            return $;
        }
    }

}
