// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.ServiceLanVpnInterfaceSviFeatureArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.ServiceLanVpnInterfaceSviFeatureState;
import com.pulumi.sdwan.outputs.ServiceLanVpnInterfaceSviFeatureArp;
import com.pulumi.sdwan.outputs.ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddress;
import com.pulumi.sdwan.outputs.ServiceLanVpnInterfaceSviFeatureIpv4Vrrp;
import com.pulumi.sdwan.outputs.ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelper;
import com.pulumi.sdwan.outputs.ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddress;
import com.pulumi.sdwan.outputs.ServiceLanVpnInterfaceSviFeatureIpv6Vrrp;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Service LAN VPN Interface SVI Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * Expected import identifier with the format: &#34;service_lan_vpn_interface_svi_feature_id,feature_profile_id,service_lan_vpn_feature_id&#34;
 * 
 * ```sh
 * $ pulumi import sdwan:index/serviceLanVpnInterfaceSviFeature:ServiceLanVpnInterfaceSviFeature example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/serviceLanVpnInterfaceSviFeature:ServiceLanVpnInterfaceSviFeature")
public class ServiceLanVpnInterfaceSviFeature extends com.pulumi.resources.CustomResource {
    @Export(name="aclIpv4EgressFeatureId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> aclIpv4EgressFeatureId;

    public Output<Optional<String>> aclIpv4EgressFeatureId() {
        return Codegen.optional(this.aclIpv4EgressFeatureId);
    }
    @Export(name="aclIpv4IngressFeatureId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> aclIpv4IngressFeatureId;

    public Output<Optional<String>> aclIpv4IngressFeatureId() {
        return Codegen.optional(this.aclIpv4IngressFeatureId);
    }
    @Export(name="aclIpv6EgressFeatureId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> aclIpv6EgressFeatureId;

    public Output<Optional<String>> aclIpv6EgressFeatureId() {
        return Codegen.optional(this.aclIpv6EgressFeatureId);
    }
    @Export(name="aclIpv6IngressFeatureId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> aclIpv6IngressFeatureId;

    public Output<Optional<String>> aclIpv6IngressFeatureId() {
        return Codegen.optional(this.aclIpv6IngressFeatureId);
    }
    /**
     * Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds
     *   - Range: `0`-`2678400`
     *   - Default value: `1200`
     * 
     */
    @Export(name="arpTimeout", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> arpTimeout;

    /**
     * @return Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds
     *   - Range: `0`-`2678400`
     *   - Default value: `1200`
     * 
     */
    public Output<Optional<Integer>> arpTimeout() {
        return Codegen.optional(this.arpTimeout);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="arpTimeoutVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> arpTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> arpTimeoutVariable() {
        return Codegen.optional(this.arpTimeoutVariable);
    }
    /**
     * Configure static ARP entries
     * 
     */
    @Export(name="arps", refs={List.class,ServiceLanVpnInterfaceSviFeatureArp.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnInterfaceSviFeatureArp>> arps;

    /**
     * @return Configure static ARP entries
     * 
     */
    public Output<Optional<List<ServiceLanVpnInterfaceSviFeatureArp>>> arps() {
        return Codegen.optional(this.arps);
    }
    /**
     * The description of the Feature
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Enable DHCPv6
     *   - Default value: `false`
     * 
     */
    @Export(name="enableDhcpv6", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableDhcpv6;

    /**
     * @return Enable DHCPv6
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> enableDhcpv6() {
        return Codegen.optional(this.enableDhcpv6);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="enableDhcpv6Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> enableDhcpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> enableDhcpv6Variable() {
        return Codegen.optional(this.enableDhcpv6Variable);
    }
    /**
     * Feature Profile ID
     * 
     */
    @Export(name="featureProfileId", refs={String.class}, tree="[0]")
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * ICMP/ICMPv6 Redirect Disable
     *   - Default value: `true`
     * 
     */
    @Export(name="icmpRedirectDisable", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> icmpRedirectDisable;

    /**
     * @return ICMP/ICMPv6 Redirect Disable
     *   - Default value: `true`
     * 
     */
    public Output<Optional<Boolean>> icmpRedirectDisable() {
        return Codegen.optional(this.icmpRedirectDisable);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="icmpRedirectDisableVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> icmpRedirectDisableVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> icmpRedirectDisableVariable() {
        return Codegen.optional(this.icmpRedirectDisableVariable);
    }
    /**
     * Interface description
     * 
     */
    @Export(name="interfaceDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceDescription;

    /**
     * @return Interface description
     * 
     */
    public Output<Optional<String>> interfaceDescription() {
        return Codegen.optional(this.interfaceDescription);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="interfaceDescriptionVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceDescriptionVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> interfaceDescriptionVariable() {
        return Codegen.optional(this.interfaceDescriptionVariable);
    }
    /**
     * Interface MTU &lt;1500..9216&gt; in bytes
     *   - Range: `1500`-`9216`
     *   - Default value: `1500`
     * 
     */
    @Export(name="interfaceMtu", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> interfaceMtu;

    /**
     * @return Interface MTU &lt;1500..9216&gt; in bytes
     *   - Range: `1500`-`9216`
     *   - Default value: `1500`
     * 
     */
    public Output<Optional<Integer>> interfaceMtu() {
        return Codegen.optional(this.interfaceMtu);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="interfaceMtuVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> interfaceMtuVariable() {
        return Codegen.optional(this.interfaceMtuVariable);
    }
    /**
     * Interface name: VLAN 1 - VLAN 4094 when present
     * 
     */
    @Export(name="interfaceName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceName;

    /**
     * @return Interface name: VLAN 1 - VLAN 4094 when present
     * 
     */
    public Output<Optional<String>> interfaceName() {
        return Codegen.optional(this.interfaceName);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="interfaceNameVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> interfaceNameVariable() {
        return Codegen.optional(this.interfaceNameVariable);
    }
    /**
     * IP Directed-Broadcast
     *   - Default value: `false`
     * 
     */
    @Export(name="ipDirectedBroadcast", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipDirectedBroadcast;

    /**
     * @return IP Directed-Broadcast
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> ipDirectedBroadcast() {
        return Codegen.optional(this.ipDirectedBroadcast);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipDirectedBroadcastVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipDirectedBroadcastVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipDirectedBroadcastVariable() {
        return Codegen.optional(this.ipDirectedBroadcastVariable);
    }
    /**
     * IP MTU &lt;576..Interface MTU&gt;, in bytes
     *   - Range: `576`-`9216`
     *   - Default value: `1500`
     * 
     */
    @Export(name="ipMtu", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipMtu;

    /**
     * @return IP MTU &lt;576..Interface MTU&gt;, in bytes
     *   - Range: `576`-`9216`
     *   - Default value: `1500`
     * 
     */
    public Output<Optional<Integer>> ipMtu() {
        return Codegen.optional(this.ipMtu);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipMtuVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipMtuVariable() {
        return Codegen.optional(this.ipMtuVariable);
    }
    /**
     * IP Address
     * 
     */
    @Export(name="ipv4Address", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4Address;

    /**
     * @return IP Address
     * 
     */
    public Output<Optional<String>> ipv4Address() {
        return Codegen.optional(this.ipv4Address);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4AddressVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4AddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4AddressVariable() {
        return Codegen.optional(this.ipv4AddressVariable);
    }
    /**
     * List of DHCP helper addresses
     * 
     */
    @Export(name="ipv4DhcpHelpers", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> ipv4DhcpHelpers;

    /**
     * @return List of DHCP helper addresses
     * 
     */
    public Output<Optional<List<String>>> ipv4DhcpHelpers() {
        return Codegen.optional(this.ipv4DhcpHelpers);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4DhcpHelpersVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4DhcpHelpersVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4DhcpHelpersVariable() {
        return Codegen.optional(this.ipv4DhcpHelpersVariable);
    }
    /**
     * Assign secondary IP addresses
     * 
     */
    @Export(name="ipv4SecondaryAddresses", refs={List.class,ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddress.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddress>> ipv4SecondaryAddresses;

    /**
     * @return Assign secondary IP addresses
     * 
     */
    public Output<Optional<List<ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddress>>> ipv4SecondaryAddresses() {
        return Codegen.optional(this.ipv4SecondaryAddresses);
    }
    /**
     * Subnet Mask
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     * 
     */
    @Export(name="ipv4SubnetMask", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4SubnetMask;

    /**
     * @return Subnet Mask
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     * 
     */
    public Output<Optional<String>> ipv4SubnetMask() {
        return Codegen.optional(this.ipv4SubnetMask);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4SubnetMaskVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4SubnetMaskVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4SubnetMaskVariable() {
        return Codegen.optional(this.ipv4SubnetMaskVariable);
    }
    /**
     * Enable ipv4 VRRP
     * 
     */
    @Export(name="ipv4Vrrps", refs={List.class,ServiceLanVpnInterfaceSviFeatureIpv4Vrrp.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnInterfaceSviFeatureIpv4Vrrp>> ipv4Vrrps;

    /**
     * @return Enable ipv4 VRRP
     * 
     */
    public Output<Optional<List<ServiceLanVpnInterfaceSviFeatureIpv4Vrrp>>> ipv4Vrrps() {
        return Codegen.optional(this.ipv4Vrrps);
    }
    /**
     * Assign IPv6 address
     * 
     */
    @Export(name="ipv6Address", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6Address;

    /**
     * @return Assign IPv6 address
     * 
     */
    public Output<Optional<String>> ipv6Address() {
        return Codegen.optional(this.ipv6Address);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6AddressVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6AddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6AddressVariable() {
        return Codegen.optional(this.ipv6AddressVariable);
    }
    /**
     * DHCPv6 Helper
     * 
     */
    @Export(name="ipv6DhcpHelpers", refs={List.class,ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelper.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelper>> ipv6DhcpHelpers;

    /**
     * @return DHCPv6 Helper
     * 
     */
    public Output<Optional<List<ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelper>>> ipv6DhcpHelpers() {
        return Codegen.optional(this.ipv6DhcpHelpers);
    }
    /**
     * Assign secondary IPv6 addresses
     * 
     */
    @Export(name="ipv6SecondaryAddresses", refs={List.class,ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddress.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddress>> ipv6SecondaryAddresses;

    /**
     * @return Assign secondary IPv6 addresses
     * 
     */
    public Output<Optional<List<ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddress>>> ipv6SecondaryAddresses() {
        return Codegen.optional(this.ipv6SecondaryAddresses);
    }
    /**
     * Enable ipv6 VRRP
     * 
     */
    @Export(name="ipv6Vrrps", refs={List.class,ServiceLanVpnInterfaceSviFeatureIpv6Vrrp.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceLanVpnInterfaceSviFeatureIpv6Vrrp>> ipv6Vrrps;

    /**
     * @return Enable ipv6 VRRP
     * 
     */
    public Output<Optional<List<ServiceLanVpnInterfaceSviFeatureIpv6Vrrp>>> ipv6Vrrps() {
        return Codegen.optional(this.ipv6Vrrps);
    }
    /**
     * The name of the Feature
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Service LAN VPN Feature ID
     * 
     */
    @Export(name="serviceLanVpnFeatureId", refs={String.class}, tree="[0]")
    private Output<String> serviceLanVpnFeatureId;

    /**
     * @return Service LAN VPN Feature ID
     * 
     */
    public Output<String> serviceLanVpnFeatureId() {
        return this.serviceLanVpnFeatureId;
    }
    /**
     * Administrative state
     *   - Default value: `true`
     * 
     */
    @Export(name="shutdown", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> shutdown;

    /**
     * @return Administrative state
     *   - Default value: `true`
     * 
     */
    public Output<Optional<Boolean>> shutdown() {
        return Codegen.optional(this.shutdown);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="shutdownVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> shutdownVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> shutdownVariable() {
        return Codegen.optional(this.shutdownVariable);
    }
    /**
     * TCP MSS on SYN packets, in bytes
     *   - Range: `552`-`1960`
     * 
     */
    @Export(name="tcpMss", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tcpMss;

    /**
     * @return TCP MSS on SYN packets, in bytes
     *   - Range: `552`-`1960`
     * 
     */
    public Output<Optional<Integer>> tcpMss() {
        return Codegen.optional(this.tcpMss);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tcpMssVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tcpMssVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tcpMssVariable() {
        return Codegen.optional(this.tcpMssVariable);
    }
    /**
     * The version of the Feature
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the Feature
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServiceLanVpnInterfaceSviFeature(java.lang.String name) {
        this(name, ServiceLanVpnInterfaceSviFeatureArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServiceLanVpnInterfaceSviFeature(java.lang.String name, ServiceLanVpnInterfaceSviFeatureArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServiceLanVpnInterfaceSviFeature(java.lang.String name, ServiceLanVpnInterfaceSviFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/serviceLanVpnInterfaceSviFeature:ServiceLanVpnInterfaceSviFeature", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ServiceLanVpnInterfaceSviFeature(java.lang.String name, Output<java.lang.String> id, @Nullable ServiceLanVpnInterfaceSviFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/serviceLanVpnInterfaceSviFeature:ServiceLanVpnInterfaceSviFeature", name, state, makeResourceOptions(options, id), false);
    }

    private static ServiceLanVpnInterfaceSviFeatureArgs makeArgs(ServiceLanVpnInterfaceSviFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ServiceLanVpnInterfaceSviFeatureArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServiceLanVpnInterfaceSviFeature get(java.lang.String name, Output<java.lang.String> id, @Nullable ServiceLanVpnInterfaceSviFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServiceLanVpnInterfaceSviFeature(name, id, state, options);
    }
}
