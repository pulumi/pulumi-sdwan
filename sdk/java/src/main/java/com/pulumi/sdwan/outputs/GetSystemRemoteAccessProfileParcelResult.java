// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSystemRemoteAccessProfileParcelResult {
    private String aaaDeriveNameDomain;
    /**
     * @return Variable name
     * 
     */
    private String aaaDeriveNameDomainVariable;
    private String aaaDeriveNameIdentity;
    /**
     * @return Variable name
     * 
     */
    private String aaaDeriveNameIdentityVariable;
    /**
     * @return Enable Accounting
     * 
     */
    private Boolean aaaEnableAccounting;
    /**
     * @return Variable name
     * 
     */
    private String aaaEnableAccountingVariable;
    private String aaaSpecifyNamePolicyName;
    /**
     * @return Variable name
     * 
     */
    private String aaaSpecifyNamePolicyNameVariable;
    private String aaaSpecifyNamePolicyPassword;
    /**
     * @return Variable name
     * 
     */
    private String aaaSpecifyNamePolicyPasswordVariable;
    private String anyConnectEapAuthenticationType;
    private String anyConnectEapProfileDownloadStatus;
    /**
     * @return Variable name
     * 
     */
    private String anyConnectEapProfileDownloadStatusVariable;
    private String anyConnectEapProfileFileName;
    /**
     * @return Variable name
     * 
     */
    private String anyConnectEapProfileFileNameVariable;
    /**
     * @return Enabled SSL VPN
     * 
     */
    private Boolean connectionTypeSsl;
    /**
     * @return The description of the profile parcel
     * 
     */
    private String description;
    private Boolean enableCrlCheck;
    /**
     * @return Variable name
     * 
     */
    private String enableCrlCheckVariable;
    /**
     * @return Feature Profile ID
     * 
     */
    private String featureProfileId;
    /**
     * @return The id of the profile parcel
     * 
     */
    private String id;
    /**
     * @return Anti-DOS Threshold
     * 
     */
    private Integer ikev2AntiDosThreshold;
    /**
     * @return Variable name
     * 
     */
    private String ikev2AntiDosThresholdVariable;
    private String ikev2LocalIkeIdentityType;
    /**
     * @return Variable name
     * 
     */
    private String ikev2LocalIkeIdentityTypeVariable;
    private String ikev2LocalIkeIdentityValue;
    /**
     * @return Variable name
     * 
     */
    private String ikev2LocalIkeIdentityValueVariable;
    /**
     * @return Security Association Lifetime in Seconds
     * 
     */
    private Integer ikev2SecurityAssociationLifetime;
    /**
     * @return Variable name
     * 
     */
    private String ikev2SecurityAssociationLifetimeVariable;
    /**
     * @return security Association Lifetime
     * 
     */
    private Integer ipsecAntiReplayWindowSize;
    /**
     * @return Variable name
     * 
     */
    private String ipsecAntiReplayWindowSizeVariable;
    /**
     * @return Enable Anti-Replay
     * 
     */
    private Boolean ipsecEnableAntiReplay;
    /**
     * @return Variable name
     * 
     */
    private String ipsecEnableAntiReplayVariable;
    /**
     * @return security Association Lifetime
     * 
     */
    private Boolean ipsecEnablePerfectFowardSecrecy;
    /**
     * @return Variable name
     * 
     */
    private String ipsecEnablePerfectFowardSecrecyVariable;
    /**
     * @return Security Association Lifetime in Seconds
     * 
     */
    private Integer ipsecSecurityAssociationLifetime;
    /**
     * @return Variable name
     * 
     */
    private String ipsecSecurityAssociationLifetimeVariable;
    /**
     * @return IPv4 Pool Size
     * 
     */
    private Integer ipv4PoolSize;
    /**
     * @return Variable name
     * 
     */
    private String ipv4PoolSizeVariable;
    /**
     * @return IPv6 Pool Size
     * 
     */
    private Integer ipv6PoolSize;
    /**
     * @return Variable name
     * 
     */
    private String ipv6PoolSizeVariable;
    /**
     * @return The name of the profile parcel
     * 
     */
    private String name;
    /**
     * @return PSK Pre Shared Key
     * 
     */
    private String pskAuthenticationPreSharedKey;
    /**
     * @return Variable name
     * 
     */
    private String pskAuthenticationPreSharedKeyVariable;
    /**
     * @return PSK Selection
     * 
     */
    private String pskAuthenticationType;
    /**
     * @return Variable name
     * 
     */
    private String pskAuthenticationTypeVariable;
    private String radiusGroupName;
    /**
     * @return Variable name
     * 
     */
    private String radiusGroupNameVariable;
    /**
     * @return The version of the profile parcel
     * 
     */
    private Integer version;

    private GetSystemRemoteAccessProfileParcelResult() {}
    public String aaaDeriveNameDomain() {
        return this.aaaDeriveNameDomain;
    }
    /**
     * @return Variable name
     * 
     */
    public String aaaDeriveNameDomainVariable() {
        return this.aaaDeriveNameDomainVariable;
    }
    public String aaaDeriveNameIdentity() {
        return this.aaaDeriveNameIdentity;
    }
    /**
     * @return Variable name
     * 
     */
    public String aaaDeriveNameIdentityVariable() {
        return this.aaaDeriveNameIdentityVariable;
    }
    /**
     * @return Enable Accounting
     * 
     */
    public Boolean aaaEnableAccounting() {
        return this.aaaEnableAccounting;
    }
    /**
     * @return Variable name
     * 
     */
    public String aaaEnableAccountingVariable() {
        return this.aaaEnableAccountingVariable;
    }
    public String aaaSpecifyNamePolicyName() {
        return this.aaaSpecifyNamePolicyName;
    }
    /**
     * @return Variable name
     * 
     */
    public String aaaSpecifyNamePolicyNameVariable() {
        return this.aaaSpecifyNamePolicyNameVariable;
    }
    public String aaaSpecifyNamePolicyPassword() {
        return this.aaaSpecifyNamePolicyPassword;
    }
    /**
     * @return Variable name
     * 
     */
    public String aaaSpecifyNamePolicyPasswordVariable() {
        return this.aaaSpecifyNamePolicyPasswordVariable;
    }
    public String anyConnectEapAuthenticationType() {
        return this.anyConnectEapAuthenticationType;
    }
    public String anyConnectEapProfileDownloadStatus() {
        return this.anyConnectEapProfileDownloadStatus;
    }
    /**
     * @return Variable name
     * 
     */
    public String anyConnectEapProfileDownloadStatusVariable() {
        return this.anyConnectEapProfileDownloadStatusVariable;
    }
    public String anyConnectEapProfileFileName() {
        return this.anyConnectEapProfileFileName;
    }
    /**
     * @return Variable name
     * 
     */
    public String anyConnectEapProfileFileNameVariable() {
        return this.anyConnectEapProfileFileNameVariable;
    }
    /**
     * @return Enabled SSL VPN
     * 
     */
    public Boolean connectionTypeSsl() {
        return this.connectionTypeSsl;
    }
    /**
     * @return The description of the profile parcel
     * 
     */
    public String description() {
        return this.description;
    }
    public Boolean enableCrlCheck() {
        return this.enableCrlCheck;
    }
    /**
     * @return Variable name
     * 
     */
    public String enableCrlCheckVariable() {
        return this.enableCrlCheckVariable;
    }
    /**
     * @return Feature Profile ID
     * 
     */
    public String featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * @return The id of the profile parcel
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Anti-DOS Threshold
     * 
     */
    public Integer ikev2AntiDosThreshold() {
        return this.ikev2AntiDosThreshold;
    }
    /**
     * @return Variable name
     * 
     */
    public String ikev2AntiDosThresholdVariable() {
        return this.ikev2AntiDosThresholdVariable;
    }
    public String ikev2LocalIkeIdentityType() {
        return this.ikev2LocalIkeIdentityType;
    }
    /**
     * @return Variable name
     * 
     */
    public String ikev2LocalIkeIdentityTypeVariable() {
        return this.ikev2LocalIkeIdentityTypeVariable;
    }
    public String ikev2LocalIkeIdentityValue() {
        return this.ikev2LocalIkeIdentityValue;
    }
    /**
     * @return Variable name
     * 
     */
    public String ikev2LocalIkeIdentityValueVariable() {
        return this.ikev2LocalIkeIdentityValueVariable;
    }
    /**
     * @return Security Association Lifetime in Seconds
     * 
     */
    public Integer ikev2SecurityAssociationLifetime() {
        return this.ikev2SecurityAssociationLifetime;
    }
    /**
     * @return Variable name
     * 
     */
    public String ikev2SecurityAssociationLifetimeVariable() {
        return this.ikev2SecurityAssociationLifetimeVariable;
    }
    /**
     * @return security Association Lifetime
     * 
     */
    public Integer ipsecAntiReplayWindowSize() {
        return this.ipsecAntiReplayWindowSize;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipsecAntiReplayWindowSizeVariable() {
        return this.ipsecAntiReplayWindowSizeVariable;
    }
    /**
     * @return Enable Anti-Replay
     * 
     */
    public Boolean ipsecEnableAntiReplay() {
        return this.ipsecEnableAntiReplay;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipsecEnableAntiReplayVariable() {
        return this.ipsecEnableAntiReplayVariable;
    }
    /**
     * @return security Association Lifetime
     * 
     */
    public Boolean ipsecEnablePerfectFowardSecrecy() {
        return this.ipsecEnablePerfectFowardSecrecy;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipsecEnablePerfectFowardSecrecyVariable() {
        return this.ipsecEnablePerfectFowardSecrecyVariable;
    }
    /**
     * @return Security Association Lifetime in Seconds
     * 
     */
    public Integer ipsecSecurityAssociationLifetime() {
        return this.ipsecSecurityAssociationLifetime;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipsecSecurityAssociationLifetimeVariable() {
        return this.ipsecSecurityAssociationLifetimeVariable;
    }
    /**
     * @return IPv4 Pool Size
     * 
     */
    public Integer ipv4PoolSize() {
        return this.ipv4PoolSize;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv4PoolSizeVariable() {
        return this.ipv4PoolSizeVariable;
    }
    /**
     * @return IPv6 Pool Size
     * 
     */
    public Integer ipv6PoolSize() {
        return this.ipv6PoolSize;
    }
    /**
     * @return Variable name
     * 
     */
    public String ipv6PoolSizeVariable() {
        return this.ipv6PoolSizeVariable;
    }
    /**
     * @return The name of the profile parcel
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return PSK Pre Shared Key
     * 
     */
    public String pskAuthenticationPreSharedKey() {
        return this.pskAuthenticationPreSharedKey;
    }
    /**
     * @return Variable name
     * 
     */
    public String pskAuthenticationPreSharedKeyVariable() {
        return this.pskAuthenticationPreSharedKeyVariable;
    }
    /**
     * @return PSK Selection
     * 
     */
    public String pskAuthenticationType() {
        return this.pskAuthenticationType;
    }
    /**
     * @return Variable name
     * 
     */
    public String pskAuthenticationTypeVariable() {
        return this.pskAuthenticationTypeVariable;
    }
    public String radiusGroupName() {
        return this.radiusGroupName;
    }
    /**
     * @return Variable name
     * 
     */
    public String radiusGroupNameVariable() {
        return this.radiusGroupNameVariable;
    }
    /**
     * @return The version of the profile parcel
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSystemRemoteAccessProfileParcelResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String aaaDeriveNameDomain;
        private String aaaDeriveNameDomainVariable;
        private String aaaDeriveNameIdentity;
        private String aaaDeriveNameIdentityVariable;
        private Boolean aaaEnableAccounting;
        private String aaaEnableAccountingVariable;
        private String aaaSpecifyNamePolicyName;
        private String aaaSpecifyNamePolicyNameVariable;
        private String aaaSpecifyNamePolicyPassword;
        private String aaaSpecifyNamePolicyPasswordVariable;
        private String anyConnectEapAuthenticationType;
        private String anyConnectEapProfileDownloadStatus;
        private String anyConnectEapProfileDownloadStatusVariable;
        private String anyConnectEapProfileFileName;
        private String anyConnectEapProfileFileNameVariable;
        private Boolean connectionTypeSsl;
        private String description;
        private Boolean enableCrlCheck;
        private String enableCrlCheckVariable;
        private String featureProfileId;
        private String id;
        private Integer ikev2AntiDosThreshold;
        private String ikev2AntiDosThresholdVariable;
        private String ikev2LocalIkeIdentityType;
        private String ikev2LocalIkeIdentityTypeVariable;
        private String ikev2LocalIkeIdentityValue;
        private String ikev2LocalIkeIdentityValueVariable;
        private Integer ikev2SecurityAssociationLifetime;
        private String ikev2SecurityAssociationLifetimeVariable;
        private Integer ipsecAntiReplayWindowSize;
        private String ipsecAntiReplayWindowSizeVariable;
        private Boolean ipsecEnableAntiReplay;
        private String ipsecEnableAntiReplayVariable;
        private Boolean ipsecEnablePerfectFowardSecrecy;
        private String ipsecEnablePerfectFowardSecrecyVariable;
        private Integer ipsecSecurityAssociationLifetime;
        private String ipsecSecurityAssociationLifetimeVariable;
        private Integer ipv4PoolSize;
        private String ipv4PoolSizeVariable;
        private Integer ipv6PoolSize;
        private String ipv6PoolSizeVariable;
        private String name;
        private String pskAuthenticationPreSharedKey;
        private String pskAuthenticationPreSharedKeyVariable;
        private String pskAuthenticationType;
        private String pskAuthenticationTypeVariable;
        private String radiusGroupName;
        private String radiusGroupNameVariable;
        private Integer version;
        public Builder() {}
        public Builder(GetSystemRemoteAccessProfileParcelResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aaaDeriveNameDomain = defaults.aaaDeriveNameDomain;
    	      this.aaaDeriveNameDomainVariable = defaults.aaaDeriveNameDomainVariable;
    	      this.aaaDeriveNameIdentity = defaults.aaaDeriveNameIdentity;
    	      this.aaaDeriveNameIdentityVariable = defaults.aaaDeriveNameIdentityVariable;
    	      this.aaaEnableAccounting = defaults.aaaEnableAccounting;
    	      this.aaaEnableAccountingVariable = defaults.aaaEnableAccountingVariable;
    	      this.aaaSpecifyNamePolicyName = defaults.aaaSpecifyNamePolicyName;
    	      this.aaaSpecifyNamePolicyNameVariable = defaults.aaaSpecifyNamePolicyNameVariable;
    	      this.aaaSpecifyNamePolicyPassword = defaults.aaaSpecifyNamePolicyPassword;
    	      this.aaaSpecifyNamePolicyPasswordVariable = defaults.aaaSpecifyNamePolicyPasswordVariable;
    	      this.anyConnectEapAuthenticationType = defaults.anyConnectEapAuthenticationType;
    	      this.anyConnectEapProfileDownloadStatus = defaults.anyConnectEapProfileDownloadStatus;
    	      this.anyConnectEapProfileDownloadStatusVariable = defaults.anyConnectEapProfileDownloadStatusVariable;
    	      this.anyConnectEapProfileFileName = defaults.anyConnectEapProfileFileName;
    	      this.anyConnectEapProfileFileNameVariable = defaults.anyConnectEapProfileFileNameVariable;
    	      this.connectionTypeSsl = defaults.connectionTypeSsl;
    	      this.description = defaults.description;
    	      this.enableCrlCheck = defaults.enableCrlCheck;
    	      this.enableCrlCheckVariable = defaults.enableCrlCheckVariable;
    	      this.featureProfileId = defaults.featureProfileId;
    	      this.id = defaults.id;
    	      this.ikev2AntiDosThreshold = defaults.ikev2AntiDosThreshold;
    	      this.ikev2AntiDosThresholdVariable = defaults.ikev2AntiDosThresholdVariable;
    	      this.ikev2LocalIkeIdentityType = defaults.ikev2LocalIkeIdentityType;
    	      this.ikev2LocalIkeIdentityTypeVariable = defaults.ikev2LocalIkeIdentityTypeVariable;
    	      this.ikev2LocalIkeIdentityValue = defaults.ikev2LocalIkeIdentityValue;
    	      this.ikev2LocalIkeIdentityValueVariable = defaults.ikev2LocalIkeIdentityValueVariable;
    	      this.ikev2SecurityAssociationLifetime = defaults.ikev2SecurityAssociationLifetime;
    	      this.ikev2SecurityAssociationLifetimeVariable = defaults.ikev2SecurityAssociationLifetimeVariable;
    	      this.ipsecAntiReplayWindowSize = defaults.ipsecAntiReplayWindowSize;
    	      this.ipsecAntiReplayWindowSizeVariable = defaults.ipsecAntiReplayWindowSizeVariable;
    	      this.ipsecEnableAntiReplay = defaults.ipsecEnableAntiReplay;
    	      this.ipsecEnableAntiReplayVariable = defaults.ipsecEnableAntiReplayVariable;
    	      this.ipsecEnablePerfectFowardSecrecy = defaults.ipsecEnablePerfectFowardSecrecy;
    	      this.ipsecEnablePerfectFowardSecrecyVariable = defaults.ipsecEnablePerfectFowardSecrecyVariable;
    	      this.ipsecSecurityAssociationLifetime = defaults.ipsecSecurityAssociationLifetime;
    	      this.ipsecSecurityAssociationLifetimeVariable = defaults.ipsecSecurityAssociationLifetimeVariable;
    	      this.ipv4PoolSize = defaults.ipv4PoolSize;
    	      this.ipv4PoolSizeVariable = defaults.ipv4PoolSizeVariable;
    	      this.ipv6PoolSize = defaults.ipv6PoolSize;
    	      this.ipv6PoolSizeVariable = defaults.ipv6PoolSizeVariable;
    	      this.name = defaults.name;
    	      this.pskAuthenticationPreSharedKey = defaults.pskAuthenticationPreSharedKey;
    	      this.pskAuthenticationPreSharedKeyVariable = defaults.pskAuthenticationPreSharedKeyVariable;
    	      this.pskAuthenticationType = defaults.pskAuthenticationType;
    	      this.pskAuthenticationTypeVariable = defaults.pskAuthenticationTypeVariable;
    	      this.radiusGroupName = defaults.radiusGroupName;
    	      this.radiusGroupNameVariable = defaults.radiusGroupNameVariable;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder aaaDeriveNameDomain(String aaaDeriveNameDomain) {
            if (aaaDeriveNameDomain == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "aaaDeriveNameDomain");
            }
            this.aaaDeriveNameDomain = aaaDeriveNameDomain;
            return this;
        }
        @CustomType.Setter
        public Builder aaaDeriveNameDomainVariable(String aaaDeriveNameDomainVariable) {
            if (aaaDeriveNameDomainVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "aaaDeriveNameDomainVariable");
            }
            this.aaaDeriveNameDomainVariable = aaaDeriveNameDomainVariable;
            return this;
        }
        @CustomType.Setter
        public Builder aaaDeriveNameIdentity(String aaaDeriveNameIdentity) {
            if (aaaDeriveNameIdentity == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "aaaDeriveNameIdentity");
            }
            this.aaaDeriveNameIdentity = aaaDeriveNameIdentity;
            return this;
        }
        @CustomType.Setter
        public Builder aaaDeriveNameIdentityVariable(String aaaDeriveNameIdentityVariable) {
            if (aaaDeriveNameIdentityVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "aaaDeriveNameIdentityVariable");
            }
            this.aaaDeriveNameIdentityVariable = aaaDeriveNameIdentityVariable;
            return this;
        }
        @CustomType.Setter
        public Builder aaaEnableAccounting(Boolean aaaEnableAccounting) {
            if (aaaEnableAccounting == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "aaaEnableAccounting");
            }
            this.aaaEnableAccounting = aaaEnableAccounting;
            return this;
        }
        @CustomType.Setter
        public Builder aaaEnableAccountingVariable(String aaaEnableAccountingVariable) {
            if (aaaEnableAccountingVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "aaaEnableAccountingVariable");
            }
            this.aaaEnableAccountingVariable = aaaEnableAccountingVariable;
            return this;
        }
        @CustomType.Setter
        public Builder aaaSpecifyNamePolicyName(String aaaSpecifyNamePolicyName) {
            if (aaaSpecifyNamePolicyName == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "aaaSpecifyNamePolicyName");
            }
            this.aaaSpecifyNamePolicyName = aaaSpecifyNamePolicyName;
            return this;
        }
        @CustomType.Setter
        public Builder aaaSpecifyNamePolicyNameVariable(String aaaSpecifyNamePolicyNameVariable) {
            if (aaaSpecifyNamePolicyNameVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "aaaSpecifyNamePolicyNameVariable");
            }
            this.aaaSpecifyNamePolicyNameVariable = aaaSpecifyNamePolicyNameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder aaaSpecifyNamePolicyPassword(String aaaSpecifyNamePolicyPassword) {
            if (aaaSpecifyNamePolicyPassword == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "aaaSpecifyNamePolicyPassword");
            }
            this.aaaSpecifyNamePolicyPassword = aaaSpecifyNamePolicyPassword;
            return this;
        }
        @CustomType.Setter
        public Builder aaaSpecifyNamePolicyPasswordVariable(String aaaSpecifyNamePolicyPasswordVariable) {
            if (aaaSpecifyNamePolicyPasswordVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "aaaSpecifyNamePolicyPasswordVariable");
            }
            this.aaaSpecifyNamePolicyPasswordVariable = aaaSpecifyNamePolicyPasswordVariable;
            return this;
        }
        @CustomType.Setter
        public Builder anyConnectEapAuthenticationType(String anyConnectEapAuthenticationType) {
            if (anyConnectEapAuthenticationType == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "anyConnectEapAuthenticationType");
            }
            this.anyConnectEapAuthenticationType = anyConnectEapAuthenticationType;
            return this;
        }
        @CustomType.Setter
        public Builder anyConnectEapProfileDownloadStatus(String anyConnectEapProfileDownloadStatus) {
            if (anyConnectEapProfileDownloadStatus == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "anyConnectEapProfileDownloadStatus");
            }
            this.anyConnectEapProfileDownloadStatus = anyConnectEapProfileDownloadStatus;
            return this;
        }
        @CustomType.Setter
        public Builder anyConnectEapProfileDownloadStatusVariable(String anyConnectEapProfileDownloadStatusVariable) {
            if (anyConnectEapProfileDownloadStatusVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "anyConnectEapProfileDownloadStatusVariable");
            }
            this.anyConnectEapProfileDownloadStatusVariable = anyConnectEapProfileDownloadStatusVariable;
            return this;
        }
        @CustomType.Setter
        public Builder anyConnectEapProfileFileName(String anyConnectEapProfileFileName) {
            if (anyConnectEapProfileFileName == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "anyConnectEapProfileFileName");
            }
            this.anyConnectEapProfileFileName = anyConnectEapProfileFileName;
            return this;
        }
        @CustomType.Setter
        public Builder anyConnectEapProfileFileNameVariable(String anyConnectEapProfileFileNameVariable) {
            if (anyConnectEapProfileFileNameVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "anyConnectEapProfileFileNameVariable");
            }
            this.anyConnectEapProfileFileNameVariable = anyConnectEapProfileFileNameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder connectionTypeSsl(Boolean connectionTypeSsl) {
            if (connectionTypeSsl == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "connectionTypeSsl");
            }
            this.connectionTypeSsl = connectionTypeSsl;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder enableCrlCheck(Boolean enableCrlCheck) {
            if (enableCrlCheck == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "enableCrlCheck");
            }
            this.enableCrlCheck = enableCrlCheck;
            return this;
        }
        @CustomType.Setter
        public Builder enableCrlCheckVariable(String enableCrlCheckVariable) {
            if (enableCrlCheckVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "enableCrlCheckVariable");
            }
            this.enableCrlCheckVariable = enableCrlCheckVariable;
            return this;
        }
        @CustomType.Setter
        public Builder featureProfileId(String featureProfileId) {
            if (featureProfileId == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "featureProfileId");
            }
            this.featureProfileId = featureProfileId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ikev2AntiDosThreshold(Integer ikev2AntiDosThreshold) {
            if (ikev2AntiDosThreshold == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ikev2AntiDosThreshold");
            }
            this.ikev2AntiDosThreshold = ikev2AntiDosThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder ikev2AntiDosThresholdVariable(String ikev2AntiDosThresholdVariable) {
            if (ikev2AntiDosThresholdVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ikev2AntiDosThresholdVariable");
            }
            this.ikev2AntiDosThresholdVariable = ikev2AntiDosThresholdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ikev2LocalIkeIdentityType(String ikev2LocalIkeIdentityType) {
            if (ikev2LocalIkeIdentityType == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ikev2LocalIkeIdentityType");
            }
            this.ikev2LocalIkeIdentityType = ikev2LocalIkeIdentityType;
            return this;
        }
        @CustomType.Setter
        public Builder ikev2LocalIkeIdentityTypeVariable(String ikev2LocalIkeIdentityTypeVariable) {
            if (ikev2LocalIkeIdentityTypeVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ikev2LocalIkeIdentityTypeVariable");
            }
            this.ikev2LocalIkeIdentityTypeVariable = ikev2LocalIkeIdentityTypeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ikev2LocalIkeIdentityValue(String ikev2LocalIkeIdentityValue) {
            if (ikev2LocalIkeIdentityValue == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ikev2LocalIkeIdentityValue");
            }
            this.ikev2LocalIkeIdentityValue = ikev2LocalIkeIdentityValue;
            return this;
        }
        @CustomType.Setter
        public Builder ikev2LocalIkeIdentityValueVariable(String ikev2LocalIkeIdentityValueVariable) {
            if (ikev2LocalIkeIdentityValueVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ikev2LocalIkeIdentityValueVariable");
            }
            this.ikev2LocalIkeIdentityValueVariable = ikev2LocalIkeIdentityValueVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ikev2SecurityAssociationLifetime(Integer ikev2SecurityAssociationLifetime) {
            if (ikev2SecurityAssociationLifetime == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ikev2SecurityAssociationLifetime");
            }
            this.ikev2SecurityAssociationLifetime = ikev2SecurityAssociationLifetime;
            return this;
        }
        @CustomType.Setter
        public Builder ikev2SecurityAssociationLifetimeVariable(String ikev2SecurityAssociationLifetimeVariable) {
            if (ikev2SecurityAssociationLifetimeVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ikev2SecurityAssociationLifetimeVariable");
            }
            this.ikev2SecurityAssociationLifetimeVariable = ikev2SecurityAssociationLifetimeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipsecAntiReplayWindowSize(Integer ipsecAntiReplayWindowSize) {
            if (ipsecAntiReplayWindowSize == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ipsecAntiReplayWindowSize");
            }
            this.ipsecAntiReplayWindowSize = ipsecAntiReplayWindowSize;
            return this;
        }
        @CustomType.Setter
        public Builder ipsecAntiReplayWindowSizeVariable(String ipsecAntiReplayWindowSizeVariable) {
            if (ipsecAntiReplayWindowSizeVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ipsecAntiReplayWindowSizeVariable");
            }
            this.ipsecAntiReplayWindowSizeVariable = ipsecAntiReplayWindowSizeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipsecEnableAntiReplay(Boolean ipsecEnableAntiReplay) {
            if (ipsecEnableAntiReplay == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ipsecEnableAntiReplay");
            }
            this.ipsecEnableAntiReplay = ipsecEnableAntiReplay;
            return this;
        }
        @CustomType.Setter
        public Builder ipsecEnableAntiReplayVariable(String ipsecEnableAntiReplayVariable) {
            if (ipsecEnableAntiReplayVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ipsecEnableAntiReplayVariable");
            }
            this.ipsecEnableAntiReplayVariable = ipsecEnableAntiReplayVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipsecEnablePerfectFowardSecrecy(Boolean ipsecEnablePerfectFowardSecrecy) {
            if (ipsecEnablePerfectFowardSecrecy == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ipsecEnablePerfectFowardSecrecy");
            }
            this.ipsecEnablePerfectFowardSecrecy = ipsecEnablePerfectFowardSecrecy;
            return this;
        }
        @CustomType.Setter
        public Builder ipsecEnablePerfectFowardSecrecyVariable(String ipsecEnablePerfectFowardSecrecyVariable) {
            if (ipsecEnablePerfectFowardSecrecyVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ipsecEnablePerfectFowardSecrecyVariable");
            }
            this.ipsecEnablePerfectFowardSecrecyVariable = ipsecEnablePerfectFowardSecrecyVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipsecSecurityAssociationLifetime(Integer ipsecSecurityAssociationLifetime) {
            if (ipsecSecurityAssociationLifetime == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ipsecSecurityAssociationLifetime");
            }
            this.ipsecSecurityAssociationLifetime = ipsecSecurityAssociationLifetime;
            return this;
        }
        @CustomType.Setter
        public Builder ipsecSecurityAssociationLifetimeVariable(String ipsecSecurityAssociationLifetimeVariable) {
            if (ipsecSecurityAssociationLifetimeVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ipsecSecurityAssociationLifetimeVariable");
            }
            this.ipsecSecurityAssociationLifetimeVariable = ipsecSecurityAssociationLifetimeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4PoolSize(Integer ipv4PoolSize) {
            if (ipv4PoolSize == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ipv4PoolSize");
            }
            this.ipv4PoolSize = ipv4PoolSize;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4PoolSizeVariable(String ipv4PoolSizeVariable) {
            if (ipv4PoolSizeVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ipv4PoolSizeVariable");
            }
            this.ipv4PoolSizeVariable = ipv4PoolSizeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6PoolSize(Integer ipv6PoolSize) {
            if (ipv6PoolSize == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ipv6PoolSize");
            }
            this.ipv6PoolSize = ipv6PoolSize;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6PoolSizeVariable(String ipv6PoolSizeVariable) {
            if (ipv6PoolSizeVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "ipv6PoolSizeVariable");
            }
            this.ipv6PoolSizeVariable = ipv6PoolSizeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder pskAuthenticationPreSharedKey(String pskAuthenticationPreSharedKey) {
            if (pskAuthenticationPreSharedKey == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "pskAuthenticationPreSharedKey");
            }
            this.pskAuthenticationPreSharedKey = pskAuthenticationPreSharedKey;
            return this;
        }
        @CustomType.Setter
        public Builder pskAuthenticationPreSharedKeyVariable(String pskAuthenticationPreSharedKeyVariable) {
            if (pskAuthenticationPreSharedKeyVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "pskAuthenticationPreSharedKeyVariable");
            }
            this.pskAuthenticationPreSharedKeyVariable = pskAuthenticationPreSharedKeyVariable;
            return this;
        }
        @CustomType.Setter
        public Builder pskAuthenticationType(String pskAuthenticationType) {
            if (pskAuthenticationType == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "pskAuthenticationType");
            }
            this.pskAuthenticationType = pskAuthenticationType;
            return this;
        }
        @CustomType.Setter
        public Builder pskAuthenticationTypeVariable(String pskAuthenticationTypeVariable) {
            if (pskAuthenticationTypeVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "pskAuthenticationTypeVariable");
            }
            this.pskAuthenticationTypeVariable = pskAuthenticationTypeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder radiusGroupName(String radiusGroupName) {
            if (radiusGroupName == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "radiusGroupName");
            }
            this.radiusGroupName = radiusGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder radiusGroupNameVariable(String radiusGroupNameVariable) {
            if (radiusGroupNameVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "radiusGroupNameVariable");
            }
            this.radiusGroupNameVariable = radiusGroupNameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetSystemRemoteAccessProfileParcelResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetSystemRemoteAccessProfileParcelResult build() {
            final var _resultValue = new GetSystemRemoteAccessProfileParcelResult();
            _resultValue.aaaDeriveNameDomain = aaaDeriveNameDomain;
            _resultValue.aaaDeriveNameDomainVariable = aaaDeriveNameDomainVariable;
            _resultValue.aaaDeriveNameIdentity = aaaDeriveNameIdentity;
            _resultValue.aaaDeriveNameIdentityVariable = aaaDeriveNameIdentityVariable;
            _resultValue.aaaEnableAccounting = aaaEnableAccounting;
            _resultValue.aaaEnableAccountingVariable = aaaEnableAccountingVariable;
            _resultValue.aaaSpecifyNamePolicyName = aaaSpecifyNamePolicyName;
            _resultValue.aaaSpecifyNamePolicyNameVariable = aaaSpecifyNamePolicyNameVariable;
            _resultValue.aaaSpecifyNamePolicyPassword = aaaSpecifyNamePolicyPassword;
            _resultValue.aaaSpecifyNamePolicyPasswordVariable = aaaSpecifyNamePolicyPasswordVariable;
            _resultValue.anyConnectEapAuthenticationType = anyConnectEapAuthenticationType;
            _resultValue.anyConnectEapProfileDownloadStatus = anyConnectEapProfileDownloadStatus;
            _resultValue.anyConnectEapProfileDownloadStatusVariable = anyConnectEapProfileDownloadStatusVariable;
            _resultValue.anyConnectEapProfileFileName = anyConnectEapProfileFileName;
            _resultValue.anyConnectEapProfileFileNameVariable = anyConnectEapProfileFileNameVariable;
            _resultValue.connectionTypeSsl = connectionTypeSsl;
            _resultValue.description = description;
            _resultValue.enableCrlCheck = enableCrlCheck;
            _resultValue.enableCrlCheckVariable = enableCrlCheckVariable;
            _resultValue.featureProfileId = featureProfileId;
            _resultValue.id = id;
            _resultValue.ikev2AntiDosThreshold = ikev2AntiDosThreshold;
            _resultValue.ikev2AntiDosThresholdVariable = ikev2AntiDosThresholdVariable;
            _resultValue.ikev2LocalIkeIdentityType = ikev2LocalIkeIdentityType;
            _resultValue.ikev2LocalIkeIdentityTypeVariable = ikev2LocalIkeIdentityTypeVariable;
            _resultValue.ikev2LocalIkeIdentityValue = ikev2LocalIkeIdentityValue;
            _resultValue.ikev2LocalIkeIdentityValueVariable = ikev2LocalIkeIdentityValueVariable;
            _resultValue.ikev2SecurityAssociationLifetime = ikev2SecurityAssociationLifetime;
            _resultValue.ikev2SecurityAssociationLifetimeVariable = ikev2SecurityAssociationLifetimeVariable;
            _resultValue.ipsecAntiReplayWindowSize = ipsecAntiReplayWindowSize;
            _resultValue.ipsecAntiReplayWindowSizeVariable = ipsecAntiReplayWindowSizeVariable;
            _resultValue.ipsecEnableAntiReplay = ipsecEnableAntiReplay;
            _resultValue.ipsecEnableAntiReplayVariable = ipsecEnableAntiReplayVariable;
            _resultValue.ipsecEnablePerfectFowardSecrecy = ipsecEnablePerfectFowardSecrecy;
            _resultValue.ipsecEnablePerfectFowardSecrecyVariable = ipsecEnablePerfectFowardSecrecyVariable;
            _resultValue.ipsecSecurityAssociationLifetime = ipsecSecurityAssociationLifetime;
            _resultValue.ipsecSecurityAssociationLifetimeVariable = ipsecSecurityAssociationLifetimeVariable;
            _resultValue.ipv4PoolSize = ipv4PoolSize;
            _resultValue.ipv4PoolSizeVariable = ipv4PoolSizeVariable;
            _resultValue.ipv6PoolSize = ipv6PoolSize;
            _resultValue.ipv6PoolSizeVariable = ipv6PoolSizeVariable;
            _resultValue.name = name;
            _resultValue.pskAuthenticationPreSharedKey = pskAuthenticationPreSharedKey;
            _resultValue.pskAuthenticationPreSharedKeyVariable = pskAuthenticationPreSharedKeyVariable;
            _resultValue.pskAuthenticationType = pskAuthenticationType;
            _resultValue.pskAuthenticationTypeVariable = pskAuthenticationTypeVariable;
            _resultValue.radiusGroupName = radiusGroupName;
            _resultValue.radiusGroupNameVariable = radiusGroupNameVariable;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
