// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSystemLoggingFeatureIpv6Server {
    /**
     * @return Set IPv6 hostname or IPv6 address of server
     * 
     */
    private String hostnameIp;
    /**
     * @return Variable name
     * 
     */
    private String hostnameIpVariable;
    /**
     * @return Set logging level for messages logged to server
     * 
     */
    private String priority;
    /**
     * @return Variable name
     * 
     */
    private String priorityVariable;
    /**
     * @return Set interface to use to reach syslog server
     * 
     */
    private String sourceInterface;
    /**
     * @return Variable name
     * 
     */
    private String sourceInterfaceVariable;
    /**
     * @return Enable TLS Profile
     * 
     */
    private Boolean tlsEnable;
    /**
     * @return Variable name
     * 
     */
    private String tlsEnableVariable;
    /**
     * @return Define custom profile
     * 
     */
    private Boolean tlsPropertiesCustomProfile;
    /**
     * @return Variable name
     * 
     */
    private String tlsPropertiesCustomProfileVariable;
    /**
     * @return Configure a TLS profile
     * 
     */
    private String tlsPropertiesProfile;
    /**
     * @return Variable name
     * 
     */
    private String tlsPropertiesProfileVariable;
    /**
     * @return Set hostname or IPv4 address of server
     * 
     */
    private Integer vpn;
    /**
     * @return Variable name
     * 
     */
    private String vpnVariable;

    private GetSystemLoggingFeatureIpv6Server() {}
    /**
     * @return Set IPv6 hostname or IPv6 address of server
     * 
     */
    public String hostnameIp() {
        return this.hostnameIp;
    }
    /**
     * @return Variable name
     * 
     */
    public String hostnameIpVariable() {
        return this.hostnameIpVariable;
    }
    /**
     * @return Set logging level for messages logged to server
     * 
     */
    public String priority() {
        return this.priority;
    }
    /**
     * @return Variable name
     * 
     */
    public String priorityVariable() {
        return this.priorityVariable;
    }
    /**
     * @return Set interface to use to reach syslog server
     * 
     */
    public String sourceInterface() {
        return this.sourceInterface;
    }
    /**
     * @return Variable name
     * 
     */
    public String sourceInterfaceVariable() {
        return this.sourceInterfaceVariable;
    }
    /**
     * @return Enable TLS Profile
     * 
     */
    public Boolean tlsEnable() {
        return this.tlsEnable;
    }
    /**
     * @return Variable name
     * 
     */
    public String tlsEnableVariable() {
        return this.tlsEnableVariable;
    }
    /**
     * @return Define custom profile
     * 
     */
    public Boolean tlsPropertiesCustomProfile() {
        return this.tlsPropertiesCustomProfile;
    }
    /**
     * @return Variable name
     * 
     */
    public String tlsPropertiesCustomProfileVariable() {
        return this.tlsPropertiesCustomProfileVariable;
    }
    /**
     * @return Configure a TLS profile
     * 
     */
    public String tlsPropertiesProfile() {
        return this.tlsPropertiesProfile;
    }
    /**
     * @return Variable name
     * 
     */
    public String tlsPropertiesProfileVariable() {
        return this.tlsPropertiesProfileVariable;
    }
    /**
     * @return Set hostname or IPv4 address of server
     * 
     */
    public Integer vpn() {
        return this.vpn;
    }
    /**
     * @return Variable name
     * 
     */
    public String vpnVariable() {
        return this.vpnVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSystemLoggingFeatureIpv6Server defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String hostnameIp;
        private String hostnameIpVariable;
        private String priority;
        private String priorityVariable;
        private String sourceInterface;
        private String sourceInterfaceVariable;
        private Boolean tlsEnable;
        private String tlsEnableVariable;
        private Boolean tlsPropertiesCustomProfile;
        private String tlsPropertiesCustomProfileVariable;
        private String tlsPropertiesProfile;
        private String tlsPropertiesProfileVariable;
        private Integer vpn;
        private String vpnVariable;
        public Builder() {}
        public Builder(GetSystemLoggingFeatureIpv6Server defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostnameIp = defaults.hostnameIp;
    	      this.hostnameIpVariable = defaults.hostnameIpVariable;
    	      this.priority = defaults.priority;
    	      this.priorityVariable = defaults.priorityVariable;
    	      this.sourceInterface = defaults.sourceInterface;
    	      this.sourceInterfaceVariable = defaults.sourceInterfaceVariable;
    	      this.tlsEnable = defaults.tlsEnable;
    	      this.tlsEnableVariable = defaults.tlsEnableVariable;
    	      this.tlsPropertiesCustomProfile = defaults.tlsPropertiesCustomProfile;
    	      this.tlsPropertiesCustomProfileVariable = defaults.tlsPropertiesCustomProfileVariable;
    	      this.tlsPropertiesProfile = defaults.tlsPropertiesProfile;
    	      this.tlsPropertiesProfileVariable = defaults.tlsPropertiesProfileVariable;
    	      this.vpn = defaults.vpn;
    	      this.vpnVariable = defaults.vpnVariable;
        }

        @CustomType.Setter
        public Builder hostnameIp(String hostnameIp) {
            if (hostnameIp == null) {
              throw new MissingRequiredPropertyException("GetSystemLoggingFeatureIpv6Server", "hostnameIp");
            }
            this.hostnameIp = hostnameIp;
            return this;
        }
        @CustomType.Setter
        public Builder hostnameIpVariable(String hostnameIpVariable) {
            if (hostnameIpVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemLoggingFeatureIpv6Server", "hostnameIpVariable");
            }
            this.hostnameIpVariable = hostnameIpVariable;
            return this;
        }
        @CustomType.Setter
        public Builder priority(String priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetSystemLoggingFeatureIpv6Server", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder priorityVariable(String priorityVariable) {
            if (priorityVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemLoggingFeatureIpv6Server", "priorityVariable");
            }
            this.priorityVariable = priorityVariable;
            return this;
        }
        @CustomType.Setter
        public Builder sourceInterface(String sourceInterface) {
            if (sourceInterface == null) {
              throw new MissingRequiredPropertyException("GetSystemLoggingFeatureIpv6Server", "sourceInterface");
            }
            this.sourceInterface = sourceInterface;
            return this;
        }
        @CustomType.Setter
        public Builder sourceInterfaceVariable(String sourceInterfaceVariable) {
            if (sourceInterfaceVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemLoggingFeatureIpv6Server", "sourceInterfaceVariable");
            }
            this.sourceInterfaceVariable = sourceInterfaceVariable;
            return this;
        }
        @CustomType.Setter
        public Builder tlsEnable(Boolean tlsEnable) {
            if (tlsEnable == null) {
              throw new MissingRequiredPropertyException("GetSystemLoggingFeatureIpv6Server", "tlsEnable");
            }
            this.tlsEnable = tlsEnable;
            return this;
        }
        @CustomType.Setter
        public Builder tlsEnableVariable(String tlsEnableVariable) {
            if (tlsEnableVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemLoggingFeatureIpv6Server", "tlsEnableVariable");
            }
            this.tlsEnableVariable = tlsEnableVariable;
            return this;
        }
        @CustomType.Setter
        public Builder tlsPropertiesCustomProfile(Boolean tlsPropertiesCustomProfile) {
            if (tlsPropertiesCustomProfile == null) {
              throw new MissingRequiredPropertyException("GetSystemLoggingFeatureIpv6Server", "tlsPropertiesCustomProfile");
            }
            this.tlsPropertiesCustomProfile = tlsPropertiesCustomProfile;
            return this;
        }
        @CustomType.Setter
        public Builder tlsPropertiesCustomProfileVariable(String tlsPropertiesCustomProfileVariable) {
            if (tlsPropertiesCustomProfileVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemLoggingFeatureIpv6Server", "tlsPropertiesCustomProfileVariable");
            }
            this.tlsPropertiesCustomProfileVariable = tlsPropertiesCustomProfileVariable;
            return this;
        }
        @CustomType.Setter
        public Builder tlsPropertiesProfile(String tlsPropertiesProfile) {
            if (tlsPropertiesProfile == null) {
              throw new MissingRequiredPropertyException("GetSystemLoggingFeatureIpv6Server", "tlsPropertiesProfile");
            }
            this.tlsPropertiesProfile = tlsPropertiesProfile;
            return this;
        }
        @CustomType.Setter
        public Builder tlsPropertiesProfileVariable(String tlsPropertiesProfileVariable) {
            if (tlsPropertiesProfileVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemLoggingFeatureIpv6Server", "tlsPropertiesProfileVariable");
            }
            this.tlsPropertiesProfileVariable = tlsPropertiesProfileVariable;
            return this;
        }
        @CustomType.Setter
        public Builder vpn(Integer vpn) {
            if (vpn == null) {
              throw new MissingRequiredPropertyException("GetSystemLoggingFeatureIpv6Server", "vpn");
            }
            this.vpn = vpn;
            return this;
        }
        @CustomType.Setter
        public Builder vpnVariable(String vpnVariable) {
            if (vpnVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemLoggingFeatureIpv6Server", "vpnVariable");
            }
            this.vpnVariable = vpnVariable;
            return this;
        }
        public GetSystemLoggingFeatureIpv6Server build() {
            final var _resultValue = new GetSystemLoggingFeatureIpv6Server();
            _resultValue.hostnameIp = hostnameIp;
            _resultValue.hostnameIpVariable = hostnameIpVariable;
            _resultValue.priority = priority;
            _resultValue.priorityVariable = priorityVariable;
            _resultValue.sourceInterface = sourceInterface;
            _resultValue.sourceInterfaceVariable = sourceInterfaceVariable;
            _resultValue.tlsEnable = tlsEnable;
            _resultValue.tlsEnableVariable = tlsEnableVariable;
            _resultValue.tlsPropertiesCustomProfile = tlsPropertiesCustomProfile;
            _resultValue.tlsPropertiesCustomProfileVariable = tlsPropertiesCustomProfileVariable;
            _resultValue.tlsPropertiesProfile = tlsPropertiesProfile;
            _resultValue.tlsPropertiesProfileVariable = tlsPropertiesProfileVariable;
            _resultValue.vpn = vpn;
            _resultValue.vpnVariable = vpnVariable;
            return _resultValue;
        }
    }
}
