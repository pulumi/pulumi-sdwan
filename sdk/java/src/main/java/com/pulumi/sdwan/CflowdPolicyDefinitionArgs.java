// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.CflowdPolicyDefinitionCollectorArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CflowdPolicyDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final CflowdPolicyDefinitionArgs Empty = new CflowdPolicyDefinitionArgs();

    /**
     * Active flow timeout in seconds - Range: `30`-`3600`
     * 
     */
    @Import(name="activeFlowTimeout")
    private @Nullable Output<Integer> activeFlowTimeout;

    /**
     * @return Active flow timeout in seconds - Range: `30`-`3600`
     * 
     */
    public Optional<Output<Integer>> activeFlowTimeout() {
        return Optional.ofNullable(this.activeFlowTimeout);
    }

    /**
     * List of collectors
     * 
     */
    @Import(name="collectors", required=true)
    private Output<List<CflowdPolicyDefinitionCollectorArgs>> collectors;

    /**
     * @return List of collectors
     * 
     */
    public Output<List<CflowdPolicyDefinitionCollectorArgs>> collectors() {
        return this.collectors;
    }

    /**
     * The description of the policy definition
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return The description of the policy definition
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * Flow refresh in seconds - Range: `60`-`86400`
     * 
     */
    @Import(name="flowRefresh")
    private @Nullable Output<Integer> flowRefresh;

    /**
     * @return Flow refresh in seconds - Range: `60`-`86400`
     * 
     */
    public Optional<Output<Integer>> flowRefresh() {
        return Optional.ofNullable(this.flowRefresh);
    }

    /**
     * Inactive flow timeout in seconds - Range: `1`-`3600`
     * 
     */
    @Import(name="inactiveFlowTimeout")
    private @Nullable Output<Integer> inactiveFlowTimeout;

    /**
     * @return Inactive flow timeout in seconds - Range: `1`-`3600`
     * 
     */
    public Optional<Output<Integer>> inactiveFlowTimeout() {
        return Optional.ofNullable(this.inactiveFlowTimeout);
    }

    /**
     * The name of the policy definition
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the policy definition
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Protocol, either `ipv4`, `ipv6` or `all` - Choices: `ipv4`, `ipv6`, `all`
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return Protocol, either `ipv4`, `ipv6` or `all` - Choices: `ipv4`, `ipv6`, `all`
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * Collect remarked DSCP
     * 
     */
    @Import(name="remarkedDscp")
    private @Nullable Output<Boolean> remarkedDscp;

    /**
     * @return Collect remarked DSCP
     * 
     */
    public Optional<Output<Boolean>> remarkedDscp() {
        return Optional.ofNullable(this.remarkedDscp);
    }

    /**
     * Flow sampling interval - Range: `1`-`65536`
     * 
     */
    @Import(name="samplingInterval")
    private @Nullable Output<Integer> samplingInterval;

    /**
     * @return Flow sampling interval - Range: `1`-`65536`
     * 
     */
    public Optional<Output<Integer>> samplingInterval() {
        return Optional.ofNullable(this.samplingInterval);
    }

    /**
     * Collect TOS record field
     * 
     */
    @Import(name="tos")
    private @Nullable Output<Boolean> tos;

    /**
     * @return Collect TOS record field
     * 
     */
    public Optional<Output<Boolean>> tos() {
        return Optional.ofNullable(this.tos);
    }

    private CflowdPolicyDefinitionArgs() {}

    private CflowdPolicyDefinitionArgs(CflowdPolicyDefinitionArgs $) {
        this.activeFlowTimeout = $.activeFlowTimeout;
        this.collectors = $.collectors;
        this.description = $.description;
        this.flowRefresh = $.flowRefresh;
        this.inactiveFlowTimeout = $.inactiveFlowTimeout;
        this.name = $.name;
        this.protocol = $.protocol;
        this.remarkedDscp = $.remarkedDscp;
        this.samplingInterval = $.samplingInterval;
        this.tos = $.tos;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CflowdPolicyDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CflowdPolicyDefinitionArgs $;

        public Builder() {
            $ = new CflowdPolicyDefinitionArgs();
        }

        public Builder(CflowdPolicyDefinitionArgs defaults) {
            $ = new CflowdPolicyDefinitionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param activeFlowTimeout Active flow timeout in seconds - Range: `30`-`3600`
         * 
         * @return builder
         * 
         */
        public Builder activeFlowTimeout(@Nullable Output<Integer> activeFlowTimeout) {
            $.activeFlowTimeout = activeFlowTimeout;
            return this;
        }

        /**
         * @param activeFlowTimeout Active flow timeout in seconds - Range: `30`-`3600`
         * 
         * @return builder
         * 
         */
        public Builder activeFlowTimeout(Integer activeFlowTimeout) {
            return activeFlowTimeout(Output.of(activeFlowTimeout));
        }

        /**
         * @param collectors List of collectors
         * 
         * @return builder
         * 
         */
        public Builder collectors(Output<List<CflowdPolicyDefinitionCollectorArgs>> collectors) {
            $.collectors = collectors;
            return this;
        }

        /**
         * @param collectors List of collectors
         * 
         * @return builder
         * 
         */
        public Builder collectors(List<CflowdPolicyDefinitionCollectorArgs> collectors) {
            return collectors(Output.of(collectors));
        }

        /**
         * @param collectors List of collectors
         * 
         * @return builder
         * 
         */
        public Builder collectors(CflowdPolicyDefinitionCollectorArgs... collectors) {
            return collectors(List.of(collectors));
        }

        /**
         * @param description The description of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param flowRefresh Flow refresh in seconds - Range: `60`-`86400`
         * 
         * @return builder
         * 
         */
        public Builder flowRefresh(@Nullable Output<Integer> flowRefresh) {
            $.flowRefresh = flowRefresh;
            return this;
        }

        /**
         * @param flowRefresh Flow refresh in seconds - Range: `60`-`86400`
         * 
         * @return builder
         * 
         */
        public Builder flowRefresh(Integer flowRefresh) {
            return flowRefresh(Output.of(flowRefresh));
        }

        /**
         * @param inactiveFlowTimeout Inactive flow timeout in seconds - Range: `1`-`3600`
         * 
         * @return builder
         * 
         */
        public Builder inactiveFlowTimeout(@Nullable Output<Integer> inactiveFlowTimeout) {
            $.inactiveFlowTimeout = inactiveFlowTimeout;
            return this;
        }

        /**
         * @param inactiveFlowTimeout Inactive flow timeout in seconds - Range: `1`-`3600`
         * 
         * @return builder
         * 
         */
        public Builder inactiveFlowTimeout(Integer inactiveFlowTimeout) {
            return inactiveFlowTimeout(Output.of(inactiveFlowTimeout));
        }

        /**
         * @param name The name of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param protocol Protocol, either `ipv4`, `ipv6` or `all` - Choices: `ipv4`, `ipv6`, `all`
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol Protocol, either `ipv4`, `ipv6` or `all` - Choices: `ipv4`, `ipv6`, `all`
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param remarkedDscp Collect remarked DSCP
         * 
         * @return builder
         * 
         */
        public Builder remarkedDscp(@Nullable Output<Boolean> remarkedDscp) {
            $.remarkedDscp = remarkedDscp;
            return this;
        }

        /**
         * @param remarkedDscp Collect remarked DSCP
         * 
         * @return builder
         * 
         */
        public Builder remarkedDscp(Boolean remarkedDscp) {
            return remarkedDscp(Output.of(remarkedDscp));
        }

        /**
         * @param samplingInterval Flow sampling interval - Range: `1`-`65536`
         * 
         * @return builder
         * 
         */
        public Builder samplingInterval(@Nullable Output<Integer> samplingInterval) {
            $.samplingInterval = samplingInterval;
            return this;
        }

        /**
         * @param samplingInterval Flow sampling interval - Range: `1`-`65536`
         * 
         * @return builder
         * 
         */
        public Builder samplingInterval(Integer samplingInterval) {
            return samplingInterval(Output.of(samplingInterval));
        }

        /**
         * @param tos Collect TOS record field
         * 
         * @return builder
         * 
         */
        public Builder tos(@Nullable Output<Boolean> tos) {
            $.tos = tos;
            return this;
        }

        /**
         * @param tos Collect TOS record field
         * 
         * @return builder
         * 
         */
        public Builder tos(Boolean tos) {
            return tos(Output.of(tos));
        }

        public CflowdPolicyDefinitionArgs build() {
            if ($.collectors == null) {
                throw new MissingRequiredPropertyException("CflowdPolicyDefinitionArgs", "collectors");
            }
            if ($.description == null) {
                throw new MissingRequiredPropertyException("CflowdPolicyDefinitionArgs", "description");
            }
            return $;
        }
    }

}
