// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.TransportManagementVpnInterfaceEthernetProfileParcelArpEntryArgs;
import com.pulumi.sdwan.inputs.TransportManagementVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransportManagementVpnInterfaceEthernetProfileParcelArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransportManagementVpnInterfaceEthernetProfileParcelArgs Empty = new TransportManagementVpnInterfaceEthernetProfileParcelArgs();

    /**
     * Configure ARP entries
     * 
     */
    @Import(name="arpEntries")
    private @Nullable Output<List<TransportManagementVpnInterfaceEthernetProfileParcelArpEntryArgs>> arpEntries;

    /**
     * @return Configure ARP entries
     * 
     */
    public Optional<Output<List<TransportManagementVpnInterfaceEthernetProfileParcelArpEntryArgs>>> arpEntries() {
        return Optional.ofNullable(this.arpEntries);
    }

    /**
     * Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2147483` - Default value: `1200`
     * 
     */
    @Import(name="arpTimeout")
    private @Nullable Output<Integer> arpTimeout;

    /**
     * @return Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2147483` - Default value: `1200`
     * 
     */
    public Optional<Output<Integer>> arpTimeout() {
        return Optional.ofNullable(this.arpTimeout);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="arpTimeoutVariable")
    private @Nullable Output<String> arpTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> arpTimeoutVariable() {
        return Optional.ofNullable(this.arpTimeoutVariable);
    }

    /**
     * Link autonegotiation
     * 
     */
    @Import(name="autonegotiate")
    private @Nullable Output<Boolean> autonegotiate;

    /**
     * @return Link autonegotiation
     * 
     */
    public Optional<Output<Boolean>> autonegotiate() {
        return Optional.ofNullable(this.autonegotiate);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="autonegotiateVariable")
    private @Nullable Output<String> autonegotiateVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> autonegotiateVariable() {
        return Optional.ofNullable(this.autonegotiateVariable);
    }

    @Import(name="basicConfigurationDescription")
    private @Nullable Output<String> basicConfigurationDescription;

    public Optional<Output<String>> basicConfigurationDescription() {
        return Optional.ofNullable(this.basicConfigurationDescription);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="basicConfigurationDescriptionVariable")
    private @Nullable Output<String> basicConfigurationDescriptionVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> basicConfigurationDescriptionVariable() {
        return Optional.ofNullable(this.basicConfigurationDescriptionVariable);
    }

    /**
     * The description of the profile parcel
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the profile parcel
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Duplex mode - Choices: `full`, `half`, `auto`
     * 
     */
    @Import(name="duplex")
    private @Nullable Output<String> duplex;

    /**
     * @return Duplex mode - Choices: `full`, `half`, `auto`
     * 
     */
    public Optional<Output<String>> duplex() {
        return Optional.ofNullable(this.duplex);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="duplexVariable")
    private @Nullable Output<String> duplexVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> duplexVariable() {
        return Optional.ofNullable(this.duplexVariable);
    }

    /**
     * Enable DHCPv6
     * 
     */
    @Import(name="enableDhcpv6")
    private @Nullable Output<Boolean> enableDhcpv6;

    /**
     * @return Enable DHCPv6
     * 
     */
    public Optional<Output<Boolean>> enableDhcpv6() {
        return Optional.ofNullable(this.enableDhcpv6);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId")
    private @Nullable Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Optional<Output<String>> featureProfileId() {
        return Optional.ofNullable(this.featureProfileId);
    }

    /**
     * ICMP/ICMPv6 Redirect Disable - Default value: `true`
     * 
     */
    @Import(name="icmpRedirectDisable")
    private @Nullable Output<Boolean> icmpRedirectDisable;

    /**
     * @return ICMP/ICMPv6 Redirect Disable - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> icmpRedirectDisable() {
        return Optional.ofNullable(this.icmpRedirectDisable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="icmpRedirectDisableVariable")
    private @Nullable Output<String> icmpRedirectDisableVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> icmpRedirectDisableVariable() {
        return Optional.ofNullable(this.icmpRedirectDisableVariable);
    }

    /**
     * Interface MTU - Range: `1500`-`9216` - Default value: `1500`
     * 
     */
    @Import(name="interfaceMtu")
    private @Nullable Output<Integer> interfaceMtu;

    /**
     * @return Interface MTU - Range: `1500`-`9216` - Default value: `1500`
     * 
     */
    public Optional<Output<Integer>> interfaceMtu() {
        return Optional.ofNullable(this.interfaceMtu);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceMtuVariable")
    private @Nullable Output<String> interfaceMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceMtuVariable() {
        return Optional.ofNullable(this.interfaceMtuVariable);
    }

    @Import(name="interfaceName", required=true)
    private Output<String> interfaceName;

    public Output<String> interfaceName() {
        return this.interfaceName;
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceNameVariable")
    private @Nullable Output<String> interfaceNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceNameVariable() {
        return Optional.ofNullable(this.interfaceNameVariable);
    }

    /**
     * IP Directed-Broadcast - Default value: `false`
     * 
     */
    @Import(name="ipDirectedBroadcast")
    private @Nullable Output<Boolean> ipDirectedBroadcast;

    /**
     * @return IP Directed-Broadcast - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> ipDirectedBroadcast() {
        return Optional.ofNullable(this.ipDirectedBroadcast);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipDirectedBroadcastVariable")
    private @Nullable Output<String> ipDirectedBroadcastVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipDirectedBroadcastVariable() {
        return Optional.ofNullable(this.ipDirectedBroadcastVariable);
    }

    /**
     * IP MTU for GigabitEthernet main &lt;576..Interface MTU&gt;, GigabitEthernet subinterface &lt;576..9216&gt;, Other Interfaces
     * &lt;576..2000&gt; in bytes - Range: `576`-`9216` - Default value: `1500`
     * 
     */
    @Import(name="ipMtu")
    private @Nullable Output<Integer> ipMtu;

    /**
     * @return IP MTU for GigabitEthernet main &lt;576..Interface MTU&gt;, GigabitEthernet subinterface &lt;576..9216&gt;, Other Interfaces
     * &lt;576..2000&gt; in bytes - Range: `576`-`9216` - Default value: `1500`
     * 
     */
    public Optional<Output<Integer>> ipMtu() {
        return Optional.ofNullable(this.ipMtu);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipMtuVariable")
    private @Nullable Output<String> ipMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipMtuVariable() {
        return Optional.ofNullable(this.ipMtuVariable);
    }

    /**
     * IP Address
     * 
     */
    @Import(name="ipv4Address")
    private @Nullable Output<String> ipv4Address;

    /**
     * @return IP Address
     * 
     */
    public Optional<Output<String>> ipv4Address() {
        return Optional.ofNullable(this.ipv4Address);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4AddressVariable")
    private @Nullable Output<String> ipv4AddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4AddressVariable() {
        return Optional.ofNullable(this.ipv4AddressVariable);
    }

    /**
     * Interface auto detect bandwidth - Default value: `false`
     * 
     */
    @Import(name="ipv4AutoDetectBandwidth")
    private @Nullable Output<Boolean> ipv4AutoDetectBandwidth;

    /**
     * @return Interface auto detect bandwidth - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> ipv4AutoDetectBandwidth() {
        return Optional.ofNullable(this.ipv4AutoDetectBandwidth);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4AutoDetectBandwidthVariable")
    private @Nullable Output<String> ipv4AutoDetectBandwidthVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4AutoDetectBandwidthVariable() {
        return Optional.ofNullable(this.ipv4AutoDetectBandwidthVariable);
    }

    /**
     * DHCP Distance - Range: `1`-`65536`
     * 
     */
    @Import(name="ipv4DhcpDistance")
    private @Nullable Output<Integer> ipv4DhcpDistance;

    /**
     * @return DHCP Distance - Range: `1`-`65536`
     * 
     */
    public Optional<Output<Integer>> ipv4DhcpDistance() {
        return Optional.ofNullable(this.ipv4DhcpDistance);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4DhcpDistanceVariable")
    private @Nullable Output<String> ipv4DhcpDistanceVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4DhcpDistanceVariable() {
        return Optional.ofNullable(this.ipv4DhcpDistanceVariable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4DhcpHelperVariable")
    private @Nullable Output<String> ipv4DhcpHelperVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4DhcpHelperVariable() {
        return Optional.ofNullable(this.ipv4DhcpHelperVariable);
    }

    /**
     * List of DHCP IPv4 helper addresses (min 1, max 8)
     * 
     */
    @Import(name="ipv4DhcpHelpers")
    private @Nullable Output<List<String>> ipv4DhcpHelpers;

    /**
     * @return List of DHCP IPv4 helper addresses (min 1, max 8)
     * 
     */
    public Optional<Output<List<String>>> ipv4DhcpHelpers() {
        return Optional.ofNullable(this.ipv4DhcpHelpers);
    }

    /**
     * Iperf server for auto bandwidth detect
     * 
     */
    @Import(name="ipv4IperfServer")
    private @Nullable Output<String> ipv4IperfServer;

    /**
     * @return Iperf server for auto bandwidth detect
     * 
     */
    public Optional<Output<String>> ipv4IperfServer() {
        return Optional.ofNullable(this.ipv4IperfServer);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4IperfServerVariable")
    private @Nullable Output<String> ipv4IperfServerVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4IperfServerVariable() {
        return Optional.ofNullable(this.ipv4IperfServerVariable);
    }

    /**
     * Secondary IpV4 Addresses
     * 
     */
    @Import(name="ipv4SecondaryAddresses")
    private @Nullable Output<List<TransportManagementVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArgs>> ipv4SecondaryAddresses;

    /**
     * @return Secondary IpV4 Addresses
     * 
     */
    public Optional<Output<List<TransportManagementVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArgs>>> ipv4SecondaryAddresses() {
        return Optional.ofNullable(this.ipv4SecondaryAddresses);
    }

    /**
     * Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     * 
     */
    @Import(name="ipv4SubnetMask")
    private @Nullable Output<String> ipv4SubnetMask;

    /**
     * @return Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     * 
     */
    public Optional<Output<String>> ipv4SubnetMask() {
        return Optional.ofNullable(this.ipv4SubnetMask);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4SubnetMaskVariable")
    private @Nullable Output<String> ipv4SubnetMaskVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4SubnetMaskVariable() {
        return Optional.ofNullable(this.ipv4SubnetMaskVariable);
    }

    /**
     * IPv6 Address Secondary
     * 
     */
    @Import(name="ipv6Address")
    private @Nullable Output<String> ipv6Address;

    /**
     * @return IPv6 Address Secondary
     * 
     */
    public Optional<Output<String>> ipv6Address() {
        return Optional.ofNullable(this.ipv6Address);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv6AddressVariable")
    private @Nullable Output<String> ipv6AddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv6AddressVariable() {
        return Optional.ofNullable(this.ipv6AddressVariable);
    }

    /**
     * Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
     * 
     */
    @Import(name="loadInterval")
    private @Nullable Output<Integer> loadInterval;

    /**
     * @return Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
     * 
     */
    public Optional<Output<Integer>> loadInterval() {
        return Optional.ofNullable(this.loadInterval);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="loadIntervalVariable")
    private @Nullable Output<String> loadIntervalVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> loadIntervalVariable() {
        return Optional.ofNullable(this.loadIntervalVariable);
    }

    /**
     * MAC Address
     * 
     */
    @Import(name="macAddress")
    private @Nullable Output<String> macAddress;

    /**
     * @return MAC Address
     * 
     */
    public Optional<Output<String>> macAddress() {
        return Optional.ofNullable(this.macAddress);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="macAddressVariable")
    private @Nullable Output<String> macAddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> macAddressVariable() {
        return Optional.ofNullable(this.macAddressVariable);
    }

    /**
     * Media type - Choices: `auto-select`, `rj45`, `sfp`
     * 
     */
    @Import(name="mediaType")
    private @Nullable Output<String> mediaType;

    /**
     * @return Media type - Choices: `auto-select`, `rj45`, `sfp`
     * 
     */
    public Optional<Output<String>> mediaType() {
        return Optional.ofNullable(this.mediaType);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="mediaTypeVariable")
    private @Nullable Output<String> mediaTypeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> mediaTypeVariable() {
        return Optional.ofNullable(this.mediaTypeVariable);
    }

    /**
     * The name of the profile parcel
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the profile parcel
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * - Default value: `true`
     * 
     */
    @Import(name="shutdown")
    private @Nullable Output<Boolean> shutdown;

    /**
     * @return - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> shutdown() {
        return Optional.ofNullable(this.shutdown);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="shutdownVariable")
    private @Nullable Output<String> shutdownVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> shutdownVariable() {
        return Optional.ofNullable(this.shutdownVariable);
    }

    /**
     * Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
     * 
     */
    @Import(name="speed")
    private @Nullable Output<String> speed;

    /**
     * @return Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
     * 
     */
    public Optional<Output<String>> speed() {
        return Optional.ofNullable(this.speed);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="speedVariable")
    private @Nullable Output<String> speedVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> speedVariable() {
        return Optional.ofNullable(this.speedVariable);
    }

    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     * 
     */
    @Import(name="tcpMss")
    private @Nullable Output<Integer> tcpMss;

    /**
     * @return TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     * 
     */
    public Optional<Output<Integer>> tcpMss() {
        return Optional.ofNullable(this.tcpMss);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tcpMssVariable")
    private @Nullable Output<String> tcpMssVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tcpMssVariable() {
        return Optional.ofNullable(this.tcpMssVariable);
    }

    /**
     * Transport Management VPN Profile Parcel ID
     * 
     */
    @Import(name="transportManagementVpnProfileParcelId")
    private @Nullable Output<String> transportManagementVpnProfileParcelId;

    /**
     * @return Transport Management VPN Profile Parcel ID
     * 
     */
    public Optional<Output<String>> transportManagementVpnProfileParcelId() {
        return Optional.ofNullable(this.transportManagementVpnProfileParcelId);
    }

    private TransportManagementVpnInterfaceEthernetProfileParcelArgs() {}

    private TransportManagementVpnInterfaceEthernetProfileParcelArgs(TransportManagementVpnInterfaceEthernetProfileParcelArgs $) {
        this.arpEntries = $.arpEntries;
        this.arpTimeout = $.arpTimeout;
        this.arpTimeoutVariable = $.arpTimeoutVariable;
        this.autonegotiate = $.autonegotiate;
        this.autonegotiateVariable = $.autonegotiateVariable;
        this.basicConfigurationDescription = $.basicConfigurationDescription;
        this.basicConfigurationDescriptionVariable = $.basicConfigurationDescriptionVariable;
        this.description = $.description;
        this.duplex = $.duplex;
        this.duplexVariable = $.duplexVariable;
        this.enableDhcpv6 = $.enableDhcpv6;
        this.featureProfileId = $.featureProfileId;
        this.icmpRedirectDisable = $.icmpRedirectDisable;
        this.icmpRedirectDisableVariable = $.icmpRedirectDisableVariable;
        this.interfaceMtu = $.interfaceMtu;
        this.interfaceMtuVariable = $.interfaceMtuVariable;
        this.interfaceName = $.interfaceName;
        this.interfaceNameVariable = $.interfaceNameVariable;
        this.ipDirectedBroadcast = $.ipDirectedBroadcast;
        this.ipDirectedBroadcastVariable = $.ipDirectedBroadcastVariable;
        this.ipMtu = $.ipMtu;
        this.ipMtuVariable = $.ipMtuVariable;
        this.ipv4Address = $.ipv4Address;
        this.ipv4AddressVariable = $.ipv4AddressVariable;
        this.ipv4AutoDetectBandwidth = $.ipv4AutoDetectBandwidth;
        this.ipv4AutoDetectBandwidthVariable = $.ipv4AutoDetectBandwidthVariable;
        this.ipv4DhcpDistance = $.ipv4DhcpDistance;
        this.ipv4DhcpDistanceVariable = $.ipv4DhcpDistanceVariable;
        this.ipv4DhcpHelperVariable = $.ipv4DhcpHelperVariable;
        this.ipv4DhcpHelpers = $.ipv4DhcpHelpers;
        this.ipv4IperfServer = $.ipv4IperfServer;
        this.ipv4IperfServerVariable = $.ipv4IperfServerVariable;
        this.ipv4SecondaryAddresses = $.ipv4SecondaryAddresses;
        this.ipv4SubnetMask = $.ipv4SubnetMask;
        this.ipv4SubnetMaskVariable = $.ipv4SubnetMaskVariable;
        this.ipv6Address = $.ipv6Address;
        this.ipv6AddressVariable = $.ipv6AddressVariable;
        this.loadInterval = $.loadInterval;
        this.loadIntervalVariable = $.loadIntervalVariable;
        this.macAddress = $.macAddress;
        this.macAddressVariable = $.macAddressVariable;
        this.mediaType = $.mediaType;
        this.mediaTypeVariable = $.mediaTypeVariable;
        this.name = $.name;
        this.shutdown = $.shutdown;
        this.shutdownVariable = $.shutdownVariable;
        this.speed = $.speed;
        this.speedVariable = $.speedVariable;
        this.tcpMss = $.tcpMss;
        this.tcpMssVariable = $.tcpMssVariable;
        this.transportManagementVpnProfileParcelId = $.transportManagementVpnProfileParcelId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransportManagementVpnInterfaceEthernetProfileParcelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransportManagementVpnInterfaceEthernetProfileParcelArgs $;

        public Builder() {
            $ = new TransportManagementVpnInterfaceEthernetProfileParcelArgs();
        }

        public Builder(TransportManagementVpnInterfaceEthernetProfileParcelArgs defaults) {
            $ = new TransportManagementVpnInterfaceEthernetProfileParcelArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param arpEntries Configure ARP entries
         * 
         * @return builder
         * 
         */
        public Builder arpEntries(@Nullable Output<List<TransportManagementVpnInterfaceEthernetProfileParcelArpEntryArgs>> arpEntries) {
            $.arpEntries = arpEntries;
            return this;
        }

        /**
         * @param arpEntries Configure ARP entries
         * 
         * @return builder
         * 
         */
        public Builder arpEntries(List<TransportManagementVpnInterfaceEthernetProfileParcelArpEntryArgs> arpEntries) {
            return arpEntries(Output.of(arpEntries));
        }

        /**
         * @param arpEntries Configure ARP entries
         * 
         * @return builder
         * 
         */
        public Builder arpEntries(TransportManagementVpnInterfaceEthernetProfileParcelArpEntryArgs... arpEntries) {
            return arpEntries(List.of(arpEntries));
        }

        /**
         * @param arpTimeout Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2147483` - Default value: `1200`
         * 
         * @return builder
         * 
         */
        public Builder arpTimeout(@Nullable Output<Integer> arpTimeout) {
            $.arpTimeout = arpTimeout;
            return this;
        }

        /**
         * @param arpTimeout Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2147483` - Default value: `1200`
         * 
         * @return builder
         * 
         */
        public Builder arpTimeout(Integer arpTimeout) {
            return arpTimeout(Output.of(arpTimeout));
        }

        /**
         * @param arpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder arpTimeoutVariable(@Nullable Output<String> arpTimeoutVariable) {
            $.arpTimeoutVariable = arpTimeoutVariable;
            return this;
        }

        /**
         * @param arpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder arpTimeoutVariable(String arpTimeoutVariable) {
            return arpTimeoutVariable(Output.of(arpTimeoutVariable));
        }

        /**
         * @param autonegotiate Link autonegotiation
         * 
         * @return builder
         * 
         */
        public Builder autonegotiate(@Nullable Output<Boolean> autonegotiate) {
            $.autonegotiate = autonegotiate;
            return this;
        }

        /**
         * @param autonegotiate Link autonegotiation
         * 
         * @return builder
         * 
         */
        public Builder autonegotiate(Boolean autonegotiate) {
            return autonegotiate(Output.of(autonegotiate));
        }

        /**
         * @param autonegotiateVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder autonegotiateVariable(@Nullable Output<String> autonegotiateVariable) {
            $.autonegotiateVariable = autonegotiateVariable;
            return this;
        }

        /**
         * @param autonegotiateVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder autonegotiateVariable(String autonegotiateVariable) {
            return autonegotiateVariable(Output.of(autonegotiateVariable));
        }

        public Builder basicConfigurationDescription(@Nullable Output<String> basicConfigurationDescription) {
            $.basicConfigurationDescription = basicConfigurationDescription;
            return this;
        }

        public Builder basicConfigurationDescription(String basicConfigurationDescription) {
            return basicConfigurationDescription(Output.of(basicConfigurationDescription));
        }

        /**
         * @param basicConfigurationDescriptionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder basicConfigurationDescriptionVariable(@Nullable Output<String> basicConfigurationDescriptionVariable) {
            $.basicConfigurationDescriptionVariable = basicConfigurationDescriptionVariable;
            return this;
        }

        /**
         * @param basicConfigurationDescriptionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder basicConfigurationDescriptionVariable(String basicConfigurationDescriptionVariable) {
            return basicConfigurationDescriptionVariable(Output.of(basicConfigurationDescriptionVariable));
        }

        /**
         * @param description The description of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param duplex Duplex mode - Choices: `full`, `half`, `auto`
         * 
         * @return builder
         * 
         */
        public Builder duplex(@Nullable Output<String> duplex) {
            $.duplex = duplex;
            return this;
        }

        /**
         * @param duplex Duplex mode - Choices: `full`, `half`, `auto`
         * 
         * @return builder
         * 
         */
        public Builder duplex(String duplex) {
            return duplex(Output.of(duplex));
        }

        /**
         * @param duplexVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder duplexVariable(@Nullable Output<String> duplexVariable) {
            $.duplexVariable = duplexVariable;
            return this;
        }

        /**
         * @param duplexVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder duplexVariable(String duplexVariable) {
            return duplexVariable(Output.of(duplexVariable));
        }

        /**
         * @param enableDhcpv6 Enable DHCPv6
         * 
         * @return builder
         * 
         */
        public Builder enableDhcpv6(@Nullable Output<Boolean> enableDhcpv6) {
            $.enableDhcpv6 = enableDhcpv6;
            return this;
        }

        /**
         * @param enableDhcpv6 Enable DHCPv6
         * 
         * @return builder
         * 
         */
        public Builder enableDhcpv6(Boolean enableDhcpv6) {
            return enableDhcpv6(Output.of(enableDhcpv6));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(@Nullable Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param icmpRedirectDisable ICMP/ICMPv6 Redirect Disable - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder icmpRedirectDisable(@Nullable Output<Boolean> icmpRedirectDisable) {
            $.icmpRedirectDisable = icmpRedirectDisable;
            return this;
        }

        /**
         * @param icmpRedirectDisable ICMP/ICMPv6 Redirect Disable - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder icmpRedirectDisable(Boolean icmpRedirectDisable) {
            return icmpRedirectDisable(Output.of(icmpRedirectDisable));
        }

        /**
         * @param icmpRedirectDisableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder icmpRedirectDisableVariable(@Nullable Output<String> icmpRedirectDisableVariable) {
            $.icmpRedirectDisableVariable = icmpRedirectDisableVariable;
            return this;
        }

        /**
         * @param icmpRedirectDisableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder icmpRedirectDisableVariable(String icmpRedirectDisableVariable) {
            return icmpRedirectDisableVariable(Output.of(icmpRedirectDisableVariable));
        }

        /**
         * @param interfaceMtu Interface MTU - Range: `1500`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder interfaceMtu(@Nullable Output<Integer> interfaceMtu) {
            $.interfaceMtu = interfaceMtu;
            return this;
        }

        /**
         * @param interfaceMtu Interface MTU - Range: `1500`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder interfaceMtu(Integer interfaceMtu) {
            return interfaceMtu(Output.of(interfaceMtu));
        }

        /**
         * @param interfaceMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceMtuVariable(@Nullable Output<String> interfaceMtuVariable) {
            $.interfaceMtuVariable = interfaceMtuVariable;
            return this;
        }

        /**
         * @param interfaceMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceMtuVariable(String interfaceMtuVariable) {
            return interfaceMtuVariable(Output.of(interfaceMtuVariable));
        }

        public Builder interfaceName(Output<String> interfaceName) {
            $.interfaceName = interfaceName;
            return this;
        }

        public Builder interfaceName(String interfaceName) {
            return interfaceName(Output.of(interfaceName));
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(@Nullable Output<String> interfaceNameVariable) {
            $.interfaceNameVariable = interfaceNameVariable;
            return this;
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(String interfaceNameVariable) {
            return interfaceNameVariable(Output.of(interfaceNameVariable));
        }

        /**
         * @param ipDirectedBroadcast IP Directed-Broadcast - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcast(@Nullable Output<Boolean> ipDirectedBroadcast) {
            $.ipDirectedBroadcast = ipDirectedBroadcast;
            return this;
        }

        /**
         * @param ipDirectedBroadcast IP Directed-Broadcast - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcast(Boolean ipDirectedBroadcast) {
            return ipDirectedBroadcast(Output.of(ipDirectedBroadcast));
        }

        /**
         * @param ipDirectedBroadcastVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcastVariable(@Nullable Output<String> ipDirectedBroadcastVariable) {
            $.ipDirectedBroadcastVariable = ipDirectedBroadcastVariable;
            return this;
        }

        /**
         * @param ipDirectedBroadcastVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcastVariable(String ipDirectedBroadcastVariable) {
            return ipDirectedBroadcastVariable(Output.of(ipDirectedBroadcastVariable));
        }

        /**
         * @param ipMtu IP MTU for GigabitEthernet main &lt;576..Interface MTU&gt;, GigabitEthernet subinterface &lt;576..9216&gt;, Other Interfaces
         * &lt;576..2000&gt; in bytes - Range: `576`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder ipMtu(@Nullable Output<Integer> ipMtu) {
            $.ipMtu = ipMtu;
            return this;
        }

        /**
         * @param ipMtu IP MTU for GigabitEthernet main &lt;576..Interface MTU&gt;, GigabitEthernet subinterface &lt;576..9216&gt;, Other Interfaces
         * &lt;576..2000&gt; in bytes - Range: `576`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder ipMtu(Integer ipMtu) {
            return ipMtu(Output.of(ipMtu));
        }

        /**
         * @param ipMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipMtuVariable(@Nullable Output<String> ipMtuVariable) {
            $.ipMtuVariable = ipMtuVariable;
            return this;
        }

        /**
         * @param ipMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipMtuVariable(String ipMtuVariable) {
            return ipMtuVariable(Output.of(ipMtuVariable));
        }

        /**
         * @param ipv4Address IP Address
         * 
         * @return builder
         * 
         */
        public Builder ipv4Address(@Nullable Output<String> ipv4Address) {
            $.ipv4Address = ipv4Address;
            return this;
        }

        /**
         * @param ipv4Address IP Address
         * 
         * @return builder
         * 
         */
        public Builder ipv4Address(String ipv4Address) {
            return ipv4Address(Output.of(ipv4Address));
        }

        /**
         * @param ipv4AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4AddressVariable(@Nullable Output<String> ipv4AddressVariable) {
            $.ipv4AddressVariable = ipv4AddressVariable;
            return this;
        }

        /**
         * @param ipv4AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4AddressVariable(String ipv4AddressVariable) {
            return ipv4AddressVariable(Output.of(ipv4AddressVariable));
        }

        /**
         * @param ipv4AutoDetectBandwidth Interface auto detect bandwidth - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipv4AutoDetectBandwidth(@Nullable Output<Boolean> ipv4AutoDetectBandwidth) {
            $.ipv4AutoDetectBandwidth = ipv4AutoDetectBandwidth;
            return this;
        }

        /**
         * @param ipv4AutoDetectBandwidth Interface auto detect bandwidth - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipv4AutoDetectBandwidth(Boolean ipv4AutoDetectBandwidth) {
            return ipv4AutoDetectBandwidth(Output.of(ipv4AutoDetectBandwidth));
        }

        /**
         * @param ipv4AutoDetectBandwidthVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4AutoDetectBandwidthVariable(@Nullable Output<String> ipv4AutoDetectBandwidthVariable) {
            $.ipv4AutoDetectBandwidthVariable = ipv4AutoDetectBandwidthVariable;
            return this;
        }

        /**
         * @param ipv4AutoDetectBandwidthVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4AutoDetectBandwidthVariable(String ipv4AutoDetectBandwidthVariable) {
            return ipv4AutoDetectBandwidthVariable(Output.of(ipv4AutoDetectBandwidthVariable));
        }

        /**
         * @param ipv4DhcpDistance DHCP Distance - Range: `1`-`65536`
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpDistance(@Nullable Output<Integer> ipv4DhcpDistance) {
            $.ipv4DhcpDistance = ipv4DhcpDistance;
            return this;
        }

        /**
         * @param ipv4DhcpDistance DHCP Distance - Range: `1`-`65536`
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpDistance(Integer ipv4DhcpDistance) {
            return ipv4DhcpDistance(Output.of(ipv4DhcpDistance));
        }

        /**
         * @param ipv4DhcpDistanceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpDistanceVariable(@Nullable Output<String> ipv4DhcpDistanceVariable) {
            $.ipv4DhcpDistanceVariable = ipv4DhcpDistanceVariable;
            return this;
        }

        /**
         * @param ipv4DhcpDistanceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpDistanceVariable(String ipv4DhcpDistanceVariable) {
            return ipv4DhcpDistanceVariable(Output.of(ipv4DhcpDistanceVariable));
        }

        /**
         * @param ipv4DhcpHelperVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelperVariable(@Nullable Output<String> ipv4DhcpHelperVariable) {
            $.ipv4DhcpHelperVariable = ipv4DhcpHelperVariable;
            return this;
        }

        /**
         * @param ipv4DhcpHelperVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelperVariable(String ipv4DhcpHelperVariable) {
            return ipv4DhcpHelperVariable(Output.of(ipv4DhcpHelperVariable));
        }

        /**
         * @param ipv4DhcpHelpers List of DHCP IPv4 helper addresses (min 1, max 8)
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpers(@Nullable Output<List<String>> ipv4DhcpHelpers) {
            $.ipv4DhcpHelpers = ipv4DhcpHelpers;
            return this;
        }

        /**
         * @param ipv4DhcpHelpers List of DHCP IPv4 helper addresses (min 1, max 8)
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpers(List<String> ipv4DhcpHelpers) {
            return ipv4DhcpHelpers(Output.of(ipv4DhcpHelpers));
        }

        /**
         * @param ipv4DhcpHelpers List of DHCP IPv4 helper addresses (min 1, max 8)
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpers(String... ipv4DhcpHelpers) {
            return ipv4DhcpHelpers(List.of(ipv4DhcpHelpers));
        }

        /**
         * @param ipv4IperfServer Iperf server for auto bandwidth detect
         * 
         * @return builder
         * 
         */
        public Builder ipv4IperfServer(@Nullable Output<String> ipv4IperfServer) {
            $.ipv4IperfServer = ipv4IperfServer;
            return this;
        }

        /**
         * @param ipv4IperfServer Iperf server for auto bandwidth detect
         * 
         * @return builder
         * 
         */
        public Builder ipv4IperfServer(String ipv4IperfServer) {
            return ipv4IperfServer(Output.of(ipv4IperfServer));
        }

        /**
         * @param ipv4IperfServerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4IperfServerVariable(@Nullable Output<String> ipv4IperfServerVariable) {
            $.ipv4IperfServerVariable = ipv4IperfServerVariable;
            return this;
        }

        /**
         * @param ipv4IperfServerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4IperfServerVariable(String ipv4IperfServerVariable) {
            return ipv4IperfServerVariable(Output.of(ipv4IperfServerVariable));
        }

        /**
         * @param ipv4SecondaryAddresses Secondary IpV4 Addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4SecondaryAddresses(@Nullable Output<List<TransportManagementVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArgs>> ipv4SecondaryAddresses) {
            $.ipv4SecondaryAddresses = ipv4SecondaryAddresses;
            return this;
        }

        /**
         * @param ipv4SecondaryAddresses Secondary IpV4 Addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4SecondaryAddresses(List<TransportManagementVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArgs> ipv4SecondaryAddresses) {
            return ipv4SecondaryAddresses(Output.of(ipv4SecondaryAddresses));
        }

        /**
         * @param ipv4SecondaryAddresses Secondary IpV4 Addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4SecondaryAddresses(TransportManagementVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArgs... ipv4SecondaryAddresses) {
            return ipv4SecondaryAddresses(List.of(ipv4SecondaryAddresses));
        }

        /**
         * @param ipv4SubnetMask Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
         * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
         * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
         * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
         * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder ipv4SubnetMask(@Nullable Output<String> ipv4SubnetMask) {
            $.ipv4SubnetMask = ipv4SubnetMask;
            return this;
        }

        /**
         * @param ipv4SubnetMask Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
         * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
         * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
         * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
         * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder ipv4SubnetMask(String ipv4SubnetMask) {
            return ipv4SubnetMask(Output.of(ipv4SubnetMask));
        }

        /**
         * @param ipv4SubnetMaskVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4SubnetMaskVariable(@Nullable Output<String> ipv4SubnetMaskVariable) {
            $.ipv4SubnetMaskVariable = ipv4SubnetMaskVariable;
            return this;
        }

        /**
         * @param ipv4SubnetMaskVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4SubnetMaskVariable(String ipv4SubnetMaskVariable) {
            return ipv4SubnetMaskVariable(Output.of(ipv4SubnetMaskVariable));
        }

        /**
         * @param ipv6Address IPv6 Address Secondary
         * 
         * @return builder
         * 
         */
        public Builder ipv6Address(@Nullable Output<String> ipv6Address) {
            $.ipv6Address = ipv6Address;
            return this;
        }

        /**
         * @param ipv6Address IPv6 Address Secondary
         * 
         * @return builder
         * 
         */
        public Builder ipv6Address(String ipv6Address) {
            return ipv6Address(Output.of(ipv6Address));
        }

        /**
         * @param ipv6AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv6AddressVariable(@Nullable Output<String> ipv6AddressVariable) {
            $.ipv6AddressVariable = ipv6AddressVariable;
            return this;
        }

        /**
         * @param ipv6AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv6AddressVariable(String ipv6AddressVariable) {
            return ipv6AddressVariable(Output.of(ipv6AddressVariable));
        }

        /**
         * @param loadInterval Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
         * 
         * @return builder
         * 
         */
        public Builder loadInterval(@Nullable Output<Integer> loadInterval) {
            $.loadInterval = loadInterval;
            return this;
        }

        /**
         * @param loadInterval Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
         * 
         * @return builder
         * 
         */
        public Builder loadInterval(Integer loadInterval) {
            return loadInterval(Output.of(loadInterval));
        }

        /**
         * @param loadIntervalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder loadIntervalVariable(@Nullable Output<String> loadIntervalVariable) {
            $.loadIntervalVariable = loadIntervalVariable;
            return this;
        }

        /**
         * @param loadIntervalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder loadIntervalVariable(String loadIntervalVariable) {
            return loadIntervalVariable(Output.of(loadIntervalVariable));
        }

        /**
         * @param macAddress MAC Address
         * 
         * @return builder
         * 
         */
        public Builder macAddress(@Nullable Output<String> macAddress) {
            $.macAddress = macAddress;
            return this;
        }

        /**
         * @param macAddress MAC Address
         * 
         * @return builder
         * 
         */
        public Builder macAddress(String macAddress) {
            return macAddress(Output.of(macAddress));
        }

        /**
         * @param macAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder macAddressVariable(@Nullable Output<String> macAddressVariable) {
            $.macAddressVariable = macAddressVariable;
            return this;
        }

        /**
         * @param macAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder macAddressVariable(String macAddressVariable) {
            return macAddressVariable(Output.of(macAddressVariable));
        }

        /**
         * @param mediaType Media type - Choices: `auto-select`, `rj45`, `sfp`
         * 
         * @return builder
         * 
         */
        public Builder mediaType(@Nullable Output<String> mediaType) {
            $.mediaType = mediaType;
            return this;
        }

        /**
         * @param mediaType Media type - Choices: `auto-select`, `rj45`, `sfp`
         * 
         * @return builder
         * 
         */
        public Builder mediaType(String mediaType) {
            return mediaType(Output.of(mediaType));
        }

        /**
         * @param mediaTypeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder mediaTypeVariable(@Nullable Output<String> mediaTypeVariable) {
            $.mediaTypeVariable = mediaTypeVariable;
            return this;
        }

        /**
         * @param mediaTypeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder mediaTypeVariable(String mediaTypeVariable) {
            return mediaTypeVariable(Output.of(mediaTypeVariable));
        }

        /**
         * @param name The name of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param shutdown - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder shutdown(@Nullable Output<Boolean> shutdown) {
            $.shutdown = shutdown;
            return this;
        }

        /**
         * @param shutdown - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder shutdown(Boolean shutdown) {
            return shutdown(Output.of(shutdown));
        }

        /**
         * @param shutdownVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdownVariable(@Nullable Output<String> shutdownVariable) {
            $.shutdownVariable = shutdownVariable;
            return this;
        }

        /**
         * @param shutdownVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdownVariable(String shutdownVariable) {
            return shutdownVariable(Output.of(shutdownVariable));
        }

        /**
         * @param speed Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
         * 
         * @return builder
         * 
         */
        public Builder speed(@Nullable Output<String> speed) {
            $.speed = speed;
            return this;
        }

        /**
         * @param speed Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
         * 
         * @return builder
         * 
         */
        public Builder speed(String speed) {
            return speed(Output.of(speed));
        }

        /**
         * @param speedVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder speedVariable(@Nullable Output<String> speedVariable) {
            $.speedVariable = speedVariable;
            return this;
        }

        /**
         * @param speedVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder speedVariable(String speedVariable) {
            return speedVariable(Output.of(speedVariable));
        }

        /**
         * @param tcpMss TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
         * 
         * @return builder
         * 
         */
        public Builder tcpMss(@Nullable Output<Integer> tcpMss) {
            $.tcpMss = tcpMss;
            return this;
        }

        /**
         * @param tcpMss TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
         * 
         * @return builder
         * 
         */
        public Builder tcpMss(Integer tcpMss) {
            return tcpMss(Output.of(tcpMss));
        }

        /**
         * @param tcpMssVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tcpMssVariable(@Nullable Output<String> tcpMssVariable) {
            $.tcpMssVariable = tcpMssVariable;
            return this;
        }

        /**
         * @param tcpMssVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tcpMssVariable(String tcpMssVariable) {
            return tcpMssVariable(Output.of(tcpMssVariable));
        }

        /**
         * @param transportManagementVpnProfileParcelId Transport Management VPN Profile Parcel ID
         * 
         * @return builder
         * 
         */
        public Builder transportManagementVpnProfileParcelId(@Nullable Output<String> transportManagementVpnProfileParcelId) {
            $.transportManagementVpnProfileParcelId = transportManagementVpnProfileParcelId;
            return this;
        }

        /**
         * @param transportManagementVpnProfileParcelId Transport Management VPN Profile Parcel ID
         * 
         * @return builder
         * 
         */
        public Builder transportManagementVpnProfileParcelId(String transportManagementVpnProfileParcelId) {
            return transportManagementVpnProfileParcelId(Output.of(transportManagementVpnProfileParcelId));
        }

        public TransportManagementVpnInterfaceEthernetProfileParcelArgs build() {
            if ($.interfaceName == null) {
                throw new MissingRequiredPropertyException("TransportManagementVpnInterfaceEthernetProfileParcelArgs", "interfaceName");
            }
            return $;
        }
    }

}
