// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.CiscoVpnFeatureTemplateIpv4StaticRouteNextHopArgs;
import com.pulumi.sdwan.inputs.CiscoVpnFeatureTemplateIpv4StaticRouteTrackNextHopArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CiscoVpnFeatureTemplateIpv4StaticRouteArgs extends com.pulumi.resources.ResourceArgs {

    public static final CiscoVpnFeatureTemplateIpv4StaticRouteArgs Empty = new CiscoVpnFeatureTemplateIpv4StaticRouteArgs();

    /**
     * Default Gateway obtained from DHCP
     *   - Default value: `false`
     * 
     */
    @Import(name="dhcp")
    private @Nullable Output<Boolean> dhcp;

    /**
     * @return Default Gateway obtained from DHCP
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> dhcp() {
        return Optional.ofNullable(this.dhcp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="dhcpVariable")
    private @Nullable Output<String> dhcpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> dhcpVariable() {
        return Optional.ofNullable(this.dhcpVariable);
    }

    /**
     * Administrative distance
     *   - Range: `1`-`255`
     *   - Default value: `1`
     * 
     */
    @Import(name="distance")
    private @Nullable Output<Integer> distance;

    /**
     * @return Administrative distance
     *   - Range: `1`-`255`
     *   - Default value: `1`
     * 
     */
    public Optional<Output<Integer>> distance() {
        return Optional.ofNullable(this.distance);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="distanceVariable")
    private @Nullable Output<String> distanceVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> distanceVariable() {
        return Optional.ofNullable(this.distanceVariable);
    }

    /**
     * IP gateway address
     * 
     */
    @Import(name="nextHops")
    private @Nullable Output<List<CiscoVpnFeatureTemplateIpv4StaticRouteNextHopArgs>> nextHops;

    /**
     * @return IP gateway address
     * 
     */
    public Optional<Output<List<CiscoVpnFeatureTemplateIpv4StaticRouteNextHopArgs>>> nextHops() {
        return Optional.ofNullable(this.nextHops);
    }

    /**
     * null0
     *   - Default value: `false`
     * 
     */
    @Import(name="null0")
    private @Nullable Output<Boolean> null0;

    /**
     * @return null0
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> null0() {
        return Optional.ofNullable(this.null0);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="null0Variable")
    private @Nullable Output<String> null0Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> null0Variable() {
        return Optional.ofNullable(this.null0Variable);
    }

    /**
     * Indicates if list item is considered optional.
     * 
     */
    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    /**
     * Prefix
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    /**
     * @return Prefix
     * 
     */
    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="prefixVariable")
    private @Nullable Output<String> prefixVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> prefixVariable() {
        return Optional.ofNullable(this.prefixVariable);
    }

    /**
     * IP gateway address
     * 
     */
    @Import(name="trackNextHops")
    private @Nullable Output<List<CiscoVpnFeatureTemplateIpv4StaticRouteTrackNextHopArgs>> trackNextHops;

    /**
     * @return IP gateway address
     * 
     */
    public Optional<Output<List<CiscoVpnFeatureTemplateIpv4StaticRouteTrackNextHopArgs>>> trackNextHops() {
        return Optional.ofNullable(this.trackNextHops);
    }

    /**
     * Destination VPN(!=0 or !=512) to resolve the prefix
     *   - Default value: `0`
     * 
     */
    @Import(name="vpnId")
    private @Nullable Output<Integer> vpnId;

    /**
     * @return Destination VPN(!=0 or !=512) to resolve the prefix
     *   - Default value: `0`
     * 
     */
    public Optional<Output<Integer>> vpnId() {
        return Optional.ofNullable(this.vpnId);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="vpnIdVariable")
    private @Nullable Output<String> vpnIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> vpnIdVariable() {
        return Optional.ofNullable(this.vpnIdVariable);
    }

    private CiscoVpnFeatureTemplateIpv4StaticRouteArgs() {}

    private CiscoVpnFeatureTemplateIpv4StaticRouteArgs(CiscoVpnFeatureTemplateIpv4StaticRouteArgs $) {
        this.dhcp = $.dhcp;
        this.dhcpVariable = $.dhcpVariable;
        this.distance = $.distance;
        this.distanceVariable = $.distanceVariable;
        this.nextHops = $.nextHops;
        this.null0 = $.null0;
        this.null0Variable = $.null0Variable;
        this.optional = $.optional;
        this.prefix = $.prefix;
        this.prefixVariable = $.prefixVariable;
        this.trackNextHops = $.trackNextHops;
        this.vpnId = $.vpnId;
        this.vpnIdVariable = $.vpnIdVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CiscoVpnFeatureTemplateIpv4StaticRouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CiscoVpnFeatureTemplateIpv4StaticRouteArgs $;

        public Builder() {
            $ = new CiscoVpnFeatureTemplateIpv4StaticRouteArgs();
        }

        public Builder(CiscoVpnFeatureTemplateIpv4StaticRouteArgs defaults) {
            $ = new CiscoVpnFeatureTemplateIpv4StaticRouteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dhcp Default Gateway obtained from DHCP
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder dhcp(@Nullable Output<Boolean> dhcp) {
            $.dhcp = dhcp;
            return this;
        }

        /**
         * @param dhcp Default Gateway obtained from DHCP
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder dhcp(Boolean dhcp) {
            return dhcp(Output.of(dhcp));
        }

        /**
         * @param dhcpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder dhcpVariable(@Nullable Output<String> dhcpVariable) {
            $.dhcpVariable = dhcpVariable;
            return this;
        }

        /**
         * @param dhcpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder dhcpVariable(String dhcpVariable) {
            return dhcpVariable(Output.of(dhcpVariable));
        }

        /**
         * @param distance Administrative distance
         *   - Range: `1`-`255`
         *   - Default value: `1`
         * 
         * @return builder
         * 
         */
        public Builder distance(@Nullable Output<Integer> distance) {
            $.distance = distance;
            return this;
        }

        /**
         * @param distance Administrative distance
         *   - Range: `1`-`255`
         *   - Default value: `1`
         * 
         * @return builder
         * 
         */
        public Builder distance(Integer distance) {
            return distance(Output.of(distance));
        }

        /**
         * @param distanceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder distanceVariable(@Nullable Output<String> distanceVariable) {
            $.distanceVariable = distanceVariable;
            return this;
        }

        /**
         * @param distanceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder distanceVariable(String distanceVariable) {
            return distanceVariable(Output.of(distanceVariable));
        }

        /**
         * @param nextHops IP gateway address
         * 
         * @return builder
         * 
         */
        public Builder nextHops(@Nullable Output<List<CiscoVpnFeatureTemplateIpv4StaticRouteNextHopArgs>> nextHops) {
            $.nextHops = nextHops;
            return this;
        }

        /**
         * @param nextHops IP gateway address
         * 
         * @return builder
         * 
         */
        public Builder nextHops(List<CiscoVpnFeatureTemplateIpv4StaticRouteNextHopArgs> nextHops) {
            return nextHops(Output.of(nextHops));
        }

        /**
         * @param nextHops IP gateway address
         * 
         * @return builder
         * 
         */
        public Builder nextHops(CiscoVpnFeatureTemplateIpv4StaticRouteNextHopArgs... nextHops) {
            return nextHops(List.of(nextHops));
        }

        /**
         * @param null0 null0
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder null0(@Nullable Output<Boolean> null0) {
            $.null0 = null0;
            return this;
        }

        /**
         * @param null0 null0
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder null0(Boolean null0) {
            return null0(Output.of(null0));
        }

        /**
         * @param null0Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder null0Variable(@Nullable Output<String> null0Variable) {
            $.null0Variable = null0Variable;
            return this;
        }

        /**
         * @param null0Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder null0Variable(String null0Variable) {
            return null0Variable(Output.of(null0Variable));
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        /**
         * @param prefix Prefix
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix Prefix
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param prefixVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder prefixVariable(@Nullable Output<String> prefixVariable) {
            $.prefixVariable = prefixVariable;
            return this;
        }

        /**
         * @param prefixVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder prefixVariable(String prefixVariable) {
            return prefixVariable(Output.of(prefixVariable));
        }

        /**
         * @param trackNextHops IP gateway address
         * 
         * @return builder
         * 
         */
        public Builder trackNextHops(@Nullable Output<List<CiscoVpnFeatureTemplateIpv4StaticRouteTrackNextHopArgs>> trackNextHops) {
            $.trackNextHops = trackNextHops;
            return this;
        }

        /**
         * @param trackNextHops IP gateway address
         * 
         * @return builder
         * 
         */
        public Builder trackNextHops(List<CiscoVpnFeatureTemplateIpv4StaticRouteTrackNextHopArgs> trackNextHops) {
            return trackNextHops(Output.of(trackNextHops));
        }

        /**
         * @param trackNextHops IP gateway address
         * 
         * @return builder
         * 
         */
        public Builder trackNextHops(CiscoVpnFeatureTemplateIpv4StaticRouteTrackNextHopArgs... trackNextHops) {
            return trackNextHops(List.of(trackNextHops));
        }

        /**
         * @param vpnId Destination VPN(!=0 or !=512) to resolve the prefix
         *   - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder vpnId(@Nullable Output<Integer> vpnId) {
            $.vpnId = vpnId;
            return this;
        }

        /**
         * @param vpnId Destination VPN(!=0 or !=512) to resolve the prefix
         *   - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder vpnId(Integer vpnId) {
            return vpnId(Output.of(vpnId));
        }

        /**
         * @param vpnIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vpnIdVariable(@Nullable Output<String> vpnIdVariable) {
            $.vpnIdVariable = vpnIdVariable;
            return this;
        }

        /**
         * @param vpnIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vpnIdVariable(String vpnIdVariable) {
            return vpnIdVariable(Output.of(vpnIdVariable));
        }

        public CiscoVpnFeatureTemplateIpv4StaticRouteArgs build() {
            return $;
        }
    }

}
