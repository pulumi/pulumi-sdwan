// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CiscoVpnFeatureTemplatePortForwardRule {
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private @Nullable Boolean optional;
    /**
     * @return NAT Pool Name, natpool1..31
     * 
     */
    private @Nullable Integer poolName;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String poolNameVariable;
    /**
     * @return Protocol
     *   - Choices: `tcp`, `udp`
     * 
     */
    private @Nullable String protocol;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String protocolVariable;
    /**
     * @return Source IP address to be translated
     * 
     */
    private @Nullable String sourceIp;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String sourceIpVariable;
    /**
     * @return Source Port
     *   - Default value: `0`
     * 
     */
    private @Nullable Integer sourcePort;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String sourcePortVariable;
    /**
     * @return Statically translated source IP address
     * 
     */
    private @Nullable String translateIp;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String translateIpVariable;
    /**
     * @return Translate Port
     *   - Default value: `0`
     * 
     */
    private @Nullable Integer translatePort;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String translatePortVariable;

    private CiscoVpnFeatureTemplatePortForwardRule() {}
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Boolean> optional() {
        return Optional.ofNullable(this.optional);
    }
    /**
     * @return NAT Pool Name, natpool1..31
     * 
     */
    public Optional<Integer> poolName() {
        return Optional.ofNullable(this.poolName);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> poolNameVariable() {
        return Optional.ofNullable(this.poolNameVariable);
    }
    /**
     * @return Protocol
     *   - Choices: `tcp`, `udp`
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> protocolVariable() {
        return Optional.ofNullable(this.protocolVariable);
    }
    /**
     * @return Source IP address to be translated
     * 
     */
    public Optional<String> sourceIp() {
        return Optional.ofNullable(this.sourceIp);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> sourceIpVariable() {
        return Optional.ofNullable(this.sourceIpVariable);
    }
    /**
     * @return Source Port
     *   - Default value: `0`
     * 
     */
    public Optional<Integer> sourcePort() {
        return Optional.ofNullable(this.sourcePort);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> sourcePortVariable() {
        return Optional.ofNullable(this.sourcePortVariable);
    }
    /**
     * @return Statically translated source IP address
     * 
     */
    public Optional<String> translateIp() {
        return Optional.ofNullable(this.translateIp);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> translateIpVariable() {
        return Optional.ofNullable(this.translateIpVariable);
    }
    /**
     * @return Translate Port
     *   - Default value: `0`
     * 
     */
    public Optional<Integer> translatePort() {
        return Optional.ofNullable(this.translatePort);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> translatePortVariable() {
        return Optional.ofNullable(this.translatePortVariable);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CiscoVpnFeatureTemplatePortForwardRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean optional;
        private @Nullable Integer poolName;
        private @Nullable String poolNameVariable;
        private @Nullable String protocol;
        private @Nullable String protocolVariable;
        private @Nullable String sourceIp;
        private @Nullable String sourceIpVariable;
        private @Nullable Integer sourcePort;
        private @Nullable String sourcePortVariable;
        private @Nullable String translateIp;
        private @Nullable String translateIpVariable;
        private @Nullable Integer translatePort;
        private @Nullable String translatePortVariable;
        public Builder() {}
        public Builder(CiscoVpnFeatureTemplatePortForwardRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.optional = defaults.optional;
    	      this.poolName = defaults.poolName;
    	      this.poolNameVariable = defaults.poolNameVariable;
    	      this.protocol = defaults.protocol;
    	      this.protocolVariable = defaults.protocolVariable;
    	      this.sourceIp = defaults.sourceIp;
    	      this.sourceIpVariable = defaults.sourceIpVariable;
    	      this.sourcePort = defaults.sourcePort;
    	      this.sourcePortVariable = defaults.sourcePortVariable;
    	      this.translateIp = defaults.translateIp;
    	      this.translateIpVariable = defaults.translateIpVariable;
    	      this.translatePort = defaults.translatePort;
    	      this.translatePortVariable = defaults.translatePortVariable;
        }

        @CustomType.Setter
        public Builder optional(@Nullable Boolean optional) {

            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder poolName(@Nullable Integer poolName) {

            this.poolName = poolName;
            return this;
        }
        @CustomType.Setter
        public Builder poolNameVariable(@Nullable String poolNameVariable) {

            this.poolNameVariable = poolNameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {

            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder protocolVariable(@Nullable String protocolVariable) {

            this.protocolVariable = protocolVariable;
            return this;
        }
        @CustomType.Setter
        public Builder sourceIp(@Nullable String sourceIp) {

            this.sourceIp = sourceIp;
            return this;
        }
        @CustomType.Setter
        public Builder sourceIpVariable(@Nullable String sourceIpVariable) {

            this.sourceIpVariable = sourceIpVariable;
            return this;
        }
        @CustomType.Setter
        public Builder sourcePort(@Nullable Integer sourcePort) {

            this.sourcePort = sourcePort;
            return this;
        }
        @CustomType.Setter
        public Builder sourcePortVariable(@Nullable String sourcePortVariable) {

            this.sourcePortVariable = sourcePortVariable;
            return this;
        }
        @CustomType.Setter
        public Builder translateIp(@Nullable String translateIp) {

            this.translateIp = translateIp;
            return this;
        }
        @CustomType.Setter
        public Builder translateIpVariable(@Nullable String translateIpVariable) {

            this.translateIpVariable = translateIpVariable;
            return this;
        }
        @CustomType.Setter
        public Builder translatePort(@Nullable Integer translatePort) {

            this.translatePort = translatePort;
            return this;
        }
        @CustomType.Setter
        public Builder translatePortVariable(@Nullable String translatePortVariable) {

            this.translatePortVariable = translatePortVariable;
            return this;
        }
        public CiscoVpnFeatureTemplatePortForwardRule build() {
            final var _resultValue = new CiscoVpnFeatureTemplatePortForwardRule();
            _resultValue.optional = optional;
            _resultValue.poolName = poolName;
            _resultValue.poolNameVariable = poolNameVariable;
            _resultValue.protocol = protocol;
            _resultValue.protocolVariable = protocolVariable;
            _resultValue.sourceIp = sourceIp;
            _resultValue.sourceIpVariable = sourceIpVariable;
            _resultValue.sourcePort = sourcePort;
            _resultValue.sourcePortVariable = sourcePortVariable;
            _resultValue.translateIp = translateIp;
            _resultValue.translateIpVariable = translateIpVariable;
            _resultValue.translatePort = translatePort;
            _resultValue.translatePortVariable = translatePortVariable;
            return _resultValue;
        }
    }
}
