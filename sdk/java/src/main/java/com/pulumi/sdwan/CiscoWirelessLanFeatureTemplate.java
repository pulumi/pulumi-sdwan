// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.CiscoWirelessLanFeatureTemplateArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.CiscoWirelessLanFeatureTemplateState;
import com.pulumi.sdwan.outputs.CiscoWirelessLanFeatureTemplateSsid;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Cisco Wireless LAN feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sdwan.CiscoWirelessLanFeatureTemplate;
 * import com.pulumi.sdwan.CiscoWirelessLanFeatureTemplateArgs;
 * import com.pulumi.sdwan.inputs.CiscoWirelessLanFeatureTemplateSsidArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new CiscoWirelessLanFeatureTemplate("example", CiscoWirelessLanFeatureTemplateArgs.builder()
 *             .name("Example")
 *             .description("My Example")
 *             .deviceTypes("vedge-C8000V")
 *             .shutdown24ghz(false)
 *             .shutdown5ghz(false)
 *             .ssids(CiscoWirelessLanFeatureTemplateSsidArgs.builder()
 *                 .wireless_network_name("WLAN1")
 *                 .admin_state(false)
 *                 .broadcast_ssid(true)
 *                 .vlan_id(1)
 *                 .radio_type("24ghz")
 *                 .security_type("enterprise")
 *                 .radius_server_ip("1.2.3.4")
 *                 .radius_server_port(1812)
 *                 .radius_server_secret("MySecret1")
 *                 .passphrase("passphrase")
 *                 .qos_profile("silver")
 *                 .build())
 *             .country("AE")
 *             .username("user1")
 *             .password("myPassword01")
 *             .controllerIpAddress("0.0.0.0")
 *             .controllerSubnetMask("0.0.0.0")
 *             .controllerDefaultGateway("0.0.0.0")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * ```sh
 * $ pulumi import sdwan:index/ciscoWirelessLanFeatureTemplate:CiscoWirelessLanFeatureTemplate example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/ciscoWirelessLanFeatureTemplate:CiscoWirelessLanFeatureTemplate")
public class CiscoWirelessLanFeatureTemplate extends com.pulumi.resources.CustomResource {
    /**
     * Set mobile express default gateway
     *   - Default value: `0.0.0.0`
     * 
     */
    @Export(name="controllerDefaultGateway", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> controllerDefaultGateway;

    /**
     * @return Set mobile express default gateway
     *   - Default value: `0.0.0.0`
     * 
     */
    public Output<Optional<String>> controllerDefaultGateway() {
        return Codegen.optional(this.controllerDefaultGateway);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="controllerDefaultGatewayVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> controllerDefaultGatewayVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> controllerDefaultGatewayVariable() {
        return Codegen.optional(this.controllerDefaultGatewayVariable);
    }
    /**
     * Set mobile express controller address
     *   - Default value: `0.0.0.0`
     * 
     */
    @Export(name="controllerIpAddress", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> controllerIpAddress;

    /**
     * @return Set mobile express controller address
     *   - Default value: `0.0.0.0`
     * 
     */
    public Output<Optional<String>> controllerIpAddress() {
        return Codegen.optional(this.controllerIpAddress);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="controllerIpAddressVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> controllerIpAddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> controllerIpAddressVariable() {
        return Codegen.optional(this.controllerIpAddressVariable);
    }
    /**
     * Set mobile express controller subnet mask
     *   - Default value: `0.0.0.0`
     * 
     */
    @Export(name="controllerSubnetMask", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> controllerSubnetMask;

    /**
     * @return Set mobile express controller subnet mask
     *   - Default value: `0.0.0.0`
     * 
     */
    public Output<Optional<String>> controllerSubnetMask() {
        return Codegen.optional(this.controllerSubnetMask);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="controllerSubnetMaskVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> controllerSubnetMaskVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> controllerSubnetMaskVariable() {
        return Codegen.optional(this.controllerSubnetMaskVariable);
    }
    /**
     * Select country
     *   - Choices: `AE`, `AR`, `AT`, `AU`, `BA`, `BB`, `BE`, `BG`, `BH`, `BN`, `BO`, `BR`, `BY`, `CA`, `CA2`, `CH`, `CL`, `CM`, `CN`, `CO`, `CR`, `CY`, `CZ`, `DE`, `DK`, `DO`, `DZ`, `EC`, `EE`, `EG`, `ES`, `FI`, `FJ`, `FR`, `GB`, `GH`, `GI`, `GR`, `HK`, `HR`, `HU`, `ID`, `IE`, `IL`, `IO`, `IN`, `IQ`, `IS`, `IT`, `J2`, `J4`, `JM`, `JO`, `KE`, `KN`, `KW`, `KZ`, `LB`, `LI`, `LK`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `ME`, `MK`, `MN`, `MO`, `MT`, `MX`, `MY`, `NL`, `NO`, `NZ`, `OM`, `PA`, `PE`, `PH`, `PH2`, `PK`, `PL`, `PR`, `PT`, `PY`, `QA`, `RO`, `RS`, `RU`, `SA`, `SE`, `SG`, `SI`, `SK`, `TH`, `TN`, `TR`, `TW`, `UA`, `US`, `UY`, `VE`, `VN`, `ZA`
     * 
     */
    @Export(name="country", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> country;

    /**
     * @return Select country
     *   - Choices: `AE`, `AR`, `AT`, `AU`, `BA`, `BB`, `BE`, `BG`, `BH`, `BN`, `BO`, `BR`, `BY`, `CA`, `CA2`, `CH`, `CL`, `CM`, `CN`, `CO`, `CR`, `CY`, `CZ`, `DE`, `DK`, `DO`, `DZ`, `EC`, `EE`, `EG`, `ES`, `FI`, `FJ`, `FR`, `GB`, `GH`, `GI`, `GR`, `HK`, `HR`, `HU`, `ID`, `IE`, `IL`, `IO`, `IN`, `IQ`, `IS`, `IT`, `J2`, `J4`, `JM`, `JO`, `KE`, `KN`, `KW`, `KZ`, `LB`, `LI`, `LK`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `ME`, `MK`, `MN`, `MO`, `MT`, `MX`, `MY`, `NL`, `NO`, `NZ`, `OM`, `PA`, `PE`, `PH`, `PH2`, `PK`, `PL`, `PR`, `PT`, `PY`, `QA`, `RO`, `RS`, `RU`, `SA`, `SE`, `SG`, `SI`, `SK`, `TH`, `TN`, `TR`, `TW`, `UA`, `US`, `UY`, `VE`, `VN`, `ZA`
     * 
     */
    public Output<Optional<String>> country() {
        return Codegen.optional(this.country);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="countryVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> countryVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> countryVariable() {
        return Codegen.optional(this.countryVariable);
    }
    /**
     * The description of the feature template
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return The description of the feature template
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    @Export(name="deviceTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> deviceTypes;

    /**
     * @return List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    public Output<List<String>> deviceTypes() {
        return this.deviceTypes;
    }
    /**
     * The name of the feature template
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the feature template
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Set management password
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> password;

    /**
     * @return Set management password
     * 
     */
    public Output<Optional<String>> password() {
        return Codegen.optional(this.password);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="passwordVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> passwordVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> passwordVariable() {
        return Codegen.optional(this.passwordVariable);
    }
    /**
     * 2.4GHz Shutdown
     *   - Default value: `false`
     * 
     */
    @Export(name="shutdown24ghz", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> shutdown24ghz;

    /**
     * @return 2.4GHz Shutdown
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> shutdown24ghz() {
        return Codegen.optional(this.shutdown24ghz);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="shutdown24ghzVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> shutdown24ghzVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> shutdown24ghzVariable() {
        return Codegen.optional(this.shutdown24ghzVariable);
    }
    /**
     * 5GHz Shutdown
     *   - Default value: `false`
     * 
     */
    @Export(name="shutdown5ghz", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> shutdown5ghz;

    /**
     * @return 5GHz Shutdown
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> shutdown5ghz() {
        return Codegen.optional(this.shutdown5ghz);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="shutdown5ghzVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> shutdown5ghzVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> shutdown5ghzVariable() {
        return Codegen.optional(this.shutdown5ghzVariable);
    }
    /**
     * Configure Wi-Fi SSID
     * 
     */
    @Export(name="ssids", refs={List.class,CiscoWirelessLanFeatureTemplateSsid.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CiscoWirelessLanFeatureTemplateSsid>> ssids;

    /**
     * @return Configure Wi-Fi SSID
     * 
     */
    public Output<Optional<List<CiscoWirelessLanFeatureTemplateSsid>>> ssids() {
        return Codegen.optional(this.ssids);
    }
    /**
     * The template type
     * 
     */
    @Export(name="templateType", refs={String.class}, tree="[0]")
    private Output<String> templateType;

    /**
     * @return The template type
     * 
     */
    public Output<String> templateType() {
        return this.templateType;
    }
    /**
     * Set management username
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> username;

    /**
     * @return Set management username
     * 
     */
    public Output<Optional<String>> username() {
        return Codegen.optional(this.username);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="usernameVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> usernameVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> usernameVariable() {
        return Codegen.optional(this.usernameVariable);
    }
    /**
     * The version of the feature template
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the feature template
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CiscoWirelessLanFeatureTemplate(java.lang.String name) {
        this(name, CiscoWirelessLanFeatureTemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CiscoWirelessLanFeatureTemplate(java.lang.String name, CiscoWirelessLanFeatureTemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CiscoWirelessLanFeatureTemplate(java.lang.String name, CiscoWirelessLanFeatureTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/ciscoWirelessLanFeatureTemplate:CiscoWirelessLanFeatureTemplate", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private CiscoWirelessLanFeatureTemplate(java.lang.String name, Output<java.lang.String> id, @Nullable CiscoWirelessLanFeatureTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/ciscoWirelessLanFeatureTemplate:CiscoWirelessLanFeatureTemplate", name, state, makeResourceOptions(options, id), false);
    }

    private static CiscoWirelessLanFeatureTemplateArgs makeArgs(CiscoWirelessLanFeatureTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CiscoWirelessLanFeatureTemplateArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CiscoWirelessLanFeatureTemplate get(java.lang.String name, Output<java.lang.String> id, @Nullable CiscoWirelessLanFeatureTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CiscoWirelessLanFeatureTemplate(name, id, state, options);
    }
}
