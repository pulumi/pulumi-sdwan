// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.RewriteRulePolicyDefinitionRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RewriteRulePolicyDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final RewriteRulePolicyDefinitionArgs Empty = new RewriteRulePolicyDefinitionArgs();

    /**
     * The description of the policy definition
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return The description of the policy definition
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * The name of the policy definition
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the policy definition
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * List of rules
     * 
     */
    @Import(name="rules", required=true)
    private Output<List<RewriteRulePolicyDefinitionRuleArgs>> rules;

    /**
     * @return List of rules
     * 
     */
    public Output<List<RewriteRulePolicyDefinitionRuleArgs>> rules() {
        return this.rules;
    }

    private RewriteRulePolicyDefinitionArgs() {}

    private RewriteRulePolicyDefinitionArgs(RewriteRulePolicyDefinitionArgs $) {
        this.description = $.description;
        this.name = $.name;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RewriteRulePolicyDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RewriteRulePolicyDefinitionArgs $;

        public Builder() {
            $ = new RewriteRulePolicyDefinitionArgs();
        }

        public Builder(RewriteRulePolicyDefinitionArgs defaults) {
            $ = new RewriteRulePolicyDefinitionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The name of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param rules List of rules
         * 
         * @return builder
         * 
         */
        public Builder rules(Output<List<RewriteRulePolicyDefinitionRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules List of rules
         * 
         * @return builder
         * 
         */
        public Builder rules(List<RewriteRulePolicyDefinitionRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules List of rules
         * 
         * @return builder
         * 
         */
        public Builder rules(RewriteRulePolicyDefinitionRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public RewriteRulePolicyDefinitionArgs build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("RewriteRulePolicyDefinitionArgs", "description");
            }
            if ($.rules == null) {
                throw new MissingRequiredPropertyException("RewriteRulePolicyDefinitionArgs", "rules");
            }
            return $;
        }
    }

}
