// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.CiscoBgpFeatureTemplateAddressFamilyArgs;
import com.pulumi.sdwan.inputs.CiscoBgpFeatureTemplateIpv4NeighborArgs;
import com.pulumi.sdwan.inputs.CiscoBgpFeatureTemplateIpv4RouteTargetArgs;
import com.pulumi.sdwan.inputs.CiscoBgpFeatureTemplateIpv6NeighborArgs;
import com.pulumi.sdwan.inputs.CiscoBgpFeatureTemplateIpv6RouteTargetArgs;
import com.pulumi.sdwan.inputs.CiscoBgpFeatureTemplateMplsInterfaceArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CiscoBgpFeatureTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final CiscoBgpFeatureTemplateArgs Empty = new CiscoBgpFeatureTemplateArgs();

    /**
     * Set BGP address family
     * 
     */
    @Import(name="addressFamilies")
    private @Nullable Output<List<CiscoBgpFeatureTemplateAddressFamilyArgs>> addressFamilies;

    /**
     * @return Set BGP address family
     * 
     */
    public Optional<Output<List<CiscoBgpFeatureTemplateAddressFamilyArgs>>> addressFamilies() {
        return Optional.ofNullable(this.addressFamilies);
    }

    /**
     * Compare MEDs from all ASs when selecting active BGP paths
     *   - Default value: `false`
     * 
     */
    @Import(name="alwaysCompareMed")
    private @Nullable Output<Boolean> alwaysCompareMed;

    /**
     * @return Compare MEDs from all ASs when selecting active BGP paths
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> alwaysCompareMed() {
        return Optional.ofNullable(this.alwaysCompareMed);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="alwaysCompareMedVariable")
    private @Nullable Output<String> alwaysCompareMedVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> alwaysCompareMedVariable() {
        return Optional.ofNullable(this.alwaysCompareMedVariable);
    }

    /**
     * Set autonomous system number &lt;1..4294967295&gt; or &lt;XX.YY&gt;
     * 
     */
    @Import(name="asNumber")
    private @Nullable Output<String> asNumber;

    /**
     * @return Set autonomous system number &lt;1..4294967295&gt; or &lt;XX.YY&gt;
     * 
     */
    public Optional<Output<String>> asNumber() {
        return Optional.ofNullable(this.asNumber);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="asNumberVariable")
    private @Nullable Output<String> asNumberVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> asNumberVariable() {
        return Optional.ofNullable(this.asNumberVariable);
    }

    /**
     * Compare router IDs when selecting active BGP paths
     *   - Default value: `false`
     * 
     */
    @Import(name="compareRouterId")
    private @Nullable Output<Boolean> compareRouterId;

    /**
     * @return Compare router IDs when selecting active BGP paths
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> compareRouterId() {
        return Optional.ofNullable(this.compareRouterId);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="compareRouterIdVariable")
    private @Nullable Output<String> compareRouterIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> compareRouterIdVariable() {
        return Optional.ofNullable(this.compareRouterIdVariable);
    }

    /**
     * The description of the feature template
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return The description of the feature template
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * Compare MEDs from all routes from same AS when selecting active BGP paths
     *   - Default value: `false`
     * 
     */
    @Import(name="deterministicMed")
    private @Nullable Output<Boolean> deterministicMed;

    /**
     * @return Compare MEDs from all routes from same AS when selecting active BGP paths
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> deterministicMed() {
        return Optional.ofNullable(this.deterministicMed);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="deterministicMedVariable")
    private @Nullable Output<String> deterministicMedVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> deterministicMedVariable() {
        return Optional.ofNullable(this.deterministicMedVariable);
    }

    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    @Import(name="deviceTypes", required=true)
    private Output<List<String>> deviceTypes;

    /**
     * @return List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    public Output<List<String>> deviceTypes() {
        return this.deviceTypes;
    }

    /**
     * Set administrative distance for external BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `20`
     * 
     */
    @Import(name="distanceExternal")
    private @Nullable Output<Integer> distanceExternal;

    /**
     * @return Set administrative distance for external BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `20`
     * 
     */
    public Optional<Output<Integer>> distanceExternal() {
        return Optional.ofNullable(this.distanceExternal);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="distanceExternalVariable")
    private @Nullable Output<String> distanceExternalVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> distanceExternalVariable() {
        return Optional.ofNullable(this.distanceExternalVariable);
    }

    /**
     * Set administrative distance for internal BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `200`
     * 
     */
    @Import(name="distanceInternal")
    private @Nullable Output<Integer> distanceInternal;

    /**
     * @return Set administrative distance for internal BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `200`
     * 
     */
    public Optional<Output<Integer>> distanceInternal() {
        return Optional.ofNullable(this.distanceInternal);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="distanceInternalVariable")
    private @Nullable Output<String> distanceInternalVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> distanceInternalVariable() {
        return Optional.ofNullable(this.distanceInternalVariable);
    }

    /**
     * Set administrative distance for local BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `20`
     * 
     */
    @Import(name="distanceLocal")
    private @Nullable Output<Integer> distanceLocal;

    /**
     * @return Set administrative distance for local BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `20`
     * 
     */
    public Optional<Output<Integer>> distanceLocal() {
        return Optional.ofNullable(this.distanceLocal);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="distanceLocalVariable")
    private @Nullable Output<String> distanceLocalVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> distanceLocalVariable() {
        return Optional.ofNullable(this.distanceLocalVariable);
    }

    /**
     * Set the interval when BGP considers a neighbor to be down
     *   - Range: `0`-`65535`
     *   - Default value: `180`
     * 
     */
    @Import(name="holdtime")
    private @Nullable Output<Integer> holdtime;

    /**
     * @return Set the interval when BGP considers a neighbor to be down
     *   - Range: `0`-`65535`
     *   - Default value: `180`
     * 
     */
    public Optional<Output<Integer>> holdtime() {
        return Optional.ofNullable(this.holdtime);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="holdtimeVariable")
    private @Nullable Output<String> holdtimeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> holdtimeVariable() {
        return Optional.ofNullable(this.holdtimeVariable);
    }

    /**
     * Set BGP neighbors
     * 
     */
    @Import(name="ipv4Neighbors")
    private @Nullable Output<List<CiscoBgpFeatureTemplateIpv4NeighborArgs>> ipv4Neighbors;

    /**
     * @return Set BGP neighbors
     * 
     */
    public Optional<Output<List<CiscoBgpFeatureTemplateIpv4NeighborArgs>>> ipv4Neighbors() {
        return Optional.ofNullable(this.ipv4Neighbors);
    }

    /**
     * Router Target for IPV4
     * 
     */
    @Import(name="ipv4RouteTargets")
    private @Nullable Output<List<CiscoBgpFeatureTemplateIpv4RouteTargetArgs>> ipv4RouteTargets;

    /**
     * @return Router Target for IPV4
     * 
     */
    public Optional<Output<List<CiscoBgpFeatureTemplateIpv4RouteTargetArgs>>> ipv4RouteTargets() {
        return Optional.ofNullable(this.ipv4RouteTargets);
    }

    /**
     * Set BGP IPv6 neighbors
     * 
     */
    @Import(name="ipv6Neighbors")
    private @Nullable Output<List<CiscoBgpFeatureTemplateIpv6NeighborArgs>> ipv6Neighbors;

    /**
     * @return Set BGP IPv6 neighbors
     * 
     */
    public Optional<Output<List<CiscoBgpFeatureTemplateIpv6NeighborArgs>>> ipv6Neighbors() {
        return Optional.ofNullable(this.ipv6Neighbors);
    }

    /**
     * Router Target for IPV6
     * 
     */
    @Import(name="ipv6RouteTargets")
    private @Nullable Output<List<CiscoBgpFeatureTemplateIpv6RouteTargetArgs>> ipv6RouteTargets;

    /**
     * @return Router Target for IPV6
     * 
     */
    public Optional<Output<List<CiscoBgpFeatureTemplateIpv6RouteTargetArgs>>> ipv6RouteTargets() {
        return Optional.ofNullable(this.ipv6RouteTargets);
    }

    /**
     * Set how often keepalive messages are sent to BGP peer
     *   - Range: `0`-`65535`
     *   - Default value: `60`
     * 
     */
    @Import(name="keepalive")
    private @Nullable Output<Integer> keepalive;

    /**
     * @return Set how often keepalive messages are sent to BGP peer
     *   - Range: `0`-`65535`
     *   - Default value: `60`
     * 
     */
    public Optional<Output<Integer>> keepalive() {
        return Optional.ofNullable(this.keepalive);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="keepaliveVariable")
    private @Nullable Output<String> keepaliveVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> keepaliveVariable() {
        return Optional.ofNullable(this.keepaliveVariable);
    }

    /**
     * If path has no MED, consider it to be worst path when selecting active BGP paths
     *   - Default value: `false`
     * 
     */
    @Import(name="missingMedWorst")
    private @Nullable Output<Boolean> missingMedWorst;

    /**
     * @return If path has no MED, consider it to be worst path when selecting active BGP paths
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> missingMedWorst() {
        return Optional.ofNullable(this.missingMedWorst);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="missingMedWorstVariable")
    private @Nullable Output<String> missingMedWorstVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> missingMedWorstVariable() {
        return Optional.ofNullable(this.missingMedWorstVariable);
    }

    /**
     * MPLS BGP Interface
     * 
     */
    @Import(name="mplsInterfaces")
    private @Nullable Output<List<CiscoBgpFeatureTemplateMplsInterfaceArgs>> mplsInterfaces;

    /**
     * @return MPLS BGP Interface
     * 
     */
    public Optional<Output<List<CiscoBgpFeatureTemplateMplsInterfaceArgs>>> mplsInterfaces() {
        return Optional.ofNullable(this.mplsInterfaces);
    }

    /**
     * Ignore AS for multipath selection
     *   - Default value: `false`
     * 
     */
    @Import(name="multipathRelax")
    private @Nullable Output<Boolean> multipathRelax;

    /**
     * @return Ignore AS for multipath selection
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> multipathRelax() {
        return Optional.ofNullable(this.multipathRelax);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="multipathRelaxVariable")
    private @Nullable Output<String> multipathRelaxVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> multipathRelaxVariable() {
        return Optional.ofNullable(this.multipathRelaxVariable);
    }

    /**
     * The name of the feature template
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the feature template
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Propagate AS Path
     *   - Default value: `false`
     * 
     */
    @Import(name="propagateAspath")
    private @Nullable Output<Boolean> propagateAspath;

    /**
     * @return Propagate AS Path
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> propagateAspath() {
        return Optional.ofNullable(this.propagateAspath);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="propagateAspathVariable")
    private @Nullable Output<String> propagateAspathVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> propagateAspathVariable() {
        return Optional.ofNullable(this.propagateAspathVariable);
    }

    /**
     * Propagate Community
     *   - Default value: `false`
     * 
     */
    @Import(name="propagateCommunity")
    private @Nullable Output<Boolean> propagateCommunity;

    /**
     * @return Propagate Community
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> propagateCommunity() {
        return Optional.ofNullable(this.propagateCommunity);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="propagateCommunityVariable")
    private @Nullable Output<String> propagateCommunityVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> propagateCommunityVariable() {
        return Optional.ofNullable(this.propagateCommunityVariable);
    }

    /**
     * Configure BGP router identifier
     * 
     */
    @Import(name="routerId")
    private @Nullable Output<String> routerId;

    /**
     * @return Configure BGP router identifier
     * 
     */
    public Optional<Output<String>> routerId() {
        return Optional.ofNullable(this.routerId);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="routerIdVariable")
    private @Nullable Output<String> routerIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> routerIdVariable() {
        return Optional.ofNullable(this.routerIdVariable);
    }

    /**
     * Enable or disable BGP
     *   - Default value: `false`
     * 
     */
    @Import(name="shutdown")
    private @Nullable Output<Boolean> shutdown;

    /**
     * @return Enable or disable BGP
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> shutdown() {
        return Optional.ofNullable(this.shutdown);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="shutdownVariable")
    private @Nullable Output<String> shutdownVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> shutdownVariable() {
        return Optional.ofNullable(this.shutdownVariable);
    }

    private CiscoBgpFeatureTemplateArgs() {}

    private CiscoBgpFeatureTemplateArgs(CiscoBgpFeatureTemplateArgs $) {
        this.addressFamilies = $.addressFamilies;
        this.alwaysCompareMed = $.alwaysCompareMed;
        this.alwaysCompareMedVariable = $.alwaysCompareMedVariable;
        this.asNumber = $.asNumber;
        this.asNumberVariable = $.asNumberVariable;
        this.compareRouterId = $.compareRouterId;
        this.compareRouterIdVariable = $.compareRouterIdVariable;
        this.description = $.description;
        this.deterministicMed = $.deterministicMed;
        this.deterministicMedVariable = $.deterministicMedVariable;
        this.deviceTypes = $.deviceTypes;
        this.distanceExternal = $.distanceExternal;
        this.distanceExternalVariable = $.distanceExternalVariable;
        this.distanceInternal = $.distanceInternal;
        this.distanceInternalVariable = $.distanceInternalVariable;
        this.distanceLocal = $.distanceLocal;
        this.distanceLocalVariable = $.distanceLocalVariable;
        this.holdtime = $.holdtime;
        this.holdtimeVariable = $.holdtimeVariable;
        this.ipv4Neighbors = $.ipv4Neighbors;
        this.ipv4RouteTargets = $.ipv4RouteTargets;
        this.ipv6Neighbors = $.ipv6Neighbors;
        this.ipv6RouteTargets = $.ipv6RouteTargets;
        this.keepalive = $.keepalive;
        this.keepaliveVariable = $.keepaliveVariable;
        this.missingMedWorst = $.missingMedWorst;
        this.missingMedWorstVariable = $.missingMedWorstVariable;
        this.mplsInterfaces = $.mplsInterfaces;
        this.multipathRelax = $.multipathRelax;
        this.multipathRelaxVariable = $.multipathRelaxVariable;
        this.name = $.name;
        this.propagateAspath = $.propagateAspath;
        this.propagateAspathVariable = $.propagateAspathVariable;
        this.propagateCommunity = $.propagateCommunity;
        this.propagateCommunityVariable = $.propagateCommunityVariable;
        this.routerId = $.routerId;
        this.routerIdVariable = $.routerIdVariable;
        this.shutdown = $.shutdown;
        this.shutdownVariable = $.shutdownVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CiscoBgpFeatureTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CiscoBgpFeatureTemplateArgs $;

        public Builder() {
            $ = new CiscoBgpFeatureTemplateArgs();
        }

        public Builder(CiscoBgpFeatureTemplateArgs defaults) {
            $ = new CiscoBgpFeatureTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addressFamilies Set BGP address family
         * 
         * @return builder
         * 
         */
        public Builder addressFamilies(@Nullable Output<List<CiscoBgpFeatureTemplateAddressFamilyArgs>> addressFamilies) {
            $.addressFamilies = addressFamilies;
            return this;
        }

        /**
         * @param addressFamilies Set BGP address family
         * 
         * @return builder
         * 
         */
        public Builder addressFamilies(List<CiscoBgpFeatureTemplateAddressFamilyArgs> addressFamilies) {
            return addressFamilies(Output.of(addressFamilies));
        }

        /**
         * @param addressFamilies Set BGP address family
         * 
         * @return builder
         * 
         */
        public Builder addressFamilies(CiscoBgpFeatureTemplateAddressFamilyArgs... addressFamilies) {
            return addressFamilies(List.of(addressFamilies));
        }

        /**
         * @param alwaysCompareMed Compare MEDs from all ASs when selecting active BGP paths
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder alwaysCompareMed(@Nullable Output<Boolean> alwaysCompareMed) {
            $.alwaysCompareMed = alwaysCompareMed;
            return this;
        }

        /**
         * @param alwaysCompareMed Compare MEDs from all ASs when selecting active BGP paths
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder alwaysCompareMed(Boolean alwaysCompareMed) {
            return alwaysCompareMed(Output.of(alwaysCompareMed));
        }

        /**
         * @param alwaysCompareMedVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder alwaysCompareMedVariable(@Nullable Output<String> alwaysCompareMedVariable) {
            $.alwaysCompareMedVariable = alwaysCompareMedVariable;
            return this;
        }

        /**
         * @param alwaysCompareMedVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder alwaysCompareMedVariable(String alwaysCompareMedVariable) {
            return alwaysCompareMedVariable(Output.of(alwaysCompareMedVariable));
        }

        /**
         * @param asNumber Set autonomous system number &lt;1..4294967295&gt; or &lt;XX.YY&gt;
         * 
         * @return builder
         * 
         */
        public Builder asNumber(@Nullable Output<String> asNumber) {
            $.asNumber = asNumber;
            return this;
        }

        /**
         * @param asNumber Set autonomous system number &lt;1..4294967295&gt; or &lt;XX.YY&gt;
         * 
         * @return builder
         * 
         */
        public Builder asNumber(String asNumber) {
            return asNumber(Output.of(asNumber));
        }

        /**
         * @param asNumberVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder asNumberVariable(@Nullable Output<String> asNumberVariable) {
            $.asNumberVariable = asNumberVariable;
            return this;
        }

        /**
         * @param asNumberVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder asNumberVariable(String asNumberVariable) {
            return asNumberVariable(Output.of(asNumberVariable));
        }

        /**
         * @param compareRouterId Compare router IDs when selecting active BGP paths
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder compareRouterId(@Nullable Output<Boolean> compareRouterId) {
            $.compareRouterId = compareRouterId;
            return this;
        }

        /**
         * @param compareRouterId Compare router IDs when selecting active BGP paths
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder compareRouterId(Boolean compareRouterId) {
            return compareRouterId(Output.of(compareRouterId));
        }

        /**
         * @param compareRouterIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder compareRouterIdVariable(@Nullable Output<String> compareRouterIdVariable) {
            $.compareRouterIdVariable = compareRouterIdVariable;
            return this;
        }

        /**
         * @param compareRouterIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder compareRouterIdVariable(String compareRouterIdVariable) {
            return compareRouterIdVariable(Output.of(compareRouterIdVariable));
        }

        /**
         * @param description The description of the feature template
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the feature template
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param deterministicMed Compare MEDs from all routes from same AS when selecting active BGP paths
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder deterministicMed(@Nullable Output<Boolean> deterministicMed) {
            $.deterministicMed = deterministicMed;
            return this;
        }

        /**
         * @param deterministicMed Compare MEDs from all routes from same AS when selecting active BGP paths
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder deterministicMed(Boolean deterministicMed) {
            return deterministicMed(Output.of(deterministicMed));
        }

        /**
         * @param deterministicMedVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder deterministicMedVariable(@Nullable Output<String> deterministicMedVariable) {
            $.deterministicMedVariable = deterministicMedVariable;
            return this;
        }

        /**
         * @param deterministicMedVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder deterministicMedVariable(String deterministicMedVariable) {
            return deterministicMedVariable(Output.of(deterministicMedVariable));
        }

        /**
         * @param deviceTypes List of supported device types
         *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(Output<List<String>> deviceTypes) {
            $.deviceTypes = deviceTypes;
            return this;
        }

        /**
         * @param deviceTypes List of supported device types
         *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(List<String> deviceTypes) {
            return deviceTypes(Output.of(deviceTypes));
        }

        /**
         * @param deviceTypes List of supported device types
         *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(String... deviceTypes) {
            return deviceTypes(List.of(deviceTypes));
        }

        /**
         * @param distanceExternal Set administrative distance for external BGP routes
         *   - Range: `1`-`255`
         *   - Default value: `20`
         * 
         * @return builder
         * 
         */
        public Builder distanceExternal(@Nullable Output<Integer> distanceExternal) {
            $.distanceExternal = distanceExternal;
            return this;
        }

        /**
         * @param distanceExternal Set administrative distance for external BGP routes
         *   - Range: `1`-`255`
         *   - Default value: `20`
         * 
         * @return builder
         * 
         */
        public Builder distanceExternal(Integer distanceExternal) {
            return distanceExternal(Output.of(distanceExternal));
        }

        /**
         * @param distanceExternalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder distanceExternalVariable(@Nullable Output<String> distanceExternalVariable) {
            $.distanceExternalVariable = distanceExternalVariable;
            return this;
        }

        /**
         * @param distanceExternalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder distanceExternalVariable(String distanceExternalVariable) {
            return distanceExternalVariable(Output.of(distanceExternalVariable));
        }

        /**
         * @param distanceInternal Set administrative distance for internal BGP routes
         *   - Range: `1`-`255`
         *   - Default value: `200`
         * 
         * @return builder
         * 
         */
        public Builder distanceInternal(@Nullable Output<Integer> distanceInternal) {
            $.distanceInternal = distanceInternal;
            return this;
        }

        /**
         * @param distanceInternal Set administrative distance for internal BGP routes
         *   - Range: `1`-`255`
         *   - Default value: `200`
         * 
         * @return builder
         * 
         */
        public Builder distanceInternal(Integer distanceInternal) {
            return distanceInternal(Output.of(distanceInternal));
        }

        /**
         * @param distanceInternalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder distanceInternalVariable(@Nullable Output<String> distanceInternalVariable) {
            $.distanceInternalVariable = distanceInternalVariable;
            return this;
        }

        /**
         * @param distanceInternalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder distanceInternalVariable(String distanceInternalVariable) {
            return distanceInternalVariable(Output.of(distanceInternalVariable));
        }

        /**
         * @param distanceLocal Set administrative distance for local BGP routes
         *   - Range: `1`-`255`
         *   - Default value: `20`
         * 
         * @return builder
         * 
         */
        public Builder distanceLocal(@Nullable Output<Integer> distanceLocal) {
            $.distanceLocal = distanceLocal;
            return this;
        }

        /**
         * @param distanceLocal Set administrative distance for local BGP routes
         *   - Range: `1`-`255`
         *   - Default value: `20`
         * 
         * @return builder
         * 
         */
        public Builder distanceLocal(Integer distanceLocal) {
            return distanceLocal(Output.of(distanceLocal));
        }

        /**
         * @param distanceLocalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder distanceLocalVariable(@Nullable Output<String> distanceLocalVariable) {
            $.distanceLocalVariable = distanceLocalVariable;
            return this;
        }

        /**
         * @param distanceLocalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder distanceLocalVariable(String distanceLocalVariable) {
            return distanceLocalVariable(Output.of(distanceLocalVariable));
        }

        /**
         * @param holdtime Set the interval when BGP considers a neighbor to be down
         *   - Range: `0`-`65535`
         *   - Default value: `180`
         * 
         * @return builder
         * 
         */
        public Builder holdtime(@Nullable Output<Integer> holdtime) {
            $.holdtime = holdtime;
            return this;
        }

        /**
         * @param holdtime Set the interval when BGP considers a neighbor to be down
         *   - Range: `0`-`65535`
         *   - Default value: `180`
         * 
         * @return builder
         * 
         */
        public Builder holdtime(Integer holdtime) {
            return holdtime(Output.of(holdtime));
        }

        /**
         * @param holdtimeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder holdtimeVariable(@Nullable Output<String> holdtimeVariable) {
            $.holdtimeVariable = holdtimeVariable;
            return this;
        }

        /**
         * @param holdtimeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder holdtimeVariable(String holdtimeVariable) {
            return holdtimeVariable(Output.of(holdtimeVariable));
        }

        /**
         * @param ipv4Neighbors Set BGP neighbors
         * 
         * @return builder
         * 
         */
        public Builder ipv4Neighbors(@Nullable Output<List<CiscoBgpFeatureTemplateIpv4NeighborArgs>> ipv4Neighbors) {
            $.ipv4Neighbors = ipv4Neighbors;
            return this;
        }

        /**
         * @param ipv4Neighbors Set BGP neighbors
         * 
         * @return builder
         * 
         */
        public Builder ipv4Neighbors(List<CiscoBgpFeatureTemplateIpv4NeighborArgs> ipv4Neighbors) {
            return ipv4Neighbors(Output.of(ipv4Neighbors));
        }

        /**
         * @param ipv4Neighbors Set BGP neighbors
         * 
         * @return builder
         * 
         */
        public Builder ipv4Neighbors(CiscoBgpFeatureTemplateIpv4NeighborArgs... ipv4Neighbors) {
            return ipv4Neighbors(List.of(ipv4Neighbors));
        }

        /**
         * @param ipv4RouteTargets Router Target for IPV4
         * 
         * @return builder
         * 
         */
        public Builder ipv4RouteTargets(@Nullable Output<List<CiscoBgpFeatureTemplateIpv4RouteTargetArgs>> ipv4RouteTargets) {
            $.ipv4RouteTargets = ipv4RouteTargets;
            return this;
        }

        /**
         * @param ipv4RouteTargets Router Target for IPV4
         * 
         * @return builder
         * 
         */
        public Builder ipv4RouteTargets(List<CiscoBgpFeatureTemplateIpv4RouteTargetArgs> ipv4RouteTargets) {
            return ipv4RouteTargets(Output.of(ipv4RouteTargets));
        }

        /**
         * @param ipv4RouteTargets Router Target for IPV4
         * 
         * @return builder
         * 
         */
        public Builder ipv4RouteTargets(CiscoBgpFeatureTemplateIpv4RouteTargetArgs... ipv4RouteTargets) {
            return ipv4RouteTargets(List.of(ipv4RouteTargets));
        }

        /**
         * @param ipv6Neighbors Set BGP IPv6 neighbors
         * 
         * @return builder
         * 
         */
        public Builder ipv6Neighbors(@Nullable Output<List<CiscoBgpFeatureTemplateIpv6NeighborArgs>> ipv6Neighbors) {
            $.ipv6Neighbors = ipv6Neighbors;
            return this;
        }

        /**
         * @param ipv6Neighbors Set BGP IPv6 neighbors
         * 
         * @return builder
         * 
         */
        public Builder ipv6Neighbors(List<CiscoBgpFeatureTemplateIpv6NeighborArgs> ipv6Neighbors) {
            return ipv6Neighbors(Output.of(ipv6Neighbors));
        }

        /**
         * @param ipv6Neighbors Set BGP IPv6 neighbors
         * 
         * @return builder
         * 
         */
        public Builder ipv6Neighbors(CiscoBgpFeatureTemplateIpv6NeighborArgs... ipv6Neighbors) {
            return ipv6Neighbors(List.of(ipv6Neighbors));
        }

        /**
         * @param ipv6RouteTargets Router Target for IPV6
         * 
         * @return builder
         * 
         */
        public Builder ipv6RouteTargets(@Nullable Output<List<CiscoBgpFeatureTemplateIpv6RouteTargetArgs>> ipv6RouteTargets) {
            $.ipv6RouteTargets = ipv6RouteTargets;
            return this;
        }

        /**
         * @param ipv6RouteTargets Router Target for IPV6
         * 
         * @return builder
         * 
         */
        public Builder ipv6RouteTargets(List<CiscoBgpFeatureTemplateIpv6RouteTargetArgs> ipv6RouteTargets) {
            return ipv6RouteTargets(Output.of(ipv6RouteTargets));
        }

        /**
         * @param ipv6RouteTargets Router Target for IPV6
         * 
         * @return builder
         * 
         */
        public Builder ipv6RouteTargets(CiscoBgpFeatureTemplateIpv6RouteTargetArgs... ipv6RouteTargets) {
            return ipv6RouteTargets(List.of(ipv6RouteTargets));
        }

        /**
         * @param keepalive Set how often keepalive messages are sent to BGP peer
         *   - Range: `0`-`65535`
         *   - Default value: `60`
         * 
         * @return builder
         * 
         */
        public Builder keepalive(@Nullable Output<Integer> keepalive) {
            $.keepalive = keepalive;
            return this;
        }

        /**
         * @param keepalive Set how often keepalive messages are sent to BGP peer
         *   - Range: `0`-`65535`
         *   - Default value: `60`
         * 
         * @return builder
         * 
         */
        public Builder keepalive(Integer keepalive) {
            return keepalive(Output.of(keepalive));
        }

        /**
         * @param keepaliveVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder keepaliveVariable(@Nullable Output<String> keepaliveVariable) {
            $.keepaliveVariable = keepaliveVariable;
            return this;
        }

        /**
         * @param keepaliveVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder keepaliveVariable(String keepaliveVariable) {
            return keepaliveVariable(Output.of(keepaliveVariable));
        }

        /**
         * @param missingMedWorst If path has no MED, consider it to be worst path when selecting active BGP paths
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder missingMedWorst(@Nullable Output<Boolean> missingMedWorst) {
            $.missingMedWorst = missingMedWorst;
            return this;
        }

        /**
         * @param missingMedWorst If path has no MED, consider it to be worst path when selecting active BGP paths
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder missingMedWorst(Boolean missingMedWorst) {
            return missingMedWorst(Output.of(missingMedWorst));
        }

        /**
         * @param missingMedWorstVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder missingMedWorstVariable(@Nullable Output<String> missingMedWorstVariable) {
            $.missingMedWorstVariable = missingMedWorstVariable;
            return this;
        }

        /**
         * @param missingMedWorstVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder missingMedWorstVariable(String missingMedWorstVariable) {
            return missingMedWorstVariable(Output.of(missingMedWorstVariable));
        }

        /**
         * @param mplsInterfaces MPLS BGP Interface
         * 
         * @return builder
         * 
         */
        public Builder mplsInterfaces(@Nullable Output<List<CiscoBgpFeatureTemplateMplsInterfaceArgs>> mplsInterfaces) {
            $.mplsInterfaces = mplsInterfaces;
            return this;
        }

        /**
         * @param mplsInterfaces MPLS BGP Interface
         * 
         * @return builder
         * 
         */
        public Builder mplsInterfaces(List<CiscoBgpFeatureTemplateMplsInterfaceArgs> mplsInterfaces) {
            return mplsInterfaces(Output.of(mplsInterfaces));
        }

        /**
         * @param mplsInterfaces MPLS BGP Interface
         * 
         * @return builder
         * 
         */
        public Builder mplsInterfaces(CiscoBgpFeatureTemplateMplsInterfaceArgs... mplsInterfaces) {
            return mplsInterfaces(List.of(mplsInterfaces));
        }

        /**
         * @param multipathRelax Ignore AS for multipath selection
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder multipathRelax(@Nullable Output<Boolean> multipathRelax) {
            $.multipathRelax = multipathRelax;
            return this;
        }

        /**
         * @param multipathRelax Ignore AS for multipath selection
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder multipathRelax(Boolean multipathRelax) {
            return multipathRelax(Output.of(multipathRelax));
        }

        /**
         * @param multipathRelaxVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder multipathRelaxVariable(@Nullable Output<String> multipathRelaxVariable) {
            $.multipathRelaxVariable = multipathRelaxVariable;
            return this;
        }

        /**
         * @param multipathRelaxVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder multipathRelaxVariable(String multipathRelaxVariable) {
            return multipathRelaxVariable(Output.of(multipathRelaxVariable));
        }

        /**
         * @param name The name of the feature template
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the feature template
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param propagateAspath Propagate AS Path
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder propagateAspath(@Nullable Output<Boolean> propagateAspath) {
            $.propagateAspath = propagateAspath;
            return this;
        }

        /**
         * @param propagateAspath Propagate AS Path
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder propagateAspath(Boolean propagateAspath) {
            return propagateAspath(Output.of(propagateAspath));
        }

        /**
         * @param propagateAspathVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder propagateAspathVariable(@Nullable Output<String> propagateAspathVariable) {
            $.propagateAspathVariable = propagateAspathVariable;
            return this;
        }

        /**
         * @param propagateAspathVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder propagateAspathVariable(String propagateAspathVariable) {
            return propagateAspathVariable(Output.of(propagateAspathVariable));
        }

        /**
         * @param propagateCommunity Propagate Community
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder propagateCommunity(@Nullable Output<Boolean> propagateCommunity) {
            $.propagateCommunity = propagateCommunity;
            return this;
        }

        /**
         * @param propagateCommunity Propagate Community
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder propagateCommunity(Boolean propagateCommunity) {
            return propagateCommunity(Output.of(propagateCommunity));
        }

        /**
         * @param propagateCommunityVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder propagateCommunityVariable(@Nullable Output<String> propagateCommunityVariable) {
            $.propagateCommunityVariable = propagateCommunityVariable;
            return this;
        }

        /**
         * @param propagateCommunityVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder propagateCommunityVariable(String propagateCommunityVariable) {
            return propagateCommunityVariable(Output.of(propagateCommunityVariable));
        }

        /**
         * @param routerId Configure BGP router identifier
         * 
         * @return builder
         * 
         */
        public Builder routerId(@Nullable Output<String> routerId) {
            $.routerId = routerId;
            return this;
        }

        /**
         * @param routerId Configure BGP router identifier
         * 
         * @return builder
         * 
         */
        public Builder routerId(String routerId) {
            return routerId(Output.of(routerId));
        }

        /**
         * @param routerIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder routerIdVariable(@Nullable Output<String> routerIdVariable) {
            $.routerIdVariable = routerIdVariable;
            return this;
        }

        /**
         * @param routerIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder routerIdVariable(String routerIdVariable) {
            return routerIdVariable(Output.of(routerIdVariable));
        }

        /**
         * @param shutdown Enable or disable BGP
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder shutdown(@Nullable Output<Boolean> shutdown) {
            $.shutdown = shutdown;
            return this;
        }

        /**
         * @param shutdown Enable or disable BGP
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder shutdown(Boolean shutdown) {
            return shutdown(Output.of(shutdown));
        }

        /**
         * @param shutdownVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdownVariable(@Nullable Output<String> shutdownVariable) {
            $.shutdownVariable = shutdownVariable;
            return this;
        }

        /**
         * @param shutdownVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdownVariable(String shutdownVariable) {
            return shutdownVariable(Output.of(shutdownVariable));
        }

        public CiscoBgpFeatureTemplateArgs build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("CiscoBgpFeatureTemplateArgs", "description");
            }
            if ($.deviceTypes == null) {
                throw new MissingRequiredPropertyException("CiscoBgpFeatureTemplateArgs", "deviceTypes");
            }
            return $;
        }
    }

}
