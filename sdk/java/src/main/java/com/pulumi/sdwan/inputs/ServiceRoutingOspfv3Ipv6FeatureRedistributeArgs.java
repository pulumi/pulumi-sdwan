// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceRoutingOspfv3Ipv6FeatureRedistributeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceRoutingOspfv3Ipv6FeatureRedistributeArgs Empty = new ServiceRoutingOspfv3Ipv6FeatureRedistributeArgs();

    /**
     * Set the protocol
     *   - Choices: `connected`, `static`, `omp`, `bgp`, `eigrp`
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return Set the protocol
     *   - Choices: `connected`, `static`, `omp`, `bgp`, `eigrp`
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="protocolVariable")
    private @Nullable Output<String> protocolVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> protocolVariable() {
        return Optional.ofNullable(this.protocolVariable);
    }

    @Import(name="routePolicyId")
    private @Nullable Output<String> routePolicyId;

    public Optional<Output<String>> routePolicyId() {
        return Optional.ofNullable(this.routePolicyId);
    }

    private ServiceRoutingOspfv3Ipv6FeatureRedistributeArgs() {}

    private ServiceRoutingOspfv3Ipv6FeatureRedistributeArgs(ServiceRoutingOspfv3Ipv6FeatureRedistributeArgs $) {
        this.protocol = $.protocol;
        this.protocolVariable = $.protocolVariable;
        this.routePolicyId = $.routePolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceRoutingOspfv3Ipv6FeatureRedistributeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceRoutingOspfv3Ipv6FeatureRedistributeArgs $;

        public Builder() {
            $ = new ServiceRoutingOspfv3Ipv6FeatureRedistributeArgs();
        }

        public Builder(ServiceRoutingOspfv3Ipv6FeatureRedistributeArgs defaults) {
            $ = new ServiceRoutingOspfv3Ipv6FeatureRedistributeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param protocol Set the protocol
         *   - Choices: `connected`, `static`, `omp`, `bgp`, `eigrp`
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol Set the protocol
         *   - Choices: `connected`, `static`, `omp`, `bgp`, `eigrp`
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param protocolVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder protocolVariable(@Nullable Output<String> protocolVariable) {
            $.protocolVariable = protocolVariable;
            return this;
        }

        /**
         * @param protocolVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder protocolVariable(String protocolVariable) {
            return protocolVariable(Output.of(protocolVariable));
        }

        public Builder routePolicyId(@Nullable Output<String> routePolicyId) {
            $.routePolicyId = routePolicyId;
            return this;
        }

        public Builder routePolicyId(String routePolicyId) {
            return routePolicyId(Output.of(routePolicyId));
        }

        public ServiceRoutingOspfv3Ipv6FeatureRedistributeArgs build() {
            return $;
        }
    }

}
