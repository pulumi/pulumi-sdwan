// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCliDeviceTemplateResult {
    /**
     * @return CLI configuration
     * 
     */
    private String cliConfiguration;
    /**
     * @return CLI type
     * 
     */
    private String cliType;
    /**
     * @return The description of the device template
     * 
     */
    private String description;
    /**
     * @return The device type (e.g., `vedge-ISR-4331`)
     * 
     */
    private String deviceType;
    /**
     * @return The id of the object
     * 
     */
    private String id;
    /**
     * @return The name of the device template
     * 
     */
    private String name;
    /**
     * @return The version of the object
     * 
     */
    private Integer version;

    private GetCliDeviceTemplateResult() {}
    /**
     * @return CLI configuration
     * 
     */
    public String cliConfiguration() {
        return this.cliConfiguration;
    }
    /**
     * @return CLI type
     * 
     */
    public String cliType() {
        return this.cliType;
    }
    /**
     * @return The description of the device template
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The device type (e.g., `vedge-ISR-4331`)
     * 
     */
    public String deviceType() {
        return this.deviceType;
    }
    /**
     * @return The id of the object
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the device template
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The version of the object
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCliDeviceTemplateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cliConfiguration;
        private String cliType;
        private String description;
        private String deviceType;
        private String id;
        private String name;
        private Integer version;
        public Builder() {}
        public Builder(GetCliDeviceTemplateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cliConfiguration = defaults.cliConfiguration;
    	      this.cliType = defaults.cliType;
    	      this.description = defaults.description;
    	      this.deviceType = defaults.deviceType;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder cliConfiguration(String cliConfiguration) {
            if (cliConfiguration == null) {
              throw new MissingRequiredPropertyException("GetCliDeviceTemplateResult", "cliConfiguration");
            }
            this.cliConfiguration = cliConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder cliType(String cliType) {
            if (cliType == null) {
              throw new MissingRequiredPropertyException("GetCliDeviceTemplateResult", "cliType");
            }
            this.cliType = cliType;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetCliDeviceTemplateResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder deviceType(String deviceType) {
            if (deviceType == null) {
              throw new MissingRequiredPropertyException("GetCliDeviceTemplateResult", "deviceType");
            }
            this.deviceType = deviceType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCliDeviceTemplateResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCliDeviceTemplateResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetCliDeviceTemplateResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetCliDeviceTemplateResult build() {
            final var _resultValue = new GetCliDeviceTemplateResult();
            _resultValue.cliConfiguration = cliConfiguration;
            _resultValue.cliType = cliType;
            _resultValue.description = description;
            _resultValue.deviceType = deviceType;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
