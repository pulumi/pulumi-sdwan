// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CustomControlTopologyPolicyDefinitionSequenceMatchEntry {
    /**
     * @return Carrier
     *   - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`, `carrier7`, `carrier8`
     * 
     */
    private @Nullable String carrier;
    /**
     * @return Color list ID
     * 
     */
    private @Nullable String colorListId;
    /**
     * @return Color list version
     * 
     */
    private @Nullable Integer colorListVersion;
    /**
     * @return Community list ID
     * 
     */
    private @Nullable String communityListId;
    /**
     * @return Community list version
     * 
     */
    private @Nullable Integer communityListVersion;
    /**
     * @return Domain ID
     *   - Range: `0`-`4294967295`
     * 
     */
    private @Nullable Integer domainId;
    /**
     * @return Expanded community list ID
     * 
     */
    private @Nullable String expandedCommunityListId;
    /**
     * @return Expanded community list version
     * 
     */
    private @Nullable Integer expandedCommunityListVersion;
    /**
     * @return Group ID
     *   - Range: `0`-`4294967295`
     * 
     */
    private @Nullable Integer groupId;
    /**
     * @return OMP tag
     *   - Range: `0`-`4294967295`
     * 
     */
    private @Nullable Integer ompTag;
    /**
     * @return Origin
     *   - Choices: `igp`, `egp`, `incomplete`, `aggregrate`, `bgp`, `bgp-external`, `bgp-internal`, `connected`, `eigrp`, `ospf`, `ospf-inter-area`, `ospf-intra-area`, `ospf-external1`, `ospf-external2`, `rip`, `static`, `eigrp-summary`, `eigrp-internal`, `eigrp-external`, `lisp`, `nat-dia`, `natpool`, `isis`, `isis-level1`, `isis-level2`
     * 
     */
    private @Nullable String origin;
    /**
     * @return Originator IP
     * 
     */
    private @Nullable String originator;
    /**
     * @return Path type
     *   - Choices: `hierarchical-path`, `direct-path`, `transport-gateway-path`
     * 
     */
    private @Nullable String pathType;
    /**
     * @return Preference
     *   - Range: `0`-`4294967295`
     * 
     */
    private @Nullable Integer preference;
    /**
     * @return Prefix list ID
     * 
     */
    private @Nullable String prefixListId;
    /**
     * @return Prefix list version
     * 
     */
    private @Nullable Integer prefixListVersion;
    /**
     * @return Site ID
     *   - Range: `0`-`4294967295`
     * 
     */
    private @Nullable Integer siteId;
    /**
     * @return Site list ID
     * 
     */
    private @Nullable String siteListId;
    /**
     * @return Site list version
     * 
     */
    private @Nullable Integer siteListVersion;
    /**
     * @return TLOC color
     * 
     */
    private @Nullable String tlocColor;
    /**
     * @return TLOC encapsulation
     *   - Choices: `ipsec`, `gre`
     * 
     */
    private @Nullable String tlocEncapsulation;
    /**
     * @return TLOC IP address
     * 
     */
    private @Nullable String tlocIp;
    /**
     * @return TLOC list ID
     * 
     */
    private @Nullable String tlocListId;
    /**
     * @return TLOC list version
     * 
     */
    private @Nullable Integer tlocListVersion;
    /**
     * @return Type of match entry
     *   - Choices: `colorList`, `community`, `expandedCommunity`, `ompTag`, `origin`, `originator`, `preference`, `siteList`, `pathType`, `tlocList`, `vpnList`, `prefixList`, `vpn`, `tloc`, `siteId`, `carrier`, `domainId`, `groupId`
     * 
     */
    private String type;
    /**
     * @return VPN ID
     *   - Range: `0`-`65536`
     * 
     */
    private @Nullable Integer vpnId;
    /**
     * @return VPN list ID
     * 
     */
    private @Nullable String vpnListId;
    /**
     * @return VPN list version
     * 
     */
    private @Nullable Integer vpnListVersion;

    private CustomControlTopologyPolicyDefinitionSequenceMatchEntry() {}
    /**
     * @return Carrier
     *   - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`, `carrier7`, `carrier8`
     * 
     */
    public Optional<String> carrier() {
        return Optional.ofNullable(this.carrier);
    }
    /**
     * @return Color list ID
     * 
     */
    public Optional<String> colorListId() {
        return Optional.ofNullable(this.colorListId);
    }
    /**
     * @return Color list version
     * 
     */
    public Optional<Integer> colorListVersion() {
        return Optional.ofNullable(this.colorListVersion);
    }
    /**
     * @return Community list ID
     * 
     */
    public Optional<String> communityListId() {
        return Optional.ofNullable(this.communityListId);
    }
    /**
     * @return Community list version
     * 
     */
    public Optional<Integer> communityListVersion() {
        return Optional.ofNullable(this.communityListVersion);
    }
    /**
     * @return Domain ID
     *   - Range: `0`-`4294967295`
     * 
     */
    public Optional<Integer> domainId() {
        return Optional.ofNullable(this.domainId);
    }
    /**
     * @return Expanded community list ID
     * 
     */
    public Optional<String> expandedCommunityListId() {
        return Optional.ofNullable(this.expandedCommunityListId);
    }
    /**
     * @return Expanded community list version
     * 
     */
    public Optional<Integer> expandedCommunityListVersion() {
        return Optional.ofNullable(this.expandedCommunityListVersion);
    }
    /**
     * @return Group ID
     *   - Range: `0`-`4294967295`
     * 
     */
    public Optional<Integer> groupId() {
        return Optional.ofNullable(this.groupId);
    }
    /**
     * @return OMP tag
     *   - Range: `0`-`4294967295`
     * 
     */
    public Optional<Integer> ompTag() {
        return Optional.ofNullable(this.ompTag);
    }
    /**
     * @return Origin
     *   - Choices: `igp`, `egp`, `incomplete`, `aggregrate`, `bgp`, `bgp-external`, `bgp-internal`, `connected`, `eigrp`, `ospf`, `ospf-inter-area`, `ospf-intra-area`, `ospf-external1`, `ospf-external2`, `rip`, `static`, `eigrp-summary`, `eigrp-internal`, `eigrp-external`, `lisp`, `nat-dia`, `natpool`, `isis`, `isis-level1`, `isis-level2`
     * 
     */
    public Optional<String> origin() {
        return Optional.ofNullable(this.origin);
    }
    /**
     * @return Originator IP
     * 
     */
    public Optional<String> originator() {
        return Optional.ofNullable(this.originator);
    }
    /**
     * @return Path type
     *   - Choices: `hierarchical-path`, `direct-path`, `transport-gateway-path`
     * 
     */
    public Optional<String> pathType() {
        return Optional.ofNullable(this.pathType);
    }
    /**
     * @return Preference
     *   - Range: `0`-`4294967295`
     * 
     */
    public Optional<Integer> preference() {
        return Optional.ofNullable(this.preference);
    }
    /**
     * @return Prefix list ID
     * 
     */
    public Optional<String> prefixListId() {
        return Optional.ofNullable(this.prefixListId);
    }
    /**
     * @return Prefix list version
     * 
     */
    public Optional<Integer> prefixListVersion() {
        return Optional.ofNullable(this.prefixListVersion);
    }
    /**
     * @return Site ID
     *   - Range: `0`-`4294967295`
     * 
     */
    public Optional<Integer> siteId() {
        return Optional.ofNullable(this.siteId);
    }
    /**
     * @return Site list ID
     * 
     */
    public Optional<String> siteListId() {
        return Optional.ofNullable(this.siteListId);
    }
    /**
     * @return Site list version
     * 
     */
    public Optional<Integer> siteListVersion() {
        return Optional.ofNullable(this.siteListVersion);
    }
    /**
     * @return TLOC color
     * 
     */
    public Optional<String> tlocColor() {
        return Optional.ofNullable(this.tlocColor);
    }
    /**
     * @return TLOC encapsulation
     *   - Choices: `ipsec`, `gre`
     * 
     */
    public Optional<String> tlocEncapsulation() {
        return Optional.ofNullable(this.tlocEncapsulation);
    }
    /**
     * @return TLOC IP address
     * 
     */
    public Optional<String> tlocIp() {
        return Optional.ofNullable(this.tlocIp);
    }
    /**
     * @return TLOC list ID
     * 
     */
    public Optional<String> tlocListId() {
        return Optional.ofNullable(this.tlocListId);
    }
    /**
     * @return TLOC list version
     * 
     */
    public Optional<Integer> tlocListVersion() {
        return Optional.ofNullable(this.tlocListVersion);
    }
    /**
     * @return Type of match entry
     *   - Choices: `colorList`, `community`, `expandedCommunity`, `ompTag`, `origin`, `originator`, `preference`, `siteList`, `pathType`, `tlocList`, `vpnList`, `prefixList`, `vpn`, `tloc`, `siteId`, `carrier`, `domainId`, `groupId`
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return VPN ID
     *   - Range: `0`-`65536`
     * 
     */
    public Optional<Integer> vpnId() {
        return Optional.ofNullable(this.vpnId);
    }
    /**
     * @return VPN list ID
     * 
     */
    public Optional<String> vpnListId() {
        return Optional.ofNullable(this.vpnListId);
    }
    /**
     * @return VPN list version
     * 
     */
    public Optional<Integer> vpnListVersion() {
        return Optional.ofNullable(this.vpnListVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomControlTopologyPolicyDefinitionSequenceMatchEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String carrier;
        private @Nullable String colorListId;
        private @Nullable Integer colorListVersion;
        private @Nullable String communityListId;
        private @Nullable Integer communityListVersion;
        private @Nullable Integer domainId;
        private @Nullable String expandedCommunityListId;
        private @Nullable Integer expandedCommunityListVersion;
        private @Nullable Integer groupId;
        private @Nullable Integer ompTag;
        private @Nullable String origin;
        private @Nullable String originator;
        private @Nullable String pathType;
        private @Nullable Integer preference;
        private @Nullable String prefixListId;
        private @Nullable Integer prefixListVersion;
        private @Nullable Integer siteId;
        private @Nullable String siteListId;
        private @Nullable Integer siteListVersion;
        private @Nullable String tlocColor;
        private @Nullable String tlocEncapsulation;
        private @Nullable String tlocIp;
        private @Nullable String tlocListId;
        private @Nullable Integer tlocListVersion;
        private String type;
        private @Nullable Integer vpnId;
        private @Nullable String vpnListId;
        private @Nullable Integer vpnListVersion;
        public Builder() {}
        public Builder(CustomControlTopologyPolicyDefinitionSequenceMatchEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.carrier = defaults.carrier;
    	      this.colorListId = defaults.colorListId;
    	      this.colorListVersion = defaults.colorListVersion;
    	      this.communityListId = defaults.communityListId;
    	      this.communityListVersion = defaults.communityListVersion;
    	      this.domainId = defaults.domainId;
    	      this.expandedCommunityListId = defaults.expandedCommunityListId;
    	      this.expandedCommunityListVersion = defaults.expandedCommunityListVersion;
    	      this.groupId = defaults.groupId;
    	      this.ompTag = defaults.ompTag;
    	      this.origin = defaults.origin;
    	      this.originator = defaults.originator;
    	      this.pathType = defaults.pathType;
    	      this.preference = defaults.preference;
    	      this.prefixListId = defaults.prefixListId;
    	      this.prefixListVersion = defaults.prefixListVersion;
    	      this.siteId = defaults.siteId;
    	      this.siteListId = defaults.siteListId;
    	      this.siteListVersion = defaults.siteListVersion;
    	      this.tlocColor = defaults.tlocColor;
    	      this.tlocEncapsulation = defaults.tlocEncapsulation;
    	      this.tlocIp = defaults.tlocIp;
    	      this.tlocListId = defaults.tlocListId;
    	      this.tlocListVersion = defaults.tlocListVersion;
    	      this.type = defaults.type;
    	      this.vpnId = defaults.vpnId;
    	      this.vpnListId = defaults.vpnListId;
    	      this.vpnListVersion = defaults.vpnListVersion;
        }

        @CustomType.Setter
        public Builder carrier(@Nullable String carrier) {

            this.carrier = carrier;
            return this;
        }
        @CustomType.Setter
        public Builder colorListId(@Nullable String colorListId) {

            this.colorListId = colorListId;
            return this;
        }
        @CustomType.Setter
        public Builder colorListVersion(@Nullable Integer colorListVersion) {

            this.colorListVersion = colorListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder communityListId(@Nullable String communityListId) {

            this.communityListId = communityListId;
            return this;
        }
        @CustomType.Setter
        public Builder communityListVersion(@Nullable Integer communityListVersion) {

            this.communityListVersion = communityListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder domainId(@Nullable Integer domainId) {

            this.domainId = domainId;
            return this;
        }
        @CustomType.Setter
        public Builder expandedCommunityListId(@Nullable String expandedCommunityListId) {

            this.expandedCommunityListId = expandedCommunityListId;
            return this;
        }
        @CustomType.Setter
        public Builder expandedCommunityListVersion(@Nullable Integer expandedCommunityListVersion) {

            this.expandedCommunityListVersion = expandedCommunityListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(@Nullable Integer groupId) {

            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder ompTag(@Nullable Integer ompTag) {

            this.ompTag = ompTag;
            return this;
        }
        @CustomType.Setter
        public Builder origin(@Nullable String origin) {

            this.origin = origin;
            return this;
        }
        @CustomType.Setter
        public Builder originator(@Nullable String originator) {

            this.originator = originator;
            return this;
        }
        @CustomType.Setter
        public Builder pathType(@Nullable String pathType) {

            this.pathType = pathType;
            return this;
        }
        @CustomType.Setter
        public Builder preference(@Nullable Integer preference) {

            this.preference = preference;
            return this;
        }
        @CustomType.Setter
        public Builder prefixListId(@Nullable String prefixListId) {

            this.prefixListId = prefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder prefixListVersion(@Nullable Integer prefixListVersion) {

            this.prefixListVersion = prefixListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder siteId(@Nullable Integer siteId) {

            this.siteId = siteId;
            return this;
        }
        @CustomType.Setter
        public Builder siteListId(@Nullable String siteListId) {

            this.siteListId = siteListId;
            return this;
        }
        @CustomType.Setter
        public Builder siteListVersion(@Nullable Integer siteListVersion) {

            this.siteListVersion = siteListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder tlocColor(@Nullable String tlocColor) {

            this.tlocColor = tlocColor;
            return this;
        }
        @CustomType.Setter
        public Builder tlocEncapsulation(@Nullable String tlocEncapsulation) {

            this.tlocEncapsulation = tlocEncapsulation;
            return this;
        }
        @CustomType.Setter
        public Builder tlocIp(@Nullable String tlocIp) {

            this.tlocIp = tlocIp;
            return this;
        }
        @CustomType.Setter
        public Builder tlocListId(@Nullable String tlocListId) {

            this.tlocListId = tlocListId;
            return this;
        }
        @CustomType.Setter
        public Builder tlocListVersion(@Nullable Integer tlocListVersion) {

            this.tlocListVersion = tlocListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("CustomControlTopologyPolicyDefinitionSequenceMatchEntry", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vpnId(@Nullable Integer vpnId) {

            this.vpnId = vpnId;
            return this;
        }
        @CustomType.Setter
        public Builder vpnListId(@Nullable String vpnListId) {

            this.vpnListId = vpnListId;
            return this;
        }
        @CustomType.Setter
        public Builder vpnListVersion(@Nullable Integer vpnListVersion) {

            this.vpnListVersion = vpnListVersion;
            return this;
        }
        public CustomControlTopologyPolicyDefinitionSequenceMatchEntry build() {
            final var _resultValue = new CustomControlTopologyPolicyDefinitionSequenceMatchEntry();
            _resultValue.carrier = carrier;
            _resultValue.colorListId = colorListId;
            _resultValue.colorListVersion = colorListVersion;
            _resultValue.communityListId = communityListId;
            _resultValue.communityListVersion = communityListVersion;
            _resultValue.domainId = domainId;
            _resultValue.expandedCommunityListId = expandedCommunityListId;
            _resultValue.expandedCommunityListVersion = expandedCommunityListVersion;
            _resultValue.groupId = groupId;
            _resultValue.ompTag = ompTag;
            _resultValue.origin = origin;
            _resultValue.originator = originator;
            _resultValue.pathType = pathType;
            _resultValue.preference = preference;
            _resultValue.prefixListId = prefixListId;
            _resultValue.prefixListVersion = prefixListVersion;
            _resultValue.siteId = siteId;
            _resultValue.siteListId = siteListId;
            _resultValue.siteListVersion = siteListVersion;
            _resultValue.tlocColor = tlocColor;
            _resultValue.tlocEncapsulation = tlocEncapsulation;
            _resultValue.tlocIp = tlocIp;
            _resultValue.tlocListId = tlocListId;
            _resultValue.tlocListVersion = tlocListVersion;
            _resultValue.type = type;
            _resultValue.vpnId = vpnId;
            _resultValue.vpnListId = vpnListId;
            _resultValue.vpnListVersion = vpnListVersion;
            return _resultValue;
        }
    }
}
