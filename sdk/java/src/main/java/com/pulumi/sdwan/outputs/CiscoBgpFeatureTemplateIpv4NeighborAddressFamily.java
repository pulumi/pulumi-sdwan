// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sdwan.outputs.CiscoBgpFeatureTemplateIpv4NeighborAddressFamilyRoutePolicy;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CiscoBgpFeatureTemplateIpv4NeighborAddressFamily {
    /**
     * @return Set BGP address family
     *   - Choices: `ipv4-unicast`, `vpnv4-unicast`, `vpnv6-unicast`
     * 
     */
    private @Nullable String familyType;
    /**
     * @return Set maximum number of prefixes accepted from BGP peer
     *   - Range: `0`-`4294967295`
     * 
     */
    private @Nullable Integer maximumPrefixes;
    /**
     * @return Set when to restart BGP connection if threshold is exceeded
     *   - Range: `0`-`65535`
     * 
     */
    private @Nullable Integer maximumPrefixesRestart;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String maximumPrefixesRestartVariable;
    /**
     * @return Set threshold at which to generate a warning message
     *   - Range: `0`-`100`
     * 
     */
    private @Nullable Integer maximumPrefixesThreshold;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String maximumPrefixesThresholdVariable;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String maximumPrefixesVariable;
    /**
     * @return Display only a warning message when threshold is exceeded
     *   - Default value: `false`
     * 
     */
    private @Nullable Boolean maximumPrefixesWarningOnly;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String maximumPrefixesWarningOnlyVariable;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private @Nullable Boolean optional;
    /**
     * @return Select route policy to apply to prefixes received from BGP neighbor
     * 
     */
    private @Nullable List<CiscoBgpFeatureTemplateIpv4NeighborAddressFamilyRoutePolicy> routePolicies;

    private CiscoBgpFeatureTemplateIpv4NeighborAddressFamily() {}
    /**
     * @return Set BGP address family
     *   - Choices: `ipv4-unicast`, `vpnv4-unicast`, `vpnv6-unicast`
     * 
     */
    public Optional<String> familyType() {
        return Optional.ofNullable(this.familyType);
    }
    /**
     * @return Set maximum number of prefixes accepted from BGP peer
     *   - Range: `0`-`4294967295`
     * 
     */
    public Optional<Integer> maximumPrefixes() {
        return Optional.ofNullable(this.maximumPrefixes);
    }
    /**
     * @return Set when to restart BGP connection if threshold is exceeded
     *   - Range: `0`-`65535`
     * 
     */
    public Optional<Integer> maximumPrefixesRestart() {
        return Optional.ofNullable(this.maximumPrefixesRestart);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> maximumPrefixesRestartVariable() {
        return Optional.ofNullable(this.maximumPrefixesRestartVariable);
    }
    /**
     * @return Set threshold at which to generate a warning message
     *   - Range: `0`-`100`
     * 
     */
    public Optional<Integer> maximumPrefixesThreshold() {
        return Optional.ofNullable(this.maximumPrefixesThreshold);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> maximumPrefixesThresholdVariable() {
        return Optional.ofNullable(this.maximumPrefixesThresholdVariable);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> maximumPrefixesVariable() {
        return Optional.ofNullable(this.maximumPrefixesVariable);
    }
    /**
     * @return Display only a warning message when threshold is exceeded
     *   - Default value: `false`
     * 
     */
    public Optional<Boolean> maximumPrefixesWarningOnly() {
        return Optional.ofNullable(this.maximumPrefixesWarningOnly);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> maximumPrefixesWarningOnlyVariable() {
        return Optional.ofNullable(this.maximumPrefixesWarningOnlyVariable);
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Boolean> optional() {
        return Optional.ofNullable(this.optional);
    }
    /**
     * @return Select route policy to apply to prefixes received from BGP neighbor
     * 
     */
    public List<CiscoBgpFeatureTemplateIpv4NeighborAddressFamilyRoutePolicy> routePolicies() {
        return this.routePolicies == null ? List.of() : this.routePolicies;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CiscoBgpFeatureTemplateIpv4NeighborAddressFamily defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String familyType;
        private @Nullable Integer maximumPrefixes;
        private @Nullable Integer maximumPrefixesRestart;
        private @Nullable String maximumPrefixesRestartVariable;
        private @Nullable Integer maximumPrefixesThreshold;
        private @Nullable String maximumPrefixesThresholdVariable;
        private @Nullable String maximumPrefixesVariable;
        private @Nullable Boolean maximumPrefixesWarningOnly;
        private @Nullable String maximumPrefixesWarningOnlyVariable;
        private @Nullable Boolean optional;
        private @Nullable List<CiscoBgpFeatureTemplateIpv4NeighborAddressFamilyRoutePolicy> routePolicies;
        public Builder() {}
        public Builder(CiscoBgpFeatureTemplateIpv4NeighborAddressFamily defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.familyType = defaults.familyType;
    	      this.maximumPrefixes = defaults.maximumPrefixes;
    	      this.maximumPrefixesRestart = defaults.maximumPrefixesRestart;
    	      this.maximumPrefixesRestartVariable = defaults.maximumPrefixesRestartVariable;
    	      this.maximumPrefixesThreshold = defaults.maximumPrefixesThreshold;
    	      this.maximumPrefixesThresholdVariable = defaults.maximumPrefixesThresholdVariable;
    	      this.maximumPrefixesVariable = defaults.maximumPrefixesVariable;
    	      this.maximumPrefixesWarningOnly = defaults.maximumPrefixesWarningOnly;
    	      this.maximumPrefixesWarningOnlyVariable = defaults.maximumPrefixesWarningOnlyVariable;
    	      this.optional = defaults.optional;
    	      this.routePolicies = defaults.routePolicies;
        }

        @CustomType.Setter
        public Builder familyType(@Nullable String familyType) {

            this.familyType = familyType;
            return this;
        }
        @CustomType.Setter
        public Builder maximumPrefixes(@Nullable Integer maximumPrefixes) {

            this.maximumPrefixes = maximumPrefixes;
            return this;
        }
        @CustomType.Setter
        public Builder maximumPrefixesRestart(@Nullable Integer maximumPrefixesRestart) {

            this.maximumPrefixesRestart = maximumPrefixesRestart;
            return this;
        }
        @CustomType.Setter
        public Builder maximumPrefixesRestartVariable(@Nullable String maximumPrefixesRestartVariable) {

            this.maximumPrefixesRestartVariable = maximumPrefixesRestartVariable;
            return this;
        }
        @CustomType.Setter
        public Builder maximumPrefixesThreshold(@Nullable Integer maximumPrefixesThreshold) {

            this.maximumPrefixesThreshold = maximumPrefixesThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder maximumPrefixesThresholdVariable(@Nullable String maximumPrefixesThresholdVariable) {

            this.maximumPrefixesThresholdVariable = maximumPrefixesThresholdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder maximumPrefixesVariable(@Nullable String maximumPrefixesVariable) {

            this.maximumPrefixesVariable = maximumPrefixesVariable;
            return this;
        }
        @CustomType.Setter
        public Builder maximumPrefixesWarningOnly(@Nullable Boolean maximumPrefixesWarningOnly) {

            this.maximumPrefixesWarningOnly = maximumPrefixesWarningOnly;
            return this;
        }
        @CustomType.Setter
        public Builder maximumPrefixesWarningOnlyVariable(@Nullable String maximumPrefixesWarningOnlyVariable) {

            this.maximumPrefixesWarningOnlyVariable = maximumPrefixesWarningOnlyVariable;
            return this;
        }
        @CustomType.Setter
        public Builder optional(@Nullable Boolean optional) {

            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder routePolicies(@Nullable List<CiscoBgpFeatureTemplateIpv4NeighborAddressFamilyRoutePolicy> routePolicies) {

            this.routePolicies = routePolicies;
            return this;
        }
        public Builder routePolicies(CiscoBgpFeatureTemplateIpv4NeighborAddressFamilyRoutePolicy... routePolicies) {
            return routePolicies(List.of(routePolicies));
        }
        public CiscoBgpFeatureTemplateIpv4NeighborAddressFamily build() {
            final var _resultValue = new CiscoBgpFeatureTemplateIpv4NeighborAddressFamily();
            _resultValue.familyType = familyType;
            _resultValue.maximumPrefixes = maximumPrefixes;
            _resultValue.maximumPrefixesRestart = maximumPrefixesRestart;
            _resultValue.maximumPrefixesRestartVariable = maximumPrefixesRestartVariable;
            _resultValue.maximumPrefixesThreshold = maximumPrefixesThreshold;
            _resultValue.maximumPrefixesThresholdVariable = maximumPrefixesThresholdVariable;
            _resultValue.maximumPrefixesVariable = maximumPrefixesVariable;
            _resultValue.maximumPrefixesWarningOnly = maximumPrefixesWarningOnly;
            _resultValue.maximumPrefixesWarningOnlyVariable = maximumPrefixesWarningOnlyVariable;
            _resultValue.optional = optional;
            _resultValue.routePolicies = routePolicies;
            return _resultValue;
        }
    }
}
