// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServiceMulticastFeaturePimBsrRpCandidate {
    /**
     * @return Set IP Access List for PIM RP Candidate
     * 
     */
    private String accessListId;
    /**
     * @return Variable name
     * 
     */
    private String accessListIdVariable;
    /**
     * @return Set Autonomic-Networking virtual interface
     * 
     */
    private String interfaceName;
    /**
     * @return Variable name
     * 
     */
    private String interfaceNameVariable;
    /**
     * @return Set RP candidate advertisement interval
     * 
     */
    private Integer interval;
    /**
     * @return Variable name
     * 
     */
    private String intervalVariable;
    /**
     * @return Set RP candidate priority
     * 
     */
    private Integer priority;
    /**
     * @return Variable name
     * 
     */
    private String priorityVariable;

    private GetServiceMulticastFeaturePimBsrRpCandidate() {}
    /**
     * @return Set IP Access List for PIM RP Candidate
     * 
     */
    public String accessListId() {
        return this.accessListId;
    }
    /**
     * @return Variable name
     * 
     */
    public String accessListIdVariable() {
        return this.accessListIdVariable;
    }
    /**
     * @return Set Autonomic-Networking virtual interface
     * 
     */
    public String interfaceName() {
        return this.interfaceName;
    }
    /**
     * @return Variable name
     * 
     */
    public String interfaceNameVariable() {
        return this.interfaceNameVariable;
    }
    /**
     * @return Set RP candidate advertisement interval
     * 
     */
    public Integer interval() {
        return this.interval;
    }
    /**
     * @return Variable name
     * 
     */
    public String intervalVariable() {
        return this.intervalVariable;
    }
    /**
     * @return Set RP candidate priority
     * 
     */
    public Integer priority() {
        return this.priority;
    }
    /**
     * @return Variable name
     * 
     */
    public String priorityVariable() {
        return this.priorityVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceMulticastFeaturePimBsrRpCandidate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessListId;
        private String accessListIdVariable;
        private String interfaceName;
        private String interfaceNameVariable;
        private Integer interval;
        private String intervalVariable;
        private Integer priority;
        private String priorityVariable;
        public Builder() {}
        public Builder(GetServiceMulticastFeaturePimBsrRpCandidate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessListId = defaults.accessListId;
    	      this.accessListIdVariable = defaults.accessListIdVariable;
    	      this.interfaceName = defaults.interfaceName;
    	      this.interfaceNameVariable = defaults.interfaceNameVariable;
    	      this.interval = defaults.interval;
    	      this.intervalVariable = defaults.intervalVariable;
    	      this.priority = defaults.priority;
    	      this.priorityVariable = defaults.priorityVariable;
        }

        @CustomType.Setter
        public Builder accessListId(String accessListId) {
            if (accessListId == null) {
              throw new MissingRequiredPropertyException("GetServiceMulticastFeaturePimBsrRpCandidate", "accessListId");
            }
            this.accessListId = accessListId;
            return this;
        }
        @CustomType.Setter
        public Builder accessListIdVariable(String accessListIdVariable) {
            if (accessListIdVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceMulticastFeaturePimBsrRpCandidate", "accessListIdVariable");
            }
            this.accessListIdVariable = accessListIdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceName(String interfaceName) {
            if (interfaceName == null) {
              throw new MissingRequiredPropertyException("GetServiceMulticastFeaturePimBsrRpCandidate", "interfaceName");
            }
            this.interfaceName = interfaceName;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceNameVariable(String interfaceNameVariable) {
            if (interfaceNameVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceMulticastFeaturePimBsrRpCandidate", "interfaceNameVariable");
            }
            this.interfaceNameVariable = interfaceNameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder interval(Integer interval) {
            if (interval == null) {
              throw new MissingRequiredPropertyException("GetServiceMulticastFeaturePimBsrRpCandidate", "interval");
            }
            this.interval = interval;
            return this;
        }
        @CustomType.Setter
        public Builder intervalVariable(String intervalVariable) {
            if (intervalVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceMulticastFeaturePimBsrRpCandidate", "intervalVariable");
            }
            this.intervalVariable = intervalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetServiceMulticastFeaturePimBsrRpCandidate", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder priorityVariable(String priorityVariable) {
            if (priorityVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceMulticastFeaturePimBsrRpCandidate", "priorityVariable");
            }
            this.priorityVariable = priorityVariable;
            return this;
        }
        public GetServiceMulticastFeaturePimBsrRpCandidate build() {
            final var _resultValue = new GetServiceMulticastFeaturePimBsrRpCandidate();
            _resultValue.accessListId = accessListId;
            _resultValue.accessListIdVariable = accessListIdVariable;
            _resultValue.interfaceName = interfaceName;
            _resultValue.interfaceNameVariable = interfaceNameVariable;
            _resultValue.interval = interval;
            _resultValue.intervalVariable = intervalVariable;
            _resultValue.priority = priority;
            _resultValue.priorityVariable = priorityVariable;
            return _resultValue;
        }
    }
}
