// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.CiscoNtpFeatureTemplateArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.CiscoNtpFeatureTemplateState;
import com.pulumi.sdwan.outputs.CiscoNtpFeatureTemplateAuthenticationKey;
import com.pulumi.sdwan.outputs.CiscoNtpFeatureTemplateServer;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Cisco NTP feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sdwan.CiscoNtpFeatureTemplate;
 * import com.pulumi.sdwan.CiscoNtpFeatureTemplateArgs;
 * import com.pulumi.sdwan.inputs.CiscoNtpFeatureTemplateAuthenticationKeyArgs;
 * import com.pulumi.sdwan.inputs.CiscoNtpFeatureTemplateServerArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new CiscoNtpFeatureTemplate("example", CiscoNtpFeatureTemplateArgs.builder()
 *             .name("Example")
 *             .description("My Example")
 *             .deviceTypes("vedge-C8000V")
 *             .master(true)
 *             .masterStratum(6)
 *             .masterSourceInterface("e1")
 *             .trustedKeys(1)
 *             .authenticationKeys(CiscoNtpFeatureTemplateAuthenticationKeyArgs.builder()
 *                 .id(1)
 *                 .value("12345")
 *                 .build())
 *             .servers(CiscoNtpFeatureTemplateServerArgs.builder()
 *                 .hostname_ip("NTP_SERVER1")
 *                 .authentication_key_id(1)
 *                 .vpn_id(1)
 *                 .version(4)
 *                 .source_interface("e1")
 *                 .prefer(true)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import sdwan:index/ciscoNtpFeatureTemplate:CiscoNtpFeatureTemplate example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/ciscoNtpFeatureTemplate:CiscoNtpFeatureTemplate")
public class CiscoNtpFeatureTemplate extends com.pulumi.resources.CustomResource {
    /**
     * Set MD5 authentication key
     * 
     */
    @Export(name="authenticationKeys", refs={List.class,CiscoNtpFeatureTemplateAuthenticationKey.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CiscoNtpFeatureTemplateAuthenticationKey>> authenticationKeys;

    /**
     * @return Set MD5 authentication key
     * 
     */
    public Output<Optional<List<CiscoNtpFeatureTemplateAuthenticationKey>>> authenticationKeys() {
        return Codegen.optional(this.authenticationKeys);
    }
    /**
     * The description of the feature template
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return The description of the feature template
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    @Export(name="deviceTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> deviceTypes;

    /**
     * @return List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    public Output<List<String>> deviceTypes() {
        return this.deviceTypes;
    }
    /**
     * Configure device as NTP master - Default value: `false`
     * 
     */
    @Export(name="master", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> master;

    /**
     * @return Configure device as NTP master - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> master() {
        return Codegen.optional(this.master);
    }
    /**
     * Set interface for NTP Master
     * 
     */
    @Export(name="masterSourceInterface", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> masterSourceInterface;

    /**
     * @return Set interface for NTP Master
     * 
     */
    public Output<Optional<String>> masterSourceInterface() {
        return Codegen.optional(this.masterSourceInterface);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="masterSourceInterfaceVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> masterSourceInterfaceVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> masterSourceInterfaceVariable() {
        return Codegen.optional(this.masterSourceInterfaceVariable);
    }
    /**
     * Master Stratum &lt;1..15&gt; - Range: `1`-`15`
     * 
     */
    @Export(name="masterStratum", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> masterStratum;

    /**
     * @return Master Stratum &lt;1..15&gt; - Range: `1`-`15`
     * 
     */
    public Output<Optional<Integer>> masterStratum() {
        return Codegen.optional(this.masterStratum);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="masterStratumVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> masterStratumVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> masterStratumVariable() {
        return Codegen.optional(this.masterStratumVariable);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="masterVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> masterVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> masterVariable() {
        return Codegen.optional(this.masterVariable);
    }
    /**
     * The name of the feature template
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the feature template
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Configure NTP servers
     * 
     */
    @Export(name="servers", refs={List.class,CiscoNtpFeatureTemplateServer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CiscoNtpFeatureTemplateServer>> servers;

    /**
     * @return Configure NTP servers
     * 
     */
    public Output<Optional<List<CiscoNtpFeatureTemplateServer>>> servers() {
        return Codegen.optional(this.servers);
    }
    /**
     * The template type
     * 
     */
    @Export(name="templateType", refs={String.class}, tree="[0]")
    private Output<String> templateType;

    /**
     * @return The template type
     * 
     */
    public Output<String> templateType() {
        return this.templateType;
    }
    /**
     * Designate authentication key as trustworthy
     * 
     */
    @Export(name="trustedKeys", refs={List.class,Integer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<Integer>> trustedKeys;

    /**
     * @return Designate authentication key as trustworthy
     * 
     */
    public Output<Optional<List<Integer>>> trustedKeys() {
        return Codegen.optional(this.trustedKeys);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="trustedKeysVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> trustedKeysVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> trustedKeysVariable() {
        return Codegen.optional(this.trustedKeysVariable);
    }
    /**
     * The version of the feature template
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the feature template
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CiscoNtpFeatureTemplate(java.lang.String name) {
        this(name, CiscoNtpFeatureTemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CiscoNtpFeatureTemplate(java.lang.String name, CiscoNtpFeatureTemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CiscoNtpFeatureTemplate(java.lang.String name, CiscoNtpFeatureTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/ciscoNtpFeatureTemplate:CiscoNtpFeatureTemplate", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private CiscoNtpFeatureTemplate(java.lang.String name, Output<java.lang.String> id, @Nullable CiscoNtpFeatureTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/ciscoNtpFeatureTemplate:CiscoNtpFeatureTemplate", name, state, makeResourceOptions(options, id), false);
    }

    private static CiscoNtpFeatureTemplateArgs makeArgs(CiscoNtpFeatureTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CiscoNtpFeatureTemplateArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CiscoNtpFeatureTemplate get(java.lang.String name, Output<java.lang.String> id, @Nullable CiscoNtpFeatureTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CiscoNtpFeatureTemplate(name, id, state, options);
    }
}
