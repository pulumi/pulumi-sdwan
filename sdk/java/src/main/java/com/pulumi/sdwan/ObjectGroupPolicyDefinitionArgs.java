// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObjectGroupPolicyDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObjectGroupPolicyDefinitionArgs Empty = new ObjectGroupPolicyDefinitionArgs();

    /**
     * Data FQDN prefix list ID
     * 
     */
    @Import(name="dataFqdnPrefixListId")
    private @Nullable Output<String> dataFqdnPrefixListId;

    /**
     * @return Data FQDN prefix list ID
     * 
     */
    public Optional<Output<String>> dataFqdnPrefixListId() {
        return Optional.ofNullable(this.dataFqdnPrefixListId);
    }

    /**
     * Data FQDN prefix list version
     * 
     */
    @Import(name="dataFqdnPrefixListVersion")
    private @Nullable Output<Integer> dataFqdnPrefixListVersion;

    /**
     * @return Data FQDN prefix list version
     * 
     */
    public Optional<Output<Integer>> dataFqdnPrefixListVersion() {
        return Optional.ofNullable(this.dataFqdnPrefixListVersion);
    }

    /**
     * Data IPv4 prefix list ID
     * 
     */
    @Import(name="dataIpv4PrefixListId")
    private @Nullable Output<String> dataIpv4PrefixListId;

    /**
     * @return Data IPv4 prefix list ID
     * 
     */
    public Optional<Output<String>> dataIpv4PrefixListId() {
        return Optional.ofNullable(this.dataIpv4PrefixListId);
    }

    /**
     * Data IPv4 prefix list version
     * 
     */
    @Import(name="dataIpv4PrefixListVersion")
    private @Nullable Output<Integer> dataIpv4PrefixListVersion;

    /**
     * @return Data IPv4 prefix list version
     * 
     */
    public Optional<Output<Integer>> dataIpv4PrefixListVersion() {
        return Optional.ofNullable(this.dataIpv4PrefixListVersion);
    }

    /**
     * The description of the policy definition
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return The description of the policy definition
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * Fully qualified domain name
     * 
     */
    @Import(name="fqdn")
    private @Nullable Output<String> fqdn;

    /**
     * @return Fully qualified domain name
     * 
     */
    public Optional<Output<String>> fqdn() {
        return Optional.ofNullable(this.fqdn);
    }

    /**
     * Geo location
     * 
     */
    @Import(name="geoLocation")
    private @Nullable Output<String> geoLocation;

    /**
     * @return Geo location
     * 
     */
    public Optional<Output<String>> geoLocation() {
        return Optional.ofNullable(this.geoLocation);
    }

    /**
     * Geo location list ID
     * 
     */
    @Import(name="geoLocationListId")
    private @Nullable Output<String> geoLocationListId;

    /**
     * @return Geo location list ID
     * 
     */
    public Optional<Output<String>> geoLocationListId() {
        return Optional.ofNullable(this.geoLocationListId);
    }

    /**
     * Geo location list version
     * 
     */
    @Import(name="geoLocationListVersion")
    private @Nullable Output<Integer> geoLocationListVersion;

    /**
     * @return Geo location list version
     * 
     */
    public Optional<Output<Integer>> geoLocationListVersion() {
        return Optional.ofNullable(this.geoLocationListVersion);
    }

    /**
     * IPv4 prefix
     * 
     */
    @Import(name="ipv4Prefix")
    private @Nullable Output<String> ipv4Prefix;

    /**
     * @return IPv4 prefix
     * 
     */
    public Optional<Output<String>> ipv4Prefix() {
        return Optional.ofNullable(this.ipv4Prefix);
    }

    /**
     * IPv4 prefix variable name
     * 
     */
    @Import(name="ipv4PrefixVariable")
    private @Nullable Output<String> ipv4PrefixVariable;

    /**
     * @return IPv4 prefix variable name
     * 
     */
    public Optional<Output<String>> ipv4PrefixVariable() {
        return Optional.ofNullable(this.ipv4PrefixVariable);
    }

    /**
     * The name of the policy definition
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the policy definition
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Port or range of ports
     * 
     */
    @Import(name="port")
    private @Nullable Output<String> port;

    /**
     * @return Port or range of ports
     * 
     */
    public Optional<Output<String>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * Port list ID
     * 
     */
    @Import(name="portListId")
    private @Nullable Output<String> portListId;

    /**
     * @return Port list ID
     * 
     */
    public Optional<Output<String>> portListId() {
        return Optional.ofNullable(this.portListId);
    }

    /**
     * Port list version
     * 
     */
    @Import(name="portListVersion")
    private @Nullable Output<Integer> portListVersion;

    /**
     * @return Port list version
     * 
     */
    public Optional<Output<Integer>> portListVersion() {
        return Optional.ofNullable(this.portListVersion);
    }

    private ObjectGroupPolicyDefinitionArgs() {}

    private ObjectGroupPolicyDefinitionArgs(ObjectGroupPolicyDefinitionArgs $) {
        this.dataFqdnPrefixListId = $.dataFqdnPrefixListId;
        this.dataFqdnPrefixListVersion = $.dataFqdnPrefixListVersion;
        this.dataIpv4PrefixListId = $.dataIpv4PrefixListId;
        this.dataIpv4PrefixListVersion = $.dataIpv4PrefixListVersion;
        this.description = $.description;
        this.fqdn = $.fqdn;
        this.geoLocation = $.geoLocation;
        this.geoLocationListId = $.geoLocationListId;
        this.geoLocationListVersion = $.geoLocationListVersion;
        this.ipv4Prefix = $.ipv4Prefix;
        this.ipv4PrefixVariable = $.ipv4PrefixVariable;
        this.name = $.name;
        this.port = $.port;
        this.portListId = $.portListId;
        this.portListVersion = $.portListVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObjectGroupPolicyDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObjectGroupPolicyDefinitionArgs $;

        public Builder() {
            $ = new ObjectGroupPolicyDefinitionArgs();
        }

        public Builder(ObjectGroupPolicyDefinitionArgs defaults) {
            $ = new ObjectGroupPolicyDefinitionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataFqdnPrefixListId Data FQDN prefix list ID
         * 
         * @return builder
         * 
         */
        public Builder dataFqdnPrefixListId(@Nullable Output<String> dataFqdnPrefixListId) {
            $.dataFqdnPrefixListId = dataFqdnPrefixListId;
            return this;
        }

        /**
         * @param dataFqdnPrefixListId Data FQDN prefix list ID
         * 
         * @return builder
         * 
         */
        public Builder dataFqdnPrefixListId(String dataFqdnPrefixListId) {
            return dataFqdnPrefixListId(Output.of(dataFqdnPrefixListId));
        }

        /**
         * @param dataFqdnPrefixListVersion Data FQDN prefix list version
         * 
         * @return builder
         * 
         */
        public Builder dataFqdnPrefixListVersion(@Nullable Output<Integer> dataFqdnPrefixListVersion) {
            $.dataFqdnPrefixListVersion = dataFqdnPrefixListVersion;
            return this;
        }

        /**
         * @param dataFqdnPrefixListVersion Data FQDN prefix list version
         * 
         * @return builder
         * 
         */
        public Builder dataFqdnPrefixListVersion(Integer dataFqdnPrefixListVersion) {
            return dataFqdnPrefixListVersion(Output.of(dataFqdnPrefixListVersion));
        }

        /**
         * @param dataIpv4PrefixListId Data IPv4 prefix list ID
         * 
         * @return builder
         * 
         */
        public Builder dataIpv4PrefixListId(@Nullable Output<String> dataIpv4PrefixListId) {
            $.dataIpv4PrefixListId = dataIpv4PrefixListId;
            return this;
        }

        /**
         * @param dataIpv4PrefixListId Data IPv4 prefix list ID
         * 
         * @return builder
         * 
         */
        public Builder dataIpv4PrefixListId(String dataIpv4PrefixListId) {
            return dataIpv4PrefixListId(Output.of(dataIpv4PrefixListId));
        }

        /**
         * @param dataIpv4PrefixListVersion Data IPv4 prefix list version
         * 
         * @return builder
         * 
         */
        public Builder dataIpv4PrefixListVersion(@Nullable Output<Integer> dataIpv4PrefixListVersion) {
            $.dataIpv4PrefixListVersion = dataIpv4PrefixListVersion;
            return this;
        }

        /**
         * @param dataIpv4PrefixListVersion Data IPv4 prefix list version
         * 
         * @return builder
         * 
         */
        public Builder dataIpv4PrefixListVersion(Integer dataIpv4PrefixListVersion) {
            return dataIpv4PrefixListVersion(Output.of(dataIpv4PrefixListVersion));
        }

        /**
         * @param description The description of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param fqdn Fully qualified domain name
         * 
         * @return builder
         * 
         */
        public Builder fqdn(@Nullable Output<String> fqdn) {
            $.fqdn = fqdn;
            return this;
        }

        /**
         * @param fqdn Fully qualified domain name
         * 
         * @return builder
         * 
         */
        public Builder fqdn(String fqdn) {
            return fqdn(Output.of(fqdn));
        }

        /**
         * @param geoLocation Geo location
         * 
         * @return builder
         * 
         */
        public Builder geoLocation(@Nullable Output<String> geoLocation) {
            $.geoLocation = geoLocation;
            return this;
        }

        /**
         * @param geoLocation Geo location
         * 
         * @return builder
         * 
         */
        public Builder geoLocation(String geoLocation) {
            return geoLocation(Output.of(geoLocation));
        }

        /**
         * @param geoLocationListId Geo location list ID
         * 
         * @return builder
         * 
         */
        public Builder geoLocationListId(@Nullable Output<String> geoLocationListId) {
            $.geoLocationListId = geoLocationListId;
            return this;
        }

        /**
         * @param geoLocationListId Geo location list ID
         * 
         * @return builder
         * 
         */
        public Builder geoLocationListId(String geoLocationListId) {
            return geoLocationListId(Output.of(geoLocationListId));
        }

        /**
         * @param geoLocationListVersion Geo location list version
         * 
         * @return builder
         * 
         */
        public Builder geoLocationListVersion(@Nullable Output<Integer> geoLocationListVersion) {
            $.geoLocationListVersion = geoLocationListVersion;
            return this;
        }

        /**
         * @param geoLocationListVersion Geo location list version
         * 
         * @return builder
         * 
         */
        public Builder geoLocationListVersion(Integer geoLocationListVersion) {
            return geoLocationListVersion(Output.of(geoLocationListVersion));
        }

        /**
         * @param ipv4Prefix IPv4 prefix
         * 
         * @return builder
         * 
         */
        public Builder ipv4Prefix(@Nullable Output<String> ipv4Prefix) {
            $.ipv4Prefix = ipv4Prefix;
            return this;
        }

        /**
         * @param ipv4Prefix IPv4 prefix
         * 
         * @return builder
         * 
         */
        public Builder ipv4Prefix(String ipv4Prefix) {
            return ipv4Prefix(Output.of(ipv4Prefix));
        }

        /**
         * @param ipv4PrefixVariable IPv4 prefix variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4PrefixVariable(@Nullable Output<String> ipv4PrefixVariable) {
            $.ipv4PrefixVariable = ipv4PrefixVariable;
            return this;
        }

        /**
         * @param ipv4PrefixVariable IPv4 prefix variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4PrefixVariable(String ipv4PrefixVariable) {
            return ipv4PrefixVariable(Output.of(ipv4PrefixVariable));
        }

        /**
         * @param name The name of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the policy definition
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param port Port or range of ports
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<String> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port Port or range of ports
         * 
         * @return builder
         * 
         */
        public Builder port(String port) {
            return port(Output.of(port));
        }

        /**
         * @param portListId Port list ID
         * 
         * @return builder
         * 
         */
        public Builder portListId(@Nullable Output<String> portListId) {
            $.portListId = portListId;
            return this;
        }

        /**
         * @param portListId Port list ID
         * 
         * @return builder
         * 
         */
        public Builder portListId(String portListId) {
            return portListId(Output.of(portListId));
        }

        /**
         * @param portListVersion Port list version
         * 
         * @return builder
         * 
         */
        public Builder portListVersion(@Nullable Output<Integer> portListVersion) {
            $.portListVersion = portListVersion;
            return this;
        }

        /**
         * @param portListVersion Port list version
         * 
         * @return builder
         * 
         */
        public Builder portListVersion(Integer portListVersion) {
            return portListVersion(Output.of(portListVersion));
        }

        public ObjectGroupPolicyDefinitionArgs build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("ObjectGroupPolicyDefinitionArgs", "description");
            }
            return $;
        }
    }

}
