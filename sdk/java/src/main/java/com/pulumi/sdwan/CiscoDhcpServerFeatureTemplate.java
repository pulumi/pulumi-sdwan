// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.CiscoDhcpServerFeatureTemplateArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.CiscoDhcpServerFeatureTemplateState;
import com.pulumi.sdwan.outputs.CiscoDhcpServerFeatureTemplateOption;
import com.pulumi.sdwan.outputs.CiscoDhcpServerFeatureTemplateStaticLease;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Cisco DHCP Server feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * ```sh
 * $ pulumi import sdwan:index/ciscoDhcpServerFeatureTemplate:CiscoDhcpServerFeatureTemplate example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/ciscoDhcpServerFeatureTemplate:CiscoDhcpServerFeatureTemplate")
public class CiscoDhcpServerFeatureTemplate extends com.pulumi.resources.CustomResource {
    /**
     * Configure IPv4 prefix range of the DHCP address pool
     * 
     */
    @Export(name="addressPool", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> addressPool;

    /**
     * @return Configure IPv4 prefix range of the DHCP address pool
     * 
     */
    public Output<Optional<String>> addressPool() {
        return Codegen.optional(this.addressPool);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="addressPoolVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> addressPoolVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> addressPoolVariable() {
        return Codegen.optional(this.addressPoolVariable);
    }
    /**
     * Set IP address of default gateway
     * 
     */
    @Export(name="defaultGateway", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> defaultGateway;

    /**
     * @return Set IP address of default gateway
     * 
     */
    public Output<Optional<String>> defaultGateway() {
        return Codegen.optional(this.defaultGateway);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="defaultGatewayVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> defaultGatewayVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> defaultGatewayVariable() {
        return Codegen.optional(this.defaultGatewayVariable);
    }
    /**
     * The description of the feature template
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return The description of the feature template
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    @Export(name="deviceTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> deviceTypes;

    /**
     * @return List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    public Output<List<String>> deviceTypes() {
        return this.deviceTypes;
    }
    /**
     * Configure one or more DNS server IP addresses
     * 
     */
    @Export(name="dnsServers", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> dnsServers;

    /**
     * @return Configure one or more DNS server IP addresses
     * 
     */
    public Output<Optional<List<String>>> dnsServers() {
        return Codegen.optional(this.dnsServers);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="dnsServersVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dnsServersVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> dnsServersVariable() {
        return Codegen.optional(this.dnsServersVariable);
    }
    /**
     * Set domain name client uses to resolve hostnames
     * 
     */
    @Export(name="domainName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> domainName;

    /**
     * @return Set domain name client uses to resolve hostnames
     * 
     */
    public Output<Optional<String>> domainName() {
        return Codegen.optional(this.domainName);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="domainNameVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> domainNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> domainNameVariable() {
        return Codegen.optional(this.domainNameVariable);
    }
    /**
     * Configure IPv4 address to exclude from DHCP address pool
     * 
     */
    @Export(name="excludeAddresses", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> excludeAddresses;

    /**
     * @return Configure IPv4 address to exclude from DHCP address pool
     * 
     */
    public Output<Optional<List<String>>> excludeAddresses() {
        return Codegen.optional(this.excludeAddresses);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="excludeAddressesVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> excludeAddressesVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> excludeAddressesVariable() {
        return Codegen.optional(this.excludeAddressesVariable);
    }
    /**
     * Set MTU on interface to DHCP client - Range: `68`-`65535`
     * 
     */
    @Export(name="interfaceMtu", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> interfaceMtu;

    /**
     * @return Set MTU on interface to DHCP client - Range: `68`-`65535`
     * 
     */
    public Output<Optional<Integer>> interfaceMtu() {
        return Codegen.optional(this.interfaceMtu);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="interfaceMtuVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> interfaceMtuVariable() {
        return Codegen.optional(this.interfaceMtuVariable);
    }
    /**
     * Configure how long a DHCP-assigned IP address is valid - Range: `60`-`31536000` - Default value: `86400`
     * 
     */
    @Export(name="leaseTime", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> leaseTime;

    /**
     * @return Configure how long a DHCP-assigned IP address is valid - Range: `60`-`31536000` - Default value: `86400`
     * 
     */
    public Output<Optional<Integer>> leaseTime() {
        return Codegen.optional(this.leaseTime);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="leaseTimeVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> leaseTimeVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> leaseTimeVariable() {
        return Codegen.optional(this.leaseTimeVariable);
    }
    /**
     * The name of the feature template
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the feature template
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Configure Options Code
     * 
     */
    @Export(name="options", refs={List.class,CiscoDhcpServerFeatureTemplateOption.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CiscoDhcpServerFeatureTemplateOption>> options;

    /**
     * @return Configure Options Code
     * 
     */
    public Output<Optional<List<CiscoDhcpServerFeatureTemplateOption>>> options() {
        return Codegen.optional(this.options);
    }
    /**
     * Configure static IP addresses
     * 
     */
    @Export(name="staticLeases", refs={List.class,CiscoDhcpServerFeatureTemplateStaticLease.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CiscoDhcpServerFeatureTemplateStaticLease>> staticLeases;

    /**
     * @return Configure static IP addresses
     * 
     */
    public Output<Optional<List<CiscoDhcpServerFeatureTemplateStaticLease>>> staticLeases() {
        return Codegen.optional(this.staticLeases);
    }
    /**
     * The template type
     * 
     */
    @Export(name="templateType", refs={String.class}, tree="[0]")
    private Output<String> templateType;

    /**
     * @return The template type
     * 
     */
    public Output<String> templateType() {
        return this.templateType;
    }
    /**
     * Configure TFTP server IP addresses
     * 
     */
    @Export(name="tftpServers", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tftpServers;

    /**
     * @return Configure TFTP server IP addresses
     * 
     */
    public Output<Optional<List<String>>> tftpServers() {
        return Codegen.optional(this.tftpServers);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tftpServersVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tftpServersVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tftpServersVariable() {
        return Codegen.optional(this.tftpServersVariable);
    }
    /**
     * The version of the feature template
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the feature template
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CiscoDhcpServerFeatureTemplate(java.lang.String name) {
        this(name, CiscoDhcpServerFeatureTemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CiscoDhcpServerFeatureTemplate(java.lang.String name, CiscoDhcpServerFeatureTemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CiscoDhcpServerFeatureTemplate(java.lang.String name, CiscoDhcpServerFeatureTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/ciscoDhcpServerFeatureTemplate:CiscoDhcpServerFeatureTemplate", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private CiscoDhcpServerFeatureTemplate(java.lang.String name, Output<java.lang.String> id, @Nullable CiscoDhcpServerFeatureTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/ciscoDhcpServerFeatureTemplate:CiscoDhcpServerFeatureTemplate", name, state, makeResourceOptions(options, id), false);
    }

    private static CiscoDhcpServerFeatureTemplateArgs makeArgs(CiscoDhcpServerFeatureTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CiscoDhcpServerFeatureTemplateArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CiscoDhcpServerFeatureTemplate get(java.lang.String name, Output<java.lang.String> id, @Nullable CiscoDhcpServerFeatureTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CiscoDhcpServerFeatureTemplate(name, id, state, options);
    }
}
