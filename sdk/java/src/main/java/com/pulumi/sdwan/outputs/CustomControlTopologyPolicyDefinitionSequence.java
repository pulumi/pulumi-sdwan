// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.CustomControlTopologyPolicyDefinitionSequenceActionEntry;
import com.pulumi.sdwan.outputs.CustomControlTopologyPolicyDefinitionSequenceMatchEntry;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CustomControlTopologyPolicyDefinitionSequence {
    /**
     * @return List of action entries
     * 
     */
    private @Nullable List<CustomControlTopologyPolicyDefinitionSequenceActionEntry> actionEntries;
    /**
     * @return Base action, either `accept` or `reject`
     *   - Choices: `accept`, `reject`
     * 
     */
    private @Nullable String baseAction;
    /**
     * @return Sequence ID
     * 
     */
    private Integer id;
    /**
     * @return Sequence IP type, either `ipv4`, `ipv6` or `all`
     *   - Choices: `ipv4`, `ipv6`, `all`
     * 
     */
    private @Nullable String ipType;
    /**
     * @return List of match entries
     * 
     */
    private @Nullable List<CustomControlTopologyPolicyDefinitionSequenceMatchEntry> matchEntries;
    /**
     * @return Sequence name
     * 
     */
    private String name;
    /**
     * @return Sequence type, either `route` or `tloc`
     *   - Choices: `route`, `tloc`
     * 
     */
    private @Nullable String type;

    private CustomControlTopologyPolicyDefinitionSequence() {}
    /**
     * @return List of action entries
     * 
     */
    public List<CustomControlTopologyPolicyDefinitionSequenceActionEntry> actionEntries() {
        return this.actionEntries == null ? List.of() : this.actionEntries;
    }
    /**
     * @return Base action, either `accept` or `reject`
     *   - Choices: `accept`, `reject`
     * 
     */
    public Optional<String> baseAction() {
        return Optional.ofNullable(this.baseAction);
    }
    /**
     * @return Sequence ID
     * 
     */
    public Integer id() {
        return this.id;
    }
    /**
     * @return Sequence IP type, either `ipv4`, `ipv6` or `all`
     *   - Choices: `ipv4`, `ipv6`, `all`
     * 
     */
    public Optional<String> ipType() {
        return Optional.ofNullable(this.ipType);
    }
    /**
     * @return List of match entries
     * 
     */
    public List<CustomControlTopologyPolicyDefinitionSequenceMatchEntry> matchEntries() {
        return this.matchEntries == null ? List.of() : this.matchEntries;
    }
    /**
     * @return Sequence name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Sequence type, either `route` or `tloc`
     *   - Choices: `route`, `tloc`
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomControlTopologyPolicyDefinitionSequence defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<CustomControlTopologyPolicyDefinitionSequenceActionEntry> actionEntries;
        private @Nullable String baseAction;
        private Integer id;
        private @Nullable String ipType;
        private @Nullable List<CustomControlTopologyPolicyDefinitionSequenceMatchEntry> matchEntries;
        private String name;
        private @Nullable String type;
        public Builder() {}
        public Builder(CustomControlTopologyPolicyDefinitionSequence defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionEntries = defaults.actionEntries;
    	      this.baseAction = defaults.baseAction;
    	      this.id = defaults.id;
    	      this.ipType = defaults.ipType;
    	      this.matchEntries = defaults.matchEntries;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder actionEntries(@Nullable List<CustomControlTopologyPolicyDefinitionSequenceActionEntry> actionEntries) {

            this.actionEntries = actionEntries;
            return this;
        }
        public Builder actionEntries(CustomControlTopologyPolicyDefinitionSequenceActionEntry... actionEntries) {
            return actionEntries(List.of(actionEntries));
        }
        @CustomType.Setter
        public Builder baseAction(@Nullable String baseAction) {

            this.baseAction = baseAction;
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("CustomControlTopologyPolicyDefinitionSequence", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipType(@Nullable String ipType) {

            this.ipType = ipType;
            return this;
        }
        @CustomType.Setter
        public Builder matchEntries(@Nullable List<CustomControlTopologyPolicyDefinitionSequenceMatchEntry> matchEntries) {

            this.matchEntries = matchEntries;
            return this;
        }
        public Builder matchEntries(CustomControlTopologyPolicyDefinitionSequenceMatchEntry... matchEntries) {
            return matchEntries(List.of(matchEntries));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("CustomControlTopologyPolicyDefinitionSequence", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public CustomControlTopologyPolicyDefinitionSequence build() {
            final var _resultValue = new CustomControlTopologyPolicyDefinitionSequence();
            _resultValue.actionEntries = actionEntries;
            _resultValue.baseAction = baseAction;
            _resultValue.id = id;
            _resultValue.ipType = ipType;
            _resultValue.matchEntries = matchEntries;
            _resultValue.name = name;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
