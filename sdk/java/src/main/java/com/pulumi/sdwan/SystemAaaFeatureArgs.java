// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.SystemAaaFeatureAccountingRuleArgs;
import com.pulumi.sdwan.inputs.SystemAaaFeatureAuthorizationRuleArgs;
import com.pulumi.sdwan.inputs.SystemAaaFeatureRadiusGroupArgs;
import com.pulumi.sdwan.inputs.SystemAaaFeatureTacacsGroupArgs;
import com.pulumi.sdwan.inputs.SystemAaaFeatureUserArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SystemAaaFeatureArgs extends com.pulumi.resources.ResourceArgs {

    public static final SystemAaaFeatureArgs Empty = new SystemAaaFeatureArgs();

    /**
     * Accounting configurations parameters
     *   - Default value: `false`
     * 
     */
    @Import(name="accountingGroup")
    private @Nullable Output<Boolean> accountingGroup;

    /**
     * @return Accounting configurations parameters
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> accountingGroup() {
        return Optional.ofNullable(this.accountingGroup);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="accountingGroupVariable")
    private @Nullable Output<String> accountingGroupVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> accountingGroupVariable() {
        return Optional.ofNullable(this.accountingGroupVariable);
    }

    /**
     * Configure the accounting rules
     * 
     */
    @Import(name="accountingRules")
    private @Nullable Output<List<SystemAaaFeatureAccountingRuleArgs>> accountingRules;

    /**
     * @return Configure the accounting rules
     * 
     */
    public Optional<Output<List<SystemAaaFeatureAccountingRuleArgs>>> accountingRules() {
        return Optional.ofNullable(this.accountingRules);
    }

    /**
     * Authentication configurations parameters
     *   - Default value: `false`
     * 
     */
    @Import(name="authenticationGroup")
    private @Nullable Output<Boolean> authenticationGroup;

    /**
     * @return Authentication configurations parameters
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> authenticationGroup() {
        return Optional.ofNullable(this.authenticationGroup);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="authenticationGroupVariable")
    private @Nullable Output<String> authenticationGroupVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> authenticationGroupVariable() {
        return Optional.ofNullable(this.authenticationGroupVariable);
    }

    /**
     * For configuration mode commands.
     *   - Default value: `false`
     * 
     */
    @Import(name="authorizationConfigCommands")
    private @Nullable Output<Boolean> authorizationConfigCommands;

    /**
     * @return For configuration mode commands.
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> authorizationConfigCommands() {
        return Optional.ofNullable(this.authorizationConfigCommands);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="authorizationConfigCommandsVariable")
    private @Nullable Output<String> authorizationConfigCommandsVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> authorizationConfigCommandsVariable() {
        return Optional.ofNullable(this.authorizationConfigCommandsVariable);
    }

    /**
     * For enabling console authorization
     *   - Default value: `false`
     * 
     */
    @Import(name="authorizationConsole")
    private @Nullable Output<Boolean> authorizationConsole;

    /**
     * @return For enabling console authorization
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> authorizationConsole() {
        return Optional.ofNullable(this.authorizationConsole);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="authorizationConsoleVariable")
    private @Nullable Output<String> authorizationConsoleVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> authorizationConsoleVariable() {
        return Optional.ofNullable(this.authorizationConsoleVariable);
    }

    /**
     * Configure the Authorization Rules
     * 
     */
    @Import(name="authorizationRules")
    private @Nullable Output<List<SystemAaaFeatureAuthorizationRuleArgs>> authorizationRules;

    /**
     * @return Configure the Authorization Rules
     * 
     */
    public Optional<Output<List<SystemAaaFeatureAuthorizationRuleArgs>>> authorizationRules() {
        return Optional.ofNullable(this.authorizationRules);
    }

    /**
     * The description of the Feature
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId", required=true)
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }

    /**
     * The name of the Feature
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Configure the Radius serverGroup
     * 
     */
    @Import(name="radiusGroups")
    private @Nullable Output<List<SystemAaaFeatureRadiusGroupArgs>> radiusGroups;

    /**
     * @return Configure the Radius serverGroup
     * 
     */
    public Optional<Output<List<SystemAaaFeatureRadiusGroupArgs>>> radiusGroups() {
        return Optional.ofNullable(this.radiusGroups);
    }

    /**
     * ServerGroups priority order
     * 
     */
    @Import(name="serverAuthOrders", required=true)
    private Output<List<String>> serverAuthOrders;

    /**
     * @return ServerGroups priority order
     * 
     */
    public Output<List<String>> serverAuthOrders() {
        return this.serverAuthOrders;
    }

    /**
     * Configure the TACACS serverGroup
     * 
     */
    @Import(name="tacacsGroups")
    private @Nullable Output<List<SystemAaaFeatureTacacsGroupArgs>> tacacsGroups;

    /**
     * @return Configure the TACACS serverGroup
     * 
     */
    public Optional<Output<List<SystemAaaFeatureTacacsGroupArgs>>> tacacsGroups() {
        return Optional.ofNullable(this.tacacsGroups);
    }

    /**
     * Create local login account
     * 
     */
    @Import(name="users")
    private @Nullable Output<List<SystemAaaFeatureUserArgs>> users;

    /**
     * @return Create local login account
     * 
     */
    public Optional<Output<List<SystemAaaFeatureUserArgs>>> users() {
        return Optional.ofNullable(this.users);
    }

    private SystemAaaFeatureArgs() {}

    private SystemAaaFeatureArgs(SystemAaaFeatureArgs $) {
        this.accountingGroup = $.accountingGroup;
        this.accountingGroupVariable = $.accountingGroupVariable;
        this.accountingRules = $.accountingRules;
        this.authenticationGroup = $.authenticationGroup;
        this.authenticationGroupVariable = $.authenticationGroupVariable;
        this.authorizationConfigCommands = $.authorizationConfigCommands;
        this.authorizationConfigCommandsVariable = $.authorizationConfigCommandsVariable;
        this.authorizationConsole = $.authorizationConsole;
        this.authorizationConsoleVariable = $.authorizationConsoleVariable;
        this.authorizationRules = $.authorizationRules;
        this.description = $.description;
        this.featureProfileId = $.featureProfileId;
        this.name = $.name;
        this.radiusGroups = $.radiusGroups;
        this.serverAuthOrders = $.serverAuthOrders;
        this.tacacsGroups = $.tacacsGroups;
        this.users = $.users;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SystemAaaFeatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SystemAaaFeatureArgs $;

        public Builder() {
            $ = new SystemAaaFeatureArgs();
        }

        public Builder(SystemAaaFeatureArgs defaults) {
            $ = new SystemAaaFeatureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountingGroup Accounting configurations parameters
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder accountingGroup(@Nullable Output<Boolean> accountingGroup) {
            $.accountingGroup = accountingGroup;
            return this;
        }

        /**
         * @param accountingGroup Accounting configurations parameters
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder accountingGroup(Boolean accountingGroup) {
            return accountingGroup(Output.of(accountingGroup));
        }

        /**
         * @param accountingGroupVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder accountingGroupVariable(@Nullable Output<String> accountingGroupVariable) {
            $.accountingGroupVariable = accountingGroupVariable;
            return this;
        }

        /**
         * @param accountingGroupVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder accountingGroupVariable(String accountingGroupVariable) {
            return accountingGroupVariable(Output.of(accountingGroupVariable));
        }

        /**
         * @param accountingRules Configure the accounting rules
         * 
         * @return builder
         * 
         */
        public Builder accountingRules(@Nullable Output<List<SystemAaaFeatureAccountingRuleArgs>> accountingRules) {
            $.accountingRules = accountingRules;
            return this;
        }

        /**
         * @param accountingRules Configure the accounting rules
         * 
         * @return builder
         * 
         */
        public Builder accountingRules(List<SystemAaaFeatureAccountingRuleArgs> accountingRules) {
            return accountingRules(Output.of(accountingRules));
        }

        /**
         * @param accountingRules Configure the accounting rules
         * 
         * @return builder
         * 
         */
        public Builder accountingRules(SystemAaaFeatureAccountingRuleArgs... accountingRules) {
            return accountingRules(List.of(accountingRules));
        }

        /**
         * @param authenticationGroup Authentication configurations parameters
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder authenticationGroup(@Nullable Output<Boolean> authenticationGroup) {
            $.authenticationGroup = authenticationGroup;
            return this;
        }

        /**
         * @param authenticationGroup Authentication configurations parameters
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder authenticationGroup(Boolean authenticationGroup) {
            return authenticationGroup(Output.of(authenticationGroup));
        }

        /**
         * @param authenticationGroupVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder authenticationGroupVariable(@Nullable Output<String> authenticationGroupVariable) {
            $.authenticationGroupVariable = authenticationGroupVariable;
            return this;
        }

        /**
         * @param authenticationGroupVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder authenticationGroupVariable(String authenticationGroupVariable) {
            return authenticationGroupVariable(Output.of(authenticationGroupVariable));
        }

        /**
         * @param authorizationConfigCommands For configuration mode commands.
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder authorizationConfigCommands(@Nullable Output<Boolean> authorizationConfigCommands) {
            $.authorizationConfigCommands = authorizationConfigCommands;
            return this;
        }

        /**
         * @param authorizationConfigCommands For configuration mode commands.
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder authorizationConfigCommands(Boolean authorizationConfigCommands) {
            return authorizationConfigCommands(Output.of(authorizationConfigCommands));
        }

        /**
         * @param authorizationConfigCommandsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder authorizationConfigCommandsVariable(@Nullable Output<String> authorizationConfigCommandsVariable) {
            $.authorizationConfigCommandsVariable = authorizationConfigCommandsVariable;
            return this;
        }

        /**
         * @param authorizationConfigCommandsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder authorizationConfigCommandsVariable(String authorizationConfigCommandsVariable) {
            return authorizationConfigCommandsVariable(Output.of(authorizationConfigCommandsVariable));
        }

        /**
         * @param authorizationConsole For enabling console authorization
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder authorizationConsole(@Nullable Output<Boolean> authorizationConsole) {
            $.authorizationConsole = authorizationConsole;
            return this;
        }

        /**
         * @param authorizationConsole For enabling console authorization
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder authorizationConsole(Boolean authorizationConsole) {
            return authorizationConsole(Output.of(authorizationConsole));
        }

        /**
         * @param authorizationConsoleVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder authorizationConsoleVariable(@Nullable Output<String> authorizationConsoleVariable) {
            $.authorizationConsoleVariable = authorizationConsoleVariable;
            return this;
        }

        /**
         * @param authorizationConsoleVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder authorizationConsoleVariable(String authorizationConsoleVariable) {
            return authorizationConsoleVariable(Output.of(authorizationConsoleVariable));
        }

        /**
         * @param authorizationRules Configure the Authorization Rules
         * 
         * @return builder
         * 
         */
        public Builder authorizationRules(@Nullable Output<List<SystemAaaFeatureAuthorizationRuleArgs>> authorizationRules) {
            $.authorizationRules = authorizationRules;
            return this;
        }

        /**
         * @param authorizationRules Configure the Authorization Rules
         * 
         * @return builder
         * 
         */
        public Builder authorizationRules(List<SystemAaaFeatureAuthorizationRuleArgs> authorizationRules) {
            return authorizationRules(Output.of(authorizationRules));
        }

        /**
         * @param authorizationRules Configure the Authorization Rules
         * 
         * @return builder
         * 
         */
        public Builder authorizationRules(SystemAaaFeatureAuthorizationRuleArgs... authorizationRules) {
            return authorizationRules(List.of(authorizationRules));
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param radiusGroups Configure the Radius serverGroup
         * 
         * @return builder
         * 
         */
        public Builder radiusGroups(@Nullable Output<List<SystemAaaFeatureRadiusGroupArgs>> radiusGroups) {
            $.radiusGroups = radiusGroups;
            return this;
        }

        /**
         * @param radiusGroups Configure the Radius serverGroup
         * 
         * @return builder
         * 
         */
        public Builder radiusGroups(List<SystemAaaFeatureRadiusGroupArgs> radiusGroups) {
            return radiusGroups(Output.of(radiusGroups));
        }

        /**
         * @param radiusGroups Configure the Radius serverGroup
         * 
         * @return builder
         * 
         */
        public Builder radiusGroups(SystemAaaFeatureRadiusGroupArgs... radiusGroups) {
            return radiusGroups(List.of(radiusGroups));
        }

        /**
         * @param serverAuthOrders ServerGroups priority order
         * 
         * @return builder
         * 
         */
        public Builder serverAuthOrders(Output<List<String>> serverAuthOrders) {
            $.serverAuthOrders = serverAuthOrders;
            return this;
        }

        /**
         * @param serverAuthOrders ServerGroups priority order
         * 
         * @return builder
         * 
         */
        public Builder serverAuthOrders(List<String> serverAuthOrders) {
            return serverAuthOrders(Output.of(serverAuthOrders));
        }

        /**
         * @param serverAuthOrders ServerGroups priority order
         * 
         * @return builder
         * 
         */
        public Builder serverAuthOrders(String... serverAuthOrders) {
            return serverAuthOrders(List.of(serverAuthOrders));
        }

        /**
         * @param tacacsGroups Configure the TACACS serverGroup
         * 
         * @return builder
         * 
         */
        public Builder tacacsGroups(@Nullable Output<List<SystemAaaFeatureTacacsGroupArgs>> tacacsGroups) {
            $.tacacsGroups = tacacsGroups;
            return this;
        }

        /**
         * @param tacacsGroups Configure the TACACS serverGroup
         * 
         * @return builder
         * 
         */
        public Builder tacacsGroups(List<SystemAaaFeatureTacacsGroupArgs> tacacsGroups) {
            return tacacsGroups(Output.of(tacacsGroups));
        }

        /**
         * @param tacacsGroups Configure the TACACS serverGroup
         * 
         * @return builder
         * 
         */
        public Builder tacacsGroups(SystemAaaFeatureTacacsGroupArgs... tacacsGroups) {
            return tacacsGroups(List.of(tacacsGroups));
        }

        /**
         * @param users Create local login account
         * 
         * @return builder
         * 
         */
        public Builder users(@Nullable Output<List<SystemAaaFeatureUserArgs>> users) {
            $.users = users;
            return this;
        }

        /**
         * @param users Create local login account
         * 
         * @return builder
         * 
         */
        public Builder users(List<SystemAaaFeatureUserArgs> users) {
            return users(Output.of(users));
        }

        /**
         * @param users Create local login account
         * 
         * @return builder
         * 
         */
        public Builder users(SystemAaaFeatureUserArgs... users) {
            return users(List.of(users));
        }

        public SystemAaaFeatureArgs build() {
            if ($.featureProfileId == null) {
                throw new MissingRequiredPropertyException("SystemAaaFeatureArgs", "featureProfileId");
            }
            if ($.serverAuthOrders == null) {
                throw new MissingRequiredPropertyException("SystemAaaFeatureArgs", "serverAuthOrders");
            }
            return $;
        }
    }

}
