// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HubAndSpokeTopologyPolicyDefinitionTopologySpokeHubArgs extends com.pulumi.resources.ResourceArgs {

    public static final HubAndSpokeTopologyPolicyDefinitionTopologySpokeHubArgs Empty = new HubAndSpokeTopologyPolicyDefinitionTopologySpokeHubArgs();

    /**
     * List of IPv4 prefix list IDs
     * 
     */
    @Import(name="ipv4PrefixListIds")
    private @Nullable Output<List<String>> ipv4PrefixListIds;

    /**
     * @return List of IPv4 prefix list IDs
     * 
     */
    public Optional<Output<List<String>>> ipv4PrefixListIds() {
        return Optional.ofNullable(this.ipv4PrefixListIds);
    }

    /**
     * List of IPv6 prefix list IDs
     * 
     */
    @Import(name="ipv6PrefixListIds")
    private @Nullable Output<List<String>> ipv6PrefixListIds;

    /**
     * @return List of IPv6 prefix list IDs
     * 
     */
    public Optional<Output<List<String>>> ipv6PrefixListIds() {
        return Optional.ofNullable(this.ipv6PrefixListIds);
    }

    /**
     * Preference, multiple of 10 (for example 70, 80, 90, 100). The higher the value the higher the priority of the associated hub (required when `all_hubs_are_equal` is &#39;false&#39;)
     * 
     */
    @Import(name="preference")
    private @Nullable Output<String> preference;

    /**
     * @return Preference, multiple of 10 (for example 70, 80, 90, 100). The higher the value the higher the priority of the associated hub (required when `all_hubs_are_equal` is &#39;false&#39;)
     * 
     */
    public Optional<Output<String>> preference() {
        return Optional.ofNullable(this.preference);
    }

    /**
     * Site list ID
     * 
     */
    @Import(name="siteListId")
    private @Nullable Output<String> siteListId;

    /**
     * @return Site list ID
     * 
     */
    public Optional<Output<String>> siteListId() {
        return Optional.ofNullable(this.siteListId);
    }

    /**
     * Site list version
     * 
     */
    @Import(name="siteListVersion")
    private @Nullable Output<Integer> siteListVersion;

    /**
     * @return Site list version
     * 
     */
    public Optional<Output<Integer>> siteListVersion() {
        return Optional.ofNullable(this.siteListVersion);
    }

    private HubAndSpokeTopologyPolicyDefinitionTopologySpokeHubArgs() {}

    private HubAndSpokeTopologyPolicyDefinitionTopologySpokeHubArgs(HubAndSpokeTopologyPolicyDefinitionTopologySpokeHubArgs $) {
        this.ipv4PrefixListIds = $.ipv4PrefixListIds;
        this.ipv6PrefixListIds = $.ipv6PrefixListIds;
        this.preference = $.preference;
        this.siteListId = $.siteListId;
        this.siteListVersion = $.siteListVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HubAndSpokeTopologyPolicyDefinitionTopologySpokeHubArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HubAndSpokeTopologyPolicyDefinitionTopologySpokeHubArgs $;

        public Builder() {
            $ = new HubAndSpokeTopologyPolicyDefinitionTopologySpokeHubArgs();
        }

        public Builder(HubAndSpokeTopologyPolicyDefinitionTopologySpokeHubArgs defaults) {
            $ = new HubAndSpokeTopologyPolicyDefinitionTopologySpokeHubArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipv4PrefixListIds List of IPv4 prefix list IDs
         * 
         * @return builder
         * 
         */
        public Builder ipv4PrefixListIds(@Nullable Output<List<String>> ipv4PrefixListIds) {
            $.ipv4PrefixListIds = ipv4PrefixListIds;
            return this;
        }

        /**
         * @param ipv4PrefixListIds List of IPv4 prefix list IDs
         * 
         * @return builder
         * 
         */
        public Builder ipv4PrefixListIds(List<String> ipv4PrefixListIds) {
            return ipv4PrefixListIds(Output.of(ipv4PrefixListIds));
        }

        /**
         * @param ipv4PrefixListIds List of IPv4 prefix list IDs
         * 
         * @return builder
         * 
         */
        public Builder ipv4PrefixListIds(String... ipv4PrefixListIds) {
            return ipv4PrefixListIds(List.of(ipv4PrefixListIds));
        }

        /**
         * @param ipv6PrefixListIds List of IPv6 prefix list IDs
         * 
         * @return builder
         * 
         */
        public Builder ipv6PrefixListIds(@Nullable Output<List<String>> ipv6PrefixListIds) {
            $.ipv6PrefixListIds = ipv6PrefixListIds;
            return this;
        }

        /**
         * @param ipv6PrefixListIds List of IPv6 prefix list IDs
         * 
         * @return builder
         * 
         */
        public Builder ipv6PrefixListIds(List<String> ipv6PrefixListIds) {
            return ipv6PrefixListIds(Output.of(ipv6PrefixListIds));
        }

        /**
         * @param ipv6PrefixListIds List of IPv6 prefix list IDs
         * 
         * @return builder
         * 
         */
        public Builder ipv6PrefixListIds(String... ipv6PrefixListIds) {
            return ipv6PrefixListIds(List.of(ipv6PrefixListIds));
        }

        /**
         * @param preference Preference, multiple of 10 (for example 70, 80, 90, 100). The higher the value the higher the priority of the associated hub (required when `all_hubs_are_equal` is &#39;false&#39;)
         * 
         * @return builder
         * 
         */
        public Builder preference(@Nullable Output<String> preference) {
            $.preference = preference;
            return this;
        }

        /**
         * @param preference Preference, multiple of 10 (for example 70, 80, 90, 100). The higher the value the higher the priority of the associated hub (required when `all_hubs_are_equal` is &#39;false&#39;)
         * 
         * @return builder
         * 
         */
        public Builder preference(String preference) {
            return preference(Output.of(preference));
        }

        /**
         * @param siteListId Site list ID
         * 
         * @return builder
         * 
         */
        public Builder siteListId(@Nullable Output<String> siteListId) {
            $.siteListId = siteListId;
            return this;
        }

        /**
         * @param siteListId Site list ID
         * 
         * @return builder
         * 
         */
        public Builder siteListId(String siteListId) {
            return siteListId(Output.of(siteListId));
        }

        /**
         * @param siteListVersion Site list version
         * 
         * @return builder
         * 
         */
        public Builder siteListVersion(@Nullable Output<Integer> siteListVersion) {
            $.siteListVersion = siteListVersion;
            return this;
        }

        /**
         * @param siteListVersion Site list version
         * 
         * @return builder
         * 
         */
        public Builder siteListVersion(Integer siteListVersion) {
            return siteListVersion(Output.of(siteListVersion));
        }

        public HubAndSpokeTopologyPolicyDefinitionTopologySpokeHubArgs build() {
            return $;
        }
    }

}
