// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6RoutePrefix;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6Route {
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private Boolean optional;
    private List<GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6RoutePrefix> prefixes;
    /**
     * @return Advertised routes protocol
     * 
     */
    private String protocol;
    /**
     * @return Variable name
     * 
     */
    private String protocolSubTypeVariable;
    private List<String> protocolSubTypes;
    /**
     * @return Variable name
     * 
     */
    private String protocolVariable;
    private String routePolicy;
    /**
     * @return Variable name
     * 
     */
    private String routePolicyVariable;

    private GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6Route() {}
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Boolean optional() {
        return this.optional;
    }
    public List<GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6RoutePrefix> prefixes() {
        return this.prefixes;
    }
    /**
     * @return Advertised routes protocol
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return Variable name
     * 
     */
    public String protocolSubTypeVariable() {
        return this.protocolSubTypeVariable;
    }
    public List<String> protocolSubTypes() {
        return this.protocolSubTypes;
    }
    /**
     * @return Variable name
     * 
     */
    public String protocolVariable() {
        return this.protocolVariable;
    }
    public String routePolicy() {
        return this.routePolicy;
    }
    /**
     * @return Variable name
     * 
     */
    public String routePolicyVariable() {
        return this.routePolicyVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6Route defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean optional;
        private List<GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6RoutePrefix> prefixes;
        private String protocol;
        private String protocolSubTypeVariable;
        private List<String> protocolSubTypes;
        private String protocolVariable;
        private String routePolicy;
        private String routePolicyVariable;
        public Builder() {}
        public Builder(GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6Route defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.optional = defaults.optional;
    	      this.prefixes = defaults.prefixes;
    	      this.protocol = defaults.protocol;
    	      this.protocolSubTypeVariable = defaults.protocolSubTypeVariable;
    	      this.protocolSubTypes = defaults.protocolSubTypes;
    	      this.protocolVariable = defaults.protocolVariable;
    	      this.routePolicy = defaults.routePolicy;
    	      this.routePolicyVariable = defaults.routePolicyVariable;
        }

        @CustomType.Setter
        public Builder optional(Boolean optional) {
            if (optional == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6Route", "optional");
            }
            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder prefixes(List<GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6RoutePrefix> prefixes) {
            if (prefixes == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6Route", "prefixes");
            }
            this.prefixes = prefixes;
            return this;
        }
        public Builder prefixes(GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6RoutePrefix... prefixes) {
            return prefixes(List.of(prefixes));
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6Route", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder protocolSubTypeVariable(String protocolSubTypeVariable) {
            if (protocolSubTypeVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6Route", "protocolSubTypeVariable");
            }
            this.protocolSubTypeVariable = protocolSubTypeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder protocolSubTypes(List<String> protocolSubTypes) {
            if (protocolSubTypes == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6Route", "protocolSubTypes");
            }
            this.protocolSubTypes = protocolSubTypes;
            return this;
        }
        public Builder protocolSubTypes(String... protocolSubTypes) {
            return protocolSubTypes(List.of(protocolSubTypes));
        }
        @CustomType.Setter
        public Builder protocolVariable(String protocolVariable) {
            if (protocolVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6Route", "protocolVariable");
            }
            this.protocolVariable = protocolVariable;
            return this;
        }
        @CustomType.Setter
        public Builder routePolicy(String routePolicy) {
            if (routePolicy == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6Route", "routePolicy");
            }
            this.routePolicy = routePolicy;
            return this;
        }
        @CustomType.Setter
        public Builder routePolicyVariable(String routePolicyVariable) {
            if (routePolicyVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6Route", "routePolicyVariable");
            }
            this.routePolicyVariable = routePolicyVariable;
            return this;
        }
        public GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6Route build() {
            final var _resultValue = new GetCiscoVpnFeatureTemplateOmpAdvertiseIpv6Route();
            _resultValue.optional = optional;
            _resultValue.prefixes = prefixes;
            _resultValue.protocol = protocol;
            _resultValue.protocolSubTypeVariable = protocolSubTypeVariable;
            _resultValue.protocolSubTypes = protocolSubTypes;
            _resultValue.protocolVariable = protocolVariable;
            _resultValue.routePolicy = routePolicy;
            _resultValue.routePolicyVariable = routePolicyVariable;
            return _resultValue;
        }
    }
}
