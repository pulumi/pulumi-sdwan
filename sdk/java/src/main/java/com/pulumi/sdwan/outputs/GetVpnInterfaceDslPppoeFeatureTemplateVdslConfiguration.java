// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration {
    /**
     * @return Set module slot/subslot/port number
     * 
     */
    private String controllerVdslSlot;
    /**
     * @return Variable name
     * 
     */
    private String controllerVdslSlotVariable;
    /**
     * @return Set VDSL operating mode to adsl1
     * 
     */
    private Boolean modeAdsl1;
    /**
     * @return Set VDSL operating mode to adsl2
     * 
     */
    private Boolean modeAdsl2;
    /**
     * @return Set VDSL operating mode to adsl2plus
     * 
     */
    private Boolean modeAdsl2plus;
    /**
     * @return Set VDSL operating mode to ansi
     * 
     */
    private Boolean modeAnsi;
    /**
     * @return Set VDSL operating mode to vdsl2
     * 
     */
    private Boolean modeVdsl2;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private Boolean optional;
    /**
     * @return Seamless rate adaption
     * 
     */
    private Boolean sra;
    /**
     * @return Set module slot/subslot/port number
     * 
     */
    private String vdslModemConfiguration;
    /**
     * @return Variable name
     * 
     */
    private String vdslModemConfigurationVariable;

    private GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration() {}
    /**
     * @return Set module slot/subslot/port number
     * 
     */
    public String controllerVdslSlot() {
        return this.controllerVdslSlot;
    }
    /**
     * @return Variable name
     * 
     */
    public String controllerVdslSlotVariable() {
        return this.controllerVdslSlotVariable;
    }
    /**
     * @return Set VDSL operating mode to adsl1
     * 
     */
    public Boolean modeAdsl1() {
        return this.modeAdsl1;
    }
    /**
     * @return Set VDSL operating mode to adsl2
     * 
     */
    public Boolean modeAdsl2() {
        return this.modeAdsl2;
    }
    /**
     * @return Set VDSL operating mode to adsl2plus
     * 
     */
    public Boolean modeAdsl2plus() {
        return this.modeAdsl2plus;
    }
    /**
     * @return Set VDSL operating mode to ansi
     * 
     */
    public Boolean modeAnsi() {
        return this.modeAnsi;
    }
    /**
     * @return Set VDSL operating mode to vdsl2
     * 
     */
    public Boolean modeVdsl2() {
        return this.modeVdsl2;
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Boolean optional() {
        return this.optional;
    }
    /**
     * @return Seamless rate adaption
     * 
     */
    public Boolean sra() {
        return this.sra;
    }
    /**
     * @return Set module slot/subslot/port number
     * 
     */
    public String vdslModemConfiguration() {
        return this.vdslModemConfiguration;
    }
    /**
     * @return Variable name
     * 
     */
    public String vdslModemConfigurationVariable() {
        return this.vdslModemConfigurationVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String controllerVdslSlot;
        private String controllerVdslSlotVariable;
        private Boolean modeAdsl1;
        private Boolean modeAdsl2;
        private Boolean modeAdsl2plus;
        private Boolean modeAnsi;
        private Boolean modeVdsl2;
        private Boolean optional;
        private Boolean sra;
        private String vdslModemConfiguration;
        private String vdslModemConfigurationVariable;
        public Builder() {}
        public Builder(GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.controllerVdslSlot = defaults.controllerVdslSlot;
    	      this.controllerVdslSlotVariable = defaults.controllerVdslSlotVariable;
    	      this.modeAdsl1 = defaults.modeAdsl1;
    	      this.modeAdsl2 = defaults.modeAdsl2;
    	      this.modeAdsl2plus = defaults.modeAdsl2plus;
    	      this.modeAnsi = defaults.modeAnsi;
    	      this.modeVdsl2 = defaults.modeVdsl2;
    	      this.optional = defaults.optional;
    	      this.sra = defaults.sra;
    	      this.vdslModemConfiguration = defaults.vdslModemConfiguration;
    	      this.vdslModemConfigurationVariable = defaults.vdslModemConfigurationVariable;
        }

        @CustomType.Setter
        public Builder controllerVdslSlot(String controllerVdslSlot) {
            if (controllerVdslSlot == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration", "controllerVdslSlot");
            }
            this.controllerVdslSlot = controllerVdslSlot;
            return this;
        }
        @CustomType.Setter
        public Builder controllerVdslSlotVariable(String controllerVdslSlotVariable) {
            if (controllerVdslSlotVariable == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration", "controllerVdslSlotVariable");
            }
            this.controllerVdslSlotVariable = controllerVdslSlotVariable;
            return this;
        }
        @CustomType.Setter
        public Builder modeAdsl1(Boolean modeAdsl1) {
            if (modeAdsl1 == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration", "modeAdsl1");
            }
            this.modeAdsl1 = modeAdsl1;
            return this;
        }
        @CustomType.Setter
        public Builder modeAdsl2(Boolean modeAdsl2) {
            if (modeAdsl2 == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration", "modeAdsl2");
            }
            this.modeAdsl2 = modeAdsl2;
            return this;
        }
        @CustomType.Setter
        public Builder modeAdsl2plus(Boolean modeAdsl2plus) {
            if (modeAdsl2plus == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration", "modeAdsl2plus");
            }
            this.modeAdsl2plus = modeAdsl2plus;
            return this;
        }
        @CustomType.Setter
        public Builder modeAnsi(Boolean modeAnsi) {
            if (modeAnsi == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration", "modeAnsi");
            }
            this.modeAnsi = modeAnsi;
            return this;
        }
        @CustomType.Setter
        public Builder modeVdsl2(Boolean modeVdsl2) {
            if (modeVdsl2 == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration", "modeVdsl2");
            }
            this.modeVdsl2 = modeVdsl2;
            return this;
        }
        @CustomType.Setter
        public Builder optional(Boolean optional) {
            if (optional == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration", "optional");
            }
            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder sra(Boolean sra) {
            if (sra == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration", "sra");
            }
            this.sra = sra;
            return this;
        }
        @CustomType.Setter
        public Builder vdslModemConfiguration(String vdslModemConfiguration) {
            if (vdslModemConfiguration == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration", "vdslModemConfiguration");
            }
            this.vdslModemConfiguration = vdslModemConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder vdslModemConfigurationVariable(String vdslModemConfigurationVariable) {
            if (vdslModemConfigurationVariable == null) {
              throw new MissingRequiredPropertyException("GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration", "vdslModemConfigurationVariable");
            }
            this.vdslModemConfigurationVariable = vdslModemConfigurationVariable;
            return this;
        }
        public GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration build() {
            final var _resultValue = new GetVpnInterfaceDslPppoeFeatureTemplateVdslConfiguration();
            _resultValue.controllerVdslSlot = controllerVdslSlot;
            _resultValue.controllerVdslSlotVariable = controllerVdslSlotVariable;
            _resultValue.modeAdsl1 = modeAdsl1;
            _resultValue.modeAdsl2 = modeAdsl2;
            _resultValue.modeAdsl2plus = modeAdsl2plus;
            _resultValue.modeAnsi = modeAnsi;
            _resultValue.modeVdsl2 = modeVdsl2;
            _resultValue.optional = optional;
            _resultValue.sra = sra;
            _resultValue.vdslModemConfiguration = vdslModemConfiguration;
            _resultValue.vdslModemConfigurationVariable = vdslModemConfigurationVariable;
            return _resultValue;
        }
    }
}
