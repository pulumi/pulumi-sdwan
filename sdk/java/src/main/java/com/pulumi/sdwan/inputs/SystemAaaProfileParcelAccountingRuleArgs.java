// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SystemAaaProfileParcelAccountingRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final SystemAaaProfileParcelAccountingRuleArgs Empty = new SystemAaaProfileParcelAccountingRuleArgs();

    /**
     * Use Server-group
     * 
     */
    @Import(name="groups")
    private @Nullable Output<List<String>> groups;

    /**
     * @return Use Server-group
     * 
     */
    public Optional<Output<List<String>>> groups() {
        return Optional.ofNullable(this.groups);
    }

    /**
     * Privilege level when method is commands
     *   - Choices: `1`, `15`
     * 
     */
    @Import(name="level")
    private @Nullable Output<String> level;

    /**
     * @return Privilege level when method is commands
     *   - Choices: `1`, `15`
     * 
     */
    public Optional<Output<String>> level() {
        return Optional.ofNullable(this.level);
    }

    /**
     * Configure Accounting Method
     *   - Choices: `commands`, `exec`, `network`, `system`
     * 
     */
    @Import(name="method")
    private @Nullable Output<String> method;

    /**
     * @return Configure Accounting Method
     *   - Choices: `commands`, `exec`, `network`, `system`
     * 
     */
    public Optional<Output<String>> method() {
        return Optional.ofNullable(this.method);
    }

    /**
     * Configure Accounting Rule ID
     * 
     */
    @Import(name="ruleId")
    private @Nullable Output<String> ruleId;

    /**
     * @return Configure Accounting Rule ID
     * 
     */
    public Optional<Output<String>> ruleId() {
        return Optional.ofNullable(this.ruleId);
    }

    /**
     * Record start and stop without waiting
     *   - Default value: `true`
     * 
     */
    @Import(name="startStop")
    private @Nullable Output<Boolean> startStop;

    /**
     * @return Record start and stop without waiting
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> startStop() {
        return Optional.ofNullable(this.startStop);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="startStopVariable")
    private @Nullable Output<String> startStopVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> startStopVariable() {
        return Optional.ofNullable(this.startStopVariable);
    }

    private SystemAaaProfileParcelAccountingRuleArgs() {}

    private SystemAaaProfileParcelAccountingRuleArgs(SystemAaaProfileParcelAccountingRuleArgs $) {
        this.groups = $.groups;
        this.level = $.level;
        this.method = $.method;
        this.ruleId = $.ruleId;
        this.startStop = $.startStop;
        this.startStopVariable = $.startStopVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SystemAaaProfileParcelAccountingRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SystemAaaProfileParcelAccountingRuleArgs $;

        public Builder() {
            $ = new SystemAaaProfileParcelAccountingRuleArgs();
        }

        public Builder(SystemAaaProfileParcelAccountingRuleArgs defaults) {
            $ = new SystemAaaProfileParcelAccountingRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groups Use Server-group
         * 
         * @return builder
         * 
         */
        public Builder groups(@Nullable Output<List<String>> groups) {
            $.groups = groups;
            return this;
        }

        /**
         * @param groups Use Server-group
         * 
         * @return builder
         * 
         */
        public Builder groups(List<String> groups) {
            return groups(Output.of(groups));
        }

        /**
         * @param groups Use Server-group
         * 
         * @return builder
         * 
         */
        public Builder groups(String... groups) {
            return groups(List.of(groups));
        }

        /**
         * @param level Privilege level when method is commands
         *   - Choices: `1`, `15`
         * 
         * @return builder
         * 
         */
        public Builder level(@Nullable Output<String> level) {
            $.level = level;
            return this;
        }

        /**
         * @param level Privilege level when method is commands
         *   - Choices: `1`, `15`
         * 
         * @return builder
         * 
         */
        public Builder level(String level) {
            return level(Output.of(level));
        }

        /**
         * @param method Configure Accounting Method
         *   - Choices: `commands`, `exec`, `network`, `system`
         * 
         * @return builder
         * 
         */
        public Builder method(@Nullable Output<String> method) {
            $.method = method;
            return this;
        }

        /**
         * @param method Configure Accounting Method
         *   - Choices: `commands`, `exec`, `network`, `system`
         * 
         * @return builder
         * 
         */
        public Builder method(String method) {
            return method(Output.of(method));
        }

        /**
         * @param ruleId Configure Accounting Rule ID
         * 
         * @return builder
         * 
         */
        public Builder ruleId(@Nullable Output<String> ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        /**
         * @param ruleId Configure Accounting Rule ID
         * 
         * @return builder
         * 
         */
        public Builder ruleId(String ruleId) {
            return ruleId(Output.of(ruleId));
        }

        /**
         * @param startStop Record start and stop without waiting
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder startStop(@Nullable Output<Boolean> startStop) {
            $.startStop = startStop;
            return this;
        }

        /**
         * @param startStop Record start and stop without waiting
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder startStop(Boolean startStop) {
            return startStop(Output.of(startStop));
        }

        /**
         * @param startStopVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder startStopVariable(@Nullable Output<String> startStopVariable) {
            $.startStopVariable = startStopVariable;
            return this;
        }

        /**
         * @param startStopVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder startStopVariable(String startStopVariable) {
            return startStopVariable(Output.of(startStopVariable));
        }

        public SystemAaaProfileParcelAccountingRuleArgs build() {
            return $;
        }
    }

}
