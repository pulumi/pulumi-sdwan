// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetServiceRoutingEigrpFeatureInterface;
import com.pulumi.sdwan.outputs.GetServiceRoutingEigrpFeatureMd5Key;
import com.pulumi.sdwan.outputs.GetServiceRoutingEigrpFeatureNetwork;
import com.pulumi.sdwan.outputs.GetServiceRoutingEigrpFeatureRedistribute;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceRoutingEigrpFeatureResult {
    /**
     * @return Set EIGRP router authentication type
     * 
     */
    private String authenticationType;
    /**
     * @return Variable name
     * 
     */
    private String authenticationTypeVariable;
    /**
     * @return Set autonomous system ID \n\n
     * 
     */
    private Integer autonomousSystemId;
    /**
     * @return Variable name
     * 
     */
    private String autonomousSystemIdVariable;
    /**
     * @return The description of the Feature
     * 
     */
    private String description;
    /**
     * @return Feature Profile ID
     * 
     */
    private String featureProfileId;
    /**
     * @return Selective route download
     * 
     */
    private Boolean filter;
    /**
     * @return Variable name
     * 
     */
    private String filterVariable;
    /**
     * @return Set EIGRP hello interval
     * 
     */
    private Integer helloInterval;
    /**
     * @return Variable name
     * 
     */
    private String helloIntervalVariable;
    /**
     * @return Set hmac-sha-256 authentication key
     * 
     */
    private String hmacAuthenticationKey;
    /**
     * @return Variable name
     * 
     */
    private String hmacAuthenticationKeyVariable;
    /**
     * @return Set EIGRP hold time
     * 
     */
    private Integer holdTime;
    /**
     * @return Variable name
     * 
     */
    private String holdTimeVariable;
    /**
     * @return The id of the Feature
     * 
     */
    private String id;
    /**
     * @return Configure IPv4 Static Routes
     * 
     */
    private List<GetServiceRoutingEigrpFeatureInterface> interfaces;
    /**
     * @return Set keychain details
     * 
     */
    private List<GetServiceRoutingEigrpFeatureMd5Key> md5Keys;
    /**
     * @return The name of the Feature
     * 
     */
    private String name;
    /**
     * @return Configure the networks for EIGRP to advertise
     * 
     */
    private List<GetServiceRoutingEigrpFeatureNetwork> networks;
    /**
     * @return Redistribute routes into EIGRP
     * 
     */
    private List<GetServiceRoutingEigrpFeatureRedistribute> redistributes;
    private String routePolicyId;
    /**
     * @return The version of the Feature
     * 
     */
    private Integer version;

    private GetServiceRoutingEigrpFeatureResult() {}
    /**
     * @return Set EIGRP router authentication type
     * 
     */
    public String authenticationType() {
        return this.authenticationType;
    }
    /**
     * @return Variable name
     * 
     */
    public String authenticationTypeVariable() {
        return this.authenticationTypeVariable;
    }
    /**
     * @return Set autonomous system ID \n\n
     * 
     */
    public Integer autonomousSystemId() {
        return this.autonomousSystemId;
    }
    /**
     * @return Variable name
     * 
     */
    public String autonomousSystemIdVariable() {
        return this.autonomousSystemIdVariable;
    }
    /**
     * @return The description of the Feature
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Feature Profile ID
     * 
     */
    public String featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * @return Selective route download
     * 
     */
    public Boolean filter() {
        return this.filter;
    }
    /**
     * @return Variable name
     * 
     */
    public String filterVariable() {
        return this.filterVariable;
    }
    /**
     * @return Set EIGRP hello interval
     * 
     */
    public Integer helloInterval() {
        return this.helloInterval;
    }
    /**
     * @return Variable name
     * 
     */
    public String helloIntervalVariable() {
        return this.helloIntervalVariable;
    }
    /**
     * @return Set hmac-sha-256 authentication key
     * 
     */
    public String hmacAuthenticationKey() {
        return this.hmacAuthenticationKey;
    }
    /**
     * @return Variable name
     * 
     */
    public String hmacAuthenticationKeyVariable() {
        return this.hmacAuthenticationKeyVariable;
    }
    /**
     * @return Set EIGRP hold time
     * 
     */
    public Integer holdTime() {
        return this.holdTime;
    }
    /**
     * @return Variable name
     * 
     */
    public String holdTimeVariable() {
        return this.holdTimeVariable;
    }
    /**
     * @return The id of the Feature
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Configure IPv4 Static Routes
     * 
     */
    public List<GetServiceRoutingEigrpFeatureInterface> interfaces() {
        return this.interfaces;
    }
    /**
     * @return Set keychain details
     * 
     */
    public List<GetServiceRoutingEigrpFeatureMd5Key> md5Keys() {
        return this.md5Keys;
    }
    /**
     * @return The name of the Feature
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Configure the networks for EIGRP to advertise
     * 
     */
    public List<GetServiceRoutingEigrpFeatureNetwork> networks() {
        return this.networks;
    }
    /**
     * @return Redistribute routes into EIGRP
     * 
     */
    public List<GetServiceRoutingEigrpFeatureRedistribute> redistributes() {
        return this.redistributes;
    }
    public String routePolicyId() {
        return this.routePolicyId;
    }
    /**
     * @return The version of the Feature
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceRoutingEigrpFeatureResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authenticationType;
        private String authenticationTypeVariable;
        private Integer autonomousSystemId;
        private String autonomousSystemIdVariable;
        private String description;
        private String featureProfileId;
        private Boolean filter;
        private String filterVariable;
        private Integer helloInterval;
        private String helloIntervalVariable;
        private String hmacAuthenticationKey;
        private String hmacAuthenticationKeyVariable;
        private Integer holdTime;
        private String holdTimeVariable;
        private String id;
        private List<GetServiceRoutingEigrpFeatureInterface> interfaces;
        private List<GetServiceRoutingEigrpFeatureMd5Key> md5Keys;
        private String name;
        private List<GetServiceRoutingEigrpFeatureNetwork> networks;
        private List<GetServiceRoutingEigrpFeatureRedistribute> redistributes;
        private String routePolicyId;
        private Integer version;
        public Builder() {}
        public Builder(GetServiceRoutingEigrpFeatureResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationType = defaults.authenticationType;
    	      this.authenticationTypeVariable = defaults.authenticationTypeVariable;
    	      this.autonomousSystemId = defaults.autonomousSystemId;
    	      this.autonomousSystemIdVariable = defaults.autonomousSystemIdVariable;
    	      this.description = defaults.description;
    	      this.featureProfileId = defaults.featureProfileId;
    	      this.filter = defaults.filter;
    	      this.filterVariable = defaults.filterVariable;
    	      this.helloInterval = defaults.helloInterval;
    	      this.helloIntervalVariable = defaults.helloIntervalVariable;
    	      this.hmacAuthenticationKey = defaults.hmacAuthenticationKey;
    	      this.hmacAuthenticationKeyVariable = defaults.hmacAuthenticationKeyVariable;
    	      this.holdTime = defaults.holdTime;
    	      this.holdTimeVariable = defaults.holdTimeVariable;
    	      this.id = defaults.id;
    	      this.interfaces = defaults.interfaces;
    	      this.md5Keys = defaults.md5Keys;
    	      this.name = defaults.name;
    	      this.networks = defaults.networks;
    	      this.redistributes = defaults.redistributes;
    	      this.routePolicyId = defaults.routePolicyId;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder authenticationType(String authenticationType) {
            if (authenticationType == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "authenticationType");
            }
            this.authenticationType = authenticationType;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationTypeVariable(String authenticationTypeVariable) {
            if (authenticationTypeVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "authenticationTypeVariable");
            }
            this.authenticationTypeVariable = authenticationTypeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder autonomousSystemId(Integer autonomousSystemId) {
            if (autonomousSystemId == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "autonomousSystemId");
            }
            this.autonomousSystemId = autonomousSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder autonomousSystemIdVariable(String autonomousSystemIdVariable) {
            if (autonomousSystemIdVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "autonomousSystemIdVariable");
            }
            this.autonomousSystemIdVariable = autonomousSystemIdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder featureProfileId(String featureProfileId) {
            if (featureProfileId == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "featureProfileId");
            }
            this.featureProfileId = featureProfileId;
            return this;
        }
        @CustomType.Setter
        public Builder filter(Boolean filter) {
            if (filter == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "filter");
            }
            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder filterVariable(String filterVariable) {
            if (filterVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "filterVariable");
            }
            this.filterVariable = filterVariable;
            return this;
        }
        @CustomType.Setter
        public Builder helloInterval(Integer helloInterval) {
            if (helloInterval == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "helloInterval");
            }
            this.helloInterval = helloInterval;
            return this;
        }
        @CustomType.Setter
        public Builder helloIntervalVariable(String helloIntervalVariable) {
            if (helloIntervalVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "helloIntervalVariable");
            }
            this.helloIntervalVariable = helloIntervalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder hmacAuthenticationKey(String hmacAuthenticationKey) {
            if (hmacAuthenticationKey == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "hmacAuthenticationKey");
            }
            this.hmacAuthenticationKey = hmacAuthenticationKey;
            return this;
        }
        @CustomType.Setter
        public Builder hmacAuthenticationKeyVariable(String hmacAuthenticationKeyVariable) {
            if (hmacAuthenticationKeyVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "hmacAuthenticationKeyVariable");
            }
            this.hmacAuthenticationKeyVariable = hmacAuthenticationKeyVariable;
            return this;
        }
        @CustomType.Setter
        public Builder holdTime(Integer holdTime) {
            if (holdTime == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "holdTime");
            }
            this.holdTime = holdTime;
            return this;
        }
        @CustomType.Setter
        public Builder holdTimeVariable(String holdTimeVariable) {
            if (holdTimeVariable == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "holdTimeVariable");
            }
            this.holdTimeVariable = holdTimeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder interfaces(List<GetServiceRoutingEigrpFeatureInterface> interfaces) {
            if (interfaces == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "interfaces");
            }
            this.interfaces = interfaces;
            return this;
        }
        public Builder interfaces(GetServiceRoutingEigrpFeatureInterface... interfaces) {
            return interfaces(List.of(interfaces));
        }
        @CustomType.Setter
        public Builder md5Keys(List<GetServiceRoutingEigrpFeatureMd5Key> md5Keys) {
            if (md5Keys == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "md5Keys");
            }
            this.md5Keys = md5Keys;
            return this;
        }
        public Builder md5Keys(GetServiceRoutingEigrpFeatureMd5Key... md5Keys) {
            return md5Keys(List.of(md5Keys));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networks(List<GetServiceRoutingEigrpFeatureNetwork> networks) {
            if (networks == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "networks");
            }
            this.networks = networks;
            return this;
        }
        public Builder networks(GetServiceRoutingEigrpFeatureNetwork... networks) {
            return networks(List.of(networks));
        }
        @CustomType.Setter
        public Builder redistributes(List<GetServiceRoutingEigrpFeatureRedistribute> redistributes) {
            if (redistributes == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "redistributes");
            }
            this.redistributes = redistributes;
            return this;
        }
        public Builder redistributes(GetServiceRoutingEigrpFeatureRedistribute... redistributes) {
            return redistributes(List.of(redistributes));
        }
        @CustomType.Setter
        public Builder routePolicyId(String routePolicyId) {
            if (routePolicyId == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "routePolicyId");
            }
            this.routePolicyId = routePolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetServiceRoutingEigrpFeatureResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetServiceRoutingEigrpFeatureResult build() {
            final var _resultValue = new GetServiceRoutingEigrpFeatureResult();
            _resultValue.authenticationType = authenticationType;
            _resultValue.authenticationTypeVariable = authenticationTypeVariable;
            _resultValue.autonomousSystemId = autonomousSystemId;
            _resultValue.autonomousSystemIdVariable = autonomousSystemIdVariable;
            _resultValue.description = description;
            _resultValue.featureProfileId = featureProfileId;
            _resultValue.filter = filter;
            _resultValue.filterVariable = filterVariable;
            _resultValue.helloInterval = helloInterval;
            _resultValue.helloIntervalVariable = helloIntervalVariable;
            _resultValue.hmacAuthenticationKey = hmacAuthenticationKey;
            _resultValue.hmacAuthenticationKeyVariable = hmacAuthenticationKeyVariable;
            _resultValue.holdTime = holdTime;
            _resultValue.holdTimeVariable = holdTimeVariable;
            _resultValue.id = id;
            _resultValue.interfaces = interfaces;
            _resultValue.md5Keys = md5Keys;
            _resultValue.name = name;
            _resultValue.networks = networks;
            _resultValue.redistributes = redistributes;
            _resultValue.routePolicyId = routePolicyId;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
