// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CedgeGlobalFeatureTemplateState extends com.pulumi.resources.ResourceArgs {

    public static final CedgeGlobalFeatureTemplateState Empty = new CedgeGlobalFeatureTemplateState();

    /**
     * Set ARP Proxy
     *   - Default value: `false`
     * 
     */
    @Import(name="arpProxy")
    private @Nullable Output<Boolean> arpProxy;

    /**
     * @return Set ARP Proxy
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> arpProxy() {
        return Optional.ofNullable(this.arpProxy);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="arpProxyVariable")
    private @Nullable Output<String> arpProxyVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> arpProxyVariable() {
        return Optional.ofNullable(this.arpProxyVariable);
    }

    /**
     * Configure Ignore BOOTP
     *   - Default value: `true`
     * 
     */
    @Import(name="bootp")
    private @Nullable Output<Boolean> bootp;

    /**
     * @return Configure Ignore BOOTP
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> bootp() {
        return Optional.ofNullable(this.bootp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="bootpVariable")
    private @Nullable Output<String> bootpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> bootpVariable() {
        return Optional.ofNullable(this.bootpVariable);
    }

    /**
     * Configure CDP
     *   - Default value: `true`
     * 
     */
    @Import(name="cdp")
    private @Nullable Output<Boolean> cdp;

    /**
     * @return Configure CDP
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> cdp() {
        return Optional.ofNullable(this.cdp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="cdpVariable")
    private @Nullable Output<String> cdpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> cdpVariable() {
        return Optional.ofNullable(this.cdpVariable);
    }

    /**
     * Configure Console Logging
     *   - Default value: `true`
     * 
     */
    @Import(name="consoleLogging")
    private @Nullable Output<Boolean> consoleLogging;

    /**
     * @return Configure Console Logging
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> consoleLogging() {
        return Optional.ofNullable(this.consoleLogging);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="consoleLoggingVariable")
    private @Nullable Output<String> consoleLoggingVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> consoleLoggingVariable() {
        return Optional.ofNullable(this.consoleLoggingVariable);
    }

    /**
     * The description of the feature template
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the feature template
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    @Import(name="deviceTypes")
    private @Nullable Output<List<String>> deviceTypes;

    /**
     * @return List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    public Optional<Output<List<String>>> deviceTypes() {
        return Optional.ofNullable(this.deviceTypes);
    }

    /**
     * Configure Domain-Lookup
     *   - Default value: `false`
     * 
     */
    @Import(name="domainLookup")
    private @Nullable Output<Boolean> domainLookup;

    /**
     * @return Configure Domain-Lookup
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> domainLookup() {
        return Optional.ofNullable(this.domainLookup);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="domainLookupVariable")
    private @Nullable Output<String> domainLookupVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> domainLookupVariable() {
        return Optional.ofNullable(this.domainLookupVariable);
    }

    /**
     * Set Passive FTP
     *   - Default value: `false`
     * 
     */
    @Import(name="ftpPassive")
    private @Nullable Output<Boolean> ftpPassive;

    /**
     * @return Set Passive FTP
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> ftpPassive() {
        return Optional.ofNullable(this.ftpPassive);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ftpPassiveVariable")
    private @Nullable Output<String> ftpPassiveVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ftpPassiveVariable() {
        return Optional.ofNullable(this.ftpPassiveVariable);
    }

    /**
     * Set preference for HTTP Authentication
     *   - Choices: `local`, `aaa`
     * 
     */
    @Import(name="httpAuthentication")
    private @Nullable Output<String> httpAuthentication;

    /**
     * @return Set preference for HTTP Authentication
     *   - Choices: `local`, `aaa`
     * 
     */
    public Optional<Output<String>> httpAuthentication() {
        return Optional.ofNullable(this.httpAuthentication);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="httpAuthenticationVariable")
    private @Nullable Output<String> httpAuthenticationVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> httpAuthenticationVariable() {
        return Optional.ofNullable(this.httpAuthenticationVariable);
    }

    /**
     * Set HTTP Server
     *   - Default value: `false`
     * 
     */
    @Import(name="httpServer")
    private @Nullable Output<Boolean> httpServer;

    /**
     * @return Set HTTP Server
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> httpServer() {
        return Optional.ofNullable(this.httpServer);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="httpServerVariable")
    private @Nullable Output<String> httpServerVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> httpServerVariable() {
        return Optional.ofNullable(this.httpServerVariable);
    }

    /**
     * Set HTTPS Server
     *   - Default value: `false`
     * 
     */
    @Import(name="httpsServer")
    private @Nullable Output<Boolean> httpsServer;

    /**
     * @return Set HTTPS Server
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> httpsServer() {
        return Optional.ofNullable(this.httpsServer);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="httpsServerVariable")
    private @Nullable Output<String> httpsServerVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> httpsServerVariable() {
        return Optional.ofNullable(this.httpsServerVariable);
    }

    /**
     * Set Source Route
     *   - Default value: `false`
     * 
     */
    @Import(name="ipSourceRouting")
    private @Nullable Output<Boolean> ipSourceRouting;

    /**
     * @return Set Source Route
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> ipSourceRouting() {
        return Optional.ofNullable(this.ipSourceRouting);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipSourceRoutingVariable")
    private @Nullable Output<String> ipSourceRoutingVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipSourceRoutingVariable() {
        return Optional.ofNullable(this.ipSourceRoutingVariable);
    }

    /**
     * Configure Telnet (Outbound)
     *   - Default value: `false`
     * 
     */
    @Import(name="lineVty")
    private @Nullable Output<Boolean> lineVty;

    /**
     * @return Configure Telnet (Outbound)
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> lineVty() {
        return Optional.ofNullable(this.lineVty);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="lineVtyVariable")
    private @Nullable Output<String> lineVtyVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> lineVtyVariable() {
        return Optional.ofNullable(this.lineVtyVariable);
    }

    /**
     * Configure LLDP
     *   - Default value: `true`
     * 
     */
    @Import(name="lldp")
    private @Nullable Output<Boolean> lldp;

    /**
     * @return Configure LLDP
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> lldp() {
        return Optional.ofNullable(this.lldp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="lldpVariable")
    private @Nullable Output<String> lldpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> lldpVariable() {
        return Optional.ofNullable(this.lldpVariable);
    }

    /**
     * The name of the feature template
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the feature template
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Set NAT64 TCP session timeout, in seconds
     *   - Range: `1`-`536870`
     *   - Default value: `3600`
     * 
     */
    @Import(name="nat64TcpTimeout")
    private @Nullable Output<Integer> nat64TcpTimeout;

    /**
     * @return Set NAT64 TCP session timeout, in seconds
     *   - Range: `1`-`536870`
     *   - Default value: `3600`
     * 
     */
    public Optional<Output<Integer>> nat64TcpTimeout() {
        return Optional.ofNullable(this.nat64TcpTimeout);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="nat64TcpTimeoutVariable")
    private @Nullable Output<String> nat64TcpTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> nat64TcpTimeoutVariable() {
        return Optional.ofNullable(this.nat64TcpTimeoutVariable);
    }

    /**
     * Set NAT64 UDP session timeout, in seconds
     *   - Range: `1`-`536870`
     *   - Default value: `300`
     * 
     */
    @Import(name="nat64UdpTimeout")
    private @Nullable Output<Integer> nat64UdpTimeout;

    /**
     * @return Set NAT64 UDP session timeout, in seconds
     *   - Range: `1`-`536870`
     *   - Default value: `300`
     * 
     */
    public Optional<Output<Integer>> nat64UdpTimeout() {
        return Optional.ofNullable(this.nat64UdpTimeout);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="nat64UdpTimeoutVariable")
    private @Nullable Output<String> nat64UdpTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> nat64UdpTimeoutVariable() {
        return Optional.ofNullable(this.nat64UdpTimeoutVariable);
    }

    /**
     * Set RSH/RCP
     *   - Default value: `false`
     * 
     */
    @Import(name="rshRcp")
    private @Nullable Output<Boolean> rshRcp;

    /**
     * @return Set RSH/RCP
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> rshRcp() {
        return Optional.ofNullable(this.rshRcp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="rshRcpVariable")
    private @Nullable Output<String> rshRcpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> rshRcpVariable() {
        return Optional.ofNullable(this.rshRcpVariable);
    }

    /**
     * Configure SNMP Ifindex Persist
     *   - Default value: `true`
     * 
     */
    @Import(name="snmpIfindexPersist")
    private @Nullable Output<Boolean> snmpIfindexPersist;

    /**
     * @return Configure SNMP Ifindex Persist
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> snmpIfindexPersist() {
        return Optional.ofNullable(this.snmpIfindexPersist);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="snmpIfindexPersistVariable")
    private @Nullable Output<String> snmpIfindexPersistVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> snmpIfindexPersistVariable() {
        return Optional.ofNullable(this.snmpIfindexPersistVariable);
    }

    /**
     * Specify interface for source address in all HTTP(S) client connections
     * 
     */
    @Import(name="sourceInterface")
    private @Nullable Output<String> sourceInterface;

    /**
     * @return Specify interface for source address in all HTTP(S) client connections
     * 
     */
    public Optional<Output<String>> sourceInterface() {
        return Optional.ofNullable(this.sourceInterface);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sourceInterfaceVariable")
    private @Nullable Output<String> sourceInterfaceVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sourceInterfaceVariable() {
        return Optional.ofNullable(this.sourceInterfaceVariable);
    }

    /**
     * Set SSH version
     *   - Range: `1`-`2`
     * 
     */
    @Import(name="sshVersion")
    private @Nullable Output<Integer> sshVersion;

    /**
     * @return Set SSH version
     *   - Range: `1`-`2`
     * 
     */
    public Optional<Output<Integer>> sshVersion() {
        return Optional.ofNullable(this.sshVersion);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sshVersionVariable")
    private @Nullable Output<String> sshVersionVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sshVersionVariable() {
        return Optional.ofNullable(this.sshVersionVariable);
    }

    /**
     * Configure tcp-keepalives-in
     *   - Default value: `true`
     * 
     */
    @Import(name="tcpKeepalivesIn")
    private @Nullable Output<Boolean> tcpKeepalivesIn;

    /**
     * @return Configure tcp-keepalives-in
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> tcpKeepalivesIn() {
        return Optional.ofNullable(this.tcpKeepalivesIn);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tcpKeepalivesInVariable")
    private @Nullable Output<String> tcpKeepalivesInVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tcpKeepalivesInVariable() {
        return Optional.ofNullable(this.tcpKeepalivesInVariable);
    }

    /**
     * Configure tcp-keepalives-out
     *   - Default value: `true`
     * 
     */
    @Import(name="tcpKeepalivesOut")
    private @Nullable Output<Boolean> tcpKeepalivesOut;

    /**
     * @return Configure tcp-keepalives-out
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> tcpKeepalivesOut() {
        return Optional.ofNullable(this.tcpKeepalivesOut);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tcpKeepalivesOutVariable")
    private @Nullable Output<String> tcpKeepalivesOutVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tcpKeepalivesOutVariable() {
        return Optional.ofNullable(this.tcpKeepalivesOutVariable);
    }

    /**
     * Configure tcp-small-servers
     *   - Default value: `false`
     * 
     */
    @Import(name="tcpSmallServers")
    private @Nullable Output<Boolean> tcpSmallServers;

    /**
     * @return Configure tcp-small-servers
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tcpSmallServers() {
        return Optional.ofNullable(this.tcpSmallServers);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tcpSmallServersVariable")
    private @Nullable Output<String> tcpSmallServersVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tcpSmallServersVariable() {
        return Optional.ofNullable(this.tcpSmallServersVariable);
    }

    /**
     * The template type
     * 
     */
    @Import(name="templateType")
    private @Nullable Output<String> templateType;

    /**
     * @return The template type
     * 
     */
    public Optional<Output<String>> templateType() {
        return Optional.ofNullable(this.templateType);
    }

    /**
     * Configure udp-small-servers
     *   - Default value: `false`
     * 
     */
    @Import(name="udpSmallServers")
    private @Nullable Output<Boolean> udpSmallServers;

    /**
     * @return Configure udp-small-servers
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> udpSmallServers() {
        return Optional.ofNullable(this.udpSmallServers);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="udpSmallServersVariable")
    private @Nullable Output<String> udpSmallServersVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> udpSmallServersVariable() {
        return Optional.ofNullable(this.udpSmallServersVariable);
    }

    /**
     * The version of the feature template
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the feature template
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    /**
     * Configure VTY Line Logging
     *   - Default value: `false`
     * 
     */
    @Import(name="vtyLogging")
    private @Nullable Output<Boolean> vtyLogging;

    /**
     * @return Configure VTY Line Logging
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> vtyLogging() {
        return Optional.ofNullable(this.vtyLogging);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="vtyLoggingVariable")
    private @Nullable Output<String> vtyLoggingVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> vtyLoggingVariable() {
        return Optional.ofNullable(this.vtyLoggingVariable);
    }

    private CedgeGlobalFeatureTemplateState() {}

    private CedgeGlobalFeatureTemplateState(CedgeGlobalFeatureTemplateState $) {
        this.arpProxy = $.arpProxy;
        this.arpProxyVariable = $.arpProxyVariable;
        this.bootp = $.bootp;
        this.bootpVariable = $.bootpVariable;
        this.cdp = $.cdp;
        this.cdpVariable = $.cdpVariable;
        this.consoleLogging = $.consoleLogging;
        this.consoleLoggingVariable = $.consoleLoggingVariable;
        this.description = $.description;
        this.deviceTypes = $.deviceTypes;
        this.domainLookup = $.domainLookup;
        this.domainLookupVariable = $.domainLookupVariable;
        this.ftpPassive = $.ftpPassive;
        this.ftpPassiveVariable = $.ftpPassiveVariable;
        this.httpAuthentication = $.httpAuthentication;
        this.httpAuthenticationVariable = $.httpAuthenticationVariable;
        this.httpServer = $.httpServer;
        this.httpServerVariable = $.httpServerVariable;
        this.httpsServer = $.httpsServer;
        this.httpsServerVariable = $.httpsServerVariable;
        this.ipSourceRouting = $.ipSourceRouting;
        this.ipSourceRoutingVariable = $.ipSourceRoutingVariable;
        this.lineVty = $.lineVty;
        this.lineVtyVariable = $.lineVtyVariable;
        this.lldp = $.lldp;
        this.lldpVariable = $.lldpVariable;
        this.name = $.name;
        this.nat64TcpTimeout = $.nat64TcpTimeout;
        this.nat64TcpTimeoutVariable = $.nat64TcpTimeoutVariable;
        this.nat64UdpTimeout = $.nat64UdpTimeout;
        this.nat64UdpTimeoutVariable = $.nat64UdpTimeoutVariable;
        this.rshRcp = $.rshRcp;
        this.rshRcpVariable = $.rshRcpVariable;
        this.snmpIfindexPersist = $.snmpIfindexPersist;
        this.snmpIfindexPersistVariable = $.snmpIfindexPersistVariable;
        this.sourceInterface = $.sourceInterface;
        this.sourceInterfaceVariable = $.sourceInterfaceVariable;
        this.sshVersion = $.sshVersion;
        this.sshVersionVariable = $.sshVersionVariable;
        this.tcpKeepalivesIn = $.tcpKeepalivesIn;
        this.tcpKeepalivesInVariable = $.tcpKeepalivesInVariable;
        this.tcpKeepalivesOut = $.tcpKeepalivesOut;
        this.tcpKeepalivesOutVariable = $.tcpKeepalivesOutVariable;
        this.tcpSmallServers = $.tcpSmallServers;
        this.tcpSmallServersVariable = $.tcpSmallServersVariable;
        this.templateType = $.templateType;
        this.udpSmallServers = $.udpSmallServers;
        this.udpSmallServersVariable = $.udpSmallServersVariable;
        this.version = $.version;
        this.vtyLogging = $.vtyLogging;
        this.vtyLoggingVariable = $.vtyLoggingVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CedgeGlobalFeatureTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CedgeGlobalFeatureTemplateState $;

        public Builder() {
            $ = new CedgeGlobalFeatureTemplateState();
        }

        public Builder(CedgeGlobalFeatureTemplateState defaults) {
            $ = new CedgeGlobalFeatureTemplateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arpProxy Set ARP Proxy
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder arpProxy(@Nullable Output<Boolean> arpProxy) {
            $.arpProxy = arpProxy;
            return this;
        }

        /**
         * @param arpProxy Set ARP Proxy
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder arpProxy(Boolean arpProxy) {
            return arpProxy(Output.of(arpProxy));
        }

        /**
         * @param arpProxyVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder arpProxyVariable(@Nullable Output<String> arpProxyVariable) {
            $.arpProxyVariable = arpProxyVariable;
            return this;
        }

        /**
         * @param arpProxyVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder arpProxyVariable(String arpProxyVariable) {
            return arpProxyVariable(Output.of(arpProxyVariable));
        }

        /**
         * @param bootp Configure Ignore BOOTP
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder bootp(@Nullable Output<Boolean> bootp) {
            $.bootp = bootp;
            return this;
        }

        /**
         * @param bootp Configure Ignore BOOTP
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder bootp(Boolean bootp) {
            return bootp(Output.of(bootp));
        }

        /**
         * @param bootpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder bootpVariable(@Nullable Output<String> bootpVariable) {
            $.bootpVariable = bootpVariable;
            return this;
        }

        /**
         * @param bootpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder bootpVariable(String bootpVariable) {
            return bootpVariable(Output.of(bootpVariable));
        }

        /**
         * @param cdp Configure CDP
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder cdp(@Nullable Output<Boolean> cdp) {
            $.cdp = cdp;
            return this;
        }

        /**
         * @param cdp Configure CDP
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder cdp(Boolean cdp) {
            return cdp(Output.of(cdp));
        }

        /**
         * @param cdpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder cdpVariable(@Nullable Output<String> cdpVariable) {
            $.cdpVariable = cdpVariable;
            return this;
        }

        /**
         * @param cdpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder cdpVariable(String cdpVariable) {
            return cdpVariable(Output.of(cdpVariable));
        }

        /**
         * @param consoleLogging Configure Console Logging
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder consoleLogging(@Nullable Output<Boolean> consoleLogging) {
            $.consoleLogging = consoleLogging;
            return this;
        }

        /**
         * @param consoleLogging Configure Console Logging
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder consoleLogging(Boolean consoleLogging) {
            return consoleLogging(Output.of(consoleLogging));
        }

        /**
         * @param consoleLoggingVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder consoleLoggingVariable(@Nullable Output<String> consoleLoggingVariable) {
            $.consoleLoggingVariable = consoleLoggingVariable;
            return this;
        }

        /**
         * @param consoleLoggingVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder consoleLoggingVariable(String consoleLoggingVariable) {
            return consoleLoggingVariable(Output.of(consoleLoggingVariable));
        }

        /**
         * @param description The description of the feature template
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the feature template
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param deviceTypes List of supported device types
         *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(@Nullable Output<List<String>> deviceTypes) {
            $.deviceTypes = deviceTypes;
            return this;
        }

        /**
         * @param deviceTypes List of supported device types
         *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(List<String> deviceTypes) {
            return deviceTypes(Output.of(deviceTypes));
        }

        /**
         * @param deviceTypes List of supported device types
         *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(String... deviceTypes) {
            return deviceTypes(List.of(deviceTypes));
        }

        /**
         * @param domainLookup Configure Domain-Lookup
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder domainLookup(@Nullable Output<Boolean> domainLookup) {
            $.domainLookup = domainLookup;
            return this;
        }

        /**
         * @param domainLookup Configure Domain-Lookup
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder domainLookup(Boolean domainLookup) {
            return domainLookup(Output.of(domainLookup));
        }

        /**
         * @param domainLookupVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder domainLookupVariable(@Nullable Output<String> domainLookupVariable) {
            $.domainLookupVariable = domainLookupVariable;
            return this;
        }

        /**
         * @param domainLookupVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder domainLookupVariable(String domainLookupVariable) {
            return domainLookupVariable(Output.of(domainLookupVariable));
        }

        /**
         * @param ftpPassive Set Passive FTP
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ftpPassive(@Nullable Output<Boolean> ftpPassive) {
            $.ftpPassive = ftpPassive;
            return this;
        }

        /**
         * @param ftpPassive Set Passive FTP
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ftpPassive(Boolean ftpPassive) {
            return ftpPassive(Output.of(ftpPassive));
        }

        /**
         * @param ftpPassiveVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ftpPassiveVariable(@Nullable Output<String> ftpPassiveVariable) {
            $.ftpPassiveVariable = ftpPassiveVariable;
            return this;
        }

        /**
         * @param ftpPassiveVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ftpPassiveVariable(String ftpPassiveVariable) {
            return ftpPassiveVariable(Output.of(ftpPassiveVariable));
        }

        /**
         * @param httpAuthentication Set preference for HTTP Authentication
         *   - Choices: `local`, `aaa`
         * 
         * @return builder
         * 
         */
        public Builder httpAuthentication(@Nullable Output<String> httpAuthentication) {
            $.httpAuthentication = httpAuthentication;
            return this;
        }

        /**
         * @param httpAuthentication Set preference for HTTP Authentication
         *   - Choices: `local`, `aaa`
         * 
         * @return builder
         * 
         */
        public Builder httpAuthentication(String httpAuthentication) {
            return httpAuthentication(Output.of(httpAuthentication));
        }

        /**
         * @param httpAuthenticationVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder httpAuthenticationVariable(@Nullable Output<String> httpAuthenticationVariable) {
            $.httpAuthenticationVariable = httpAuthenticationVariable;
            return this;
        }

        /**
         * @param httpAuthenticationVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder httpAuthenticationVariable(String httpAuthenticationVariable) {
            return httpAuthenticationVariable(Output.of(httpAuthenticationVariable));
        }

        /**
         * @param httpServer Set HTTP Server
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder httpServer(@Nullable Output<Boolean> httpServer) {
            $.httpServer = httpServer;
            return this;
        }

        /**
         * @param httpServer Set HTTP Server
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder httpServer(Boolean httpServer) {
            return httpServer(Output.of(httpServer));
        }

        /**
         * @param httpServerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder httpServerVariable(@Nullable Output<String> httpServerVariable) {
            $.httpServerVariable = httpServerVariable;
            return this;
        }

        /**
         * @param httpServerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder httpServerVariable(String httpServerVariable) {
            return httpServerVariable(Output.of(httpServerVariable));
        }

        /**
         * @param httpsServer Set HTTPS Server
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder httpsServer(@Nullable Output<Boolean> httpsServer) {
            $.httpsServer = httpsServer;
            return this;
        }

        /**
         * @param httpsServer Set HTTPS Server
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder httpsServer(Boolean httpsServer) {
            return httpsServer(Output.of(httpsServer));
        }

        /**
         * @param httpsServerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder httpsServerVariable(@Nullable Output<String> httpsServerVariable) {
            $.httpsServerVariable = httpsServerVariable;
            return this;
        }

        /**
         * @param httpsServerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder httpsServerVariable(String httpsServerVariable) {
            return httpsServerVariable(Output.of(httpsServerVariable));
        }

        /**
         * @param ipSourceRouting Set Source Route
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipSourceRouting(@Nullable Output<Boolean> ipSourceRouting) {
            $.ipSourceRouting = ipSourceRouting;
            return this;
        }

        /**
         * @param ipSourceRouting Set Source Route
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipSourceRouting(Boolean ipSourceRouting) {
            return ipSourceRouting(Output.of(ipSourceRouting));
        }

        /**
         * @param ipSourceRoutingVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipSourceRoutingVariable(@Nullable Output<String> ipSourceRoutingVariable) {
            $.ipSourceRoutingVariable = ipSourceRoutingVariable;
            return this;
        }

        /**
         * @param ipSourceRoutingVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipSourceRoutingVariable(String ipSourceRoutingVariable) {
            return ipSourceRoutingVariable(Output.of(ipSourceRoutingVariable));
        }

        /**
         * @param lineVty Configure Telnet (Outbound)
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder lineVty(@Nullable Output<Boolean> lineVty) {
            $.lineVty = lineVty;
            return this;
        }

        /**
         * @param lineVty Configure Telnet (Outbound)
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder lineVty(Boolean lineVty) {
            return lineVty(Output.of(lineVty));
        }

        /**
         * @param lineVtyVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder lineVtyVariable(@Nullable Output<String> lineVtyVariable) {
            $.lineVtyVariable = lineVtyVariable;
            return this;
        }

        /**
         * @param lineVtyVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder lineVtyVariable(String lineVtyVariable) {
            return lineVtyVariable(Output.of(lineVtyVariable));
        }

        /**
         * @param lldp Configure LLDP
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder lldp(@Nullable Output<Boolean> lldp) {
            $.lldp = lldp;
            return this;
        }

        /**
         * @param lldp Configure LLDP
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder lldp(Boolean lldp) {
            return lldp(Output.of(lldp));
        }

        /**
         * @param lldpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder lldpVariable(@Nullable Output<String> lldpVariable) {
            $.lldpVariable = lldpVariable;
            return this;
        }

        /**
         * @param lldpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder lldpVariable(String lldpVariable) {
            return lldpVariable(Output.of(lldpVariable));
        }

        /**
         * @param name The name of the feature template
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the feature template
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nat64TcpTimeout Set NAT64 TCP session timeout, in seconds
         *   - Range: `1`-`536870`
         *   - Default value: `3600`
         * 
         * @return builder
         * 
         */
        public Builder nat64TcpTimeout(@Nullable Output<Integer> nat64TcpTimeout) {
            $.nat64TcpTimeout = nat64TcpTimeout;
            return this;
        }

        /**
         * @param nat64TcpTimeout Set NAT64 TCP session timeout, in seconds
         *   - Range: `1`-`536870`
         *   - Default value: `3600`
         * 
         * @return builder
         * 
         */
        public Builder nat64TcpTimeout(Integer nat64TcpTimeout) {
            return nat64TcpTimeout(Output.of(nat64TcpTimeout));
        }

        /**
         * @param nat64TcpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nat64TcpTimeoutVariable(@Nullable Output<String> nat64TcpTimeoutVariable) {
            $.nat64TcpTimeoutVariable = nat64TcpTimeoutVariable;
            return this;
        }

        /**
         * @param nat64TcpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nat64TcpTimeoutVariable(String nat64TcpTimeoutVariable) {
            return nat64TcpTimeoutVariable(Output.of(nat64TcpTimeoutVariable));
        }

        /**
         * @param nat64UdpTimeout Set NAT64 UDP session timeout, in seconds
         *   - Range: `1`-`536870`
         *   - Default value: `300`
         * 
         * @return builder
         * 
         */
        public Builder nat64UdpTimeout(@Nullable Output<Integer> nat64UdpTimeout) {
            $.nat64UdpTimeout = nat64UdpTimeout;
            return this;
        }

        /**
         * @param nat64UdpTimeout Set NAT64 UDP session timeout, in seconds
         *   - Range: `1`-`536870`
         *   - Default value: `300`
         * 
         * @return builder
         * 
         */
        public Builder nat64UdpTimeout(Integer nat64UdpTimeout) {
            return nat64UdpTimeout(Output.of(nat64UdpTimeout));
        }

        /**
         * @param nat64UdpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nat64UdpTimeoutVariable(@Nullable Output<String> nat64UdpTimeoutVariable) {
            $.nat64UdpTimeoutVariable = nat64UdpTimeoutVariable;
            return this;
        }

        /**
         * @param nat64UdpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder nat64UdpTimeoutVariable(String nat64UdpTimeoutVariable) {
            return nat64UdpTimeoutVariable(Output.of(nat64UdpTimeoutVariable));
        }

        /**
         * @param rshRcp Set RSH/RCP
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder rshRcp(@Nullable Output<Boolean> rshRcp) {
            $.rshRcp = rshRcp;
            return this;
        }

        /**
         * @param rshRcp Set RSH/RCP
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder rshRcp(Boolean rshRcp) {
            return rshRcp(Output.of(rshRcp));
        }

        /**
         * @param rshRcpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder rshRcpVariable(@Nullable Output<String> rshRcpVariable) {
            $.rshRcpVariable = rshRcpVariable;
            return this;
        }

        /**
         * @param rshRcpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder rshRcpVariable(String rshRcpVariable) {
            return rshRcpVariable(Output.of(rshRcpVariable));
        }

        /**
         * @param snmpIfindexPersist Configure SNMP Ifindex Persist
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder snmpIfindexPersist(@Nullable Output<Boolean> snmpIfindexPersist) {
            $.snmpIfindexPersist = snmpIfindexPersist;
            return this;
        }

        /**
         * @param snmpIfindexPersist Configure SNMP Ifindex Persist
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder snmpIfindexPersist(Boolean snmpIfindexPersist) {
            return snmpIfindexPersist(Output.of(snmpIfindexPersist));
        }

        /**
         * @param snmpIfindexPersistVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder snmpIfindexPersistVariable(@Nullable Output<String> snmpIfindexPersistVariable) {
            $.snmpIfindexPersistVariable = snmpIfindexPersistVariable;
            return this;
        }

        /**
         * @param snmpIfindexPersistVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder snmpIfindexPersistVariable(String snmpIfindexPersistVariable) {
            return snmpIfindexPersistVariable(Output.of(snmpIfindexPersistVariable));
        }

        /**
         * @param sourceInterface Specify interface for source address in all HTTP(S) client connections
         * 
         * @return builder
         * 
         */
        public Builder sourceInterface(@Nullable Output<String> sourceInterface) {
            $.sourceInterface = sourceInterface;
            return this;
        }

        /**
         * @param sourceInterface Specify interface for source address in all HTTP(S) client connections
         * 
         * @return builder
         * 
         */
        public Builder sourceInterface(String sourceInterface) {
            return sourceInterface(Output.of(sourceInterface));
        }

        /**
         * @param sourceInterfaceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceInterfaceVariable(@Nullable Output<String> sourceInterfaceVariable) {
            $.sourceInterfaceVariable = sourceInterfaceVariable;
            return this;
        }

        /**
         * @param sourceInterfaceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceInterfaceVariable(String sourceInterfaceVariable) {
            return sourceInterfaceVariable(Output.of(sourceInterfaceVariable));
        }

        /**
         * @param sshVersion Set SSH version
         *   - Range: `1`-`2`
         * 
         * @return builder
         * 
         */
        public Builder sshVersion(@Nullable Output<Integer> sshVersion) {
            $.sshVersion = sshVersion;
            return this;
        }

        /**
         * @param sshVersion Set SSH version
         *   - Range: `1`-`2`
         * 
         * @return builder
         * 
         */
        public Builder sshVersion(Integer sshVersion) {
            return sshVersion(Output.of(sshVersion));
        }

        /**
         * @param sshVersionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sshVersionVariable(@Nullable Output<String> sshVersionVariable) {
            $.sshVersionVariable = sshVersionVariable;
            return this;
        }

        /**
         * @param sshVersionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sshVersionVariable(String sshVersionVariable) {
            return sshVersionVariable(Output.of(sshVersionVariable));
        }

        /**
         * @param tcpKeepalivesIn Configure tcp-keepalives-in
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tcpKeepalivesIn(@Nullable Output<Boolean> tcpKeepalivesIn) {
            $.tcpKeepalivesIn = tcpKeepalivesIn;
            return this;
        }

        /**
         * @param tcpKeepalivesIn Configure tcp-keepalives-in
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tcpKeepalivesIn(Boolean tcpKeepalivesIn) {
            return tcpKeepalivesIn(Output.of(tcpKeepalivesIn));
        }

        /**
         * @param tcpKeepalivesInVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tcpKeepalivesInVariable(@Nullable Output<String> tcpKeepalivesInVariable) {
            $.tcpKeepalivesInVariable = tcpKeepalivesInVariable;
            return this;
        }

        /**
         * @param tcpKeepalivesInVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tcpKeepalivesInVariable(String tcpKeepalivesInVariable) {
            return tcpKeepalivesInVariable(Output.of(tcpKeepalivesInVariable));
        }

        /**
         * @param tcpKeepalivesOut Configure tcp-keepalives-out
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tcpKeepalivesOut(@Nullable Output<Boolean> tcpKeepalivesOut) {
            $.tcpKeepalivesOut = tcpKeepalivesOut;
            return this;
        }

        /**
         * @param tcpKeepalivesOut Configure tcp-keepalives-out
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tcpKeepalivesOut(Boolean tcpKeepalivesOut) {
            return tcpKeepalivesOut(Output.of(tcpKeepalivesOut));
        }

        /**
         * @param tcpKeepalivesOutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tcpKeepalivesOutVariable(@Nullable Output<String> tcpKeepalivesOutVariable) {
            $.tcpKeepalivesOutVariable = tcpKeepalivesOutVariable;
            return this;
        }

        /**
         * @param tcpKeepalivesOutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tcpKeepalivesOutVariable(String tcpKeepalivesOutVariable) {
            return tcpKeepalivesOutVariable(Output.of(tcpKeepalivesOutVariable));
        }

        /**
         * @param tcpSmallServers Configure tcp-small-servers
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tcpSmallServers(@Nullable Output<Boolean> tcpSmallServers) {
            $.tcpSmallServers = tcpSmallServers;
            return this;
        }

        /**
         * @param tcpSmallServers Configure tcp-small-servers
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tcpSmallServers(Boolean tcpSmallServers) {
            return tcpSmallServers(Output.of(tcpSmallServers));
        }

        /**
         * @param tcpSmallServersVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tcpSmallServersVariable(@Nullable Output<String> tcpSmallServersVariable) {
            $.tcpSmallServersVariable = tcpSmallServersVariable;
            return this;
        }

        /**
         * @param tcpSmallServersVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tcpSmallServersVariable(String tcpSmallServersVariable) {
            return tcpSmallServersVariable(Output.of(tcpSmallServersVariable));
        }

        /**
         * @param templateType The template type
         * 
         * @return builder
         * 
         */
        public Builder templateType(@Nullable Output<String> templateType) {
            $.templateType = templateType;
            return this;
        }

        /**
         * @param templateType The template type
         * 
         * @return builder
         * 
         */
        public Builder templateType(String templateType) {
            return templateType(Output.of(templateType));
        }

        /**
         * @param udpSmallServers Configure udp-small-servers
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder udpSmallServers(@Nullable Output<Boolean> udpSmallServers) {
            $.udpSmallServers = udpSmallServers;
            return this;
        }

        /**
         * @param udpSmallServers Configure udp-small-servers
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder udpSmallServers(Boolean udpSmallServers) {
            return udpSmallServers(Output.of(udpSmallServers));
        }

        /**
         * @param udpSmallServersVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder udpSmallServersVariable(@Nullable Output<String> udpSmallServersVariable) {
            $.udpSmallServersVariable = udpSmallServersVariable;
            return this;
        }

        /**
         * @param udpSmallServersVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder udpSmallServersVariable(String udpSmallServersVariable) {
            return udpSmallServersVariable(Output.of(udpSmallServersVariable));
        }

        /**
         * @param version The version of the feature template
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the feature template
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        /**
         * @param vtyLogging Configure VTY Line Logging
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder vtyLogging(@Nullable Output<Boolean> vtyLogging) {
            $.vtyLogging = vtyLogging;
            return this;
        }

        /**
         * @param vtyLogging Configure VTY Line Logging
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder vtyLogging(Boolean vtyLogging) {
            return vtyLogging(Output.of(vtyLogging));
        }

        /**
         * @param vtyLoggingVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vtyLoggingVariable(@Nullable Output<String> vtyLoggingVariable) {
            $.vtyLoggingVariable = vtyLoggingVariable;
            return this;
        }

        /**
         * @param vtyLoggingVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vtyLoggingVariable(String vtyLoggingVariable) {
            return vtyLoggingVariable(Output.of(vtyLoggingVariable));
        }

        public CedgeGlobalFeatureTemplateState build() {
            return $;
        }
    }

}
