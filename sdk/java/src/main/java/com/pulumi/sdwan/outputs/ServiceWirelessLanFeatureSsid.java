// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceWirelessLanFeatureSsid {
    /**
     * @return Set admin state
     *   - Default value: `true`
     * 
     */
    private @Nullable Boolean adminState;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String adminStateVariable;
    /**
     * @return Enable broadcast SSID
     *   - Default value: `true`
     * 
     */
    private @Nullable Boolean broadcastSsid;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String broadcastSsidVariable;
    /**
     * @return Set passphrase, Attribute conditional on `security_type` being equal to `personal`
     * 
     */
    private @Nullable String passphrase;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String passphraseVariable;
    /**
     * @return Select QoS profile
     *   - Choices: `platinum`, `gold`, `silver`, `bronze`
     *   - Default value: `silver`
     * 
     */
    private @Nullable String qosProfile;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String qosProfileVariable;
    /**
     * @return Select radio type
     *   - Choices: `24ghz`, `5ghz`, `all`
     *   - Default value: `all`
     * 
     */
    private @Nullable String radioType;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String radioTypeVariable;
    /**
     * @return Set RADIUS server IP, Attribute conditional on `security_type` being equal to `enterprise`
     * 
     */
    private @Nullable String radiusServerIp;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String radiusServerIpVariable;
    /**
     * @return Set RADIUS server authentication port, Attribute conditional on `security_type` being equal to `enterprise`
     *   - Range: `1`-`65535`
     *   - Default value: `1812`
     * 
     */
    private @Nullable Integer radiusServerPort;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String radiusServerPortVariable;
    /**
     * @return Set RADIUS server shared secret, Attribute conditional on `security_type` being equal to `enterprise`
     * 
     */
    private @Nullable String radiusServerSecret;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String radiusServerSecretVariable;
    /**
     * @return Select security type
     *   - Choices: `enterprise`, `personal`, `open`
     * 
     */
    private @Nullable String securityType;
    /**
     * @return Configure wlan SSID
     * 
     */
    private @Nullable String ssidName;
    /**
     * @return Set VLAN ID
     *   - Range: `1`-`4094`
     * 
     */
    private @Nullable Integer vlanId;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String vlanIdVariable;

    private ServiceWirelessLanFeatureSsid() {}
    /**
     * @return Set admin state
     *   - Default value: `true`
     * 
     */
    public Optional<Boolean> adminState() {
        return Optional.ofNullable(this.adminState);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> adminStateVariable() {
        return Optional.ofNullable(this.adminStateVariable);
    }
    /**
     * @return Enable broadcast SSID
     *   - Default value: `true`
     * 
     */
    public Optional<Boolean> broadcastSsid() {
        return Optional.ofNullable(this.broadcastSsid);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> broadcastSsidVariable() {
        return Optional.ofNullable(this.broadcastSsidVariable);
    }
    /**
     * @return Set passphrase, Attribute conditional on `security_type` being equal to `personal`
     * 
     */
    public Optional<String> passphrase() {
        return Optional.ofNullable(this.passphrase);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> passphraseVariable() {
        return Optional.ofNullable(this.passphraseVariable);
    }
    /**
     * @return Select QoS profile
     *   - Choices: `platinum`, `gold`, `silver`, `bronze`
     *   - Default value: `silver`
     * 
     */
    public Optional<String> qosProfile() {
        return Optional.ofNullable(this.qosProfile);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> qosProfileVariable() {
        return Optional.ofNullable(this.qosProfileVariable);
    }
    /**
     * @return Select radio type
     *   - Choices: `24ghz`, `5ghz`, `all`
     *   - Default value: `all`
     * 
     */
    public Optional<String> radioType() {
        return Optional.ofNullable(this.radioType);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> radioTypeVariable() {
        return Optional.ofNullable(this.radioTypeVariable);
    }
    /**
     * @return Set RADIUS server IP, Attribute conditional on `security_type` being equal to `enterprise`
     * 
     */
    public Optional<String> radiusServerIp() {
        return Optional.ofNullable(this.radiusServerIp);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> radiusServerIpVariable() {
        return Optional.ofNullable(this.radiusServerIpVariable);
    }
    /**
     * @return Set RADIUS server authentication port, Attribute conditional on `security_type` being equal to `enterprise`
     *   - Range: `1`-`65535`
     *   - Default value: `1812`
     * 
     */
    public Optional<Integer> radiusServerPort() {
        return Optional.ofNullable(this.radiusServerPort);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> radiusServerPortVariable() {
        return Optional.ofNullable(this.radiusServerPortVariable);
    }
    /**
     * @return Set RADIUS server shared secret, Attribute conditional on `security_type` being equal to `enterprise`
     * 
     */
    public Optional<String> radiusServerSecret() {
        return Optional.ofNullable(this.radiusServerSecret);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> radiusServerSecretVariable() {
        return Optional.ofNullable(this.radiusServerSecretVariable);
    }
    /**
     * @return Select security type
     *   - Choices: `enterprise`, `personal`, `open`
     * 
     */
    public Optional<String> securityType() {
        return Optional.ofNullable(this.securityType);
    }
    /**
     * @return Configure wlan SSID
     * 
     */
    public Optional<String> ssidName() {
        return Optional.ofNullable(this.ssidName);
    }
    /**
     * @return Set VLAN ID
     *   - Range: `1`-`4094`
     * 
     */
    public Optional<Integer> vlanId() {
        return Optional.ofNullable(this.vlanId);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> vlanIdVariable() {
        return Optional.ofNullable(this.vlanIdVariable);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceWirelessLanFeatureSsid defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean adminState;
        private @Nullable String adminStateVariable;
        private @Nullable Boolean broadcastSsid;
        private @Nullable String broadcastSsidVariable;
        private @Nullable String passphrase;
        private @Nullable String passphraseVariable;
        private @Nullable String qosProfile;
        private @Nullable String qosProfileVariable;
        private @Nullable String radioType;
        private @Nullable String radioTypeVariable;
        private @Nullable String radiusServerIp;
        private @Nullable String radiusServerIpVariable;
        private @Nullable Integer radiusServerPort;
        private @Nullable String radiusServerPortVariable;
        private @Nullable String radiusServerSecret;
        private @Nullable String radiusServerSecretVariable;
        private @Nullable String securityType;
        private @Nullable String ssidName;
        private @Nullable Integer vlanId;
        private @Nullable String vlanIdVariable;
        public Builder() {}
        public Builder(ServiceWirelessLanFeatureSsid defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminState = defaults.adminState;
    	      this.adminStateVariable = defaults.adminStateVariable;
    	      this.broadcastSsid = defaults.broadcastSsid;
    	      this.broadcastSsidVariable = defaults.broadcastSsidVariable;
    	      this.passphrase = defaults.passphrase;
    	      this.passphraseVariable = defaults.passphraseVariable;
    	      this.qosProfile = defaults.qosProfile;
    	      this.qosProfileVariable = defaults.qosProfileVariable;
    	      this.radioType = defaults.radioType;
    	      this.radioTypeVariable = defaults.radioTypeVariable;
    	      this.radiusServerIp = defaults.radiusServerIp;
    	      this.radiusServerIpVariable = defaults.radiusServerIpVariable;
    	      this.radiusServerPort = defaults.radiusServerPort;
    	      this.radiusServerPortVariable = defaults.radiusServerPortVariable;
    	      this.radiusServerSecret = defaults.radiusServerSecret;
    	      this.radiusServerSecretVariable = defaults.radiusServerSecretVariable;
    	      this.securityType = defaults.securityType;
    	      this.ssidName = defaults.ssidName;
    	      this.vlanId = defaults.vlanId;
    	      this.vlanIdVariable = defaults.vlanIdVariable;
        }

        @CustomType.Setter
        public Builder adminState(@Nullable Boolean adminState) {

            this.adminState = adminState;
            return this;
        }
        @CustomType.Setter
        public Builder adminStateVariable(@Nullable String adminStateVariable) {

            this.adminStateVariable = adminStateVariable;
            return this;
        }
        @CustomType.Setter
        public Builder broadcastSsid(@Nullable Boolean broadcastSsid) {

            this.broadcastSsid = broadcastSsid;
            return this;
        }
        @CustomType.Setter
        public Builder broadcastSsidVariable(@Nullable String broadcastSsidVariable) {

            this.broadcastSsidVariable = broadcastSsidVariable;
            return this;
        }
        @CustomType.Setter
        public Builder passphrase(@Nullable String passphrase) {

            this.passphrase = passphrase;
            return this;
        }
        @CustomType.Setter
        public Builder passphraseVariable(@Nullable String passphraseVariable) {

            this.passphraseVariable = passphraseVariable;
            return this;
        }
        @CustomType.Setter
        public Builder qosProfile(@Nullable String qosProfile) {

            this.qosProfile = qosProfile;
            return this;
        }
        @CustomType.Setter
        public Builder qosProfileVariable(@Nullable String qosProfileVariable) {

            this.qosProfileVariable = qosProfileVariable;
            return this;
        }
        @CustomType.Setter
        public Builder radioType(@Nullable String radioType) {

            this.radioType = radioType;
            return this;
        }
        @CustomType.Setter
        public Builder radioTypeVariable(@Nullable String radioTypeVariable) {

            this.radioTypeVariable = radioTypeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder radiusServerIp(@Nullable String radiusServerIp) {

            this.radiusServerIp = radiusServerIp;
            return this;
        }
        @CustomType.Setter
        public Builder radiusServerIpVariable(@Nullable String radiusServerIpVariable) {

            this.radiusServerIpVariable = radiusServerIpVariable;
            return this;
        }
        @CustomType.Setter
        public Builder radiusServerPort(@Nullable Integer radiusServerPort) {

            this.radiusServerPort = radiusServerPort;
            return this;
        }
        @CustomType.Setter
        public Builder radiusServerPortVariable(@Nullable String radiusServerPortVariable) {

            this.radiusServerPortVariable = radiusServerPortVariable;
            return this;
        }
        @CustomType.Setter
        public Builder radiusServerSecret(@Nullable String radiusServerSecret) {

            this.radiusServerSecret = radiusServerSecret;
            return this;
        }
        @CustomType.Setter
        public Builder radiusServerSecretVariable(@Nullable String radiusServerSecretVariable) {

            this.radiusServerSecretVariable = radiusServerSecretVariable;
            return this;
        }
        @CustomType.Setter
        public Builder securityType(@Nullable String securityType) {

            this.securityType = securityType;
            return this;
        }
        @CustomType.Setter
        public Builder ssidName(@Nullable String ssidName) {

            this.ssidName = ssidName;
            return this;
        }
        @CustomType.Setter
        public Builder vlanId(@Nullable Integer vlanId) {

            this.vlanId = vlanId;
            return this;
        }
        @CustomType.Setter
        public Builder vlanIdVariable(@Nullable String vlanIdVariable) {

            this.vlanIdVariable = vlanIdVariable;
            return this;
        }
        public ServiceWirelessLanFeatureSsid build() {
            final var _resultValue = new ServiceWirelessLanFeatureSsid();
            _resultValue.adminState = adminState;
            _resultValue.adminStateVariable = adminStateVariable;
            _resultValue.broadcastSsid = broadcastSsid;
            _resultValue.broadcastSsidVariable = broadcastSsidVariable;
            _resultValue.passphrase = passphrase;
            _resultValue.passphraseVariable = passphraseVariable;
            _resultValue.qosProfile = qosProfile;
            _resultValue.qosProfileVariable = qosProfileVariable;
            _resultValue.radioType = radioType;
            _resultValue.radioTypeVariable = radioTypeVariable;
            _resultValue.radiusServerIp = radiusServerIp;
            _resultValue.radiusServerIpVariable = radiusServerIpVariable;
            _resultValue.radiusServerPort = radiusServerPort;
            _resultValue.radiusServerPortVariable = radiusServerPortVariable;
            _resultValue.radiusServerSecret = radiusServerSecret;
            _resultValue.radiusServerSecretVariable = radiusServerSecretVariable;
            _resultValue.securityType = securityType;
            _resultValue.ssidName = ssidName;
            _resultValue.vlanId = vlanId;
            _resultValue.vlanIdVariable = vlanIdVariable;
            return _resultValue;
        }
    }
}
