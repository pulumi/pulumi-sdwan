// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.CiscoOspfv3FeatureTemplateArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.CiscoOspfv3FeatureTemplateState;
import com.pulumi.sdwan.outputs.CiscoOspfv3FeatureTemplateIpv4Area;
import com.pulumi.sdwan.outputs.CiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsa;
import com.pulumi.sdwan.outputs.CiscoOspfv3FeatureTemplateIpv4Redistribute;
import com.pulumi.sdwan.outputs.CiscoOspfv3FeatureTemplateIpv6Area;
import com.pulumi.sdwan.outputs.CiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsa;
import com.pulumi.sdwan.outputs.CiscoOspfv3FeatureTemplateIpv6Redistribute;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Cisco OSPFv3 feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sdwan.CiscoOspfv3FeatureTemplate;
 * import com.pulumi.sdwan.CiscoOspfv3FeatureTemplateArgs;
 * import com.pulumi.sdwan.inputs.CiscoOspfv3FeatureTemplateIpv4RedistributeArgs;
 * import com.pulumi.sdwan.inputs.CiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsaArgs;
 * import com.pulumi.sdwan.inputs.CiscoOspfv3FeatureTemplateIpv4AreaArgs;
 * import com.pulumi.sdwan.inputs.CiscoOspfv3FeatureTemplateIpv6RedistributeArgs;
 * import com.pulumi.sdwan.inputs.CiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsaArgs;
 * import com.pulumi.sdwan.inputs.CiscoOspfv3FeatureTemplateIpv6AreaArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new CiscoOspfv3FeatureTemplate("example", CiscoOspfv3FeatureTemplateArgs.builder()        
 *             .name("Example")
 *             .description("My Example")
 *             .deviceTypes("vedge-C8000V")
 *             .ipv4RouterId("1.2.3.4")
 *             .ipv4AutoCostReferenceBandwidth(100000)
 *             .ipv4CompatibleRfc1583(true)
 *             .ipv4DefaultInformationOriginate(true)
 *             .ipv4DefaultInformationOriginateAlways(true)
 *             .ipv4DefaultInformationOriginateMetric(100)
 *             .ipv4DefaultInformationOriginateMetricType("type1")
 *             .ipv4DistanceExternal(111)
 *             .ipv4DistanceInterArea(111)
 *             .ipv4DistanceIntraArea(112)
 *             .ipv4TimersSpfDelay(300)
 *             .ipv4TimersSpfInitialHold(2000)
 *             .ipv4TimersSpfMaxHold(20000)
 *             .ipv4Distance(110)
 *             .ipv4PolicyName("POLICY1")
 *             .ipv4Filter(false)
 *             .ipv4Redistributes(CiscoOspfv3FeatureTemplateIpv4RedistributeArgs.builder()
 *                 .protocol("static")
 *                 .route_policy("RP1")
 *                 .nat_dia(true)
 *                 .build())
 *             .ipv4MaxMetricRouterLsas(CiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsaArgs.builder()
 *                 .ad_type("on-startup")
 *                 .time(100)
 *                 .build())
 *             .ipv4Areas(CiscoOspfv3FeatureTemplateIpv4AreaArgs.builder()
 *                 .area_number(1)
 *                 .stub(false)
 *                 .stub_no_summary(false)
 *                 .nssa(false)
 *                 .nssa_no_summary(true)
 *                 .translate("always")
 *                 .normal(false)
 *                 .interfaces(CiscoOspfv3FeatureTemplateIpv4AreaInterfaceArgs.builder()
 *                     .name("e1")
 *                     .helloInterval(20)
 *                     .deadInterval(60)
 *                     .retransmitInterval(10)
 *                     .cost(100)
 *                     .network("point-to-point")
 *                     .passiveInterface(true)
 *                     .authenticationType("md5")
 *                     .authenticationKey("authenticationKey")
 *                     .ipsecSpi(256)
 *                     .build())
 *                 .ranges(CiscoOspfv3FeatureTemplateIpv4AreaRangeArgs.builder()
 *                     .address("1.1.1.0/24")
 *                     .cost(100)
 *                     .noAdvertise(true)
 *                     .build())
 *                 .build())
 *             .ipv6RouterId("1.2.3.4")
 *             .ipv6AutoCostReferenceBandwidth(100000)
 *             .ipv6CompatibleRfc1583(true)
 *             .ipv6DefaultInformationOriginate(true)
 *             .ipv6DefaultInformationOriginateAlways(true)
 *             .ipv6DefaultInformationOriginateMetric(100)
 *             .ipv6DefaultInformationOriginateMetricType("type1")
 *             .ipv6DistanceExternal(111)
 *             .ipv6DistanceInterArea(111)
 *             .ipv6DistanceIntraArea(112)
 *             .ipv6TimersSpfDelay(300)
 *             .ipv6TimersSpfInitialHold(2000)
 *             .ipv6TimersSpfMaxHold(20000)
 *             .ipv6Distance(110)
 *             .ipv6PolicyName("POLICY2")
 *             .ipv6Filter(false)
 *             .ipv6Redistributes(CiscoOspfv3FeatureTemplateIpv6RedistributeArgs.builder()
 *                 .protocol("static")
 *                 .route_policy("RP1")
 *                 .build())
 *             .ipv6MaxMetricRouterLsas(CiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsaArgs.builder()
 *                 .ad_type("on-startup")
 *                 .time(100)
 *                 .build())
 *             .ipv6Areas(CiscoOspfv3FeatureTemplateIpv6AreaArgs.builder()
 *                 .area_number(1)
 *                 .stub(false)
 *                 .stub_no_summary(false)
 *                 .nssa(false)
 *                 .nssa_no_summary(true)
 *                 .translate("always")
 *                 .normal(false)
 *                 .interfaces(CiscoOspfv3FeatureTemplateIpv6AreaInterfaceArgs.builder()
 *                     .name("e1")
 *                     .helloInterval(20)
 *                     .deadInterval(60)
 *                     .retransmitInterval(10)
 *                     .cost(100)
 *                     .network("point-to-point")
 *                     .passiveInterface(true)
 *                     .authenticationType("md5")
 *                     .authenticationKey("authenticationKey")
 *                     .ipsecSpi(256)
 *                     .build())
 *                 .ranges(CiscoOspfv3FeatureTemplateIpv6AreaRangeArgs.builder()
 *                     .address("2001::/48")
 *                     .cost(100)
 *                     .noAdvertise(true)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import sdwan:index/ciscoOspfv3FeatureTemplate:CiscoOspfv3FeatureTemplate example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/ciscoOspfv3FeatureTemplate:CiscoOspfv3FeatureTemplate")
public class CiscoOspfv3FeatureTemplate extends com.pulumi.resources.CustomResource {
    /**
     * The description of the feature template
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return The description of the feature template
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    @Export(name="deviceTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> deviceTypes;

    /**
     * @return List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    public Output<List<String>> deviceTypes() {
        return this.deviceTypes;
    }
    /**
     * Configure OSPF area
     * 
     */
    @Export(name="ipv4Areas", refs={List.class,CiscoOspfv3FeatureTemplateIpv4Area.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CiscoOspfv3FeatureTemplateIpv4Area>> ipv4Areas;

    /**
     * @return Configure OSPF area
     * 
     */
    public Output<Optional<List<CiscoOspfv3FeatureTemplateIpv4Area>>> ipv4Areas() {
        return Codegen.optional(this.ipv4Areas);
    }
    /**
     * Set reference bandwidth method to assign OSPF cost - Range: `1`-`4294967` - Default value: `100`
     * 
     */
    @Export(name="ipv4AutoCostReferenceBandwidth", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv4AutoCostReferenceBandwidth;

    /**
     * @return Set reference bandwidth method to assign OSPF cost - Range: `1`-`4294967` - Default value: `100`
     * 
     */
    public Output<Optional<Integer>> ipv4AutoCostReferenceBandwidth() {
        return Codegen.optional(this.ipv4AutoCostReferenceBandwidth);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4AutoCostReferenceBandwidthVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4AutoCostReferenceBandwidthVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4AutoCostReferenceBandwidthVariable() {
        return Codegen.optional(this.ipv4AutoCostReferenceBandwidthVariable);
    }
    /**
     * Calculate summary route cost based on RFC 1583 - Default value: `true`
     * 
     */
    @Export(name="ipv4CompatibleRfc1583", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipv4CompatibleRfc1583;

    /**
     * @return Calculate summary route cost based on RFC 1583 - Default value: `true`
     * 
     */
    public Output<Optional<Boolean>> ipv4CompatibleRfc1583() {
        return Codegen.optional(this.ipv4CompatibleRfc1583);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4CompatibleRfc1583Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4CompatibleRfc1583Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4CompatibleRfc1583Variable() {
        return Codegen.optional(this.ipv4CompatibleRfc1583Variable);
    }
    /**
     * Distribute default external route into OSPF - Default value: `false`
     * 
     */
    @Export(name="ipv4DefaultInformationOriginate", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipv4DefaultInformationOriginate;

    /**
     * @return Distribute default external route into OSPF - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> ipv4DefaultInformationOriginate() {
        return Codegen.optional(this.ipv4DefaultInformationOriginate);
    }
    /**
     * Always advertise default route - Default value: `false`
     * 
     */
    @Export(name="ipv4DefaultInformationOriginateAlways", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipv4DefaultInformationOriginateAlways;

    /**
     * @return Always advertise default route - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> ipv4DefaultInformationOriginateAlways() {
        return Codegen.optional(this.ipv4DefaultInformationOriginateAlways);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4DefaultInformationOriginateAlwaysVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4DefaultInformationOriginateAlwaysVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4DefaultInformationOriginateAlwaysVariable() {
        return Codegen.optional(this.ipv4DefaultInformationOriginateAlwaysVariable);
    }
    /**
     * Set metric used to generate default route &lt;0..16777214&gt; - Range: `0`-`16777214`
     * 
     */
    @Export(name="ipv4DefaultInformationOriginateMetric", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv4DefaultInformationOriginateMetric;

    /**
     * @return Set metric used to generate default route &lt;0..16777214&gt; - Range: `0`-`16777214`
     * 
     */
    public Output<Optional<Integer>> ipv4DefaultInformationOriginateMetric() {
        return Codegen.optional(this.ipv4DefaultInformationOriginateMetric);
    }
    /**
     * Set default route type - Choices: `type1`, `type2`
     * 
     */
    @Export(name="ipv4DefaultInformationOriginateMetricType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4DefaultInformationOriginateMetricType;

    /**
     * @return Set default route type - Choices: `type1`, `type2`
     * 
     */
    public Output<Optional<String>> ipv4DefaultInformationOriginateMetricType() {
        return Codegen.optional(this.ipv4DefaultInformationOriginateMetricType);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4DefaultInformationOriginateMetricTypeVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4DefaultInformationOriginateMetricTypeVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4DefaultInformationOriginateMetricTypeVariable() {
        return Codegen.optional(this.ipv4DefaultInformationOriginateMetricTypeVariable);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4DefaultInformationOriginateMetricVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4DefaultInformationOriginateMetricVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4DefaultInformationOriginateMetricVariable() {
        return Codegen.optional(this.ipv4DefaultInformationOriginateMetricVariable);
    }
    /**
     * Distance - Range: `1`-`255` - Default value: `110`
     * 
     */
    @Export(name="ipv4Distance", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv4Distance;

    /**
     * @return Distance - Range: `1`-`255` - Default value: `110`
     * 
     */
    public Output<Optional<Integer>> ipv4Distance() {
        return Codegen.optional(this.ipv4Distance);
    }
    /**
     * Set distance for external routes - Range: `1`-`254` - Default value: `110`
     * 
     */
    @Export(name="ipv4DistanceExternal", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv4DistanceExternal;

    /**
     * @return Set distance for external routes - Range: `1`-`254` - Default value: `110`
     * 
     */
    public Output<Optional<Integer>> ipv4DistanceExternal() {
        return Codegen.optional(this.ipv4DistanceExternal);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4DistanceExternalVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4DistanceExternalVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4DistanceExternalVariable() {
        return Codegen.optional(this.ipv4DistanceExternalVariable);
    }
    /**
     * Set distance for inter-area routes - Range: `1`-`254` - Default value: `110`
     * 
     */
    @Export(name="ipv4DistanceInterArea", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv4DistanceInterArea;

    /**
     * @return Set distance for inter-area routes - Range: `1`-`254` - Default value: `110`
     * 
     */
    public Output<Optional<Integer>> ipv4DistanceInterArea() {
        return Codegen.optional(this.ipv4DistanceInterArea);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4DistanceInterAreaVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4DistanceInterAreaVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4DistanceInterAreaVariable() {
        return Codegen.optional(this.ipv4DistanceInterAreaVariable);
    }
    /**
     * Set distance for intra-area routes - Range: `1`-`254` - Default value: `110`
     * 
     */
    @Export(name="ipv4DistanceIntraArea", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv4DistanceIntraArea;

    /**
     * @return Set distance for intra-area routes - Range: `1`-`254` - Default value: `110`
     * 
     */
    public Output<Optional<Integer>> ipv4DistanceIntraArea() {
        return Codegen.optional(this.ipv4DistanceIntraArea);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4DistanceIntraAreaVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4DistanceIntraAreaVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4DistanceIntraAreaVariable() {
        return Codegen.optional(this.ipv4DistanceIntraAreaVariable);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4DistanceVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4DistanceVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4DistanceVariable() {
        return Codegen.optional(this.ipv4DistanceVariable);
    }
    /**
     * Filter - Default value: `false`
     * 
     */
    @Export(name="ipv4Filter", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipv4Filter;

    /**
     * @return Filter - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> ipv4Filter() {
        return Codegen.optional(this.ipv4Filter);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4FilterVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4FilterVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4FilterVariable() {
        return Codegen.optional(this.ipv4FilterVariable);
    }
    /**
     * Advertise own router LSA with infinite distance
     * 
     */
    @Export(name="ipv4MaxMetricRouterLsas", refs={List.class,CiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsa.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsa>> ipv4MaxMetricRouterLsas;

    /**
     * @return Advertise own router LSA with infinite distance
     * 
     */
    public Output<Optional<List<CiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsa>>> ipv4MaxMetricRouterLsas() {
        return Codegen.optional(this.ipv4MaxMetricRouterLsas);
    }
    /**
     * Policy Name
     * 
     */
    @Export(name="ipv4PolicyName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4PolicyName;

    /**
     * @return Policy Name
     * 
     */
    public Output<Optional<String>> ipv4PolicyName() {
        return Codegen.optional(this.ipv4PolicyName);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4PolicyNameVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4PolicyNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4PolicyNameVariable() {
        return Codegen.optional(this.ipv4PolicyNameVariable);
    }
    /**
     * Redistribute routes
     * 
     */
    @Export(name="ipv4Redistributes", refs={List.class,CiscoOspfv3FeatureTemplateIpv4Redistribute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CiscoOspfv3FeatureTemplateIpv4Redistribute>> ipv4Redistributes;

    /**
     * @return Redistribute routes
     * 
     */
    public Output<Optional<List<CiscoOspfv3FeatureTemplateIpv4Redistribute>>> ipv4Redistributes() {
        return Codegen.optional(this.ipv4Redistributes);
    }
    /**
     * Set OSPF router ID to override system IP address
     * 
     */
    @Export(name="ipv4RouterId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4RouterId;

    /**
     * @return Set OSPF router ID to override system IP address
     * 
     */
    public Output<Optional<String>> ipv4RouterId() {
        return Codegen.optional(this.ipv4RouterId);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4RouterIdVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4RouterIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4RouterIdVariable() {
        return Codegen.optional(this.ipv4RouterIdVariable);
    }
    /**
     * Set delay from first change received until performing SPF calculation - Range: `1`-`600000` - Default value: `200`
     * 
     */
    @Export(name="ipv4TimersSpfDelay", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv4TimersSpfDelay;

    /**
     * @return Set delay from first change received until performing SPF calculation - Range: `1`-`600000` - Default value: `200`
     * 
     */
    public Output<Optional<Integer>> ipv4TimersSpfDelay() {
        return Codegen.optional(this.ipv4TimersSpfDelay);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4TimersSpfDelayVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4TimersSpfDelayVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4TimersSpfDelayVariable() {
        return Codegen.optional(this.ipv4TimersSpfDelayVariable);
    }
    /**
     * Set initial hold time between consecutive SPF calculations - Range: `1`-`600000` - Default value: `1000`
     * 
     */
    @Export(name="ipv4TimersSpfInitialHold", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv4TimersSpfInitialHold;

    /**
     * @return Set initial hold time between consecutive SPF calculations - Range: `1`-`600000` - Default value: `1000`
     * 
     */
    public Output<Optional<Integer>> ipv4TimersSpfInitialHold() {
        return Codegen.optional(this.ipv4TimersSpfInitialHold);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4TimersSpfInitialHoldVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4TimersSpfInitialHoldVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4TimersSpfInitialHoldVariable() {
        return Codegen.optional(this.ipv4TimersSpfInitialHoldVariable);
    }
    /**
     * Set maximum hold time between consecutive SPF calculations - Range: `1`-`600000` - Default value: `10000`
     * 
     */
    @Export(name="ipv4TimersSpfMaxHold", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv4TimersSpfMaxHold;

    /**
     * @return Set maximum hold time between consecutive SPF calculations - Range: `1`-`600000` - Default value: `10000`
     * 
     */
    public Output<Optional<Integer>> ipv4TimersSpfMaxHold() {
        return Codegen.optional(this.ipv4TimersSpfMaxHold);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv4TimersSpfMaxHoldVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4TimersSpfMaxHoldVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv4TimersSpfMaxHoldVariable() {
        return Codegen.optional(this.ipv4TimersSpfMaxHoldVariable);
    }
    /**
     * Configure OSPF area
     * 
     */
    @Export(name="ipv6Areas", refs={List.class,CiscoOspfv3FeatureTemplateIpv6Area.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CiscoOspfv3FeatureTemplateIpv6Area>> ipv6Areas;

    /**
     * @return Configure OSPF area
     * 
     */
    public Output<Optional<List<CiscoOspfv3FeatureTemplateIpv6Area>>> ipv6Areas() {
        return Codegen.optional(this.ipv6Areas);
    }
    /**
     * Set reference bandwidth method to assign OSPF cost - Range: `1`-`4294967` - Default value: `100`
     * 
     */
    @Export(name="ipv6AutoCostReferenceBandwidth", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv6AutoCostReferenceBandwidth;

    /**
     * @return Set reference bandwidth method to assign OSPF cost - Range: `1`-`4294967` - Default value: `100`
     * 
     */
    public Output<Optional<Integer>> ipv6AutoCostReferenceBandwidth() {
        return Codegen.optional(this.ipv6AutoCostReferenceBandwidth);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6AutoCostReferenceBandwidthVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6AutoCostReferenceBandwidthVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6AutoCostReferenceBandwidthVariable() {
        return Codegen.optional(this.ipv6AutoCostReferenceBandwidthVariable);
    }
    /**
     * Calculate summary route cost based on RFC 1583 - Default value: `true`
     * 
     */
    @Export(name="ipv6CompatibleRfc1583", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipv6CompatibleRfc1583;

    /**
     * @return Calculate summary route cost based on RFC 1583 - Default value: `true`
     * 
     */
    public Output<Optional<Boolean>> ipv6CompatibleRfc1583() {
        return Codegen.optional(this.ipv6CompatibleRfc1583);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6CompatibleRfc1583Variable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6CompatibleRfc1583Variable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6CompatibleRfc1583Variable() {
        return Codegen.optional(this.ipv6CompatibleRfc1583Variable);
    }
    /**
     * Distribute default external route into OSPF - Default value: `false`
     * 
     */
    @Export(name="ipv6DefaultInformationOriginate", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipv6DefaultInformationOriginate;

    /**
     * @return Distribute default external route into OSPF - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> ipv6DefaultInformationOriginate() {
        return Codegen.optional(this.ipv6DefaultInformationOriginate);
    }
    /**
     * Always advertise default route - Default value: `false`
     * 
     */
    @Export(name="ipv6DefaultInformationOriginateAlways", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipv6DefaultInformationOriginateAlways;

    /**
     * @return Always advertise default route - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> ipv6DefaultInformationOriginateAlways() {
        return Codegen.optional(this.ipv6DefaultInformationOriginateAlways);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6DefaultInformationOriginateAlwaysVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6DefaultInformationOriginateAlwaysVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6DefaultInformationOriginateAlwaysVariable() {
        return Codegen.optional(this.ipv6DefaultInformationOriginateAlwaysVariable);
    }
    /**
     * Set metric used to generate default route &lt;0..16777214&gt; - Range: `0`-`16777214`
     * 
     */
    @Export(name="ipv6DefaultInformationOriginateMetric", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv6DefaultInformationOriginateMetric;

    /**
     * @return Set metric used to generate default route &lt;0..16777214&gt; - Range: `0`-`16777214`
     * 
     */
    public Output<Optional<Integer>> ipv6DefaultInformationOriginateMetric() {
        return Codegen.optional(this.ipv6DefaultInformationOriginateMetric);
    }
    /**
     * Set default route type - Choices: `type1`, `type2`
     * 
     */
    @Export(name="ipv6DefaultInformationOriginateMetricType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6DefaultInformationOriginateMetricType;

    /**
     * @return Set default route type - Choices: `type1`, `type2`
     * 
     */
    public Output<Optional<String>> ipv6DefaultInformationOriginateMetricType() {
        return Codegen.optional(this.ipv6DefaultInformationOriginateMetricType);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6DefaultInformationOriginateMetricTypeVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6DefaultInformationOriginateMetricTypeVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6DefaultInformationOriginateMetricTypeVariable() {
        return Codegen.optional(this.ipv6DefaultInformationOriginateMetricTypeVariable);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6DefaultInformationOriginateMetricVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6DefaultInformationOriginateMetricVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6DefaultInformationOriginateMetricVariable() {
        return Codegen.optional(this.ipv6DefaultInformationOriginateMetricVariable);
    }
    /**
     * Distance - Range: `1`-`254` - Default value: `110`
     * 
     */
    @Export(name="ipv6Distance", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv6Distance;

    /**
     * @return Distance - Range: `1`-`254` - Default value: `110`
     * 
     */
    public Output<Optional<Integer>> ipv6Distance() {
        return Codegen.optional(this.ipv6Distance);
    }
    /**
     * Set distance for external routes - Range: `1`-`254` - Default value: `110`
     * 
     */
    @Export(name="ipv6DistanceExternal", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv6DistanceExternal;

    /**
     * @return Set distance for external routes - Range: `1`-`254` - Default value: `110`
     * 
     */
    public Output<Optional<Integer>> ipv6DistanceExternal() {
        return Codegen.optional(this.ipv6DistanceExternal);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6DistanceExternalVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6DistanceExternalVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6DistanceExternalVariable() {
        return Codegen.optional(this.ipv6DistanceExternalVariable);
    }
    /**
     * Set distance for inter-area routes - Range: `1`-`254` - Default value: `110`
     * 
     */
    @Export(name="ipv6DistanceInterArea", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv6DistanceInterArea;

    /**
     * @return Set distance for inter-area routes - Range: `1`-`254` - Default value: `110`
     * 
     */
    public Output<Optional<Integer>> ipv6DistanceInterArea() {
        return Codegen.optional(this.ipv6DistanceInterArea);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6DistanceInterAreaVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6DistanceInterAreaVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6DistanceInterAreaVariable() {
        return Codegen.optional(this.ipv6DistanceInterAreaVariable);
    }
    /**
     * Set distance for intra-area routes - Range: `1`-`254` - Default value: `110`
     * 
     */
    @Export(name="ipv6DistanceIntraArea", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv6DistanceIntraArea;

    /**
     * @return Set distance for intra-area routes - Range: `1`-`254` - Default value: `110`
     * 
     */
    public Output<Optional<Integer>> ipv6DistanceIntraArea() {
        return Codegen.optional(this.ipv6DistanceIntraArea);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6DistanceIntraAreaVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6DistanceIntraAreaVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6DistanceIntraAreaVariable() {
        return Codegen.optional(this.ipv6DistanceIntraAreaVariable);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6DistanceVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6DistanceVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6DistanceVariable() {
        return Codegen.optional(this.ipv6DistanceVariable);
    }
    /**
     * Filter - Default value: `false`
     * 
     */
    @Export(name="ipv6Filter", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipv6Filter;

    /**
     * @return Filter - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> ipv6Filter() {
        return Codegen.optional(this.ipv6Filter);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6FilterVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6FilterVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6FilterVariable() {
        return Codegen.optional(this.ipv6FilterVariable);
    }
    /**
     * Advertise own router LSA with infinite distance
     * 
     */
    @Export(name="ipv6MaxMetricRouterLsas", refs={List.class,CiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsa.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsa>> ipv6MaxMetricRouterLsas;

    /**
     * @return Advertise own router LSA with infinite distance
     * 
     */
    public Output<Optional<List<CiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsa>>> ipv6MaxMetricRouterLsas() {
        return Codegen.optional(this.ipv6MaxMetricRouterLsas);
    }
    /**
     * Name
     * 
     */
    @Export(name="ipv6PolicyName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6PolicyName;

    /**
     * @return Name
     * 
     */
    public Output<Optional<String>> ipv6PolicyName() {
        return Codegen.optional(this.ipv6PolicyName);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6PolicyNameVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6PolicyNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6PolicyNameVariable() {
        return Codegen.optional(this.ipv6PolicyNameVariable);
    }
    /**
     * Redistribute routes
     * 
     */
    @Export(name="ipv6Redistributes", refs={List.class,CiscoOspfv3FeatureTemplateIpv6Redistribute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CiscoOspfv3FeatureTemplateIpv6Redistribute>> ipv6Redistributes;

    /**
     * @return Redistribute routes
     * 
     */
    public Output<Optional<List<CiscoOspfv3FeatureTemplateIpv6Redistribute>>> ipv6Redistributes() {
        return Codegen.optional(this.ipv6Redistributes);
    }
    /**
     * Set OSPF router ID to override system IP address
     * 
     */
    @Export(name="ipv6RouterId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6RouterId;

    /**
     * @return Set OSPF router ID to override system IP address
     * 
     */
    public Output<Optional<String>> ipv6RouterId() {
        return Codegen.optional(this.ipv6RouterId);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6RouterIdVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6RouterIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6RouterIdVariable() {
        return Codegen.optional(this.ipv6RouterIdVariable);
    }
    /**
     * Set delay from first change received until performing SPF calculation - Range: `0`-`600000` - Default value: `200`
     * 
     */
    @Export(name="ipv6TimersSpfDelay", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv6TimersSpfDelay;

    /**
     * @return Set delay from first change received until performing SPF calculation - Range: `0`-`600000` - Default value: `200`
     * 
     */
    public Output<Optional<Integer>> ipv6TimersSpfDelay() {
        return Codegen.optional(this.ipv6TimersSpfDelay);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6TimersSpfDelayVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6TimersSpfDelayVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6TimersSpfDelayVariable() {
        return Codegen.optional(this.ipv6TimersSpfDelayVariable);
    }
    /**
     * Set initial hold time between consecutive SPF calculations - Range: `0`-`600000` - Default value: `1000`
     * 
     */
    @Export(name="ipv6TimersSpfInitialHold", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv6TimersSpfInitialHold;

    /**
     * @return Set initial hold time between consecutive SPF calculations - Range: `0`-`600000` - Default value: `1000`
     * 
     */
    public Output<Optional<Integer>> ipv6TimersSpfInitialHold() {
        return Codegen.optional(this.ipv6TimersSpfInitialHold);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6TimersSpfInitialHoldVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6TimersSpfInitialHoldVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6TimersSpfInitialHoldVariable() {
        return Codegen.optional(this.ipv6TimersSpfInitialHoldVariable);
    }
    /**
     * Set maximum hold time between consecutive SPF calculations - Range: `0`-`600000` - Default value: `10000`
     * 
     */
    @Export(name="ipv6TimersSpfMaxHold", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ipv6TimersSpfMaxHold;

    /**
     * @return Set maximum hold time between consecutive SPF calculations - Range: `0`-`600000` - Default value: `10000`
     * 
     */
    public Output<Optional<Integer>> ipv6TimersSpfMaxHold() {
        return Codegen.optional(this.ipv6TimersSpfMaxHold);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="ipv6TimersSpfMaxHoldVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv6TimersSpfMaxHoldVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> ipv6TimersSpfMaxHoldVariable() {
        return Codegen.optional(this.ipv6TimersSpfMaxHoldVariable);
    }
    /**
     * The name of the feature template
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the feature template
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The template type
     * 
     */
    @Export(name="templateType", refs={String.class}, tree="[0]")
    private Output<String> templateType;

    /**
     * @return The template type
     * 
     */
    public Output<String> templateType() {
        return this.templateType;
    }
    /**
     * The version of the feature template
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the feature template
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CiscoOspfv3FeatureTemplate(String name) {
        this(name, CiscoOspfv3FeatureTemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CiscoOspfv3FeatureTemplate(String name, CiscoOspfv3FeatureTemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CiscoOspfv3FeatureTemplate(String name, CiscoOspfv3FeatureTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/ciscoOspfv3FeatureTemplate:CiscoOspfv3FeatureTemplate", name, args == null ? CiscoOspfv3FeatureTemplateArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CiscoOspfv3FeatureTemplate(String name, Output<String> id, @Nullable CiscoOspfv3FeatureTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/ciscoOspfv3FeatureTemplate:CiscoOspfv3FeatureTemplate", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CiscoOspfv3FeatureTemplate get(String name, Output<String> id, @Nullable CiscoOspfv3FeatureTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CiscoOspfv3FeatureTemplate(name, id, state, options);
    }
}
