// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceLanVpnFeatureStaticNatArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceLanVpnFeatureStaticNatArgs Empty = new ServiceLanVpnFeatureStaticNatArgs();

    /**
     * NAT Pool Name
     *   - Range: `1`-`32`
     * 
     */
    @Import(name="natPoolName")
    private @Nullable Output<Integer> natPoolName;

    /**
     * @return NAT Pool Name
     *   - Range: `1`-`32`
     * 
     */
    public Optional<Output<Integer>> natPoolName() {
        return Optional.ofNullable(this.natPoolName);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="natPoolNameVariable")
    private @Nullable Output<String> natPoolNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> natPoolNameVariable() {
        return Optional.ofNullable(this.natPoolNameVariable);
    }

    /**
     * Source IP Address
     * 
     */
    @Import(name="sourceIp")
    private @Nullable Output<String> sourceIp;

    /**
     * @return Source IP Address
     * 
     */
    public Optional<Output<String>> sourceIp() {
        return Optional.ofNullable(this.sourceIp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sourceIpVariable")
    private @Nullable Output<String> sourceIpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sourceIpVariable() {
        return Optional.ofNullable(this.sourceIpVariable);
    }

    /**
     * Static NAT Direction
     *   - Choices: `inside`, `outside`
     * 
     */
    @Import(name="staticNatDirection")
    private @Nullable Output<String> staticNatDirection;

    /**
     * @return Static NAT Direction
     *   - Choices: `inside`, `outside`
     * 
     */
    public Optional<Output<String>> staticNatDirection() {
        return Optional.ofNullable(this.staticNatDirection);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="staticNatDirectionVariable")
    private @Nullable Output<String> staticNatDirectionVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> staticNatDirectionVariable() {
        return Optional.ofNullable(this.staticNatDirectionVariable);
    }

    @Import(name="trackerObjectId")
    private @Nullable Output<String> trackerObjectId;

    public Optional<Output<String>> trackerObjectId() {
        return Optional.ofNullable(this.trackerObjectId);
    }

    /**
     * Translated Source IP Address
     * 
     */
    @Import(name="translatedSourceIp")
    private @Nullable Output<String> translatedSourceIp;

    /**
     * @return Translated Source IP Address
     * 
     */
    public Optional<Output<String>> translatedSourceIp() {
        return Optional.ofNullable(this.translatedSourceIp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="translatedSourceIpVariable")
    private @Nullable Output<String> translatedSourceIpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> translatedSourceIpVariable() {
        return Optional.ofNullable(this.translatedSourceIpVariable);
    }

    private ServiceLanVpnFeatureStaticNatArgs() {}

    private ServiceLanVpnFeatureStaticNatArgs(ServiceLanVpnFeatureStaticNatArgs $) {
        this.natPoolName = $.natPoolName;
        this.natPoolNameVariable = $.natPoolNameVariable;
        this.sourceIp = $.sourceIp;
        this.sourceIpVariable = $.sourceIpVariable;
        this.staticNatDirection = $.staticNatDirection;
        this.staticNatDirectionVariable = $.staticNatDirectionVariable;
        this.trackerObjectId = $.trackerObjectId;
        this.translatedSourceIp = $.translatedSourceIp;
        this.translatedSourceIpVariable = $.translatedSourceIpVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceLanVpnFeatureStaticNatArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceLanVpnFeatureStaticNatArgs $;

        public Builder() {
            $ = new ServiceLanVpnFeatureStaticNatArgs();
        }

        public Builder(ServiceLanVpnFeatureStaticNatArgs defaults) {
            $ = new ServiceLanVpnFeatureStaticNatArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param natPoolName NAT Pool Name
         *   - Range: `1`-`32`
         * 
         * @return builder
         * 
         */
        public Builder natPoolName(@Nullable Output<Integer> natPoolName) {
            $.natPoolName = natPoolName;
            return this;
        }

        /**
         * @param natPoolName NAT Pool Name
         *   - Range: `1`-`32`
         * 
         * @return builder
         * 
         */
        public Builder natPoolName(Integer natPoolName) {
            return natPoolName(Output.of(natPoolName));
        }

        /**
         * @param natPoolNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natPoolNameVariable(@Nullable Output<String> natPoolNameVariable) {
            $.natPoolNameVariable = natPoolNameVariable;
            return this;
        }

        /**
         * @param natPoolNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natPoolNameVariable(String natPoolNameVariable) {
            return natPoolNameVariable(Output.of(natPoolNameVariable));
        }

        /**
         * @param sourceIp Source IP Address
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(@Nullable Output<String> sourceIp) {
            $.sourceIp = sourceIp;
            return this;
        }

        /**
         * @param sourceIp Source IP Address
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(String sourceIp) {
            return sourceIp(Output.of(sourceIp));
        }

        /**
         * @param sourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceIpVariable(@Nullable Output<String> sourceIpVariable) {
            $.sourceIpVariable = sourceIpVariable;
            return this;
        }

        /**
         * @param sourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceIpVariable(String sourceIpVariable) {
            return sourceIpVariable(Output.of(sourceIpVariable));
        }

        /**
         * @param staticNatDirection Static NAT Direction
         *   - Choices: `inside`, `outside`
         * 
         * @return builder
         * 
         */
        public Builder staticNatDirection(@Nullable Output<String> staticNatDirection) {
            $.staticNatDirection = staticNatDirection;
            return this;
        }

        /**
         * @param staticNatDirection Static NAT Direction
         *   - Choices: `inside`, `outside`
         * 
         * @return builder
         * 
         */
        public Builder staticNatDirection(String staticNatDirection) {
            return staticNatDirection(Output.of(staticNatDirection));
        }

        /**
         * @param staticNatDirectionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder staticNatDirectionVariable(@Nullable Output<String> staticNatDirectionVariable) {
            $.staticNatDirectionVariable = staticNatDirectionVariable;
            return this;
        }

        /**
         * @param staticNatDirectionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder staticNatDirectionVariable(String staticNatDirectionVariable) {
            return staticNatDirectionVariable(Output.of(staticNatDirectionVariable));
        }

        public Builder trackerObjectId(@Nullable Output<String> trackerObjectId) {
            $.trackerObjectId = trackerObjectId;
            return this;
        }

        public Builder trackerObjectId(String trackerObjectId) {
            return trackerObjectId(Output.of(trackerObjectId));
        }

        /**
         * @param translatedSourceIp Translated Source IP Address
         * 
         * @return builder
         * 
         */
        public Builder translatedSourceIp(@Nullable Output<String> translatedSourceIp) {
            $.translatedSourceIp = translatedSourceIp;
            return this;
        }

        /**
         * @param translatedSourceIp Translated Source IP Address
         * 
         * @return builder
         * 
         */
        public Builder translatedSourceIp(String translatedSourceIp) {
            return translatedSourceIp(Output.of(translatedSourceIp));
        }

        /**
         * @param translatedSourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder translatedSourceIpVariable(@Nullable Output<String> translatedSourceIpVariable) {
            $.translatedSourceIpVariable = translatedSourceIpVariable;
            return this;
        }

        /**
         * @param translatedSourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder translatedSourceIpVariable(String translatedSourceIpVariable) {
            return translatedSourceIpVariable(Output.of(translatedSourceIpVariable));
        }

        public ServiceLanVpnFeatureStaticNatArgs build() {
            return $;
        }
    }

}
