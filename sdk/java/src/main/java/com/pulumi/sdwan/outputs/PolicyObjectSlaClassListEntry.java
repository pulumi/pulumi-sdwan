// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PolicyObjectSlaClassListEntry {
    private @Nullable String appProbeClassListId;
    /**
     * @return - Choices: `jitter`, `latency`, `loss`, `loss-latency`, `loss-jitter`, `latency-loss`, `latency-jitter`, `jitter-latency`, `jitter-loss`, `loss-latency-jitter`, `loss-jitter-latency`, `latency-loss-jitter`, `latency-jitter-loss`, `jitter-latency-loss`, `jitter-loss-latency`
     * 
     */
    private @Nullable String fallbackBestTunnelCriteria;
    /**
     * @return - Range: `1`-`1000`
     * 
     */
    private @Nullable Integer fallbackBestTunnelJitterVariance;
    /**
     * @return - Range: `1`-`1000`
     * 
     */
    private @Nullable Integer fallbackBestTunnelLatencyVariance;
    /**
     * @return - Range: `0`-`100`
     * 
     */
    private @Nullable Integer fallbackBestTunnelLossVariance;
    /**
     * @return - Range: `1`-`1000`
     * 
     */
    private @Nullable Integer jitter;
    /**
     * @return - Range: `1`-`1000`
     * 
     */
    private @Nullable Integer latency;
    /**
     * @return - Range: `0`-`100`
     * 
     */
    private @Nullable Integer loss;

    private PolicyObjectSlaClassListEntry() {}
    public Optional<String> appProbeClassListId() {
        return Optional.ofNullable(this.appProbeClassListId);
    }
    /**
     * @return - Choices: `jitter`, `latency`, `loss`, `loss-latency`, `loss-jitter`, `latency-loss`, `latency-jitter`, `jitter-latency`, `jitter-loss`, `loss-latency-jitter`, `loss-jitter-latency`, `latency-loss-jitter`, `latency-jitter-loss`, `jitter-latency-loss`, `jitter-loss-latency`
     * 
     */
    public Optional<String> fallbackBestTunnelCriteria() {
        return Optional.ofNullable(this.fallbackBestTunnelCriteria);
    }
    /**
     * @return - Range: `1`-`1000`
     * 
     */
    public Optional<Integer> fallbackBestTunnelJitterVariance() {
        return Optional.ofNullable(this.fallbackBestTunnelJitterVariance);
    }
    /**
     * @return - Range: `1`-`1000`
     * 
     */
    public Optional<Integer> fallbackBestTunnelLatencyVariance() {
        return Optional.ofNullable(this.fallbackBestTunnelLatencyVariance);
    }
    /**
     * @return - Range: `0`-`100`
     * 
     */
    public Optional<Integer> fallbackBestTunnelLossVariance() {
        return Optional.ofNullable(this.fallbackBestTunnelLossVariance);
    }
    /**
     * @return - Range: `1`-`1000`
     * 
     */
    public Optional<Integer> jitter() {
        return Optional.ofNullable(this.jitter);
    }
    /**
     * @return - Range: `1`-`1000`
     * 
     */
    public Optional<Integer> latency() {
        return Optional.ofNullable(this.latency);
    }
    /**
     * @return - Range: `0`-`100`
     * 
     */
    public Optional<Integer> loss() {
        return Optional.ofNullable(this.loss);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyObjectSlaClassListEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String appProbeClassListId;
        private @Nullable String fallbackBestTunnelCriteria;
        private @Nullable Integer fallbackBestTunnelJitterVariance;
        private @Nullable Integer fallbackBestTunnelLatencyVariance;
        private @Nullable Integer fallbackBestTunnelLossVariance;
        private @Nullable Integer jitter;
        private @Nullable Integer latency;
        private @Nullable Integer loss;
        public Builder() {}
        public Builder(PolicyObjectSlaClassListEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appProbeClassListId = defaults.appProbeClassListId;
    	      this.fallbackBestTunnelCriteria = defaults.fallbackBestTunnelCriteria;
    	      this.fallbackBestTunnelJitterVariance = defaults.fallbackBestTunnelJitterVariance;
    	      this.fallbackBestTunnelLatencyVariance = defaults.fallbackBestTunnelLatencyVariance;
    	      this.fallbackBestTunnelLossVariance = defaults.fallbackBestTunnelLossVariance;
    	      this.jitter = defaults.jitter;
    	      this.latency = defaults.latency;
    	      this.loss = defaults.loss;
        }

        @CustomType.Setter
        public Builder appProbeClassListId(@Nullable String appProbeClassListId) {

            this.appProbeClassListId = appProbeClassListId;
            return this;
        }
        @CustomType.Setter
        public Builder fallbackBestTunnelCriteria(@Nullable String fallbackBestTunnelCriteria) {

            this.fallbackBestTunnelCriteria = fallbackBestTunnelCriteria;
            return this;
        }
        @CustomType.Setter
        public Builder fallbackBestTunnelJitterVariance(@Nullable Integer fallbackBestTunnelJitterVariance) {

            this.fallbackBestTunnelJitterVariance = fallbackBestTunnelJitterVariance;
            return this;
        }
        @CustomType.Setter
        public Builder fallbackBestTunnelLatencyVariance(@Nullable Integer fallbackBestTunnelLatencyVariance) {

            this.fallbackBestTunnelLatencyVariance = fallbackBestTunnelLatencyVariance;
            return this;
        }
        @CustomType.Setter
        public Builder fallbackBestTunnelLossVariance(@Nullable Integer fallbackBestTunnelLossVariance) {

            this.fallbackBestTunnelLossVariance = fallbackBestTunnelLossVariance;
            return this;
        }
        @CustomType.Setter
        public Builder jitter(@Nullable Integer jitter) {

            this.jitter = jitter;
            return this;
        }
        @CustomType.Setter
        public Builder latency(@Nullable Integer latency) {

            this.latency = latency;
            return this;
        }
        @CustomType.Setter
        public Builder loss(@Nullable Integer loss) {

            this.loss = loss;
            return this;
        }
        public PolicyObjectSlaClassListEntry build() {
            final var _resultValue = new PolicyObjectSlaClassListEntry();
            _resultValue.appProbeClassListId = appProbeClassListId;
            _resultValue.fallbackBestTunnelCriteria = fallbackBestTunnelCriteria;
            _resultValue.fallbackBestTunnelJitterVariance = fallbackBestTunnelJitterVariance;
            _resultValue.fallbackBestTunnelLatencyVariance = fallbackBestTunnelLatencyVariance;
            _resultValue.fallbackBestTunnelLossVariance = fallbackBestTunnelLossVariance;
            _resultValue.jitter = jitter;
            _resultValue.latency = latency;
            _resultValue.loss = loss;
            return _resultValue;
        }
    }
}
