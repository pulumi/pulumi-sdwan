// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCiscoVpnFeatureTemplateService {
    /**
     * @return Variable name
     * 
     */
    private String addressVariable;
    /**
     * @return List of IPv4 address
     * 
     */
    private List<String> addresses;
    /**
     * @return Tracking Service
     * 
     */
    private String interface_;
    /**
     * @return Variable name
     * 
     */
    private String interfaceVariable;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private Boolean optional;
    /**
     * @return Service Type
     * 
     */
    private String serviceTypes;
    /**
     * @return Tracking Service
     * 
     */
    private Boolean trackEnable;
    /**
     * @return Variable name
     * 
     */
    private String trackEnableVariable;

    private GetCiscoVpnFeatureTemplateService() {}
    /**
     * @return Variable name
     * 
     */
    public String addressVariable() {
        return this.addressVariable;
    }
    /**
     * @return List of IPv4 address
     * 
     */
    public List<String> addresses() {
        return this.addresses;
    }
    /**
     * @return Tracking Service
     * 
     */
    public String interface_() {
        return this.interface_;
    }
    /**
     * @return Variable name
     * 
     */
    public String interfaceVariable() {
        return this.interfaceVariable;
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Boolean optional() {
        return this.optional;
    }
    /**
     * @return Service Type
     * 
     */
    public String serviceTypes() {
        return this.serviceTypes;
    }
    /**
     * @return Tracking Service
     * 
     */
    public Boolean trackEnable() {
        return this.trackEnable;
    }
    /**
     * @return Variable name
     * 
     */
    public String trackEnableVariable() {
        return this.trackEnableVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCiscoVpnFeatureTemplateService defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String addressVariable;
        private List<String> addresses;
        private String interface_;
        private String interfaceVariable;
        private Boolean optional;
        private String serviceTypes;
        private Boolean trackEnable;
        private String trackEnableVariable;
        public Builder() {}
        public Builder(GetCiscoVpnFeatureTemplateService defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressVariable = defaults.addressVariable;
    	      this.addresses = defaults.addresses;
    	      this.interface_ = defaults.interface_;
    	      this.interfaceVariable = defaults.interfaceVariable;
    	      this.optional = defaults.optional;
    	      this.serviceTypes = defaults.serviceTypes;
    	      this.trackEnable = defaults.trackEnable;
    	      this.trackEnableVariable = defaults.trackEnableVariable;
        }

        @CustomType.Setter
        public Builder addressVariable(String addressVariable) {
            if (addressVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateService", "addressVariable");
            }
            this.addressVariable = addressVariable;
            return this;
        }
        @CustomType.Setter
        public Builder addresses(List<String> addresses) {
            if (addresses == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateService", "addresses");
            }
            this.addresses = addresses;
            return this;
        }
        public Builder addresses(String... addresses) {
            return addresses(List.of(addresses));
        }
        @CustomType.Setter("interface")
        public Builder interface_(String interface_) {
            if (interface_ == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateService", "interface_");
            }
            this.interface_ = interface_;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceVariable(String interfaceVariable) {
            if (interfaceVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateService", "interfaceVariable");
            }
            this.interfaceVariable = interfaceVariable;
            return this;
        }
        @CustomType.Setter
        public Builder optional(Boolean optional) {
            if (optional == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateService", "optional");
            }
            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder serviceTypes(String serviceTypes) {
            if (serviceTypes == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateService", "serviceTypes");
            }
            this.serviceTypes = serviceTypes;
            return this;
        }
        @CustomType.Setter
        public Builder trackEnable(Boolean trackEnable) {
            if (trackEnable == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateService", "trackEnable");
            }
            this.trackEnable = trackEnable;
            return this;
        }
        @CustomType.Setter
        public Builder trackEnableVariable(String trackEnableVariable) {
            if (trackEnableVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoVpnFeatureTemplateService", "trackEnableVariable");
            }
            this.trackEnableVariable = trackEnableVariable;
            return this;
        }
        public GetCiscoVpnFeatureTemplateService build() {
            final var _resultValue = new GetCiscoVpnFeatureTemplateService();
            _resultValue.addressVariable = addressVariable;
            _resultValue.addresses = addresses;
            _resultValue.interface_ = interface_;
            _resultValue.interfaceVariable = interfaceVariable;
            _resultValue.optional = optional;
            _resultValue.serviceTypes = serviceTypes;
            _resultValue.trackEnable = trackEnable;
            _resultValue.trackEnableVariable = trackEnableVariable;
            return _resultValue;
        }
    }
}
