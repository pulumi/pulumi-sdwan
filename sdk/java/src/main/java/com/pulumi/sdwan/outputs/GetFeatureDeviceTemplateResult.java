// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetFeatureDeviceTemplateGeneralTemplate;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFeatureDeviceTemplateResult {
    /**
     * @return The description of the device template
     * 
     */
    private String description;
    /**
     * @return The device role
     * 
     */
    private String deviceRole;
    /**
     * @return The device type (e.g., `vedge-ISR-4331`)
     * 
     */
    private String deviceType;
    /**
     * @return List of general templates
     * 
     */
    private List<GetFeatureDeviceTemplateGeneralTemplate> generalTemplates;
    /**
     * @return The id of the object
     * 
     */
    private String id;
    /**
     * @return The name of the device template
     * 
     */
    private String name;
    /**
     * @return The policy ID
     * 
     */
    private String policyId;
    /**
     * @return The policy version
     * 
     */
    private Integer policyVersion;
    /**
     * @return The security policy ID
     * 
     */
    private String securityPolicyId;
    /**
     * @return The security policy version
     * 
     */
    private Integer securityPolicyVersion;
    /**
     * @return The version of the object
     * 
     */
    private Integer version;

    private GetFeatureDeviceTemplateResult() {}
    /**
     * @return The description of the device template
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The device role
     * 
     */
    public String deviceRole() {
        return this.deviceRole;
    }
    /**
     * @return The device type (e.g., `vedge-ISR-4331`)
     * 
     */
    public String deviceType() {
        return this.deviceType;
    }
    /**
     * @return List of general templates
     * 
     */
    public List<GetFeatureDeviceTemplateGeneralTemplate> generalTemplates() {
        return this.generalTemplates;
    }
    /**
     * @return The id of the object
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the device template
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The policy ID
     * 
     */
    public String policyId() {
        return this.policyId;
    }
    /**
     * @return The policy version
     * 
     */
    public Integer policyVersion() {
        return this.policyVersion;
    }
    /**
     * @return The security policy ID
     * 
     */
    public String securityPolicyId() {
        return this.securityPolicyId;
    }
    /**
     * @return The security policy version
     * 
     */
    public Integer securityPolicyVersion() {
        return this.securityPolicyVersion;
    }
    /**
     * @return The version of the object
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFeatureDeviceTemplateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String deviceRole;
        private String deviceType;
        private List<GetFeatureDeviceTemplateGeneralTemplate> generalTemplates;
        private String id;
        private String name;
        private String policyId;
        private Integer policyVersion;
        private String securityPolicyId;
        private Integer securityPolicyVersion;
        private Integer version;
        public Builder() {}
        public Builder(GetFeatureDeviceTemplateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.deviceRole = defaults.deviceRole;
    	      this.deviceType = defaults.deviceType;
    	      this.generalTemplates = defaults.generalTemplates;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.policyId = defaults.policyId;
    	      this.policyVersion = defaults.policyVersion;
    	      this.securityPolicyId = defaults.securityPolicyId;
    	      this.securityPolicyVersion = defaults.securityPolicyVersion;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetFeatureDeviceTemplateResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder deviceRole(String deviceRole) {
            if (deviceRole == null) {
              throw new MissingRequiredPropertyException("GetFeatureDeviceTemplateResult", "deviceRole");
            }
            this.deviceRole = deviceRole;
            return this;
        }
        @CustomType.Setter
        public Builder deviceType(String deviceType) {
            if (deviceType == null) {
              throw new MissingRequiredPropertyException("GetFeatureDeviceTemplateResult", "deviceType");
            }
            this.deviceType = deviceType;
            return this;
        }
        @CustomType.Setter
        public Builder generalTemplates(List<GetFeatureDeviceTemplateGeneralTemplate> generalTemplates) {
            if (generalTemplates == null) {
              throw new MissingRequiredPropertyException("GetFeatureDeviceTemplateResult", "generalTemplates");
            }
            this.generalTemplates = generalTemplates;
            return this;
        }
        public Builder generalTemplates(GetFeatureDeviceTemplateGeneralTemplate... generalTemplates) {
            return generalTemplates(List.of(generalTemplates));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFeatureDeviceTemplateResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetFeatureDeviceTemplateResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder policyId(String policyId) {
            if (policyId == null) {
              throw new MissingRequiredPropertyException("GetFeatureDeviceTemplateResult", "policyId");
            }
            this.policyId = policyId;
            return this;
        }
        @CustomType.Setter
        public Builder policyVersion(Integer policyVersion) {
            if (policyVersion == null) {
              throw new MissingRequiredPropertyException("GetFeatureDeviceTemplateResult", "policyVersion");
            }
            this.policyVersion = policyVersion;
            return this;
        }
        @CustomType.Setter
        public Builder securityPolicyId(String securityPolicyId) {
            if (securityPolicyId == null) {
              throw new MissingRequiredPropertyException("GetFeatureDeviceTemplateResult", "securityPolicyId");
            }
            this.securityPolicyId = securityPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder securityPolicyVersion(Integer securityPolicyVersion) {
            if (securityPolicyVersion == null) {
              throw new MissingRequiredPropertyException("GetFeatureDeviceTemplateResult", "securityPolicyVersion");
            }
            this.securityPolicyVersion = securityPolicyVersion;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetFeatureDeviceTemplateResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetFeatureDeviceTemplateResult build() {
            final var _resultValue = new GetFeatureDeviceTemplateResult();
            _resultValue.description = description;
            _resultValue.deviceRole = deviceRole;
            _resultValue.deviceType = deviceType;
            _resultValue.generalTemplates = generalTemplates;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.policyId = policyId;
            _resultValue.policyVersion = policyVersion;
            _resultValue.securityPolicyId = securityPolicyId;
            _resultValue.securityPolicyVersion = securityPolicyVersion;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
