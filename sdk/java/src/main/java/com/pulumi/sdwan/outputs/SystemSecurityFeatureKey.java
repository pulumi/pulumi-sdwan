// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SystemSecurityFeatureKey {
    /**
     * @return Configure Accept AO Mismatch
     *   - Default value: `false`
     * 
     */
    private @Nullable Boolean acceptAoMismatch;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String acceptAoMismatchVariable;
    /**
     * @return Send lifetime Duration (seconds)
     *   - Range: `1`-`2147483646`
     * 
     */
    private @Nullable Integer acceptLifeTimeDuration;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String acceptLifeTimeDurationVariable;
    /**
     * @return Configure Key lifetime end time
     * 
     */
    private @Nullable Integer acceptLifeTimeExact;
    /**
     * @return Infinite lifetime
     * 
     */
    private @Nullable Boolean acceptLifeTimeInfinite;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String acceptLifeTimeInfiniteVariable;
    /**
     * @return Configure Send lifetime Local
     *   - Default value: `false`
     * 
     */
    private @Nullable Boolean acceptLifeTimeLocal;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String acceptLifeTimeLocalVariable;
    /**
     * @return Configure Key lifetime start time
     * 
     */
    private @Nullable Integer acceptLifeTimeStartEpoch;
    /**
     * @return Crypto Algorithm
     *   - Choices: `aes-128-cmac`, `hmac-sha-1`, `hmac-sha-256`
     * 
     */
    private @Nullable String cryptoAlgorithm;
    /**
     * @return Select the Key ID
     * 
     */
    private @Nullable Integer id;
    /**
     * @return Configure Include TCP Options
     *   - Default value: `false`
     * 
     */
    private @Nullable Boolean includeTcpOptions;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String includeTcpOptionsVariable;
    /**
     * @return Specify the Key String
     * 
     */
    private @Nullable String keyString;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String keyStringVariable;
    /**
     * @return Select the chain name
     * 
     */
    private @Nullable String name;
    /**
     * @return Specify the Receiver ID
     *   - Range: `0`-`255`
     * 
     */
    private @Nullable Integer receiverId;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String receiverIdVariable;
    /**
     * @return Specify the Send ID
     *   - Range: `0`-`255`
     * 
     */
    private @Nullable Integer sendId;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String sendIdVariable;
    /**
     * @return Send lifetime Duration (seconds)
     *   - Range: `1`-`2147483646`
     * 
     */
    private @Nullable Integer sendLifeTimeDuration;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String sendLifeTimeDurationVariable;
    /**
     * @return Configure Key lifetime end time
     * 
     */
    private @Nullable Integer sendLifeTimeExact;
    /**
     * @return Infinite lifetime
     * 
     */
    private @Nullable Boolean sendLifeTimeInfinite;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String sendLifeTimeInfiniteVariable;
    /**
     * @return Configure Send lifetime Local
     *   - Default value: `false`
     * 
     */
    private @Nullable Boolean sendLifeTimeLocal;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String sendLifeTimeLocalVariable;
    /**
     * @return Configure Key lifetime start time
     * 
     */
    private @Nullable Integer sendLifeTimeStartEpoch;

    private SystemSecurityFeatureKey() {}
    /**
     * @return Configure Accept AO Mismatch
     *   - Default value: `false`
     * 
     */
    public Optional<Boolean> acceptAoMismatch() {
        return Optional.ofNullable(this.acceptAoMismatch);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> acceptAoMismatchVariable() {
        return Optional.ofNullable(this.acceptAoMismatchVariable);
    }
    /**
     * @return Send lifetime Duration (seconds)
     *   - Range: `1`-`2147483646`
     * 
     */
    public Optional<Integer> acceptLifeTimeDuration() {
        return Optional.ofNullable(this.acceptLifeTimeDuration);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> acceptLifeTimeDurationVariable() {
        return Optional.ofNullable(this.acceptLifeTimeDurationVariable);
    }
    /**
     * @return Configure Key lifetime end time
     * 
     */
    public Optional<Integer> acceptLifeTimeExact() {
        return Optional.ofNullable(this.acceptLifeTimeExact);
    }
    /**
     * @return Infinite lifetime
     * 
     */
    public Optional<Boolean> acceptLifeTimeInfinite() {
        return Optional.ofNullable(this.acceptLifeTimeInfinite);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> acceptLifeTimeInfiniteVariable() {
        return Optional.ofNullable(this.acceptLifeTimeInfiniteVariable);
    }
    /**
     * @return Configure Send lifetime Local
     *   - Default value: `false`
     * 
     */
    public Optional<Boolean> acceptLifeTimeLocal() {
        return Optional.ofNullable(this.acceptLifeTimeLocal);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> acceptLifeTimeLocalVariable() {
        return Optional.ofNullable(this.acceptLifeTimeLocalVariable);
    }
    /**
     * @return Configure Key lifetime start time
     * 
     */
    public Optional<Integer> acceptLifeTimeStartEpoch() {
        return Optional.ofNullable(this.acceptLifeTimeStartEpoch);
    }
    /**
     * @return Crypto Algorithm
     *   - Choices: `aes-128-cmac`, `hmac-sha-1`, `hmac-sha-256`
     * 
     */
    public Optional<String> cryptoAlgorithm() {
        return Optional.ofNullable(this.cryptoAlgorithm);
    }
    /**
     * @return Select the Key ID
     * 
     */
    public Optional<Integer> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Configure Include TCP Options
     *   - Default value: `false`
     * 
     */
    public Optional<Boolean> includeTcpOptions() {
        return Optional.ofNullable(this.includeTcpOptions);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> includeTcpOptionsVariable() {
        return Optional.ofNullable(this.includeTcpOptionsVariable);
    }
    /**
     * @return Specify the Key String
     * 
     */
    public Optional<String> keyString() {
        return Optional.ofNullable(this.keyString);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> keyStringVariable() {
        return Optional.ofNullable(this.keyStringVariable);
    }
    /**
     * @return Select the chain name
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Specify the Receiver ID
     *   - Range: `0`-`255`
     * 
     */
    public Optional<Integer> receiverId() {
        return Optional.ofNullable(this.receiverId);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> receiverIdVariable() {
        return Optional.ofNullable(this.receiverIdVariable);
    }
    /**
     * @return Specify the Send ID
     *   - Range: `0`-`255`
     * 
     */
    public Optional<Integer> sendId() {
        return Optional.ofNullable(this.sendId);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> sendIdVariable() {
        return Optional.ofNullable(this.sendIdVariable);
    }
    /**
     * @return Send lifetime Duration (seconds)
     *   - Range: `1`-`2147483646`
     * 
     */
    public Optional<Integer> sendLifeTimeDuration() {
        return Optional.ofNullable(this.sendLifeTimeDuration);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> sendLifeTimeDurationVariable() {
        return Optional.ofNullable(this.sendLifeTimeDurationVariable);
    }
    /**
     * @return Configure Key lifetime end time
     * 
     */
    public Optional<Integer> sendLifeTimeExact() {
        return Optional.ofNullable(this.sendLifeTimeExact);
    }
    /**
     * @return Infinite lifetime
     * 
     */
    public Optional<Boolean> sendLifeTimeInfinite() {
        return Optional.ofNullable(this.sendLifeTimeInfinite);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> sendLifeTimeInfiniteVariable() {
        return Optional.ofNullable(this.sendLifeTimeInfiniteVariable);
    }
    /**
     * @return Configure Send lifetime Local
     *   - Default value: `false`
     * 
     */
    public Optional<Boolean> sendLifeTimeLocal() {
        return Optional.ofNullable(this.sendLifeTimeLocal);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> sendLifeTimeLocalVariable() {
        return Optional.ofNullable(this.sendLifeTimeLocalVariable);
    }
    /**
     * @return Configure Key lifetime start time
     * 
     */
    public Optional<Integer> sendLifeTimeStartEpoch() {
        return Optional.ofNullable(this.sendLifeTimeStartEpoch);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SystemSecurityFeatureKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean acceptAoMismatch;
        private @Nullable String acceptAoMismatchVariable;
        private @Nullable Integer acceptLifeTimeDuration;
        private @Nullable String acceptLifeTimeDurationVariable;
        private @Nullable Integer acceptLifeTimeExact;
        private @Nullable Boolean acceptLifeTimeInfinite;
        private @Nullable String acceptLifeTimeInfiniteVariable;
        private @Nullable Boolean acceptLifeTimeLocal;
        private @Nullable String acceptLifeTimeLocalVariable;
        private @Nullable Integer acceptLifeTimeStartEpoch;
        private @Nullable String cryptoAlgorithm;
        private @Nullable Integer id;
        private @Nullable Boolean includeTcpOptions;
        private @Nullable String includeTcpOptionsVariable;
        private @Nullable String keyString;
        private @Nullable String keyStringVariable;
        private @Nullable String name;
        private @Nullable Integer receiverId;
        private @Nullable String receiverIdVariable;
        private @Nullable Integer sendId;
        private @Nullable String sendIdVariable;
        private @Nullable Integer sendLifeTimeDuration;
        private @Nullable String sendLifeTimeDurationVariable;
        private @Nullable Integer sendLifeTimeExact;
        private @Nullable Boolean sendLifeTimeInfinite;
        private @Nullable String sendLifeTimeInfiniteVariable;
        private @Nullable Boolean sendLifeTimeLocal;
        private @Nullable String sendLifeTimeLocalVariable;
        private @Nullable Integer sendLifeTimeStartEpoch;
        public Builder() {}
        public Builder(SystemSecurityFeatureKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceptAoMismatch = defaults.acceptAoMismatch;
    	      this.acceptAoMismatchVariable = defaults.acceptAoMismatchVariable;
    	      this.acceptLifeTimeDuration = defaults.acceptLifeTimeDuration;
    	      this.acceptLifeTimeDurationVariable = defaults.acceptLifeTimeDurationVariable;
    	      this.acceptLifeTimeExact = defaults.acceptLifeTimeExact;
    	      this.acceptLifeTimeInfinite = defaults.acceptLifeTimeInfinite;
    	      this.acceptLifeTimeInfiniteVariable = defaults.acceptLifeTimeInfiniteVariable;
    	      this.acceptLifeTimeLocal = defaults.acceptLifeTimeLocal;
    	      this.acceptLifeTimeLocalVariable = defaults.acceptLifeTimeLocalVariable;
    	      this.acceptLifeTimeStartEpoch = defaults.acceptLifeTimeStartEpoch;
    	      this.cryptoAlgorithm = defaults.cryptoAlgorithm;
    	      this.id = defaults.id;
    	      this.includeTcpOptions = defaults.includeTcpOptions;
    	      this.includeTcpOptionsVariable = defaults.includeTcpOptionsVariable;
    	      this.keyString = defaults.keyString;
    	      this.keyStringVariable = defaults.keyStringVariable;
    	      this.name = defaults.name;
    	      this.receiverId = defaults.receiverId;
    	      this.receiverIdVariable = defaults.receiverIdVariable;
    	      this.sendId = defaults.sendId;
    	      this.sendIdVariable = defaults.sendIdVariable;
    	      this.sendLifeTimeDuration = defaults.sendLifeTimeDuration;
    	      this.sendLifeTimeDurationVariable = defaults.sendLifeTimeDurationVariable;
    	      this.sendLifeTimeExact = defaults.sendLifeTimeExact;
    	      this.sendLifeTimeInfinite = defaults.sendLifeTimeInfinite;
    	      this.sendLifeTimeInfiniteVariable = defaults.sendLifeTimeInfiniteVariable;
    	      this.sendLifeTimeLocal = defaults.sendLifeTimeLocal;
    	      this.sendLifeTimeLocalVariable = defaults.sendLifeTimeLocalVariable;
    	      this.sendLifeTimeStartEpoch = defaults.sendLifeTimeStartEpoch;
        }

        @CustomType.Setter
        public Builder acceptAoMismatch(@Nullable Boolean acceptAoMismatch) {

            this.acceptAoMismatch = acceptAoMismatch;
            return this;
        }
        @CustomType.Setter
        public Builder acceptAoMismatchVariable(@Nullable String acceptAoMismatchVariable) {

            this.acceptAoMismatchVariable = acceptAoMismatchVariable;
            return this;
        }
        @CustomType.Setter
        public Builder acceptLifeTimeDuration(@Nullable Integer acceptLifeTimeDuration) {

            this.acceptLifeTimeDuration = acceptLifeTimeDuration;
            return this;
        }
        @CustomType.Setter
        public Builder acceptLifeTimeDurationVariable(@Nullable String acceptLifeTimeDurationVariable) {

            this.acceptLifeTimeDurationVariable = acceptLifeTimeDurationVariable;
            return this;
        }
        @CustomType.Setter
        public Builder acceptLifeTimeExact(@Nullable Integer acceptLifeTimeExact) {

            this.acceptLifeTimeExact = acceptLifeTimeExact;
            return this;
        }
        @CustomType.Setter
        public Builder acceptLifeTimeInfinite(@Nullable Boolean acceptLifeTimeInfinite) {

            this.acceptLifeTimeInfinite = acceptLifeTimeInfinite;
            return this;
        }
        @CustomType.Setter
        public Builder acceptLifeTimeInfiniteVariable(@Nullable String acceptLifeTimeInfiniteVariable) {

            this.acceptLifeTimeInfiniteVariable = acceptLifeTimeInfiniteVariable;
            return this;
        }
        @CustomType.Setter
        public Builder acceptLifeTimeLocal(@Nullable Boolean acceptLifeTimeLocal) {

            this.acceptLifeTimeLocal = acceptLifeTimeLocal;
            return this;
        }
        @CustomType.Setter
        public Builder acceptLifeTimeLocalVariable(@Nullable String acceptLifeTimeLocalVariable) {

            this.acceptLifeTimeLocalVariable = acceptLifeTimeLocalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder acceptLifeTimeStartEpoch(@Nullable Integer acceptLifeTimeStartEpoch) {

            this.acceptLifeTimeStartEpoch = acceptLifeTimeStartEpoch;
            return this;
        }
        @CustomType.Setter
        public Builder cryptoAlgorithm(@Nullable String cryptoAlgorithm) {

            this.cryptoAlgorithm = cryptoAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable Integer id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder includeTcpOptions(@Nullable Boolean includeTcpOptions) {

            this.includeTcpOptions = includeTcpOptions;
            return this;
        }
        @CustomType.Setter
        public Builder includeTcpOptionsVariable(@Nullable String includeTcpOptionsVariable) {

            this.includeTcpOptionsVariable = includeTcpOptionsVariable;
            return this;
        }
        @CustomType.Setter
        public Builder keyString(@Nullable String keyString) {

            this.keyString = keyString;
            return this;
        }
        @CustomType.Setter
        public Builder keyStringVariable(@Nullable String keyStringVariable) {

            this.keyStringVariable = keyStringVariable;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder receiverId(@Nullable Integer receiverId) {

            this.receiverId = receiverId;
            return this;
        }
        @CustomType.Setter
        public Builder receiverIdVariable(@Nullable String receiverIdVariable) {

            this.receiverIdVariable = receiverIdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder sendId(@Nullable Integer sendId) {

            this.sendId = sendId;
            return this;
        }
        @CustomType.Setter
        public Builder sendIdVariable(@Nullable String sendIdVariable) {

            this.sendIdVariable = sendIdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder sendLifeTimeDuration(@Nullable Integer sendLifeTimeDuration) {

            this.sendLifeTimeDuration = sendLifeTimeDuration;
            return this;
        }
        @CustomType.Setter
        public Builder sendLifeTimeDurationVariable(@Nullable String sendLifeTimeDurationVariable) {

            this.sendLifeTimeDurationVariable = sendLifeTimeDurationVariable;
            return this;
        }
        @CustomType.Setter
        public Builder sendLifeTimeExact(@Nullable Integer sendLifeTimeExact) {

            this.sendLifeTimeExact = sendLifeTimeExact;
            return this;
        }
        @CustomType.Setter
        public Builder sendLifeTimeInfinite(@Nullable Boolean sendLifeTimeInfinite) {

            this.sendLifeTimeInfinite = sendLifeTimeInfinite;
            return this;
        }
        @CustomType.Setter
        public Builder sendLifeTimeInfiniteVariable(@Nullable String sendLifeTimeInfiniteVariable) {

            this.sendLifeTimeInfiniteVariable = sendLifeTimeInfiniteVariable;
            return this;
        }
        @CustomType.Setter
        public Builder sendLifeTimeLocal(@Nullable Boolean sendLifeTimeLocal) {

            this.sendLifeTimeLocal = sendLifeTimeLocal;
            return this;
        }
        @CustomType.Setter
        public Builder sendLifeTimeLocalVariable(@Nullable String sendLifeTimeLocalVariable) {

            this.sendLifeTimeLocalVariable = sendLifeTimeLocalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder sendLifeTimeStartEpoch(@Nullable Integer sendLifeTimeStartEpoch) {

            this.sendLifeTimeStartEpoch = sendLifeTimeStartEpoch;
            return this;
        }
        public SystemSecurityFeatureKey build() {
            final var _resultValue = new SystemSecurityFeatureKey();
            _resultValue.acceptAoMismatch = acceptAoMismatch;
            _resultValue.acceptAoMismatchVariable = acceptAoMismatchVariable;
            _resultValue.acceptLifeTimeDuration = acceptLifeTimeDuration;
            _resultValue.acceptLifeTimeDurationVariable = acceptLifeTimeDurationVariable;
            _resultValue.acceptLifeTimeExact = acceptLifeTimeExact;
            _resultValue.acceptLifeTimeInfinite = acceptLifeTimeInfinite;
            _resultValue.acceptLifeTimeInfiniteVariable = acceptLifeTimeInfiniteVariable;
            _resultValue.acceptLifeTimeLocal = acceptLifeTimeLocal;
            _resultValue.acceptLifeTimeLocalVariable = acceptLifeTimeLocalVariable;
            _resultValue.acceptLifeTimeStartEpoch = acceptLifeTimeStartEpoch;
            _resultValue.cryptoAlgorithm = cryptoAlgorithm;
            _resultValue.id = id;
            _resultValue.includeTcpOptions = includeTcpOptions;
            _resultValue.includeTcpOptionsVariable = includeTcpOptionsVariable;
            _resultValue.keyString = keyString;
            _resultValue.keyStringVariable = keyStringVariable;
            _resultValue.name = name;
            _resultValue.receiverId = receiverId;
            _resultValue.receiverIdVariable = receiverIdVariable;
            _resultValue.sendId = sendId;
            _resultValue.sendIdVariable = sendIdVariable;
            _resultValue.sendLifeTimeDuration = sendLifeTimeDuration;
            _resultValue.sendLifeTimeDurationVariable = sendLifeTimeDurationVariable;
            _resultValue.sendLifeTimeExact = sendLifeTimeExact;
            _resultValue.sendLifeTimeInfinite = sendLifeTimeInfinite;
            _resultValue.sendLifeTimeInfiniteVariable = sendLifeTimeInfiniteVariable;
            _resultValue.sendLifeTimeLocal = sendLifeTimeLocal;
            _resultValue.sendLifeTimeLocalVariable = sendLifeTimeLocalVariable;
            _resultValue.sendLifeTimeStartEpoch = sendLifeTimeStartEpoch;
            return _resultValue;
        }
    }
}
