// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetCiscoNtpFeatureTemplateAuthenticationKey;
import com.pulumi.sdwan.outputs.GetCiscoNtpFeatureTemplateServer;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCiscoNtpFeatureTemplateResult {
    /**
     * @return Set MD5 authentication key
     * 
     */
    private List<GetCiscoNtpFeatureTemplateAuthenticationKey> authenticationKeys;
    /**
     * @return The description of the feature template
     * 
     */
    private String description;
    /**
     * @return List of supported device types
     * 
     */
    private List<String> deviceTypes;
    /**
     * @return The id of the feature template
     * 
     */
    private String id;
    /**
     * @return Configure device as NTP master
     * 
     */
    private Boolean master;
    /**
     * @return Set interface for NTP Master
     * 
     */
    private String masterSourceInterface;
    /**
     * @return Variable name
     * 
     */
    private String masterSourceInterfaceVariable;
    /**
     * @return Master Stratum \n\n
     * 
     */
    private Integer masterStratum;
    /**
     * @return Variable name
     * 
     */
    private String masterStratumVariable;
    /**
     * @return Variable name
     * 
     */
    private String masterVariable;
    /**
     * @return The name of the feature template
     * 
     */
    private String name;
    /**
     * @return Configure NTP servers
     * 
     */
    private List<GetCiscoNtpFeatureTemplateServer> servers;
    /**
     * @return The template type
     * 
     */
    private String templateType;
    /**
     * @return Designate authentication key as trustworthy
     * 
     */
    private List<Integer> trustedKeys;
    /**
     * @return Variable name
     * 
     */
    private String trustedKeysVariable;
    /**
     * @return The version of the feature template
     * 
     */
    private Integer version;

    private GetCiscoNtpFeatureTemplateResult() {}
    /**
     * @return Set MD5 authentication key
     * 
     */
    public List<GetCiscoNtpFeatureTemplateAuthenticationKey> authenticationKeys() {
        return this.authenticationKeys;
    }
    /**
     * @return The description of the feature template
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return List of supported device types
     * 
     */
    public List<String> deviceTypes() {
        return this.deviceTypes;
    }
    /**
     * @return The id of the feature template
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Configure device as NTP master
     * 
     */
    public Boolean master() {
        return this.master;
    }
    /**
     * @return Set interface for NTP Master
     * 
     */
    public String masterSourceInterface() {
        return this.masterSourceInterface;
    }
    /**
     * @return Variable name
     * 
     */
    public String masterSourceInterfaceVariable() {
        return this.masterSourceInterfaceVariable;
    }
    /**
     * @return Master Stratum \n\n
     * 
     */
    public Integer masterStratum() {
        return this.masterStratum;
    }
    /**
     * @return Variable name
     * 
     */
    public String masterStratumVariable() {
        return this.masterStratumVariable;
    }
    /**
     * @return Variable name
     * 
     */
    public String masterVariable() {
        return this.masterVariable;
    }
    /**
     * @return The name of the feature template
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Configure NTP servers
     * 
     */
    public List<GetCiscoNtpFeatureTemplateServer> servers() {
        return this.servers;
    }
    /**
     * @return The template type
     * 
     */
    public String templateType() {
        return this.templateType;
    }
    /**
     * @return Designate authentication key as trustworthy
     * 
     */
    public List<Integer> trustedKeys() {
        return this.trustedKeys;
    }
    /**
     * @return Variable name
     * 
     */
    public String trustedKeysVariable() {
        return this.trustedKeysVariable;
    }
    /**
     * @return The version of the feature template
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCiscoNtpFeatureTemplateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCiscoNtpFeatureTemplateAuthenticationKey> authenticationKeys;
        private String description;
        private List<String> deviceTypes;
        private String id;
        private Boolean master;
        private String masterSourceInterface;
        private String masterSourceInterfaceVariable;
        private Integer masterStratum;
        private String masterStratumVariable;
        private String masterVariable;
        private String name;
        private List<GetCiscoNtpFeatureTemplateServer> servers;
        private String templateType;
        private List<Integer> trustedKeys;
        private String trustedKeysVariable;
        private Integer version;
        public Builder() {}
        public Builder(GetCiscoNtpFeatureTemplateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationKeys = defaults.authenticationKeys;
    	      this.description = defaults.description;
    	      this.deviceTypes = defaults.deviceTypes;
    	      this.id = defaults.id;
    	      this.master = defaults.master;
    	      this.masterSourceInterface = defaults.masterSourceInterface;
    	      this.masterSourceInterfaceVariable = defaults.masterSourceInterfaceVariable;
    	      this.masterStratum = defaults.masterStratum;
    	      this.masterStratumVariable = defaults.masterStratumVariable;
    	      this.masterVariable = defaults.masterVariable;
    	      this.name = defaults.name;
    	      this.servers = defaults.servers;
    	      this.templateType = defaults.templateType;
    	      this.trustedKeys = defaults.trustedKeys;
    	      this.trustedKeysVariable = defaults.trustedKeysVariable;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder authenticationKeys(List<GetCiscoNtpFeatureTemplateAuthenticationKey> authenticationKeys) {
            if (authenticationKeys == null) {
              throw new MissingRequiredPropertyException("GetCiscoNtpFeatureTemplateResult", "authenticationKeys");
            }
            this.authenticationKeys = authenticationKeys;
            return this;
        }
        public Builder authenticationKeys(GetCiscoNtpFeatureTemplateAuthenticationKey... authenticationKeys) {
            return authenticationKeys(List.of(authenticationKeys));
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetCiscoNtpFeatureTemplateResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder deviceTypes(List<String> deviceTypes) {
            if (deviceTypes == null) {
              throw new MissingRequiredPropertyException("GetCiscoNtpFeatureTemplateResult", "deviceTypes");
            }
            this.deviceTypes = deviceTypes;
            return this;
        }
        public Builder deviceTypes(String... deviceTypes) {
            return deviceTypes(List.of(deviceTypes));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCiscoNtpFeatureTemplateResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder master(Boolean master) {
            if (master == null) {
              throw new MissingRequiredPropertyException("GetCiscoNtpFeatureTemplateResult", "master");
            }
            this.master = master;
            return this;
        }
        @CustomType.Setter
        public Builder masterSourceInterface(String masterSourceInterface) {
            if (masterSourceInterface == null) {
              throw new MissingRequiredPropertyException("GetCiscoNtpFeatureTemplateResult", "masterSourceInterface");
            }
            this.masterSourceInterface = masterSourceInterface;
            return this;
        }
        @CustomType.Setter
        public Builder masterSourceInterfaceVariable(String masterSourceInterfaceVariable) {
            if (masterSourceInterfaceVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoNtpFeatureTemplateResult", "masterSourceInterfaceVariable");
            }
            this.masterSourceInterfaceVariable = masterSourceInterfaceVariable;
            return this;
        }
        @CustomType.Setter
        public Builder masterStratum(Integer masterStratum) {
            if (masterStratum == null) {
              throw new MissingRequiredPropertyException("GetCiscoNtpFeatureTemplateResult", "masterStratum");
            }
            this.masterStratum = masterStratum;
            return this;
        }
        @CustomType.Setter
        public Builder masterStratumVariable(String masterStratumVariable) {
            if (masterStratumVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoNtpFeatureTemplateResult", "masterStratumVariable");
            }
            this.masterStratumVariable = masterStratumVariable;
            return this;
        }
        @CustomType.Setter
        public Builder masterVariable(String masterVariable) {
            if (masterVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoNtpFeatureTemplateResult", "masterVariable");
            }
            this.masterVariable = masterVariable;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCiscoNtpFeatureTemplateResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder servers(List<GetCiscoNtpFeatureTemplateServer> servers) {
            if (servers == null) {
              throw new MissingRequiredPropertyException("GetCiscoNtpFeatureTemplateResult", "servers");
            }
            this.servers = servers;
            return this;
        }
        public Builder servers(GetCiscoNtpFeatureTemplateServer... servers) {
            return servers(List.of(servers));
        }
        @CustomType.Setter
        public Builder templateType(String templateType) {
            if (templateType == null) {
              throw new MissingRequiredPropertyException("GetCiscoNtpFeatureTemplateResult", "templateType");
            }
            this.templateType = templateType;
            return this;
        }
        @CustomType.Setter
        public Builder trustedKeys(List<Integer> trustedKeys) {
            if (trustedKeys == null) {
              throw new MissingRequiredPropertyException("GetCiscoNtpFeatureTemplateResult", "trustedKeys");
            }
            this.trustedKeys = trustedKeys;
            return this;
        }
        public Builder trustedKeys(Integer... trustedKeys) {
            return trustedKeys(List.of(trustedKeys));
        }
        @CustomType.Setter
        public Builder trustedKeysVariable(String trustedKeysVariable) {
            if (trustedKeysVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoNtpFeatureTemplateResult", "trustedKeysVariable");
            }
            this.trustedKeysVariable = trustedKeysVariable;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetCiscoNtpFeatureTemplateResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetCiscoNtpFeatureTemplateResult build() {
            final var _resultValue = new GetCiscoNtpFeatureTemplateResult();
            _resultValue.authenticationKeys = authenticationKeys;
            _resultValue.description = description;
            _resultValue.deviceTypes = deviceTypes;
            _resultValue.id = id;
            _resultValue.master = master;
            _resultValue.masterSourceInterface = masterSourceInterface;
            _resultValue.masterSourceInterfaceVariable = masterSourceInterfaceVariable;
            _resultValue.masterStratum = masterStratum;
            _resultValue.masterStratumVariable = masterStratumVariable;
            _resultValue.masterVariable = masterVariable;
            _resultValue.name = name;
            _resultValue.servers = servers;
            _resultValue.templateType = templateType;
            _resultValue.trustedKeys = trustedKeys;
            _resultValue.trustedKeysVariable = trustedKeysVariable;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
