// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.ServiceMulticastFeatureAutoRpAnnounceArgs;
import com.pulumi.sdwan.inputs.ServiceMulticastFeatureAutoRpDiscoveryArgs;
import com.pulumi.sdwan.inputs.ServiceMulticastFeatureIgmpInterfaceArgs;
import com.pulumi.sdwan.inputs.ServiceMulticastFeatureMsdpGroupArgs;
import com.pulumi.sdwan.inputs.ServiceMulticastFeaturePimBsrCandidateArgs;
import com.pulumi.sdwan.inputs.ServiceMulticastFeaturePimBsrRpCandidateArgs;
import com.pulumi.sdwan.inputs.ServiceMulticastFeaturePimInterfaceArgs;
import com.pulumi.sdwan.inputs.ServiceMulticastFeatureStaticRpAddressArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceMulticastFeatureArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceMulticastFeatureArgs Empty = new ServiceMulticastFeatureArgs();

    /**
     * Enable or disable RP Announce
     * 
     */
    @Import(name="autoRpAnnounces")
    private @Nullable Output<List<ServiceMulticastFeatureAutoRpAnnounceArgs>> autoRpAnnounces;

    /**
     * @return Enable or disable RP Announce
     * 
     */
    public Optional<Output<List<ServiceMulticastFeatureAutoRpAnnounceArgs>>> autoRpAnnounces() {
        return Optional.ofNullable(this.autoRpAnnounces);
    }

    /**
     * Enable or disable RP Discovery
     * 
     */
    @Import(name="autoRpDiscoveries")
    private @Nullable Output<List<ServiceMulticastFeatureAutoRpDiscoveryArgs>> autoRpDiscoveries;

    /**
     * @return Enable or disable RP Discovery
     * 
     */
    public Optional<Output<List<ServiceMulticastFeatureAutoRpDiscoveryArgs>>> autoRpDiscoveries() {
        return Optional.ofNullable(this.autoRpDiscoveries);
    }

    /**
     * The description of the Feature
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Enable or disable auto-RP
     *   - Default value: `false`
     * 
     */
    @Import(name="enableAutoRp")
    private @Nullable Output<Boolean> enableAutoRp;

    /**
     * @return Enable or disable auto-RP
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> enableAutoRp() {
        return Optional.ofNullable(this.enableAutoRp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="enableAutoRpVariable")
    private @Nullable Output<String> enableAutoRpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> enableAutoRpVariable() {
        return Optional.ofNullable(this.enableAutoRpVariable);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId", required=true)
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }

    /**
     * Set IGMP interface parameters
     * 
     */
    @Import(name="igmpInterfaces")
    private @Nullable Output<List<ServiceMulticastFeatureIgmpInterfaceArgs>> igmpInterfaces;

    /**
     * @return Set IGMP interface parameters
     * 
     */
    public Optional<Output<List<ServiceMulticastFeatureIgmpInterfaceArgs>>> igmpInterfaces() {
        return Optional.ofNullable(this.igmpInterfaces);
    }

    /**
     * Replicator is local to this device
     *   - Default value: `false`
     * 
     */
    @Import(name="localReplicator")
    private @Nullable Output<Boolean> localReplicator;

    /**
     * @return Replicator is local to this device
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> localReplicator() {
        return Optional.ofNullable(this.localReplicator);
    }

    /**
     * Set number of joins per group the router supports
     *   - Range: `0`-`131072`
     * 
     */
    @Import(name="localReplicatorThreshold")
    private @Nullable Output<Integer> localReplicatorThreshold;

    /**
     * @return Set number of joins per group the router supports
     *   - Range: `0`-`131072`
     * 
     */
    public Optional<Output<Integer>> localReplicatorThreshold() {
        return Optional.ofNullable(this.localReplicatorThreshold);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="localReplicatorThresholdVariable")
    private @Nullable Output<String> localReplicatorThresholdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> localReplicatorThresholdVariable() {
        return Optional.ofNullable(this.localReplicatorThresholdVariable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="localReplicatorVariable")
    private @Nullable Output<String> localReplicatorVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> localReplicatorVariable() {
        return Optional.ofNullable(this.localReplicatorVariable);
    }

    /**
     * Set MSDP refresh timer
     *   - Range: `1`-`60`
     * 
     */
    @Import(name="msdpConnectionRetryInterval")
    private @Nullable Output<Integer> msdpConnectionRetryInterval;

    /**
     * @return Set MSDP refresh timer
     *   - Range: `1`-`60`
     * 
     */
    public Optional<Output<Integer>> msdpConnectionRetryInterval() {
        return Optional.ofNullable(this.msdpConnectionRetryInterval);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="msdpConnectionRetryIntervalVariable")
    private @Nullable Output<String> msdpConnectionRetryIntervalVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> msdpConnectionRetryIntervalVariable() {
        return Optional.ofNullable(this.msdpConnectionRetryIntervalVariable);
    }

    /**
     * multicast MSDP peer
     * 
     */
    @Import(name="msdpGroups")
    private @Nullable Output<List<ServiceMulticastFeatureMsdpGroupArgs>> msdpGroups;

    /**
     * @return multicast MSDP peer
     * 
     */
    public Optional<Output<List<ServiceMulticastFeatureMsdpGroupArgs>>> msdpGroups() {
        return Optional.ofNullable(this.msdpGroups);
    }

    /**
     * Set MSDP originator ID
     * 
     */
    @Import(name="msdpOriginatorId")
    private @Nullable Output<String> msdpOriginatorId;

    /**
     * @return Set MSDP originator ID
     * 
     */
    public Optional<Output<String>> msdpOriginatorId() {
        return Optional.ofNullable(this.msdpOriginatorId);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="msdpOriginatorIdVariable")
    private @Nullable Output<String> msdpOriginatorIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> msdpOriginatorIdVariable() {
        return Optional.ofNullable(this.msdpOriginatorIdVariable);
    }

    /**
     * The name of the Feature
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * bsr candidate Attributes
     * 
     */
    @Import(name="pimBsrCandidates")
    private @Nullable Output<List<ServiceMulticastFeaturePimBsrCandidateArgs>> pimBsrCandidates;

    /**
     * @return bsr candidate Attributes
     * 
     */
    public Optional<Output<List<ServiceMulticastFeaturePimBsrCandidateArgs>>> pimBsrCandidates() {
        return Optional.ofNullable(this.pimBsrCandidates);
    }

    /**
     * Set RP Discovery Scope
     * 
     */
    @Import(name="pimBsrRpCandidates")
    private @Nullable Output<List<ServiceMulticastFeaturePimBsrRpCandidateArgs>> pimBsrRpCandidates;

    /**
     * @return Set RP Discovery Scope
     * 
     */
    public Optional<Output<List<ServiceMulticastFeaturePimBsrRpCandidateArgs>>> pimBsrRpCandidates() {
        return Optional.ofNullable(this.pimBsrRpCandidates);
    }

    /**
     * Set PIM interface parameters
     * 
     */
    @Import(name="pimInterfaces")
    private @Nullable Output<List<ServiceMulticastFeaturePimInterfaceArgs>> pimInterfaces;

    /**
     * @return Set PIM interface parameters
     * 
     */
    public Optional<Output<List<ServiceMulticastFeaturePimInterfaceArgs>>> pimInterfaces() {
        return Optional.ofNullable(this.pimInterfaces);
    }

    /**
     * Set Access List for PIM SSM
     * 
     */
    @Import(name="pimSourceSpecificMulticastAccessList")
    private @Nullable Output<String> pimSourceSpecificMulticastAccessList;

    /**
     * @return Set Access List for PIM SSM
     * 
     */
    public Optional<Output<String>> pimSourceSpecificMulticastAccessList() {
        return Optional.ofNullable(this.pimSourceSpecificMulticastAccessList);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="pimSourceSpecificMulticastAccessListVariable")
    private @Nullable Output<String> pimSourceSpecificMulticastAccessListVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> pimSourceSpecificMulticastAccessListVariable() {
        return Optional.ofNullable(this.pimSourceSpecificMulticastAccessListVariable);
    }

    /**
     * turn SSM on/off
     * 
     */
    @Import(name="pimSourceSpecificMulticastEnable", required=true)
    private Output<Boolean> pimSourceSpecificMulticastEnable;

    /**
     * @return turn SSM on/off
     * 
     */
    public Output<Boolean> pimSourceSpecificMulticastEnable() {
        return this.pimSourceSpecificMulticastEnable;
    }

    /**
     * Set when PIM router joins the SPT (kbps)
     *   - Choices: `0`, `infinity`
     *   - Default value: `0`
     * 
     */
    @Import(name="pimSptThreshold")
    private @Nullable Output<String> pimSptThreshold;

    /**
     * @return Set when PIM router joins the SPT (kbps)
     *   - Choices: `0`, `infinity`
     *   - Default value: `0`
     * 
     */
    public Optional<Output<String>> pimSptThreshold() {
        return Optional.ofNullable(this.pimSptThreshold);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="pimSptThresholdVariable")
    private @Nullable Output<String> pimSptThresholdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> pimSptThresholdVariable() {
        return Optional.ofNullable(this.pimSptThresholdVariable);
    }

    /**
     * Shortest Path Tree (SPT) Only Mode
     *   - Default value: `false`
     * 
     */
    @Import(name="sptOnly")
    private @Nullable Output<Boolean> sptOnly;

    /**
     * @return Shortest Path Tree (SPT) Only Mode
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> sptOnly() {
        return Optional.ofNullable(this.sptOnly);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sptOnlyVariable")
    private @Nullable Output<String> sptOnlyVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sptOnlyVariable() {
        return Optional.ofNullable(this.sptOnlyVariable);
    }

    /**
     * Set Static RP Address(es)
     * 
     */
    @Import(name="staticRpAddresses")
    private @Nullable Output<List<ServiceMulticastFeatureStaticRpAddressArgs>> staticRpAddresses;

    /**
     * @return Set Static RP Address(es)
     * 
     */
    public Optional<Output<List<ServiceMulticastFeatureStaticRpAddressArgs>>> staticRpAddresses() {
        return Optional.ofNullable(this.staticRpAddresses);
    }

    private ServiceMulticastFeatureArgs() {}

    private ServiceMulticastFeatureArgs(ServiceMulticastFeatureArgs $) {
        this.autoRpAnnounces = $.autoRpAnnounces;
        this.autoRpDiscoveries = $.autoRpDiscoveries;
        this.description = $.description;
        this.enableAutoRp = $.enableAutoRp;
        this.enableAutoRpVariable = $.enableAutoRpVariable;
        this.featureProfileId = $.featureProfileId;
        this.igmpInterfaces = $.igmpInterfaces;
        this.localReplicator = $.localReplicator;
        this.localReplicatorThreshold = $.localReplicatorThreshold;
        this.localReplicatorThresholdVariable = $.localReplicatorThresholdVariable;
        this.localReplicatorVariable = $.localReplicatorVariable;
        this.msdpConnectionRetryInterval = $.msdpConnectionRetryInterval;
        this.msdpConnectionRetryIntervalVariable = $.msdpConnectionRetryIntervalVariable;
        this.msdpGroups = $.msdpGroups;
        this.msdpOriginatorId = $.msdpOriginatorId;
        this.msdpOriginatorIdVariable = $.msdpOriginatorIdVariable;
        this.name = $.name;
        this.pimBsrCandidates = $.pimBsrCandidates;
        this.pimBsrRpCandidates = $.pimBsrRpCandidates;
        this.pimInterfaces = $.pimInterfaces;
        this.pimSourceSpecificMulticastAccessList = $.pimSourceSpecificMulticastAccessList;
        this.pimSourceSpecificMulticastAccessListVariable = $.pimSourceSpecificMulticastAccessListVariable;
        this.pimSourceSpecificMulticastEnable = $.pimSourceSpecificMulticastEnable;
        this.pimSptThreshold = $.pimSptThreshold;
        this.pimSptThresholdVariable = $.pimSptThresholdVariable;
        this.sptOnly = $.sptOnly;
        this.sptOnlyVariable = $.sptOnlyVariable;
        this.staticRpAddresses = $.staticRpAddresses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceMulticastFeatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceMulticastFeatureArgs $;

        public Builder() {
            $ = new ServiceMulticastFeatureArgs();
        }

        public Builder(ServiceMulticastFeatureArgs defaults) {
            $ = new ServiceMulticastFeatureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoRpAnnounces Enable or disable RP Announce
         * 
         * @return builder
         * 
         */
        public Builder autoRpAnnounces(@Nullable Output<List<ServiceMulticastFeatureAutoRpAnnounceArgs>> autoRpAnnounces) {
            $.autoRpAnnounces = autoRpAnnounces;
            return this;
        }

        /**
         * @param autoRpAnnounces Enable or disable RP Announce
         * 
         * @return builder
         * 
         */
        public Builder autoRpAnnounces(List<ServiceMulticastFeatureAutoRpAnnounceArgs> autoRpAnnounces) {
            return autoRpAnnounces(Output.of(autoRpAnnounces));
        }

        /**
         * @param autoRpAnnounces Enable or disable RP Announce
         * 
         * @return builder
         * 
         */
        public Builder autoRpAnnounces(ServiceMulticastFeatureAutoRpAnnounceArgs... autoRpAnnounces) {
            return autoRpAnnounces(List.of(autoRpAnnounces));
        }

        /**
         * @param autoRpDiscoveries Enable or disable RP Discovery
         * 
         * @return builder
         * 
         */
        public Builder autoRpDiscoveries(@Nullable Output<List<ServiceMulticastFeatureAutoRpDiscoveryArgs>> autoRpDiscoveries) {
            $.autoRpDiscoveries = autoRpDiscoveries;
            return this;
        }

        /**
         * @param autoRpDiscoveries Enable or disable RP Discovery
         * 
         * @return builder
         * 
         */
        public Builder autoRpDiscoveries(List<ServiceMulticastFeatureAutoRpDiscoveryArgs> autoRpDiscoveries) {
            return autoRpDiscoveries(Output.of(autoRpDiscoveries));
        }

        /**
         * @param autoRpDiscoveries Enable or disable RP Discovery
         * 
         * @return builder
         * 
         */
        public Builder autoRpDiscoveries(ServiceMulticastFeatureAutoRpDiscoveryArgs... autoRpDiscoveries) {
            return autoRpDiscoveries(List.of(autoRpDiscoveries));
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param enableAutoRp Enable or disable auto-RP
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder enableAutoRp(@Nullable Output<Boolean> enableAutoRp) {
            $.enableAutoRp = enableAutoRp;
            return this;
        }

        /**
         * @param enableAutoRp Enable or disable auto-RP
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder enableAutoRp(Boolean enableAutoRp) {
            return enableAutoRp(Output.of(enableAutoRp));
        }

        /**
         * @param enableAutoRpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enableAutoRpVariable(@Nullable Output<String> enableAutoRpVariable) {
            $.enableAutoRpVariable = enableAutoRpVariable;
            return this;
        }

        /**
         * @param enableAutoRpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enableAutoRpVariable(String enableAutoRpVariable) {
            return enableAutoRpVariable(Output.of(enableAutoRpVariable));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param igmpInterfaces Set IGMP interface parameters
         * 
         * @return builder
         * 
         */
        public Builder igmpInterfaces(@Nullable Output<List<ServiceMulticastFeatureIgmpInterfaceArgs>> igmpInterfaces) {
            $.igmpInterfaces = igmpInterfaces;
            return this;
        }

        /**
         * @param igmpInterfaces Set IGMP interface parameters
         * 
         * @return builder
         * 
         */
        public Builder igmpInterfaces(List<ServiceMulticastFeatureIgmpInterfaceArgs> igmpInterfaces) {
            return igmpInterfaces(Output.of(igmpInterfaces));
        }

        /**
         * @param igmpInterfaces Set IGMP interface parameters
         * 
         * @return builder
         * 
         */
        public Builder igmpInterfaces(ServiceMulticastFeatureIgmpInterfaceArgs... igmpInterfaces) {
            return igmpInterfaces(List.of(igmpInterfaces));
        }

        /**
         * @param localReplicator Replicator is local to this device
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder localReplicator(@Nullable Output<Boolean> localReplicator) {
            $.localReplicator = localReplicator;
            return this;
        }

        /**
         * @param localReplicator Replicator is local to this device
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder localReplicator(Boolean localReplicator) {
            return localReplicator(Output.of(localReplicator));
        }

        /**
         * @param localReplicatorThreshold Set number of joins per group the router supports
         *   - Range: `0`-`131072`
         * 
         * @return builder
         * 
         */
        public Builder localReplicatorThreshold(@Nullable Output<Integer> localReplicatorThreshold) {
            $.localReplicatorThreshold = localReplicatorThreshold;
            return this;
        }

        /**
         * @param localReplicatorThreshold Set number of joins per group the router supports
         *   - Range: `0`-`131072`
         * 
         * @return builder
         * 
         */
        public Builder localReplicatorThreshold(Integer localReplicatorThreshold) {
            return localReplicatorThreshold(Output.of(localReplicatorThreshold));
        }

        /**
         * @param localReplicatorThresholdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder localReplicatorThresholdVariable(@Nullable Output<String> localReplicatorThresholdVariable) {
            $.localReplicatorThresholdVariable = localReplicatorThresholdVariable;
            return this;
        }

        /**
         * @param localReplicatorThresholdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder localReplicatorThresholdVariable(String localReplicatorThresholdVariable) {
            return localReplicatorThresholdVariable(Output.of(localReplicatorThresholdVariable));
        }

        /**
         * @param localReplicatorVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder localReplicatorVariable(@Nullable Output<String> localReplicatorVariable) {
            $.localReplicatorVariable = localReplicatorVariable;
            return this;
        }

        /**
         * @param localReplicatorVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder localReplicatorVariable(String localReplicatorVariable) {
            return localReplicatorVariable(Output.of(localReplicatorVariable));
        }

        /**
         * @param msdpConnectionRetryInterval Set MSDP refresh timer
         *   - Range: `1`-`60`
         * 
         * @return builder
         * 
         */
        public Builder msdpConnectionRetryInterval(@Nullable Output<Integer> msdpConnectionRetryInterval) {
            $.msdpConnectionRetryInterval = msdpConnectionRetryInterval;
            return this;
        }

        /**
         * @param msdpConnectionRetryInterval Set MSDP refresh timer
         *   - Range: `1`-`60`
         * 
         * @return builder
         * 
         */
        public Builder msdpConnectionRetryInterval(Integer msdpConnectionRetryInterval) {
            return msdpConnectionRetryInterval(Output.of(msdpConnectionRetryInterval));
        }

        /**
         * @param msdpConnectionRetryIntervalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder msdpConnectionRetryIntervalVariable(@Nullable Output<String> msdpConnectionRetryIntervalVariable) {
            $.msdpConnectionRetryIntervalVariable = msdpConnectionRetryIntervalVariable;
            return this;
        }

        /**
         * @param msdpConnectionRetryIntervalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder msdpConnectionRetryIntervalVariable(String msdpConnectionRetryIntervalVariable) {
            return msdpConnectionRetryIntervalVariable(Output.of(msdpConnectionRetryIntervalVariable));
        }

        /**
         * @param msdpGroups multicast MSDP peer
         * 
         * @return builder
         * 
         */
        public Builder msdpGroups(@Nullable Output<List<ServiceMulticastFeatureMsdpGroupArgs>> msdpGroups) {
            $.msdpGroups = msdpGroups;
            return this;
        }

        /**
         * @param msdpGroups multicast MSDP peer
         * 
         * @return builder
         * 
         */
        public Builder msdpGroups(List<ServiceMulticastFeatureMsdpGroupArgs> msdpGroups) {
            return msdpGroups(Output.of(msdpGroups));
        }

        /**
         * @param msdpGroups multicast MSDP peer
         * 
         * @return builder
         * 
         */
        public Builder msdpGroups(ServiceMulticastFeatureMsdpGroupArgs... msdpGroups) {
            return msdpGroups(List.of(msdpGroups));
        }

        /**
         * @param msdpOriginatorId Set MSDP originator ID
         * 
         * @return builder
         * 
         */
        public Builder msdpOriginatorId(@Nullable Output<String> msdpOriginatorId) {
            $.msdpOriginatorId = msdpOriginatorId;
            return this;
        }

        /**
         * @param msdpOriginatorId Set MSDP originator ID
         * 
         * @return builder
         * 
         */
        public Builder msdpOriginatorId(String msdpOriginatorId) {
            return msdpOriginatorId(Output.of(msdpOriginatorId));
        }

        /**
         * @param msdpOriginatorIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder msdpOriginatorIdVariable(@Nullable Output<String> msdpOriginatorIdVariable) {
            $.msdpOriginatorIdVariable = msdpOriginatorIdVariable;
            return this;
        }

        /**
         * @param msdpOriginatorIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder msdpOriginatorIdVariable(String msdpOriginatorIdVariable) {
            return msdpOriginatorIdVariable(Output.of(msdpOriginatorIdVariable));
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param pimBsrCandidates bsr candidate Attributes
         * 
         * @return builder
         * 
         */
        public Builder pimBsrCandidates(@Nullable Output<List<ServiceMulticastFeaturePimBsrCandidateArgs>> pimBsrCandidates) {
            $.pimBsrCandidates = pimBsrCandidates;
            return this;
        }

        /**
         * @param pimBsrCandidates bsr candidate Attributes
         * 
         * @return builder
         * 
         */
        public Builder pimBsrCandidates(List<ServiceMulticastFeaturePimBsrCandidateArgs> pimBsrCandidates) {
            return pimBsrCandidates(Output.of(pimBsrCandidates));
        }

        /**
         * @param pimBsrCandidates bsr candidate Attributes
         * 
         * @return builder
         * 
         */
        public Builder pimBsrCandidates(ServiceMulticastFeaturePimBsrCandidateArgs... pimBsrCandidates) {
            return pimBsrCandidates(List.of(pimBsrCandidates));
        }

        /**
         * @param pimBsrRpCandidates Set RP Discovery Scope
         * 
         * @return builder
         * 
         */
        public Builder pimBsrRpCandidates(@Nullable Output<List<ServiceMulticastFeaturePimBsrRpCandidateArgs>> pimBsrRpCandidates) {
            $.pimBsrRpCandidates = pimBsrRpCandidates;
            return this;
        }

        /**
         * @param pimBsrRpCandidates Set RP Discovery Scope
         * 
         * @return builder
         * 
         */
        public Builder pimBsrRpCandidates(List<ServiceMulticastFeaturePimBsrRpCandidateArgs> pimBsrRpCandidates) {
            return pimBsrRpCandidates(Output.of(pimBsrRpCandidates));
        }

        /**
         * @param pimBsrRpCandidates Set RP Discovery Scope
         * 
         * @return builder
         * 
         */
        public Builder pimBsrRpCandidates(ServiceMulticastFeaturePimBsrRpCandidateArgs... pimBsrRpCandidates) {
            return pimBsrRpCandidates(List.of(pimBsrRpCandidates));
        }

        /**
         * @param pimInterfaces Set PIM interface parameters
         * 
         * @return builder
         * 
         */
        public Builder pimInterfaces(@Nullable Output<List<ServiceMulticastFeaturePimInterfaceArgs>> pimInterfaces) {
            $.pimInterfaces = pimInterfaces;
            return this;
        }

        /**
         * @param pimInterfaces Set PIM interface parameters
         * 
         * @return builder
         * 
         */
        public Builder pimInterfaces(List<ServiceMulticastFeaturePimInterfaceArgs> pimInterfaces) {
            return pimInterfaces(Output.of(pimInterfaces));
        }

        /**
         * @param pimInterfaces Set PIM interface parameters
         * 
         * @return builder
         * 
         */
        public Builder pimInterfaces(ServiceMulticastFeaturePimInterfaceArgs... pimInterfaces) {
            return pimInterfaces(List.of(pimInterfaces));
        }

        /**
         * @param pimSourceSpecificMulticastAccessList Set Access List for PIM SSM
         * 
         * @return builder
         * 
         */
        public Builder pimSourceSpecificMulticastAccessList(@Nullable Output<String> pimSourceSpecificMulticastAccessList) {
            $.pimSourceSpecificMulticastAccessList = pimSourceSpecificMulticastAccessList;
            return this;
        }

        /**
         * @param pimSourceSpecificMulticastAccessList Set Access List for PIM SSM
         * 
         * @return builder
         * 
         */
        public Builder pimSourceSpecificMulticastAccessList(String pimSourceSpecificMulticastAccessList) {
            return pimSourceSpecificMulticastAccessList(Output.of(pimSourceSpecificMulticastAccessList));
        }

        /**
         * @param pimSourceSpecificMulticastAccessListVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder pimSourceSpecificMulticastAccessListVariable(@Nullable Output<String> pimSourceSpecificMulticastAccessListVariable) {
            $.pimSourceSpecificMulticastAccessListVariable = pimSourceSpecificMulticastAccessListVariable;
            return this;
        }

        /**
         * @param pimSourceSpecificMulticastAccessListVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder pimSourceSpecificMulticastAccessListVariable(String pimSourceSpecificMulticastAccessListVariable) {
            return pimSourceSpecificMulticastAccessListVariable(Output.of(pimSourceSpecificMulticastAccessListVariable));
        }

        /**
         * @param pimSourceSpecificMulticastEnable turn SSM on/off
         * 
         * @return builder
         * 
         */
        public Builder pimSourceSpecificMulticastEnable(Output<Boolean> pimSourceSpecificMulticastEnable) {
            $.pimSourceSpecificMulticastEnable = pimSourceSpecificMulticastEnable;
            return this;
        }

        /**
         * @param pimSourceSpecificMulticastEnable turn SSM on/off
         * 
         * @return builder
         * 
         */
        public Builder pimSourceSpecificMulticastEnable(Boolean pimSourceSpecificMulticastEnable) {
            return pimSourceSpecificMulticastEnable(Output.of(pimSourceSpecificMulticastEnable));
        }

        /**
         * @param pimSptThreshold Set when PIM router joins the SPT (kbps)
         *   - Choices: `0`, `infinity`
         *   - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder pimSptThreshold(@Nullable Output<String> pimSptThreshold) {
            $.pimSptThreshold = pimSptThreshold;
            return this;
        }

        /**
         * @param pimSptThreshold Set when PIM router joins the SPT (kbps)
         *   - Choices: `0`, `infinity`
         *   - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder pimSptThreshold(String pimSptThreshold) {
            return pimSptThreshold(Output.of(pimSptThreshold));
        }

        /**
         * @param pimSptThresholdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder pimSptThresholdVariable(@Nullable Output<String> pimSptThresholdVariable) {
            $.pimSptThresholdVariable = pimSptThresholdVariable;
            return this;
        }

        /**
         * @param pimSptThresholdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder pimSptThresholdVariable(String pimSptThresholdVariable) {
            return pimSptThresholdVariable(Output.of(pimSptThresholdVariable));
        }

        /**
         * @param sptOnly Shortest Path Tree (SPT) Only Mode
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder sptOnly(@Nullable Output<Boolean> sptOnly) {
            $.sptOnly = sptOnly;
            return this;
        }

        /**
         * @param sptOnly Shortest Path Tree (SPT) Only Mode
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder sptOnly(Boolean sptOnly) {
            return sptOnly(Output.of(sptOnly));
        }

        /**
         * @param sptOnlyVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sptOnlyVariable(@Nullable Output<String> sptOnlyVariable) {
            $.sptOnlyVariable = sptOnlyVariable;
            return this;
        }

        /**
         * @param sptOnlyVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sptOnlyVariable(String sptOnlyVariable) {
            return sptOnlyVariable(Output.of(sptOnlyVariable));
        }

        /**
         * @param staticRpAddresses Set Static RP Address(es)
         * 
         * @return builder
         * 
         */
        public Builder staticRpAddresses(@Nullable Output<List<ServiceMulticastFeatureStaticRpAddressArgs>> staticRpAddresses) {
            $.staticRpAddresses = staticRpAddresses;
            return this;
        }

        /**
         * @param staticRpAddresses Set Static RP Address(es)
         * 
         * @return builder
         * 
         */
        public Builder staticRpAddresses(List<ServiceMulticastFeatureStaticRpAddressArgs> staticRpAddresses) {
            return staticRpAddresses(Output.of(staticRpAddresses));
        }

        /**
         * @param staticRpAddresses Set Static RP Address(es)
         * 
         * @return builder
         * 
         */
        public Builder staticRpAddresses(ServiceMulticastFeatureStaticRpAddressArgs... staticRpAddresses) {
            return staticRpAddresses(List.of(staticRpAddresses));
        }

        public ServiceMulticastFeatureArgs build() {
            if ($.featureProfileId == null) {
                throw new MissingRequiredPropertyException("ServiceMulticastFeatureArgs", "featureProfileId");
            }
            if ($.pimSourceSpecificMulticastEnable == null) {
                throw new MissingRequiredPropertyException("ServiceMulticastFeatureArgs", "pimSourceSpecificMulticastEnable");
            }
            return $;
        }
    }

}
