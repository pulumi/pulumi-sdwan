// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCiscoThousandeyesFeatureTemplateVirtualApplication {
    /**
     * @return List of Virtual applications
     * 
     */
    private String applicationType;
    /**
     * @return List of Virtual applications
     * 
     */
    private String instanceId;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private Boolean optional;
    /**
     * @return Set the Account Group Token
     * 
     */
    private String teAccountGroupToken;
    /**
     * @return Variable name
     * 
     */
    private String teAccountGroupTokenVariable;
    /**
     * @return Set the Agent IP Address
     * 
     */
    private String teAgentIp;
    /**
     * @return Variable name
     * 
     */
    private String teAgentIpVariable;
    /**
     * @return Set the Agent default gateway
     * 
     */
    private String teDefaultGateway;
    /**
     * @return Variable name
     * 
     */
    private String teDefaultGatewayVariable;
    /**
     * @return Set the host name
     * 
     */
    private String teHostname;
    /**
     * @return Variable name
     * 
     */
    private String teHostnameVariable;
    /**
     * @return Set the name server
     * 
     */
    private String teNameServer;
    /**
     * @return Variable name
     * 
     */
    private String teNameServerVariable;
    /**
     * @return PAC URL
     * 
     */
    private String tePacUrl;
    /**
     * @return Variable name
     * 
     */
    private String tePacUrlVariable;
    /**
     * @return Set the proxy host
     * 
     */
    private String teProxyHost;
    /**
     * @return Variable name
     * 
     */
    private String teProxyHostVariable;
    /**
     * @return Set the proxy port
     * 
     */
    private Integer teProxyPort;
    /**
     * @return Variable name
     * 
     */
    private String teProxyPortVariable;
    /**
     * @return VPN number
     * 
     */
    private Integer teVpn;
    /**
     * @return Variable name
     * 
     */
    private String teVpnVariable;
    /**
     * @return Web Proxy Type
     * 
     */
    private String teWebProxyType;

    private GetCiscoThousandeyesFeatureTemplateVirtualApplication() {}
    /**
     * @return List of Virtual applications
     * 
     */
    public String applicationType() {
        return this.applicationType;
    }
    /**
     * @return List of Virtual applications
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Boolean optional() {
        return this.optional;
    }
    /**
     * @return Set the Account Group Token
     * 
     */
    public String teAccountGroupToken() {
        return this.teAccountGroupToken;
    }
    /**
     * @return Variable name
     * 
     */
    public String teAccountGroupTokenVariable() {
        return this.teAccountGroupTokenVariable;
    }
    /**
     * @return Set the Agent IP Address
     * 
     */
    public String teAgentIp() {
        return this.teAgentIp;
    }
    /**
     * @return Variable name
     * 
     */
    public String teAgentIpVariable() {
        return this.teAgentIpVariable;
    }
    /**
     * @return Set the Agent default gateway
     * 
     */
    public String teDefaultGateway() {
        return this.teDefaultGateway;
    }
    /**
     * @return Variable name
     * 
     */
    public String teDefaultGatewayVariable() {
        return this.teDefaultGatewayVariable;
    }
    /**
     * @return Set the host name
     * 
     */
    public String teHostname() {
        return this.teHostname;
    }
    /**
     * @return Variable name
     * 
     */
    public String teHostnameVariable() {
        return this.teHostnameVariable;
    }
    /**
     * @return Set the name server
     * 
     */
    public String teNameServer() {
        return this.teNameServer;
    }
    /**
     * @return Variable name
     * 
     */
    public String teNameServerVariable() {
        return this.teNameServerVariable;
    }
    /**
     * @return PAC URL
     * 
     */
    public String tePacUrl() {
        return this.tePacUrl;
    }
    /**
     * @return Variable name
     * 
     */
    public String tePacUrlVariable() {
        return this.tePacUrlVariable;
    }
    /**
     * @return Set the proxy host
     * 
     */
    public String teProxyHost() {
        return this.teProxyHost;
    }
    /**
     * @return Variable name
     * 
     */
    public String teProxyHostVariable() {
        return this.teProxyHostVariable;
    }
    /**
     * @return Set the proxy port
     * 
     */
    public Integer teProxyPort() {
        return this.teProxyPort;
    }
    /**
     * @return Variable name
     * 
     */
    public String teProxyPortVariable() {
        return this.teProxyPortVariable;
    }
    /**
     * @return VPN number
     * 
     */
    public Integer teVpn() {
        return this.teVpn;
    }
    /**
     * @return Variable name
     * 
     */
    public String teVpnVariable() {
        return this.teVpnVariable;
    }
    /**
     * @return Web Proxy Type
     * 
     */
    public String teWebProxyType() {
        return this.teWebProxyType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCiscoThousandeyesFeatureTemplateVirtualApplication defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationType;
        private String instanceId;
        private Boolean optional;
        private String teAccountGroupToken;
        private String teAccountGroupTokenVariable;
        private String teAgentIp;
        private String teAgentIpVariable;
        private String teDefaultGateway;
        private String teDefaultGatewayVariable;
        private String teHostname;
        private String teHostnameVariable;
        private String teNameServer;
        private String teNameServerVariable;
        private String tePacUrl;
        private String tePacUrlVariable;
        private String teProxyHost;
        private String teProxyHostVariable;
        private Integer teProxyPort;
        private String teProxyPortVariable;
        private Integer teVpn;
        private String teVpnVariable;
        private String teWebProxyType;
        public Builder() {}
        public Builder(GetCiscoThousandeyesFeatureTemplateVirtualApplication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationType = defaults.applicationType;
    	      this.instanceId = defaults.instanceId;
    	      this.optional = defaults.optional;
    	      this.teAccountGroupToken = defaults.teAccountGroupToken;
    	      this.teAccountGroupTokenVariable = defaults.teAccountGroupTokenVariable;
    	      this.teAgentIp = defaults.teAgentIp;
    	      this.teAgentIpVariable = defaults.teAgentIpVariable;
    	      this.teDefaultGateway = defaults.teDefaultGateway;
    	      this.teDefaultGatewayVariable = defaults.teDefaultGatewayVariable;
    	      this.teHostname = defaults.teHostname;
    	      this.teHostnameVariable = defaults.teHostnameVariable;
    	      this.teNameServer = defaults.teNameServer;
    	      this.teNameServerVariable = defaults.teNameServerVariable;
    	      this.tePacUrl = defaults.tePacUrl;
    	      this.tePacUrlVariable = defaults.tePacUrlVariable;
    	      this.teProxyHost = defaults.teProxyHost;
    	      this.teProxyHostVariable = defaults.teProxyHostVariable;
    	      this.teProxyPort = defaults.teProxyPort;
    	      this.teProxyPortVariable = defaults.teProxyPortVariable;
    	      this.teVpn = defaults.teVpn;
    	      this.teVpnVariable = defaults.teVpnVariable;
    	      this.teWebProxyType = defaults.teWebProxyType;
        }

        @CustomType.Setter
        public Builder applicationType(String applicationType) {
            if (applicationType == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "applicationType");
            }
            this.applicationType = applicationType;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder optional(Boolean optional) {
            if (optional == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "optional");
            }
            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder teAccountGroupToken(String teAccountGroupToken) {
            if (teAccountGroupToken == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "teAccountGroupToken");
            }
            this.teAccountGroupToken = teAccountGroupToken;
            return this;
        }
        @CustomType.Setter
        public Builder teAccountGroupTokenVariable(String teAccountGroupTokenVariable) {
            if (teAccountGroupTokenVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "teAccountGroupTokenVariable");
            }
            this.teAccountGroupTokenVariable = teAccountGroupTokenVariable;
            return this;
        }
        @CustomType.Setter
        public Builder teAgentIp(String teAgentIp) {
            if (teAgentIp == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "teAgentIp");
            }
            this.teAgentIp = teAgentIp;
            return this;
        }
        @CustomType.Setter
        public Builder teAgentIpVariable(String teAgentIpVariable) {
            if (teAgentIpVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "teAgentIpVariable");
            }
            this.teAgentIpVariable = teAgentIpVariable;
            return this;
        }
        @CustomType.Setter
        public Builder teDefaultGateway(String teDefaultGateway) {
            if (teDefaultGateway == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "teDefaultGateway");
            }
            this.teDefaultGateway = teDefaultGateway;
            return this;
        }
        @CustomType.Setter
        public Builder teDefaultGatewayVariable(String teDefaultGatewayVariable) {
            if (teDefaultGatewayVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "teDefaultGatewayVariable");
            }
            this.teDefaultGatewayVariable = teDefaultGatewayVariable;
            return this;
        }
        @CustomType.Setter
        public Builder teHostname(String teHostname) {
            if (teHostname == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "teHostname");
            }
            this.teHostname = teHostname;
            return this;
        }
        @CustomType.Setter
        public Builder teHostnameVariable(String teHostnameVariable) {
            if (teHostnameVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "teHostnameVariable");
            }
            this.teHostnameVariable = teHostnameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder teNameServer(String teNameServer) {
            if (teNameServer == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "teNameServer");
            }
            this.teNameServer = teNameServer;
            return this;
        }
        @CustomType.Setter
        public Builder teNameServerVariable(String teNameServerVariable) {
            if (teNameServerVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "teNameServerVariable");
            }
            this.teNameServerVariable = teNameServerVariable;
            return this;
        }
        @CustomType.Setter
        public Builder tePacUrl(String tePacUrl) {
            if (tePacUrl == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "tePacUrl");
            }
            this.tePacUrl = tePacUrl;
            return this;
        }
        @CustomType.Setter
        public Builder tePacUrlVariable(String tePacUrlVariable) {
            if (tePacUrlVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "tePacUrlVariable");
            }
            this.tePacUrlVariable = tePacUrlVariable;
            return this;
        }
        @CustomType.Setter
        public Builder teProxyHost(String teProxyHost) {
            if (teProxyHost == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "teProxyHost");
            }
            this.teProxyHost = teProxyHost;
            return this;
        }
        @CustomType.Setter
        public Builder teProxyHostVariable(String teProxyHostVariable) {
            if (teProxyHostVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "teProxyHostVariable");
            }
            this.teProxyHostVariable = teProxyHostVariable;
            return this;
        }
        @CustomType.Setter
        public Builder teProxyPort(Integer teProxyPort) {
            if (teProxyPort == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "teProxyPort");
            }
            this.teProxyPort = teProxyPort;
            return this;
        }
        @CustomType.Setter
        public Builder teProxyPortVariable(String teProxyPortVariable) {
            if (teProxyPortVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "teProxyPortVariable");
            }
            this.teProxyPortVariable = teProxyPortVariable;
            return this;
        }
        @CustomType.Setter
        public Builder teVpn(Integer teVpn) {
            if (teVpn == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "teVpn");
            }
            this.teVpn = teVpn;
            return this;
        }
        @CustomType.Setter
        public Builder teVpnVariable(String teVpnVariable) {
            if (teVpnVariable == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "teVpnVariable");
            }
            this.teVpnVariable = teVpnVariable;
            return this;
        }
        @CustomType.Setter
        public Builder teWebProxyType(String teWebProxyType) {
            if (teWebProxyType == null) {
              throw new MissingRequiredPropertyException("GetCiscoThousandeyesFeatureTemplateVirtualApplication", "teWebProxyType");
            }
            this.teWebProxyType = teWebProxyType;
            return this;
        }
        public GetCiscoThousandeyesFeatureTemplateVirtualApplication build() {
            final var _resultValue = new GetCiscoThousandeyesFeatureTemplateVirtualApplication();
            _resultValue.applicationType = applicationType;
            _resultValue.instanceId = instanceId;
            _resultValue.optional = optional;
            _resultValue.teAccountGroupToken = teAccountGroupToken;
            _resultValue.teAccountGroupTokenVariable = teAccountGroupTokenVariable;
            _resultValue.teAgentIp = teAgentIp;
            _resultValue.teAgentIpVariable = teAgentIpVariable;
            _resultValue.teDefaultGateway = teDefaultGateway;
            _resultValue.teDefaultGatewayVariable = teDefaultGatewayVariable;
            _resultValue.teHostname = teHostname;
            _resultValue.teHostnameVariable = teHostnameVariable;
            _resultValue.teNameServer = teNameServer;
            _resultValue.teNameServerVariable = teNameServerVariable;
            _resultValue.tePacUrl = tePacUrl;
            _resultValue.tePacUrlVariable = tePacUrlVariable;
            _resultValue.teProxyHost = teProxyHost;
            _resultValue.teProxyHostVariable = teProxyHostVariable;
            _resultValue.teProxyPort = teProxyPort;
            _resultValue.teProxyPortVariable = teProxyPortVariable;
            _resultValue.teVpn = teVpn;
            _resultValue.teVpnVariable = teVpnVariable;
            _resultValue.teWebProxyType = teWebProxyType;
            return _resultValue;
        }
    }
}
