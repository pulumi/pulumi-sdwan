// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.VpnInterfaceSviFeatureTemplateIpv4VrrpIpv4SecondaryAddressArgs;
import com.pulumi.sdwan.inputs.VpnInterfaceSviFeatureTemplateIpv4VrrpTrackingObjectArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpnInterfaceSviFeatureTemplateIpv4VrrpArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpnInterfaceSviFeatureTemplateIpv4VrrpArgs Empty = new VpnInterfaceSviFeatureTemplateIpv4VrrpArgs();

    /**
     * Group ID
     *   - Range: `1`-`255`
     * 
     */
    @Import(name="groupId")
    private @Nullable Output<Integer> groupId;

    /**
     * @return Group ID
     *   - Range: `1`-`255`
     * 
     */
    public Optional<Output<Integer>> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="groupIdVariable")
    private @Nullable Output<String> groupIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> groupIdVariable() {
        return Optional.ofNullable(this.groupIdVariable);
    }

    /**
     * Assign IP Address
     * 
     */
    @Import(name="ipv4Address")
    private @Nullable Output<String> ipv4Address;

    /**
     * @return Assign IP Address
     * 
     */
    public Optional<Output<String>> ipv4Address() {
        return Optional.ofNullable(this.ipv4Address);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4AddressVariable")
    private @Nullable Output<String> ipv4AddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4AddressVariable() {
        return Optional.ofNullable(this.ipv4AddressVariable);
    }

    /**
     * VRRP Secondary IP address
     * 
     */
    @Import(name="ipv4SecondaryAddresses")
    private @Nullable Output<List<VpnInterfaceSviFeatureTemplateIpv4VrrpIpv4SecondaryAddressArgs>> ipv4SecondaryAddresses;

    /**
     * @return VRRP Secondary IP address
     * 
     */
    public Optional<Output<List<VpnInterfaceSviFeatureTemplateIpv4VrrpIpv4SecondaryAddressArgs>>> ipv4SecondaryAddresses() {
        return Optional.ofNullable(this.ipv4SecondaryAddresses);
    }

    /**
     * Indicates if list item is considered optional.
     * 
     */
    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    /**
     * Set priority
     *   - Range: `1`-`254`
     *   - Default value: `100`
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return Set priority
     *   - Range: `1`-`254`
     *   - Default value: `100`
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="priorityVariable")
    private @Nullable Output<String> priorityVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> priorityVariable() {
        return Optional.ofNullable(this.priorityVariable);
    }

    /**
     * Timer interval for successive advertisements, in milliseconds
     *   - Range: `100`-`40950`
     *   - Default value: `100`
     * 
     */
    @Import(name="timer")
    private @Nullable Output<Integer> timer;

    /**
     * @return Timer interval for successive advertisements, in milliseconds
     *   - Range: `100`-`40950`
     *   - Default value: `100`
     * 
     */
    public Optional<Output<Integer>> timer() {
        return Optional.ofNullable(this.timer);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="timerVariable")
    private @Nullable Output<String> timerVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> timerVariable() {
        return Optional.ofNullable(this.timerVariable);
    }

    /**
     * change TLOC preference
     *   - Default value: `false`
     * 
     */
    @Import(name="tlocPreferenceChange")
    private @Nullable Output<Boolean> tlocPreferenceChange;

    /**
     * @return change TLOC preference
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tlocPreferenceChange() {
        return Optional.ofNullable(this.tlocPreferenceChange);
    }

    /**
     * Set tloc preference change value
     *   - Range: `1`-`4294967295`
     * 
     */
    @Import(name="tlocPreferenceChangeValue")
    private @Nullable Output<Integer> tlocPreferenceChangeValue;

    /**
     * @return Set tloc preference change value
     *   - Range: `1`-`4294967295`
     * 
     */
    public Optional<Output<Integer>> tlocPreferenceChangeValue() {
        return Optional.ofNullable(this.tlocPreferenceChangeValue);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tlocPreferenceChangeValueVariable")
    private @Nullable Output<String> tlocPreferenceChangeValueVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tlocPreferenceChangeValueVariable() {
        return Optional.ofNullable(this.tlocPreferenceChangeValueVariable);
    }

    /**
     * Track OMP status
     *   - Default value: `false`
     * 
     */
    @Import(name="trackOmp")
    private @Nullable Output<Boolean> trackOmp;

    /**
     * @return Track OMP status
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> trackOmp() {
        return Optional.ofNullable(this.trackOmp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="trackOmpVariable")
    private @Nullable Output<String> trackOmpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> trackOmpVariable() {
        return Optional.ofNullable(this.trackOmpVariable);
    }

    /**
     * Track Prefix List
     * 
     */
    @Import(name="trackPrefixList")
    private @Nullable Output<String> trackPrefixList;

    /**
     * @return Track Prefix List
     * 
     */
    public Optional<Output<String>> trackPrefixList() {
        return Optional.ofNullable(this.trackPrefixList);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="trackPrefixListVariable")
    private @Nullable Output<String> trackPrefixListVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> trackPrefixListVariable() {
        return Optional.ofNullable(this.trackPrefixListVariable);
    }

    /**
     * tracking object for VRRP configuration
     * 
     */
    @Import(name="trackingObjects")
    private @Nullable Output<List<VpnInterfaceSviFeatureTemplateIpv4VrrpTrackingObjectArgs>> trackingObjects;

    /**
     * @return tracking object for VRRP configuration
     * 
     */
    public Optional<Output<List<VpnInterfaceSviFeatureTemplateIpv4VrrpTrackingObjectArgs>>> trackingObjects() {
        return Optional.ofNullable(this.trackingObjects);
    }

    private VpnInterfaceSviFeatureTemplateIpv4VrrpArgs() {}

    private VpnInterfaceSviFeatureTemplateIpv4VrrpArgs(VpnInterfaceSviFeatureTemplateIpv4VrrpArgs $) {
        this.groupId = $.groupId;
        this.groupIdVariable = $.groupIdVariable;
        this.ipv4Address = $.ipv4Address;
        this.ipv4AddressVariable = $.ipv4AddressVariable;
        this.ipv4SecondaryAddresses = $.ipv4SecondaryAddresses;
        this.optional = $.optional;
        this.priority = $.priority;
        this.priorityVariable = $.priorityVariable;
        this.timer = $.timer;
        this.timerVariable = $.timerVariable;
        this.tlocPreferenceChange = $.tlocPreferenceChange;
        this.tlocPreferenceChangeValue = $.tlocPreferenceChangeValue;
        this.tlocPreferenceChangeValueVariable = $.tlocPreferenceChangeValueVariable;
        this.trackOmp = $.trackOmp;
        this.trackOmpVariable = $.trackOmpVariable;
        this.trackPrefixList = $.trackPrefixList;
        this.trackPrefixListVariable = $.trackPrefixListVariable;
        this.trackingObjects = $.trackingObjects;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpnInterfaceSviFeatureTemplateIpv4VrrpArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpnInterfaceSviFeatureTemplateIpv4VrrpArgs $;

        public Builder() {
            $ = new VpnInterfaceSviFeatureTemplateIpv4VrrpArgs();
        }

        public Builder(VpnInterfaceSviFeatureTemplateIpv4VrrpArgs defaults) {
            $ = new VpnInterfaceSviFeatureTemplateIpv4VrrpArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupId Group ID
         *   - Range: `1`-`255`
         * 
         * @return builder
         * 
         */
        public Builder groupId(@Nullable Output<Integer> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId Group ID
         *   - Range: `1`-`255`
         * 
         * @return builder
         * 
         */
        public Builder groupId(Integer groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param groupIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder groupIdVariable(@Nullable Output<String> groupIdVariable) {
            $.groupIdVariable = groupIdVariable;
            return this;
        }

        /**
         * @param groupIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder groupIdVariable(String groupIdVariable) {
            return groupIdVariable(Output.of(groupIdVariable));
        }

        /**
         * @param ipv4Address Assign IP Address
         * 
         * @return builder
         * 
         */
        public Builder ipv4Address(@Nullable Output<String> ipv4Address) {
            $.ipv4Address = ipv4Address;
            return this;
        }

        /**
         * @param ipv4Address Assign IP Address
         * 
         * @return builder
         * 
         */
        public Builder ipv4Address(String ipv4Address) {
            return ipv4Address(Output.of(ipv4Address));
        }

        /**
         * @param ipv4AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4AddressVariable(@Nullable Output<String> ipv4AddressVariable) {
            $.ipv4AddressVariable = ipv4AddressVariable;
            return this;
        }

        /**
         * @param ipv4AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4AddressVariable(String ipv4AddressVariable) {
            return ipv4AddressVariable(Output.of(ipv4AddressVariable));
        }

        /**
         * @param ipv4SecondaryAddresses VRRP Secondary IP address
         * 
         * @return builder
         * 
         */
        public Builder ipv4SecondaryAddresses(@Nullable Output<List<VpnInterfaceSviFeatureTemplateIpv4VrrpIpv4SecondaryAddressArgs>> ipv4SecondaryAddresses) {
            $.ipv4SecondaryAddresses = ipv4SecondaryAddresses;
            return this;
        }

        /**
         * @param ipv4SecondaryAddresses VRRP Secondary IP address
         * 
         * @return builder
         * 
         */
        public Builder ipv4SecondaryAddresses(List<VpnInterfaceSviFeatureTemplateIpv4VrrpIpv4SecondaryAddressArgs> ipv4SecondaryAddresses) {
            return ipv4SecondaryAddresses(Output.of(ipv4SecondaryAddresses));
        }

        /**
         * @param ipv4SecondaryAddresses VRRP Secondary IP address
         * 
         * @return builder
         * 
         */
        public Builder ipv4SecondaryAddresses(VpnInterfaceSviFeatureTemplateIpv4VrrpIpv4SecondaryAddressArgs... ipv4SecondaryAddresses) {
            return ipv4SecondaryAddresses(List.of(ipv4SecondaryAddresses));
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        /**
         * @param priority Set priority
         *   - Range: `1`-`254`
         *   - Default value: `100`
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Set priority
         *   - Range: `1`-`254`
         *   - Default value: `100`
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param priorityVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder priorityVariable(@Nullable Output<String> priorityVariable) {
            $.priorityVariable = priorityVariable;
            return this;
        }

        /**
         * @param priorityVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder priorityVariable(String priorityVariable) {
            return priorityVariable(Output.of(priorityVariable));
        }

        /**
         * @param timer Timer interval for successive advertisements, in milliseconds
         *   - Range: `100`-`40950`
         *   - Default value: `100`
         * 
         * @return builder
         * 
         */
        public Builder timer(@Nullable Output<Integer> timer) {
            $.timer = timer;
            return this;
        }

        /**
         * @param timer Timer interval for successive advertisements, in milliseconds
         *   - Range: `100`-`40950`
         *   - Default value: `100`
         * 
         * @return builder
         * 
         */
        public Builder timer(Integer timer) {
            return timer(Output.of(timer));
        }

        /**
         * @param timerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder timerVariable(@Nullable Output<String> timerVariable) {
            $.timerVariable = timerVariable;
            return this;
        }

        /**
         * @param timerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder timerVariable(String timerVariable) {
            return timerVariable(Output.of(timerVariable));
        }

        /**
         * @param tlocPreferenceChange change TLOC preference
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tlocPreferenceChange(@Nullable Output<Boolean> tlocPreferenceChange) {
            $.tlocPreferenceChange = tlocPreferenceChange;
            return this;
        }

        /**
         * @param tlocPreferenceChange change TLOC preference
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tlocPreferenceChange(Boolean tlocPreferenceChange) {
            return tlocPreferenceChange(Output.of(tlocPreferenceChange));
        }

        /**
         * @param tlocPreferenceChangeValue Set tloc preference change value
         *   - Range: `1`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder tlocPreferenceChangeValue(@Nullable Output<Integer> tlocPreferenceChangeValue) {
            $.tlocPreferenceChangeValue = tlocPreferenceChangeValue;
            return this;
        }

        /**
         * @param tlocPreferenceChangeValue Set tloc preference change value
         *   - Range: `1`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder tlocPreferenceChangeValue(Integer tlocPreferenceChangeValue) {
            return tlocPreferenceChangeValue(Output.of(tlocPreferenceChangeValue));
        }

        /**
         * @param tlocPreferenceChangeValueVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tlocPreferenceChangeValueVariable(@Nullable Output<String> tlocPreferenceChangeValueVariable) {
            $.tlocPreferenceChangeValueVariable = tlocPreferenceChangeValueVariable;
            return this;
        }

        /**
         * @param tlocPreferenceChangeValueVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tlocPreferenceChangeValueVariable(String tlocPreferenceChangeValueVariable) {
            return tlocPreferenceChangeValueVariable(Output.of(tlocPreferenceChangeValueVariable));
        }

        /**
         * @param trackOmp Track OMP status
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder trackOmp(@Nullable Output<Boolean> trackOmp) {
            $.trackOmp = trackOmp;
            return this;
        }

        /**
         * @param trackOmp Track OMP status
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder trackOmp(Boolean trackOmp) {
            return trackOmp(Output.of(trackOmp));
        }

        /**
         * @param trackOmpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackOmpVariable(@Nullable Output<String> trackOmpVariable) {
            $.trackOmpVariable = trackOmpVariable;
            return this;
        }

        /**
         * @param trackOmpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackOmpVariable(String trackOmpVariable) {
            return trackOmpVariable(Output.of(trackOmpVariable));
        }

        /**
         * @param trackPrefixList Track Prefix List
         * 
         * @return builder
         * 
         */
        public Builder trackPrefixList(@Nullable Output<String> trackPrefixList) {
            $.trackPrefixList = trackPrefixList;
            return this;
        }

        /**
         * @param trackPrefixList Track Prefix List
         * 
         * @return builder
         * 
         */
        public Builder trackPrefixList(String trackPrefixList) {
            return trackPrefixList(Output.of(trackPrefixList));
        }

        /**
         * @param trackPrefixListVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackPrefixListVariable(@Nullable Output<String> trackPrefixListVariable) {
            $.trackPrefixListVariable = trackPrefixListVariable;
            return this;
        }

        /**
         * @param trackPrefixListVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackPrefixListVariable(String trackPrefixListVariable) {
            return trackPrefixListVariable(Output.of(trackPrefixListVariable));
        }

        /**
         * @param trackingObjects tracking object for VRRP configuration
         * 
         * @return builder
         * 
         */
        public Builder trackingObjects(@Nullable Output<List<VpnInterfaceSviFeatureTemplateIpv4VrrpTrackingObjectArgs>> trackingObjects) {
            $.trackingObjects = trackingObjects;
            return this;
        }

        /**
         * @param trackingObjects tracking object for VRRP configuration
         * 
         * @return builder
         * 
         */
        public Builder trackingObjects(List<VpnInterfaceSviFeatureTemplateIpv4VrrpTrackingObjectArgs> trackingObjects) {
            return trackingObjects(Output.of(trackingObjects));
        }

        /**
         * @param trackingObjects tracking object for VRRP configuration
         * 
         * @return builder
         * 
         */
        public Builder trackingObjects(VpnInterfaceSviFeatureTemplateIpv4VrrpTrackingObjectArgs... trackingObjects) {
            return trackingObjects(List.of(trackingObjects));
        }

        public VpnInterfaceSviFeatureTemplateIpv4VrrpArgs build() {
            return $;
        }
    }

}
