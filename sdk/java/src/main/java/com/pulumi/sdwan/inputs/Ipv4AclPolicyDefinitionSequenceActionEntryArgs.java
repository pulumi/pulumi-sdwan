// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class Ipv4AclPolicyDefinitionSequenceActionEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final Ipv4AclPolicyDefinitionSequenceActionEntryArgs Empty = new Ipv4AclPolicyDefinitionSequenceActionEntryArgs();

    /**
     * Class map ID
     * 
     */
    @Import(name="classMapId")
    private @Nullable Output<String> classMapId;

    /**
     * @return Class map ID
     * 
     */
    public Optional<Output<String>> classMapId() {
        return Optional.ofNullable(this.classMapId);
    }

    /**
     * Class map version
     * 
     */
    @Import(name="classMapVersion")
    private @Nullable Output<Integer> classMapVersion;

    /**
     * @return Class map version
     * 
     */
    public Optional<Output<Integer>> classMapVersion() {
        return Optional.ofNullable(this.classMapVersion);
    }

    /**
     * Counter name
     * 
     */
    @Import(name="counterName")
    private @Nullable Output<String> counterName;

    /**
     * @return Counter name
     * 
     */
    public Optional<Output<String>> counterName() {
        return Optional.ofNullable(this.counterName);
    }

    /**
     * Enable logging
     * 
     */
    @Import(name="log")
    private @Nullable Output<Boolean> log;

    /**
     * @return Enable logging
     * 
     */
    public Optional<Output<Boolean>> log() {
        return Optional.ofNullable(this.log);
    }

    /**
     * Mirror ID
     * 
     */
    @Import(name="mirrorId")
    private @Nullable Output<String> mirrorId;

    /**
     * @return Mirror ID
     * 
     */
    public Optional<Output<String>> mirrorId() {
        return Optional.ofNullable(this.mirrorId);
    }

    /**
     * Mirror version
     * 
     */
    @Import(name="mirrorVersion")
    private @Nullable Output<Integer> mirrorVersion;

    /**
     * @return Mirror version
     * 
     */
    public Optional<Output<Integer>> mirrorVersion() {
        return Optional.ofNullable(this.mirrorVersion);
    }

    /**
     * Policer ID
     * 
     */
    @Import(name="policerId")
    private @Nullable Output<String> policerId;

    /**
     * @return Policer ID
     * 
     */
    public Optional<Output<String>> policerId() {
        return Optional.ofNullable(this.policerId);
    }

    /**
     * Policer version
     * 
     */
    @Import(name="policerVersion")
    private @Nullable Output<Integer> policerVersion;

    /**
     * @return Policer version
     * 
     */
    public Optional<Output<Integer>> policerVersion() {
        return Optional.ofNullable(this.policerVersion);
    }

    /**
     * List of set parameters
     * 
     */
    @Import(name="setParameters")
    private @Nullable Output<List<Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs>> setParameters;

    /**
     * @return List of set parameters
     * 
     */
    public Optional<Output<List<Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs>>> setParameters() {
        return Optional.ofNullable(this.setParameters);
    }

    /**
     * Type of action entry
     *   - Choices: `class`, `count`, `set`, `log`, `mirror`, `policer`
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of action entry
     *   - Choices: `class`, `count`, `set`, `log`, `mirror`, `policer`
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private Ipv4AclPolicyDefinitionSequenceActionEntryArgs() {}

    private Ipv4AclPolicyDefinitionSequenceActionEntryArgs(Ipv4AclPolicyDefinitionSequenceActionEntryArgs $) {
        this.classMapId = $.classMapId;
        this.classMapVersion = $.classMapVersion;
        this.counterName = $.counterName;
        this.log = $.log;
        this.mirrorId = $.mirrorId;
        this.mirrorVersion = $.mirrorVersion;
        this.policerId = $.policerId;
        this.policerVersion = $.policerVersion;
        this.setParameters = $.setParameters;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(Ipv4AclPolicyDefinitionSequenceActionEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Ipv4AclPolicyDefinitionSequenceActionEntryArgs $;

        public Builder() {
            $ = new Ipv4AclPolicyDefinitionSequenceActionEntryArgs();
        }

        public Builder(Ipv4AclPolicyDefinitionSequenceActionEntryArgs defaults) {
            $ = new Ipv4AclPolicyDefinitionSequenceActionEntryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param classMapId Class map ID
         * 
         * @return builder
         * 
         */
        public Builder classMapId(@Nullable Output<String> classMapId) {
            $.classMapId = classMapId;
            return this;
        }

        /**
         * @param classMapId Class map ID
         * 
         * @return builder
         * 
         */
        public Builder classMapId(String classMapId) {
            return classMapId(Output.of(classMapId));
        }

        /**
         * @param classMapVersion Class map version
         * 
         * @return builder
         * 
         */
        public Builder classMapVersion(@Nullable Output<Integer> classMapVersion) {
            $.classMapVersion = classMapVersion;
            return this;
        }

        /**
         * @param classMapVersion Class map version
         * 
         * @return builder
         * 
         */
        public Builder classMapVersion(Integer classMapVersion) {
            return classMapVersion(Output.of(classMapVersion));
        }

        /**
         * @param counterName Counter name
         * 
         * @return builder
         * 
         */
        public Builder counterName(@Nullable Output<String> counterName) {
            $.counterName = counterName;
            return this;
        }

        /**
         * @param counterName Counter name
         * 
         * @return builder
         * 
         */
        public Builder counterName(String counterName) {
            return counterName(Output.of(counterName));
        }

        /**
         * @param log Enable logging
         * 
         * @return builder
         * 
         */
        public Builder log(@Nullable Output<Boolean> log) {
            $.log = log;
            return this;
        }

        /**
         * @param log Enable logging
         * 
         * @return builder
         * 
         */
        public Builder log(Boolean log) {
            return log(Output.of(log));
        }

        /**
         * @param mirrorId Mirror ID
         * 
         * @return builder
         * 
         */
        public Builder mirrorId(@Nullable Output<String> mirrorId) {
            $.mirrorId = mirrorId;
            return this;
        }

        /**
         * @param mirrorId Mirror ID
         * 
         * @return builder
         * 
         */
        public Builder mirrorId(String mirrorId) {
            return mirrorId(Output.of(mirrorId));
        }

        /**
         * @param mirrorVersion Mirror version
         * 
         * @return builder
         * 
         */
        public Builder mirrorVersion(@Nullable Output<Integer> mirrorVersion) {
            $.mirrorVersion = mirrorVersion;
            return this;
        }

        /**
         * @param mirrorVersion Mirror version
         * 
         * @return builder
         * 
         */
        public Builder mirrorVersion(Integer mirrorVersion) {
            return mirrorVersion(Output.of(mirrorVersion));
        }

        /**
         * @param policerId Policer ID
         * 
         * @return builder
         * 
         */
        public Builder policerId(@Nullable Output<String> policerId) {
            $.policerId = policerId;
            return this;
        }

        /**
         * @param policerId Policer ID
         * 
         * @return builder
         * 
         */
        public Builder policerId(String policerId) {
            return policerId(Output.of(policerId));
        }

        /**
         * @param policerVersion Policer version
         * 
         * @return builder
         * 
         */
        public Builder policerVersion(@Nullable Output<Integer> policerVersion) {
            $.policerVersion = policerVersion;
            return this;
        }

        /**
         * @param policerVersion Policer version
         * 
         * @return builder
         * 
         */
        public Builder policerVersion(Integer policerVersion) {
            return policerVersion(Output.of(policerVersion));
        }

        /**
         * @param setParameters List of set parameters
         * 
         * @return builder
         * 
         */
        public Builder setParameters(@Nullable Output<List<Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs>> setParameters) {
            $.setParameters = setParameters;
            return this;
        }

        /**
         * @param setParameters List of set parameters
         * 
         * @return builder
         * 
         */
        public Builder setParameters(List<Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs> setParameters) {
            return setParameters(Output.of(setParameters));
        }

        /**
         * @param setParameters List of set parameters
         * 
         * @return builder
         * 
         */
        public Builder setParameters(Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs... setParameters) {
            return setParameters(List.of(setParameters));
        }

        /**
         * @param type Type of action entry
         *   - Choices: `class`, `count`, `set`, `log`, `mirror`, `policer`
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of action entry
         *   - Choices: `class`, `count`, `set`, `log`, `mirror`, `policer`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Ipv4AclPolicyDefinitionSequenceActionEntryArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("Ipv4AclPolicyDefinitionSequenceActionEntryArgs", "type");
            }
            return $;
        }
    }

}
