// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RoutePolicyDefinitionSequenceActionEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final RoutePolicyDefinitionSequenceActionEntryArgs Empty = new RoutePolicyDefinitionSequenceActionEntryArgs();

    /**
     * Aggregator
     *   - Range: `0`-`4294967295`
     * 
     */
    @Import(name="aggregator")
    private @Nullable Output<Integer> aggregator;

    /**
     * @return Aggregator
     *   - Range: `0`-`4294967295`
     * 
     */
    public Optional<Output<Integer>> aggregator() {
        return Optional.ofNullable(this.aggregator);
    }

    /**
     * IP address
     * 
     */
    @Import(name="aggregatorIpAddress")
    private @Nullable Output<String> aggregatorIpAddress;

    /**
     * @return IP address
     * 
     */
    public Optional<Output<String>> aggregatorIpAddress() {
        return Optional.ofNullable(this.aggregatorIpAddress);
    }

    /**
     * Space separated list of ASN to exclude
     * 
     */
    @Import(name="asPathExclude")
    private @Nullable Output<String> asPathExclude;

    /**
     * @return Space separated list of ASN to exclude
     * 
     */
    public Optional<Output<String>> asPathExclude() {
        return Optional.ofNullable(this.asPathExclude);
    }

    /**
     * Space separated list of ASN to prepend
     * 
     */
    @Import(name="asPathPrepend")
    private @Nullable Output<String> asPathPrepend;

    /**
     * @return Space separated list of ASN to prepend
     * 
     */
    public Optional<Output<String>> asPathPrepend() {
        return Optional.ofNullable(this.asPathPrepend);
    }

    /**
     * Atomic aggregate
     * 
     */
    @Import(name="atomicAggregate")
    private @Nullable Output<Boolean> atomicAggregate;

    /**
     * @return Atomic aggregate
     * 
     */
    public Optional<Output<Boolean>> atomicAggregate() {
        return Optional.ofNullable(this.atomicAggregate);
    }

    /**
     * Community value, e.g. `1000:10000` or `internet` or `local-AS`
     * 
     */
    @Import(name="community")
    private @Nullable Output<String> community;

    /**
     * @return Community value, e.g. `1000:10000` or `internet` or `local-AS`
     * 
     */
    public Optional<Output<String>> community() {
        return Optional.ofNullable(this.community);
    }

    /**
     * Community additive
     * 
     */
    @Import(name="communityAdditive")
    private @Nullable Output<Boolean> communityAdditive;

    /**
     * @return Community additive
     * 
     */
    public Optional<Output<Boolean>> communityAdditive() {
        return Optional.ofNullable(this.communityAdditive);
    }

    /**
     * Local preference
     *   - Range: `0`-`4294967295`
     * 
     */
    @Import(name="localPreference")
    private @Nullable Output<Integer> localPreference;

    /**
     * @return Local preference
     *   - Range: `0`-`4294967295`
     * 
     */
    public Optional<Output<Integer>> localPreference() {
        return Optional.ofNullable(this.localPreference);
    }

    /**
     * Metric
     *   - Range: `0`-`4294967295`
     * 
     */
    @Import(name="metric")
    private @Nullable Output<Integer> metric;

    /**
     * @return Metric
     *   - Range: `0`-`4294967295`
     * 
     */
    public Optional<Output<Integer>> metric() {
        return Optional.ofNullable(this.metric);
    }

    /**
     * Metric type
     *   - Choices: `type1`, `type2`
     * 
     */
    @Import(name="metricType")
    private @Nullable Output<String> metricType;

    /**
     * @return Metric type
     *   - Choices: `type1`, `type2`
     * 
     */
    public Optional<Output<String>> metricType() {
        return Optional.ofNullable(this.metricType);
    }

    /**
     * Next hop IP
     * 
     */
    @Import(name="nextHop")
    private @Nullable Output<String> nextHop;

    /**
     * @return Next hop IP
     * 
     */
    public Optional<Output<String>> nextHop() {
        return Optional.ofNullable(this.nextHop);
    }

    /**
     * OMP tag
     *   - Range: `0`-`4294967295`
     * 
     */
    @Import(name="ompTag")
    private @Nullable Output<Integer> ompTag;

    /**
     * @return OMP tag
     *   - Range: `0`-`4294967295`
     * 
     */
    public Optional<Output<Integer>> ompTag() {
        return Optional.ofNullable(this.ompTag);
    }

    /**
     * Origin
     *   - Choices: `igp`, `egp`, `incomplete`
     * 
     */
    @Import(name="origin")
    private @Nullable Output<String> origin;

    /**
     * @return Origin
     *   - Choices: `igp`, `egp`, `incomplete`
     * 
     */
    public Optional<Output<String>> origin() {
        return Optional.ofNullable(this.origin);
    }

    /**
     * Originator IP
     * 
     */
    @Import(name="originator")
    private @Nullable Output<String> originator;

    /**
     * @return Originator IP
     * 
     */
    public Optional<Output<String>> originator() {
        return Optional.ofNullable(this.originator);
    }

    /**
     * OSPF tag
     *   - Range: `0`-`4294967295`
     * 
     */
    @Import(name="ospfTag")
    private @Nullable Output<Integer> ospfTag;

    /**
     * @return OSPF tag
     *   - Range: `0`-`4294967295`
     * 
     */
    public Optional<Output<Integer>> ospfTag() {
        return Optional.ofNullable(this.ospfTag);
    }

    /**
     * Type of action entry
     *   - Choices: `aggregator`, `asPath`, `atomicAggregate`, `community`, `communityAdditive`, `localPreference`, `metric`, `weight`, `metricType`, `nextHop`, `ompTag`, `ospfTag`, `origin`, `originator`
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of action entry
     *   - Choices: `aggregator`, `asPath`, `atomicAggregate`, `community`, `communityAdditive`, `localPreference`, `metric`, `weight`, `metricType`, `nextHop`, `ompTag`, `ospfTag`, `origin`, `originator`
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * Weight
     *   - Range: `0`-`4294967295`
     * 
     */
    @Import(name="weight")
    private @Nullable Output<Integer> weight;

    /**
     * @return Weight
     *   - Range: `0`-`4294967295`
     * 
     */
    public Optional<Output<Integer>> weight() {
        return Optional.ofNullable(this.weight);
    }

    private RoutePolicyDefinitionSequenceActionEntryArgs() {}

    private RoutePolicyDefinitionSequenceActionEntryArgs(RoutePolicyDefinitionSequenceActionEntryArgs $) {
        this.aggregator = $.aggregator;
        this.aggregatorIpAddress = $.aggregatorIpAddress;
        this.asPathExclude = $.asPathExclude;
        this.asPathPrepend = $.asPathPrepend;
        this.atomicAggregate = $.atomicAggregate;
        this.community = $.community;
        this.communityAdditive = $.communityAdditive;
        this.localPreference = $.localPreference;
        this.metric = $.metric;
        this.metricType = $.metricType;
        this.nextHop = $.nextHop;
        this.ompTag = $.ompTag;
        this.origin = $.origin;
        this.originator = $.originator;
        this.ospfTag = $.ospfTag;
        this.type = $.type;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoutePolicyDefinitionSequenceActionEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoutePolicyDefinitionSequenceActionEntryArgs $;

        public Builder() {
            $ = new RoutePolicyDefinitionSequenceActionEntryArgs();
        }

        public Builder(RoutePolicyDefinitionSequenceActionEntryArgs defaults) {
            $ = new RoutePolicyDefinitionSequenceActionEntryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aggregator Aggregator
         *   - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder aggregator(@Nullable Output<Integer> aggregator) {
            $.aggregator = aggregator;
            return this;
        }

        /**
         * @param aggregator Aggregator
         *   - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder aggregator(Integer aggregator) {
            return aggregator(Output.of(aggregator));
        }

        /**
         * @param aggregatorIpAddress IP address
         * 
         * @return builder
         * 
         */
        public Builder aggregatorIpAddress(@Nullable Output<String> aggregatorIpAddress) {
            $.aggregatorIpAddress = aggregatorIpAddress;
            return this;
        }

        /**
         * @param aggregatorIpAddress IP address
         * 
         * @return builder
         * 
         */
        public Builder aggregatorIpAddress(String aggregatorIpAddress) {
            return aggregatorIpAddress(Output.of(aggregatorIpAddress));
        }

        /**
         * @param asPathExclude Space separated list of ASN to exclude
         * 
         * @return builder
         * 
         */
        public Builder asPathExclude(@Nullable Output<String> asPathExclude) {
            $.asPathExclude = asPathExclude;
            return this;
        }

        /**
         * @param asPathExclude Space separated list of ASN to exclude
         * 
         * @return builder
         * 
         */
        public Builder asPathExclude(String asPathExclude) {
            return asPathExclude(Output.of(asPathExclude));
        }

        /**
         * @param asPathPrepend Space separated list of ASN to prepend
         * 
         * @return builder
         * 
         */
        public Builder asPathPrepend(@Nullable Output<String> asPathPrepend) {
            $.asPathPrepend = asPathPrepend;
            return this;
        }

        /**
         * @param asPathPrepend Space separated list of ASN to prepend
         * 
         * @return builder
         * 
         */
        public Builder asPathPrepend(String asPathPrepend) {
            return asPathPrepend(Output.of(asPathPrepend));
        }

        /**
         * @param atomicAggregate Atomic aggregate
         * 
         * @return builder
         * 
         */
        public Builder atomicAggregate(@Nullable Output<Boolean> atomicAggregate) {
            $.atomicAggregate = atomicAggregate;
            return this;
        }

        /**
         * @param atomicAggregate Atomic aggregate
         * 
         * @return builder
         * 
         */
        public Builder atomicAggregate(Boolean atomicAggregate) {
            return atomicAggregate(Output.of(atomicAggregate));
        }

        /**
         * @param community Community value, e.g. `1000:10000` or `internet` or `local-AS`
         * 
         * @return builder
         * 
         */
        public Builder community(@Nullable Output<String> community) {
            $.community = community;
            return this;
        }

        /**
         * @param community Community value, e.g. `1000:10000` or `internet` or `local-AS`
         * 
         * @return builder
         * 
         */
        public Builder community(String community) {
            return community(Output.of(community));
        }

        /**
         * @param communityAdditive Community additive
         * 
         * @return builder
         * 
         */
        public Builder communityAdditive(@Nullable Output<Boolean> communityAdditive) {
            $.communityAdditive = communityAdditive;
            return this;
        }

        /**
         * @param communityAdditive Community additive
         * 
         * @return builder
         * 
         */
        public Builder communityAdditive(Boolean communityAdditive) {
            return communityAdditive(Output.of(communityAdditive));
        }

        /**
         * @param localPreference Local preference
         *   - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder localPreference(@Nullable Output<Integer> localPreference) {
            $.localPreference = localPreference;
            return this;
        }

        /**
         * @param localPreference Local preference
         *   - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder localPreference(Integer localPreference) {
            return localPreference(Output.of(localPreference));
        }

        /**
         * @param metric Metric
         *   - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder metric(@Nullable Output<Integer> metric) {
            $.metric = metric;
            return this;
        }

        /**
         * @param metric Metric
         *   - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder metric(Integer metric) {
            return metric(Output.of(metric));
        }

        /**
         * @param metricType Metric type
         *   - Choices: `type1`, `type2`
         * 
         * @return builder
         * 
         */
        public Builder metricType(@Nullable Output<String> metricType) {
            $.metricType = metricType;
            return this;
        }

        /**
         * @param metricType Metric type
         *   - Choices: `type1`, `type2`
         * 
         * @return builder
         * 
         */
        public Builder metricType(String metricType) {
            return metricType(Output.of(metricType));
        }

        /**
         * @param nextHop Next hop IP
         * 
         * @return builder
         * 
         */
        public Builder nextHop(@Nullable Output<String> nextHop) {
            $.nextHop = nextHop;
            return this;
        }

        /**
         * @param nextHop Next hop IP
         * 
         * @return builder
         * 
         */
        public Builder nextHop(String nextHop) {
            return nextHop(Output.of(nextHop));
        }

        /**
         * @param ompTag OMP tag
         *   - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder ompTag(@Nullable Output<Integer> ompTag) {
            $.ompTag = ompTag;
            return this;
        }

        /**
         * @param ompTag OMP tag
         *   - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder ompTag(Integer ompTag) {
            return ompTag(Output.of(ompTag));
        }

        /**
         * @param origin Origin
         *   - Choices: `igp`, `egp`, `incomplete`
         * 
         * @return builder
         * 
         */
        public Builder origin(@Nullable Output<String> origin) {
            $.origin = origin;
            return this;
        }

        /**
         * @param origin Origin
         *   - Choices: `igp`, `egp`, `incomplete`
         * 
         * @return builder
         * 
         */
        public Builder origin(String origin) {
            return origin(Output.of(origin));
        }

        /**
         * @param originator Originator IP
         * 
         * @return builder
         * 
         */
        public Builder originator(@Nullable Output<String> originator) {
            $.originator = originator;
            return this;
        }

        /**
         * @param originator Originator IP
         * 
         * @return builder
         * 
         */
        public Builder originator(String originator) {
            return originator(Output.of(originator));
        }

        /**
         * @param ospfTag OSPF tag
         *   - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder ospfTag(@Nullable Output<Integer> ospfTag) {
            $.ospfTag = ospfTag;
            return this;
        }

        /**
         * @param ospfTag OSPF tag
         *   - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder ospfTag(Integer ospfTag) {
            return ospfTag(Output.of(ospfTag));
        }

        /**
         * @param type Type of action entry
         *   - Choices: `aggregator`, `asPath`, `atomicAggregate`, `community`, `communityAdditive`, `localPreference`, `metric`, `weight`, `metricType`, `nextHop`, `ompTag`, `ospfTag`, `origin`, `originator`
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of action entry
         *   - Choices: `aggregator`, `asPath`, `atomicAggregate`, `community`, `communityAdditive`, `localPreference`, `metric`, `weight`, `metricType`, `nextHop`, `ompTag`, `ospfTag`, `origin`, `originator`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param weight Weight
         *   - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder weight(@Nullable Output<Integer> weight) {
            $.weight = weight;
            return this;
        }

        /**
         * @param weight Weight
         *   - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder weight(Integer weight) {
            return weight(Output.of(weight));
        }

        public RoutePolicyDefinitionSequenceActionEntryArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("RoutePolicyDefinitionSequenceActionEntryArgs", "type");
            }
            return $;
        }
    }

}
