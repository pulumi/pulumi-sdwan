// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransportCellularControllerFeatureArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransportCellularControllerFeatureArgs Empty = new TransportCellularControllerFeatureArgs();

    /**
     * Cellular ID
     * 
     */
    @Import(name="cellularId", required=true)
    private Output<String> cellularId;

    /**
     * @return Cellular ID
     * 
     */
    public Output<String> cellularId() {
        return this.cellularId;
    }

    /**
     * Variable name
     * 
     */
    @Import(name="cellularIdVariable")
    private @Nullable Output<String> cellularIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> cellularIdVariable() {
        return Optional.ofNullable(this.cellularIdVariable);
    }

    /**
     * The description of the Feature
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId", required=true)
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }

    /**
     * Enable/Disable Firmware Auto Sim - Default value: `true`
     * 
     */
    @Import(name="firmwareAutoSim")
    private @Nullable Output<Boolean> firmwareAutoSim;

    /**
     * @return Enable/Disable Firmware Auto Sim - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> firmwareAutoSim() {
        return Optional.ofNullable(this.firmwareAutoSim);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="firmwareAutoSimVariable")
    private @Nullable Output<String> firmwareAutoSimVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> firmwareAutoSimVariable() {
        return Optional.ofNullable(this.firmwareAutoSimVariable);
    }

    /**
     * The name of the Feature
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Set primary SIM slot - Range: `0`-`1`
     * 
     */
    @Import(name="primarySimSlot")
    private @Nullable Output<Integer> primarySimSlot;

    /**
     * @return Set primary SIM slot - Range: `0`-`1`
     * 
     */
    public Optional<Output<Integer>> primarySimSlot() {
        return Optional.ofNullable(this.primarySimSlot);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="primarySimSlotVariable")
    private @Nullable Output<String> primarySimSlotVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> primarySimSlotVariable() {
        return Optional.ofNullable(this.primarySimSlotVariable);
    }

    /**
     * Set SIM failover retries - Range: `0`-`65535`
     * 
     */
    @Import(name="simFailoverRetries")
    private @Nullable Output<Integer> simFailoverRetries;

    /**
     * @return Set SIM failover retries - Range: `0`-`65535`
     * 
     */
    public Optional<Output<Integer>> simFailoverRetries() {
        return Optional.ofNullable(this.simFailoverRetries);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="simFailoverRetriesVariable")
    private @Nullable Output<String> simFailoverRetriesVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> simFailoverRetriesVariable() {
        return Optional.ofNullable(this.simFailoverRetriesVariable);
    }

    /**
     * Set SIM failover timeout in minutes - Range: `3`-`7`
     * 
     */
    @Import(name="simFailoverTimeout")
    private @Nullable Output<Integer> simFailoverTimeout;

    /**
     * @return Set SIM failover timeout in minutes - Range: `3`-`7`
     * 
     */
    public Optional<Output<Integer>> simFailoverTimeout() {
        return Optional.ofNullable(this.simFailoverTimeout);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="simFailoverTimeoutVariable")
    private @Nullable Output<String> simFailoverTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> simFailoverTimeoutVariable() {
        return Optional.ofNullable(this.simFailoverTimeoutVariable);
    }

    private TransportCellularControllerFeatureArgs() {}

    private TransportCellularControllerFeatureArgs(TransportCellularControllerFeatureArgs $) {
        this.cellularId = $.cellularId;
        this.cellularIdVariable = $.cellularIdVariable;
        this.description = $.description;
        this.featureProfileId = $.featureProfileId;
        this.firmwareAutoSim = $.firmwareAutoSim;
        this.firmwareAutoSimVariable = $.firmwareAutoSimVariable;
        this.name = $.name;
        this.primarySimSlot = $.primarySimSlot;
        this.primarySimSlotVariable = $.primarySimSlotVariable;
        this.simFailoverRetries = $.simFailoverRetries;
        this.simFailoverRetriesVariable = $.simFailoverRetriesVariable;
        this.simFailoverTimeout = $.simFailoverTimeout;
        this.simFailoverTimeoutVariable = $.simFailoverTimeoutVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransportCellularControllerFeatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransportCellularControllerFeatureArgs $;

        public Builder() {
            $ = new TransportCellularControllerFeatureArgs();
        }

        public Builder(TransportCellularControllerFeatureArgs defaults) {
            $ = new TransportCellularControllerFeatureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cellularId Cellular ID
         * 
         * @return builder
         * 
         */
        public Builder cellularId(Output<String> cellularId) {
            $.cellularId = cellularId;
            return this;
        }

        /**
         * @param cellularId Cellular ID
         * 
         * @return builder
         * 
         */
        public Builder cellularId(String cellularId) {
            return cellularId(Output.of(cellularId));
        }

        /**
         * @param cellularIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder cellularIdVariable(@Nullable Output<String> cellularIdVariable) {
            $.cellularIdVariable = cellularIdVariable;
            return this;
        }

        /**
         * @param cellularIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder cellularIdVariable(String cellularIdVariable) {
            return cellularIdVariable(Output.of(cellularIdVariable));
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param firmwareAutoSim Enable/Disable Firmware Auto Sim - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder firmwareAutoSim(@Nullable Output<Boolean> firmwareAutoSim) {
            $.firmwareAutoSim = firmwareAutoSim;
            return this;
        }

        /**
         * @param firmwareAutoSim Enable/Disable Firmware Auto Sim - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder firmwareAutoSim(Boolean firmwareAutoSim) {
            return firmwareAutoSim(Output.of(firmwareAutoSim));
        }

        /**
         * @param firmwareAutoSimVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder firmwareAutoSimVariable(@Nullable Output<String> firmwareAutoSimVariable) {
            $.firmwareAutoSimVariable = firmwareAutoSimVariable;
            return this;
        }

        /**
         * @param firmwareAutoSimVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder firmwareAutoSimVariable(String firmwareAutoSimVariable) {
            return firmwareAutoSimVariable(Output.of(firmwareAutoSimVariable));
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param primarySimSlot Set primary SIM slot - Range: `0`-`1`
         * 
         * @return builder
         * 
         */
        public Builder primarySimSlot(@Nullable Output<Integer> primarySimSlot) {
            $.primarySimSlot = primarySimSlot;
            return this;
        }

        /**
         * @param primarySimSlot Set primary SIM slot - Range: `0`-`1`
         * 
         * @return builder
         * 
         */
        public Builder primarySimSlot(Integer primarySimSlot) {
            return primarySimSlot(Output.of(primarySimSlot));
        }

        /**
         * @param primarySimSlotVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder primarySimSlotVariable(@Nullable Output<String> primarySimSlotVariable) {
            $.primarySimSlotVariable = primarySimSlotVariable;
            return this;
        }

        /**
         * @param primarySimSlotVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder primarySimSlotVariable(String primarySimSlotVariable) {
            return primarySimSlotVariable(Output.of(primarySimSlotVariable));
        }

        /**
         * @param simFailoverRetries Set SIM failover retries - Range: `0`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder simFailoverRetries(@Nullable Output<Integer> simFailoverRetries) {
            $.simFailoverRetries = simFailoverRetries;
            return this;
        }

        /**
         * @param simFailoverRetries Set SIM failover retries - Range: `0`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder simFailoverRetries(Integer simFailoverRetries) {
            return simFailoverRetries(Output.of(simFailoverRetries));
        }

        /**
         * @param simFailoverRetriesVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder simFailoverRetriesVariable(@Nullable Output<String> simFailoverRetriesVariable) {
            $.simFailoverRetriesVariable = simFailoverRetriesVariable;
            return this;
        }

        /**
         * @param simFailoverRetriesVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder simFailoverRetriesVariable(String simFailoverRetriesVariable) {
            return simFailoverRetriesVariable(Output.of(simFailoverRetriesVariable));
        }

        /**
         * @param simFailoverTimeout Set SIM failover timeout in minutes - Range: `3`-`7`
         * 
         * @return builder
         * 
         */
        public Builder simFailoverTimeout(@Nullable Output<Integer> simFailoverTimeout) {
            $.simFailoverTimeout = simFailoverTimeout;
            return this;
        }

        /**
         * @param simFailoverTimeout Set SIM failover timeout in minutes - Range: `3`-`7`
         * 
         * @return builder
         * 
         */
        public Builder simFailoverTimeout(Integer simFailoverTimeout) {
            return simFailoverTimeout(Output.of(simFailoverTimeout));
        }

        /**
         * @param simFailoverTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder simFailoverTimeoutVariable(@Nullable Output<String> simFailoverTimeoutVariable) {
            $.simFailoverTimeoutVariable = simFailoverTimeoutVariable;
            return this;
        }

        /**
         * @param simFailoverTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder simFailoverTimeoutVariable(String simFailoverTimeoutVariable) {
            return simFailoverTimeoutVariable(Output.of(simFailoverTimeoutVariable));
        }

        public TransportCellularControllerFeatureArgs build() {
            if ($.cellularId == null) {
                throw new MissingRequiredPropertyException("TransportCellularControllerFeatureArgs", "cellularId");
            }
            if ($.featureProfileId == null) {
                throw new MissingRequiredPropertyException("TransportCellularControllerFeatureArgs", "featureProfileId");
            }
            return $;
        }
    }

}
