// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CiscoDhcpServerFeatureTemplateStaticLease {
    /**
     * @return Set client’s hostname
     * 
     */
    private @Nullable String hostname;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String hostnameVariable;
    /**
     * @return Set client’s static IP address
     * 
     */
    private @Nullable String ipAddress;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String ipAddressVariable;
    /**
     * @return Set MAC address of client
     * 
     */
    private @Nullable String macAddress;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String macAddressVariable;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private @Nullable Boolean optional;

    private CiscoDhcpServerFeatureTemplateStaticLease() {}
    /**
     * @return Set client’s hostname
     * 
     */
    public Optional<String> hostname() {
        return Optional.ofNullable(this.hostname);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> hostnameVariable() {
        return Optional.ofNullable(this.hostnameVariable);
    }
    /**
     * @return Set client’s static IP address
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> ipAddressVariable() {
        return Optional.ofNullable(this.ipAddressVariable);
    }
    /**
     * @return Set MAC address of client
     * 
     */
    public Optional<String> macAddress() {
        return Optional.ofNullable(this.macAddress);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> macAddressVariable() {
        return Optional.ofNullable(this.macAddressVariable);
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Boolean> optional() {
        return Optional.ofNullable(this.optional);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CiscoDhcpServerFeatureTemplateStaticLease defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String hostname;
        private @Nullable String hostnameVariable;
        private @Nullable String ipAddress;
        private @Nullable String ipAddressVariable;
        private @Nullable String macAddress;
        private @Nullable String macAddressVariable;
        private @Nullable Boolean optional;
        public Builder() {}
        public Builder(CiscoDhcpServerFeatureTemplateStaticLease defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostname = defaults.hostname;
    	      this.hostnameVariable = defaults.hostnameVariable;
    	      this.ipAddress = defaults.ipAddress;
    	      this.ipAddressVariable = defaults.ipAddressVariable;
    	      this.macAddress = defaults.macAddress;
    	      this.macAddressVariable = defaults.macAddressVariable;
    	      this.optional = defaults.optional;
        }

        @CustomType.Setter
        public Builder hostname(@Nullable String hostname) {

            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder hostnameVariable(@Nullable String hostnameVariable) {

            this.hostnameVariable = hostnameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(@Nullable String ipAddress) {

            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddressVariable(@Nullable String ipAddressVariable) {

            this.ipAddressVariable = ipAddressVariable;
            return this;
        }
        @CustomType.Setter
        public Builder macAddress(@Nullable String macAddress) {

            this.macAddress = macAddress;
            return this;
        }
        @CustomType.Setter
        public Builder macAddressVariable(@Nullable String macAddressVariable) {

            this.macAddressVariable = macAddressVariable;
            return this;
        }
        @CustomType.Setter
        public Builder optional(@Nullable Boolean optional) {

            this.optional = optional;
            return this;
        }
        public CiscoDhcpServerFeatureTemplateStaticLease build() {
            final var _resultValue = new CiscoDhcpServerFeatureTemplateStaticLease();
            _resultValue.hostname = hostname;
            _resultValue.hostnameVariable = hostnameVariable;
            _resultValue.ipAddress = ipAddress;
            _resultValue.ipAddressVariable = ipAddressVariable;
            _resultValue.macAddress = macAddress;
            _resultValue.macAddressVariable = macAddressVariable;
            _resultValue.optional = optional;
            return _resultValue;
        }
    }
}
