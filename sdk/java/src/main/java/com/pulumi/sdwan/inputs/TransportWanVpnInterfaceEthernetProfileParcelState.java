// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.TransportWanVpnInterfaceEthernetProfileParcelArpArgs;
import com.pulumi.sdwan.inputs.TransportWanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArgs;
import com.pulumi.sdwan.inputs.TransportWanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArgs;
import com.pulumi.sdwan.inputs.TransportWanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArgs;
import com.pulumi.sdwan.inputs.TransportWanVpnInterfaceEthernetProfileParcelNewStaticNatArgs;
import com.pulumi.sdwan.inputs.TransportWanVpnInterfaceEthernetProfileParcelStaticNat66Args;
import com.pulumi.sdwan.inputs.TransportWanVpnInterfaceEthernetProfileParcelTunnelInterfaceEncapsulationArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransportWanVpnInterfaceEthernetProfileParcelState extends com.pulumi.resources.ResourceArgs {

    public static final TransportWanVpnInterfaceEthernetProfileParcelState Empty = new TransportWanVpnInterfaceEthernetProfileParcelState();

    /**
     * Adaptive QoS - Default value: `false`
     * 
     */
    @Import(name="adaptiveQos")
    private @Nullable Output<Boolean> adaptiveQos;

    /**
     * @return Adaptive QoS - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> adaptiveQos() {
        return Optional.ofNullable(this.adaptiveQos);
    }

    /**
     * Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2147483` - Default value: `1200`
     * 
     */
    @Import(name="arpTimeout")
    private @Nullable Output<Integer> arpTimeout;

    /**
     * @return Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2147483` - Default value: `1200`
     * 
     */
    public Optional<Output<Integer>> arpTimeout() {
        return Optional.ofNullable(this.arpTimeout);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="arpTimeoutVariable")
    private @Nullable Output<String> arpTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> arpTimeoutVariable() {
        return Optional.ofNullable(this.arpTimeoutVariable);
    }

    /**
     * Configure ARP entries
     * 
     */
    @Import(name="arps")
    private @Nullable Output<List<TransportWanVpnInterfaceEthernetProfileParcelArpArgs>> arps;

    /**
     * @return Configure ARP entries
     * 
     */
    public Optional<Output<List<TransportWanVpnInterfaceEthernetProfileParcelArpArgs>>> arps() {
        return Optional.ofNullable(this.arps);
    }

    /**
     * Interface auto detect bandwidth - Default value: `false`
     * 
     */
    @Import(name="autoDetectBandwidth")
    private @Nullable Output<Boolean> autoDetectBandwidth;

    /**
     * @return Interface auto detect bandwidth - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> autoDetectBandwidth() {
        return Optional.ofNullable(this.autoDetectBandwidth);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="autoDetectBandwidthVariable")
    private @Nullable Output<String> autoDetectBandwidthVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> autoDetectBandwidthVariable() {
        return Optional.ofNullable(this.autoDetectBandwidthVariable);
    }

    /**
     * Link autonegotiation
     * 
     */
    @Import(name="autonegotiate")
    private @Nullable Output<Boolean> autonegotiate;

    /**
     * @return Link autonegotiation
     * 
     */
    public Optional<Output<Boolean>> autonegotiate() {
        return Optional.ofNullable(this.autonegotiate);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="autonegotiateVariable")
    private @Nullable Output<String> autonegotiateVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> autonegotiateVariable() {
        return Optional.ofNullable(this.autonegotiateVariable);
    }

    /**
     * Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     * 
     */
    @Import(name="bandwidthDownstream")
    private @Nullable Output<Integer> bandwidthDownstream;

    /**
     * @return Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     * 
     */
    public Optional<Output<Integer>> bandwidthDownstream() {
        return Optional.ofNullable(this.bandwidthDownstream);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="bandwidthDownstreamVariable")
    private @Nullable Output<String> bandwidthDownstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> bandwidthDownstreamVariable() {
        return Optional.ofNullable(this.bandwidthDownstreamVariable);
    }

    /**
     * Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     * 
     */
    @Import(name="bandwidthUpstream")
    private @Nullable Output<Integer> bandwidthUpstream;

    /**
     * @return Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     * 
     */
    public Optional<Output<Integer>> bandwidthUpstream() {
        return Optional.ofNullable(this.bandwidthUpstream);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="bandwidthUpstreamVariable")
    private @Nullable Output<String> bandwidthUpstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> bandwidthUpstreamVariable() {
        return Optional.ofNullable(this.bandwidthUpstreamVariable);
    }

    /**
     * Block packets originating from IP address that is not from this source - Default value: `false`
     * 
     */
    @Import(name="blockNonSourceIp")
    private @Nullable Output<Boolean> blockNonSourceIp;

    /**
     * @return Block packets originating from IP address that is not from this source - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> blockNonSourceIp() {
        return Optional.ofNullable(this.blockNonSourceIp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="blockNonSourceIpVariable")
    private @Nullable Output<String> blockNonSourceIpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> blockNonSourceIpVariable() {
        return Optional.ofNullable(this.blockNonSourceIpVariable);
    }

    @Import(name="configDescription")
    private @Nullable Output<String> configDescription;

    public Optional<Output<String>> configDescription() {
        return Optional.ofNullable(this.configDescription);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="configDescriptionVariable")
    private @Nullable Output<String> configDescriptionVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> configDescriptionVariable() {
        return Optional.ofNullable(this.configDescriptionVariable);
    }

    /**
     * The description of the profile parcel
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the profile parcel
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Duplex mode - Choices: `full`, `half`, `auto`
     * 
     */
    @Import(name="duplex")
    private @Nullable Output<String> duplex;

    /**
     * @return Duplex mode - Choices: `full`, `half`, `auto`
     * 
     */
    public Optional<Output<String>> duplex() {
        return Optional.ofNullable(this.duplex);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="duplexVariable")
    private @Nullable Output<String> duplexVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> duplexVariable() {
        return Optional.ofNullable(this.duplexVariable);
    }

    /**
     * Enable DHCPv6
     * 
     */
    @Import(name="enableDhcpv6")
    private @Nullable Output<Boolean> enableDhcpv6;

    /**
     * @return Enable DHCPv6
     * 
     */
    public Optional<Output<Boolean>> enableDhcpv6() {
        return Optional.ofNullable(this.enableDhcpv6);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId")
    private @Nullable Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Optional<Output<String>> featureProfileId() {
        return Optional.ofNullable(this.featureProfileId);
    }

    /**
     * GRE tunnel source IP
     * 
     */
    @Import(name="greTunnelSourceIp")
    private @Nullable Output<String> greTunnelSourceIp;

    /**
     * @return GRE tunnel source IP
     * 
     */
    public Optional<Output<String>> greTunnelSourceIp() {
        return Optional.ofNullable(this.greTunnelSourceIp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="greTunnelSourceIpVariable")
    private @Nullable Output<String> greTunnelSourceIpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> greTunnelSourceIpVariable() {
        return Optional.ofNullable(this.greTunnelSourceIpVariable);
    }

    /**
     * ICMP/ICMPv6 Redirect Disable - Default value: `true`
     * 
     */
    @Import(name="icmpRedirectDisable")
    private @Nullable Output<Boolean> icmpRedirectDisable;

    /**
     * @return ICMP/ICMPv6 Redirect Disable - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> icmpRedirectDisable() {
        return Optional.ofNullable(this.icmpRedirectDisable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="icmpRedirectDisableVariable")
    private @Nullable Output<String> icmpRedirectDisableVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> icmpRedirectDisableVariable() {
        return Optional.ofNullable(this.icmpRedirectDisableVariable);
    }

    @Import(name="interfaceName")
    private @Nullable Output<String> interfaceName;

    public Optional<Output<String>> interfaceName() {
        return Optional.ofNullable(this.interfaceName);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceNameVariable")
    private @Nullable Output<String> interfaceNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceNameVariable() {
        return Optional.ofNullable(this.interfaceNameVariable);
    }

    /**
     * Interface MTU GigabitEthernet0 &lt;1500..1518&gt;, Other GigabitEthernet &lt;1500..9216&gt; in bytes - Range: `1500`-`9216` -
     * Default value: `1500`
     * 
     */
    @Import(name="intrfMtu")
    private @Nullable Output<Integer> intrfMtu;

    /**
     * @return Interface MTU GigabitEthernet0 &lt;1500..1518&gt;, Other GigabitEthernet &lt;1500..9216&gt; in bytes - Range: `1500`-`9216` -
     * Default value: `1500`
     * 
     */
    public Optional<Output<Integer>> intrfMtu() {
        return Optional.ofNullable(this.intrfMtu);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="intrfMtuVariable")
    private @Nullable Output<String> intrfMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> intrfMtuVariable() {
        return Optional.ofNullable(this.intrfMtuVariable);
    }

    /**
     * IP Directed-Broadcast - Default value: `false`
     * 
     */
    @Import(name="ipDirectedBroadcast")
    private @Nullable Output<Boolean> ipDirectedBroadcast;

    /**
     * @return IP Directed-Broadcast - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> ipDirectedBroadcast() {
        return Optional.ofNullable(this.ipDirectedBroadcast);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipDirectedBroadcastVariable")
    private @Nullable Output<String> ipDirectedBroadcastVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipDirectedBroadcastVariable() {
        return Optional.ofNullable(this.ipDirectedBroadcastVariable);
    }

    /**
     * IP MTU for GigabitEthernet main &lt;576..Interface MTU&gt;, GigabitEthernet subinterface &lt;576..9216&gt;, Other Interfaces
     * &lt;576..2000&gt; in bytes - Range: `576`-`9216` - Default value: `1500`
     * 
     */
    @Import(name="ipMtu")
    private @Nullable Output<Integer> ipMtu;

    /**
     * @return IP MTU for GigabitEthernet main &lt;576..Interface MTU&gt;, GigabitEthernet subinterface &lt;576..9216&gt;, Other Interfaces
     * &lt;576..2000&gt; in bytes - Range: `576`-`9216` - Default value: `1500`
     * 
     */
    public Optional<Output<Integer>> ipMtu() {
        return Optional.ofNullable(this.ipMtu);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipMtuVariable")
    private @Nullable Output<String> ipMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipMtuVariable() {
        return Optional.ofNullable(this.ipMtuVariable);
    }

    /**
     * Iperf server for auto bandwidth detect
     * 
     */
    @Import(name="iperfServer")
    private @Nullable Output<String> iperfServer;

    /**
     * @return Iperf server for auto bandwidth detect
     * 
     */
    public Optional<Output<String>> iperfServer() {
        return Optional.ofNullable(this.iperfServer);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="iperfServerVariable")
    private @Nullable Output<String> iperfServerVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> iperfServerVariable() {
        return Optional.ofNullable(this.iperfServerVariable);
    }

    /**
     * IP Address
     * 
     */
    @Import(name="ipv4Address")
    private @Nullable Output<String> ipv4Address;

    /**
     * @return IP Address
     * 
     */
    public Optional<Output<String>> ipv4Address() {
        return Optional.ofNullable(this.ipv4Address);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4AddressVariable")
    private @Nullable Output<String> ipv4AddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4AddressVariable() {
        return Optional.ofNullable(this.ipv4AddressVariable);
    }

    /**
     * DHCP Distance - Range: `1`-`65536`
     * 
     */
    @Import(name="ipv4DhcpDistance")
    private @Nullable Output<Integer> ipv4DhcpDistance;

    /**
     * @return DHCP Distance - Range: `1`-`65536`
     * 
     */
    public Optional<Output<Integer>> ipv4DhcpDistance() {
        return Optional.ofNullable(this.ipv4DhcpDistance);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4DhcpDistanceVariable")
    private @Nullable Output<String> ipv4DhcpDistanceVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4DhcpDistanceVariable() {
        return Optional.ofNullable(this.ipv4DhcpDistanceVariable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4DhcpHelperVariable")
    private @Nullable Output<String> ipv4DhcpHelperVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4DhcpHelperVariable() {
        return Optional.ofNullable(this.ipv4DhcpHelperVariable);
    }

    /**
     * List of DHCP IPv4 helper addresses (min 1, max 8)
     * 
     */
    @Import(name="ipv4DhcpHelpers")
    private @Nullable Output<List<String>> ipv4DhcpHelpers;

    /**
     * @return List of DHCP IPv4 helper addresses (min 1, max 8)
     * 
     */
    public Optional<Output<List<String>>> ipv4DhcpHelpers() {
        return Optional.ofNullable(this.ipv4DhcpHelpers);
    }

    /**
     * Secondary IpV4 Addresses
     * 
     */
    @Import(name="ipv4SecondaryAddresses")
    private @Nullable Output<List<TransportWanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArgs>> ipv4SecondaryAddresses;

    /**
     * @return Secondary IpV4 Addresses
     * 
     */
    public Optional<Output<List<TransportWanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArgs>>> ipv4SecondaryAddresses() {
        return Optional.ofNullable(this.ipv4SecondaryAddresses);
    }

    /**
     * Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     * 
     */
    @Import(name="ipv4SubnetMask")
    private @Nullable Output<String> ipv4SubnetMask;

    /**
     * @return Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     * 
     */
    public Optional<Output<String>> ipv4SubnetMask() {
        return Optional.ofNullable(this.ipv4SubnetMask);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4SubnetMaskVariable")
    private @Nullable Output<String> ipv4SubnetMaskVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4SubnetMaskVariable() {
        return Optional.ofNullable(this.ipv4SubnetMaskVariable);
    }

    /**
     * IPv6 Address Secondary
     * 
     */
    @Import(name="ipv6Address")
    private @Nullable Output<String> ipv6Address;

    /**
     * @return IPv6 Address Secondary
     * 
     */
    public Optional<Output<String>> ipv6Address() {
        return Optional.ofNullable(this.ipv6Address);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv6AddressVariable")
    private @Nullable Output<String> ipv6AddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv6AddressVariable() {
        return Optional.ofNullable(this.ipv6AddressVariable);
    }

    /**
     * secondary IPv6 addresses
     * 
     */
    @Import(name="ipv6DhcpSecondaryAddresses")
    private @Nullable Output<List<TransportWanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArgs>> ipv6DhcpSecondaryAddresses;

    /**
     * @return secondary IPv6 addresses
     * 
     */
    public Optional<Output<List<TransportWanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArgs>>> ipv6DhcpSecondaryAddresses() {
        return Optional.ofNullable(this.ipv6DhcpSecondaryAddresses);
    }

    /**
     * Static secondary IPv6 addresses
     * 
     */
    @Import(name="ipv6SecondaryAddresses")
    private @Nullable Output<List<TransportWanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArgs>> ipv6SecondaryAddresses;

    /**
     * @return Static secondary IPv6 addresses
     * 
     */
    public Optional<Output<List<TransportWanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArgs>>> ipv6SecondaryAddresses() {
        return Optional.ofNullable(this.ipv6SecondaryAddresses);
    }

    /**
     * Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
     * 
     */
    @Import(name="loadInterval")
    private @Nullable Output<Integer> loadInterval;

    /**
     * @return Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
     * 
     */
    public Optional<Output<Integer>> loadInterval() {
        return Optional.ofNullable(this.loadInterval);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="loadIntervalVariable")
    private @Nullable Output<String> loadIntervalVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> loadIntervalVariable() {
        return Optional.ofNullable(this.loadIntervalVariable);
    }

    /**
     * MAC Address
     * 
     */
    @Import(name="macAddress")
    private @Nullable Output<String> macAddress;

    /**
     * @return MAC Address
     * 
     */
    public Optional<Output<String>> macAddress() {
        return Optional.ofNullable(this.macAddress);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="macAddressVariable")
    private @Nullable Output<String> macAddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> macAddressVariable() {
        return Optional.ofNullable(this.macAddressVariable);
    }

    /**
     * Media type - Choices: `auto-select`, `rj45`, `sfp`
     * 
     */
    @Import(name="mediaType")
    private @Nullable Output<String> mediaType;

    /**
     * @return Media type - Choices: `auto-select`, `rj45`, `sfp`
     * 
     */
    public Optional<Output<String>> mediaType() {
        return Optional.ofNullable(this.mediaType);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="mediaTypeVariable")
    private @Nullable Output<String> mediaTypeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> mediaTypeVariable() {
        return Optional.ofNullable(this.mediaTypeVariable);
    }

    /**
     * The name of the profile parcel
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the profile parcel
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * NAT64 on this interface - Default value: `false`
     * 
     */
    @Import(name="nat64")
    private @Nullable Output<Boolean> nat64;

    /**
     * @return NAT64 on this interface - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> nat64() {
        return Optional.ofNullable(this.nat64);
    }

    /**
     * NAT66 on this interface - Default value: `false`
     * 
     */
    @Import(name="nat66")
    private @Nullable Output<Boolean> nat66;

    /**
     * @return NAT66 on this interface - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> nat66() {
        return Optional.ofNullable(this.nat66);
    }

    /**
     * enable Network Address Translation on this interface - Default value: `false`
     * 
     */
    @Import(name="natIpv4")
    private @Nullable Output<Boolean> natIpv4;

    /**
     * @return enable Network Address Translation on this interface - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> natIpv4() {
        return Optional.ofNullable(this.natIpv4);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="natIpv4Variable")
    private @Nullable Output<String> natIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> natIpv4Variable() {
        return Optional.ofNullable(this.natIpv4Variable);
    }

    /**
     * enable Network Address Translation ipv6 on this interface - Default value: `false`
     * 
     */
    @Import(name="natIpv6")
    private @Nullable Output<Boolean> natIpv6;

    /**
     * @return enable Network Address Translation ipv6 on this interface - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> natIpv6() {
        return Optional.ofNullable(this.natIpv6);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="natIpv6Variable")
    private @Nullable Output<String> natIpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> natIpv6Variable() {
        return Optional.ofNullable(this.natIpv6Variable);
    }

    /**
     * NAT Inside Source Loopback Interface
     * 
     */
    @Import(name="natLoopback")
    private @Nullable Output<String> natLoopback;

    /**
     * @return NAT Inside Source Loopback Interface
     * 
     */
    public Optional<Output<String>> natLoopback() {
        return Optional.ofNullable(this.natLoopback);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="natLoopbackVariable")
    private @Nullable Output<String> natLoopbackVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> natLoopbackVariable() {
        return Optional.ofNullable(this.natLoopbackVariable);
    }

    /**
     * NAT Overload - Default value: `true`
     * 
     */
    @Import(name="natOverload")
    private @Nullable Output<Boolean> natOverload;

    /**
     * @return NAT Overload - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> natOverload() {
        return Optional.ofNullable(this.natOverload);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="natOverloadVariable")
    private @Nullable Output<String> natOverloadVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> natOverloadVariable() {
        return Optional.ofNullable(this.natOverloadVariable);
    }

    /**
     * NAT Pool Prefix Length - Range: `1`-`32`
     * 
     */
    @Import(name="natPrefixLength")
    private @Nullable Output<Integer> natPrefixLength;

    /**
     * @return NAT Pool Prefix Length - Range: `1`-`32`
     * 
     */
    public Optional<Output<Integer>> natPrefixLength() {
        return Optional.ofNullable(this.natPrefixLength);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="natPrefixLengthVariable")
    private @Nullable Output<String> natPrefixLengthVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> natPrefixLengthVariable() {
        return Optional.ofNullable(this.natPrefixLengthVariable);
    }

    /**
     * NAT Pool Range End
     * 
     */
    @Import(name="natRangeEnd")
    private @Nullable Output<String> natRangeEnd;

    /**
     * @return NAT Pool Range End
     * 
     */
    public Optional<Output<String>> natRangeEnd() {
        return Optional.ofNullable(this.natRangeEnd);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="natRangeEndVariable")
    private @Nullable Output<String> natRangeEndVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> natRangeEndVariable() {
        return Optional.ofNullable(this.natRangeEndVariable);
    }

    /**
     * NAT Pool Range Start
     * 
     */
    @Import(name="natRangeStart")
    private @Nullable Output<String> natRangeStart;

    /**
     * @return NAT Pool Range Start
     * 
     */
    public Optional<Output<String>> natRangeStart() {
        return Optional.ofNullable(this.natRangeStart);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="natRangeStartVariable")
    private @Nullable Output<String> natRangeStartVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> natRangeStartVariable() {
        return Optional.ofNullable(this.natRangeStartVariable);
    }

    /**
     * Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
     * 
     */
    @Import(name="natTcpTimeout")
    private @Nullable Output<Integer> natTcpTimeout;

    /**
     * @return Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
     * 
     */
    public Optional<Output<Integer>> natTcpTimeout() {
        return Optional.ofNullable(this.natTcpTimeout);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="natTcpTimeoutVariable")
    private @Nullable Output<String> natTcpTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> natTcpTimeoutVariable() {
        return Optional.ofNullable(this.natTcpTimeoutVariable);
    }

    /**
     * NAT Type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
     * 
     */
    @Import(name="natType")
    private @Nullable Output<String> natType;

    /**
     * @return NAT Type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
     * 
     */
    public Optional<Output<String>> natType() {
        return Optional.ofNullable(this.natType);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="natTypeVariable")
    private @Nullable Output<String> natTypeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> natTypeVariable() {
        return Optional.ofNullable(this.natTypeVariable);
    }

    /**
     * Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
     * 
     */
    @Import(name="natUdpTimeout")
    private @Nullable Output<Integer> natUdpTimeout;

    /**
     * @return Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
     * 
     */
    public Optional<Output<Integer>> natUdpTimeout() {
        return Optional.ofNullable(this.natUdpTimeout);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="natUdpTimeoutVariable")
    private @Nullable Output<String> natUdpTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> natUdpTimeoutVariable() {
        return Optional.ofNullable(this.natUdpTimeoutVariable);
    }

    /**
     * static NAT
     * 
     */
    @Import(name="newStaticNats")
    private @Nullable Output<List<TransportWanVpnInterfaceEthernetProfileParcelNewStaticNatArgs>> newStaticNats;

    /**
     * @return static NAT
     * 
     */
    public Optional<Output<List<TransportWanVpnInterfaceEthernetProfileParcelNewStaticNatArgs>>> newStaticNats() {
        return Optional.ofNullable(this.newStaticNats);
    }

    /**
     * Per-tunnel Qos - Default value: `false`
     * 
     */
    @Import(name="perTunnelQos")
    private @Nullable Output<Boolean> perTunnelQos;

    /**
     * @return Per-tunnel Qos - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> perTunnelQos() {
        return Optional.ofNullable(this.perTunnelQos);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="perTunnelQosVariable")
    private @Nullable Output<String> perTunnelQosVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> perTunnelQosVariable() {
        return Optional.ofNullable(this.perTunnelQosVariable);
    }

    /**
     * Shaping Rate Downstream - Default value: `false`
     * 
     */
    @Import(name="qosAdaptiveBandwidthDownstream")
    private @Nullable Output<Boolean> qosAdaptiveBandwidthDownstream;

    /**
     * @return Shaping Rate Downstream - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> qosAdaptiveBandwidthDownstream() {
        return Optional.ofNullable(this.qosAdaptiveBandwidthDownstream);
    }

    /**
     * Shaping Rate Upstream - Default value: `false`
     * 
     */
    @Import(name="qosAdaptiveBandwidthUpstream")
    private @Nullable Output<Boolean> qosAdaptiveBandwidthUpstream;

    /**
     * @return Shaping Rate Upstream - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> qosAdaptiveBandwidthUpstream() {
        return Optional.ofNullable(this.qosAdaptiveBandwidthUpstream);
    }

    /**
     * Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
     * 
     */
    @Import(name="qosAdaptiveDefaultDownstream")
    private @Nullable Output<Integer> qosAdaptiveDefaultDownstream;

    /**
     * @return Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
     * 
     */
    public Optional<Output<Integer>> qosAdaptiveDefaultDownstream() {
        return Optional.ofNullable(this.qosAdaptiveDefaultDownstream);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="qosAdaptiveDefaultDownstreamVariable")
    private @Nullable Output<String> qosAdaptiveDefaultDownstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> qosAdaptiveDefaultDownstreamVariable() {
        return Optional.ofNullable(this.qosAdaptiveDefaultDownstreamVariable);
    }

    /**
     * Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
     * 
     */
    @Import(name="qosAdaptiveDefaultUpstream")
    private @Nullable Output<Integer> qosAdaptiveDefaultUpstream;

    /**
     * @return Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
     * 
     */
    public Optional<Output<Integer>> qosAdaptiveDefaultUpstream() {
        return Optional.ofNullable(this.qosAdaptiveDefaultUpstream);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="qosAdaptiveDefaultUpstreamVariable")
    private @Nullable Output<String> qosAdaptiveDefaultUpstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> qosAdaptiveDefaultUpstreamVariable() {
        return Optional.ofNullable(this.qosAdaptiveDefaultUpstreamVariable);
    }

    /**
     * Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
     * 
     */
    @Import(name="qosAdaptiveMaxDownstream")
    private @Nullable Output<Integer> qosAdaptiveMaxDownstream;

    /**
     * @return Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
     * 
     */
    public Optional<Output<Integer>> qosAdaptiveMaxDownstream() {
        return Optional.ofNullable(this.qosAdaptiveMaxDownstream);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="qosAdaptiveMaxDownstreamVariable")
    private @Nullable Output<String> qosAdaptiveMaxDownstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> qosAdaptiveMaxDownstreamVariable() {
        return Optional.ofNullable(this.qosAdaptiveMaxDownstreamVariable);
    }

    /**
     * Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
     * 
     */
    @Import(name="qosAdaptiveMaxUpstream")
    private @Nullable Output<Integer> qosAdaptiveMaxUpstream;

    /**
     * @return Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
     * 
     */
    public Optional<Output<Integer>> qosAdaptiveMaxUpstream() {
        return Optional.ofNullable(this.qosAdaptiveMaxUpstream);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="qosAdaptiveMaxUpstreamVariable")
    private @Nullable Output<String> qosAdaptiveMaxUpstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> qosAdaptiveMaxUpstreamVariable() {
        return Optional.ofNullable(this.qosAdaptiveMaxUpstreamVariable);
    }

    /**
     * Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
     * 
     */
    @Import(name="qosAdaptiveMinDownstream")
    private @Nullable Output<Integer> qosAdaptiveMinDownstream;

    /**
     * @return Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
     * 
     */
    public Optional<Output<Integer>> qosAdaptiveMinDownstream() {
        return Optional.ofNullable(this.qosAdaptiveMinDownstream);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="qosAdaptiveMinDownstreamVariable")
    private @Nullable Output<String> qosAdaptiveMinDownstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> qosAdaptiveMinDownstreamVariable() {
        return Optional.ofNullable(this.qosAdaptiveMinDownstreamVariable);
    }

    /**
     * Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
     * 
     */
    @Import(name="qosAdaptiveMinUpstream")
    private @Nullable Output<Integer> qosAdaptiveMinUpstream;

    /**
     * @return Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
     * 
     */
    public Optional<Output<Integer>> qosAdaptiveMinUpstream() {
        return Optional.ofNullable(this.qosAdaptiveMinUpstream);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="qosAdaptiveMinUpstreamVariable")
    private @Nullable Output<String> qosAdaptiveMinUpstreamVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> qosAdaptiveMinUpstreamVariable() {
        return Optional.ofNullable(this.qosAdaptiveMinUpstreamVariable);
    }

    /**
     * Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
     * 
     */
    @Import(name="qosAdaptivePeriod")
    private @Nullable Output<Integer> qosAdaptivePeriod;

    /**
     * @return Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
     * 
     */
    public Optional<Output<Integer>> qosAdaptivePeriod() {
        return Optional.ofNullable(this.qosAdaptivePeriod);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="qosAdaptivePeriodVariable")
    private @Nullable Output<String> qosAdaptivePeriodVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> qosAdaptivePeriodVariable() {
        return Optional.ofNullable(this.qosAdaptivePeriodVariable);
    }

    /**
     * Shaping Rate (Kbps) - Range: `8`-`100000000`
     * 
     */
    @Import(name="qosShapingRate")
    private @Nullable Output<Integer> qosShapingRate;

    /**
     * @return Shaping Rate (Kbps) - Range: `8`-`100000000`
     * 
     */
    public Optional<Output<Integer>> qosShapingRate() {
        return Optional.ofNullable(this.qosShapingRate);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="qosShapingRateVariable")
    private @Nullable Output<String> qosShapingRateVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> qosShapingRateVariable() {
        return Optional.ofNullable(this.qosShapingRateVariable);
    }

    /**
     * Service Provider Name
     * 
     */
    @Import(name="serviceProvider")
    private @Nullable Output<String> serviceProvider;

    /**
     * @return Service Provider Name
     * 
     */
    public Optional<Output<String>> serviceProvider() {
        return Optional.ofNullable(this.serviceProvider);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="serviceProviderVariable")
    private @Nullable Output<String> serviceProviderVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> serviceProviderVariable() {
        return Optional.ofNullable(this.serviceProviderVariable);
    }

    /**
     * - Default value: `true`
     * 
     */
    @Import(name="shutdown")
    private @Nullable Output<Boolean> shutdown;

    /**
     * @return - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> shutdown() {
        return Optional.ofNullable(this.shutdown);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="shutdownVariable")
    private @Nullable Output<String> shutdownVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> shutdownVariable() {
        return Optional.ofNullable(this.shutdownVariable);
    }

    /**
     * Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
     * 
     */
    @Import(name="speed")
    private @Nullable Output<String> speed;

    /**
     * @return Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
     * 
     */
    public Optional<Output<String>> speed() {
        return Optional.ofNullable(this.speed);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="speedVariable")
    private @Nullable Output<String> speedVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> speedVariable() {
        return Optional.ofNullable(this.speedVariable);
    }

    /**
     * static NAT66
     * 
     */
    @Import(name="staticNat66s")
    private @Nullable Output<List<TransportWanVpnInterfaceEthernetProfileParcelStaticNat66Args>> staticNat66s;

    /**
     * @return static NAT66
     * 
     */
    public Optional<Output<List<TransportWanVpnInterfaceEthernetProfileParcelStaticNat66Args>>> staticNat66s() {
        return Optional.ofNullable(this.staticNat66s);
    }

    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     * 
     */
    @Import(name="tcpMss")
    private @Nullable Output<Integer> tcpMss;

    /**
     * @return TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     * 
     */
    public Optional<Output<Integer>> tcpMss() {
        return Optional.ofNullable(this.tcpMss);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tcpMssVariable")
    private @Nullable Output<String> tcpMssVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tcpMssVariable() {
        return Optional.ofNullable(this.tcpMssVariable);
    }

    /**
     * Extends a local TLOC to a remote node only for vpn 0
     * 
     */
    @Import(name="tlocExtension")
    private @Nullable Output<String> tlocExtension;

    /**
     * @return Extends a local TLOC to a remote node only for vpn 0
     * 
     */
    public Optional<Output<String>> tlocExtension() {
        return Optional.ofNullable(this.tlocExtension);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tlocExtensionVariable")
    private @Nullable Output<String> tlocExtensionVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tlocExtensionVariable() {
        return Optional.ofNullable(this.tlocExtensionVariable);
    }

    /**
     * Enable tracker for this interface
     * 
     */
    @Import(name="tracker")
    private @Nullable Output<String> tracker;

    /**
     * @return Enable tracker for this interface
     * 
     */
    public Optional<Output<String>> tracker() {
        return Optional.ofNullable(this.tracker);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="trackerVariable")
    private @Nullable Output<String> trackerVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> trackerVariable() {
        return Optional.ofNullable(this.trackerVariable);
    }

    /**
     * Transport WAN VPN Profile Parcel ID
     * 
     */
    @Import(name="transportWanVpnProfileParcelId")
    private @Nullable Output<String> transportWanVpnProfileParcelId;

    /**
     * @return Transport WAN VPN Profile Parcel ID
     * 
     */
    public Optional<Output<String>> transportWanVpnProfileParcelId() {
        return Optional.ofNullable(this.transportWanVpnProfileParcelId);
    }

    /**
     * Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
     * 
     */
    @Import(name="tunnelBandwidthPercent")
    private @Nullable Output<Integer> tunnelBandwidthPercent;

    /**
     * @return Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
     * 
     */
    public Optional<Output<Integer>> tunnelBandwidthPercent() {
        return Optional.ofNullable(this.tunnelBandwidthPercent);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelBandwidthPercentVariable")
    private @Nullable Output<String> tunnelBandwidthPercentVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelBandwidthPercentVariable() {
        return Optional.ofNullable(this.tunnelBandwidthPercentVariable);
    }

    /**
     * Tunnel Interface on/off - Default value: `false`
     * 
     */
    @Import(name="tunnelInterface")
    private @Nullable Output<Boolean> tunnelInterface;

    /**
     * @return Tunnel Interface on/off - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterface() {
        return Optional.ofNullable(this.tunnelInterface);
    }

    /**
     * Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceAllowAll")
    private @Nullable Output<Boolean> tunnelInterfaceAllowAll;

    /**
     * @return Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowAll() {
        return Optional.ofNullable(this.tunnelInterfaceAllowAll);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowAllVariable")
    private @Nullable Output<String> tunnelInterfaceAllowAllVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowAllVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowAllVariable);
    }

    /**
     * Allow/Deny BFD - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceAllowBfd")
    private @Nullable Output<Boolean> tunnelInterfaceAllowBfd;

    /**
     * @return Allow/Deny BFD - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowBfd() {
        return Optional.ofNullable(this.tunnelInterfaceAllowBfd);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowBfdVariable")
    private @Nullable Output<String> tunnelInterfaceAllowBfdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowBfdVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowBfdVariable);
    }

    /**
     * Allow/deny BGP - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceAllowBgp")
    private @Nullable Output<Boolean> tunnelInterfaceAllowBgp;

    /**
     * @return Allow/deny BGP - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowBgp() {
        return Optional.ofNullable(this.tunnelInterfaceAllowBgp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowBgpVariable")
    private @Nullable Output<String> tunnelInterfaceAllowBgpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowBgpVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowBgpVariable);
    }

    /**
     * Allow/Deny DNS - Default value: `true`
     * 
     */
    @Import(name="tunnelInterfaceAllowDbs")
    private @Nullable Output<Boolean> tunnelInterfaceAllowDbs;

    /**
     * @return Allow/Deny DNS - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowDbs() {
        return Optional.ofNullable(this.tunnelInterfaceAllowDbs);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowDbsVariable")
    private @Nullable Output<String> tunnelInterfaceAllowDbsVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowDbsVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowDbsVariable);
    }

    /**
     * Allow/Deny DHCP - Default value: `true`
     * 
     */
    @Import(name="tunnelInterfaceAllowDhcp")
    private @Nullable Output<Boolean> tunnelInterfaceAllowDhcp;

    /**
     * @return Allow/Deny DHCP - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowDhcp() {
        return Optional.ofNullable(this.tunnelInterfaceAllowDhcp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowDhcpVariable")
    private @Nullable Output<String> tunnelInterfaceAllowDhcpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowDhcpVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowDhcpVariable);
    }

    /**
     * Allow/Deny HTTPS - Default value: `true`
     * 
     */
    @Import(name="tunnelInterfaceAllowHttps")
    private @Nullable Output<Boolean> tunnelInterfaceAllowHttps;

    /**
     * @return Allow/Deny HTTPS - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowHttps() {
        return Optional.ofNullable(this.tunnelInterfaceAllowHttps);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowHttpsVariable")
    private @Nullable Output<String> tunnelInterfaceAllowHttpsVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowHttpsVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowHttpsVariable);
    }

    /**
     * Allow/Deny ICMP - Default value: `true`
     * 
     */
    @Import(name="tunnelInterfaceAllowIcmp")
    private @Nullable Output<Boolean> tunnelInterfaceAllowIcmp;

    /**
     * @return Allow/Deny ICMP - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowIcmp() {
        return Optional.ofNullable(this.tunnelInterfaceAllowIcmp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowIcmpVariable")
    private @Nullable Output<String> tunnelInterfaceAllowIcmpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowIcmpVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowIcmpVariable);
    }

    /**
     * Allow/Deny NETCONF - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceAllowNetconf")
    private @Nullable Output<Boolean> tunnelInterfaceAllowNetconf;

    /**
     * @return Allow/Deny NETCONF - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowNetconf() {
        return Optional.ofNullable(this.tunnelInterfaceAllowNetconf);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowNetconfVariable")
    private @Nullable Output<String> tunnelInterfaceAllowNetconfVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowNetconfVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowNetconfVariable);
    }

    /**
     * Allow/Deny NTP - Default value: `true`
     * 
     */
    @Import(name="tunnelInterfaceAllowNtp")
    private @Nullable Output<Boolean> tunnelInterfaceAllowNtp;

    /**
     * @return Allow/Deny NTP - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowNtp() {
        return Optional.ofNullable(this.tunnelInterfaceAllowNtp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowNtpVariable")
    private @Nullable Output<String> tunnelInterfaceAllowNtpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowNtpVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowNtpVariable);
    }

    /**
     * Allow/Deny OSPF - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceAllowOspf")
    private @Nullable Output<Boolean> tunnelInterfaceAllowOspf;

    /**
     * @return Allow/Deny OSPF - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowOspf() {
        return Optional.ofNullable(this.tunnelInterfaceAllowOspf);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowOspfVariable")
    private @Nullable Output<String> tunnelInterfaceAllowOspfVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowOspfVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowOspfVariable);
    }

    /**
     * Allow/Deny SNMP - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceAllowSnmp")
    private @Nullable Output<Boolean> tunnelInterfaceAllowSnmp;

    /**
     * @return Allow/Deny SNMP - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowSnmp() {
        return Optional.ofNullable(this.tunnelInterfaceAllowSnmp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowSnmpVariable")
    private @Nullable Output<String> tunnelInterfaceAllowSnmpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowSnmpVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowSnmpVariable);
    }

    /**
     * Allow/Deny SSH - Default value: `true`
     * 
     */
    @Import(name="tunnelInterfaceAllowSsh")
    private @Nullable Output<Boolean> tunnelInterfaceAllowSsh;

    /**
     * @return Allow/Deny SSH - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowSsh() {
        return Optional.ofNullable(this.tunnelInterfaceAllowSsh);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowSshVariable")
    private @Nullable Output<String> tunnelInterfaceAllowSshVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowSshVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowSshVariable);
    }

    /**
     * Allow/Deny STUN - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceAllowStun")
    private @Nullable Output<Boolean> tunnelInterfaceAllowStun;

    /**
     * @return Allow/Deny STUN - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceAllowStun() {
        return Optional.ofNullable(this.tunnelInterfaceAllowStun);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceAllowStunVariable")
    private @Nullable Output<String> tunnelInterfaceAllowStunVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceAllowStunVariable() {
        return Optional.ofNullable(this.tunnelInterfaceAllowStunVariable);
    }

    /**
     * Bind loopback tunnel interface to a physical interface
     * 
     */
    @Import(name="tunnelInterfaceBindLoopbackTunnel")
    private @Nullable Output<String> tunnelInterfaceBindLoopbackTunnel;

    /**
     * @return Bind loopback tunnel interface to a physical interface
     * 
     */
    public Optional<Output<String>> tunnelInterfaceBindLoopbackTunnel() {
        return Optional.ofNullable(this.tunnelInterfaceBindLoopbackTunnel);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceBindLoopbackTunnelVariable")
    private @Nullable Output<String> tunnelInterfaceBindLoopbackTunnelVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceBindLoopbackTunnelVariable() {
        return Optional.ofNullable(this.tunnelInterfaceBindLoopbackTunnelVariable);
    }

    /**
     * Set TLOC as border TLOC - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceBorder")
    private @Nullable Output<Boolean> tunnelInterfaceBorder;

    /**
     * @return Set TLOC as border TLOC - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceBorder() {
        return Optional.ofNullable(this.tunnelInterfaceBorder);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceBorderVariable")
    private @Nullable Output<String> tunnelInterfaceBorderVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceBorderVariable() {
        return Optional.ofNullable(this.tunnelInterfaceBorderVariable);
    }

    /**
     * Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
     * `carrier7`, `carrier8` - Default value: `default`
     * 
     */
    @Import(name="tunnelInterfaceCarrier")
    private @Nullable Output<String> tunnelInterfaceCarrier;

    /**
     * @return Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
     * `carrier7`, `carrier8` - Default value: `default`
     * 
     */
    public Optional<Output<String>> tunnelInterfaceCarrier() {
        return Optional.ofNullable(this.tunnelInterfaceCarrier);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceCarrierVariable")
    private @Nullable Output<String> tunnelInterfaceCarrierVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceCarrierVariable() {
        return Optional.ofNullable(this.tunnelInterfaceCarrierVariable);
    }

    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceClearDontFragment")
    private @Nullable Output<Boolean> tunnelInterfaceClearDontFragment;

    /**
     * @return Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceClearDontFragment() {
        return Optional.ofNullable(this.tunnelInterfaceClearDontFragment);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceClearDontFragmentVariable")
    private @Nullable Output<String> tunnelInterfaceClearDontFragmentVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceClearDontFragmentVariable() {
        return Optional.ofNullable(this.tunnelInterfaceClearDontFragmentVariable);
    }

    /**
     * Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
     * `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
     * `private4`, `private5`, `private6` - Default value: `mpls`
     * 
     */
    @Import(name="tunnelInterfaceColor")
    private @Nullable Output<String> tunnelInterfaceColor;

    /**
     * @return Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
     * `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
     * `private4`, `private5`, `private6` - Default value: `mpls`
     * 
     */
    public Optional<Output<String>> tunnelInterfaceColor() {
        return Optional.ofNullable(this.tunnelInterfaceColor);
    }

    /**
     * Restrict this TLOC behavior - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceColorRestrict")
    private @Nullable Output<Boolean> tunnelInterfaceColorRestrict;

    /**
     * @return Restrict this TLOC behavior - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceColorRestrict() {
        return Optional.ofNullable(this.tunnelInterfaceColorRestrict);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceColorRestrictVariable")
    private @Nullable Output<String> tunnelInterfaceColorRestrictVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceColorRestrictVariable() {
        return Optional.ofNullable(this.tunnelInterfaceColorRestrictVariable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceColorVariable")
    private @Nullable Output<String> tunnelInterfaceColorVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceColorVariable() {
        return Optional.ofNullable(this.tunnelInterfaceColorVariable);
    }

    /**
     * CTS SGT Propagation configuration - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceCtsSgtPropagation")
    private @Nullable Output<Boolean> tunnelInterfaceCtsSgtPropagation;

    /**
     * @return CTS SGT Propagation configuration - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceCtsSgtPropagation() {
        return Optional.ofNullable(this.tunnelInterfaceCtsSgtPropagation);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceCtsSgtPropagationVariable")
    private @Nullable Output<String> tunnelInterfaceCtsSgtPropagationVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceCtsSgtPropagationVariable() {
        return Optional.ofNullable(this.tunnelInterfaceCtsSgtPropagationVariable);
    }

    /**
     * Encapsulation for TLOC
     * 
     */
    @Import(name="tunnelInterfaceEncapsulations")
    private @Nullable Output<List<TransportWanVpnInterfaceEthernetProfileParcelTunnelInterfaceEncapsulationArgs>> tunnelInterfaceEncapsulations;

    /**
     * @return Encapsulation for TLOC
     * 
     */
    public Optional<Output<List<TransportWanVpnInterfaceEthernetProfileParcelTunnelInterfaceEncapsulationArgs>>> tunnelInterfaceEncapsulations() {
        return Optional.ofNullable(this.tunnelInterfaceEncapsulations);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceExcludeControllerGroupListVariable")
    private @Nullable Output<String> tunnelInterfaceExcludeControllerGroupListVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceExcludeControllerGroupListVariable() {
        return Optional.ofNullable(this.tunnelInterfaceExcludeControllerGroupListVariable);
    }

    /**
     * Exclude the following controller groups defined in this list.
     * 
     */
    @Import(name="tunnelInterfaceExcludeControllerGroupLists")
    private @Nullable Output<List<Integer>> tunnelInterfaceExcludeControllerGroupLists;

    /**
     * @return Exclude the following controller groups defined in this list.
     * 
     */
    public Optional<Output<List<Integer>>> tunnelInterfaceExcludeControllerGroupLists() {
        return Optional.ofNullable(this.tunnelInterfaceExcludeControllerGroupLists);
    }

    /**
     * GRE tunnel destination IP
     * 
     */
    @Import(name="tunnelInterfaceGreTunnelDestinationIp")
    private @Nullable Output<String> tunnelInterfaceGreTunnelDestinationIp;

    /**
     * @return GRE tunnel destination IP
     * 
     */
    public Optional<Output<String>> tunnelInterfaceGreTunnelDestinationIp() {
        return Optional.ofNullable(this.tunnelInterfaceGreTunnelDestinationIp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceGreTunnelDestinationIpVariable")
    private @Nullable Output<String> tunnelInterfaceGreTunnelDestinationIpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceGreTunnelDestinationIpVariable() {
        return Optional.ofNullable(this.tunnelInterfaceGreTunnelDestinationIpVariable);
    }

    /**
     * List of groups - Range: `1`-`4294967295`
     * 
     */
    @Import(name="tunnelInterfaceGroups")
    private @Nullable Output<Integer> tunnelInterfaceGroups;

    /**
     * @return List of groups - Range: `1`-`4294967295`
     * 
     */
    public Optional<Output<Integer>> tunnelInterfaceGroups() {
        return Optional.ofNullable(this.tunnelInterfaceGroups);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceGroupsVariable")
    private @Nullable Output<String> tunnelInterfaceGroupsVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceGroupsVariable() {
        return Optional.ofNullable(this.tunnelInterfaceGroupsVariable);
    }

    /**
     * Set time period of control hello packets &lt;100..600000&gt; milli seconds - Range: `100`-`600000` - Default value: `1000`
     * 
     */
    @Import(name="tunnelInterfaceHelloInterval")
    private @Nullable Output<Integer> tunnelInterfaceHelloInterval;

    /**
     * @return Set time period of control hello packets &lt;100..600000&gt; milli seconds - Range: `100`-`600000` - Default value: `1000`
     * 
     */
    public Optional<Output<Integer>> tunnelInterfaceHelloInterval() {
        return Optional.ofNullable(this.tunnelInterfaceHelloInterval);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceHelloIntervalVariable")
    private @Nullable Output<String> tunnelInterfaceHelloIntervalVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceHelloIntervalVariable() {
        return Optional.ofNullable(this.tunnelInterfaceHelloIntervalVariable);
    }

    /**
     * Set tolerance of control hello packets &lt;12..6000&gt; seconds - Range: `12`-`6000` - Default value: `12`
     * 
     */
    @Import(name="tunnelInterfaceHelloTolerance")
    private @Nullable Output<Integer> tunnelInterfaceHelloTolerance;

    /**
     * @return Set tolerance of control hello packets &lt;12..6000&gt; seconds - Range: `12`-`6000` - Default value: `12`
     * 
     */
    public Optional<Output<Integer>> tunnelInterfaceHelloTolerance() {
        return Optional.ofNullable(this.tunnelInterfaceHelloTolerance);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceHelloToleranceVariable")
    private @Nullable Output<String> tunnelInterfaceHelloToleranceVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceHelloToleranceVariable() {
        return Optional.ofNullable(this.tunnelInterfaceHelloToleranceVariable);
    }

    /**
     * Set TLOC as last resort - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceLastResortCircuit")
    private @Nullable Output<Boolean> tunnelInterfaceLastResortCircuit;

    /**
     * @return Set TLOC as last resort - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceLastResortCircuit() {
        return Optional.ofNullable(this.tunnelInterfaceLastResortCircuit);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceLastResortCircuitVariable")
    private @Nullable Output<String> tunnelInterfaceLastResortCircuitVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceLastResortCircuitVariable() {
        return Optional.ofNullable(this.tunnelInterfaceLastResortCircuitVariable);
    }

    /**
     * Set the interface as a low-bandwidth circuit - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceLowBandwidthLink")
    private @Nullable Output<Boolean> tunnelInterfaceLowBandwidthLink;

    /**
     * @return Set the interface as a low-bandwidth circuit - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceLowBandwidthLink() {
        return Optional.ofNullable(this.tunnelInterfaceLowBandwidthLink);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceLowBandwidthLinkVariable")
    private @Nullable Output<String> tunnelInterfaceLowBandwidthLinkVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceLowBandwidthLinkVariable() {
        return Optional.ofNullable(this.tunnelInterfaceLowBandwidthLinkVariable);
    }

    /**
     * Maximum Control Connections - Range: `0`-`100`
     * 
     */
    @Import(name="tunnelInterfaceMaxControlConnections")
    private @Nullable Output<Integer> tunnelInterfaceMaxControlConnections;

    /**
     * @return Maximum Control Connections - Range: `0`-`100`
     * 
     */
    public Optional<Output<Integer>> tunnelInterfaceMaxControlConnections() {
        return Optional.ofNullable(this.tunnelInterfaceMaxControlConnections);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceMaxControlConnectionsVariable")
    private @Nullable Output<String> tunnelInterfaceMaxControlConnectionsVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceMaxControlConnectionsVariable() {
        return Optional.ofNullable(this.tunnelInterfaceMaxControlConnectionsVariable);
    }

    /**
     * Set time period of nat refresh packets &lt;1...60&gt; seconds - Range: `1`-`60` - Default value: `5`
     * 
     */
    @Import(name="tunnelInterfaceNatRefreshInterval")
    private @Nullable Output<Integer> tunnelInterfaceNatRefreshInterval;

    /**
     * @return Set time period of nat refresh packets &lt;1...60&gt; seconds - Range: `1`-`60` - Default value: `5`
     * 
     */
    public Optional<Output<Integer>> tunnelInterfaceNatRefreshInterval() {
        return Optional.ofNullable(this.tunnelInterfaceNatRefreshInterval);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceNatRefreshIntervalVariable")
    private @Nullable Output<String> tunnelInterfaceNatRefreshIntervalVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceNatRefreshIntervalVariable() {
        return Optional.ofNullable(this.tunnelInterfaceNatRefreshIntervalVariable);
    }

    /**
     * Accept and respond to network-prefix-directed broadcasts - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceNetworkBroadcast")
    private @Nullable Output<Boolean> tunnelInterfaceNetworkBroadcast;

    /**
     * @return Accept and respond to network-prefix-directed broadcasts - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceNetworkBroadcast() {
        return Optional.ofNullable(this.tunnelInterfaceNetworkBroadcast);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceNetworkBroadcastVariable")
    private @Nullable Output<String> tunnelInterfaceNetworkBroadcastVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceNetworkBroadcastVariable() {
        return Optional.ofNullable(this.tunnelInterfaceNetworkBroadcastVariable);
    }

    /**
     * Disallow port hopping on the tunnel interface - Default value: `true`
     * 
     */
    @Import(name="tunnelInterfacePortHop")
    private @Nullable Output<Boolean> tunnelInterfacePortHop;

    /**
     * @return Disallow port hopping on the tunnel interface - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfacePortHop() {
        return Optional.ofNullable(this.tunnelInterfacePortHop);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfacePortHopVariable")
    private @Nullable Output<String> tunnelInterfacePortHopVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfacePortHopVariable() {
        return Optional.ofNullable(this.tunnelInterfacePortHopVariable);
    }

    /**
     * Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     * 
     */
    @Import(name="tunnelInterfaceTunnelTcpMss")
    private @Nullable Output<Integer> tunnelInterfaceTunnelTcpMss;

    /**
     * @return Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     * 
     */
    public Optional<Output<Integer>> tunnelInterfaceTunnelTcpMss() {
        return Optional.ofNullable(this.tunnelInterfaceTunnelTcpMss);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceTunnelTcpMssVariable")
    private @Nullable Output<String> tunnelInterfaceTunnelTcpMssVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceTunnelTcpMssVariable() {
        return Optional.ofNullable(this.tunnelInterfaceTunnelTcpMssVariable);
    }

    /**
     * Put this wan interface in STUN mode only - Default value: `false`
     * 
     */
    @Import(name="tunnelInterfaceVbondAsStunServer")
    private @Nullable Output<Boolean> tunnelInterfaceVbondAsStunServer;

    /**
     * @return Put this wan interface in STUN mode only - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> tunnelInterfaceVbondAsStunServer() {
        return Optional.ofNullable(this.tunnelInterfaceVbondAsStunServer);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceVbondAsStunServerVariable")
    private @Nullable Output<String> tunnelInterfaceVbondAsStunServerVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceVbondAsStunServerVariable() {
        return Optional.ofNullable(this.tunnelInterfaceVbondAsStunServerVariable);
    }

    /**
     * Set interface preference for control connection to vManage &lt;0..8&gt; - Range: `0`-`8` - Default value: `5`
     * 
     */
    @Import(name="tunnelInterfaceVmanageConnectionPreference")
    private @Nullable Output<Integer> tunnelInterfaceVmanageConnectionPreference;

    /**
     * @return Set interface preference for control connection to vManage &lt;0..8&gt; - Range: `0`-`8` - Default value: `5`
     * 
     */
    public Optional<Output<Integer>> tunnelInterfaceVmanageConnectionPreference() {
        return Optional.ofNullable(this.tunnelInterfaceVmanageConnectionPreference);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelInterfaceVmanageConnectionPreferenceVariable")
    private @Nullable Output<String> tunnelInterfaceVmanageConnectionPreferenceVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelInterfaceVmanageConnectionPreferenceVariable() {
        return Optional.ofNullable(this.tunnelInterfaceVmanageConnectionPreferenceVariable);
    }

    /**
     * Set tunnel QoS mode - Choices: `hub`, `spoke`
     * 
     */
    @Import(name="tunnelQosMode")
    private @Nullable Output<String> tunnelQosMode;

    /**
     * @return Set tunnel QoS mode - Choices: `hub`, `spoke`
     * 
     */
    public Optional<Output<String>> tunnelQosMode() {
        return Optional.ofNullable(this.tunnelQosMode);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tunnelQosModeVariable")
    private @Nullable Output<String> tunnelQosModeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tunnelQosModeVariable() {
        return Optional.ofNullable(this.tunnelQosModeVariable);
    }

    /**
     * The version of the profile parcel
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the profile parcel
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    /**
     * Extend remote TLOC over a GRE tunnel to a local WAN interface
     * 
     */
    @Import(name="xconnect")
    private @Nullable Output<String> xconnect;

    /**
     * @return Extend remote TLOC over a GRE tunnel to a local WAN interface
     * 
     */
    public Optional<Output<String>> xconnect() {
        return Optional.ofNullable(this.xconnect);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="xconnectVariable")
    private @Nullable Output<String> xconnectVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> xconnectVariable() {
        return Optional.ofNullable(this.xconnectVariable);
    }

    private TransportWanVpnInterfaceEthernetProfileParcelState() {}

    private TransportWanVpnInterfaceEthernetProfileParcelState(TransportWanVpnInterfaceEthernetProfileParcelState $) {
        this.adaptiveQos = $.adaptiveQos;
        this.arpTimeout = $.arpTimeout;
        this.arpTimeoutVariable = $.arpTimeoutVariable;
        this.arps = $.arps;
        this.autoDetectBandwidth = $.autoDetectBandwidth;
        this.autoDetectBandwidthVariable = $.autoDetectBandwidthVariable;
        this.autonegotiate = $.autonegotiate;
        this.autonegotiateVariable = $.autonegotiateVariable;
        this.bandwidthDownstream = $.bandwidthDownstream;
        this.bandwidthDownstreamVariable = $.bandwidthDownstreamVariable;
        this.bandwidthUpstream = $.bandwidthUpstream;
        this.bandwidthUpstreamVariable = $.bandwidthUpstreamVariable;
        this.blockNonSourceIp = $.blockNonSourceIp;
        this.blockNonSourceIpVariable = $.blockNonSourceIpVariable;
        this.configDescription = $.configDescription;
        this.configDescriptionVariable = $.configDescriptionVariable;
        this.description = $.description;
        this.duplex = $.duplex;
        this.duplexVariable = $.duplexVariable;
        this.enableDhcpv6 = $.enableDhcpv6;
        this.featureProfileId = $.featureProfileId;
        this.greTunnelSourceIp = $.greTunnelSourceIp;
        this.greTunnelSourceIpVariable = $.greTunnelSourceIpVariable;
        this.icmpRedirectDisable = $.icmpRedirectDisable;
        this.icmpRedirectDisableVariable = $.icmpRedirectDisableVariable;
        this.interfaceName = $.interfaceName;
        this.interfaceNameVariable = $.interfaceNameVariable;
        this.intrfMtu = $.intrfMtu;
        this.intrfMtuVariable = $.intrfMtuVariable;
        this.ipDirectedBroadcast = $.ipDirectedBroadcast;
        this.ipDirectedBroadcastVariable = $.ipDirectedBroadcastVariable;
        this.ipMtu = $.ipMtu;
        this.ipMtuVariable = $.ipMtuVariable;
        this.iperfServer = $.iperfServer;
        this.iperfServerVariable = $.iperfServerVariable;
        this.ipv4Address = $.ipv4Address;
        this.ipv4AddressVariable = $.ipv4AddressVariable;
        this.ipv4DhcpDistance = $.ipv4DhcpDistance;
        this.ipv4DhcpDistanceVariable = $.ipv4DhcpDistanceVariable;
        this.ipv4DhcpHelperVariable = $.ipv4DhcpHelperVariable;
        this.ipv4DhcpHelpers = $.ipv4DhcpHelpers;
        this.ipv4SecondaryAddresses = $.ipv4SecondaryAddresses;
        this.ipv4SubnetMask = $.ipv4SubnetMask;
        this.ipv4SubnetMaskVariable = $.ipv4SubnetMaskVariable;
        this.ipv6Address = $.ipv6Address;
        this.ipv6AddressVariable = $.ipv6AddressVariable;
        this.ipv6DhcpSecondaryAddresses = $.ipv6DhcpSecondaryAddresses;
        this.ipv6SecondaryAddresses = $.ipv6SecondaryAddresses;
        this.loadInterval = $.loadInterval;
        this.loadIntervalVariable = $.loadIntervalVariable;
        this.macAddress = $.macAddress;
        this.macAddressVariable = $.macAddressVariable;
        this.mediaType = $.mediaType;
        this.mediaTypeVariable = $.mediaTypeVariable;
        this.name = $.name;
        this.nat64 = $.nat64;
        this.nat66 = $.nat66;
        this.natIpv4 = $.natIpv4;
        this.natIpv4Variable = $.natIpv4Variable;
        this.natIpv6 = $.natIpv6;
        this.natIpv6Variable = $.natIpv6Variable;
        this.natLoopback = $.natLoopback;
        this.natLoopbackVariable = $.natLoopbackVariable;
        this.natOverload = $.natOverload;
        this.natOverloadVariable = $.natOverloadVariable;
        this.natPrefixLength = $.natPrefixLength;
        this.natPrefixLengthVariable = $.natPrefixLengthVariable;
        this.natRangeEnd = $.natRangeEnd;
        this.natRangeEndVariable = $.natRangeEndVariable;
        this.natRangeStart = $.natRangeStart;
        this.natRangeStartVariable = $.natRangeStartVariable;
        this.natTcpTimeout = $.natTcpTimeout;
        this.natTcpTimeoutVariable = $.natTcpTimeoutVariable;
        this.natType = $.natType;
        this.natTypeVariable = $.natTypeVariable;
        this.natUdpTimeout = $.natUdpTimeout;
        this.natUdpTimeoutVariable = $.natUdpTimeoutVariable;
        this.newStaticNats = $.newStaticNats;
        this.perTunnelQos = $.perTunnelQos;
        this.perTunnelQosVariable = $.perTunnelQosVariable;
        this.qosAdaptiveBandwidthDownstream = $.qosAdaptiveBandwidthDownstream;
        this.qosAdaptiveBandwidthUpstream = $.qosAdaptiveBandwidthUpstream;
        this.qosAdaptiveDefaultDownstream = $.qosAdaptiveDefaultDownstream;
        this.qosAdaptiveDefaultDownstreamVariable = $.qosAdaptiveDefaultDownstreamVariable;
        this.qosAdaptiveDefaultUpstream = $.qosAdaptiveDefaultUpstream;
        this.qosAdaptiveDefaultUpstreamVariable = $.qosAdaptiveDefaultUpstreamVariable;
        this.qosAdaptiveMaxDownstream = $.qosAdaptiveMaxDownstream;
        this.qosAdaptiveMaxDownstreamVariable = $.qosAdaptiveMaxDownstreamVariable;
        this.qosAdaptiveMaxUpstream = $.qosAdaptiveMaxUpstream;
        this.qosAdaptiveMaxUpstreamVariable = $.qosAdaptiveMaxUpstreamVariable;
        this.qosAdaptiveMinDownstream = $.qosAdaptiveMinDownstream;
        this.qosAdaptiveMinDownstreamVariable = $.qosAdaptiveMinDownstreamVariable;
        this.qosAdaptiveMinUpstream = $.qosAdaptiveMinUpstream;
        this.qosAdaptiveMinUpstreamVariable = $.qosAdaptiveMinUpstreamVariable;
        this.qosAdaptivePeriod = $.qosAdaptivePeriod;
        this.qosAdaptivePeriodVariable = $.qosAdaptivePeriodVariable;
        this.qosShapingRate = $.qosShapingRate;
        this.qosShapingRateVariable = $.qosShapingRateVariable;
        this.serviceProvider = $.serviceProvider;
        this.serviceProviderVariable = $.serviceProviderVariable;
        this.shutdown = $.shutdown;
        this.shutdownVariable = $.shutdownVariable;
        this.speed = $.speed;
        this.speedVariable = $.speedVariable;
        this.staticNat66s = $.staticNat66s;
        this.tcpMss = $.tcpMss;
        this.tcpMssVariable = $.tcpMssVariable;
        this.tlocExtension = $.tlocExtension;
        this.tlocExtensionVariable = $.tlocExtensionVariable;
        this.tracker = $.tracker;
        this.trackerVariable = $.trackerVariable;
        this.transportWanVpnProfileParcelId = $.transportWanVpnProfileParcelId;
        this.tunnelBandwidthPercent = $.tunnelBandwidthPercent;
        this.tunnelBandwidthPercentVariable = $.tunnelBandwidthPercentVariable;
        this.tunnelInterface = $.tunnelInterface;
        this.tunnelInterfaceAllowAll = $.tunnelInterfaceAllowAll;
        this.tunnelInterfaceAllowAllVariable = $.tunnelInterfaceAllowAllVariable;
        this.tunnelInterfaceAllowBfd = $.tunnelInterfaceAllowBfd;
        this.tunnelInterfaceAllowBfdVariable = $.tunnelInterfaceAllowBfdVariable;
        this.tunnelInterfaceAllowBgp = $.tunnelInterfaceAllowBgp;
        this.tunnelInterfaceAllowBgpVariable = $.tunnelInterfaceAllowBgpVariable;
        this.tunnelInterfaceAllowDbs = $.tunnelInterfaceAllowDbs;
        this.tunnelInterfaceAllowDbsVariable = $.tunnelInterfaceAllowDbsVariable;
        this.tunnelInterfaceAllowDhcp = $.tunnelInterfaceAllowDhcp;
        this.tunnelInterfaceAllowDhcpVariable = $.tunnelInterfaceAllowDhcpVariable;
        this.tunnelInterfaceAllowHttps = $.tunnelInterfaceAllowHttps;
        this.tunnelInterfaceAllowHttpsVariable = $.tunnelInterfaceAllowHttpsVariable;
        this.tunnelInterfaceAllowIcmp = $.tunnelInterfaceAllowIcmp;
        this.tunnelInterfaceAllowIcmpVariable = $.tunnelInterfaceAllowIcmpVariable;
        this.tunnelInterfaceAllowNetconf = $.tunnelInterfaceAllowNetconf;
        this.tunnelInterfaceAllowNetconfVariable = $.tunnelInterfaceAllowNetconfVariable;
        this.tunnelInterfaceAllowNtp = $.tunnelInterfaceAllowNtp;
        this.tunnelInterfaceAllowNtpVariable = $.tunnelInterfaceAllowNtpVariable;
        this.tunnelInterfaceAllowOspf = $.tunnelInterfaceAllowOspf;
        this.tunnelInterfaceAllowOspfVariable = $.tunnelInterfaceAllowOspfVariable;
        this.tunnelInterfaceAllowSnmp = $.tunnelInterfaceAllowSnmp;
        this.tunnelInterfaceAllowSnmpVariable = $.tunnelInterfaceAllowSnmpVariable;
        this.tunnelInterfaceAllowSsh = $.tunnelInterfaceAllowSsh;
        this.tunnelInterfaceAllowSshVariable = $.tunnelInterfaceAllowSshVariable;
        this.tunnelInterfaceAllowStun = $.tunnelInterfaceAllowStun;
        this.tunnelInterfaceAllowStunVariable = $.tunnelInterfaceAllowStunVariable;
        this.tunnelInterfaceBindLoopbackTunnel = $.tunnelInterfaceBindLoopbackTunnel;
        this.tunnelInterfaceBindLoopbackTunnelVariable = $.tunnelInterfaceBindLoopbackTunnelVariable;
        this.tunnelInterfaceBorder = $.tunnelInterfaceBorder;
        this.tunnelInterfaceBorderVariable = $.tunnelInterfaceBorderVariable;
        this.tunnelInterfaceCarrier = $.tunnelInterfaceCarrier;
        this.tunnelInterfaceCarrierVariable = $.tunnelInterfaceCarrierVariable;
        this.tunnelInterfaceClearDontFragment = $.tunnelInterfaceClearDontFragment;
        this.tunnelInterfaceClearDontFragmentVariable = $.tunnelInterfaceClearDontFragmentVariable;
        this.tunnelInterfaceColor = $.tunnelInterfaceColor;
        this.tunnelInterfaceColorRestrict = $.tunnelInterfaceColorRestrict;
        this.tunnelInterfaceColorRestrictVariable = $.tunnelInterfaceColorRestrictVariable;
        this.tunnelInterfaceColorVariable = $.tunnelInterfaceColorVariable;
        this.tunnelInterfaceCtsSgtPropagation = $.tunnelInterfaceCtsSgtPropagation;
        this.tunnelInterfaceCtsSgtPropagationVariable = $.tunnelInterfaceCtsSgtPropagationVariable;
        this.tunnelInterfaceEncapsulations = $.tunnelInterfaceEncapsulations;
        this.tunnelInterfaceExcludeControllerGroupListVariable = $.tunnelInterfaceExcludeControllerGroupListVariable;
        this.tunnelInterfaceExcludeControllerGroupLists = $.tunnelInterfaceExcludeControllerGroupLists;
        this.tunnelInterfaceGreTunnelDestinationIp = $.tunnelInterfaceGreTunnelDestinationIp;
        this.tunnelInterfaceGreTunnelDestinationIpVariable = $.tunnelInterfaceGreTunnelDestinationIpVariable;
        this.tunnelInterfaceGroups = $.tunnelInterfaceGroups;
        this.tunnelInterfaceGroupsVariable = $.tunnelInterfaceGroupsVariable;
        this.tunnelInterfaceHelloInterval = $.tunnelInterfaceHelloInterval;
        this.tunnelInterfaceHelloIntervalVariable = $.tunnelInterfaceHelloIntervalVariable;
        this.tunnelInterfaceHelloTolerance = $.tunnelInterfaceHelloTolerance;
        this.tunnelInterfaceHelloToleranceVariable = $.tunnelInterfaceHelloToleranceVariable;
        this.tunnelInterfaceLastResortCircuit = $.tunnelInterfaceLastResortCircuit;
        this.tunnelInterfaceLastResortCircuitVariable = $.tunnelInterfaceLastResortCircuitVariable;
        this.tunnelInterfaceLowBandwidthLink = $.tunnelInterfaceLowBandwidthLink;
        this.tunnelInterfaceLowBandwidthLinkVariable = $.tunnelInterfaceLowBandwidthLinkVariable;
        this.tunnelInterfaceMaxControlConnections = $.tunnelInterfaceMaxControlConnections;
        this.tunnelInterfaceMaxControlConnectionsVariable = $.tunnelInterfaceMaxControlConnectionsVariable;
        this.tunnelInterfaceNatRefreshInterval = $.tunnelInterfaceNatRefreshInterval;
        this.tunnelInterfaceNatRefreshIntervalVariable = $.tunnelInterfaceNatRefreshIntervalVariable;
        this.tunnelInterfaceNetworkBroadcast = $.tunnelInterfaceNetworkBroadcast;
        this.tunnelInterfaceNetworkBroadcastVariable = $.tunnelInterfaceNetworkBroadcastVariable;
        this.tunnelInterfacePortHop = $.tunnelInterfacePortHop;
        this.tunnelInterfacePortHopVariable = $.tunnelInterfacePortHopVariable;
        this.tunnelInterfaceTunnelTcpMss = $.tunnelInterfaceTunnelTcpMss;
        this.tunnelInterfaceTunnelTcpMssVariable = $.tunnelInterfaceTunnelTcpMssVariable;
        this.tunnelInterfaceVbondAsStunServer = $.tunnelInterfaceVbondAsStunServer;
        this.tunnelInterfaceVbondAsStunServerVariable = $.tunnelInterfaceVbondAsStunServerVariable;
        this.tunnelInterfaceVmanageConnectionPreference = $.tunnelInterfaceVmanageConnectionPreference;
        this.tunnelInterfaceVmanageConnectionPreferenceVariable = $.tunnelInterfaceVmanageConnectionPreferenceVariable;
        this.tunnelQosMode = $.tunnelQosMode;
        this.tunnelQosModeVariable = $.tunnelQosModeVariable;
        this.version = $.version;
        this.xconnect = $.xconnect;
        this.xconnectVariable = $.xconnectVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransportWanVpnInterfaceEthernetProfileParcelState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransportWanVpnInterfaceEthernetProfileParcelState $;

        public Builder() {
            $ = new TransportWanVpnInterfaceEthernetProfileParcelState();
        }

        public Builder(TransportWanVpnInterfaceEthernetProfileParcelState defaults) {
            $ = new TransportWanVpnInterfaceEthernetProfileParcelState(Objects.requireNonNull(defaults));
        }

        /**
         * @param adaptiveQos Adaptive QoS - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder adaptiveQos(@Nullable Output<Boolean> adaptiveQos) {
            $.adaptiveQos = adaptiveQos;
            return this;
        }

        /**
         * @param adaptiveQos Adaptive QoS - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder adaptiveQos(Boolean adaptiveQos) {
            return adaptiveQos(Output.of(adaptiveQos));
        }

        /**
         * @param arpTimeout Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2147483` - Default value: `1200`
         * 
         * @return builder
         * 
         */
        public Builder arpTimeout(@Nullable Output<Integer> arpTimeout) {
            $.arpTimeout = arpTimeout;
            return this;
        }

        /**
         * @param arpTimeout Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2147483` - Default value: `1200`
         * 
         * @return builder
         * 
         */
        public Builder arpTimeout(Integer arpTimeout) {
            return arpTimeout(Output.of(arpTimeout));
        }

        /**
         * @param arpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder arpTimeoutVariable(@Nullable Output<String> arpTimeoutVariable) {
            $.arpTimeoutVariable = arpTimeoutVariable;
            return this;
        }

        /**
         * @param arpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder arpTimeoutVariable(String arpTimeoutVariable) {
            return arpTimeoutVariable(Output.of(arpTimeoutVariable));
        }

        /**
         * @param arps Configure ARP entries
         * 
         * @return builder
         * 
         */
        public Builder arps(@Nullable Output<List<TransportWanVpnInterfaceEthernetProfileParcelArpArgs>> arps) {
            $.arps = arps;
            return this;
        }

        /**
         * @param arps Configure ARP entries
         * 
         * @return builder
         * 
         */
        public Builder arps(List<TransportWanVpnInterfaceEthernetProfileParcelArpArgs> arps) {
            return arps(Output.of(arps));
        }

        /**
         * @param arps Configure ARP entries
         * 
         * @return builder
         * 
         */
        public Builder arps(TransportWanVpnInterfaceEthernetProfileParcelArpArgs... arps) {
            return arps(List.of(arps));
        }

        /**
         * @param autoDetectBandwidth Interface auto detect bandwidth - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder autoDetectBandwidth(@Nullable Output<Boolean> autoDetectBandwidth) {
            $.autoDetectBandwidth = autoDetectBandwidth;
            return this;
        }

        /**
         * @param autoDetectBandwidth Interface auto detect bandwidth - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder autoDetectBandwidth(Boolean autoDetectBandwidth) {
            return autoDetectBandwidth(Output.of(autoDetectBandwidth));
        }

        /**
         * @param autoDetectBandwidthVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder autoDetectBandwidthVariable(@Nullable Output<String> autoDetectBandwidthVariable) {
            $.autoDetectBandwidthVariable = autoDetectBandwidthVariable;
            return this;
        }

        /**
         * @param autoDetectBandwidthVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder autoDetectBandwidthVariable(String autoDetectBandwidthVariable) {
            return autoDetectBandwidthVariable(Output.of(autoDetectBandwidthVariable));
        }

        /**
         * @param autonegotiate Link autonegotiation
         * 
         * @return builder
         * 
         */
        public Builder autonegotiate(@Nullable Output<Boolean> autonegotiate) {
            $.autonegotiate = autonegotiate;
            return this;
        }

        /**
         * @param autonegotiate Link autonegotiation
         * 
         * @return builder
         * 
         */
        public Builder autonegotiate(Boolean autonegotiate) {
            return autonegotiate(Output.of(autonegotiate));
        }

        /**
         * @param autonegotiateVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder autonegotiateVariable(@Nullable Output<String> autonegotiateVariable) {
            $.autonegotiateVariable = autonegotiateVariable;
            return this;
        }

        /**
         * @param autonegotiateVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder autonegotiateVariable(String autonegotiateVariable) {
            return autonegotiateVariable(Output.of(autonegotiateVariable));
        }

        /**
         * @param bandwidthDownstream Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
         * 
         * @return builder
         * 
         */
        public Builder bandwidthDownstream(@Nullable Output<Integer> bandwidthDownstream) {
            $.bandwidthDownstream = bandwidthDownstream;
            return this;
        }

        /**
         * @param bandwidthDownstream Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
         * 
         * @return builder
         * 
         */
        public Builder bandwidthDownstream(Integer bandwidthDownstream) {
            return bandwidthDownstream(Output.of(bandwidthDownstream));
        }

        /**
         * @param bandwidthDownstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder bandwidthDownstreamVariable(@Nullable Output<String> bandwidthDownstreamVariable) {
            $.bandwidthDownstreamVariable = bandwidthDownstreamVariable;
            return this;
        }

        /**
         * @param bandwidthDownstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder bandwidthDownstreamVariable(String bandwidthDownstreamVariable) {
            return bandwidthDownstreamVariable(Output.of(bandwidthDownstreamVariable));
        }

        /**
         * @param bandwidthUpstream Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
         * 
         * @return builder
         * 
         */
        public Builder bandwidthUpstream(@Nullable Output<Integer> bandwidthUpstream) {
            $.bandwidthUpstream = bandwidthUpstream;
            return this;
        }

        /**
         * @param bandwidthUpstream Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
         * 
         * @return builder
         * 
         */
        public Builder bandwidthUpstream(Integer bandwidthUpstream) {
            return bandwidthUpstream(Output.of(bandwidthUpstream));
        }

        /**
         * @param bandwidthUpstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder bandwidthUpstreamVariable(@Nullable Output<String> bandwidthUpstreamVariable) {
            $.bandwidthUpstreamVariable = bandwidthUpstreamVariable;
            return this;
        }

        /**
         * @param bandwidthUpstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder bandwidthUpstreamVariable(String bandwidthUpstreamVariable) {
            return bandwidthUpstreamVariable(Output.of(bandwidthUpstreamVariable));
        }

        /**
         * @param blockNonSourceIp Block packets originating from IP address that is not from this source - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder blockNonSourceIp(@Nullable Output<Boolean> blockNonSourceIp) {
            $.blockNonSourceIp = blockNonSourceIp;
            return this;
        }

        /**
         * @param blockNonSourceIp Block packets originating from IP address that is not from this source - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder blockNonSourceIp(Boolean blockNonSourceIp) {
            return blockNonSourceIp(Output.of(blockNonSourceIp));
        }

        /**
         * @param blockNonSourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder blockNonSourceIpVariable(@Nullable Output<String> blockNonSourceIpVariable) {
            $.blockNonSourceIpVariable = blockNonSourceIpVariable;
            return this;
        }

        /**
         * @param blockNonSourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder blockNonSourceIpVariable(String blockNonSourceIpVariable) {
            return blockNonSourceIpVariable(Output.of(blockNonSourceIpVariable));
        }

        public Builder configDescription(@Nullable Output<String> configDescription) {
            $.configDescription = configDescription;
            return this;
        }

        public Builder configDescription(String configDescription) {
            return configDescription(Output.of(configDescription));
        }

        /**
         * @param configDescriptionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder configDescriptionVariable(@Nullable Output<String> configDescriptionVariable) {
            $.configDescriptionVariable = configDescriptionVariable;
            return this;
        }

        /**
         * @param configDescriptionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder configDescriptionVariable(String configDescriptionVariable) {
            return configDescriptionVariable(Output.of(configDescriptionVariable));
        }

        /**
         * @param description The description of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param duplex Duplex mode - Choices: `full`, `half`, `auto`
         * 
         * @return builder
         * 
         */
        public Builder duplex(@Nullable Output<String> duplex) {
            $.duplex = duplex;
            return this;
        }

        /**
         * @param duplex Duplex mode - Choices: `full`, `half`, `auto`
         * 
         * @return builder
         * 
         */
        public Builder duplex(String duplex) {
            return duplex(Output.of(duplex));
        }

        /**
         * @param duplexVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder duplexVariable(@Nullable Output<String> duplexVariable) {
            $.duplexVariable = duplexVariable;
            return this;
        }

        /**
         * @param duplexVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder duplexVariable(String duplexVariable) {
            return duplexVariable(Output.of(duplexVariable));
        }

        /**
         * @param enableDhcpv6 Enable DHCPv6
         * 
         * @return builder
         * 
         */
        public Builder enableDhcpv6(@Nullable Output<Boolean> enableDhcpv6) {
            $.enableDhcpv6 = enableDhcpv6;
            return this;
        }

        /**
         * @param enableDhcpv6 Enable DHCPv6
         * 
         * @return builder
         * 
         */
        public Builder enableDhcpv6(Boolean enableDhcpv6) {
            return enableDhcpv6(Output.of(enableDhcpv6));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(@Nullable Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param greTunnelSourceIp GRE tunnel source IP
         * 
         * @return builder
         * 
         */
        public Builder greTunnelSourceIp(@Nullable Output<String> greTunnelSourceIp) {
            $.greTunnelSourceIp = greTunnelSourceIp;
            return this;
        }

        /**
         * @param greTunnelSourceIp GRE tunnel source IP
         * 
         * @return builder
         * 
         */
        public Builder greTunnelSourceIp(String greTunnelSourceIp) {
            return greTunnelSourceIp(Output.of(greTunnelSourceIp));
        }

        /**
         * @param greTunnelSourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder greTunnelSourceIpVariable(@Nullable Output<String> greTunnelSourceIpVariable) {
            $.greTunnelSourceIpVariable = greTunnelSourceIpVariable;
            return this;
        }

        /**
         * @param greTunnelSourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder greTunnelSourceIpVariable(String greTunnelSourceIpVariable) {
            return greTunnelSourceIpVariable(Output.of(greTunnelSourceIpVariable));
        }

        /**
         * @param icmpRedirectDisable ICMP/ICMPv6 Redirect Disable - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder icmpRedirectDisable(@Nullable Output<Boolean> icmpRedirectDisable) {
            $.icmpRedirectDisable = icmpRedirectDisable;
            return this;
        }

        /**
         * @param icmpRedirectDisable ICMP/ICMPv6 Redirect Disable - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder icmpRedirectDisable(Boolean icmpRedirectDisable) {
            return icmpRedirectDisable(Output.of(icmpRedirectDisable));
        }

        /**
         * @param icmpRedirectDisableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder icmpRedirectDisableVariable(@Nullable Output<String> icmpRedirectDisableVariable) {
            $.icmpRedirectDisableVariable = icmpRedirectDisableVariable;
            return this;
        }

        /**
         * @param icmpRedirectDisableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder icmpRedirectDisableVariable(String icmpRedirectDisableVariable) {
            return icmpRedirectDisableVariable(Output.of(icmpRedirectDisableVariable));
        }

        public Builder interfaceName(@Nullable Output<String> interfaceName) {
            $.interfaceName = interfaceName;
            return this;
        }

        public Builder interfaceName(String interfaceName) {
            return interfaceName(Output.of(interfaceName));
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(@Nullable Output<String> interfaceNameVariable) {
            $.interfaceNameVariable = interfaceNameVariable;
            return this;
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(String interfaceNameVariable) {
            return interfaceNameVariable(Output.of(interfaceNameVariable));
        }

        /**
         * @param intrfMtu Interface MTU GigabitEthernet0 &lt;1500..1518&gt;, Other GigabitEthernet &lt;1500..9216&gt; in bytes - Range: `1500`-`9216` -
         * Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder intrfMtu(@Nullable Output<Integer> intrfMtu) {
            $.intrfMtu = intrfMtu;
            return this;
        }

        /**
         * @param intrfMtu Interface MTU GigabitEthernet0 &lt;1500..1518&gt;, Other GigabitEthernet &lt;1500..9216&gt; in bytes - Range: `1500`-`9216` -
         * Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder intrfMtu(Integer intrfMtu) {
            return intrfMtu(Output.of(intrfMtu));
        }

        /**
         * @param intrfMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder intrfMtuVariable(@Nullable Output<String> intrfMtuVariable) {
            $.intrfMtuVariable = intrfMtuVariable;
            return this;
        }

        /**
         * @param intrfMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder intrfMtuVariable(String intrfMtuVariable) {
            return intrfMtuVariable(Output.of(intrfMtuVariable));
        }

        /**
         * @param ipDirectedBroadcast IP Directed-Broadcast - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcast(@Nullable Output<Boolean> ipDirectedBroadcast) {
            $.ipDirectedBroadcast = ipDirectedBroadcast;
            return this;
        }

        /**
         * @param ipDirectedBroadcast IP Directed-Broadcast - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcast(Boolean ipDirectedBroadcast) {
            return ipDirectedBroadcast(Output.of(ipDirectedBroadcast));
        }

        /**
         * @param ipDirectedBroadcastVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcastVariable(@Nullable Output<String> ipDirectedBroadcastVariable) {
            $.ipDirectedBroadcastVariable = ipDirectedBroadcastVariable;
            return this;
        }

        /**
         * @param ipDirectedBroadcastVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcastVariable(String ipDirectedBroadcastVariable) {
            return ipDirectedBroadcastVariable(Output.of(ipDirectedBroadcastVariable));
        }

        /**
         * @param ipMtu IP MTU for GigabitEthernet main &lt;576..Interface MTU&gt;, GigabitEthernet subinterface &lt;576..9216&gt;, Other Interfaces
         * &lt;576..2000&gt; in bytes - Range: `576`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder ipMtu(@Nullable Output<Integer> ipMtu) {
            $.ipMtu = ipMtu;
            return this;
        }

        /**
         * @param ipMtu IP MTU for GigabitEthernet main &lt;576..Interface MTU&gt;, GigabitEthernet subinterface &lt;576..9216&gt;, Other Interfaces
         * &lt;576..2000&gt; in bytes - Range: `576`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder ipMtu(Integer ipMtu) {
            return ipMtu(Output.of(ipMtu));
        }

        /**
         * @param ipMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipMtuVariable(@Nullable Output<String> ipMtuVariable) {
            $.ipMtuVariable = ipMtuVariable;
            return this;
        }

        /**
         * @param ipMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipMtuVariable(String ipMtuVariable) {
            return ipMtuVariable(Output.of(ipMtuVariable));
        }

        /**
         * @param iperfServer Iperf server for auto bandwidth detect
         * 
         * @return builder
         * 
         */
        public Builder iperfServer(@Nullable Output<String> iperfServer) {
            $.iperfServer = iperfServer;
            return this;
        }

        /**
         * @param iperfServer Iperf server for auto bandwidth detect
         * 
         * @return builder
         * 
         */
        public Builder iperfServer(String iperfServer) {
            return iperfServer(Output.of(iperfServer));
        }

        /**
         * @param iperfServerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder iperfServerVariable(@Nullable Output<String> iperfServerVariable) {
            $.iperfServerVariable = iperfServerVariable;
            return this;
        }

        /**
         * @param iperfServerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder iperfServerVariable(String iperfServerVariable) {
            return iperfServerVariable(Output.of(iperfServerVariable));
        }

        /**
         * @param ipv4Address IP Address
         * 
         * @return builder
         * 
         */
        public Builder ipv4Address(@Nullable Output<String> ipv4Address) {
            $.ipv4Address = ipv4Address;
            return this;
        }

        /**
         * @param ipv4Address IP Address
         * 
         * @return builder
         * 
         */
        public Builder ipv4Address(String ipv4Address) {
            return ipv4Address(Output.of(ipv4Address));
        }

        /**
         * @param ipv4AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4AddressVariable(@Nullable Output<String> ipv4AddressVariable) {
            $.ipv4AddressVariable = ipv4AddressVariable;
            return this;
        }

        /**
         * @param ipv4AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4AddressVariable(String ipv4AddressVariable) {
            return ipv4AddressVariable(Output.of(ipv4AddressVariable));
        }

        /**
         * @param ipv4DhcpDistance DHCP Distance - Range: `1`-`65536`
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpDistance(@Nullable Output<Integer> ipv4DhcpDistance) {
            $.ipv4DhcpDistance = ipv4DhcpDistance;
            return this;
        }

        /**
         * @param ipv4DhcpDistance DHCP Distance - Range: `1`-`65536`
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpDistance(Integer ipv4DhcpDistance) {
            return ipv4DhcpDistance(Output.of(ipv4DhcpDistance));
        }

        /**
         * @param ipv4DhcpDistanceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpDistanceVariable(@Nullable Output<String> ipv4DhcpDistanceVariable) {
            $.ipv4DhcpDistanceVariable = ipv4DhcpDistanceVariable;
            return this;
        }

        /**
         * @param ipv4DhcpDistanceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpDistanceVariable(String ipv4DhcpDistanceVariable) {
            return ipv4DhcpDistanceVariable(Output.of(ipv4DhcpDistanceVariable));
        }

        /**
         * @param ipv4DhcpHelperVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelperVariable(@Nullable Output<String> ipv4DhcpHelperVariable) {
            $.ipv4DhcpHelperVariable = ipv4DhcpHelperVariable;
            return this;
        }

        /**
         * @param ipv4DhcpHelperVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelperVariable(String ipv4DhcpHelperVariable) {
            return ipv4DhcpHelperVariable(Output.of(ipv4DhcpHelperVariable));
        }

        /**
         * @param ipv4DhcpHelpers List of DHCP IPv4 helper addresses (min 1, max 8)
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpers(@Nullable Output<List<String>> ipv4DhcpHelpers) {
            $.ipv4DhcpHelpers = ipv4DhcpHelpers;
            return this;
        }

        /**
         * @param ipv4DhcpHelpers List of DHCP IPv4 helper addresses (min 1, max 8)
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpers(List<String> ipv4DhcpHelpers) {
            return ipv4DhcpHelpers(Output.of(ipv4DhcpHelpers));
        }

        /**
         * @param ipv4DhcpHelpers List of DHCP IPv4 helper addresses (min 1, max 8)
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpers(String... ipv4DhcpHelpers) {
            return ipv4DhcpHelpers(List.of(ipv4DhcpHelpers));
        }

        /**
         * @param ipv4SecondaryAddresses Secondary IpV4 Addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4SecondaryAddresses(@Nullable Output<List<TransportWanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArgs>> ipv4SecondaryAddresses) {
            $.ipv4SecondaryAddresses = ipv4SecondaryAddresses;
            return this;
        }

        /**
         * @param ipv4SecondaryAddresses Secondary IpV4 Addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4SecondaryAddresses(List<TransportWanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArgs> ipv4SecondaryAddresses) {
            return ipv4SecondaryAddresses(Output.of(ipv4SecondaryAddresses));
        }

        /**
         * @param ipv4SecondaryAddresses Secondary IpV4 Addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4SecondaryAddresses(TransportWanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddressArgs... ipv4SecondaryAddresses) {
            return ipv4SecondaryAddresses(List.of(ipv4SecondaryAddresses));
        }

        /**
         * @param ipv4SubnetMask Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
         * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
         * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
         * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
         * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder ipv4SubnetMask(@Nullable Output<String> ipv4SubnetMask) {
            $.ipv4SubnetMask = ipv4SubnetMask;
            return this;
        }

        /**
         * @param ipv4SubnetMask Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
         * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
         * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
         * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
         * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder ipv4SubnetMask(String ipv4SubnetMask) {
            return ipv4SubnetMask(Output.of(ipv4SubnetMask));
        }

        /**
         * @param ipv4SubnetMaskVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4SubnetMaskVariable(@Nullable Output<String> ipv4SubnetMaskVariable) {
            $.ipv4SubnetMaskVariable = ipv4SubnetMaskVariable;
            return this;
        }

        /**
         * @param ipv4SubnetMaskVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4SubnetMaskVariable(String ipv4SubnetMaskVariable) {
            return ipv4SubnetMaskVariable(Output.of(ipv4SubnetMaskVariable));
        }

        /**
         * @param ipv6Address IPv6 Address Secondary
         * 
         * @return builder
         * 
         */
        public Builder ipv6Address(@Nullable Output<String> ipv6Address) {
            $.ipv6Address = ipv6Address;
            return this;
        }

        /**
         * @param ipv6Address IPv6 Address Secondary
         * 
         * @return builder
         * 
         */
        public Builder ipv6Address(String ipv6Address) {
            return ipv6Address(Output.of(ipv6Address));
        }

        /**
         * @param ipv6AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv6AddressVariable(@Nullable Output<String> ipv6AddressVariable) {
            $.ipv6AddressVariable = ipv6AddressVariable;
            return this;
        }

        /**
         * @param ipv6AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv6AddressVariable(String ipv6AddressVariable) {
            return ipv6AddressVariable(Output.of(ipv6AddressVariable));
        }

        /**
         * @param ipv6DhcpSecondaryAddresses secondary IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpSecondaryAddresses(@Nullable Output<List<TransportWanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArgs>> ipv6DhcpSecondaryAddresses) {
            $.ipv6DhcpSecondaryAddresses = ipv6DhcpSecondaryAddresses;
            return this;
        }

        /**
         * @param ipv6DhcpSecondaryAddresses secondary IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpSecondaryAddresses(List<TransportWanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArgs> ipv6DhcpSecondaryAddresses) {
            return ipv6DhcpSecondaryAddresses(Output.of(ipv6DhcpSecondaryAddresses));
        }

        /**
         * @param ipv6DhcpSecondaryAddresses secondary IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpSecondaryAddresses(TransportWanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddressArgs... ipv6DhcpSecondaryAddresses) {
            return ipv6DhcpSecondaryAddresses(List.of(ipv6DhcpSecondaryAddresses));
        }

        /**
         * @param ipv6SecondaryAddresses Static secondary IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv6SecondaryAddresses(@Nullable Output<List<TransportWanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArgs>> ipv6SecondaryAddresses) {
            $.ipv6SecondaryAddresses = ipv6SecondaryAddresses;
            return this;
        }

        /**
         * @param ipv6SecondaryAddresses Static secondary IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv6SecondaryAddresses(List<TransportWanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArgs> ipv6SecondaryAddresses) {
            return ipv6SecondaryAddresses(Output.of(ipv6SecondaryAddresses));
        }

        /**
         * @param ipv6SecondaryAddresses Static secondary IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv6SecondaryAddresses(TransportWanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddressArgs... ipv6SecondaryAddresses) {
            return ipv6SecondaryAddresses(List.of(ipv6SecondaryAddresses));
        }

        /**
         * @param loadInterval Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
         * 
         * @return builder
         * 
         */
        public Builder loadInterval(@Nullable Output<Integer> loadInterval) {
            $.loadInterval = loadInterval;
            return this;
        }

        /**
         * @param loadInterval Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
         * 
         * @return builder
         * 
         */
        public Builder loadInterval(Integer loadInterval) {
            return loadInterval(Output.of(loadInterval));
        }

        /**
         * @param loadIntervalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder loadIntervalVariable(@Nullable Output<String> loadIntervalVariable) {
            $.loadIntervalVariable = loadIntervalVariable;
            return this;
        }

        /**
         * @param loadIntervalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder loadIntervalVariable(String loadIntervalVariable) {
            return loadIntervalVariable(Output.of(loadIntervalVariable));
        }

        /**
         * @param macAddress MAC Address
         * 
         * @return builder
         * 
         */
        public Builder macAddress(@Nullable Output<String> macAddress) {
            $.macAddress = macAddress;
            return this;
        }

        /**
         * @param macAddress MAC Address
         * 
         * @return builder
         * 
         */
        public Builder macAddress(String macAddress) {
            return macAddress(Output.of(macAddress));
        }

        /**
         * @param macAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder macAddressVariable(@Nullable Output<String> macAddressVariable) {
            $.macAddressVariable = macAddressVariable;
            return this;
        }

        /**
         * @param macAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder macAddressVariable(String macAddressVariable) {
            return macAddressVariable(Output.of(macAddressVariable));
        }

        /**
         * @param mediaType Media type - Choices: `auto-select`, `rj45`, `sfp`
         * 
         * @return builder
         * 
         */
        public Builder mediaType(@Nullable Output<String> mediaType) {
            $.mediaType = mediaType;
            return this;
        }

        /**
         * @param mediaType Media type - Choices: `auto-select`, `rj45`, `sfp`
         * 
         * @return builder
         * 
         */
        public Builder mediaType(String mediaType) {
            return mediaType(Output.of(mediaType));
        }

        /**
         * @param mediaTypeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder mediaTypeVariable(@Nullable Output<String> mediaTypeVariable) {
            $.mediaTypeVariable = mediaTypeVariable;
            return this;
        }

        /**
         * @param mediaTypeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder mediaTypeVariable(String mediaTypeVariable) {
            return mediaTypeVariable(Output.of(mediaTypeVariable));
        }

        /**
         * @param name The name of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nat64 NAT64 on this interface - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder nat64(@Nullable Output<Boolean> nat64) {
            $.nat64 = nat64;
            return this;
        }

        /**
         * @param nat64 NAT64 on this interface - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder nat64(Boolean nat64) {
            return nat64(Output.of(nat64));
        }

        /**
         * @param nat66 NAT66 on this interface - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder nat66(@Nullable Output<Boolean> nat66) {
            $.nat66 = nat66;
            return this;
        }

        /**
         * @param nat66 NAT66 on this interface - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder nat66(Boolean nat66) {
            return nat66(Output.of(nat66));
        }

        /**
         * @param natIpv4 enable Network Address Translation on this interface - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder natIpv4(@Nullable Output<Boolean> natIpv4) {
            $.natIpv4 = natIpv4;
            return this;
        }

        /**
         * @param natIpv4 enable Network Address Translation on this interface - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder natIpv4(Boolean natIpv4) {
            return natIpv4(Output.of(natIpv4));
        }

        /**
         * @param natIpv4Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natIpv4Variable(@Nullable Output<String> natIpv4Variable) {
            $.natIpv4Variable = natIpv4Variable;
            return this;
        }

        /**
         * @param natIpv4Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natIpv4Variable(String natIpv4Variable) {
            return natIpv4Variable(Output.of(natIpv4Variable));
        }

        /**
         * @param natIpv6 enable Network Address Translation ipv6 on this interface - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder natIpv6(@Nullable Output<Boolean> natIpv6) {
            $.natIpv6 = natIpv6;
            return this;
        }

        /**
         * @param natIpv6 enable Network Address Translation ipv6 on this interface - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder natIpv6(Boolean natIpv6) {
            return natIpv6(Output.of(natIpv6));
        }

        /**
         * @param natIpv6Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natIpv6Variable(@Nullable Output<String> natIpv6Variable) {
            $.natIpv6Variable = natIpv6Variable;
            return this;
        }

        /**
         * @param natIpv6Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natIpv6Variable(String natIpv6Variable) {
            return natIpv6Variable(Output.of(natIpv6Variable));
        }

        /**
         * @param natLoopback NAT Inside Source Loopback Interface
         * 
         * @return builder
         * 
         */
        public Builder natLoopback(@Nullable Output<String> natLoopback) {
            $.natLoopback = natLoopback;
            return this;
        }

        /**
         * @param natLoopback NAT Inside Source Loopback Interface
         * 
         * @return builder
         * 
         */
        public Builder natLoopback(String natLoopback) {
            return natLoopback(Output.of(natLoopback));
        }

        /**
         * @param natLoopbackVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natLoopbackVariable(@Nullable Output<String> natLoopbackVariable) {
            $.natLoopbackVariable = natLoopbackVariable;
            return this;
        }

        /**
         * @param natLoopbackVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natLoopbackVariable(String natLoopbackVariable) {
            return natLoopbackVariable(Output.of(natLoopbackVariable));
        }

        /**
         * @param natOverload NAT Overload - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder natOverload(@Nullable Output<Boolean> natOverload) {
            $.natOverload = natOverload;
            return this;
        }

        /**
         * @param natOverload NAT Overload - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder natOverload(Boolean natOverload) {
            return natOverload(Output.of(natOverload));
        }

        /**
         * @param natOverloadVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natOverloadVariable(@Nullable Output<String> natOverloadVariable) {
            $.natOverloadVariable = natOverloadVariable;
            return this;
        }

        /**
         * @param natOverloadVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natOverloadVariable(String natOverloadVariable) {
            return natOverloadVariable(Output.of(natOverloadVariable));
        }

        /**
         * @param natPrefixLength NAT Pool Prefix Length - Range: `1`-`32`
         * 
         * @return builder
         * 
         */
        public Builder natPrefixLength(@Nullable Output<Integer> natPrefixLength) {
            $.natPrefixLength = natPrefixLength;
            return this;
        }

        /**
         * @param natPrefixLength NAT Pool Prefix Length - Range: `1`-`32`
         * 
         * @return builder
         * 
         */
        public Builder natPrefixLength(Integer natPrefixLength) {
            return natPrefixLength(Output.of(natPrefixLength));
        }

        /**
         * @param natPrefixLengthVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natPrefixLengthVariable(@Nullable Output<String> natPrefixLengthVariable) {
            $.natPrefixLengthVariable = natPrefixLengthVariable;
            return this;
        }

        /**
         * @param natPrefixLengthVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natPrefixLengthVariable(String natPrefixLengthVariable) {
            return natPrefixLengthVariable(Output.of(natPrefixLengthVariable));
        }

        /**
         * @param natRangeEnd NAT Pool Range End
         * 
         * @return builder
         * 
         */
        public Builder natRangeEnd(@Nullable Output<String> natRangeEnd) {
            $.natRangeEnd = natRangeEnd;
            return this;
        }

        /**
         * @param natRangeEnd NAT Pool Range End
         * 
         * @return builder
         * 
         */
        public Builder natRangeEnd(String natRangeEnd) {
            return natRangeEnd(Output.of(natRangeEnd));
        }

        /**
         * @param natRangeEndVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natRangeEndVariable(@Nullable Output<String> natRangeEndVariable) {
            $.natRangeEndVariable = natRangeEndVariable;
            return this;
        }

        /**
         * @param natRangeEndVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natRangeEndVariable(String natRangeEndVariable) {
            return natRangeEndVariable(Output.of(natRangeEndVariable));
        }

        /**
         * @param natRangeStart NAT Pool Range Start
         * 
         * @return builder
         * 
         */
        public Builder natRangeStart(@Nullable Output<String> natRangeStart) {
            $.natRangeStart = natRangeStart;
            return this;
        }

        /**
         * @param natRangeStart NAT Pool Range Start
         * 
         * @return builder
         * 
         */
        public Builder natRangeStart(String natRangeStart) {
            return natRangeStart(Output.of(natRangeStart));
        }

        /**
         * @param natRangeStartVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natRangeStartVariable(@Nullable Output<String> natRangeStartVariable) {
            $.natRangeStartVariable = natRangeStartVariable;
            return this;
        }

        /**
         * @param natRangeStartVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natRangeStartVariable(String natRangeStartVariable) {
            return natRangeStartVariable(Output.of(natRangeStartVariable));
        }

        /**
         * @param natTcpTimeout Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
         * 
         * @return builder
         * 
         */
        public Builder natTcpTimeout(@Nullable Output<Integer> natTcpTimeout) {
            $.natTcpTimeout = natTcpTimeout;
            return this;
        }

        /**
         * @param natTcpTimeout Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
         * 
         * @return builder
         * 
         */
        public Builder natTcpTimeout(Integer natTcpTimeout) {
            return natTcpTimeout(Output.of(natTcpTimeout));
        }

        /**
         * @param natTcpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natTcpTimeoutVariable(@Nullable Output<String> natTcpTimeoutVariable) {
            $.natTcpTimeoutVariable = natTcpTimeoutVariable;
            return this;
        }

        /**
         * @param natTcpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natTcpTimeoutVariable(String natTcpTimeoutVariable) {
            return natTcpTimeoutVariable(Output.of(natTcpTimeoutVariable));
        }

        /**
         * @param natType NAT Type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
         * 
         * @return builder
         * 
         */
        public Builder natType(@Nullable Output<String> natType) {
            $.natType = natType;
            return this;
        }

        /**
         * @param natType NAT Type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
         * 
         * @return builder
         * 
         */
        public Builder natType(String natType) {
            return natType(Output.of(natType));
        }

        /**
         * @param natTypeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natTypeVariable(@Nullable Output<String> natTypeVariable) {
            $.natTypeVariable = natTypeVariable;
            return this;
        }

        /**
         * @param natTypeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natTypeVariable(String natTypeVariable) {
            return natTypeVariable(Output.of(natTypeVariable));
        }

        /**
         * @param natUdpTimeout Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
         * 
         * @return builder
         * 
         */
        public Builder natUdpTimeout(@Nullable Output<Integer> natUdpTimeout) {
            $.natUdpTimeout = natUdpTimeout;
            return this;
        }

        /**
         * @param natUdpTimeout Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
         * 
         * @return builder
         * 
         */
        public Builder natUdpTimeout(Integer natUdpTimeout) {
            return natUdpTimeout(Output.of(natUdpTimeout));
        }

        /**
         * @param natUdpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natUdpTimeoutVariable(@Nullable Output<String> natUdpTimeoutVariable) {
            $.natUdpTimeoutVariable = natUdpTimeoutVariable;
            return this;
        }

        /**
         * @param natUdpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natUdpTimeoutVariable(String natUdpTimeoutVariable) {
            return natUdpTimeoutVariable(Output.of(natUdpTimeoutVariable));
        }

        /**
         * @param newStaticNats static NAT
         * 
         * @return builder
         * 
         */
        public Builder newStaticNats(@Nullable Output<List<TransportWanVpnInterfaceEthernetProfileParcelNewStaticNatArgs>> newStaticNats) {
            $.newStaticNats = newStaticNats;
            return this;
        }

        /**
         * @param newStaticNats static NAT
         * 
         * @return builder
         * 
         */
        public Builder newStaticNats(List<TransportWanVpnInterfaceEthernetProfileParcelNewStaticNatArgs> newStaticNats) {
            return newStaticNats(Output.of(newStaticNats));
        }

        /**
         * @param newStaticNats static NAT
         * 
         * @return builder
         * 
         */
        public Builder newStaticNats(TransportWanVpnInterfaceEthernetProfileParcelNewStaticNatArgs... newStaticNats) {
            return newStaticNats(List.of(newStaticNats));
        }

        /**
         * @param perTunnelQos Per-tunnel Qos - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder perTunnelQos(@Nullable Output<Boolean> perTunnelQos) {
            $.perTunnelQos = perTunnelQos;
            return this;
        }

        /**
         * @param perTunnelQos Per-tunnel Qos - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder perTunnelQos(Boolean perTunnelQos) {
            return perTunnelQos(Output.of(perTunnelQos));
        }

        /**
         * @param perTunnelQosVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder perTunnelQosVariable(@Nullable Output<String> perTunnelQosVariable) {
            $.perTunnelQosVariable = perTunnelQosVariable;
            return this;
        }

        /**
         * @param perTunnelQosVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder perTunnelQosVariable(String perTunnelQosVariable) {
            return perTunnelQosVariable(Output.of(perTunnelQosVariable));
        }

        /**
         * @param qosAdaptiveBandwidthDownstream Shaping Rate Downstream - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveBandwidthDownstream(@Nullable Output<Boolean> qosAdaptiveBandwidthDownstream) {
            $.qosAdaptiveBandwidthDownstream = qosAdaptiveBandwidthDownstream;
            return this;
        }

        /**
         * @param qosAdaptiveBandwidthDownstream Shaping Rate Downstream - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveBandwidthDownstream(Boolean qosAdaptiveBandwidthDownstream) {
            return qosAdaptiveBandwidthDownstream(Output.of(qosAdaptiveBandwidthDownstream));
        }

        /**
         * @param qosAdaptiveBandwidthUpstream Shaping Rate Upstream - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveBandwidthUpstream(@Nullable Output<Boolean> qosAdaptiveBandwidthUpstream) {
            $.qosAdaptiveBandwidthUpstream = qosAdaptiveBandwidthUpstream;
            return this;
        }

        /**
         * @param qosAdaptiveBandwidthUpstream Shaping Rate Upstream - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveBandwidthUpstream(Boolean qosAdaptiveBandwidthUpstream) {
            return qosAdaptiveBandwidthUpstream(Output.of(qosAdaptiveBandwidthUpstream));
        }

        /**
         * @param qosAdaptiveDefaultDownstream Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveDefaultDownstream(@Nullable Output<Integer> qosAdaptiveDefaultDownstream) {
            $.qosAdaptiveDefaultDownstream = qosAdaptiveDefaultDownstream;
            return this;
        }

        /**
         * @param qosAdaptiveDefaultDownstream Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveDefaultDownstream(Integer qosAdaptiveDefaultDownstream) {
            return qosAdaptiveDefaultDownstream(Output.of(qosAdaptiveDefaultDownstream));
        }

        /**
         * @param qosAdaptiveDefaultDownstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveDefaultDownstreamVariable(@Nullable Output<String> qosAdaptiveDefaultDownstreamVariable) {
            $.qosAdaptiveDefaultDownstreamVariable = qosAdaptiveDefaultDownstreamVariable;
            return this;
        }

        /**
         * @param qosAdaptiveDefaultDownstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveDefaultDownstreamVariable(String qosAdaptiveDefaultDownstreamVariable) {
            return qosAdaptiveDefaultDownstreamVariable(Output.of(qosAdaptiveDefaultDownstreamVariable));
        }

        /**
         * @param qosAdaptiveDefaultUpstream Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveDefaultUpstream(@Nullable Output<Integer> qosAdaptiveDefaultUpstream) {
            $.qosAdaptiveDefaultUpstream = qosAdaptiveDefaultUpstream;
            return this;
        }

        /**
         * @param qosAdaptiveDefaultUpstream Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveDefaultUpstream(Integer qosAdaptiveDefaultUpstream) {
            return qosAdaptiveDefaultUpstream(Output.of(qosAdaptiveDefaultUpstream));
        }

        /**
         * @param qosAdaptiveDefaultUpstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveDefaultUpstreamVariable(@Nullable Output<String> qosAdaptiveDefaultUpstreamVariable) {
            $.qosAdaptiveDefaultUpstreamVariable = qosAdaptiveDefaultUpstreamVariable;
            return this;
        }

        /**
         * @param qosAdaptiveDefaultUpstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveDefaultUpstreamVariable(String qosAdaptiveDefaultUpstreamVariable) {
            return qosAdaptiveDefaultUpstreamVariable(Output.of(qosAdaptiveDefaultUpstreamVariable));
        }

        /**
         * @param qosAdaptiveMaxDownstream Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMaxDownstream(@Nullable Output<Integer> qosAdaptiveMaxDownstream) {
            $.qosAdaptiveMaxDownstream = qosAdaptiveMaxDownstream;
            return this;
        }

        /**
         * @param qosAdaptiveMaxDownstream Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMaxDownstream(Integer qosAdaptiveMaxDownstream) {
            return qosAdaptiveMaxDownstream(Output.of(qosAdaptiveMaxDownstream));
        }

        /**
         * @param qosAdaptiveMaxDownstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMaxDownstreamVariable(@Nullable Output<String> qosAdaptiveMaxDownstreamVariable) {
            $.qosAdaptiveMaxDownstreamVariable = qosAdaptiveMaxDownstreamVariable;
            return this;
        }

        /**
         * @param qosAdaptiveMaxDownstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMaxDownstreamVariable(String qosAdaptiveMaxDownstreamVariable) {
            return qosAdaptiveMaxDownstreamVariable(Output.of(qosAdaptiveMaxDownstreamVariable));
        }

        /**
         * @param qosAdaptiveMaxUpstream Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMaxUpstream(@Nullable Output<Integer> qosAdaptiveMaxUpstream) {
            $.qosAdaptiveMaxUpstream = qosAdaptiveMaxUpstream;
            return this;
        }

        /**
         * @param qosAdaptiveMaxUpstream Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMaxUpstream(Integer qosAdaptiveMaxUpstream) {
            return qosAdaptiveMaxUpstream(Output.of(qosAdaptiveMaxUpstream));
        }

        /**
         * @param qosAdaptiveMaxUpstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMaxUpstreamVariable(@Nullable Output<String> qosAdaptiveMaxUpstreamVariable) {
            $.qosAdaptiveMaxUpstreamVariable = qosAdaptiveMaxUpstreamVariable;
            return this;
        }

        /**
         * @param qosAdaptiveMaxUpstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMaxUpstreamVariable(String qosAdaptiveMaxUpstreamVariable) {
            return qosAdaptiveMaxUpstreamVariable(Output.of(qosAdaptiveMaxUpstreamVariable));
        }

        /**
         * @param qosAdaptiveMinDownstream Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMinDownstream(@Nullable Output<Integer> qosAdaptiveMinDownstream) {
            $.qosAdaptiveMinDownstream = qosAdaptiveMinDownstream;
            return this;
        }

        /**
         * @param qosAdaptiveMinDownstream Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMinDownstream(Integer qosAdaptiveMinDownstream) {
            return qosAdaptiveMinDownstream(Output.of(qosAdaptiveMinDownstream));
        }

        /**
         * @param qosAdaptiveMinDownstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMinDownstreamVariable(@Nullable Output<String> qosAdaptiveMinDownstreamVariable) {
            $.qosAdaptiveMinDownstreamVariable = qosAdaptiveMinDownstreamVariable;
            return this;
        }

        /**
         * @param qosAdaptiveMinDownstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMinDownstreamVariable(String qosAdaptiveMinDownstreamVariable) {
            return qosAdaptiveMinDownstreamVariable(Output.of(qosAdaptiveMinDownstreamVariable));
        }

        /**
         * @param qosAdaptiveMinUpstream Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMinUpstream(@Nullable Output<Integer> qosAdaptiveMinUpstream) {
            $.qosAdaptiveMinUpstream = qosAdaptiveMinUpstream;
            return this;
        }

        /**
         * @param qosAdaptiveMinUpstream Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMinUpstream(Integer qosAdaptiveMinUpstream) {
            return qosAdaptiveMinUpstream(Output.of(qosAdaptiveMinUpstream));
        }

        /**
         * @param qosAdaptiveMinUpstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMinUpstreamVariable(@Nullable Output<String> qosAdaptiveMinUpstreamVariable) {
            $.qosAdaptiveMinUpstreamVariable = qosAdaptiveMinUpstreamVariable;
            return this;
        }

        /**
         * @param qosAdaptiveMinUpstreamVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptiveMinUpstreamVariable(String qosAdaptiveMinUpstreamVariable) {
            return qosAdaptiveMinUpstreamVariable(Output.of(qosAdaptiveMinUpstreamVariable));
        }

        /**
         * @param qosAdaptivePeriod Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptivePeriod(@Nullable Output<Integer> qosAdaptivePeriod) {
            $.qosAdaptivePeriod = qosAdaptivePeriod;
            return this;
        }

        /**
         * @param qosAdaptivePeriod Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptivePeriod(Integer qosAdaptivePeriod) {
            return qosAdaptivePeriod(Output.of(qosAdaptivePeriod));
        }

        /**
         * @param qosAdaptivePeriodVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptivePeriodVariable(@Nullable Output<String> qosAdaptivePeriodVariable) {
            $.qosAdaptivePeriodVariable = qosAdaptivePeriodVariable;
            return this;
        }

        /**
         * @param qosAdaptivePeriodVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosAdaptivePeriodVariable(String qosAdaptivePeriodVariable) {
            return qosAdaptivePeriodVariable(Output.of(qosAdaptivePeriodVariable));
        }

        /**
         * @param qosShapingRate Shaping Rate (Kbps) - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosShapingRate(@Nullable Output<Integer> qosShapingRate) {
            $.qosShapingRate = qosShapingRate;
            return this;
        }

        /**
         * @param qosShapingRate Shaping Rate (Kbps) - Range: `8`-`100000000`
         * 
         * @return builder
         * 
         */
        public Builder qosShapingRate(Integer qosShapingRate) {
            return qosShapingRate(Output.of(qosShapingRate));
        }

        /**
         * @param qosShapingRateVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosShapingRateVariable(@Nullable Output<String> qosShapingRateVariable) {
            $.qosShapingRateVariable = qosShapingRateVariable;
            return this;
        }

        /**
         * @param qosShapingRateVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder qosShapingRateVariable(String qosShapingRateVariable) {
            return qosShapingRateVariable(Output.of(qosShapingRateVariable));
        }

        /**
         * @param serviceProvider Service Provider Name
         * 
         * @return builder
         * 
         */
        public Builder serviceProvider(@Nullable Output<String> serviceProvider) {
            $.serviceProvider = serviceProvider;
            return this;
        }

        /**
         * @param serviceProvider Service Provider Name
         * 
         * @return builder
         * 
         */
        public Builder serviceProvider(String serviceProvider) {
            return serviceProvider(Output.of(serviceProvider));
        }

        /**
         * @param serviceProviderVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder serviceProviderVariable(@Nullable Output<String> serviceProviderVariable) {
            $.serviceProviderVariable = serviceProviderVariable;
            return this;
        }

        /**
         * @param serviceProviderVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder serviceProviderVariable(String serviceProviderVariable) {
            return serviceProviderVariable(Output.of(serviceProviderVariable));
        }

        /**
         * @param shutdown - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder shutdown(@Nullable Output<Boolean> shutdown) {
            $.shutdown = shutdown;
            return this;
        }

        /**
         * @param shutdown - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder shutdown(Boolean shutdown) {
            return shutdown(Output.of(shutdown));
        }

        /**
         * @param shutdownVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdownVariable(@Nullable Output<String> shutdownVariable) {
            $.shutdownVariable = shutdownVariable;
            return this;
        }

        /**
         * @param shutdownVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdownVariable(String shutdownVariable) {
            return shutdownVariable(Output.of(shutdownVariable));
        }

        /**
         * @param speed Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
         * 
         * @return builder
         * 
         */
        public Builder speed(@Nullable Output<String> speed) {
            $.speed = speed;
            return this;
        }

        /**
         * @param speed Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
         * 
         * @return builder
         * 
         */
        public Builder speed(String speed) {
            return speed(Output.of(speed));
        }

        /**
         * @param speedVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder speedVariable(@Nullable Output<String> speedVariable) {
            $.speedVariable = speedVariable;
            return this;
        }

        /**
         * @param speedVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder speedVariable(String speedVariable) {
            return speedVariable(Output.of(speedVariable));
        }

        /**
         * @param staticNat66s static NAT66
         * 
         * @return builder
         * 
         */
        public Builder staticNat66s(@Nullable Output<List<TransportWanVpnInterfaceEthernetProfileParcelStaticNat66Args>> staticNat66s) {
            $.staticNat66s = staticNat66s;
            return this;
        }

        /**
         * @param staticNat66s static NAT66
         * 
         * @return builder
         * 
         */
        public Builder staticNat66s(List<TransportWanVpnInterfaceEthernetProfileParcelStaticNat66Args> staticNat66s) {
            return staticNat66s(Output.of(staticNat66s));
        }

        /**
         * @param staticNat66s static NAT66
         * 
         * @return builder
         * 
         */
        public Builder staticNat66s(TransportWanVpnInterfaceEthernetProfileParcelStaticNat66Args... staticNat66s) {
            return staticNat66s(List.of(staticNat66s));
        }

        /**
         * @param tcpMss TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
         * 
         * @return builder
         * 
         */
        public Builder tcpMss(@Nullable Output<Integer> tcpMss) {
            $.tcpMss = tcpMss;
            return this;
        }

        /**
         * @param tcpMss TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
         * 
         * @return builder
         * 
         */
        public Builder tcpMss(Integer tcpMss) {
            return tcpMss(Output.of(tcpMss));
        }

        /**
         * @param tcpMssVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tcpMssVariable(@Nullable Output<String> tcpMssVariable) {
            $.tcpMssVariable = tcpMssVariable;
            return this;
        }

        /**
         * @param tcpMssVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tcpMssVariable(String tcpMssVariable) {
            return tcpMssVariable(Output.of(tcpMssVariable));
        }

        /**
         * @param tlocExtension Extends a local TLOC to a remote node only for vpn 0
         * 
         * @return builder
         * 
         */
        public Builder tlocExtension(@Nullable Output<String> tlocExtension) {
            $.tlocExtension = tlocExtension;
            return this;
        }

        /**
         * @param tlocExtension Extends a local TLOC to a remote node only for vpn 0
         * 
         * @return builder
         * 
         */
        public Builder tlocExtension(String tlocExtension) {
            return tlocExtension(Output.of(tlocExtension));
        }

        /**
         * @param tlocExtensionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tlocExtensionVariable(@Nullable Output<String> tlocExtensionVariable) {
            $.tlocExtensionVariable = tlocExtensionVariable;
            return this;
        }

        /**
         * @param tlocExtensionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tlocExtensionVariable(String tlocExtensionVariable) {
            return tlocExtensionVariable(Output.of(tlocExtensionVariable));
        }

        /**
         * @param tracker Enable tracker for this interface
         * 
         * @return builder
         * 
         */
        public Builder tracker(@Nullable Output<String> tracker) {
            $.tracker = tracker;
            return this;
        }

        /**
         * @param tracker Enable tracker for this interface
         * 
         * @return builder
         * 
         */
        public Builder tracker(String tracker) {
            return tracker(Output.of(tracker));
        }

        /**
         * @param trackerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackerVariable(@Nullable Output<String> trackerVariable) {
            $.trackerVariable = trackerVariable;
            return this;
        }

        /**
         * @param trackerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackerVariable(String trackerVariable) {
            return trackerVariable(Output.of(trackerVariable));
        }

        /**
         * @param transportWanVpnProfileParcelId Transport WAN VPN Profile Parcel ID
         * 
         * @return builder
         * 
         */
        public Builder transportWanVpnProfileParcelId(@Nullable Output<String> transportWanVpnProfileParcelId) {
            $.transportWanVpnProfileParcelId = transportWanVpnProfileParcelId;
            return this;
        }

        /**
         * @param transportWanVpnProfileParcelId Transport WAN VPN Profile Parcel ID
         * 
         * @return builder
         * 
         */
        public Builder transportWanVpnProfileParcelId(String transportWanVpnProfileParcelId) {
            return transportWanVpnProfileParcelId(Output.of(transportWanVpnProfileParcelId));
        }

        /**
         * @param tunnelBandwidthPercent Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
         * 
         * @return builder
         * 
         */
        public Builder tunnelBandwidthPercent(@Nullable Output<Integer> tunnelBandwidthPercent) {
            $.tunnelBandwidthPercent = tunnelBandwidthPercent;
            return this;
        }

        /**
         * @param tunnelBandwidthPercent Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
         * 
         * @return builder
         * 
         */
        public Builder tunnelBandwidthPercent(Integer tunnelBandwidthPercent) {
            return tunnelBandwidthPercent(Output.of(tunnelBandwidthPercent));
        }

        /**
         * @param tunnelBandwidthPercentVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelBandwidthPercentVariable(@Nullable Output<String> tunnelBandwidthPercentVariable) {
            $.tunnelBandwidthPercentVariable = tunnelBandwidthPercentVariable;
            return this;
        }

        /**
         * @param tunnelBandwidthPercentVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelBandwidthPercentVariable(String tunnelBandwidthPercentVariable) {
            return tunnelBandwidthPercentVariable(Output.of(tunnelBandwidthPercentVariable));
        }

        /**
         * @param tunnelInterface Tunnel Interface on/off - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterface(@Nullable Output<Boolean> tunnelInterface) {
            $.tunnelInterface = tunnelInterface;
            return this;
        }

        /**
         * @param tunnelInterface Tunnel Interface on/off - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterface(Boolean tunnelInterface) {
            return tunnelInterface(Output.of(tunnelInterface));
        }

        /**
         * @param tunnelInterfaceAllowAll Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowAll(@Nullable Output<Boolean> tunnelInterfaceAllowAll) {
            $.tunnelInterfaceAllowAll = tunnelInterfaceAllowAll;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowAll Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowAll(Boolean tunnelInterfaceAllowAll) {
            return tunnelInterfaceAllowAll(Output.of(tunnelInterfaceAllowAll));
        }

        /**
         * @param tunnelInterfaceAllowAllVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowAllVariable(@Nullable Output<String> tunnelInterfaceAllowAllVariable) {
            $.tunnelInterfaceAllowAllVariable = tunnelInterfaceAllowAllVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowAllVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowAllVariable(String tunnelInterfaceAllowAllVariable) {
            return tunnelInterfaceAllowAllVariable(Output.of(tunnelInterfaceAllowAllVariable));
        }

        /**
         * @param tunnelInterfaceAllowBfd Allow/Deny BFD - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowBfd(@Nullable Output<Boolean> tunnelInterfaceAllowBfd) {
            $.tunnelInterfaceAllowBfd = tunnelInterfaceAllowBfd;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowBfd Allow/Deny BFD - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowBfd(Boolean tunnelInterfaceAllowBfd) {
            return tunnelInterfaceAllowBfd(Output.of(tunnelInterfaceAllowBfd));
        }

        /**
         * @param tunnelInterfaceAllowBfdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowBfdVariable(@Nullable Output<String> tunnelInterfaceAllowBfdVariable) {
            $.tunnelInterfaceAllowBfdVariable = tunnelInterfaceAllowBfdVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowBfdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowBfdVariable(String tunnelInterfaceAllowBfdVariable) {
            return tunnelInterfaceAllowBfdVariable(Output.of(tunnelInterfaceAllowBfdVariable));
        }

        /**
         * @param tunnelInterfaceAllowBgp Allow/deny BGP - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowBgp(@Nullable Output<Boolean> tunnelInterfaceAllowBgp) {
            $.tunnelInterfaceAllowBgp = tunnelInterfaceAllowBgp;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowBgp Allow/deny BGP - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowBgp(Boolean tunnelInterfaceAllowBgp) {
            return tunnelInterfaceAllowBgp(Output.of(tunnelInterfaceAllowBgp));
        }

        /**
         * @param tunnelInterfaceAllowBgpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowBgpVariable(@Nullable Output<String> tunnelInterfaceAllowBgpVariable) {
            $.tunnelInterfaceAllowBgpVariable = tunnelInterfaceAllowBgpVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowBgpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowBgpVariable(String tunnelInterfaceAllowBgpVariable) {
            return tunnelInterfaceAllowBgpVariable(Output.of(tunnelInterfaceAllowBgpVariable));
        }

        /**
         * @param tunnelInterfaceAllowDbs Allow/Deny DNS - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowDbs(@Nullable Output<Boolean> tunnelInterfaceAllowDbs) {
            $.tunnelInterfaceAllowDbs = tunnelInterfaceAllowDbs;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowDbs Allow/Deny DNS - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowDbs(Boolean tunnelInterfaceAllowDbs) {
            return tunnelInterfaceAllowDbs(Output.of(tunnelInterfaceAllowDbs));
        }

        /**
         * @param tunnelInterfaceAllowDbsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowDbsVariable(@Nullable Output<String> tunnelInterfaceAllowDbsVariable) {
            $.tunnelInterfaceAllowDbsVariable = tunnelInterfaceAllowDbsVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowDbsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowDbsVariable(String tunnelInterfaceAllowDbsVariable) {
            return tunnelInterfaceAllowDbsVariable(Output.of(tunnelInterfaceAllowDbsVariable));
        }

        /**
         * @param tunnelInterfaceAllowDhcp Allow/Deny DHCP - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowDhcp(@Nullable Output<Boolean> tunnelInterfaceAllowDhcp) {
            $.tunnelInterfaceAllowDhcp = tunnelInterfaceAllowDhcp;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowDhcp Allow/Deny DHCP - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowDhcp(Boolean tunnelInterfaceAllowDhcp) {
            return tunnelInterfaceAllowDhcp(Output.of(tunnelInterfaceAllowDhcp));
        }

        /**
         * @param tunnelInterfaceAllowDhcpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowDhcpVariable(@Nullable Output<String> tunnelInterfaceAllowDhcpVariable) {
            $.tunnelInterfaceAllowDhcpVariable = tunnelInterfaceAllowDhcpVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowDhcpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowDhcpVariable(String tunnelInterfaceAllowDhcpVariable) {
            return tunnelInterfaceAllowDhcpVariable(Output.of(tunnelInterfaceAllowDhcpVariable));
        }

        /**
         * @param tunnelInterfaceAllowHttps Allow/Deny HTTPS - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowHttps(@Nullable Output<Boolean> tunnelInterfaceAllowHttps) {
            $.tunnelInterfaceAllowHttps = tunnelInterfaceAllowHttps;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowHttps Allow/Deny HTTPS - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowHttps(Boolean tunnelInterfaceAllowHttps) {
            return tunnelInterfaceAllowHttps(Output.of(tunnelInterfaceAllowHttps));
        }

        /**
         * @param tunnelInterfaceAllowHttpsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowHttpsVariable(@Nullable Output<String> tunnelInterfaceAllowHttpsVariable) {
            $.tunnelInterfaceAllowHttpsVariable = tunnelInterfaceAllowHttpsVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowHttpsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowHttpsVariable(String tunnelInterfaceAllowHttpsVariable) {
            return tunnelInterfaceAllowHttpsVariable(Output.of(tunnelInterfaceAllowHttpsVariable));
        }

        /**
         * @param tunnelInterfaceAllowIcmp Allow/Deny ICMP - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowIcmp(@Nullable Output<Boolean> tunnelInterfaceAllowIcmp) {
            $.tunnelInterfaceAllowIcmp = tunnelInterfaceAllowIcmp;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowIcmp Allow/Deny ICMP - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowIcmp(Boolean tunnelInterfaceAllowIcmp) {
            return tunnelInterfaceAllowIcmp(Output.of(tunnelInterfaceAllowIcmp));
        }

        /**
         * @param tunnelInterfaceAllowIcmpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowIcmpVariable(@Nullable Output<String> tunnelInterfaceAllowIcmpVariable) {
            $.tunnelInterfaceAllowIcmpVariable = tunnelInterfaceAllowIcmpVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowIcmpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowIcmpVariable(String tunnelInterfaceAllowIcmpVariable) {
            return tunnelInterfaceAllowIcmpVariable(Output.of(tunnelInterfaceAllowIcmpVariable));
        }

        /**
         * @param tunnelInterfaceAllowNetconf Allow/Deny NETCONF - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowNetconf(@Nullable Output<Boolean> tunnelInterfaceAllowNetconf) {
            $.tunnelInterfaceAllowNetconf = tunnelInterfaceAllowNetconf;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowNetconf Allow/Deny NETCONF - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowNetconf(Boolean tunnelInterfaceAllowNetconf) {
            return tunnelInterfaceAllowNetconf(Output.of(tunnelInterfaceAllowNetconf));
        }

        /**
         * @param tunnelInterfaceAllowNetconfVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowNetconfVariable(@Nullable Output<String> tunnelInterfaceAllowNetconfVariable) {
            $.tunnelInterfaceAllowNetconfVariable = tunnelInterfaceAllowNetconfVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowNetconfVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowNetconfVariable(String tunnelInterfaceAllowNetconfVariable) {
            return tunnelInterfaceAllowNetconfVariable(Output.of(tunnelInterfaceAllowNetconfVariable));
        }

        /**
         * @param tunnelInterfaceAllowNtp Allow/Deny NTP - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowNtp(@Nullable Output<Boolean> tunnelInterfaceAllowNtp) {
            $.tunnelInterfaceAllowNtp = tunnelInterfaceAllowNtp;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowNtp Allow/Deny NTP - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowNtp(Boolean tunnelInterfaceAllowNtp) {
            return tunnelInterfaceAllowNtp(Output.of(tunnelInterfaceAllowNtp));
        }

        /**
         * @param tunnelInterfaceAllowNtpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowNtpVariable(@Nullable Output<String> tunnelInterfaceAllowNtpVariable) {
            $.tunnelInterfaceAllowNtpVariable = tunnelInterfaceAllowNtpVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowNtpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowNtpVariable(String tunnelInterfaceAllowNtpVariable) {
            return tunnelInterfaceAllowNtpVariable(Output.of(tunnelInterfaceAllowNtpVariable));
        }

        /**
         * @param tunnelInterfaceAllowOspf Allow/Deny OSPF - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowOspf(@Nullable Output<Boolean> tunnelInterfaceAllowOspf) {
            $.tunnelInterfaceAllowOspf = tunnelInterfaceAllowOspf;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowOspf Allow/Deny OSPF - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowOspf(Boolean tunnelInterfaceAllowOspf) {
            return tunnelInterfaceAllowOspf(Output.of(tunnelInterfaceAllowOspf));
        }

        /**
         * @param tunnelInterfaceAllowOspfVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowOspfVariable(@Nullable Output<String> tunnelInterfaceAllowOspfVariable) {
            $.tunnelInterfaceAllowOspfVariable = tunnelInterfaceAllowOspfVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowOspfVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowOspfVariable(String tunnelInterfaceAllowOspfVariable) {
            return tunnelInterfaceAllowOspfVariable(Output.of(tunnelInterfaceAllowOspfVariable));
        }

        /**
         * @param tunnelInterfaceAllowSnmp Allow/Deny SNMP - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowSnmp(@Nullable Output<Boolean> tunnelInterfaceAllowSnmp) {
            $.tunnelInterfaceAllowSnmp = tunnelInterfaceAllowSnmp;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowSnmp Allow/Deny SNMP - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowSnmp(Boolean tunnelInterfaceAllowSnmp) {
            return tunnelInterfaceAllowSnmp(Output.of(tunnelInterfaceAllowSnmp));
        }

        /**
         * @param tunnelInterfaceAllowSnmpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowSnmpVariable(@Nullable Output<String> tunnelInterfaceAllowSnmpVariable) {
            $.tunnelInterfaceAllowSnmpVariable = tunnelInterfaceAllowSnmpVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowSnmpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowSnmpVariable(String tunnelInterfaceAllowSnmpVariable) {
            return tunnelInterfaceAllowSnmpVariable(Output.of(tunnelInterfaceAllowSnmpVariable));
        }

        /**
         * @param tunnelInterfaceAllowSsh Allow/Deny SSH - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowSsh(@Nullable Output<Boolean> tunnelInterfaceAllowSsh) {
            $.tunnelInterfaceAllowSsh = tunnelInterfaceAllowSsh;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowSsh Allow/Deny SSH - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowSsh(Boolean tunnelInterfaceAllowSsh) {
            return tunnelInterfaceAllowSsh(Output.of(tunnelInterfaceAllowSsh));
        }

        /**
         * @param tunnelInterfaceAllowSshVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowSshVariable(@Nullable Output<String> tunnelInterfaceAllowSshVariable) {
            $.tunnelInterfaceAllowSshVariable = tunnelInterfaceAllowSshVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowSshVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowSshVariable(String tunnelInterfaceAllowSshVariable) {
            return tunnelInterfaceAllowSshVariable(Output.of(tunnelInterfaceAllowSshVariable));
        }

        /**
         * @param tunnelInterfaceAllowStun Allow/Deny STUN - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowStun(@Nullable Output<Boolean> tunnelInterfaceAllowStun) {
            $.tunnelInterfaceAllowStun = tunnelInterfaceAllowStun;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowStun Allow/Deny STUN - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowStun(Boolean tunnelInterfaceAllowStun) {
            return tunnelInterfaceAllowStun(Output.of(tunnelInterfaceAllowStun));
        }

        /**
         * @param tunnelInterfaceAllowStunVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowStunVariable(@Nullable Output<String> tunnelInterfaceAllowStunVariable) {
            $.tunnelInterfaceAllowStunVariable = tunnelInterfaceAllowStunVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceAllowStunVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceAllowStunVariable(String tunnelInterfaceAllowStunVariable) {
            return tunnelInterfaceAllowStunVariable(Output.of(tunnelInterfaceAllowStunVariable));
        }

        /**
         * @param tunnelInterfaceBindLoopbackTunnel Bind loopback tunnel interface to a physical interface
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceBindLoopbackTunnel(@Nullable Output<String> tunnelInterfaceBindLoopbackTunnel) {
            $.tunnelInterfaceBindLoopbackTunnel = tunnelInterfaceBindLoopbackTunnel;
            return this;
        }

        /**
         * @param tunnelInterfaceBindLoopbackTunnel Bind loopback tunnel interface to a physical interface
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceBindLoopbackTunnel(String tunnelInterfaceBindLoopbackTunnel) {
            return tunnelInterfaceBindLoopbackTunnel(Output.of(tunnelInterfaceBindLoopbackTunnel));
        }

        /**
         * @param tunnelInterfaceBindLoopbackTunnelVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceBindLoopbackTunnelVariable(@Nullable Output<String> tunnelInterfaceBindLoopbackTunnelVariable) {
            $.tunnelInterfaceBindLoopbackTunnelVariable = tunnelInterfaceBindLoopbackTunnelVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceBindLoopbackTunnelVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceBindLoopbackTunnelVariable(String tunnelInterfaceBindLoopbackTunnelVariable) {
            return tunnelInterfaceBindLoopbackTunnelVariable(Output.of(tunnelInterfaceBindLoopbackTunnelVariable));
        }

        /**
         * @param tunnelInterfaceBorder Set TLOC as border TLOC - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceBorder(@Nullable Output<Boolean> tunnelInterfaceBorder) {
            $.tunnelInterfaceBorder = tunnelInterfaceBorder;
            return this;
        }

        /**
         * @param tunnelInterfaceBorder Set TLOC as border TLOC - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceBorder(Boolean tunnelInterfaceBorder) {
            return tunnelInterfaceBorder(Output.of(tunnelInterfaceBorder));
        }

        /**
         * @param tunnelInterfaceBorderVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceBorderVariable(@Nullable Output<String> tunnelInterfaceBorderVariable) {
            $.tunnelInterfaceBorderVariable = tunnelInterfaceBorderVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceBorderVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceBorderVariable(String tunnelInterfaceBorderVariable) {
            return tunnelInterfaceBorderVariable(Output.of(tunnelInterfaceBorderVariable));
        }

        /**
         * @param tunnelInterfaceCarrier Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
         * `carrier7`, `carrier8` - Default value: `default`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceCarrier(@Nullable Output<String> tunnelInterfaceCarrier) {
            $.tunnelInterfaceCarrier = tunnelInterfaceCarrier;
            return this;
        }

        /**
         * @param tunnelInterfaceCarrier Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
         * `carrier7`, `carrier8` - Default value: `default`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceCarrier(String tunnelInterfaceCarrier) {
            return tunnelInterfaceCarrier(Output.of(tunnelInterfaceCarrier));
        }

        /**
         * @param tunnelInterfaceCarrierVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceCarrierVariable(@Nullable Output<String> tunnelInterfaceCarrierVariable) {
            $.tunnelInterfaceCarrierVariable = tunnelInterfaceCarrierVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceCarrierVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceCarrierVariable(String tunnelInterfaceCarrierVariable) {
            return tunnelInterfaceCarrierVariable(Output.of(tunnelInterfaceCarrierVariable));
        }

        /**
         * @param tunnelInterfaceClearDontFragment Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceClearDontFragment(@Nullable Output<Boolean> tunnelInterfaceClearDontFragment) {
            $.tunnelInterfaceClearDontFragment = tunnelInterfaceClearDontFragment;
            return this;
        }

        /**
         * @param tunnelInterfaceClearDontFragment Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceClearDontFragment(Boolean tunnelInterfaceClearDontFragment) {
            return tunnelInterfaceClearDontFragment(Output.of(tunnelInterfaceClearDontFragment));
        }

        /**
         * @param tunnelInterfaceClearDontFragmentVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceClearDontFragmentVariable(@Nullable Output<String> tunnelInterfaceClearDontFragmentVariable) {
            $.tunnelInterfaceClearDontFragmentVariable = tunnelInterfaceClearDontFragmentVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceClearDontFragmentVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceClearDontFragmentVariable(String tunnelInterfaceClearDontFragmentVariable) {
            return tunnelInterfaceClearDontFragmentVariable(Output.of(tunnelInterfaceClearDontFragmentVariable));
        }

        /**
         * @param tunnelInterfaceColor Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
         * `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
         * `private4`, `private5`, `private6` - Default value: `mpls`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceColor(@Nullable Output<String> tunnelInterfaceColor) {
            $.tunnelInterfaceColor = tunnelInterfaceColor;
            return this;
        }

        /**
         * @param tunnelInterfaceColor Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
         * `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
         * `private4`, `private5`, `private6` - Default value: `mpls`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceColor(String tunnelInterfaceColor) {
            return tunnelInterfaceColor(Output.of(tunnelInterfaceColor));
        }

        /**
         * @param tunnelInterfaceColorRestrict Restrict this TLOC behavior - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceColorRestrict(@Nullable Output<Boolean> tunnelInterfaceColorRestrict) {
            $.tunnelInterfaceColorRestrict = tunnelInterfaceColorRestrict;
            return this;
        }

        /**
         * @param tunnelInterfaceColorRestrict Restrict this TLOC behavior - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceColorRestrict(Boolean tunnelInterfaceColorRestrict) {
            return tunnelInterfaceColorRestrict(Output.of(tunnelInterfaceColorRestrict));
        }

        /**
         * @param tunnelInterfaceColorRestrictVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceColorRestrictVariable(@Nullable Output<String> tunnelInterfaceColorRestrictVariable) {
            $.tunnelInterfaceColorRestrictVariable = tunnelInterfaceColorRestrictVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceColorRestrictVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceColorRestrictVariable(String tunnelInterfaceColorRestrictVariable) {
            return tunnelInterfaceColorRestrictVariable(Output.of(tunnelInterfaceColorRestrictVariable));
        }

        /**
         * @param tunnelInterfaceColorVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceColorVariable(@Nullable Output<String> tunnelInterfaceColorVariable) {
            $.tunnelInterfaceColorVariable = tunnelInterfaceColorVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceColorVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceColorVariable(String tunnelInterfaceColorVariable) {
            return tunnelInterfaceColorVariable(Output.of(tunnelInterfaceColorVariable));
        }

        /**
         * @param tunnelInterfaceCtsSgtPropagation CTS SGT Propagation configuration - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceCtsSgtPropagation(@Nullable Output<Boolean> tunnelInterfaceCtsSgtPropagation) {
            $.tunnelInterfaceCtsSgtPropagation = tunnelInterfaceCtsSgtPropagation;
            return this;
        }

        /**
         * @param tunnelInterfaceCtsSgtPropagation CTS SGT Propagation configuration - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceCtsSgtPropagation(Boolean tunnelInterfaceCtsSgtPropagation) {
            return tunnelInterfaceCtsSgtPropagation(Output.of(tunnelInterfaceCtsSgtPropagation));
        }

        /**
         * @param tunnelInterfaceCtsSgtPropagationVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceCtsSgtPropagationVariable(@Nullable Output<String> tunnelInterfaceCtsSgtPropagationVariable) {
            $.tunnelInterfaceCtsSgtPropagationVariable = tunnelInterfaceCtsSgtPropagationVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceCtsSgtPropagationVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceCtsSgtPropagationVariable(String tunnelInterfaceCtsSgtPropagationVariable) {
            return tunnelInterfaceCtsSgtPropagationVariable(Output.of(tunnelInterfaceCtsSgtPropagationVariable));
        }

        /**
         * @param tunnelInterfaceEncapsulations Encapsulation for TLOC
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceEncapsulations(@Nullable Output<List<TransportWanVpnInterfaceEthernetProfileParcelTunnelInterfaceEncapsulationArgs>> tunnelInterfaceEncapsulations) {
            $.tunnelInterfaceEncapsulations = tunnelInterfaceEncapsulations;
            return this;
        }

        /**
         * @param tunnelInterfaceEncapsulations Encapsulation for TLOC
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceEncapsulations(List<TransportWanVpnInterfaceEthernetProfileParcelTunnelInterfaceEncapsulationArgs> tunnelInterfaceEncapsulations) {
            return tunnelInterfaceEncapsulations(Output.of(tunnelInterfaceEncapsulations));
        }

        /**
         * @param tunnelInterfaceEncapsulations Encapsulation for TLOC
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceEncapsulations(TransportWanVpnInterfaceEthernetProfileParcelTunnelInterfaceEncapsulationArgs... tunnelInterfaceEncapsulations) {
            return tunnelInterfaceEncapsulations(List.of(tunnelInterfaceEncapsulations));
        }

        /**
         * @param tunnelInterfaceExcludeControllerGroupListVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceExcludeControllerGroupListVariable(@Nullable Output<String> tunnelInterfaceExcludeControllerGroupListVariable) {
            $.tunnelInterfaceExcludeControllerGroupListVariable = tunnelInterfaceExcludeControllerGroupListVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceExcludeControllerGroupListVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceExcludeControllerGroupListVariable(String tunnelInterfaceExcludeControllerGroupListVariable) {
            return tunnelInterfaceExcludeControllerGroupListVariable(Output.of(tunnelInterfaceExcludeControllerGroupListVariable));
        }

        /**
         * @param tunnelInterfaceExcludeControllerGroupLists Exclude the following controller groups defined in this list.
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceExcludeControllerGroupLists(@Nullable Output<List<Integer>> tunnelInterfaceExcludeControllerGroupLists) {
            $.tunnelInterfaceExcludeControllerGroupLists = tunnelInterfaceExcludeControllerGroupLists;
            return this;
        }

        /**
         * @param tunnelInterfaceExcludeControllerGroupLists Exclude the following controller groups defined in this list.
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceExcludeControllerGroupLists(List<Integer> tunnelInterfaceExcludeControllerGroupLists) {
            return tunnelInterfaceExcludeControllerGroupLists(Output.of(tunnelInterfaceExcludeControllerGroupLists));
        }

        /**
         * @param tunnelInterfaceExcludeControllerGroupLists Exclude the following controller groups defined in this list.
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceExcludeControllerGroupLists(Integer... tunnelInterfaceExcludeControllerGroupLists) {
            return tunnelInterfaceExcludeControllerGroupLists(List.of(tunnelInterfaceExcludeControllerGroupLists));
        }

        /**
         * @param tunnelInterfaceGreTunnelDestinationIp GRE tunnel destination IP
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceGreTunnelDestinationIp(@Nullable Output<String> tunnelInterfaceGreTunnelDestinationIp) {
            $.tunnelInterfaceGreTunnelDestinationIp = tunnelInterfaceGreTunnelDestinationIp;
            return this;
        }

        /**
         * @param tunnelInterfaceGreTunnelDestinationIp GRE tunnel destination IP
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceGreTunnelDestinationIp(String tunnelInterfaceGreTunnelDestinationIp) {
            return tunnelInterfaceGreTunnelDestinationIp(Output.of(tunnelInterfaceGreTunnelDestinationIp));
        }

        /**
         * @param tunnelInterfaceGreTunnelDestinationIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceGreTunnelDestinationIpVariable(@Nullable Output<String> tunnelInterfaceGreTunnelDestinationIpVariable) {
            $.tunnelInterfaceGreTunnelDestinationIpVariable = tunnelInterfaceGreTunnelDestinationIpVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceGreTunnelDestinationIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceGreTunnelDestinationIpVariable(String tunnelInterfaceGreTunnelDestinationIpVariable) {
            return tunnelInterfaceGreTunnelDestinationIpVariable(Output.of(tunnelInterfaceGreTunnelDestinationIpVariable));
        }

        /**
         * @param tunnelInterfaceGroups List of groups - Range: `1`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceGroups(@Nullable Output<Integer> tunnelInterfaceGroups) {
            $.tunnelInterfaceGroups = tunnelInterfaceGroups;
            return this;
        }

        /**
         * @param tunnelInterfaceGroups List of groups - Range: `1`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceGroups(Integer tunnelInterfaceGroups) {
            return tunnelInterfaceGroups(Output.of(tunnelInterfaceGroups));
        }

        /**
         * @param tunnelInterfaceGroupsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceGroupsVariable(@Nullable Output<String> tunnelInterfaceGroupsVariable) {
            $.tunnelInterfaceGroupsVariable = tunnelInterfaceGroupsVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceGroupsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceGroupsVariable(String tunnelInterfaceGroupsVariable) {
            return tunnelInterfaceGroupsVariable(Output.of(tunnelInterfaceGroupsVariable));
        }

        /**
         * @param tunnelInterfaceHelloInterval Set time period of control hello packets &lt;100..600000&gt; milli seconds - Range: `100`-`600000` - Default value: `1000`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceHelloInterval(@Nullable Output<Integer> tunnelInterfaceHelloInterval) {
            $.tunnelInterfaceHelloInterval = tunnelInterfaceHelloInterval;
            return this;
        }

        /**
         * @param tunnelInterfaceHelloInterval Set time period of control hello packets &lt;100..600000&gt; milli seconds - Range: `100`-`600000` - Default value: `1000`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceHelloInterval(Integer tunnelInterfaceHelloInterval) {
            return tunnelInterfaceHelloInterval(Output.of(tunnelInterfaceHelloInterval));
        }

        /**
         * @param tunnelInterfaceHelloIntervalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceHelloIntervalVariable(@Nullable Output<String> tunnelInterfaceHelloIntervalVariable) {
            $.tunnelInterfaceHelloIntervalVariable = tunnelInterfaceHelloIntervalVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceHelloIntervalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceHelloIntervalVariable(String tunnelInterfaceHelloIntervalVariable) {
            return tunnelInterfaceHelloIntervalVariable(Output.of(tunnelInterfaceHelloIntervalVariable));
        }

        /**
         * @param tunnelInterfaceHelloTolerance Set tolerance of control hello packets &lt;12..6000&gt; seconds - Range: `12`-`6000` - Default value: `12`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceHelloTolerance(@Nullable Output<Integer> tunnelInterfaceHelloTolerance) {
            $.tunnelInterfaceHelloTolerance = tunnelInterfaceHelloTolerance;
            return this;
        }

        /**
         * @param tunnelInterfaceHelloTolerance Set tolerance of control hello packets &lt;12..6000&gt; seconds - Range: `12`-`6000` - Default value: `12`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceHelloTolerance(Integer tunnelInterfaceHelloTolerance) {
            return tunnelInterfaceHelloTolerance(Output.of(tunnelInterfaceHelloTolerance));
        }

        /**
         * @param tunnelInterfaceHelloToleranceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceHelloToleranceVariable(@Nullable Output<String> tunnelInterfaceHelloToleranceVariable) {
            $.tunnelInterfaceHelloToleranceVariable = tunnelInterfaceHelloToleranceVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceHelloToleranceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceHelloToleranceVariable(String tunnelInterfaceHelloToleranceVariable) {
            return tunnelInterfaceHelloToleranceVariable(Output.of(tunnelInterfaceHelloToleranceVariable));
        }

        /**
         * @param tunnelInterfaceLastResortCircuit Set TLOC as last resort - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceLastResortCircuit(@Nullable Output<Boolean> tunnelInterfaceLastResortCircuit) {
            $.tunnelInterfaceLastResortCircuit = tunnelInterfaceLastResortCircuit;
            return this;
        }

        /**
         * @param tunnelInterfaceLastResortCircuit Set TLOC as last resort - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceLastResortCircuit(Boolean tunnelInterfaceLastResortCircuit) {
            return tunnelInterfaceLastResortCircuit(Output.of(tunnelInterfaceLastResortCircuit));
        }

        /**
         * @param tunnelInterfaceLastResortCircuitVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceLastResortCircuitVariable(@Nullable Output<String> tunnelInterfaceLastResortCircuitVariable) {
            $.tunnelInterfaceLastResortCircuitVariable = tunnelInterfaceLastResortCircuitVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceLastResortCircuitVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceLastResortCircuitVariable(String tunnelInterfaceLastResortCircuitVariable) {
            return tunnelInterfaceLastResortCircuitVariable(Output.of(tunnelInterfaceLastResortCircuitVariable));
        }

        /**
         * @param tunnelInterfaceLowBandwidthLink Set the interface as a low-bandwidth circuit - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceLowBandwidthLink(@Nullable Output<Boolean> tunnelInterfaceLowBandwidthLink) {
            $.tunnelInterfaceLowBandwidthLink = tunnelInterfaceLowBandwidthLink;
            return this;
        }

        /**
         * @param tunnelInterfaceLowBandwidthLink Set the interface as a low-bandwidth circuit - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceLowBandwidthLink(Boolean tunnelInterfaceLowBandwidthLink) {
            return tunnelInterfaceLowBandwidthLink(Output.of(tunnelInterfaceLowBandwidthLink));
        }

        /**
         * @param tunnelInterfaceLowBandwidthLinkVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceLowBandwidthLinkVariable(@Nullable Output<String> tunnelInterfaceLowBandwidthLinkVariable) {
            $.tunnelInterfaceLowBandwidthLinkVariable = tunnelInterfaceLowBandwidthLinkVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceLowBandwidthLinkVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceLowBandwidthLinkVariable(String tunnelInterfaceLowBandwidthLinkVariable) {
            return tunnelInterfaceLowBandwidthLinkVariable(Output.of(tunnelInterfaceLowBandwidthLinkVariable));
        }

        /**
         * @param tunnelInterfaceMaxControlConnections Maximum Control Connections - Range: `0`-`100`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceMaxControlConnections(@Nullable Output<Integer> tunnelInterfaceMaxControlConnections) {
            $.tunnelInterfaceMaxControlConnections = tunnelInterfaceMaxControlConnections;
            return this;
        }

        /**
         * @param tunnelInterfaceMaxControlConnections Maximum Control Connections - Range: `0`-`100`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceMaxControlConnections(Integer tunnelInterfaceMaxControlConnections) {
            return tunnelInterfaceMaxControlConnections(Output.of(tunnelInterfaceMaxControlConnections));
        }

        /**
         * @param tunnelInterfaceMaxControlConnectionsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceMaxControlConnectionsVariable(@Nullable Output<String> tunnelInterfaceMaxControlConnectionsVariable) {
            $.tunnelInterfaceMaxControlConnectionsVariable = tunnelInterfaceMaxControlConnectionsVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceMaxControlConnectionsVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceMaxControlConnectionsVariable(String tunnelInterfaceMaxControlConnectionsVariable) {
            return tunnelInterfaceMaxControlConnectionsVariable(Output.of(tunnelInterfaceMaxControlConnectionsVariable));
        }

        /**
         * @param tunnelInterfaceNatRefreshInterval Set time period of nat refresh packets &lt;1...60&gt; seconds - Range: `1`-`60` - Default value: `5`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceNatRefreshInterval(@Nullable Output<Integer> tunnelInterfaceNatRefreshInterval) {
            $.tunnelInterfaceNatRefreshInterval = tunnelInterfaceNatRefreshInterval;
            return this;
        }

        /**
         * @param tunnelInterfaceNatRefreshInterval Set time period of nat refresh packets &lt;1...60&gt; seconds - Range: `1`-`60` - Default value: `5`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceNatRefreshInterval(Integer tunnelInterfaceNatRefreshInterval) {
            return tunnelInterfaceNatRefreshInterval(Output.of(tunnelInterfaceNatRefreshInterval));
        }

        /**
         * @param tunnelInterfaceNatRefreshIntervalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceNatRefreshIntervalVariable(@Nullable Output<String> tunnelInterfaceNatRefreshIntervalVariable) {
            $.tunnelInterfaceNatRefreshIntervalVariable = tunnelInterfaceNatRefreshIntervalVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceNatRefreshIntervalVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceNatRefreshIntervalVariable(String tunnelInterfaceNatRefreshIntervalVariable) {
            return tunnelInterfaceNatRefreshIntervalVariable(Output.of(tunnelInterfaceNatRefreshIntervalVariable));
        }

        /**
         * @param tunnelInterfaceNetworkBroadcast Accept and respond to network-prefix-directed broadcasts - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceNetworkBroadcast(@Nullable Output<Boolean> tunnelInterfaceNetworkBroadcast) {
            $.tunnelInterfaceNetworkBroadcast = tunnelInterfaceNetworkBroadcast;
            return this;
        }

        /**
         * @param tunnelInterfaceNetworkBroadcast Accept and respond to network-prefix-directed broadcasts - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceNetworkBroadcast(Boolean tunnelInterfaceNetworkBroadcast) {
            return tunnelInterfaceNetworkBroadcast(Output.of(tunnelInterfaceNetworkBroadcast));
        }

        /**
         * @param tunnelInterfaceNetworkBroadcastVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceNetworkBroadcastVariable(@Nullable Output<String> tunnelInterfaceNetworkBroadcastVariable) {
            $.tunnelInterfaceNetworkBroadcastVariable = tunnelInterfaceNetworkBroadcastVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceNetworkBroadcastVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceNetworkBroadcastVariable(String tunnelInterfaceNetworkBroadcastVariable) {
            return tunnelInterfaceNetworkBroadcastVariable(Output.of(tunnelInterfaceNetworkBroadcastVariable));
        }

        /**
         * @param tunnelInterfacePortHop Disallow port hopping on the tunnel interface - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfacePortHop(@Nullable Output<Boolean> tunnelInterfacePortHop) {
            $.tunnelInterfacePortHop = tunnelInterfacePortHop;
            return this;
        }

        /**
         * @param tunnelInterfacePortHop Disallow port hopping on the tunnel interface - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfacePortHop(Boolean tunnelInterfacePortHop) {
            return tunnelInterfacePortHop(Output.of(tunnelInterfacePortHop));
        }

        /**
         * @param tunnelInterfacePortHopVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfacePortHopVariable(@Nullable Output<String> tunnelInterfacePortHopVariable) {
            $.tunnelInterfacePortHopVariable = tunnelInterfacePortHopVariable;
            return this;
        }

        /**
         * @param tunnelInterfacePortHopVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfacePortHopVariable(String tunnelInterfacePortHopVariable) {
            return tunnelInterfacePortHopVariable(Output.of(tunnelInterfacePortHopVariable));
        }

        /**
         * @param tunnelInterfaceTunnelTcpMss Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceTunnelTcpMss(@Nullable Output<Integer> tunnelInterfaceTunnelTcpMss) {
            $.tunnelInterfaceTunnelTcpMss = tunnelInterfaceTunnelTcpMss;
            return this;
        }

        /**
         * @param tunnelInterfaceTunnelTcpMss Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceTunnelTcpMss(Integer tunnelInterfaceTunnelTcpMss) {
            return tunnelInterfaceTunnelTcpMss(Output.of(tunnelInterfaceTunnelTcpMss));
        }

        /**
         * @param tunnelInterfaceTunnelTcpMssVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceTunnelTcpMssVariable(@Nullable Output<String> tunnelInterfaceTunnelTcpMssVariable) {
            $.tunnelInterfaceTunnelTcpMssVariable = tunnelInterfaceTunnelTcpMssVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceTunnelTcpMssVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceTunnelTcpMssVariable(String tunnelInterfaceTunnelTcpMssVariable) {
            return tunnelInterfaceTunnelTcpMssVariable(Output.of(tunnelInterfaceTunnelTcpMssVariable));
        }

        /**
         * @param tunnelInterfaceVbondAsStunServer Put this wan interface in STUN mode only - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceVbondAsStunServer(@Nullable Output<Boolean> tunnelInterfaceVbondAsStunServer) {
            $.tunnelInterfaceVbondAsStunServer = tunnelInterfaceVbondAsStunServer;
            return this;
        }

        /**
         * @param tunnelInterfaceVbondAsStunServer Put this wan interface in STUN mode only - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceVbondAsStunServer(Boolean tunnelInterfaceVbondAsStunServer) {
            return tunnelInterfaceVbondAsStunServer(Output.of(tunnelInterfaceVbondAsStunServer));
        }

        /**
         * @param tunnelInterfaceVbondAsStunServerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceVbondAsStunServerVariable(@Nullable Output<String> tunnelInterfaceVbondAsStunServerVariable) {
            $.tunnelInterfaceVbondAsStunServerVariable = tunnelInterfaceVbondAsStunServerVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceVbondAsStunServerVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceVbondAsStunServerVariable(String tunnelInterfaceVbondAsStunServerVariable) {
            return tunnelInterfaceVbondAsStunServerVariable(Output.of(tunnelInterfaceVbondAsStunServerVariable));
        }

        /**
         * @param tunnelInterfaceVmanageConnectionPreference Set interface preference for control connection to vManage &lt;0..8&gt; - Range: `0`-`8` - Default value: `5`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceVmanageConnectionPreference(@Nullable Output<Integer> tunnelInterfaceVmanageConnectionPreference) {
            $.tunnelInterfaceVmanageConnectionPreference = tunnelInterfaceVmanageConnectionPreference;
            return this;
        }

        /**
         * @param tunnelInterfaceVmanageConnectionPreference Set interface preference for control connection to vManage &lt;0..8&gt; - Range: `0`-`8` - Default value: `5`
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceVmanageConnectionPreference(Integer tunnelInterfaceVmanageConnectionPreference) {
            return tunnelInterfaceVmanageConnectionPreference(Output.of(tunnelInterfaceVmanageConnectionPreference));
        }

        /**
         * @param tunnelInterfaceVmanageConnectionPreferenceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceVmanageConnectionPreferenceVariable(@Nullable Output<String> tunnelInterfaceVmanageConnectionPreferenceVariable) {
            $.tunnelInterfaceVmanageConnectionPreferenceVariable = tunnelInterfaceVmanageConnectionPreferenceVariable;
            return this;
        }

        /**
         * @param tunnelInterfaceVmanageConnectionPreferenceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelInterfaceVmanageConnectionPreferenceVariable(String tunnelInterfaceVmanageConnectionPreferenceVariable) {
            return tunnelInterfaceVmanageConnectionPreferenceVariable(Output.of(tunnelInterfaceVmanageConnectionPreferenceVariable));
        }

        /**
         * @param tunnelQosMode Set tunnel QoS mode - Choices: `hub`, `spoke`
         * 
         * @return builder
         * 
         */
        public Builder tunnelQosMode(@Nullable Output<String> tunnelQosMode) {
            $.tunnelQosMode = tunnelQosMode;
            return this;
        }

        /**
         * @param tunnelQosMode Set tunnel QoS mode - Choices: `hub`, `spoke`
         * 
         * @return builder
         * 
         */
        public Builder tunnelQosMode(String tunnelQosMode) {
            return tunnelQosMode(Output.of(tunnelQosMode));
        }

        /**
         * @param tunnelQosModeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelQosModeVariable(@Nullable Output<String> tunnelQosModeVariable) {
            $.tunnelQosModeVariable = tunnelQosModeVariable;
            return this;
        }

        /**
         * @param tunnelQosModeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tunnelQosModeVariable(String tunnelQosModeVariable) {
            return tunnelQosModeVariable(Output.of(tunnelQosModeVariable));
        }

        /**
         * @param version The version of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the profile parcel
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        /**
         * @param xconnect Extend remote TLOC over a GRE tunnel to a local WAN interface
         * 
         * @return builder
         * 
         */
        public Builder xconnect(@Nullable Output<String> xconnect) {
            $.xconnect = xconnect;
            return this;
        }

        /**
         * @param xconnect Extend remote TLOC over a GRE tunnel to a local WAN interface
         * 
         * @return builder
         * 
         */
        public Builder xconnect(String xconnect) {
            return xconnect(Output.of(xconnect));
        }

        /**
         * @param xconnectVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder xconnectVariable(@Nullable Output<String> xconnectVariable) {
            $.xconnectVariable = xconnectVariable;
            return this;
        }

        /**
         * @param xconnectVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder xconnectVariable(String xconnectVariable) {
            return xconnectVariable(Output.of(xconnectVariable));
        }

        public TransportWanVpnInterfaceEthernetProfileParcelState build() {
            return $;
        }
    }

}
