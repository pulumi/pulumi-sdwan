// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationAwareRoutingPolicyDefinitionSequenceMatchEntry {
    /**
     * @return Application list ID
     * 
     */
    private @Nullable String applicationListId;
    /**
     * @return Application list version
     * 
     */
    private @Nullable Integer applicationListVersion;
    /**
     * @return Destination Data Prefix list ID
     * 
     */
    private @Nullable String destinationDataPrefixListId;
    /**
     * @return Destination Data Prefix list version
     * 
     */
    private @Nullable Integer destinationDataPrefixListVersion;
    /**
     * @return Destination IP
     * 
     */
    private @Nullable String destinationIp;
    /**
     * @return Destination port, 0-65535 (Single value, range or multiple values separated by spaces)
     * 
     */
    private @Nullable String destinationPort;
    /**
     * @return Destination region
     *   - Choices: `primary-region`, `secondary-region`, `other-region`
     * 
     */
    private @Nullable String destinationRegion;
    /**
     * @return DNS request or response
     *   - Choices: `request`, `response`
     * 
     */
    private @Nullable String dns;
    /**
     * @return DNS Application list ID
     * 
     */
    private @Nullable String dnsApplicationListId;
    /**
     * @return DNS Application list version
     * 
     */
    private @Nullable Integer dnsApplicationListVersion;
    /**
     * @return DSCP value
     *   - Range: `0`-`63`
     * 
     */
    private @Nullable Integer dscp;
    /**
     * @return PLP
     *   - Choices: `low`, `high`
     * 
     */
    private @Nullable String plp;
    /**
     * @return IP Protocol, 0-255 (Single value or multiple values separated by spaces)
     * 
     */
    private @Nullable String protocol;
    /**
     * @return Source Data Prefix list ID
     * 
     */
    private @Nullable String sourceDataPrefixListId;
    /**
     * @return Source Data Prefix list version
     * 
     */
    private @Nullable Integer sourceDataPrefixListVersion;
    /**
     * @return Source IP
     * 
     */
    private @Nullable String sourceIp;
    /**
     * @return Source port, 0-65535 (Single value, range or multiple values separated by spaces)
     * 
     */
    private @Nullable String sourcePort;
    /**
     * @return Traffic to
     *   - Choices: `access`, `core`, `service`
     * 
     */
    private @Nullable String trafficTo;
    /**
     * @return Type of match entry
     *   - Choices: `appList`, `dnsAppList`, `dns`, `dscp`, `plp`, `protocol`, `sourceDataPrefixList`, `sourceIp`, `sourcePort`, `destinationDataPrefixList`, `destinationIp`, `destinationRegion`, `destinationPort`, `trafficTo`
     * 
     */
    private String type;

    private ApplicationAwareRoutingPolicyDefinitionSequenceMatchEntry() {}
    /**
     * @return Application list ID
     * 
     */
    public Optional<String> applicationListId() {
        return Optional.ofNullable(this.applicationListId);
    }
    /**
     * @return Application list version
     * 
     */
    public Optional<Integer> applicationListVersion() {
        return Optional.ofNullable(this.applicationListVersion);
    }
    /**
     * @return Destination Data Prefix list ID
     * 
     */
    public Optional<String> destinationDataPrefixListId() {
        return Optional.ofNullable(this.destinationDataPrefixListId);
    }
    /**
     * @return Destination Data Prefix list version
     * 
     */
    public Optional<Integer> destinationDataPrefixListVersion() {
        return Optional.ofNullable(this.destinationDataPrefixListVersion);
    }
    /**
     * @return Destination IP
     * 
     */
    public Optional<String> destinationIp() {
        return Optional.ofNullable(this.destinationIp);
    }
    /**
     * @return Destination port, 0-65535 (Single value, range or multiple values separated by spaces)
     * 
     */
    public Optional<String> destinationPort() {
        return Optional.ofNullable(this.destinationPort);
    }
    /**
     * @return Destination region
     *   - Choices: `primary-region`, `secondary-region`, `other-region`
     * 
     */
    public Optional<String> destinationRegion() {
        return Optional.ofNullable(this.destinationRegion);
    }
    /**
     * @return DNS request or response
     *   - Choices: `request`, `response`
     * 
     */
    public Optional<String> dns() {
        return Optional.ofNullable(this.dns);
    }
    /**
     * @return DNS Application list ID
     * 
     */
    public Optional<String> dnsApplicationListId() {
        return Optional.ofNullable(this.dnsApplicationListId);
    }
    /**
     * @return DNS Application list version
     * 
     */
    public Optional<Integer> dnsApplicationListVersion() {
        return Optional.ofNullable(this.dnsApplicationListVersion);
    }
    /**
     * @return DSCP value
     *   - Range: `0`-`63`
     * 
     */
    public Optional<Integer> dscp() {
        return Optional.ofNullable(this.dscp);
    }
    /**
     * @return PLP
     *   - Choices: `low`, `high`
     * 
     */
    public Optional<String> plp() {
        return Optional.ofNullable(this.plp);
    }
    /**
     * @return IP Protocol, 0-255 (Single value or multiple values separated by spaces)
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }
    /**
     * @return Source Data Prefix list ID
     * 
     */
    public Optional<String> sourceDataPrefixListId() {
        return Optional.ofNullable(this.sourceDataPrefixListId);
    }
    /**
     * @return Source Data Prefix list version
     * 
     */
    public Optional<Integer> sourceDataPrefixListVersion() {
        return Optional.ofNullable(this.sourceDataPrefixListVersion);
    }
    /**
     * @return Source IP
     * 
     */
    public Optional<String> sourceIp() {
        return Optional.ofNullable(this.sourceIp);
    }
    /**
     * @return Source port, 0-65535 (Single value, range or multiple values separated by spaces)
     * 
     */
    public Optional<String> sourcePort() {
        return Optional.ofNullable(this.sourcePort);
    }
    /**
     * @return Traffic to
     *   - Choices: `access`, `core`, `service`
     * 
     */
    public Optional<String> trafficTo() {
        return Optional.ofNullable(this.trafficTo);
    }
    /**
     * @return Type of match entry
     *   - Choices: `appList`, `dnsAppList`, `dns`, `dscp`, `plp`, `protocol`, `sourceDataPrefixList`, `sourceIp`, `sourcePort`, `destinationDataPrefixList`, `destinationIp`, `destinationRegion`, `destinationPort`, `trafficTo`
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationAwareRoutingPolicyDefinitionSequenceMatchEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String applicationListId;
        private @Nullable Integer applicationListVersion;
        private @Nullable String destinationDataPrefixListId;
        private @Nullable Integer destinationDataPrefixListVersion;
        private @Nullable String destinationIp;
        private @Nullable String destinationPort;
        private @Nullable String destinationRegion;
        private @Nullable String dns;
        private @Nullable String dnsApplicationListId;
        private @Nullable Integer dnsApplicationListVersion;
        private @Nullable Integer dscp;
        private @Nullable String plp;
        private @Nullable String protocol;
        private @Nullable String sourceDataPrefixListId;
        private @Nullable Integer sourceDataPrefixListVersion;
        private @Nullable String sourceIp;
        private @Nullable String sourcePort;
        private @Nullable String trafficTo;
        private String type;
        public Builder() {}
        public Builder(ApplicationAwareRoutingPolicyDefinitionSequenceMatchEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationListId = defaults.applicationListId;
    	      this.applicationListVersion = defaults.applicationListVersion;
    	      this.destinationDataPrefixListId = defaults.destinationDataPrefixListId;
    	      this.destinationDataPrefixListVersion = defaults.destinationDataPrefixListVersion;
    	      this.destinationIp = defaults.destinationIp;
    	      this.destinationPort = defaults.destinationPort;
    	      this.destinationRegion = defaults.destinationRegion;
    	      this.dns = defaults.dns;
    	      this.dnsApplicationListId = defaults.dnsApplicationListId;
    	      this.dnsApplicationListVersion = defaults.dnsApplicationListVersion;
    	      this.dscp = defaults.dscp;
    	      this.plp = defaults.plp;
    	      this.protocol = defaults.protocol;
    	      this.sourceDataPrefixListId = defaults.sourceDataPrefixListId;
    	      this.sourceDataPrefixListVersion = defaults.sourceDataPrefixListVersion;
    	      this.sourceIp = defaults.sourceIp;
    	      this.sourcePort = defaults.sourcePort;
    	      this.trafficTo = defaults.trafficTo;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder applicationListId(@Nullable String applicationListId) {

            this.applicationListId = applicationListId;
            return this;
        }
        @CustomType.Setter
        public Builder applicationListVersion(@Nullable Integer applicationListVersion) {

            this.applicationListVersion = applicationListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder destinationDataPrefixListId(@Nullable String destinationDataPrefixListId) {

            this.destinationDataPrefixListId = destinationDataPrefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder destinationDataPrefixListVersion(@Nullable Integer destinationDataPrefixListVersion) {

            this.destinationDataPrefixListVersion = destinationDataPrefixListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder destinationIp(@Nullable String destinationIp) {

            this.destinationIp = destinationIp;
            return this;
        }
        @CustomType.Setter
        public Builder destinationPort(@Nullable String destinationPort) {

            this.destinationPort = destinationPort;
            return this;
        }
        @CustomType.Setter
        public Builder destinationRegion(@Nullable String destinationRegion) {

            this.destinationRegion = destinationRegion;
            return this;
        }
        @CustomType.Setter
        public Builder dns(@Nullable String dns) {

            this.dns = dns;
            return this;
        }
        @CustomType.Setter
        public Builder dnsApplicationListId(@Nullable String dnsApplicationListId) {

            this.dnsApplicationListId = dnsApplicationListId;
            return this;
        }
        @CustomType.Setter
        public Builder dnsApplicationListVersion(@Nullable Integer dnsApplicationListVersion) {

            this.dnsApplicationListVersion = dnsApplicationListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder dscp(@Nullable Integer dscp) {

            this.dscp = dscp;
            return this;
        }
        @CustomType.Setter
        public Builder plp(@Nullable String plp) {

            this.plp = plp;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {

            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDataPrefixListId(@Nullable String sourceDataPrefixListId) {

            this.sourceDataPrefixListId = sourceDataPrefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDataPrefixListVersion(@Nullable Integer sourceDataPrefixListVersion) {

            this.sourceDataPrefixListVersion = sourceDataPrefixListVersion;
            return this;
        }
        @CustomType.Setter
        public Builder sourceIp(@Nullable String sourceIp) {

            this.sourceIp = sourceIp;
            return this;
        }
        @CustomType.Setter
        public Builder sourcePort(@Nullable String sourcePort) {

            this.sourcePort = sourcePort;
            return this;
        }
        @CustomType.Setter
        public Builder trafficTo(@Nullable String trafficTo) {

            this.trafficTo = trafficTo;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("ApplicationAwareRoutingPolicyDefinitionSequenceMatchEntry", "type");
            }
            this.type = type;
            return this;
        }
        public ApplicationAwareRoutingPolicyDefinitionSequenceMatchEntry build() {
            final var _resultValue = new ApplicationAwareRoutingPolicyDefinitionSequenceMatchEntry();
            _resultValue.applicationListId = applicationListId;
            _resultValue.applicationListVersion = applicationListVersion;
            _resultValue.destinationDataPrefixListId = destinationDataPrefixListId;
            _resultValue.destinationDataPrefixListVersion = destinationDataPrefixListVersion;
            _resultValue.destinationIp = destinationIp;
            _resultValue.destinationPort = destinationPort;
            _resultValue.destinationRegion = destinationRegion;
            _resultValue.dns = dns;
            _resultValue.dnsApplicationListId = dnsApplicationListId;
            _resultValue.dnsApplicationListVersion = dnsApplicationListVersion;
            _resultValue.dscp = dscp;
            _resultValue.plp = plp;
            _resultValue.protocol = protocol;
            _resultValue.sourceDataPrefixListId = sourceDataPrefixListId;
            _resultValue.sourceDataPrefixListVersion = sourceDataPrefixListVersion;
            _resultValue.sourceIp = sourceIp;
            _resultValue.sourcePort = sourcePort;
            _resultValue.trafficTo = trafficTo;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
