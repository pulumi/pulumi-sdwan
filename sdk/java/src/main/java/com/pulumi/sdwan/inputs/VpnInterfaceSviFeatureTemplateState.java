// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.VpnInterfaceSviFeatureTemplateIpv4AccessListArgs;
import com.pulumi.sdwan.inputs.VpnInterfaceSviFeatureTemplateIpv4SecondaryAddressArgs;
import com.pulumi.sdwan.inputs.VpnInterfaceSviFeatureTemplateIpv4VrrpArgs;
import com.pulumi.sdwan.inputs.VpnInterfaceSviFeatureTemplateIpv6AccessListArgs;
import com.pulumi.sdwan.inputs.VpnInterfaceSviFeatureTemplateIpv6DhcpHelperArgs;
import com.pulumi.sdwan.inputs.VpnInterfaceSviFeatureTemplateIpv6SecondaryAddressArgs;
import com.pulumi.sdwan.inputs.VpnInterfaceSviFeatureTemplateIpv6VrrpArgs;
import com.pulumi.sdwan.inputs.VpnInterfaceSviFeatureTemplatePolicerArgs;
import com.pulumi.sdwan.inputs.VpnInterfaceSviFeatureTemplateStaticArpEntryArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpnInterfaceSviFeatureTemplateState extends com.pulumi.resources.ResourceArgs {

    public static final VpnInterfaceSviFeatureTemplateState Empty = new VpnInterfaceSviFeatureTemplateState();

    /**
     * Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2678400` - Default value: `1200`
     * 
     */
    @Import(name="arpTimeout")
    private @Nullable Output<Integer> arpTimeout;

    /**
     * @return Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2678400` - Default value: `1200`
     * 
     */
    public Optional<Output<Integer>> arpTimeout() {
        return Optional.ofNullable(this.arpTimeout);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="arpTimeoutVariable")
    private @Nullable Output<String> arpTimeoutVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> arpTimeoutVariable() {
        return Optional.ofNullable(this.arpTimeoutVariable);
    }

    /**
     * The description of the feature template
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the feature template
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    @Import(name="deviceTypes")
    private @Nullable Output<List<String>> deviceTypes;

    /**
     * @return List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    public Optional<Output<List<String>>> deviceTypes() {
        return Optional.ofNullable(this.deviceTypes);
    }

    /**
     * Interface name: VLAN 1 - VLAN 4094 when present
     * 
     */
    @Import(name="ifName")
    private @Nullable Output<String> ifName;

    /**
     * @return Interface name: VLAN 1 - VLAN 4094 when present
     * 
     */
    public Optional<Output<String>> ifName() {
        return Optional.ofNullable(this.ifName);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ifNameVariable")
    private @Nullable Output<String> ifNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ifNameVariable() {
        return Optional.ofNullable(this.ifNameVariable);
    }

    /**
     * Interface description
     * 
     */
    @Import(name="interfaceDescription")
    private @Nullable Output<String> interfaceDescription;

    /**
     * @return Interface description
     * 
     */
    public Optional<Output<String>> interfaceDescription() {
        return Optional.ofNullable(this.interfaceDescription);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceDescriptionVariable")
    private @Nullable Output<String> interfaceDescriptionVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceDescriptionVariable() {
        return Optional.ofNullable(this.interfaceDescriptionVariable);
    }

    /**
     * IP Directed-Broadcast - Default value: `false`
     * 
     */
    @Import(name="ipDirectedBroadcast")
    private @Nullable Output<Boolean> ipDirectedBroadcast;

    /**
     * @return IP Directed-Broadcast - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> ipDirectedBroadcast() {
        return Optional.ofNullable(this.ipDirectedBroadcast);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipDirectedBroadcastVariable")
    private @Nullable Output<String> ipDirectedBroadcastVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipDirectedBroadcastVariable() {
        return Optional.ofNullable(this.ipDirectedBroadcastVariable);
    }

    /**
     * IP MTU &lt;576..Interface MTU&gt;, in bytes - Range: `576`-`9216` - Default value: `1500`
     * 
     */
    @Import(name="ipMtu")
    private @Nullable Output<Integer> ipMtu;

    /**
     * @return IP MTU &lt;576..Interface MTU&gt;, in bytes - Range: `576`-`9216` - Default value: `1500`
     * 
     */
    public Optional<Output<Integer>> ipMtu() {
        return Optional.ofNullable(this.ipMtu);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipMtuVariable")
    private @Nullable Output<String> ipMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipMtuVariable() {
        return Optional.ofNullable(this.ipMtuVariable);
    }

    /**
     * Apply ACL
     * 
     */
    @Import(name="ipv4AccessLists")
    private @Nullable Output<List<VpnInterfaceSviFeatureTemplateIpv4AccessListArgs>> ipv4AccessLists;

    /**
     * @return Apply ACL
     * 
     */
    public Optional<Output<List<VpnInterfaceSviFeatureTemplateIpv4AccessListArgs>>> ipv4AccessLists() {
        return Optional.ofNullable(this.ipv4AccessLists);
    }

    /**
     * Assign IPv4 address
     * 
     */
    @Import(name="ipv4Address")
    private @Nullable Output<String> ipv4Address;

    /**
     * @return Assign IPv4 address
     * 
     */
    public Optional<Output<String>> ipv4Address() {
        return Optional.ofNullable(this.ipv4Address);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4AddressVariable")
    private @Nullable Output<String> ipv4AddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4AddressVariable() {
        return Optional.ofNullable(this.ipv4AddressVariable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv4DhcpHelperVariable")
    private @Nullable Output<String> ipv4DhcpHelperVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv4DhcpHelperVariable() {
        return Optional.ofNullable(this.ipv4DhcpHelperVariable);
    }

    /**
     * List of DHCP helper addresses
     * 
     */
    @Import(name="ipv4DhcpHelpers")
    private @Nullable Output<List<String>> ipv4DhcpHelpers;

    /**
     * @return List of DHCP helper addresses
     * 
     */
    public Optional<Output<List<String>>> ipv4DhcpHelpers() {
        return Optional.ofNullable(this.ipv4DhcpHelpers);
    }

    /**
     * Assign secondary IP addresses
     * 
     */
    @Import(name="ipv4SecondaryAddresses")
    private @Nullable Output<List<VpnInterfaceSviFeatureTemplateIpv4SecondaryAddressArgs>> ipv4SecondaryAddresses;

    /**
     * @return Assign secondary IP addresses
     * 
     */
    public Optional<Output<List<VpnInterfaceSviFeatureTemplateIpv4SecondaryAddressArgs>>> ipv4SecondaryAddresses() {
        return Optional.ofNullable(this.ipv4SecondaryAddresses);
    }

    /**
     * Enable VRRP
     * 
     */
    @Import(name="ipv4Vrrps")
    private @Nullable Output<List<VpnInterfaceSviFeatureTemplateIpv4VrrpArgs>> ipv4Vrrps;

    /**
     * @return Enable VRRP
     * 
     */
    public Optional<Output<List<VpnInterfaceSviFeatureTemplateIpv4VrrpArgs>>> ipv4Vrrps() {
        return Optional.ofNullable(this.ipv4Vrrps);
    }

    /**
     * Apply ACL
     * 
     */
    @Import(name="ipv6AccessLists")
    private @Nullable Output<List<VpnInterfaceSviFeatureTemplateIpv6AccessListArgs>> ipv6AccessLists;

    /**
     * @return Apply ACL
     * 
     */
    public Optional<Output<List<VpnInterfaceSviFeatureTemplateIpv6AccessListArgs>>> ipv6AccessLists() {
        return Optional.ofNullable(this.ipv6AccessLists);
    }

    /**
     * Assign IPv6 address
     * 
     */
    @Import(name="ipv6Address")
    private @Nullable Output<String> ipv6Address;

    /**
     * @return Assign IPv6 address
     * 
     */
    public Optional<Output<String>> ipv6Address() {
        return Optional.ofNullable(this.ipv6Address);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv6AddressVariable")
    private @Nullable Output<String> ipv6AddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv6AddressVariable() {
        return Optional.ofNullable(this.ipv6AddressVariable);
    }

    /**
     * Enable DHCPv6 - Default value: `false`
     * 
     */
    @Import(name="ipv6DhcpClient")
    private @Nullable Output<Boolean> ipv6DhcpClient;

    /**
     * @return Enable DHCPv6 - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> ipv6DhcpClient() {
        return Optional.ofNullable(this.ipv6DhcpClient);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv6DhcpClientVariable")
    private @Nullable Output<String> ipv6DhcpClientVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv6DhcpClientVariable() {
        return Optional.ofNullable(this.ipv6DhcpClientVariable);
    }

    /**
     * Set administrative distance for DHCP default route - Range: `1`-`65536` - Default value: `1`
     * 
     */
    @Import(name="ipv6DhcpDistance")
    private @Nullable Output<Integer> ipv6DhcpDistance;

    /**
     * @return Set administrative distance for DHCP default route - Range: `1`-`65536` - Default value: `1`
     * 
     */
    public Optional<Output<Integer>> ipv6DhcpDistance() {
        return Optional.ofNullable(this.ipv6DhcpDistance);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv6DhcpDistanceVariable")
    private @Nullable Output<String> ipv6DhcpDistanceVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv6DhcpDistanceVariable() {
        return Optional.ofNullable(this.ipv6DhcpDistanceVariable);
    }

    /**
     * DHCPv6 Helper
     * 
     */
    @Import(name="ipv6DhcpHelpers")
    private @Nullable Output<List<VpnInterfaceSviFeatureTemplateIpv6DhcpHelperArgs>> ipv6DhcpHelpers;

    /**
     * @return DHCPv6 Helper
     * 
     */
    public Optional<Output<List<VpnInterfaceSviFeatureTemplateIpv6DhcpHelperArgs>>> ipv6DhcpHelpers() {
        return Optional.ofNullable(this.ipv6DhcpHelpers);
    }

    /**
     * Enable DHCPv6 rapid commit - Default value: `false`
     * 
     */
    @Import(name="ipv6DhcpRapidCommit")
    private @Nullable Output<Boolean> ipv6DhcpRapidCommit;

    /**
     * @return Enable DHCPv6 rapid commit - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> ipv6DhcpRapidCommit() {
        return Optional.ofNullable(this.ipv6DhcpRapidCommit);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipv6DhcpRapidCommitVariable")
    private @Nullable Output<String> ipv6DhcpRapidCommitVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipv6DhcpRapidCommitVariable() {
        return Optional.ofNullable(this.ipv6DhcpRapidCommitVariable);
    }

    /**
     * Assign secondary IPv6 addresses
     * 
     */
    @Import(name="ipv6SecondaryAddresses")
    private @Nullable Output<List<VpnInterfaceSviFeatureTemplateIpv6SecondaryAddressArgs>> ipv6SecondaryAddresses;

    /**
     * @return Assign secondary IPv6 addresses
     * 
     */
    public Optional<Output<List<VpnInterfaceSviFeatureTemplateIpv6SecondaryAddressArgs>>> ipv6SecondaryAddresses() {
        return Optional.ofNullable(this.ipv6SecondaryAddresses);
    }

    /**
     * Enable VRRP
     * 
     */
    @Import(name="ipv6Vrrps")
    private @Nullable Output<List<VpnInterfaceSviFeatureTemplateIpv6VrrpArgs>> ipv6Vrrps;

    /**
     * @return Enable VRRP
     * 
     */
    public Optional<Output<List<VpnInterfaceSviFeatureTemplateIpv6VrrpArgs>>> ipv6Vrrps() {
        return Optional.ofNullable(this.ipv6Vrrps);
    }

    /**
     * Interface MTU &lt;1500..9216&gt; in bytes - Range: `1500`-`9216` - Default value: `1500`
     * 
     */
    @Import(name="mtu")
    private @Nullable Output<Integer> mtu;

    /**
     * @return Interface MTU &lt;1500..9216&gt; in bytes - Range: `1500`-`9216` - Default value: `1500`
     * 
     */
    public Optional<Output<Integer>> mtu() {
        return Optional.ofNullable(this.mtu);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="mtuVariable")
    private @Nullable Output<String> mtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> mtuVariable() {
        return Optional.ofNullable(this.mtuVariable);
    }

    /**
     * The name of the feature template
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the feature template
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Enable policer
     * 
     */
    @Import(name="policers")
    private @Nullable Output<List<VpnInterfaceSviFeatureTemplatePolicerArgs>> policers;

    /**
     * @return Enable policer
     * 
     */
    public Optional<Output<List<VpnInterfaceSviFeatureTemplatePolicerArgs>>> policers() {
        return Optional.ofNullable(this.policers);
    }

    /**
     * Administrative state - Default value: `true`
     * 
     */
    @Import(name="shutdown")
    private @Nullable Output<Boolean> shutdown;

    /**
     * @return Administrative state - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> shutdown() {
        return Optional.ofNullable(this.shutdown);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="shutdownVariable")
    private @Nullable Output<String> shutdownVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> shutdownVariable() {
        return Optional.ofNullable(this.shutdownVariable);
    }

    /**
     * Configure static ARP entries
     * 
     */
    @Import(name="staticArpEntries")
    private @Nullable Output<List<VpnInterfaceSviFeatureTemplateStaticArpEntryArgs>> staticArpEntries;

    /**
     * @return Configure static ARP entries
     * 
     */
    public Optional<Output<List<VpnInterfaceSviFeatureTemplateStaticArpEntryArgs>>> staticArpEntries() {
        return Optional.ofNullable(this.staticArpEntries);
    }

    /**
     * TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
     * 
     */
    @Import(name="tcpMssAdjust")
    private @Nullable Output<Integer> tcpMssAdjust;

    /**
     * @return TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
     * 
     */
    public Optional<Output<Integer>> tcpMssAdjust() {
        return Optional.ofNullable(this.tcpMssAdjust);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="tcpMssAdjustVariable")
    private @Nullable Output<String> tcpMssAdjustVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> tcpMssAdjustVariable() {
        return Optional.ofNullable(this.tcpMssAdjustVariable);
    }

    /**
     * The template type
     * 
     */
    @Import(name="templateType")
    private @Nullable Output<String> templateType;

    /**
     * @return The template type
     * 
     */
    public Optional<Output<String>> templateType() {
        return Optional.ofNullable(this.templateType);
    }

    /**
     * The version of the feature template
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the feature template
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private VpnInterfaceSviFeatureTemplateState() {}

    private VpnInterfaceSviFeatureTemplateState(VpnInterfaceSviFeatureTemplateState $) {
        this.arpTimeout = $.arpTimeout;
        this.arpTimeoutVariable = $.arpTimeoutVariable;
        this.description = $.description;
        this.deviceTypes = $.deviceTypes;
        this.ifName = $.ifName;
        this.ifNameVariable = $.ifNameVariable;
        this.interfaceDescription = $.interfaceDescription;
        this.interfaceDescriptionVariable = $.interfaceDescriptionVariable;
        this.ipDirectedBroadcast = $.ipDirectedBroadcast;
        this.ipDirectedBroadcastVariable = $.ipDirectedBroadcastVariable;
        this.ipMtu = $.ipMtu;
        this.ipMtuVariable = $.ipMtuVariable;
        this.ipv4AccessLists = $.ipv4AccessLists;
        this.ipv4Address = $.ipv4Address;
        this.ipv4AddressVariable = $.ipv4AddressVariable;
        this.ipv4DhcpHelperVariable = $.ipv4DhcpHelperVariable;
        this.ipv4DhcpHelpers = $.ipv4DhcpHelpers;
        this.ipv4SecondaryAddresses = $.ipv4SecondaryAddresses;
        this.ipv4Vrrps = $.ipv4Vrrps;
        this.ipv6AccessLists = $.ipv6AccessLists;
        this.ipv6Address = $.ipv6Address;
        this.ipv6AddressVariable = $.ipv6AddressVariable;
        this.ipv6DhcpClient = $.ipv6DhcpClient;
        this.ipv6DhcpClientVariable = $.ipv6DhcpClientVariable;
        this.ipv6DhcpDistance = $.ipv6DhcpDistance;
        this.ipv6DhcpDistanceVariable = $.ipv6DhcpDistanceVariable;
        this.ipv6DhcpHelpers = $.ipv6DhcpHelpers;
        this.ipv6DhcpRapidCommit = $.ipv6DhcpRapidCommit;
        this.ipv6DhcpRapidCommitVariable = $.ipv6DhcpRapidCommitVariable;
        this.ipv6SecondaryAddresses = $.ipv6SecondaryAddresses;
        this.ipv6Vrrps = $.ipv6Vrrps;
        this.mtu = $.mtu;
        this.mtuVariable = $.mtuVariable;
        this.name = $.name;
        this.policers = $.policers;
        this.shutdown = $.shutdown;
        this.shutdownVariable = $.shutdownVariable;
        this.staticArpEntries = $.staticArpEntries;
        this.tcpMssAdjust = $.tcpMssAdjust;
        this.tcpMssAdjustVariable = $.tcpMssAdjustVariable;
        this.templateType = $.templateType;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpnInterfaceSviFeatureTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpnInterfaceSviFeatureTemplateState $;

        public Builder() {
            $ = new VpnInterfaceSviFeatureTemplateState();
        }

        public Builder(VpnInterfaceSviFeatureTemplateState defaults) {
            $ = new VpnInterfaceSviFeatureTemplateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arpTimeout Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2678400` - Default value: `1200`
         * 
         * @return builder
         * 
         */
        public Builder arpTimeout(@Nullable Output<Integer> arpTimeout) {
            $.arpTimeout = arpTimeout;
            return this;
        }

        /**
         * @param arpTimeout Timeout value for dynamically learned ARP entries, &lt;0..2678400&gt; seconds - Range: `0`-`2678400` - Default value: `1200`
         * 
         * @return builder
         * 
         */
        public Builder arpTimeout(Integer arpTimeout) {
            return arpTimeout(Output.of(arpTimeout));
        }

        /**
         * @param arpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder arpTimeoutVariable(@Nullable Output<String> arpTimeoutVariable) {
            $.arpTimeoutVariable = arpTimeoutVariable;
            return this;
        }

        /**
         * @param arpTimeoutVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder arpTimeoutVariable(String arpTimeoutVariable) {
            return arpTimeoutVariable(Output.of(arpTimeoutVariable));
        }

        /**
         * @param description The description of the feature template
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the feature template
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param deviceTypes List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
         * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
         * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(@Nullable Output<List<String>> deviceTypes) {
            $.deviceTypes = deviceTypes;
            return this;
        }

        /**
         * @param deviceTypes List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
         * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
         * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(List<String> deviceTypes) {
            return deviceTypes(Output.of(deviceTypes));
        }

        /**
         * @param deviceTypes List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
         * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
         * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(String... deviceTypes) {
            return deviceTypes(List.of(deviceTypes));
        }

        /**
         * @param ifName Interface name: VLAN 1 - VLAN 4094 when present
         * 
         * @return builder
         * 
         */
        public Builder ifName(@Nullable Output<String> ifName) {
            $.ifName = ifName;
            return this;
        }

        /**
         * @param ifName Interface name: VLAN 1 - VLAN 4094 when present
         * 
         * @return builder
         * 
         */
        public Builder ifName(String ifName) {
            return ifName(Output.of(ifName));
        }

        /**
         * @param ifNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ifNameVariable(@Nullable Output<String> ifNameVariable) {
            $.ifNameVariable = ifNameVariable;
            return this;
        }

        /**
         * @param ifNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ifNameVariable(String ifNameVariable) {
            return ifNameVariable(Output.of(ifNameVariable));
        }

        /**
         * @param interfaceDescription Interface description
         * 
         * @return builder
         * 
         */
        public Builder interfaceDescription(@Nullable Output<String> interfaceDescription) {
            $.interfaceDescription = interfaceDescription;
            return this;
        }

        /**
         * @param interfaceDescription Interface description
         * 
         * @return builder
         * 
         */
        public Builder interfaceDescription(String interfaceDescription) {
            return interfaceDescription(Output.of(interfaceDescription));
        }

        /**
         * @param interfaceDescriptionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceDescriptionVariable(@Nullable Output<String> interfaceDescriptionVariable) {
            $.interfaceDescriptionVariable = interfaceDescriptionVariable;
            return this;
        }

        /**
         * @param interfaceDescriptionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceDescriptionVariable(String interfaceDescriptionVariable) {
            return interfaceDescriptionVariable(Output.of(interfaceDescriptionVariable));
        }

        /**
         * @param ipDirectedBroadcast IP Directed-Broadcast - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcast(@Nullable Output<Boolean> ipDirectedBroadcast) {
            $.ipDirectedBroadcast = ipDirectedBroadcast;
            return this;
        }

        /**
         * @param ipDirectedBroadcast IP Directed-Broadcast - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcast(Boolean ipDirectedBroadcast) {
            return ipDirectedBroadcast(Output.of(ipDirectedBroadcast));
        }

        /**
         * @param ipDirectedBroadcastVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcastVariable(@Nullable Output<String> ipDirectedBroadcastVariable) {
            $.ipDirectedBroadcastVariable = ipDirectedBroadcastVariable;
            return this;
        }

        /**
         * @param ipDirectedBroadcastVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipDirectedBroadcastVariable(String ipDirectedBroadcastVariable) {
            return ipDirectedBroadcastVariable(Output.of(ipDirectedBroadcastVariable));
        }

        /**
         * @param ipMtu IP MTU &lt;576..Interface MTU&gt;, in bytes - Range: `576`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder ipMtu(@Nullable Output<Integer> ipMtu) {
            $.ipMtu = ipMtu;
            return this;
        }

        /**
         * @param ipMtu IP MTU &lt;576..Interface MTU&gt;, in bytes - Range: `576`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder ipMtu(Integer ipMtu) {
            return ipMtu(Output.of(ipMtu));
        }

        /**
         * @param ipMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipMtuVariable(@Nullable Output<String> ipMtuVariable) {
            $.ipMtuVariable = ipMtuVariable;
            return this;
        }

        /**
         * @param ipMtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipMtuVariable(String ipMtuVariable) {
            return ipMtuVariable(Output.of(ipMtuVariable));
        }

        /**
         * @param ipv4AccessLists Apply ACL
         * 
         * @return builder
         * 
         */
        public Builder ipv4AccessLists(@Nullable Output<List<VpnInterfaceSviFeatureTemplateIpv4AccessListArgs>> ipv4AccessLists) {
            $.ipv4AccessLists = ipv4AccessLists;
            return this;
        }

        /**
         * @param ipv4AccessLists Apply ACL
         * 
         * @return builder
         * 
         */
        public Builder ipv4AccessLists(List<VpnInterfaceSviFeatureTemplateIpv4AccessListArgs> ipv4AccessLists) {
            return ipv4AccessLists(Output.of(ipv4AccessLists));
        }

        /**
         * @param ipv4AccessLists Apply ACL
         * 
         * @return builder
         * 
         */
        public Builder ipv4AccessLists(VpnInterfaceSviFeatureTemplateIpv4AccessListArgs... ipv4AccessLists) {
            return ipv4AccessLists(List.of(ipv4AccessLists));
        }

        /**
         * @param ipv4Address Assign IPv4 address
         * 
         * @return builder
         * 
         */
        public Builder ipv4Address(@Nullable Output<String> ipv4Address) {
            $.ipv4Address = ipv4Address;
            return this;
        }

        /**
         * @param ipv4Address Assign IPv4 address
         * 
         * @return builder
         * 
         */
        public Builder ipv4Address(String ipv4Address) {
            return ipv4Address(Output.of(ipv4Address));
        }

        /**
         * @param ipv4AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4AddressVariable(@Nullable Output<String> ipv4AddressVariable) {
            $.ipv4AddressVariable = ipv4AddressVariable;
            return this;
        }

        /**
         * @param ipv4AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4AddressVariable(String ipv4AddressVariable) {
            return ipv4AddressVariable(Output.of(ipv4AddressVariable));
        }

        /**
         * @param ipv4DhcpHelperVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelperVariable(@Nullable Output<String> ipv4DhcpHelperVariable) {
            $.ipv4DhcpHelperVariable = ipv4DhcpHelperVariable;
            return this;
        }

        /**
         * @param ipv4DhcpHelperVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelperVariable(String ipv4DhcpHelperVariable) {
            return ipv4DhcpHelperVariable(Output.of(ipv4DhcpHelperVariable));
        }

        /**
         * @param ipv4DhcpHelpers List of DHCP helper addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpers(@Nullable Output<List<String>> ipv4DhcpHelpers) {
            $.ipv4DhcpHelpers = ipv4DhcpHelpers;
            return this;
        }

        /**
         * @param ipv4DhcpHelpers List of DHCP helper addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpers(List<String> ipv4DhcpHelpers) {
            return ipv4DhcpHelpers(Output.of(ipv4DhcpHelpers));
        }

        /**
         * @param ipv4DhcpHelpers List of DHCP helper addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4DhcpHelpers(String... ipv4DhcpHelpers) {
            return ipv4DhcpHelpers(List.of(ipv4DhcpHelpers));
        }

        /**
         * @param ipv4SecondaryAddresses Assign secondary IP addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4SecondaryAddresses(@Nullable Output<List<VpnInterfaceSviFeatureTemplateIpv4SecondaryAddressArgs>> ipv4SecondaryAddresses) {
            $.ipv4SecondaryAddresses = ipv4SecondaryAddresses;
            return this;
        }

        /**
         * @param ipv4SecondaryAddresses Assign secondary IP addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4SecondaryAddresses(List<VpnInterfaceSviFeatureTemplateIpv4SecondaryAddressArgs> ipv4SecondaryAddresses) {
            return ipv4SecondaryAddresses(Output.of(ipv4SecondaryAddresses));
        }

        /**
         * @param ipv4SecondaryAddresses Assign secondary IP addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv4SecondaryAddresses(VpnInterfaceSviFeatureTemplateIpv4SecondaryAddressArgs... ipv4SecondaryAddresses) {
            return ipv4SecondaryAddresses(List.of(ipv4SecondaryAddresses));
        }

        /**
         * @param ipv4Vrrps Enable VRRP
         * 
         * @return builder
         * 
         */
        public Builder ipv4Vrrps(@Nullable Output<List<VpnInterfaceSviFeatureTemplateIpv4VrrpArgs>> ipv4Vrrps) {
            $.ipv4Vrrps = ipv4Vrrps;
            return this;
        }

        /**
         * @param ipv4Vrrps Enable VRRP
         * 
         * @return builder
         * 
         */
        public Builder ipv4Vrrps(List<VpnInterfaceSviFeatureTemplateIpv4VrrpArgs> ipv4Vrrps) {
            return ipv4Vrrps(Output.of(ipv4Vrrps));
        }

        /**
         * @param ipv4Vrrps Enable VRRP
         * 
         * @return builder
         * 
         */
        public Builder ipv4Vrrps(VpnInterfaceSviFeatureTemplateIpv4VrrpArgs... ipv4Vrrps) {
            return ipv4Vrrps(List.of(ipv4Vrrps));
        }

        /**
         * @param ipv6AccessLists Apply ACL
         * 
         * @return builder
         * 
         */
        public Builder ipv6AccessLists(@Nullable Output<List<VpnInterfaceSviFeatureTemplateIpv6AccessListArgs>> ipv6AccessLists) {
            $.ipv6AccessLists = ipv6AccessLists;
            return this;
        }

        /**
         * @param ipv6AccessLists Apply ACL
         * 
         * @return builder
         * 
         */
        public Builder ipv6AccessLists(List<VpnInterfaceSviFeatureTemplateIpv6AccessListArgs> ipv6AccessLists) {
            return ipv6AccessLists(Output.of(ipv6AccessLists));
        }

        /**
         * @param ipv6AccessLists Apply ACL
         * 
         * @return builder
         * 
         */
        public Builder ipv6AccessLists(VpnInterfaceSviFeatureTemplateIpv6AccessListArgs... ipv6AccessLists) {
            return ipv6AccessLists(List.of(ipv6AccessLists));
        }

        /**
         * @param ipv6Address Assign IPv6 address
         * 
         * @return builder
         * 
         */
        public Builder ipv6Address(@Nullable Output<String> ipv6Address) {
            $.ipv6Address = ipv6Address;
            return this;
        }

        /**
         * @param ipv6Address Assign IPv6 address
         * 
         * @return builder
         * 
         */
        public Builder ipv6Address(String ipv6Address) {
            return ipv6Address(Output.of(ipv6Address));
        }

        /**
         * @param ipv6AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv6AddressVariable(@Nullable Output<String> ipv6AddressVariable) {
            $.ipv6AddressVariable = ipv6AddressVariable;
            return this;
        }

        /**
         * @param ipv6AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv6AddressVariable(String ipv6AddressVariable) {
            return ipv6AddressVariable(Output.of(ipv6AddressVariable));
        }

        /**
         * @param ipv6DhcpClient Enable DHCPv6 - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpClient(@Nullable Output<Boolean> ipv6DhcpClient) {
            $.ipv6DhcpClient = ipv6DhcpClient;
            return this;
        }

        /**
         * @param ipv6DhcpClient Enable DHCPv6 - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpClient(Boolean ipv6DhcpClient) {
            return ipv6DhcpClient(Output.of(ipv6DhcpClient));
        }

        /**
         * @param ipv6DhcpClientVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpClientVariable(@Nullable Output<String> ipv6DhcpClientVariable) {
            $.ipv6DhcpClientVariable = ipv6DhcpClientVariable;
            return this;
        }

        /**
         * @param ipv6DhcpClientVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpClientVariable(String ipv6DhcpClientVariable) {
            return ipv6DhcpClientVariable(Output.of(ipv6DhcpClientVariable));
        }

        /**
         * @param ipv6DhcpDistance Set administrative distance for DHCP default route - Range: `1`-`65536` - Default value: `1`
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpDistance(@Nullable Output<Integer> ipv6DhcpDistance) {
            $.ipv6DhcpDistance = ipv6DhcpDistance;
            return this;
        }

        /**
         * @param ipv6DhcpDistance Set administrative distance for DHCP default route - Range: `1`-`65536` - Default value: `1`
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpDistance(Integer ipv6DhcpDistance) {
            return ipv6DhcpDistance(Output.of(ipv6DhcpDistance));
        }

        /**
         * @param ipv6DhcpDistanceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpDistanceVariable(@Nullable Output<String> ipv6DhcpDistanceVariable) {
            $.ipv6DhcpDistanceVariable = ipv6DhcpDistanceVariable;
            return this;
        }

        /**
         * @param ipv6DhcpDistanceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpDistanceVariable(String ipv6DhcpDistanceVariable) {
            return ipv6DhcpDistanceVariable(Output.of(ipv6DhcpDistanceVariable));
        }

        /**
         * @param ipv6DhcpHelpers DHCPv6 Helper
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpHelpers(@Nullable Output<List<VpnInterfaceSviFeatureTemplateIpv6DhcpHelperArgs>> ipv6DhcpHelpers) {
            $.ipv6DhcpHelpers = ipv6DhcpHelpers;
            return this;
        }

        /**
         * @param ipv6DhcpHelpers DHCPv6 Helper
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpHelpers(List<VpnInterfaceSviFeatureTemplateIpv6DhcpHelperArgs> ipv6DhcpHelpers) {
            return ipv6DhcpHelpers(Output.of(ipv6DhcpHelpers));
        }

        /**
         * @param ipv6DhcpHelpers DHCPv6 Helper
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpHelpers(VpnInterfaceSviFeatureTemplateIpv6DhcpHelperArgs... ipv6DhcpHelpers) {
            return ipv6DhcpHelpers(List.of(ipv6DhcpHelpers));
        }

        /**
         * @param ipv6DhcpRapidCommit Enable DHCPv6 rapid commit - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpRapidCommit(@Nullable Output<Boolean> ipv6DhcpRapidCommit) {
            $.ipv6DhcpRapidCommit = ipv6DhcpRapidCommit;
            return this;
        }

        /**
         * @param ipv6DhcpRapidCommit Enable DHCPv6 rapid commit - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpRapidCommit(Boolean ipv6DhcpRapidCommit) {
            return ipv6DhcpRapidCommit(Output.of(ipv6DhcpRapidCommit));
        }

        /**
         * @param ipv6DhcpRapidCommitVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpRapidCommitVariable(@Nullable Output<String> ipv6DhcpRapidCommitVariable) {
            $.ipv6DhcpRapidCommitVariable = ipv6DhcpRapidCommitVariable;
            return this;
        }

        /**
         * @param ipv6DhcpRapidCommitVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipv6DhcpRapidCommitVariable(String ipv6DhcpRapidCommitVariable) {
            return ipv6DhcpRapidCommitVariable(Output.of(ipv6DhcpRapidCommitVariable));
        }

        /**
         * @param ipv6SecondaryAddresses Assign secondary IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv6SecondaryAddresses(@Nullable Output<List<VpnInterfaceSviFeatureTemplateIpv6SecondaryAddressArgs>> ipv6SecondaryAddresses) {
            $.ipv6SecondaryAddresses = ipv6SecondaryAddresses;
            return this;
        }

        /**
         * @param ipv6SecondaryAddresses Assign secondary IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv6SecondaryAddresses(List<VpnInterfaceSviFeatureTemplateIpv6SecondaryAddressArgs> ipv6SecondaryAddresses) {
            return ipv6SecondaryAddresses(Output.of(ipv6SecondaryAddresses));
        }

        /**
         * @param ipv6SecondaryAddresses Assign secondary IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder ipv6SecondaryAddresses(VpnInterfaceSviFeatureTemplateIpv6SecondaryAddressArgs... ipv6SecondaryAddresses) {
            return ipv6SecondaryAddresses(List.of(ipv6SecondaryAddresses));
        }

        /**
         * @param ipv6Vrrps Enable VRRP
         * 
         * @return builder
         * 
         */
        public Builder ipv6Vrrps(@Nullable Output<List<VpnInterfaceSviFeatureTemplateIpv6VrrpArgs>> ipv6Vrrps) {
            $.ipv6Vrrps = ipv6Vrrps;
            return this;
        }

        /**
         * @param ipv6Vrrps Enable VRRP
         * 
         * @return builder
         * 
         */
        public Builder ipv6Vrrps(List<VpnInterfaceSviFeatureTemplateIpv6VrrpArgs> ipv6Vrrps) {
            return ipv6Vrrps(Output.of(ipv6Vrrps));
        }

        /**
         * @param ipv6Vrrps Enable VRRP
         * 
         * @return builder
         * 
         */
        public Builder ipv6Vrrps(VpnInterfaceSviFeatureTemplateIpv6VrrpArgs... ipv6Vrrps) {
            return ipv6Vrrps(List.of(ipv6Vrrps));
        }

        /**
         * @param mtu Interface MTU &lt;1500..9216&gt; in bytes - Range: `1500`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder mtu(@Nullable Output<Integer> mtu) {
            $.mtu = mtu;
            return this;
        }

        /**
         * @param mtu Interface MTU &lt;1500..9216&gt; in bytes - Range: `1500`-`9216` - Default value: `1500`
         * 
         * @return builder
         * 
         */
        public Builder mtu(Integer mtu) {
            return mtu(Output.of(mtu));
        }

        /**
         * @param mtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder mtuVariable(@Nullable Output<String> mtuVariable) {
            $.mtuVariable = mtuVariable;
            return this;
        }

        /**
         * @param mtuVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder mtuVariable(String mtuVariable) {
            return mtuVariable(Output.of(mtuVariable));
        }

        /**
         * @param name The name of the feature template
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the feature template
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param policers Enable policer
         * 
         * @return builder
         * 
         */
        public Builder policers(@Nullable Output<List<VpnInterfaceSviFeatureTemplatePolicerArgs>> policers) {
            $.policers = policers;
            return this;
        }

        /**
         * @param policers Enable policer
         * 
         * @return builder
         * 
         */
        public Builder policers(List<VpnInterfaceSviFeatureTemplatePolicerArgs> policers) {
            return policers(Output.of(policers));
        }

        /**
         * @param policers Enable policer
         * 
         * @return builder
         * 
         */
        public Builder policers(VpnInterfaceSviFeatureTemplatePolicerArgs... policers) {
            return policers(List.of(policers));
        }

        /**
         * @param shutdown Administrative state - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder shutdown(@Nullable Output<Boolean> shutdown) {
            $.shutdown = shutdown;
            return this;
        }

        /**
         * @param shutdown Administrative state - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder shutdown(Boolean shutdown) {
            return shutdown(Output.of(shutdown));
        }

        /**
         * @param shutdownVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdownVariable(@Nullable Output<String> shutdownVariable) {
            $.shutdownVariable = shutdownVariable;
            return this;
        }

        /**
         * @param shutdownVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdownVariable(String shutdownVariable) {
            return shutdownVariable(Output.of(shutdownVariable));
        }

        /**
         * @param staticArpEntries Configure static ARP entries
         * 
         * @return builder
         * 
         */
        public Builder staticArpEntries(@Nullable Output<List<VpnInterfaceSviFeatureTemplateStaticArpEntryArgs>> staticArpEntries) {
            $.staticArpEntries = staticArpEntries;
            return this;
        }

        /**
         * @param staticArpEntries Configure static ARP entries
         * 
         * @return builder
         * 
         */
        public Builder staticArpEntries(List<VpnInterfaceSviFeatureTemplateStaticArpEntryArgs> staticArpEntries) {
            return staticArpEntries(Output.of(staticArpEntries));
        }

        /**
         * @param staticArpEntries Configure static ARP entries
         * 
         * @return builder
         * 
         */
        public Builder staticArpEntries(VpnInterfaceSviFeatureTemplateStaticArpEntryArgs... staticArpEntries) {
            return staticArpEntries(List.of(staticArpEntries));
        }

        /**
         * @param tcpMssAdjust TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
         * 
         * @return builder
         * 
         */
        public Builder tcpMssAdjust(@Nullable Output<Integer> tcpMssAdjust) {
            $.tcpMssAdjust = tcpMssAdjust;
            return this;
        }

        /**
         * @param tcpMssAdjust TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
         * 
         * @return builder
         * 
         */
        public Builder tcpMssAdjust(Integer tcpMssAdjust) {
            return tcpMssAdjust(Output.of(tcpMssAdjust));
        }

        /**
         * @param tcpMssAdjustVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tcpMssAdjustVariable(@Nullable Output<String> tcpMssAdjustVariable) {
            $.tcpMssAdjustVariable = tcpMssAdjustVariable;
            return this;
        }

        /**
         * @param tcpMssAdjustVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder tcpMssAdjustVariable(String tcpMssAdjustVariable) {
            return tcpMssAdjustVariable(Output.of(tcpMssAdjustVariable));
        }

        /**
         * @param templateType The template type
         * 
         * @return builder
         * 
         */
        public Builder templateType(@Nullable Output<String> templateType) {
            $.templateType = templateType;
            return this;
        }

        /**
         * @param templateType The template type
         * 
         * @return builder
         * 
         */
        public Builder templateType(String templateType) {
            return templateType(Output.of(templateType));
        }

        /**
         * @param version The version of the feature template
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the feature template
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public VpnInterfaceSviFeatureTemplateState build() {
            return $;
        }
    }

}
