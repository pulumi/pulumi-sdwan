// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.ConfigurationGroupFeatureProfileArgs;
import com.pulumi.sdwan.inputs.ConfigurationGroupTopologyDeviceArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationGroupArgs Empty = new ConfigurationGroupArgs();

    /**
     * Description
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return Description
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * List of feature profiles
     * 
     */
    @Import(name="featureProfiles")
    private @Nullable Output<List<ConfigurationGroupFeatureProfileArgs>> featureProfiles;

    /**
     * @return List of feature profiles
     * 
     */
    public Optional<Output<List<ConfigurationGroupFeatureProfileArgs>>> featureProfiles() {
        return Optional.ofNullable(this.featureProfiles);
    }

    /**
     * The name of the configuration group
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the configuration group
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
     * 
     */
    @Import(name="solution", required=true)
    private Output<String> solution;

    /**
     * @return Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
     * 
     */
    public Output<String> solution() {
        return this.solution;
    }

    /**
     * List of topology device types
     * 
     */
    @Import(name="topologyDevices")
    private @Nullable Output<List<ConfigurationGroupTopologyDeviceArgs>> topologyDevices;

    /**
     * @return List of topology device types
     * 
     */
    public Optional<Output<List<ConfigurationGroupTopologyDeviceArgs>>> topologyDevices() {
        return Optional.ofNullable(this.topologyDevices);
    }

    /**
     * Number of devices per site - Range: `1`-`20`
     * 
     */
    @Import(name="topologySiteDevices")
    private @Nullable Output<Integer> topologySiteDevices;

    /**
     * @return Number of devices per site - Range: `1`-`20`
     * 
     */
    public Optional<Output<Integer>> topologySiteDevices() {
        return Optional.ofNullable(this.topologySiteDevices);
    }

    private ConfigurationGroupArgs() {}

    private ConfigurationGroupArgs(ConfigurationGroupArgs $) {
        this.description = $.description;
        this.featureProfiles = $.featureProfiles;
        this.name = $.name;
        this.solution = $.solution;
        this.topologyDevices = $.topologyDevices;
        this.topologySiteDevices = $.topologySiteDevices;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationGroupArgs $;

        public Builder() {
            $ = new ConfigurationGroupArgs();
        }

        public Builder(ConfigurationGroupArgs defaults) {
            $ = new ConfigurationGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param featureProfiles List of feature profiles
         * 
         * @return builder
         * 
         */
        public Builder featureProfiles(@Nullable Output<List<ConfigurationGroupFeatureProfileArgs>> featureProfiles) {
            $.featureProfiles = featureProfiles;
            return this;
        }

        /**
         * @param featureProfiles List of feature profiles
         * 
         * @return builder
         * 
         */
        public Builder featureProfiles(List<ConfigurationGroupFeatureProfileArgs> featureProfiles) {
            return featureProfiles(Output.of(featureProfiles));
        }

        /**
         * @param featureProfiles List of feature profiles
         * 
         * @return builder
         * 
         */
        public Builder featureProfiles(ConfigurationGroupFeatureProfileArgs... featureProfiles) {
            return featureProfiles(List.of(featureProfiles));
        }

        /**
         * @param name The name of the configuration group
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the configuration group
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param solution Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
         * 
         * @return builder
         * 
         */
        public Builder solution(Output<String> solution) {
            $.solution = solution;
            return this;
        }

        /**
         * @param solution Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
         * 
         * @return builder
         * 
         */
        public Builder solution(String solution) {
            return solution(Output.of(solution));
        }

        /**
         * @param topologyDevices List of topology device types
         * 
         * @return builder
         * 
         */
        public Builder topologyDevices(@Nullable Output<List<ConfigurationGroupTopologyDeviceArgs>> topologyDevices) {
            $.topologyDevices = topologyDevices;
            return this;
        }

        /**
         * @param topologyDevices List of topology device types
         * 
         * @return builder
         * 
         */
        public Builder topologyDevices(List<ConfigurationGroupTopologyDeviceArgs> topologyDevices) {
            return topologyDevices(Output.of(topologyDevices));
        }

        /**
         * @param topologyDevices List of topology device types
         * 
         * @return builder
         * 
         */
        public Builder topologyDevices(ConfigurationGroupTopologyDeviceArgs... topologyDevices) {
            return topologyDevices(List.of(topologyDevices));
        }

        /**
         * @param topologySiteDevices Number of devices per site - Range: `1`-`20`
         * 
         * @return builder
         * 
         */
        public Builder topologySiteDevices(@Nullable Output<Integer> topologySiteDevices) {
            $.topologySiteDevices = topologySiteDevices;
            return this;
        }

        /**
         * @param topologySiteDevices Number of devices per site - Range: `1`-`20`
         * 
         * @return builder
         * 
         */
        public Builder topologySiteDevices(Integer topologySiteDevices) {
            return topologySiteDevices(Output.of(topologySiteDevices));
        }

        public ConfigurationGroupArgs build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("ConfigurationGroupArgs", "description");
            }
            if ($.solution == null) {
                throw new MissingRequiredPropertyException("ConfigurationGroupArgs", "solution");
            }
            return $;
        }
    }

}
