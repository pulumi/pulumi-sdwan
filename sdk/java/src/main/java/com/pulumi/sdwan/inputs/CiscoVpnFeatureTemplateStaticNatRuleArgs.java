// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CiscoVpnFeatureTemplateStaticNatRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final CiscoVpnFeatureTemplateStaticNatRuleArgs Empty = new CiscoVpnFeatureTemplateStaticNatRuleArgs();

    /**
     * Indicates if list item is considered optional.
     * 
     */
    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    /**
     * NAT Pool Name, natpool1..31
     * 
     */
    @Import(name="poolName")
    private @Nullable Output<Integer> poolName;

    /**
     * @return NAT Pool Name, natpool1..31
     * 
     */
    public Optional<Output<Integer>> poolName() {
        return Optional.ofNullable(this.poolName);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="poolNameVariable")
    private @Nullable Output<String> poolNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> poolNameVariable() {
        return Optional.ofNullable(this.poolNameVariable);
    }

    /**
     * Source IP address to be translated
     * 
     */
    @Import(name="sourceIp")
    private @Nullable Output<String> sourceIp;

    /**
     * @return Source IP address to be translated
     * 
     */
    public Optional<Output<String>> sourceIp() {
        return Optional.ofNullable(this.sourceIp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sourceIpVariable")
    private @Nullable Output<String> sourceIpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sourceIpVariable() {
        return Optional.ofNullable(this.sourceIpVariable);
    }

    /**
     * Direction of static NAT translation
     *   - Choices: `inside`, `outside`
     * 
     */
    @Import(name="staticNatDirection")
    private @Nullable Output<String> staticNatDirection;

    /**
     * @return Direction of static NAT translation
     *   - Choices: `inside`, `outside`
     * 
     */
    public Optional<Output<String>> staticNatDirection() {
        return Optional.ofNullable(this.staticNatDirection);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="staticNatDirectionVariable")
    private @Nullable Output<String> staticNatDirectionVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> staticNatDirectionVariable() {
        return Optional.ofNullable(this.staticNatDirectionVariable);
    }

    /**
     * Add Object/Object Group Tracker
     *   - Range: `1`-`1000`
     * 
     */
    @Import(name="trackerId")
    private @Nullable Output<Integer> trackerId;

    /**
     * @return Add Object/Object Group Tracker
     *   - Range: `1`-`1000`
     * 
     */
    public Optional<Output<Integer>> trackerId() {
        return Optional.ofNullable(this.trackerId);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="trackerIdVariable")
    private @Nullable Output<String> trackerIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> trackerIdVariable() {
        return Optional.ofNullable(this.trackerIdVariable);
    }

    /**
     * Statically translated source IP address
     * 
     */
    @Import(name="translateIp")
    private @Nullable Output<String> translateIp;

    /**
     * @return Statically translated source IP address
     * 
     */
    public Optional<Output<String>> translateIp() {
        return Optional.ofNullable(this.translateIp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="translateIpVariable")
    private @Nullable Output<String> translateIpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> translateIpVariable() {
        return Optional.ofNullable(this.translateIpVariable);
    }

    private CiscoVpnFeatureTemplateStaticNatRuleArgs() {}

    private CiscoVpnFeatureTemplateStaticNatRuleArgs(CiscoVpnFeatureTemplateStaticNatRuleArgs $) {
        this.optional = $.optional;
        this.poolName = $.poolName;
        this.poolNameVariable = $.poolNameVariable;
        this.sourceIp = $.sourceIp;
        this.sourceIpVariable = $.sourceIpVariable;
        this.staticNatDirection = $.staticNatDirection;
        this.staticNatDirectionVariable = $.staticNatDirectionVariable;
        this.trackerId = $.trackerId;
        this.trackerIdVariable = $.trackerIdVariable;
        this.translateIp = $.translateIp;
        this.translateIpVariable = $.translateIpVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CiscoVpnFeatureTemplateStaticNatRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CiscoVpnFeatureTemplateStaticNatRuleArgs $;

        public Builder() {
            $ = new CiscoVpnFeatureTemplateStaticNatRuleArgs();
        }

        public Builder(CiscoVpnFeatureTemplateStaticNatRuleArgs defaults) {
            $ = new CiscoVpnFeatureTemplateStaticNatRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        /**
         * @param poolName NAT Pool Name, natpool1..31
         * 
         * @return builder
         * 
         */
        public Builder poolName(@Nullable Output<Integer> poolName) {
            $.poolName = poolName;
            return this;
        }

        /**
         * @param poolName NAT Pool Name, natpool1..31
         * 
         * @return builder
         * 
         */
        public Builder poolName(Integer poolName) {
            return poolName(Output.of(poolName));
        }

        /**
         * @param poolNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder poolNameVariable(@Nullable Output<String> poolNameVariable) {
            $.poolNameVariable = poolNameVariable;
            return this;
        }

        /**
         * @param poolNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder poolNameVariable(String poolNameVariable) {
            return poolNameVariable(Output.of(poolNameVariable));
        }

        /**
         * @param sourceIp Source IP address to be translated
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(@Nullable Output<String> sourceIp) {
            $.sourceIp = sourceIp;
            return this;
        }

        /**
         * @param sourceIp Source IP address to be translated
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(String sourceIp) {
            return sourceIp(Output.of(sourceIp));
        }

        /**
         * @param sourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceIpVariable(@Nullable Output<String> sourceIpVariable) {
            $.sourceIpVariable = sourceIpVariable;
            return this;
        }

        /**
         * @param sourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceIpVariable(String sourceIpVariable) {
            return sourceIpVariable(Output.of(sourceIpVariable));
        }

        /**
         * @param staticNatDirection Direction of static NAT translation
         *   - Choices: `inside`, `outside`
         * 
         * @return builder
         * 
         */
        public Builder staticNatDirection(@Nullable Output<String> staticNatDirection) {
            $.staticNatDirection = staticNatDirection;
            return this;
        }

        /**
         * @param staticNatDirection Direction of static NAT translation
         *   - Choices: `inside`, `outside`
         * 
         * @return builder
         * 
         */
        public Builder staticNatDirection(String staticNatDirection) {
            return staticNatDirection(Output.of(staticNatDirection));
        }

        /**
         * @param staticNatDirectionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder staticNatDirectionVariable(@Nullable Output<String> staticNatDirectionVariable) {
            $.staticNatDirectionVariable = staticNatDirectionVariable;
            return this;
        }

        /**
         * @param staticNatDirectionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder staticNatDirectionVariable(String staticNatDirectionVariable) {
            return staticNatDirectionVariable(Output.of(staticNatDirectionVariable));
        }

        /**
         * @param trackerId Add Object/Object Group Tracker
         *   - Range: `1`-`1000`
         * 
         * @return builder
         * 
         */
        public Builder trackerId(@Nullable Output<Integer> trackerId) {
            $.trackerId = trackerId;
            return this;
        }

        /**
         * @param trackerId Add Object/Object Group Tracker
         *   - Range: `1`-`1000`
         * 
         * @return builder
         * 
         */
        public Builder trackerId(Integer trackerId) {
            return trackerId(Output.of(trackerId));
        }

        /**
         * @param trackerIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackerIdVariable(@Nullable Output<String> trackerIdVariable) {
            $.trackerIdVariable = trackerIdVariable;
            return this;
        }

        /**
         * @param trackerIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackerIdVariable(String trackerIdVariable) {
            return trackerIdVariable(Output.of(trackerIdVariable));
        }

        /**
         * @param translateIp Statically translated source IP address
         * 
         * @return builder
         * 
         */
        public Builder translateIp(@Nullable Output<String> translateIp) {
            $.translateIp = translateIp;
            return this;
        }

        /**
         * @param translateIp Statically translated source IP address
         * 
         * @return builder
         * 
         */
        public Builder translateIp(String translateIp) {
            return translateIp(Output.of(translateIp));
        }

        /**
         * @param translateIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder translateIpVariable(@Nullable Output<String> translateIpVariable) {
            $.translateIpVariable = translateIpVariable;
            return this;
        }

        /**
         * @param translateIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder translateIpVariable(String translateIpVariable) {
            return translateIpVariable(Output.of(translateIpVariable));
        }

        public CiscoVpnFeatureTemplateStaticNatRuleArgs build() {
            return $;
        }
    }

}
