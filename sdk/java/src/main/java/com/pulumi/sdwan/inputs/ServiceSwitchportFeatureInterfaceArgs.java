// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceSwitchportFeatureInterfaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceSwitchportFeatureInterfaceArgs Empty = new ServiceSwitchportFeatureInterfaceArgs();

    /**
     * Set uni or bi directional authorization mode
     *   - Choices: `both`, `in`
     * 
     */
    @Import(name="controlDirection")
    private @Nullable Output<String> controlDirection;

    /**
     * @return Set uni or bi directional authorization mode
     *   - Choices: `both`, `in`
     * 
     */
    public Optional<Output<String>> controlDirection() {
        return Optional.ofNullable(this.controlDirection);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="controlDirectionVariable")
    private @Nullable Output<String> controlDirectionVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> controlDirectionVariable() {
        return Optional.ofNullable(this.controlDirectionVariable);
    }

    /**
     * Set Critical VLAN
     *   - Range: `1`-`4094`
     * 
     */
    @Import(name="criticalVlan")
    private @Nullable Output<Integer> criticalVlan;

    /**
     * @return Set Critical VLAN
     *   - Range: `1`-`4094`
     * 
     */
    public Optional<Output<Integer>> criticalVlan() {
        return Optional.ofNullable(this.criticalVlan);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="criticalVlanVariable")
    private @Nullable Output<String> criticalVlanVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> criticalVlanVariable() {
        return Optional.ofNullable(this.criticalVlanVariable);
    }

    /**
     * Duplex mode
     *   - Choices: `full`, `half`
     * 
     */
    @Import(name="duplex")
    private @Nullable Output<String> duplex;

    /**
     * @return Duplex mode
     *   - Choices: `full`, `half`
     * 
     */
    public Optional<Output<String>> duplex() {
        return Optional.ofNullable(this.duplex);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="duplexVariable")
    private @Nullable Output<String> duplexVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> duplexVariable() {
        return Optional.ofNullable(this.duplexVariable);
    }

    /**
     * Enable Periodic Reauthentication
     * 
     */
    @Import(name="enablePeriodicReauth")
    private @Nullable Output<Boolean> enablePeriodicReauth;

    /**
     * @return Enable Periodic Reauthentication
     * 
     */
    public Optional<Output<Boolean>> enablePeriodicReauth() {
        return Optional.ofNullable(this.enablePeriodicReauth);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="enablePeriodicReauthVariable")
    private @Nullable Output<String> enablePeriodicReauthVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> enablePeriodicReauthVariable() {
        return Optional.ofNullable(this.enablePeriodicReauthVariable);
    }

    /**
     * Enable Critical Voice VLAN
     * 
     */
    @Import(name="enableVoice")
    private @Nullable Output<Boolean> enableVoice;

    /**
     * @return Enable Critical Voice VLAN
     * 
     */
    public Optional<Output<Boolean>> enableVoice() {
        return Optional.ofNullable(this.enableVoice);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="enableVoiceVariable")
    private @Nullable Output<String> enableVoiceVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> enableVoiceVariable() {
        return Optional.ofNullable(this.enableVoiceVariable);
    }

    /**
     * Set vlan to drop non-802.1x enabled clients into if client is not in MAB list
     *   - Range: `1`-`4094`
     * 
     */
    @Import(name="guestVlan")
    private @Nullable Output<Integer> guestVlan;

    /**
     * @return Set vlan to drop non-802.1x enabled clients into if client is not in MAB list
     *   - Range: `1`-`4094`
     * 
     */
    public Optional<Output<Integer>> guestVlan() {
        return Optional.ofNullable(this.guestVlan);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="guestVlanVariable")
    private @Nullable Output<String> guestVlanVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> guestVlanVariable() {
        return Optional.ofNullable(this.guestVlanVariable);
    }

    /**
     * Set host mode
     *   - Choices: `single-host`, `multi-auth`, `multi-host`, `multi-domain`
     * 
     */
    @Import(name="hostMode")
    private @Nullable Output<String> hostMode;

    /**
     * @return Set host mode
     *   - Choices: `single-host`, `multi-auth`, `multi-host`, `multi-domain`
     * 
     */
    public Optional<Output<String>> hostMode() {
        return Optional.ofNullable(this.hostMode);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="hostModeVariable")
    private @Nullable Output<String> hostModeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> hostModeVariable() {
        return Optional.ofNullable(this.hostModeVariable);
    }

    /**
     * Periodic Reauthentication Inactivity Timeout (in seconds)
     *   - Range: `1`-`65535`
     * 
     */
    @Import(name="inactivity")
    private @Nullable Output<Integer> inactivity;

    /**
     * @return Periodic Reauthentication Inactivity Timeout (in seconds)
     *   - Range: `1`-`65535`
     * 
     */
    public Optional<Output<Integer>> inactivity() {
        return Optional.ofNullable(this.inactivity);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="inactivityVariable")
    private @Nullable Output<String> inactivityVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> inactivityVariable() {
        return Optional.ofNullable(this.inactivityVariable);
    }

    /**
     * Set Interface name
     * 
     */
    @Import(name="interfaceName")
    private @Nullable Output<String> interfaceName;

    /**
     * @return Set Interface name
     * 
     */
    public Optional<Output<String>> interfaceName() {
        return Optional.ofNullable(this.interfaceName);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceNameVariable")
    private @Nullable Output<String> interfaceNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceNameVariable() {
        return Optional.ofNullable(this.interfaceNameVariable);
    }

    /**
     * MAC Authentication Bypass
     * 
     */
    @Import(name="macAuthenticationBypass")
    private @Nullable Output<Boolean> macAuthenticationBypass;

    /**
     * @return MAC Authentication Bypass
     * 
     */
    public Optional<Output<Boolean>> macAuthenticationBypass() {
        return Optional.ofNullable(this.macAuthenticationBypass);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="macAuthenticationBypassVariable")
    private @Nullable Output<String> macAuthenticationBypassVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> macAuthenticationBypassVariable() {
        return Optional.ofNullable(this.macAuthenticationBypassVariable);
    }

    /**
     * Set type of switch port: access/trunk
     *   - Choices: `access`, `trunk`
     * 
     */
    @Import(name="mode")
    private @Nullable Output<String> mode;

    /**
     * @return Set type of switch port: access/trunk
     *   - Choices: `access`, `trunk`
     * 
     */
    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * Set 802.1x Interface Pae Type
     * 
     */
    @Import(name="paeEnable")
    private @Nullable Output<Boolean> paeEnable;

    /**
     * @return Set 802.1x Interface Pae Type
     * 
     */
    public Optional<Output<Boolean>> paeEnable() {
        return Optional.ofNullable(this.paeEnable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="paeEnableVariable")
    private @Nullable Output<String> paeEnableVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> paeEnableVariable() {
        return Optional.ofNullable(this.paeEnableVariable);
    }

    /**
     * Set Port-Control Mode
     *   - Choices: `auto`, `force-unauthorized`, `force-authorized`
     * 
     */
    @Import(name="portControl")
    private @Nullable Output<String> portControl;

    /**
     * @return Set Port-Control Mode
     *   - Choices: `auto`, `force-unauthorized`, `force-authorized`
     * 
     */
    public Optional<Output<String>> portControl() {
        return Optional.ofNullable(this.portControl);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="portControlVariable")
    private @Nullable Output<String> portControlVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> portControlVariable() {
        return Optional.ofNullable(this.portControlVariable);
    }

    /**
     * Periodic Reauthentication Interval (in seconds)
     *   - Range: `1`-`1073741823`
     *   - Default value: `3600`
     * 
     */
    @Import(name="reauthentication")
    private @Nullable Output<Integer> reauthentication;

    /**
     * @return Periodic Reauthentication Interval (in seconds)
     *   - Range: `1`-`1073741823`
     *   - Default value: `3600`
     * 
     */
    public Optional<Output<Integer>> reauthentication() {
        return Optional.ofNullable(this.reauthentication);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="reauthenticationVariable")
    private @Nullable Output<String> reauthenticationVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> reauthenticationVariable() {
        return Optional.ofNullable(this.reauthenticationVariable);
    }

    /**
     * Set Restricted VLAN ID
     *   - Range: `1`-`4094`
     * 
     */
    @Import(name="restrictedVlan")
    private @Nullable Output<Integer> restrictedVlan;

    /**
     * @return Set Restricted VLAN ID
     *   - Range: `1`-`4094`
     * 
     */
    public Optional<Output<Integer>> restrictedVlan() {
        return Optional.ofNullable(this.restrictedVlan);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="restrictedVlanVariable")
    private @Nullable Output<String> restrictedVlanVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> restrictedVlanVariable() {
        return Optional.ofNullable(this.restrictedVlanVariable);
    }

    /**
     * Administrative state
     *   - Default value: `true`
     * 
     */
    @Import(name="shutdown")
    private @Nullable Output<Boolean> shutdown;

    /**
     * @return Administrative state
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> shutdown() {
        return Optional.ofNullable(this.shutdown);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="shutdownVariable")
    private @Nullable Output<String> shutdownVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> shutdownVariable() {
        return Optional.ofNullable(this.shutdownVariable);
    }

    /**
     * Set interface speed
     *   - Choices: `10`, `100`, `1000`, `2500`, `10000`
     * 
     */
    @Import(name="speed")
    private @Nullable Output<String> speed;

    /**
     * @return Set interface speed
     *   - Choices: `10`, `100`, `1000`, `2500`, `10000`
     * 
     */
    public Optional<Output<String>> speed() {
        return Optional.ofNullable(this.speed);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="speedVariable")
    private @Nullable Output<String> speedVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> speedVariable() {
        return Optional.ofNullable(this.speedVariable);
    }

    /**
     * Set VLAN identifier associated with bridging domain
     *   - Range: `1`-`4094`
     * 
     */
    @Import(name="switchportAccessVlan")
    private @Nullable Output<Integer> switchportAccessVlan;

    /**
     * @return Set VLAN identifier associated with bridging domain
     *   - Range: `1`-`4094`
     * 
     */
    public Optional<Output<Integer>> switchportAccessVlan() {
        return Optional.ofNullable(this.switchportAccessVlan);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="switchportAccessVlanVariable")
    private @Nullable Output<String> switchportAccessVlanVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> switchportAccessVlanVariable() {
        return Optional.ofNullable(this.switchportAccessVlanVariable);
    }

    /**
     * Configure VLAN IDs used with the trunk
     * 
     */
    @Import(name="switchportTrunkAllowedVlans")
    private @Nullable Output<String> switchportTrunkAllowedVlans;

    /**
     * @return Configure VLAN IDs used with the trunk
     * 
     */
    public Optional<Output<String>> switchportTrunkAllowedVlans() {
        return Optional.ofNullable(this.switchportTrunkAllowedVlans);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="switchportTrunkAllowedVlansVariable")
    private @Nullable Output<String> switchportTrunkAllowedVlansVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> switchportTrunkAllowedVlansVariable() {
        return Optional.ofNullable(this.switchportTrunkAllowedVlansVariable);
    }

    /**
     * Configure VLAN ID used for native VLAN
     *   - Range: `1`-`4094`
     * 
     */
    @Import(name="switchportTrunkNativeVlan")
    private @Nullable Output<Integer> switchportTrunkNativeVlan;

    /**
     * @return Configure VLAN ID used for native VLAN
     *   - Range: `1`-`4094`
     * 
     */
    public Optional<Output<Integer>> switchportTrunkNativeVlan() {
        return Optional.ofNullable(this.switchportTrunkNativeVlan);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="switchportTrunkNativeVlanVariable")
    private @Nullable Output<String> switchportTrunkNativeVlanVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> switchportTrunkNativeVlanVariable() {
        return Optional.ofNullable(this.switchportTrunkNativeVlanVariable);
    }

    /**
     * Configure Voice Vlan
     *   - Range: `1`-`4094`
     * 
     */
    @Import(name="voiceVlan")
    private @Nullable Output<Integer> voiceVlan;

    /**
     * @return Configure Voice Vlan
     *   - Range: `1`-`4094`
     * 
     */
    public Optional<Output<Integer>> voiceVlan() {
        return Optional.ofNullable(this.voiceVlan);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="voiceVlanVariable")
    private @Nullable Output<String> voiceVlanVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> voiceVlanVariable() {
        return Optional.ofNullable(this.voiceVlanVariable);
    }

    private ServiceSwitchportFeatureInterfaceArgs() {}

    private ServiceSwitchportFeatureInterfaceArgs(ServiceSwitchportFeatureInterfaceArgs $) {
        this.controlDirection = $.controlDirection;
        this.controlDirectionVariable = $.controlDirectionVariable;
        this.criticalVlan = $.criticalVlan;
        this.criticalVlanVariable = $.criticalVlanVariable;
        this.duplex = $.duplex;
        this.duplexVariable = $.duplexVariable;
        this.enablePeriodicReauth = $.enablePeriodicReauth;
        this.enablePeriodicReauthVariable = $.enablePeriodicReauthVariable;
        this.enableVoice = $.enableVoice;
        this.enableVoiceVariable = $.enableVoiceVariable;
        this.guestVlan = $.guestVlan;
        this.guestVlanVariable = $.guestVlanVariable;
        this.hostMode = $.hostMode;
        this.hostModeVariable = $.hostModeVariable;
        this.inactivity = $.inactivity;
        this.inactivityVariable = $.inactivityVariable;
        this.interfaceName = $.interfaceName;
        this.interfaceNameVariable = $.interfaceNameVariable;
        this.macAuthenticationBypass = $.macAuthenticationBypass;
        this.macAuthenticationBypassVariable = $.macAuthenticationBypassVariable;
        this.mode = $.mode;
        this.paeEnable = $.paeEnable;
        this.paeEnableVariable = $.paeEnableVariable;
        this.portControl = $.portControl;
        this.portControlVariable = $.portControlVariable;
        this.reauthentication = $.reauthentication;
        this.reauthenticationVariable = $.reauthenticationVariable;
        this.restrictedVlan = $.restrictedVlan;
        this.restrictedVlanVariable = $.restrictedVlanVariable;
        this.shutdown = $.shutdown;
        this.shutdownVariable = $.shutdownVariable;
        this.speed = $.speed;
        this.speedVariable = $.speedVariable;
        this.switchportAccessVlan = $.switchportAccessVlan;
        this.switchportAccessVlanVariable = $.switchportAccessVlanVariable;
        this.switchportTrunkAllowedVlans = $.switchportTrunkAllowedVlans;
        this.switchportTrunkAllowedVlansVariable = $.switchportTrunkAllowedVlansVariable;
        this.switchportTrunkNativeVlan = $.switchportTrunkNativeVlan;
        this.switchportTrunkNativeVlanVariable = $.switchportTrunkNativeVlanVariable;
        this.voiceVlan = $.voiceVlan;
        this.voiceVlanVariable = $.voiceVlanVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceSwitchportFeatureInterfaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceSwitchportFeatureInterfaceArgs $;

        public Builder() {
            $ = new ServiceSwitchportFeatureInterfaceArgs();
        }

        public Builder(ServiceSwitchportFeatureInterfaceArgs defaults) {
            $ = new ServiceSwitchportFeatureInterfaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param controlDirection Set uni or bi directional authorization mode
         *   - Choices: `both`, `in`
         * 
         * @return builder
         * 
         */
        public Builder controlDirection(@Nullable Output<String> controlDirection) {
            $.controlDirection = controlDirection;
            return this;
        }

        /**
         * @param controlDirection Set uni or bi directional authorization mode
         *   - Choices: `both`, `in`
         * 
         * @return builder
         * 
         */
        public Builder controlDirection(String controlDirection) {
            return controlDirection(Output.of(controlDirection));
        }

        /**
         * @param controlDirectionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder controlDirectionVariable(@Nullable Output<String> controlDirectionVariable) {
            $.controlDirectionVariable = controlDirectionVariable;
            return this;
        }

        /**
         * @param controlDirectionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder controlDirectionVariable(String controlDirectionVariable) {
            return controlDirectionVariable(Output.of(controlDirectionVariable));
        }

        /**
         * @param criticalVlan Set Critical VLAN
         *   - Range: `1`-`4094`
         * 
         * @return builder
         * 
         */
        public Builder criticalVlan(@Nullable Output<Integer> criticalVlan) {
            $.criticalVlan = criticalVlan;
            return this;
        }

        /**
         * @param criticalVlan Set Critical VLAN
         *   - Range: `1`-`4094`
         * 
         * @return builder
         * 
         */
        public Builder criticalVlan(Integer criticalVlan) {
            return criticalVlan(Output.of(criticalVlan));
        }

        /**
         * @param criticalVlanVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder criticalVlanVariable(@Nullable Output<String> criticalVlanVariable) {
            $.criticalVlanVariable = criticalVlanVariable;
            return this;
        }

        /**
         * @param criticalVlanVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder criticalVlanVariable(String criticalVlanVariable) {
            return criticalVlanVariable(Output.of(criticalVlanVariable));
        }

        /**
         * @param duplex Duplex mode
         *   - Choices: `full`, `half`
         * 
         * @return builder
         * 
         */
        public Builder duplex(@Nullable Output<String> duplex) {
            $.duplex = duplex;
            return this;
        }

        /**
         * @param duplex Duplex mode
         *   - Choices: `full`, `half`
         * 
         * @return builder
         * 
         */
        public Builder duplex(String duplex) {
            return duplex(Output.of(duplex));
        }

        /**
         * @param duplexVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder duplexVariable(@Nullable Output<String> duplexVariable) {
            $.duplexVariable = duplexVariable;
            return this;
        }

        /**
         * @param duplexVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder duplexVariable(String duplexVariable) {
            return duplexVariable(Output.of(duplexVariable));
        }

        /**
         * @param enablePeriodicReauth Enable Periodic Reauthentication
         * 
         * @return builder
         * 
         */
        public Builder enablePeriodicReauth(@Nullable Output<Boolean> enablePeriodicReauth) {
            $.enablePeriodicReauth = enablePeriodicReauth;
            return this;
        }

        /**
         * @param enablePeriodicReauth Enable Periodic Reauthentication
         * 
         * @return builder
         * 
         */
        public Builder enablePeriodicReauth(Boolean enablePeriodicReauth) {
            return enablePeriodicReauth(Output.of(enablePeriodicReauth));
        }

        /**
         * @param enablePeriodicReauthVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enablePeriodicReauthVariable(@Nullable Output<String> enablePeriodicReauthVariable) {
            $.enablePeriodicReauthVariable = enablePeriodicReauthVariable;
            return this;
        }

        /**
         * @param enablePeriodicReauthVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enablePeriodicReauthVariable(String enablePeriodicReauthVariable) {
            return enablePeriodicReauthVariable(Output.of(enablePeriodicReauthVariable));
        }

        /**
         * @param enableVoice Enable Critical Voice VLAN
         * 
         * @return builder
         * 
         */
        public Builder enableVoice(@Nullable Output<Boolean> enableVoice) {
            $.enableVoice = enableVoice;
            return this;
        }

        /**
         * @param enableVoice Enable Critical Voice VLAN
         * 
         * @return builder
         * 
         */
        public Builder enableVoice(Boolean enableVoice) {
            return enableVoice(Output.of(enableVoice));
        }

        /**
         * @param enableVoiceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enableVoiceVariable(@Nullable Output<String> enableVoiceVariable) {
            $.enableVoiceVariable = enableVoiceVariable;
            return this;
        }

        /**
         * @param enableVoiceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enableVoiceVariable(String enableVoiceVariable) {
            return enableVoiceVariable(Output.of(enableVoiceVariable));
        }

        /**
         * @param guestVlan Set vlan to drop non-802.1x enabled clients into if client is not in MAB list
         *   - Range: `1`-`4094`
         * 
         * @return builder
         * 
         */
        public Builder guestVlan(@Nullable Output<Integer> guestVlan) {
            $.guestVlan = guestVlan;
            return this;
        }

        /**
         * @param guestVlan Set vlan to drop non-802.1x enabled clients into if client is not in MAB list
         *   - Range: `1`-`4094`
         * 
         * @return builder
         * 
         */
        public Builder guestVlan(Integer guestVlan) {
            return guestVlan(Output.of(guestVlan));
        }

        /**
         * @param guestVlanVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder guestVlanVariable(@Nullable Output<String> guestVlanVariable) {
            $.guestVlanVariable = guestVlanVariable;
            return this;
        }

        /**
         * @param guestVlanVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder guestVlanVariable(String guestVlanVariable) {
            return guestVlanVariable(Output.of(guestVlanVariable));
        }

        /**
         * @param hostMode Set host mode
         *   - Choices: `single-host`, `multi-auth`, `multi-host`, `multi-domain`
         * 
         * @return builder
         * 
         */
        public Builder hostMode(@Nullable Output<String> hostMode) {
            $.hostMode = hostMode;
            return this;
        }

        /**
         * @param hostMode Set host mode
         *   - Choices: `single-host`, `multi-auth`, `multi-host`, `multi-domain`
         * 
         * @return builder
         * 
         */
        public Builder hostMode(String hostMode) {
            return hostMode(Output.of(hostMode));
        }

        /**
         * @param hostModeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder hostModeVariable(@Nullable Output<String> hostModeVariable) {
            $.hostModeVariable = hostModeVariable;
            return this;
        }

        /**
         * @param hostModeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder hostModeVariable(String hostModeVariable) {
            return hostModeVariable(Output.of(hostModeVariable));
        }

        /**
         * @param inactivity Periodic Reauthentication Inactivity Timeout (in seconds)
         *   - Range: `1`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder inactivity(@Nullable Output<Integer> inactivity) {
            $.inactivity = inactivity;
            return this;
        }

        /**
         * @param inactivity Periodic Reauthentication Inactivity Timeout (in seconds)
         *   - Range: `1`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder inactivity(Integer inactivity) {
            return inactivity(Output.of(inactivity));
        }

        /**
         * @param inactivityVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder inactivityVariable(@Nullable Output<String> inactivityVariable) {
            $.inactivityVariable = inactivityVariable;
            return this;
        }

        /**
         * @param inactivityVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder inactivityVariable(String inactivityVariable) {
            return inactivityVariable(Output.of(inactivityVariable));
        }

        /**
         * @param interfaceName Set Interface name
         * 
         * @return builder
         * 
         */
        public Builder interfaceName(@Nullable Output<String> interfaceName) {
            $.interfaceName = interfaceName;
            return this;
        }

        /**
         * @param interfaceName Set Interface name
         * 
         * @return builder
         * 
         */
        public Builder interfaceName(String interfaceName) {
            return interfaceName(Output.of(interfaceName));
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(@Nullable Output<String> interfaceNameVariable) {
            $.interfaceNameVariable = interfaceNameVariable;
            return this;
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(String interfaceNameVariable) {
            return interfaceNameVariable(Output.of(interfaceNameVariable));
        }

        /**
         * @param macAuthenticationBypass MAC Authentication Bypass
         * 
         * @return builder
         * 
         */
        public Builder macAuthenticationBypass(@Nullable Output<Boolean> macAuthenticationBypass) {
            $.macAuthenticationBypass = macAuthenticationBypass;
            return this;
        }

        /**
         * @param macAuthenticationBypass MAC Authentication Bypass
         * 
         * @return builder
         * 
         */
        public Builder macAuthenticationBypass(Boolean macAuthenticationBypass) {
            return macAuthenticationBypass(Output.of(macAuthenticationBypass));
        }

        /**
         * @param macAuthenticationBypassVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder macAuthenticationBypassVariable(@Nullable Output<String> macAuthenticationBypassVariable) {
            $.macAuthenticationBypassVariable = macAuthenticationBypassVariable;
            return this;
        }

        /**
         * @param macAuthenticationBypassVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder macAuthenticationBypassVariable(String macAuthenticationBypassVariable) {
            return macAuthenticationBypassVariable(Output.of(macAuthenticationBypassVariable));
        }

        /**
         * @param mode Set type of switch port: access/trunk
         *   - Choices: `access`, `trunk`
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode Set type of switch port: access/trunk
         *   - Choices: `access`, `trunk`
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param paeEnable Set 802.1x Interface Pae Type
         * 
         * @return builder
         * 
         */
        public Builder paeEnable(@Nullable Output<Boolean> paeEnable) {
            $.paeEnable = paeEnable;
            return this;
        }

        /**
         * @param paeEnable Set 802.1x Interface Pae Type
         * 
         * @return builder
         * 
         */
        public Builder paeEnable(Boolean paeEnable) {
            return paeEnable(Output.of(paeEnable));
        }

        /**
         * @param paeEnableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder paeEnableVariable(@Nullable Output<String> paeEnableVariable) {
            $.paeEnableVariable = paeEnableVariable;
            return this;
        }

        /**
         * @param paeEnableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder paeEnableVariable(String paeEnableVariable) {
            return paeEnableVariable(Output.of(paeEnableVariable));
        }

        /**
         * @param portControl Set Port-Control Mode
         *   - Choices: `auto`, `force-unauthorized`, `force-authorized`
         * 
         * @return builder
         * 
         */
        public Builder portControl(@Nullable Output<String> portControl) {
            $.portControl = portControl;
            return this;
        }

        /**
         * @param portControl Set Port-Control Mode
         *   - Choices: `auto`, `force-unauthorized`, `force-authorized`
         * 
         * @return builder
         * 
         */
        public Builder portControl(String portControl) {
            return portControl(Output.of(portControl));
        }

        /**
         * @param portControlVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder portControlVariable(@Nullable Output<String> portControlVariable) {
            $.portControlVariable = portControlVariable;
            return this;
        }

        /**
         * @param portControlVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder portControlVariable(String portControlVariable) {
            return portControlVariable(Output.of(portControlVariable));
        }

        /**
         * @param reauthentication Periodic Reauthentication Interval (in seconds)
         *   - Range: `1`-`1073741823`
         *   - Default value: `3600`
         * 
         * @return builder
         * 
         */
        public Builder reauthentication(@Nullable Output<Integer> reauthentication) {
            $.reauthentication = reauthentication;
            return this;
        }

        /**
         * @param reauthentication Periodic Reauthentication Interval (in seconds)
         *   - Range: `1`-`1073741823`
         *   - Default value: `3600`
         * 
         * @return builder
         * 
         */
        public Builder reauthentication(Integer reauthentication) {
            return reauthentication(Output.of(reauthentication));
        }

        /**
         * @param reauthenticationVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder reauthenticationVariable(@Nullable Output<String> reauthenticationVariable) {
            $.reauthenticationVariable = reauthenticationVariable;
            return this;
        }

        /**
         * @param reauthenticationVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder reauthenticationVariable(String reauthenticationVariable) {
            return reauthenticationVariable(Output.of(reauthenticationVariable));
        }

        /**
         * @param restrictedVlan Set Restricted VLAN ID
         *   - Range: `1`-`4094`
         * 
         * @return builder
         * 
         */
        public Builder restrictedVlan(@Nullable Output<Integer> restrictedVlan) {
            $.restrictedVlan = restrictedVlan;
            return this;
        }

        /**
         * @param restrictedVlan Set Restricted VLAN ID
         *   - Range: `1`-`4094`
         * 
         * @return builder
         * 
         */
        public Builder restrictedVlan(Integer restrictedVlan) {
            return restrictedVlan(Output.of(restrictedVlan));
        }

        /**
         * @param restrictedVlanVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder restrictedVlanVariable(@Nullable Output<String> restrictedVlanVariable) {
            $.restrictedVlanVariable = restrictedVlanVariable;
            return this;
        }

        /**
         * @param restrictedVlanVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder restrictedVlanVariable(String restrictedVlanVariable) {
            return restrictedVlanVariable(Output.of(restrictedVlanVariable));
        }

        /**
         * @param shutdown Administrative state
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder shutdown(@Nullable Output<Boolean> shutdown) {
            $.shutdown = shutdown;
            return this;
        }

        /**
         * @param shutdown Administrative state
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder shutdown(Boolean shutdown) {
            return shutdown(Output.of(shutdown));
        }

        /**
         * @param shutdownVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdownVariable(@Nullable Output<String> shutdownVariable) {
            $.shutdownVariable = shutdownVariable;
            return this;
        }

        /**
         * @param shutdownVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdownVariable(String shutdownVariable) {
            return shutdownVariable(Output.of(shutdownVariable));
        }

        /**
         * @param speed Set interface speed
         *   - Choices: `10`, `100`, `1000`, `2500`, `10000`
         * 
         * @return builder
         * 
         */
        public Builder speed(@Nullable Output<String> speed) {
            $.speed = speed;
            return this;
        }

        /**
         * @param speed Set interface speed
         *   - Choices: `10`, `100`, `1000`, `2500`, `10000`
         * 
         * @return builder
         * 
         */
        public Builder speed(String speed) {
            return speed(Output.of(speed));
        }

        /**
         * @param speedVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder speedVariable(@Nullable Output<String> speedVariable) {
            $.speedVariable = speedVariable;
            return this;
        }

        /**
         * @param speedVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder speedVariable(String speedVariable) {
            return speedVariable(Output.of(speedVariable));
        }

        /**
         * @param switchportAccessVlan Set VLAN identifier associated with bridging domain
         *   - Range: `1`-`4094`
         * 
         * @return builder
         * 
         */
        public Builder switchportAccessVlan(@Nullable Output<Integer> switchportAccessVlan) {
            $.switchportAccessVlan = switchportAccessVlan;
            return this;
        }

        /**
         * @param switchportAccessVlan Set VLAN identifier associated with bridging domain
         *   - Range: `1`-`4094`
         * 
         * @return builder
         * 
         */
        public Builder switchportAccessVlan(Integer switchportAccessVlan) {
            return switchportAccessVlan(Output.of(switchportAccessVlan));
        }

        /**
         * @param switchportAccessVlanVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder switchportAccessVlanVariable(@Nullable Output<String> switchportAccessVlanVariable) {
            $.switchportAccessVlanVariable = switchportAccessVlanVariable;
            return this;
        }

        /**
         * @param switchportAccessVlanVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder switchportAccessVlanVariable(String switchportAccessVlanVariable) {
            return switchportAccessVlanVariable(Output.of(switchportAccessVlanVariable));
        }

        /**
         * @param switchportTrunkAllowedVlans Configure VLAN IDs used with the trunk
         * 
         * @return builder
         * 
         */
        public Builder switchportTrunkAllowedVlans(@Nullable Output<String> switchportTrunkAllowedVlans) {
            $.switchportTrunkAllowedVlans = switchportTrunkAllowedVlans;
            return this;
        }

        /**
         * @param switchportTrunkAllowedVlans Configure VLAN IDs used with the trunk
         * 
         * @return builder
         * 
         */
        public Builder switchportTrunkAllowedVlans(String switchportTrunkAllowedVlans) {
            return switchportTrunkAllowedVlans(Output.of(switchportTrunkAllowedVlans));
        }

        /**
         * @param switchportTrunkAllowedVlansVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder switchportTrunkAllowedVlansVariable(@Nullable Output<String> switchportTrunkAllowedVlansVariable) {
            $.switchportTrunkAllowedVlansVariable = switchportTrunkAllowedVlansVariable;
            return this;
        }

        /**
         * @param switchportTrunkAllowedVlansVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder switchportTrunkAllowedVlansVariable(String switchportTrunkAllowedVlansVariable) {
            return switchportTrunkAllowedVlansVariable(Output.of(switchportTrunkAllowedVlansVariable));
        }

        /**
         * @param switchportTrunkNativeVlan Configure VLAN ID used for native VLAN
         *   - Range: `1`-`4094`
         * 
         * @return builder
         * 
         */
        public Builder switchportTrunkNativeVlan(@Nullable Output<Integer> switchportTrunkNativeVlan) {
            $.switchportTrunkNativeVlan = switchportTrunkNativeVlan;
            return this;
        }

        /**
         * @param switchportTrunkNativeVlan Configure VLAN ID used for native VLAN
         *   - Range: `1`-`4094`
         * 
         * @return builder
         * 
         */
        public Builder switchportTrunkNativeVlan(Integer switchportTrunkNativeVlan) {
            return switchportTrunkNativeVlan(Output.of(switchportTrunkNativeVlan));
        }

        /**
         * @param switchportTrunkNativeVlanVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder switchportTrunkNativeVlanVariable(@Nullable Output<String> switchportTrunkNativeVlanVariable) {
            $.switchportTrunkNativeVlanVariable = switchportTrunkNativeVlanVariable;
            return this;
        }

        /**
         * @param switchportTrunkNativeVlanVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder switchportTrunkNativeVlanVariable(String switchportTrunkNativeVlanVariable) {
            return switchportTrunkNativeVlanVariable(Output.of(switchportTrunkNativeVlanVariable));
        }

        /**
         * @param voiceVlan Configure Voice Vlan
         *   - Range: `1`-`4094`
         * 
         * @return builder
         * 
         */
        public Builder voiceVlan(@Nullable Output<Integer> voiceVlan) {
            $.voiceVlan = voiceVlan;
            return this;
        }

        /**
         * @param voiceVlan Configure Voice Vlan
         *   - Range: `1`-`4094`
         * 
         * @return builder
         * 
         */
        public Builder voiceVlan(Integer voiceVlan) {
            return voiceVlan(Output.of(voiceVlan));
        }

        /**
         * @param voiceVlanVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder voiceVlanVariable(@Nullable Output<String> voiceVlanVariable) {
            $.voiceVlanVariable = voiceVlanVariable;
            return this;
        }

        /**
         * @param voiceVlanVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder voiceVlanVariable(String voiceVlanVariable) {
            return voiceVlanVariable(Output.of(voiceVlanVariable));
        }

        public ServiceSwitchportFeatureInterfaceArgs build() {
            return $;
        }
    }

}
