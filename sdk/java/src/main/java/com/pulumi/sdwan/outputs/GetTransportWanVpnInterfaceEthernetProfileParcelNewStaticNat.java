// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTransportWanVpnInterfaceEthernetProfileParcelNewStaticNat {
    /**
     * @return Direction of static NAT translation
     * 
     */
    private String direction;
    /**
     * @return Source IP address to be translated
     * 
     */
    private String sourceIp;
    /**
     * @return Variable name
     * 
     */
    private String sourceIpVariable;
    /**
     * @return Source VPN ID
     * 
     */
    private Integer sourceVpn;
    /**
     * @return Variable name
     * 
     */
    private String sourceVpnVariable;
    /**
     * @return Statically translated source IP address
     * 
     */
    private String translatedIp;
    /**
     * @return Variable name
     * 
     */
    private String translatedIpVariable;

    private GetTransportWanVpnInterfaceEthernetProfileParcelNewStaticNat() {}
    /**
     * @return Direction of static NAT translation
     * 
     */
    public String direction() {
        return this.direction;
    }
    /**
     * @return Source IP address to be translated
     * 
     */
    public String sourceIp() {
        return this.sourceIp;
    }
    /**
     * @return Variable name
     * 
     */
    public String sourceIpVariable() {
        return this.sourceIpVariable;
    }
    /**
     * @return Source VPN ID
     * 
     */
    public Integer sourceVpn() {
        return this.sourceVpn;
    }
    /**
     * @return Variable name
     * 
     */
    public String sourceVpnVariable() {
        return this.sourceVpnVariable;
    }
    /**
     * @return Statically translated source IP address
     * 
     */
    public String translatedIp() {
        return this.translatedIp;
    }
    /**
     * @return Variable name
     * 
     */
    public String translatedIpVariable() {
        return this.translatedIpVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTransportWanVpnInterfaceEthernetProfileParcelNewStaticNat defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String direction;
        private String sourceIp;
        private String sourceIpVariable;
        private Integer sourceVpn;
        private String sourceVpnVariable;
        private String translatedIp;
        private String translatedIpVariable;
        public Builder() {}
        public Builder(GetTransportWanVpnInterfaceEthernetProfileParcelNewStaticNat defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.direction = defaults.direction;
    	      this.sourceIp = defaults.sourceIp;
    	      this.sourceIpVariable = defaults.sourceIpVariable;
    	      this.sourceVpn = defaults.sourceVpn;
    	      this.sourceVpnVariable = defaults.sourceVpnVariable;
    	      this.translatedIp = defaults.translatedIp;
    	      this.translatedIpVariable = defaults.translatedIpVariable;
        }

        @CustomType.Setter
        public Builder direction(String direction) {
            if (direction == null) {
              throw new MissingRequiredPropertyException("GetTransportWanVpnInterfaceEthernetProfileParcelNewStaticNat", "direction");
            }
            this.direction = direction;
            return this;
        }
        @CustomType.Setter
        public Builder sourceIp(String sourceIp) {
            if (sourceIp == null) {
              throw new MissingRequiredPropertyException("GetTransportWanVpnInterfaceEthernetProfileParcelNewStaticNat", "sourceIp");
            }
            this.sourceIp = sourceIp;
            return this;
        }
        @CustomType.Setter
        public Builder sourceIpVariable(String sourceIpVariable) {
            if (sourceIpVariable == null) {
              throw new MissingRequiredPropertyException("GetTransportWanVpnInterfaceEthernetProfileParcelNewStaticNat", "sourceIpVariable");
            }
            this.sourceIpVariable = sourceIpVariable;
            return this;
        }
        @CustomType.Setter
        public Builder sourceVpn(Integer sourceVpn) {
            if (sourceVpn == null) {
              throw new MissingRequiredPropertyException("GetTransportWanVpnInterfaceEthernetProfileParcelNewStaticNat", "sourceVpn");
            }
            this.sourceVpn = sourceVpn;
            return this;
        }
        @CustomType.Setter
        public Builder sourceVpnVariable(String sourceVpnVariable) {
            if (sourceVpnVariable == null) {
              throw new MissingRequiredPropertyException("GetTransportWanVpnInterfaceEthernetProfileParcelNewStaticNat", "sourceVpnVariable");
            }
            this.sourceVpnVariable = sourceVpnVariable;
            return this;
        }
        @CustomType.Setter
        public Builder translatedIp(String translatedIp) {
            if (translatedIp == null) {
              throw new MissingRequiredPropertyException("GetTransportWanVpnInterfaceEthernetProfileParcelNewStaticNat", "translatedIp");
            }
            this.translatedIp = translatedIp;
            return this;
        }
        @CustomType.Setter
        public Builder translatedIpVariable(String translatedIpVariable) {
            if (translatedIpVariable == null) {
              throw new MissingRequiredPropertyException("GetTransportWanVpnInterfaceEthernetProfileParcelNewStaticNat", "translatedIpVariable");
            }
            this.translatedIpVariable = translatedIpVariable;
            return this;
        }
        public GetTransportWanVpnInterfaceEthernetProfileParcelNewStaticNat build() {
            final var _resultValue = new GetTransportWanVpnInterfaceEthernetProfileParcelNewStaticNat();
            _resultValue.direction = direction;
            _resultValue.sourceIp = sourceIp;
            _resultValue.sourceIpVariable = sourceIpVariable;
            _resultValue.sourceVpn = sourceVpn;
            _resultValue.sourceVpnVariable = sourceVpnVariable;
            _resultValue.translatedIp = translatedIp;
            _resultValue.translatedIpVariable = translatedIpVariable;
            return _resultValue;
        }
    }
}
