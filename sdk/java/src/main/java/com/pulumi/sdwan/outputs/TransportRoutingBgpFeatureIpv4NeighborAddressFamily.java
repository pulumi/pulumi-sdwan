// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TransportRoutingBgpFeatureIpv4NeighborAddressFamily {
    /**
     * @return Set maximum number of prefixes accepted from BGP peer, Attribute conditional on `policyType` being equal to `disable-peer`
     *   - Range: `1`-`4294967295`
     * 
     */
    private @Nullable Integer disablePeerMaxNumberOfPrefixes;
    /**
     * @return Variable name, Attribute conditional on `policyType` being equal to `disable-peer`
     * 
     */
    private @Nullable String disablePeerMaxNumberOfPrefixesVariable;
    /**
     * @return Set threshold(1 to 100) at which to generate a warning message, Attribute conditional on `policyType` being equal to `disable-peer`
     *   - Range: `1`-`100`
     *   - Default value: `75`
     * 
     */
    private @Nullable Integer disablePeerThreshold;
    /**
     * @return Variable name, Attribute conditional on `policyType` being equal to `disable-peer`
     * 
     */
    private @Nullable String disablePeerThresholdVariable;
    /**
     * @return Set IPv4 unicast address family
     *   - Choices: `ipv4-unicast`, `vpnv4-unicast`, `vpnv6-unicast`
     * 
     */
    private @Nullable String familyType;
    private @Nullable String inRoutePolicyId;
    private @Nullable String outRoutePolicyId;
    /**
     * @return Neighbor received maximum prefix policy is disabled.
     *   - Choices: `restart`, `off`, `warning-only`, `disable-peer`
     * 
     */
    private @Nullable String policyType;
    /**
     * @return Set the restart interval(minutes) when to restart BGP connection if threshold is exceeded, Attribute conditional on `policyType` being equal to `restart`
     *   - Range: `1`-`65535`
     * 
     */
    private @Nullable Integer restartInterval;
    /**
     * @return Variable name, Attribute conditional on `policyType` being equal to `restart`
     * 
     */
    private @Nullable String restartIntervalVariable;
    /**
     * @return Set maximum number of prefixes accepted from BGP peer, Attribute conditional on `policyType` being equal to `restart`
     *   - Range: `1`-`4294967295`
     * 
     */
    private @Nullable Integer restartMaxNumberOfPrefixes;
    /**
     * @return Variable name, Attribute conditional on `policyType` being equal to `restart`
     * 
     */
    private @Nullable String restartMaxNumberOfPrefixesVariable;
    /**
     * @return Set threshold(1 to 100) at which to generate a warning message, Attribute conditional on `policyType` being equal to `restart`
     *   - Range: `1`-`100`
     *   - Default value: `75`
     * 
     */
    private @Nullable Integer restartThreshold;
    /**
     * @return Variable name, Attribute conditional on `policyType` being equal to `restart`
     * 
     */
    private @Nullable String restartThresholdVariable;
    /**
     * @return Set maximum number of prefixes accepted from BGP peer, Attribute conditional on `policyType` being equal to `warning-only`
     *   - Range: `1`-`4294967295`
     * 
     */
    private @Nullable Integer warningMessageMaxNumberOfPrefixes;
    /**
     * @return Variable name, Attribute conditional on `policyType` being equal to `warning-only`
     * 
     */
    private @Nullable String warningMessageMaxNumberOfPrefixesVariable;
    /**
     * @return Set threshold(1 to 100) at which to generate a warning message, Attribute conditional on `policyType` being equal to `warning-only`
     *   - Range: `1`-`100`
     *   - Default value: `75`
     * 
     */
    private @Nullable Integer warningMessageThreshold;
    /**
     * @return Variable name, Attribute conditional on `policyType` being equal to `warning-only`
     * 
     */
    private @Nullable String warningMessageThresholdVariable;

    private TransportRoutingBgpFeatureIpv4NeighborAddressFamily() {}
    /**
     * @return Set maximum number of prefixes accepted from BGP peer, Attribute conditional on `policyType` being equal to `disable-peer`
     *   - Range: `1`-`4294967295`
     * 
     */
    public Optional<Integer> disablePeerMaxNumberOfPrefixes() {
        return Optional.ofNullable(this.disablePeerMaxNumberOfPrefixes);
    }
    /**
     * @return Variable name, Attribute conditional on `policyType` being equal to `disable-peer`
     * 
     */
    public Optional<String> disablePeerMaxNumberOfPrefixesVariable() {
        return Optional.ofNullable(this.disablePeerMaxNumberOfPrefixesVariable);
    }
    /**
     * @return Set threshold(1 to 100) at which to generate a warning message, Attribute conditional on `policyType` being equal to `disable-peer`
     *   - Range: `1`-`100`
     *   - Default value: `75`
     * 
     */
    public Optional<Integer> disablePeerThreshold() {
        return Optional.ofNullable(this.disablePeerThreshold);
    }
    /**
     * @return Variable name, Attribute conditional on `policyType` being equal to `disable-peer`
     * 
     */
    public Optional<String> disablePeerThresholdVariable() {
        return Optional.ofNullable(this.disablePeerThresholdVariable);
    }
    /**
     * @return Set IPv4 unicast address family
     *   - Choices: `ipv4-unicast`, `vpnv4-unicast`, `vpnv6-unicast`
     * 
     */
    public Optional<String> familyType() {
        return Optional.ofNullable(this.familyType);
    }
    public Optional<String> inRoutePolicyId() {
        return Optional.ofNullable(this.inRoutePolicyId);
    }
    public Optional<String> outRoutePolicyId() {
        return Optional.ofNullable(this.outRoutePolicyId);
    }
    /**
     * @return Neighbor received maximum prefix policy is disabled.
     *   - Choices: `restart`, `off`, `warning-only`, `disable-peer`
     * 
     */
    public Optional<String> policyType() {
        return Optional.ofNullable(this.policyType);
    }
    /**
     * @return Set the restart interval(minutes) when to restart BGP connection if threshold is exceeded, Attribute conditional on `policyType` being equal to `restart`
     *   - Range: `1`-`65535`
     * 
     */
    public Optional<Integer> restartInterval() {
        return Optional.ofNullable(this.restartInterval);
    }
    /**
     * @return Variable name, Attribute conditional on `policyType` being equal to `restart`
     * 
     */
    public Optional<String> restartIntervalVariable() {
        return Optional.ofNullable(this.restartIntervalVariable);
    }
    /**
     * @return Set maximum number of prefixes accepted from BGP peer, Attribute conditional on `policyType` being equal to `restart`
     *   - Range: `1`-`4294967295`
     * 
     */
    public Optional<Integer> restartMaxNumberOfPrefixes() {
        return Optional.ofNullable(this.restartMaxNumberOfPrefixes);
    }
    /**
     * @return Variable name, Attribute conditional on `policyType` being equal to `restart`
     * 
     */
    public Optional<String> restartMaxNumberOfPrefixesVariable() {
        return Optional.ofNullable(this.restartMaxNumberOfPrefixesVariable);
    }
    /**
     * @return Set threshold(1 to 100) at which to generate a warning message, Attribute conditional on `policyType` being equal to `restart`
     *   - Range: `1`-`100`
     *   - Default value: `75`
     * 
     */
    public Optional<Integer> restartThreshold() {
        return Optional.ofNullable(this.restartThreshold);
    }
    /**
     * @return Variable name, Attribute conditional on `policyType` being equal to `restart`
     * 
     */
    public Optional<String> restartThresholdVariable() {
        return Optional.ofNullable(this.restartThresholdVariable);
    }
    /**
     * @return Set maximum number of prefixes accepted from BGP peer, Attribute conditional on `policyType` being equal to `warning-only`
     *   - Range: `1`-`4294967295`
     * 
     */
    public Optional<Integer> warningMessageMaxNumberOfPrefixes() {
        return Optional.ofNullable(this.warningMessageMaxNumberOfPrefixes);
    }
    /**
     * @return Variable name, Attribute conditional on `policyType` being equal to `warning-only`
     * 
     */
    public Optional<String> warningMessageMaxNumberOfPrefixesVariable() {
        return Optional.ofNullable(this.warningMessageMaxNumberOfPrefixesVariable);
    }
    /**
     * @return Set threshold(1 to 100) at which to generate a warning message, Attribute conditional on `policyType` being equal to `warning-only`
     *   - Range: `1`-`100`
     *   - Default value: `75`
     * 
     */
    public Optional<Integer> warningMessageThreshold() {
        return Optional.ofNullable(this.warningMessageThreshold);
    }
    /**
     * @return Variable name, Attribute conditional on `policyType` being equal to `warning-only`
     * 
     */
    public Optional<String> warningMessageThresholdVariable() {
        return Optional.ofNullable(this.warningMessageThresholdVariable);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransportRoutingBgpFeatureIpv4NeighborAddressFamily defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer disablePeerMaxNumberOfPrefixes;
        private @Nullable String disablePeerMaxNumberOfPrefixesVariable;
        private @Nullable Integer disablePeerThreshold;
        private @Nullable String disablePeerThresholdVariable;
        private @Nullable String familyType;
        private @Nullable String inRoutePolicyId;
        private @Nullable String outRoutePolicyId;
        private @Nullable String policyType;
        private @Nullable Integer restartInterval;
        private @Nullable String restartIntervalVariable;
        private @Nullable Integer restartMaxNumberOfPrefixes;
        private @Nullable String restartMaxNumberOfPrefixesVariable;
        private @Nullable Integer restartThreshold;
        private @Nullable String restartThresholdVariable;
        private @Nullable Integer warningMessageMaxNumberOfPrefixes;
        private @Nullable String warningMessageMaxNumberOfPrefixesVariable;
        private @Nullable Integer warningMessageThreshold;
        private @Nullable String warningMessageThresholdVariable;
        public Builder() {}
        public Builder(TransportRoutingBgpFeatureIpv4NeighborAddressFamily defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disablePeerMaxNumberOfPrefixes = defaults.disablePeerMaxNumberOfPrefixes;
    	      this.disablePeerMaxNumberOfPrefixesVariable = defaults.disablePeerMaxNumberOfPrefixesVariable;
    	      this.disablePeerThreshold = defaults.disablePeerThreshold;
    	      this.disablePeerThresholdVariable = defaults.disablePeerThresholdVariable;
    	      this.familyType = defaults.familyType;
    	      this.inRoutePolicyId = defaults.inRoutePolicyId;
    	      this.outRoutePolicyId = defaults.outRoutePolicyId;
    	      this.policyType = defaults.policyType;
    	      this.restartInterval = defaults.restartInterval;
    	      this.restartIntervalVariable = defaults.restartIntervalVariable;
    	      this.restartMaxNumberOfPrefixes = defaults.restartMaxNumberOfPrefixes;
    	      this.restartMaxNumberOfPrefixesVariable = defaults.restartMaxNumberOfPrefixesVariable;
    	      this.restartThreshold = defaults.restartThreshold;
    	      this.restartThresholdVariable = defaults.restartThresholdVariable;
    	      this.warningMessageMaxNumberOfPrefixes = defaults.warningMessageMaxNumberOfPrefixes;
    	      this.warningMessageMaxNumberOfPrefixesVariable = defaults.warningMessageMaxNumberOfPrefixesVariable;
    	      this.warningMessageThreshold = defaults.warningMessageThreshold;
    	      this.warningMessageThresholdVariable = defaults.warningMessageThresholdVariable;
        }

        @CustomType.Setter
        public Builder disablePeerMaxNumberOfPrefixes(@Nullable Integer disablePeerMaxNumberOfPrefixes) {

            this.disablePeerMaxNumberOfPrefixes = disablePeerMaxNumberOfPrefixes;
            return this;
        }
        @CustomType.Setter
        public Builder disablePeerMaxNumberOfPrefixesVariable(@Nullable String disablePeerMaxNumberOfPrefixesVariable) {

            this.disablePeerMaxNumberOfPrefixesVariable = disablePeerMaxNumberOfPrefixesVariable;
            return this;
        }
        @CustomType.Setter
        public Builder disablePeerThreshold(@Nullable Integer disablePeerThreshold) {

            this.disablePeerThreshold = disablePeerThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder disablePeerThresholdVariable(@Nullable String disablePeerThresholdVariable) {

            this.disablePeerThresholdVariable = disablePeerThresholdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder familyType(@Nullable String familyType) {

            this.familyType = familyType;
            return this;
        }
        @CustomType.Setter
        public Builder inRoutePolicyId(@Nullable String inRoutePolicyId) {

            this.inRoutePolicyId = inRoutePolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder outRoutePolicyId(@Nullable String outRoutePolicyId) {

            this.outRoutePolicyId = outRoutePolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder policyType(@Nullable String policyType) {

            this.policyType = policyType;
            return this;
        }
        @CustomType.Setter
        public Builder restartInterval(@Nullable Integer restartInterval) {

            this.restartInterval = restartInterval;
            return this;
        }
        @CustomType.Setter
        public Builder restartIntervalVariable(@Nullable String restartIntervalVariable) {

            this.restartIntervalVariable = restartIntervalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder restartMaxNumberOfPrefixes(@Nullable Integer restartMaxNumberOfPrefixes) {

            this.restartMaxNumberOfPrefixes = restartMaxNumberOfPrefixes;
            return this;
        }
        @CustomType.Setter
        public Builder restartMaxNumberOfPrefixesVariable(@Nullable String restartMaxNumberOfPrefixesVariable) {

            this.restartMaxNumberOfPrefixesVariable = restartMaxNumberOfPrefixesVariable;
            return this;
        }
        @CustomType.Setter
        public Builder restartThreshold(@Nullable Integer restartThreshold) {

            this.restartThreshold = restartThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder restartThresholdVariable(@Nullable String restartThresholdVariable) {

            this.restartThresholdVariable = restartThresholdVariable;
            return this;
        }
        @CustomType.Setter
        public Builder warningMessageMaxNumberOfPrefixes(@Nullable Integer warningMessageMaxNumberOfPrefixes) {

            this.warningMessageMaxNumberOfPrefixes = warningMessageMaxNumberOfPrefixes;
            return this;
        }
        @CustomType.Setter
        public Builder warningMessageMaxNumberOfPrefixesVariable(@Nullable String warningMessageMaxNumberOfPrefixesVariable) {

            this.warningMessageMaxNumberOfPrefixesVariable = warningMessageMaxNumberOfPrefixesVariable;
            return this;
        }
        @CustomType.Setter
        public Builder warningMessageThreshold(@Nullable Integer warningMessageThreshold) {

            this.warningMessageThreshold = warningMessageThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder warningMessageThresholdVariable(@Nullable String warningMessageThresholdVariable) {

            this.warningMessageThresholdVariable = warningMessageThresholdVariable;
            return this;
        }
        public TransportRoutingBgpFeatureIpv4NeighborAddressFamily build() {
            final var _resultValue = new TransportRoutingBgpFeatureIpv4NeighborAddressFamily();
            _resultValue.disablePeerMaxNumberOfPrefixes = disablePeerMaxNumberOfPrefixes;
            _resultValue.disablePeerMaxNumberOfPrefixesVariable = disablePeerMaxNumberOfPrefixesVariable;
            _resultValue.disablePeerThreshold = disablePeerThreshold;
            _resultValue.disablePeerThresholdVariable = disablePeerThresholdVariable;
            _resultValue.familyType = familyType;
            _resultValue.inRoutePolicyId = inRoutePolicyId;
            _resultValue.outRoutePolicyId = outRoutePolicyId;
            _resultValue.policyType = policyType;
            _resultValue.restartInterval = restartInterval;
            _resultValue.restartIntervalVariable = restartIntervalVariable;
            _resultValue.restartMaxNumberOfPrefixes = restartMaxNumberOfPrefixes;
            _resultValue.restartMaxNumberOfPrefixesVariable = restartMaxNumberOfPrefixesVariable;
            _resultValue.restartThreshold = restartThreshold;
            _resultValue.restartThresholdVariable = restartThresholdVariable;
            _resultValue.warningMessageMaxNumberOfPrefixes = warningMessageMaxNumberOfPrefixes;
            _resultValue.warningMessageMaxNumberOfPrefixesVariable = warningMessageMaxNumberOfPrefixesVariable;
            _resultValue.warningMessageThreshold = warningMessageThreshold;
            _resultValue.warningMessageThresholdVariable = warningMessageThresholdVariable;
            return _resultValue;
        }
    }
}
