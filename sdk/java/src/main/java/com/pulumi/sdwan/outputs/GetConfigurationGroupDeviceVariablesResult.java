// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.GetConfigurationGroupDeviceVariablesDevice;
import com.pulumi.sdwan.outputs.GetConfigurationGroupDeviceVariablesGroup;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetConfigurationGroupDeviceVariablesResult {
    /**
     * @return Configuration Group ID
     * 
     */
    private String configurationGroupId;
    /**
     * @return List of devices
     * 
     */
    private List<GetConfigurationGroupDeviceVariablesDevice> devices;
    /**
     * @return List of device groups
     * 
     */
    private List<GetConfigurationGroupDeviceVariablesGroup> groups;
    /**
     * @return The id of the object
     * 
     */
    private String id;
    /**
     * @return Type of solution
     * 
     */
    private String solution;

    private GetConfigurationGroupDeviceVariablesResult() {}
    /**
     * @return Configuration Group ID
     * 
     */
    public String configurationGroupId() {
        return this.configurationGroupId;
    }
    /**
     * @return List of devices
     * 
     */
    public List<GetConfigurationGroupDeviceVariablesDevice> devices() {
        return this.devices;
    }
    /**
     * @return List of device groups
     * 
     */
    public List<GetConfigurationGroupDeviceVariablesGroup> groups() {
        return this.groups;
    }
    /**
     * @return The id of the object
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Type of solution
     * 
     */
    public String solution() {
        return this.solution;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigurationGroupDeviceVariablesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String configurationGroupId;
        private List<GetConfigurationGroupDeviceVariablesDevice> devices;
        private List<GetConfigurationGroupDeviceVariablesGroup> groups;
        private String id;
        private String solution;
        public Builder() {}
        public Builder(GetConfigurationGroupDeviceVariablesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurationGroupId = defaults.configurationGroupId;
    	      this.devices = defaults.devices;
    	      this.groups = defaults.groups;
    	      this.id = defaults.id;
    	      this.solution = defaults.solution;
        }

        @CustomType.Setter
        public Builder configurationGroupId(String configurationGroupId) {
            if (configurationGroupId == null) {
              throw new MissingRequiredPropertyException("GetConfigurationGroupDeviceVariablesResult", "configurationGroupId");
            }
            this.configurationGroupId = configurationGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder devices(List<GetConfigurationGroupDeviceVariablesDevice> devices) {
            if (devices == null) {
              throw new MissingRequiredPropertyException("GetConfigurationGroupDeviceVariablesResult", "devices");
            }
            this.devices = devices;
            return this;
        }
        public Builder devices(GetConfigurationGroupDeviceVariablesDevice... devices) {
            return devices(List.of(devices));
        }
        @CustomType.Setter
        public Builder groups(List<GetConfigurationGroupDeviceVariablesGroup> groups) {
            if (groups == null) {
              throw new MissingRequiredPropertyException("GetConfigurationGroupDeviceVariablesResult", "groups");
            }
            this.groups = groups;
            return this;
        }
        public Builder groups(GetConfigurationGroupDeviceVariablesGroup... groups) {
            return groups(List.of(groups));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetConfigurationGroupDeviceVariablesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder solution(String solution) {
            if (solution == null) {
              throw new MissingRequiredPropertyException("GetConfigurationGroupDeviceVariablesResult", "solution");
            }
            this.solution = solution;
            return this;
        }
        public GetConfigurationGroupDeviceVariablesResult build() {
            final var _resultValue = new GetConfigurationGroupDeviceVariablesResult();
            _resultValue.configurationGroupId = configurationGroupId;
            _resultValue.devices = devices;
            _resultValue.groups = groups;
            _resultValue.id = id;
            _resultValue.solution = solution;
            return _resultValue;
        }
    }
}
