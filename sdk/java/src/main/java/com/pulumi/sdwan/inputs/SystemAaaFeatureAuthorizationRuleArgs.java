// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SystemAaaFeatureAuthorizationRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final SystemAaaFeatureAuthorizationRuleArgs Empty = new SystemAaaFeatureAuthorizationRuleArgs();

    /**
     * Use Server-group
     * 
     */
    @Import(name="groups")
    private @Nullable Output<List<String>> groups;

    /**
     * @return Use Server-group
     * 
     */
    public Optional<Output<List<String>>> groups() {
        return Optional.ofNullable(this.groups);
    }

    /**
     * Succeed if user has authenticated
     *   - Default value: `false`
     * 
     */
    @Import(name="ifAuthenticated")
    private @Nullable Output<Boolean> ifAuthenticated;

    /**
     * @return Succeed if user has authenticated
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> ifAuthenticated() {
        return Optional.ofNullable(this.ifAuthenticated);
    }

    /**
     * Privilege level when method is commands
     *   - Choices: `1`, `15`
     * 
     */
    @Import(name="level")
    private @Nullable Output<String> level;

    /**
     * @return Privilege level when method is commands
     *   - Choices: `1`, `15`
     * 
     */
    public Optional<Output<String>> level() {
        return Optional.ofNullable(this.level);
    }

    /**
     * Method
     *   - Choices: `commands`
     * 
     */
    @Import(name="method")
    private @Nullable Output<String> method;

    /**
     * @return Method
     *   - Choices: `commands`
     * 
     */
    public Optional<Output<String>> method() {
        return Optional.ofNullable(this.method);
    }

    /**
     * Configure Authorization Rule ID
     * 
     */
    @Import(name="ruleId")
    private @Nullable Output<String> ruleId;

    /**
     * @return Configure Authorization Rule ID
     * 
     */
    public Optional<Output<String>> ruleId() {
        return Optional.ofNullable(this.ruleId);
    }

    private SystemAaaFeatureAuthorizationRuleArgs() {}

    private SystemAaaFeatureAuthorizationRuleArgs(SystemAaaFeatureAuthorizationRuleArgs $) {
        this.groups = $.groups;
        this.ifAuthenticated = $.ifAuthenticated;
        this.level = $.level;
        this.method = $.method;
        this.ruleId = $.ruleId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SystemAaaFeatureAuthorizationRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SystemAaaFeatureAuthorizationRuleArgs $;

        public Builder() {
            $ = new SystemAaaFeatureAuthorizationRuleArgs();
        }

        public Builder(SystemAaaFeatureAuthorizationRuleArgs defaults) {
            $ = new SystemAaaFeatureAuthorizationRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groups Use Server-group
         * 
         * @return builder
         * 
         */
        public Builder groups(@Nullable Output<List<String>> groups) {
            $.groups = groups;
            return this;
        }

        /**
         * @param groups Use Server-group
         * 
         * @return builder
         * 
         */
        public Builder groups(List<String> groups) {
            return groups(Output.of(groups));
        }

        /**
         * @param groups Use Server-group
         * 
         * @return builder
         * 
         */
        public Builder groups(String... groups) {
            return groups(List.of(groups));
        }

        /**
         * @param ifAuthenticated Succeed if user has authenticated
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ifAuthenticated(@Nullable Output<Boolean> ifAuthenticated) {
            $.ifAuthenticated = ifAuthenticated;
            return this;
        }

        /**
         * @param ifAuthenticated Succeed if user has authenticated
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder ifAuthenticated(Boolean ifAuthenticated) {
            return ifAuthenticated(Output.of(ifAuthenticated));
        }

        /**
         * @param level Privilege level when method is commands
         *   - Choices: `1`, `15`
         * 
         * @return builder
         * 
         */
        public Builder level(@Nullable Output<String> level) {
            $.level = level;
            return this;
        }

        /**
         * @param level Privilege level when method is commands
         *   - Choices: `1`, `15`
         * 
         * @return builder
         * 
         */
        public Builder level(String level) {
            return level(Output.of(level));
        }

        /**
         * @param method Method
         *   - Choices: `commands`
         * 
         * @return builder
         * 
         */
        public Builder method(@Nullable Output<String> method) {
            $.method = method;
            return this;
        }

        /**
         * @param method Method
         *   - Choices: `commands`
         * 
         * @return builder
         * 
         */
        public Builder method(String method) {
            return method(Output.of(method));
        }

        /**
         * @param ruleId Configure Authorization Rule ID
         * 
         * @return builder
         * 
         */
        public Builder ruleId(@Nullable Output<String> ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        /**
         * @param ruleId Configure Authorization Rule ID
         * 
         * @return builder
         * 
         */
        public Builder ruleId(String ruleId) {
            return ruleId(Output.of(ruleId));
        }

        public SystemAaaFeatureAuthorizationRuleArgs build() {
            return $;
        }
    }

}
