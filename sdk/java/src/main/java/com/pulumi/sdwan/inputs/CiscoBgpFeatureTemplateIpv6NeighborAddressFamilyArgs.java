// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.CiscoBgpFeatureTemplateIpv6NeighborAddressFamilyRoutePolicyArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CiscoBgpFeatureTemplateIpv6NeighborAddressFamilyArgs extends com.pulumi.resources.ResourceArgs {

    public static final CiscoBgpFeatureTemplateIpv6NeighborAddressFamilyArgs Empty = new CiscoBgpFeatureTemplateIpv6NeighborAddressFamilyArgs();

    /**
     * Set BGP address family
     *   - Choices: `ipv6-unicast`
     * 
     */
    @Import(name="familyType")
    private @Nullable Output<String> familyType;

    /**
     * @return Set BGP address family
     *   - Choices: `ipv6-unicast`
     * 
     */
    public Optional<Output<String>> familyType() {
        return Optional.ofNullable(this.familyType);
    }

    /**
     * Set maximum number of prefixes accepted from BGP peer
     *   - Range: `0`-`4294967295`
     *   - Default value: `0`
     * 
     */
    @Import(name="maximumPrefixes")
    private @Nullable Output<Integer> maximumPrefixes;

    /**
     * @return Set maximum number of prefixes accepted from BGP peer
     *   - Range: `0`-`4294967295`
     *   - Default value: `0`
     * 
     */
    public Optional<Output<Integer>> maximumPrefixes() {
        return Optional.ofNullable(this.maximumPrefixes);
    }

    /**
     * Set when to restart BGP connection if threshold is exceeded
     *   - Range: `0`-`65535`
     * 
     */
    @Import(name="maximumPrefixesRestart")
    private @Nullable Output<Integer> maximumPrefixesRestart;

    /**
     * @return Set when to restart BGP connection if threshold is exceeded
     *   - Range: `0`-`65535`
     * 
     */
    public Optional<Output<Integer>> maximumPrefixesRestart() {
        return Optional.ofNullable(this.maximumPrefixesRestart);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="maximumPrefixesRestartVariable")
    private @Nullable Output<String> maximumPrefixesRestartVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> maximumPrefixesRestartVariable() {
        return Optional.ofNullable(this.maximumPrefixesRestartVariable);
    }

    /**
     * Set threshold at which to generate a warning message
     *   - Range: `0`-`100`
     *   - Default value: `0`
     * 
     */
    @Import(name="maximumPrefixesThreshold")
    private @Nullable Output<Integer> maximumPrefixesThreshold;

    /**
     * @return Set threshold at which to generate a warning message
     *   - Range: `0`-`100`
     *   - Default value: `0`
     * 
     */
    public Optional<Output<Integer>> maximumPrefixesThreshold() {
        return Optional.ofNullable(this.maximumPrefixesThreshold);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="maximumPrefixesThresholdVariable")
    private @Nullable Output<String> maximumPrefixesThresholdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> maximumPrefixesThresholdVariable() {
        return Optional.ofNullable(this.maximumPrefixesThresholdVariable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="maximumPrefixesVariable")
    private @Nullable Output<String> maximumPrefixesVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> maximumPrefixesVariable() {
        return Optional.ofNullable(this.maximumPrefixesVariable);
    }

    /**
     * Display only a warning message when threshold is exceeded
     *   - Default value: `false`
     * 
     */
    @Import(name="maximumPrefixesWarningOnly")
    private @Nullable Output<Boolean> maximumPrefixesWarningOnly;

    /**
     * @return Display only a warning message when threshold is exceeded
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> maximumPrefixesWarningOnly() {
        return Optional.ofNullable(this.maximumPrefixesWarningOnly);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="maximumPrefixesWarningOnlyVariable")
    private @Nullable Output<String> maximumPrefixesWarningOnlyVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> maximumPrefixesWarningOnlyVariable() {
        return Optional.ofNullable(this.maximumPrefixesWarningOnlyVariable);
    }

    /**
     * Indicates if list item is considered optional.
     * 
     */
    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    /**
     * Select route policy to apply to prefixes received from BGP neighbor
     * 
     */
    @Import(name="routePolicies")
    private @Nullable Output<List<CiscoBgpFeatureTemplateIpv6NeighborAddressFamilyRoutePolicyArgs>> routePolicies;

    /**
     * @return Select route policy to apply to prefixes received from BGP neighbor
     * 
     */
    public Optional<Output<List<CiscoBgpFeatureTemplateIpv6NeighborAddressFamilyRoutePolicyArgs>>> routePolicies() {
        return Optional.ofNullable(this.routePolicies);
    }

    private CiscoBgpFeatureTemplateIpv6NeighborAddressFamilyArgs() {}

    private CiscoBgpFeatureTemplateIpv6NeighborAddressFamilyArgs(CiscoBgpFeatureTemplateIpv6NeighborAddressFamilyArgs $) {
        this.familyType = $.familyType;
        this.maximumPrefixes = $.maximumPrefixes;
        this.maximumPrefixesRestart = $.maximumPrefixesRestart;
        this.maximumPrefixesRestartVariable = $.maximumPrefixesRestartVariable;
        this.maximumPrefixesThreshold = $.maximumPrefixesThreshold;
        this.maximumPrefixesThresholdVariable = $.maximumPrefixesThresholdVariable;
        this.maximumPrefixesVariable = $.maximumPrefixesVariable;
        this.maximumPrefixesWarningOnly = $.maximumPrefixesWarningOnly;
        this.maximumPrefixesWarningOnlyVariable = $.maximumPrefixesWarningOnlyVariable;
        this.optional = $.optional;
        this.routePolicies = $.routePolicies;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CiscoBgpFeatureTemplateIpv6NeighborAddressFamilyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CiscoBgpFeatureTemplateIpv6NeighborAddressFamilyArgs $;

        public Builder() {
            $ = new CiscoBgpFeatureTemplateIpv6NeighborAddressFamilyArgs();
        }

        public Builder(CiscoBgpFeatureTemplateIpv6NeighborAddressFamilyArgs defaults) {
            $ = new CiscoBgpFeatureTemplateIpv6NeighborAddressFamilyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param familyType Set BGP address family
         *   - Choices: `ipv6-unicast`
         * 
         * @return builder
         * 
         */
        public Builder familyType(@Nullable Output<String> familyType) {
            $.familyType = familyType;
            return this;
        }

        /**
         * @param familyType Set BGP address family
         *   - Choices: `ipv6-unicast`
         * 
         * @return builder
         * 
         */
        public Builder familyType(String familyType) {
            return familyType(Output.of(familyType));
        }

        /**
         * @param maximumPrefixes Set maximum number of prefixes accepted from BGP peer
         *   - Range: `0`-`4294967295`
         *   - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder maximumPrefixes(@Nullable Output<Integer> maximumPrefixes) {
            $.maximumPrefixes = maximumPrefixes;
            return this;
        }

        /**
         * @param maximumPrefixes Set maximum number of prefixes accepted from BGP peer
         *   - Range: `0`-`4294967295`
         *   - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder maximumPrefixes(Integer maximumPrefixes) {
            return maximumPrefixes(Output.of(maximumPrefixes));
        }

        /**
         * @param maximumPrefixesRestart Set when to restart BGP connection if threshold is exceeded
         *   - Range: `0`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder maximumPrefixesRestart(@Nullable Output<Integer> maximumPrefixesRestart) {
            $.maximumPrefixesRestart = maximumPrefixesRestart;
            return this;
        }

        /**
         * @param maximumPrefixesRestart Set when to restart BGP connection if threshold is exceeded
         *   - Range: `0`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder maximumPrefixesRestart(Integer maximumPrefixesRestart) {
            return maximumPrefixesRestart(Output.of(maximumPrefixesRestart));
        }

        /**
         * @param maximumPrefixesRestartVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder maximumPrefixesRestartVariable(@Nullable Output<String> maximumPrefixesRestartVariable) {
            $.maximumPrefixesRestartVariable = maximumPrefixesRestartVariable;
            return this;
        }

        /**
         * @param maximumPrefixesRestartVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder maximumPrefixesRestartVariable(String maximumPrefixesRestartVariable) {
            return maximumPrefixesRestartVariable(Output.of(maximumPrefixesRestartVariable));
        }

        /**
         * @param maximumPrefixesThreshold Set threshold at which to generate a warning message
         *   - Range: `0`-`100`
         *   - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder maximumPrefixesThreshold(@Nullable Output<Integer> maximumPrefixesThreshold) {
            $.maximumPrefixesThreshold = maximumPrefixesThreshold;
            return this;
        }

        /**
         * @param maximumPrefixesThreshold Set threshold at which to generate a warning message
         *   - Range: `0`-`100`
         *   - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder maximumPrefixesThreshold(Integer maximumPrefixesThreshold) {
            return maximumPrefixesThreshold(Output.of(maximumPrefixesThreshold));
        }

        /**
         * @param maximumPrefixesThresholdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder maximumPrefixesThresholdVariable(@Nullable Output<String> maximumPrefixesThresholdVariable) {
            $.maximumPrefixesThresholdVariable = maximumPrefixesThresholdVariable;
            return this;
        }

        /**
         * @param maximumPrefixesThresholdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder maximumPrefixesThresholdVariable(String maximumPrefixesThresholdVariable) {
            return maximumPrefixesThresholdVariable(Output.of(maximumPrefixesThresholdVariable));
        }

        /**
         * @param maximumPrefixesVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder maximumPrefixesVariable(@Nullable Output<String> maximumPrefixesVariable) {
            $.maximumPrefixesVariable = maximumPrefixesVariable;
            return this;
        }

        /**
         * @param maximumPrefixesVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder maximumPrefixesVariable(String maximumPrefixesVariable) {
            return maximumPrefixesVariable(Output.of(maximumPrefixesVariable));
        }

        /**
         * @param maximumPrefixesWarningOnly Display only a warning message when threshold is exceeded
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder maximumPrefixesWarningOnly(@Nullable Output<Boolean> maximumPrefixesWarningOnly) {
            $.maximumPrefixesWarningOnly = maximumPrefixesWarningOnly;
            return this;
        }

        /**
         * @param maximumPrefixesWarningOnly Display only a warning message when threshold is exceeded
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder maximumPrefixesWarningOnly(Boolean maximumPrefixesWarningOnly) {
            return maximumPrefixesWarningOnly(Output.of(maximumPrefixesWarningOnly));
        }

        /**
         * @param maximumPrefixesWarningOnlyVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder maximumPrefixesWarningOnlyVariable(@Nullable Output<String> maximumPrefixesWarningOnlyVariable) {
            $.maximumPrefixesWarningOnlyVariable = maximumPrefixesWarningOnlyVariable;
            return this;
        }

        /**
         * @param maximumPrefixesWarningOnlyVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder maximumPrefixesWarningOnlyVariable(String maximumPrefixesWarningOnlyVariable) {
            return maximumPrefixesWarningOnlyVariable(Output.of(maximumPrefixesWarningOnlyVariable));
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        /**
         * @param routePolicies Select route policy to apply to prefixes received from BGP neighbor
         * 
         * @return builder
         * 
         */
        public Builder routePolicies(@Nullable Output<List<CiscoBgpFeatureTemplateIpv6NeighborAddressFamilyRoutePolicyArgs>> routePolicies) {
            $.routePolicies = routePolicies;
            return this;
        }

        /**
         * @param routePolicies Select route policy to apply to prefixes received from BGP neighbor
         * 
         * @return builder
         * 
         */
        public Builder routePolicies(List<CiscoBgpFeatureTemplateIpv6NeighborAddressFamilyRoutePolicyArgs> routePolicies) {
            return routePolicies(Output.of(routePolicies));
        }

        /**
         * @param routePolicies Select route policy to apply to prefixes received from BGP neighbor
         * 
         * @return builder
         * 
         */
        public Builder routePolicies(CiscoBgpFeatureTemplateIpv6NeighborAddressFamilyRoutePolicyArgs... routePolicies) {
            return routePolicies(List.of(routePolicies));
        }

        public CiscoBgpFeatureTemplateIpv6NeighborAddressFamilyArgs build() {
            return $;
        }
    }

}
