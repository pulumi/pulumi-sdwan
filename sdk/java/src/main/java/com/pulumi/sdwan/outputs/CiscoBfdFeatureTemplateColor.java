// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CiscoBfdFeatureTemplateColor {
    /**
     * @return Set color that identifies the WAN transport tunnel
     *   - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`, `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`, `private4`, `private5`, `private6`
     * 
     */
    private @Nullable String color;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String colorVariable;
    /**
     * @return Set BFD Default DSCP value for tloc color
     *   - Range: `0`-`63`
     *   - Default value: `48`
     * 
     */
    private @Nullable Integer dscp;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String dscpVariable;
    /**
     * @return Set how often BFD sends Hello packets
     *   - Range: `100`-`300000`
     *   - Default value: `1000`
     * 
     */
    private @Nullable Integer helloInterval;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String helloIntervalVariable;
    /**
     * @return Set how many Hello packet intervals to wait before declaring that a tunnel has failed
     *   - Range: `1`-`60`
     *   - Default value: `7`
     * 
     */
    private @Nullable Integer multiplier;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String multiplierVariable;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private @Nullable Boolean optional;
    /**
     * @return Control automatic path MTU discovery
     *   - Default value: `true`
     * 
     */
    private @Nullable Boolean pmtuDiscovery;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String pmtuDiscoveryVariable;

    private CiscoBfdFeatureTemplateColor() {}
    /**
     * @return Set color that identifies the WAN transport tunnel
     *   - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`, `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`, `private4`, `private5`, `private6`
     * 
     */
    public Optional<String> color() {
        return Optional.ofNullable(this.color);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> colorVariable() {
        return Optional.ofNullable(this.colorVariable);
    }
    /**
     * @return Set BFD Default DSCP value for tloc color
     *   - Range: `0`-`63`
     *   - Default value: `48`
     * 
     */
    public Optional<Integer> dscp() {
        return Optional.ofNullable(this.dscp);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> dscpVariable() {
        return Optional.ofNullable(this.dscpVariable);
    }
    /**
     * @return Set how often BFD sends Hello packets
     *   - Range: `100`-`300000`
     *   - Default value: `1000`
     * 
     */
    public Optional<Integer> helloInterval() {
        return Optional.ofNullable(this.helloInterval);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> helloIntervalVariable() {
        return Optional.ofNullable(this.helloIntervalVariable);
    }
    /**
     * @return Set how many Hello packet intervals to wait before declaring that a tunnel has failed
     *   - Range: `1`-`60`
     *   - Default value: `7`
     * 
     */
    public Optional<Integer> multiplier() {
        return Optional.ofNullable(this.multiplier);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> multiplierVariable() {
        return Optional.ofNullable(this.multiplierVariable);
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Boolean> optional() {
        return Optional.ofNullable(this.optional);
    }
    /**
     * @return Control automatic path MTU discovery
     *   - Default value: `true`
     * 
     */
    public Optional<Boolean> pmtuDiscovery() {
        return Optional.ofNullable(this.pmtuDiscovery);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> pmtuDiscoveryVariable() {
        return Optional.ofNullable(this.pmtuDiscoveryVariable);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CiscoBfdFeatureTemplateColor defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String color;
        private @Nullable String colorVariable;
        private @Nullable Integer dscp;
        private @Nullable String dscpVariable;
        private @Nullable Integer helloInterval;
        private @Nullable String helloIntervalVariable;
        private @Nullable Integer multiplier;
        private @Nullable String multiplierVariable;
        private @Nullable Boolean optional;
        private @Nullable Boolean pmtuDiscovery;
        private @Nullable String pmtuDiscoveryVariable;
        public Builder() {}
        public Builder(CiscoBfdFeatureTemplateColor defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.color = defaults.color;
    	      this.colorVariable = defaults.colorVariable;
    	      this.dscp = defaults.dscp;
    	      this.dscpVariable = defaults.dscpVariable;
    	      this.helloInterval = defaults.helloInterval;
    	      this.helloIntervalVariable = defaults.helloIntervalVariable;
    	      this.multiplier = defaults.multiplier;
    	      this.multiplierVariable = defaults.multiplierVariable;
    	      this.optional = defaults.optional;
    	      this.pmtuDiscovery = defaults.pmtuDiscovery;
    	      this.pmtuDiscoveryVariable = defaults.pmtuDiscoveryVariable;
        }

        @CustomType.Setter
        public Builder color(@Nullable String color) {

            this.color = color;
            return this;
        }
        @CustomType.Setter
        public Builder colorVariable(@Nullable String colorVariable) {

            this.colorVariable = colorVariable;
            return this;
        }
        @CustomType.Setter
        public Builder dscp(@Nullable Integer dscp) {

            this.dscp = dscp;
            return this;
        }
        @CustomType.Setter
        public Builder dscpVariable(@Nullable String dscpVariable) {

            this.dscpVariable = dscpVariable;
            return this;
        }
        @CustomType.Setter
        public Builder helloInterval(@Nullable Integer helloInterval) {

            this.helloInterval = helloInterval;
            return this;
        }
        @CustomType.Setter
        public Builder helloIntervalVariable(@Nullable String helloIntervalVariable) {

            this.helloIntervalVariable = helloIntervalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder multiplier(@Nullable Integer multiplier) {

            this.multiplier = multiplier;
            return this;
        }
        @CustomType.Setter
        public Builder multiplierVariable(@Nullable String multiplierVariable) {

            this.multiplierVariable = multiplierVariable;
            return this;
        }
        @CustomType.Setter
        public Builder optional(@Nullable Boolean optional) {

            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder pmtuDiscovery(@Nullable Boolean pmtuDiscovery) {

            this.pmtuDiscovery = pmtuDiscovery;
            return this;
        }
        @CustomType.Setter
        public Builder pmtuDiscoveryVariable(@Nullable String pmtuDiscoveryVariable) {

            this.pmtuDiscoveryVariable = pmtuDiscoveryVariable;
            return this;
        }
        public CiscoBfdFeatureTemplateColor build() {
            final var _resultValue = new CiscoBfdFeatureTemplateColor();
            _resultValue.color = color;
            _resultValue.colorVariable = colorVariable;
            _resultValue.dscp = dscp;
            _resultValue.dscpVariable = dscpVariable;
            _resultValue.helloInterval = helloInterval;
            _resultValue.helloIntervalVariable = helloIntervalVariable;
            _resultValue.multiplier = multiplier;
            _resultValue.multiplierVariable = multiplierVariable;
            _resultValue.optional = optional;
            _resultValue.pmtuDiscovery = pmtuDiscovery;
            _resultValue.pmtuDiscoveryVariable = pmtuDiscoveryVariable;
            return _resultValue;
        }
    }
}
