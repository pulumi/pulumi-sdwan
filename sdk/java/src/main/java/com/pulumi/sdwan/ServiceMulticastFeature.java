// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.ServiceMulticastFeatureArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.ServiceMulticastFeatureState;
import com.pulumi.sdwan.outputs.ServiceMulticastFeatureAutoRpAnnounce;
import com.pulumi.sdwan.outputs.ServiceMulticastFeatureAutoRpDiscovery;
import com.pulumi.sdwan.outputs.ServiceMulticastFeatureIgmpInterface;
import com.pulumi.sdwan.outputs.ServiceMulticastFeatureMsdpGroup;
import com.pulumi.sdwan.outputs.ServiceMulticastFeaturePimBsrCandidate;
import com.pulumi.sdwan.outputs.ServiceMulticastFeaturePimBsrRpCandidate;
import com.pulumi.sdwan.outputs.ServiceMulticastFeaturePimInterface;
import com.pulumi.sdwan.outputs.ServiceMulticastFeatureStaticRpAddress;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Service Multicast Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * Expected import identifier with the format: &#34;service_multicast_feature_id,feature_profile_id&#34;
 * 
 * ```sh
 * $ pulumi import sdwan:index/serviceMulticastFeature:ServiceMulticastFeature example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/serviceMulticastFeature:ServiceMulticastFeature")
public class ServiceMulticastFeature extends com.pulumi.resources.CustomResource {
    /**
     * Enable or disable RP Announce
     * 
     */
    @Export(name="autoRpAnnounces", refs={List.class,ServiceMulticastFeatureAutoRpAnnounce.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceMulticastFeatureAutoRpAnnounce>> autoRpAnnounces;

    /**
     * @return Enable or disable RP Announce
     * 
     */
    public Output<Optional<List<ServiceMulticastFeatureAutoRpAnnounce>>> autoRpAnnounces() {
        return Codegen.optional(this.autoRpAnnounces);
    }
    /**
     * Enable or disable RP Discovery
     * 
     */
    @Export(name="autoRpDiscoveries", refs={List.class,ServiceMulticastFeatureAutoRpDiscovery.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceMulticastFeatureAutoRpDiscovery>> autoRpDiscoveries;

    /**
     * @return Enable or disable RP Discovery
     * 
     */
    public Output<Optional<List<ServiceMulticastFeatureAutoRpDiscovery>>> autoRpDiscoveries() {
        return Codegen.optional(this.autoRpDiscoveries);
    }
    /**
     * The description of the Feature
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Enable or disable auto-RP
     *   - Default value: `false`
     * 
     */
    @Export(name="enableAutoRp", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableAutoRp;

    /**
     * @return Enable or disable auto-RP
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> enableAutoRp() {
        return Codegen.optional(this.enableAutoRp);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="enableAutoRpVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> enableAutoRpVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> enableAutoRpVariable() {
        return Codegen.optional(this.enableAutoRpVariable);
    }
    /**
     * Feature Profile ID
     * 
     */
    @Export(name="featureProfileId", refs={String.class}, tree="[0]")
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * Set IGMP interface parameters
     * 
     */
    @Export(name="igmpInterfaces", refs={List.class,ServiceMulticastFeatureIgmpInterface.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceMulticastFeatureIgmpInterface>> igmpInterfaces;

    /**
     * @return Set IGMP interface parameters
     * 
     */
    public Output<Optional<List<ServiceMulticastFeatureIgmpInterface>>> igmpInterfaces() {
        return Codegen.optional(this.igmpInterfaces);
    }
    /**
     * Replicator is local to this device
     *   - Default value: `false`
     * 
     */
    @Export(name="localReplicator", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> localReplicator;

    /**
     * @return Replicator is local to this device
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> localReplicator() {
        return Codegen.optional(this.localReplicator);
    }
    /**
     * Set number of joins per group the router supports
     *   - Range: `0`-`131072`
     * 
     */
    @Export(name="localReplicatorThreshold", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> localReplicatorThreshold;

    /**
     * @return Set number of joins per group the router supports
     *   - Range: `0`-`131072`
     * 
     */
    public Output<Optional<Integer>> localReplicatorThreshold() {
        return Codegen.optional(this.localReplicatorThreshold);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="localReplicatorThresholdVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> localReplicatorThresholdVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> localReplicatorThresholdVariable() {
        return Codegen.optional(this.localReplicatorThresholdVariable);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="localReplicatorVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> localReplicatorVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> localReplicatorVariable() {
        return Codegen.optional(this.localReplicatorVariable);
    }
    /**
     * Set MSDP refresh timer
     *   - Range: `1`-`60`
     * 
     */
    @Export(name="msdpConnectionRetryInterval", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> msdpConnectionRetryInterval;

    /**
     * @return Set MSDP refresh timer
     *   - Range: `1`-`60`
     * 
     */
    public Output<Optional<Integer>> msdpConnectionRetryInterval() {
        return Codegen.optional(this.msdpConnectionRetryInterval);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="msdpConnectionRetryIntervalVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> msdpConnectionRetryIntervalVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> msdpConnectionRetryIntervalVariable() {
        return Codegen.optional(this.msdpConnectionRetryIntervalVariable);
    }
    /**
     * multicast MSDP peer
     * 
     */
    @Export(name="msdpGroups", refs={List.class,ServiceMulticastFeatureMsdpGroup.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceMulticastFeatureMsdpGroup>> msdpGroups;

    /**
     * @return multicast MSDP peer
     * 
     */
    public Output<Optional<List<ServiceMulticastFeatureMsdpGroup>>> msdpGroups() {
        return Codegen.optional(this.msdpGroups);
    }
    /**
     * Set MSDP originator ID
     * 
     */
    @Export(name="msdpOriginatorId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> msdpOriginatorId;

    /**
     * @return Set MSDP originator ID
     * 
     */
    public Output<Optional<String>> msdpOriginatorId() {
        return Codegen.optional(this.msdpOriginatorId);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="msdpOriginatorIdVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> msdpOriginatorIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> msdpOriginatorIdVariable() {
        return Codegen.optional(this.msdpOriginatorIdVariable);
    }
    /**
     * The name of the Feature
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * bsr candidate Attributes
     * 
     */
    @Export(name="pimBsrCandidates", refs={List.class,ServiceMulticastFeaturePimBsrCandidate.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceMulticastFeaturePimBsrCandidate>> pimBsrCandidates;

    /**
     * @return bsr candidate Attributes
     * 
     */
    public Output<Optional<List<ServiceMulticastFeaturePimBsrCandidate>>> pimBsrCandidates() {
        return Codegen.optional(this.pimBsrCandidates);
    }
    /**
     * Set RP Discovery Scope
     * 
     */
    @Export(name="pimBsrRpCandidates", refs={List.class,ServiceMulticastFeaturePimBsrRpCandidate.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceMulticastFeaturePimBsrRpCandidate>> pimBsrRpCandidates;

    /**
     * @return Set RP Discovery Scope
     * 
     */
    public Output<Optional<List<ServiceMulticastFeaturePimBsrRpCandidate>>> pimBsrRpCandidates() {
        return Codegen.optional(this.pimBsrRpCandidates);
    }
    /**
     * Set PIM interface parameters
     * 
     */
    @Export(name="pimInterfaces", refs={List.class,ServiceMulticastFeaturePimInterface.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceMulticastFeaturePimInterface>> pimInterfaces;

    /**
     * @return Set PIM interface parameters
     * 
     */
    public Output<Optional<List<ServiceMulticastFeaturePimInterface>>> pimInterfaces() {
        return Codegen.optional(this.pimInterfaces);
    }
    /**
     * Set Access List for PIM SSM
     * 
     */
    @Export(name="pimSourceSpecificMulticastAccessList", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> pimSourceSpecificMulticastAccessList;

    /**
     * @return Set Access List for PIM SSM
     * 
     */
    public Output<Optional<String>> pimSourceSpecificMulticastAccessList() {
        return Codegen.optional(this.pimSourceSpecificMulticastAccessList);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="pimSourceSpecificMulticastAccessListVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> pimSourceSpecificMulticastAccessListVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> pimSourceSpecificMulticastAccessListVariable() {
        return Codegen.optional(this.pimSourceSpecificMulticastAccessListVariable);
    }
    /**
     * turn SSM on/off
     * 
     */
    @Export(name="pimSourceSpecificMulticastEnable", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> pimSourceSpecificMulticastEnable;

    /**
     * @return turn SSM on/off
     * 
     */
    public Output<Boolean> pimSourceSpecificMulticastEnable() {
        return this.pimSourceSpecificMulticastEnable;
    }
    /**
     * Set when PIM router joins the SPT (kbps)
     *   - Choices: `0`, `infinity`
     *   - Default value: `0`
     * 
     */
    @Export(name="pimSptThreshold", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> pimSptThreshold;

    /**
     * @return Set when PIM router joins the SPT (kbps)
     *   - Choices: `0`, `infinity`
     *   - Default value: `0`
     * 
     */
    public Output<Optional<String>> pimSptThreshold() {
        return Codegen.optional(this.pimSptThreshold);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="pimSptThresholdVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> pimSptThresholdVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> pimSptThresholdVariable() {
        return Codegen.optional(this.pimSptThresholdVariable);
    }
    /**
     * Shortest Path Tree (SPT) Only Mode
     *   - Default value: `false`
     * 
     */
    @Export(name="sptOnly", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> sptOnly;

    /**
     * @return Shortest Path Tree (SPT) Only Mode
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> sptOnly() {
        return Codegen.optional(this.sptOnly);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="sptOnlyVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sptOnlyVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> sptOnlyVariable() {
        return Codegen.optional(this.sptOnlyVariable);
    }
    /**
     * Set Static RP Address(es)
     * 
     */
    @Export(name="staticRpAddresses", refs={List.class,ServiceMulticastFeatureStaticRpAddress.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceMulticastFeatureStaticRpAddress>> staticRpAddresses;

    /**
     * @return Set Static RP Address(es)
     * 
     */
    public Output<Optional<List<ServiceMulticastFeatureStaticRpAddress>>> staticRpAddresses() {
        return Codegen.optional(this.staticRpAddresses);
    }
    /**
     * The version of the Feature
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the Feature
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServiceMulticastFeature(java.lang.String name) {
        this(name, ServiceMulticastFeatureArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServiceMulticastFeature(java.lang.String name, ServiceMulticastFeatureArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServiceMulticastFeature(java.lang.String name, ServiceMulticastFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/serviceMulticastFeature:ServiceMulticastFeature", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ServiceMulticastFeature(java.lang.String name, Output<java.lang.String> id, @Nullable ServiceMulticastFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/serviceMulticastFeature:ServiceMulticastFeature", name, state, makeResourceOptions(options, id), false);
    }

    private static ServiceMulticastFeatureArgs makeArgs(ServiceMulticastFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ServiceMulticastFeatureArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServiceMulticastFeature get(java.lang.String name, Output<java.lang.String> id, @Nullable ServiceMulticastFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServiceMulticastFeature(name, id, state, options);
    }
}
