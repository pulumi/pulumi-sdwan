// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.TlsSslDecryptionPolicyDefinitionNetworkRuleSourceAndDestinationConfigurationArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TlsSslDecryptionPolicyDefinitionNetworkRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final TlsSslDecryptionPolicyDefinitionNetworkRuleArgs Empty = new TlsSslDecryptionPolicyDefinitionNetworkRuleArgs();

    /**
     * Rule base action
     *   - Choices: `noIntent`, `doNotDecrypt`, `decrypt`
     * 
     */
    @Import(name="baseAction")
    private @Nullable Output<String> baseAction;

    /**
     * @return Rule base action
     *   - Choices: `noIntent`, `doNotDecrypt`, `decrypt`
     * 
     */
    public Optional<Output<String>> baseAction() {
        return Optional.ofNullable(this.baseAction);
    }

    /**
     * Rule ID
     * 
     */
    @Import(name="ruleId")
    private @Nullable Output<Integer> ruleId;

    /**
     * @return Rule ID
     * 
     */
    public Optional<Output<Integer>> ruleId() {
        return Optional.ofNullable(this.ruleId);
    }

    /**
     * Rule name
     * 
     */
    @Import(name="ruleName")
    private @Nullable Output<String> ruleName;

    /**
     * @return Rule name
     * 
     */
    public Optional<Output<String>> ruleName() {
        return Optional.ofNullable(this.ruleName);
    }

    /**
     * Rule type
     * 
     */
    @Import(name="ruleType")
    private @Nullable Output<String> ruleType;

    /**
     * @return Rule type
     * 
     */
    public Optional<Output<String>> ruleType() {
        return Optional.ofNullable(this.ruleType);
    }

    /**
     * List of network source / destination configuration
     * 
     */
    @Import(name="sourceAndDestinationConfigurations")
    private @Nullable Output<List<TlsSslDecryptionPolicyDefinitionNetworkRuleSourceAndDestinationConfigurationArgs>> sourceAndDestinationConfigurations;

    /**
     * @return List of network source / destination configuration
     * 
     */
    public Optional<Output<List<TlsSslDecryptionPolicyDefinitionNetworkRuleSourceAndDestinationConfigurationArgs>>> sourceAndDestinationConfigurations() {
        return Optional.ofNullable(this.sourceAndDestinationConfigurations);
    }

    private TlsSslDecryptionPolicyDefinitionNetworkRuleArgs() {}

    private TlsSslDecryptionPolicyDefinitionNetworkRuleArgs(TlsSslDecryptionPolicyDefinitionNetworkRuleArgs $) {
        this.baseAction = $.baseAction;
        this.ruleId = $.ruleId;
        this.ruleName = $.ruleName;
        this.ruleType = $.ruleType;
        this.sourceAndDestinationConfigurations = $.sourceAndDestinationConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TlsSslDecryptionPolicyDefinitionNetworkRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TlsSslDecryptionPolicyDefinitionNetworkRuleArgs $;

        public Builder() {
            $ = new TlsSslDecryptionPolicyDefinitionNetworkRuleArgs();
        }

        public Builder(TlsSslDecryptionPolicyDefinitionNetworkRuleArgs defaults) {
            $ = new TlsSslDecryptionPolicyDefinitionNetworkRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param baseAction Rule base action
         *   - Choices: `noIntent`, `doNotDecrypt`, `decrypt`
         * 
         * @return builder
         * 
         */
        public Builder baseAction(@Nullable Output<String> baseAction) {
            $.baseAction = baseAction;
            return this;
        }

        /**
         * @param baseAction Rule base action
         *   - Choices: `noIntent`, `doNotDecrypt`, `decrypt`
         * 
         * @return builder
         * 
         */
        public Builder baseAction(String baseAction) {
            return baseAction(Output.of(baseAction));
        }

        /**
         * @param ruleId Rule ID
         * 
         * @return builder
         * 
         */
        public Builder ruleId(@Nullable Output<Integer> ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        /**
         * @param ruleId Rule ID
         * 
         * @return builder
         * 
         */
        public Builder ruleId(Integer ruleId) {
            return ruleId(Output.of(ruleId));
        }

        /**
         * @param ruleName Rule name
         * 
         * @return builder
         * 
         */
        public Builder ruleName(@Nullable Output<String> ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        /**
         * @param ruleName Rule name
         * 
         * @return builder
         * 
         */
        public Builder ruleName(String ruleName) {
            return ruleName(Output.of(ruleName));
        }

        /**
         * @param ruleType Rule type
         * 
         * @return builder
         * 
         */
        public Builder ruleType(@Nullable Output<String> ruleType) {
            $.ruleType = ruleType;
            return this;
        }

        /**
         * @param ruleType Rule type
         * 
         * @return builder
         * 
         */
        public Builder ruleType(String ruleType) {
            return ruleType(Output.of(ruleType));
        }

        /**
         * @param sourceAndDestinationConfigurations List of network source / destination configuration
         * 
         * @return builder
         * 
         */
        public Builder sourceAndDestinationConfigurations(@Nullable Output<List<TlsSslDecryptionPolicyDefinitionNetworkRuleSourceAndDestinationConfigurationArgs>> sourceAndDestinationConfigurations) {
            $.sourceAndDestinationConfigurations = sourceAndDestinationConfigurations;
            return this;
        }

        /**
         * @param sourceAndDestinationConfigurations List of network source / destination configuration
         * 
         * @return builder
         * 
         */
        public Builder sourceAndDestinationConfigurations(List<TlsSslDecryptionPolicyDefinitionNetworkRuleSourceAndDestinationConfigurationArgs> sourceAndDestinationConfigurations) {
            return sourceAndDestinationConfigurations(Output.of(sourceAndDestinationConfigurations));
        }

        /**
         * @param sourceAndDestinationConfigurations List of network source / destination configuration
         * 
         * @return builder
         * 
         */
        public Builder sourceAndDestinationConfigurations(TlsSslDecryptionPolicyDefinitionNetworkRuleSourceAndDestinationConfigurationArgs... sourceAndDestinationConfigurations) {
            return sourceAndDestinationConfigurations(List.of(sourceAndDestinationConfigurations));
        }

        public TlsSslDecryptionPolicyDefinitionNetworkRuleArgs build() {
            return $;
        }
    }

}
