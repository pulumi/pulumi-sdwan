// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.DnsSecurityPolicyDefinitionArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.DnsSecurityPolicyDefinitionState;
import com.pulumi.sdwan.outputs.DnsSecurityPolicyDefinitionTargetVpn;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a DNS Security Policy Definition .
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sdwan.DnsSecurityPolicyDefinition;
 * import com.pulumi.sdwan.DnsSecurityPolicyDefinitionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new DnsSecurityPolicyDefinition(&#34;example&#34;, DnsSecurityPolicyDefinitionArgs.builder()        
 *             .name(&#34;Example&#34;)
 *             .description(&#34;Example&#34;)
 *             .domainListId(&#34;84f10c9d-def7-45a3-8c64-6df26163c861&#34;)
 *             .localDomainBypassEnabled(false)
 *             .matchAllVpn(true)
 *             .dnscrypt(true)
 *             .umbrellaDnsDefault(true)
 *             .ciscoSigCredentialsFeatureTemplateId(&#34;885c3bce-eab6-4d45-8ff3-488f0df4072a&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import sdwan:index/dnsSecurityPolicyDefinition:DnsSecurityPolicyDefinition example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/dnsSecurityPolicyDefinition:DnsSecurityPolicyDefinition")
public class DnsSecurityPolicyDefinition extends com.pulumi.resources.CustomResource {
    /**
     * Credentials feature template ID
     * 
     */
    @Export(name="ciscoSigCredentialsFeatureTemplateId", refs={String.class}, tree="[0]")
    private Output<String> ciscoSigCredentialsFeatureTemplateId;

    /**
     * @return Credentials feature template ID
     * 
     */
    public Output<String> ciscoSigCredentialsFeatureTemplateId() {
        return this.ciscoSigCredentialsFeatureTemplateId;
    }
    /**
     * Credentials feature template version
     * 
     */
    @Export(name="ciscoSigCredentialsFeatureTemplateVersion", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ciscoSigCredentialsFeatureTemplateVersion;

    /**
     * @return Credentials feature template version
     * 
     */
    public Output<Optional<Integer>> ciscoSigCredentialsFeatureTemplateVersion() {
        return Codegen.optional(this.ciscoSigCredentialsFeatureTemplateVersion);
    }
    /**
     * Only relevant when `umbrella_dns_default` is `false`
     * 
     */
    @Export(name="customDnsServerIp", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> customDnsServerIp;

    /**
     * @return Only relevant when `umbrella_dns_default` is `false`
     * 
     */
    public Output<Optional<String>> customDnsServerIp() {
        return Codegen.optional(this.customDnsServerIp);
    }
    /**
     * The description of the policy definition.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return The description of the policy definition.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Should DNSCrypt be enabled
     * 
     */
    @Export(name="dnscrypt", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dnscrypt;

    /**
     * @return Should DNSCrypt be enabled
     * 
     */
    public Output<Optional<Boolean>> dnscrypt() {
        return Codegen.optional(this.dnscrypt);
    }
    /**
     * Local domain bypass list ID
     * 
     */
    @Export(name="domainListId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> domainListId;

    /**
     * @return Local domain bypass list ID
     * 
     */
    public Output<Optional<String>> domainListId() {
        return Codegen.optional(this.domainListId);
    }
    /**
     * Local domain bypass list version
     * 
     */
    @Export(name="domainListVersion", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> domainListVersion;

    /**
     * @return Local domain bypass list version
     * 
     */
    public Output<Optional<Integer>> domainListVersion() {
        return Codegen.optional(this.domainListVersion);
    }
    /**
     * Should the local domain bypass list be enabled
     * 
     */
    @Export(name="localDomainBypassEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> localDomainBypassEnabled;

    /**
     * @return Should the local domain bypass list be enabled
     * 
     */
    public Output<Optional<Boolean>> localDomainBypassEnabled() {
        return Codegen.optional(this.localDomainBypassEnabled);
    }
    /**
     * Should use match all VPN
     * 
     */
    @Export(name="matchAllVpn", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> matchAllVpn;

    /**
     * @return Should use match all VPN
     * 
     */
    public Output<Boolean> matchAllVpn() {
        return this.matchAllVpn;
    }
    /**
     * The name of the policy definition.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the policy definition.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Only relevant when `match_all_vpn` is `false`
     * 
     */
    @Export(name="targetVpns", refs={List.class,DnsSecurityPolicyDefinitionTargetVpn.class}, tree="[0,1]")
    private Output</* @Nullable */ List<DnsSecurityPolicyDefinitionTargetVpn>> targetVpns;

    /**
     * @return Only relevant when `match_all_vpn` is `false`
     * 
     */
    public Output<Optional<List<DnsSecurityPolicyDefinitionTargetVpn>>> targetVpns() {
        return Codegen.optional(this.targetVpns);
    }
    /**
     * Should use umbrella as DNS Server
     * 
     */
    @Export(name="umbrellaDnsDefault", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> umbrellaDnsDefault;

    /**
     * @return Should use umbrella as DNS Server
     * 
     */
    public Output<Boolean> umbrellaDnsDefault() {
        return this.umbrellaDnsDefault;
    }
    /**
     * The version of the object
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the object
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DnsSecurityPolicyDefinition(String name) {
        this(name, DnsSecurityPolicyDefinitionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DnsSecurityPolicyDefinition(String name, DnsSecurityPolicyDefinitionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DnsSecurityPolicyDefinition(String name, DnsSecurityPolicyDefinitionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/dnsSecurityPolicyDefinition:DnsSecurityPolicyDefinition", name, args == null ? DnsSecurityPolicyDefinitionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DnsSecurityPolicyDefinition(String name, Output<String> id, @Nullable DnsSecurityPolicyDefinitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/dnsSecurityPolicyDefinition:DnsSecurityPolicyDefinition", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DnsSecurityPolicyDefinition get(String name, Output<String> id, @Nullable DnsSecurityPolicyDefinitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DnsSecurityPolicyDefinition(name, id, state, options);
    }
}
