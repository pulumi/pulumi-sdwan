// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.ServiceDhcpServerFeatureArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.ServiceDhcpServerFeatureState;
import com.pulumi.sdwan.outputs.ServiceDhcpServerFeatureOptionCode;
import com.pulumi.sdwan.outputs.ServiceDhcpServerFeatureStaticLease;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Service DHCP Server Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * Expected import identifier with the format: &#34;service_dhcp_server_feature_id,feature_profile_id&#34;
 * 
 * ```sh
 * $ pulumi import sdwan:index/serviceDhcpServerFeature:ServiceDhcpServerFeature example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/serviceDhcpServerFeature:ServiceDhcpServerFeature")
public class ServiceDhcpServerFeature extends com.pulumi.resources.CustomResource {
    /**
     * Set IP address of default gateway
     * 
     */
    @Export(name="defaultGateway", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> defaultGateway;

    /**
     * @return Set IP address of default gateway
     * 
     */
    public Output<Optional<String>> defaultGateway() {
        return Codegen.optional(this.defaultGateway);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="defaultGatewayVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> defaultGatewayVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> defaultGatewayVariable() {
        return Codegen.optional(this.defaultGatewayVariable);
    }
    /**
     * The description of the Feature
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Configure one or more DNS server IP addresses
     * 
     */
    @Export(name="dnsServers", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> dnsServers;

    /**
     * @return Configure one or more DNS server IP addresses
     * 
     */
    public Output<Optional<List<String>>> dnsServers() {
        return Codegen.optional(this.dnsServers);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="dnsServersVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dnsServersVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> dnsServersVariable() {
        return Codegen.optional(this.dnsServersVariable);
    }
    /**
     * Set domain name client uses to resolve hostnames
     * 
     */
    @Export(name="domainName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> domainName;

    /**
     * @return Set domain name client uses to resolve hostnames
     * 
     */
    public Output<Optional<String>> domainName() {
        return Codegen.optional(this.domainName);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="domainNameVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> domainNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> domainNameVariable() {
        return Codegen.optional(this.domainNameVariable);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="excludeVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> excludeVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> excludeVariable() {
        return Codegen.optional(this.excludeVariable);
    }
    /**
     * Configure IPv4 address to exclude from DHCP address pool
     * 
     */
    @Export(name="excludes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> excludes;

    /**
     * @return Configure IPv4 address to exclude from DHCP address pool
     * 
     */
    public Output<Optional<List<String>>> excludes() {
        return Codegen.optional(this.excludes);
    }
    /**
     * Feature Profile ID
     * 
     */
    @Export(name="featureProfileId", refs={String.class}, tree="[0]")
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * Set MTU on interface to DHCP client
     *   - Range: `68`-`65535`
     * 
     */
    @Export(name="interfaceMtu", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> interfaceMtu;

    /**
     * @return Set MTU on interface to DHCP client
     *   - Range: `68`-`65535`
     * 
     */
    public Output<Optional<Integer>> interfaceMtu() {
        return Codegen.optional(this.interfaceMtu);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="interfaceMtuVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interfaceMtuVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> interfaceMtuVariable() {
        return Codegen.optional(this.interfaceMtuVariable);
    }
    /**
     * Configure how long a DHCP-assigned IP address is valid
     *   - Range: `60`-`31536000`
     *   - Default value: `86400`
     * 
     */
    @Export(name="leaseTime", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> leaseTime;

    /**
     * @return Configure how long a DHCP-assigned IP address is valid
     *   - Range: `60`-`31536000`
     *   - Default value: `86400`
     * 
     */
    public Output<Optional<Integer>> leaseTime() {
        return Codegen.optional(this.leaseTime);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="leaseTimeVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> leaseTimeVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> leaseTimeVariable() {
        return Codegen.optional(this.leaseTimeVariable);
    }
    /**
     * The name of the Feature
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Network Address
     * 
     */
    @Export(name="networkAddress", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> networkAddress;

    /**
     * @return Network Address
     * 
     */
    public Output<Optional<String>> networkAddress() {
        return Codegen.optional(this.networkAddress);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="networkAddressVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> networkAddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> networkAddressVariable() {
        return Codegen.optional(this.networkAddressVariable);
    }
    /**
     * Configure Options Code
     * 
     */
    @Export(name="optionCodes", refs={List.class,ServiceDhcpServerFeatureOptionCode.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceDhcpServerFeatureOptionCode>> optionCodes;

    /**
     * @return Configure Options Code
     * 
     */
    public Output<Optional<List<ServiceDhcpServerFeatureOptionCode>>> optionCodes() {
        return Codegen.optional(this.optionCodes);
    }
    /**
     * Configure static IP addresses
     * 
     */
    @Export(name="staticLeases", refs={List.class,ServiceDhcpServerFeatureStaticLease.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceDhcpServerFeatureStaticLease>> staticLeases;

    /**
     * @return Configure static IP addresses
     * 
     */
    public Output<Optional<List<ServiceDhcpServerFeatureStaticLease>>> staticLeases() {
        return Codegen.optional(this.staticLeases);
    }
    /**
     * Subnet Mask
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     * 
     */
    @Export(name="subnetMask", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> subnetMask;

    /**
     * @return Subnet Mask
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     * 
     */
    public Output<Optional<String>> subnetMask() {
        return Codegen.optional(this.subnetMask);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="subnetMaskVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> subnetMaskVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> subnetMaskVariable() {
        return Codegen.optional(this.subnetMaskVariable);
    }
    /**
     * Configure TFTP server IP addresses
     * 
     */
    @Export(name="tftpServers", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tftpServers;

    /**
     * @return Configure TFTP server IP addresses
     * 
     */
    public Output<Optional<List<String>>> tftpServers() {
        return Codegen.optional(this.tftpServers);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="tftpServersVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tftpServersVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> tftpServersVariable() {
        return Codegen.optional(this.tftpServersVariable);
    }
    /**
     * The version of the Feature
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the Feature
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServiceDhcpServerFeature(java.lang.String name) {
        this(name, ServiceDhcpServerFeatureArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServiceDhcpServerFeature(java.lang.String name, ServiceDhcpServerFeatureArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServiceDhcpServerFeature(java.lang.String name, ServiceDhcpServerFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/serviceDhcpServerFeature:ServiceDhcpServerFeature", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ServiceDhcpServerFeature(java.lang.String name, Output<java.lang.String> id, @Nullable ServiceDhcpServerFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/serviceDhcpServerFeature:ServiceDhcpServerFeature", name, state, makeResourceOptions(options, id), false);
    }

    private static ServiceDhcpServerFeatureArgs makeArgs(ServiceDhcpServerFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ServiceDhcpServerFeatureArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServiceDhcpServerFeature get(java.lang.String name, Output<java.lang.String> id, @Nullable ServiceDhcpServerFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServiceDhcpServerFeature(name, id, state, options);
    }
}
