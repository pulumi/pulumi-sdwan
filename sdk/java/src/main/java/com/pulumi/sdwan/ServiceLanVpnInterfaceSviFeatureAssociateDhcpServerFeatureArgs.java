// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs Empty = new ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs();

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId", required=true)
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }

    /**
     * Service DHCP Server Feature ID
     * 
     */
    @Import(name="serviceDhcpServerFeatureId", required=true)
    private Output<String> serviceDhcpServerFeatureId;

    /**
     * @return Service DHCP Server Feature ID
     * 
     */
    public Output<String> serviceDhcpServerFeatureId() {
        return this.serviceDhcpServerFeatureId;
    }

    /**
     * Service LAN VPN Feature ID
     * 
     */
    @Import(name="serviceLanVpnFeatureId", required=true)
    private Output<String> serviceLanVpnFeatureId;

    /**
     * @return Service LAN VPN Feature ID
     * 
     */
    public Output<String> serviceLanVpnFeatureId() {
        return this.serviceLanVpnFeatureId;
    }

    /**
     * Service LAN VPN Interface SVI Feature ID
     * 
     */
    @Import(name="serviceLanVpnInterfaceSviFeatureId", required=true)
    private Output<String> serviceLanVpnInterfaceSviFeatureId;

    /**
     * @return Service LAN VPN Interface SVI Feature ID
     * 
     */
    public Output<String> serviceLanVpnInterfaceSviFeatureId() {
        return this.serviceLanVpnInterfaceSviFeatureId;
    }

    private ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs() {}

    private ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs(ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs $) {
        this.featureProfileId = $.featureProfileId;
        this.serviceDhcpServerFeatureId = $.serviceDhcpServerFeatureId;
        this.serviceLanVpnFeatureId = $.serviceLanVpnFeatureId;
        this.serviceLanVpnInterfaceSviFeatureId = $.serviceLanVpnInterfaceSviFeatureId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs $;

        public Builder() {
            $ = new ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs();
        }

        public Builder(ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs defaults) {
            $ = new ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param serviceDhcpServerFeatureId Service DHCP Server Feature ID
         * 
         * @return builder
         * 
         */
        public Builder serviceDhcpServerFeatureId(Output<String> serviceDhcpServerFeatureId) {
            $.serviceDhcpServerFeatureId = serviceDhcpServerFeatureId;
            return this;
        }

        /**
         * @param serviceDhcpServerFeatureId Service DHCP Server Feature ID
         * 
         * @return builder
         * 
         */
        public Builder serviceDhcpServerFeatureId(String serviceDhcpServerFeatureId) {
            return serviceDhcpServerFeatureId(Output.of(serviceDhcpServerFeatureId));
        }

        /**
         * @param serviceLanVpnFeatureId Service LAN VPN Feature ID
         * 
         * @return builder
         * 
         */
        public Builder serviceLanVpnFeatureId(Output<String> serviceLanVpnFeatureId) {
            $.serviceLanVpnFeatureId = serviceLanVpnFeatureId;
            return this;
        }

        /**
         * @param serviceLanVpnFeatureId Service LAN VPN Feature ID
         * 
         * @return builder
         * 
         */
        public Builder serviceLanVpnFeatureId(String serviceLanVpnFeatureId) {
            return serviceLanVpnFeatureId(Output.of(serviceLanVpnFeatureId));
        }

        /**
         * @param serviceLanVpnInterfaceSviFeatureId Service LAN VPN Interface SVI Feature ID
         * 
         * @return builder
         * 
         */
        public Builder serviceLanVpnInterfaceSviFeatureId(Output<String> serviceLanVpnInterfaceSviFeatureId) {
            $.serviceLanVpnInterfaceSviFeatureId = serviceLanVpnInterfaceSviFeatureId;
            return this;
        }

        /**
         * @param serviceLanVpnInterfaceSviFeatureId Service LAN VPN Interface SVI Feature ID
         * 
         * @return builder
         * 
         */
        public Builder serviceLanVpnInterfaceSviFeatureId(String serviceLanVpnInterfaceSviFeatureId) {
            return serviceLanVpnInterfaceSviFeatureId(Output.of(serviceLanVpnInterfaceSviFeatureId));
        }

        public ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs build() {
            if ($.featureProfileId == null) {
                throw new MissingRequiredPropertyException("ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs", "featureProfileId");
            }
            if ($.serviceDhcpServerFeatureId == null) {
                throw new MissingRequiredPropertyException("ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs", "serviceDhcpServerFeatureId");
            }
            if ($.serviceLanVpnFeatureId == null) {
                throw new MissingRequiredPropertyException("ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs", "serviceLanVpnFeatureId");
            }
            if ($.serviceLanVpnInterfaceSviFeatureId == null) {
                throw new MissingRequiredPropertyException("ServiceLanVpnInterfaceSviFeatureAssociateDhcpServerFeatureArgs", "serviceLanVpnInterfaceSviFeatureId");
            }
            return $;
        }
    }

}
