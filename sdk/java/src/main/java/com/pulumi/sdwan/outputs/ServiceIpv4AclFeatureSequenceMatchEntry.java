// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sdwan.outputs.ServiceIpv4AclFeatureSequenceMatchEntryDestinationPort;
import com.pulumi.sdwan.outputs.ServiceIpv4AclFeatureSequenceMatchEntrySourcePort;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceIpv4AclFeatureSequenceMatchEntry {
    /**
     * @return Destination Data IP Prefix
     * 
     */
    private @Nullable String destinationDataPrefix;
    private @Nullable String destinationDataPrefixListId;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String destinationDataPrefixVariable;
    /**
     * @return Destination Port List
     * 
     */
    private @Nullable List<ServiceIpv4AclFeatureSequenceMatchEntryDestinationPort> destinationPorts;
    /**
     * @return DSCP number
     * 
     */
    private @Nullable List<Integer> dscps;
    /**
     * @return ICMP Message
     * 
     */
    private @Nullable List<String> icmpMessages;
    /**
     * @return Packet Length
     * 
     */
    private @Nullable Integer packetLength;
    /**
     * @return protocol number list with at least one item
     * 
     */
    private @Nullable List<Integer> protocols;
    /**
     * @return Source Data IP Prefix
     * 
     */
    private @Nullable String sourceDataPrefix;
    private @Nullable String sourceDataPrefixListId;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String sourceDataPrefixVariable;
    /**
     * @return Source Port List
     * 
     */
    private @Nullable List<ServiceIpv4AclFeatureSequenceMatchEntrySourcePort> sourcePorts;
    /**
     * @return TCP States
     *   - Choices: `syn`
     * 
     */
    private @Nullable String tcpState;

    private ServiceIpv4AclFeatureSequenceMatchEntry() {}
    /**
     * @return Destination Data IP Prefix
     * 
     */
    public Optional<String> destinationDataPrefix() {
        return Optional.ofNullable(this.destinationDataPrefix);
    }
    public Optional<String> destinationDataPrefixListId() {
        return Optional.ofNullable(this.destinationDataPrefixListId);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> destinationDataPrefixVariable() {
        return Optional.ofNullable(this.destinationDataPrefixVariable);
    }
    /**
     * @return Destination Port List
     * 
     */
    public List<ServiceIpv4AclFeatureSequenceMatchEntryDestinationPort> destinationPorts() {
        return this.destinationPorts == null ? List.of() : this.destinationPorts;
    }
    /**
     * @return DSCP number
     * 
     */
    public List<Integer> dscps() {
        return this.dscps == null ? List.of() : this.dscps;
    }
    /**
     * @return ICMP Message
     * 
     */
    public List<String> icmpMessages() {
        return this.icmpMessages == null ? List.of() : this.icmpMessages;
    }
    /**
     * @return Packet Length
     * 
     */
    public Optional<Integer> packetLength() {
        return Optional.ofNullable(this.packetLength);
    }
    /**
     * @return protocol number list with at least one item
     * 
     */
    public List<Integer> protocols() {
        return this.protocols == null ? List.of() : this.protocols;
    }
    /**
     * @return Source Data IP Prefix
     * 
     */
    public Optional<String> sourceDataPrefix() {
        return Optional.ofNullable(this.sourceDataPrefix);
    }
    public Optional<String> sourceDataPrefixListId() {
        return Optional.ofNullable(this.sourceDataPrefixListId);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> sourceDataPrefixVariable() {
        return Optional.ofNullable(this.sourceDataPrefixVariable);
    }
    /**
     * @return Source Port List
     * 
     */
    public List<ServiceIpv4AclFeatureSequenceMatchEntrySourcePort> sourcePorts() {
        return this.sourcePorts == null ? List.of() : this.sourcePorts;
    }
    /**
     * @return TCP States
     *   - Choices: `syn`
     * 
     */
    public Optional<String> tcpState() {
        return Optional.ofNullable(this.tcpState);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceIpv4AclFeatureSequenceMatchEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String destinationDataPrefix;
        private @Nullable String destinationDataPrefixListId;
        private @Nullable String destinationDataPrefixVariable;
        private @Nullable List<ServiceIpv4AclFeatureSequenceMatchEntryDestinationPort> destinationPorts;
        private @Nullable List<Integer> dscps;
        private @Nullable List<String> icmpMessages;
        private @Nullable Integer packetLength;
        private @Nullable List<Integer> protocols;
        private @Nullable String sourceDataPrefix;
        private @Nullable String sourceDataPrefixListId;
        private @Nullable String sourceDataPrefixVariable;
        private @Nullable List<ServiceIpv4AclFeatureSequenceMatchEntrySourcePort> sourcePorts;
        private @Nullable String tcpState;
        public Builder() {}
        public Builder(ServiceIpv4AclFeatureSequenceMatchEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinationDataPrefix = defaults.destinationDataPrefix;
    	      this.destinationDataPrefixListId = defaults.destinationDataPrefixListId;
    	      this.destinationDataPrefixVariable = defaults.destinationDataPrefixVariable;
    	      this.destinationPorts = defaults.destinationPorts;
    	      this.dscps = defaults.dscps;
    	      this.icmpMessages = defaults.icmpMessages;
    	      this.packetLength = defaults.packetLength;
    	      this.protocols = defaults.protocols;
    	      this.sourceDataPrefix = defaults.sourceDataPrefix;
    	      this.sourceDataPrefixListId = defaults.sourceDataPrefixListId;
    	      this.sourceDataPrefixVariable = defaults.sourceDataPrefixVariable;
    	      this.sourcePorts = defaults.sourcePorts;
    	      this.tcpState = defaults.tcpState;
        }

        @CustomType.Setter
        public Builder destinationDataPrefix(@Nullable String destinationDataPrefix) {

            this.destinationDataPrefix = destinationDataPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder destinationDataPrefixListId(@Nullable String destinationDataPrefixListId) {

            this.destinationDataPrefixListId = destinationDataPrefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder destinationDataPrefixVariable(@Nullable String destinationDataPrefixVariable) {

            this.destinationDataPrefixVariable = destinationDataPrefixVariable;
            return this;
        }
        @CustomType.Setter
        public Builder destinationPorts(@Nullable List<ServiceIpv4AclFeatureSequenceMatchEntryDestinationPort> destinationPorts) {

            this.destinationPorts = destinationPorts;
            return this;
        }
        public Builder destinationPorts(ServiceIpv4AclFeatureSequenceMatchEntryDestinationPort... destinationPorts) {
            return destinationPorts(List.of(destinationPorts));
        }
        @CustomType.Setter
        public Builder dscps(@Nullable List<Integer> dscps) {

            this.dscps = dscps;
            return this;
        }
        public Builder dscps(Integer... dscps) {
            return dscps(List.of(dscps));
        }
        @CustomType.Setter
        public Builder icmpMessages(@Nullable List<String> icmpMessages) {

            this.icmpMessages = icmpMessages;
            return this;
        }
        public Builder icmpMessages(String... icmpMessages) {
            return icmpMessages(List.of(icmpMessages));
        }
        @CustomType.Setter
        public Builder packetLength(@Nullable Integer packetLength) {

            this.packetLength = packetLength;
            return this;
        }
        @CustomType.Setter
        public Builder protocols(@Nullable List<Integer> protocols) {

            this.protocols = protocols;
            return this;
        }
        public Builder protocols(Integer... protocols) {
            return protocols(List.of(protocols));
        }
        @CustomType.Setter
        public Builder sourceDataPrefix(@Nullable String sourceDataPrefix) {

            this.sourceDataPrefix = sourceDataPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDataPrefixListId(@Nullable String sourceDataPrefixListId) {

            this.sourceDataPrefixListId = sourceDataPrefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDataPrefixVariable(@Nullable String sourceDataPrefixVariable) {

            this.sourceDataPrefixVariable = sourceDataPrefixVariable;
            return this;
        }
        @CustomType.Setter
        public Builder sourcePorts(@Nullable List<ServiceIpv4AclFeatureSequenceMatchEntrySourcePort> sourcePorts) {

            this.sourcePorts = sourcePorts;
            return this;
        }
        public Builder sourcePorts(ServiceIpv4AclFeatureSequenceMatchEntrySourcePort... sourcePorts) {
            return sourcePorts(List.of(sourcePorts));
        }
        @CustomType.Setter
        public Builder tcpState(@Nullable String tcpState) {

            this.tcpState = tcpState;
            return this;
        }
        public ServiceIpv4AclFeatureSequenceMatchEntry build() {
            final var _resultValue = new ServiceIpv4AclFeatureSequenceMatchEntry();
            _resultValue.destinationDataPrefix = destinationDataPrefix;
            _resultValue.destinationDataPrefixListId = destinationDataPrefixListId;
            _resultValue.destinationDataPrefixVariable = destinationDataPrefixVariable;
            _resultValue.destinationPorts = destinationPorts;
            _resultValue.dscps = dscps;
            _resultValue.icmpMessages = icmpMessages;
            _resultValue.packetLength = packetLength;
            _resultValue.protocols = protocols;
            _resultValue.sourceDataPrefix = sourceDataPrefix;
            _resultValue.sourceDataPrefixListId = sourceDataPrefixListId;
            _resultValue.sourceDataPrefixVariable = sourceDataPrefixVariable;
            _resultValue.sourcePorts = sourcePorts;
            _resultValue.tcpState = tcpState;
            return _resultValue;
        }
    }
}
