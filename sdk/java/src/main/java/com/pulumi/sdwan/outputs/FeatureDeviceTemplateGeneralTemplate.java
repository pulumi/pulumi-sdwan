// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.FeatureDeviceTemplateGeneralTemplateSubTemplate;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FeatureDeviceTemplateGeneralTemplate {
    /**
     * @return Feature template ID
     * 
     */
    private String id;
    /**
     * @return List of sub templates
     * 
     */
    private @Nullable List<FeatureDeviceTemplateGeneralTemplateSubTemplate> subTemplates;
    /**
     * @return Feature template type
     *   - Choices: `cisco_system`, `cisco_logging`, `cedge_aaa`, `cisco_bfd`, `cisco_omp`, `cisco_security`, `cisco_banner`, `cisco_snmp`, `cedge_global`, `cli-template`, `cisco_sig_credentials`, `switchport`, `cisco_thousandeyes`, `cisco_vpn`, `virtual-application-utd`
     * 
     */
    private String type;
    /**
     * @return Feature template version
     * 
     */
    private @Nullable Integer version;

    private FeatureDeviceTemplateGeneralTemplate() {}
    /**
     * @return Feature template ID
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of sub templates
     * 
     */
    public List<FeatureDeviceTemplateGeneralTemplateSubTemplate> subTemplates() {
        return this.subTemplates == null ? List.of() : this.subTemplates;
    }
    /**
     * @return Feature template type
     *   - Choices: `cisco_system`, `cisco_logging`, `cedge_aaa`, `cisco_bfd`, `cisco_omp`, `cisco_security`, `cisco_banner`, `cisco_snmp`, `cedge_global`, `cli-template`, `cisco_sig_credentials`, `switchport`, `cisco_thousandeyes`, `cisco_vpn`, `virtual-application-utd`
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Feature template version
     * 
     */
    public Optional<Integer> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FeatureDeviceTemplateGeneralTemplate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable List<FeatureDeviceTemplateGeneralTemplateSubTemplate> subTemplates;
        private String type;
        private @Nullable Integer version;
        public Builder() {}
        public Builder(FeatureDeviceTemplateGeneralTemplate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.subTemplates = defaults.subTemplates;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("FeatureDeviceTemplateGeneralTemplate", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder subTemplates(@Nullable List<FeatureDeviceTemplateGeneralTemplateSubTemplate> subTemplates) {

            this.subTemplates = subTemplates;
            return this;
        }
        public Builder subTemplates(FeatureDeviceTemplateGeneralTemplateSubTemplate... subTemplates) {
            return subTemplates(List.of(subTemplates));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("FeatureDeviceTemplateGeneralTemplate", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable Integer version) {

            this.version = version;
            return this;
        }
        public FeatureDeviceTemplateGeneralTemplate build() {
            final var _resultValue = new FeatureDeviceTemplateGeneralTemplate();
            _resultValue.id = id;
            _resultValue.subTemplates = subTemplates;
            _resultValue.type = type;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
