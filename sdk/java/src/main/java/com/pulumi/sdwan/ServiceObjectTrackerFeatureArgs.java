// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceObjectTrackerFeatureArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceObjectTrackerFeatureArgs Empty = new ServiceObjectTrackerFeatureArgs();

    /**
     * The description of the Feature
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId", required=true)
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }

    /**
     * interface name
     * 
     */
    @Import(name="interface")
    private @Nullable Output<String> interface_;

    /**
     * @return interface name
     * 
     */
    public Optional<Output<String>> interface_() {
        return Optional.ofNullable(this.interface_);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceVariable")
    private @Nullable Output<String> interfaceVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceVariable() {
        return Optional.ofNullable(this.interfaceVariable);
    }

    /**
     * The name of the Feature
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Object tracker ID
     *   - Range: `1`-`1000`
     * 
     */
    @Import(name="objectTrackerId")
    private @Nullable Output<Integer> objectTrackerId;

    /**
     * @return Object tracker ID
     *   - Range: `1`-`1000`
     * 
     */
    public Optional<Output<Integer>> objectTrackerId() {
        return Optional.ofNullable(this.objectTrackerId);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="objectTrackerIdVariable")
    private @Nullable Output<String> objectTrackerIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> objectTrackerIdVariable() {
        return Optional.ofNullable(this.objectTrackerIdVariable);
    }

    /**
     * objectTrackerType:Interface SIG Route
     *   - Choices: `Interface`, `SIG`, `Route`
     * 
     */
    @Import(name="objectTrackerType", required=true)
    private Output<String> objectTrackerType;

    /**
     * @return objectTrackerType:Interface SIG Route
     *   - Choices: `Interface`, `SIG`, `Route`
     * 
     */
    public Output<String> objectTrackerType() {
        return this.objectTrackerType;
    }

    /**
     * IP address
     * 
     */
    @Import(name="routeIp")
    private @Nullable Output<String> routeIp;

    /**
     * @return IP address
     * 
     */
    public Optional<Output<String>> routeIp() {
        return Optional.ofNullable(this.routeIp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="routeIpVariable")
    private @Nullable Output<String> routeIpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> routeIpVariable() {
        return Optional.ofNullable(this.routeIpVariable);
    }

    /**
     * IP mask
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     *   - Default value: `0.0.0.0`
     * 
     */
    @Import(name="routeMask")
    private @Nullable Output<String> routeMask;

    /**
     * @return IP mask
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     *   - Default value: `0.0.0.0`
     * 
     */
    public Optional<Output<String>> routeMask() {
        return Optional.ofNullable(this.routeMask);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="routeMaskVariable")
    private @Nullable Output<String> routeMaskVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> routeMaskVariable() {
        return Optional.ofNullable(this.routeMaskVariable);
    }

    /**
     * VPN
     *   - Range: `0`-`65530`
     * 
     */
    @Import(name="vpn")
    private @Nullable Output<Integer> vpn;

    /**
     * @return VPN
     *   - Range: `0`-`65530`
     * 
     */
    public Optional<Output<Integer>> vpn() {
        return Optional.ofNullable(this.vpn);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="vpnVariable")
    private @Nullable Output<String> vpnVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> vpnVariable() {
        return Optional.ofNullable(this.vpnVariable);
    }

    private ServiceObjectTrackerFeatureArgs() {}

    private ServiceObjectTrackerFeatureArgs(ServiceObjectTrackerFeatureArgs $) {
        this.description = $.description;
        this.featureProfileId = $.featureProfileId;
        this.interface_ = $.interface_;
        this.interfaceVariable = $.interfaceVariable;
        this.name = $.name;
        this.objectTrackerId = $.objectTrackerId;
        this.objectTrackerIdVariable = $.objectTrackerIdVariable;
        this.objectTrackerType = $.objectTrackerType;
        this.routeIp = $.routeIp;
        this.routeIpVariable = $.routeIpVariable;
        this.routeMask = $.routeMask;
        this.routeMaskVariable = $.routeMaskVariable;
        this.vpn = $.vpn;
        this.vpnVariable = $.vpnVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceObjectTrackerFeatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceObjectTrackerFeatureArgs $;

        public Builder() {
            $ = new ServiceObjectTrackerFeatureArgs();
        }

        public Builder(ServiceObjectTrackerFeatureArgs defaults) {
            $ = new ServiceObjectTrackerFeatureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param interface_ interface name
         * 
         * @return builder
         * 
         */
        public Builder interface_(@Nullable Output<String> interface_) {
            $.interface_ = interface_;
            return this;
        }

        /**
         * @param interface_ interface name
         * 
         * @return builder
         * 
         */
        public Builder interface_(String interface_) {
            return interface_(Output.of(interface_));
        }

        /**
         * @param interfaceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceVariable(@Nullable Output<String> interfaceVariable) {
            $.interfaceVariable = interfaceVariable;
            return this;
        }

        /**
         * @param interfaceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceVariable(String interfaceVariable) {
            return interfaceVariable(Output.of(interfaceVariable));
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param objectTrackerId Object tracker ID
         *   - Range: `1`-`1000`
         * 
         * @return builder
         * 
         */
        public Builder objectTrackerId(@Nullable Output<Integer> objectTrackerId) {
            $.objectTrackerId = objectTrackerId;
            return this;
        }

        /**
         * @param objectTrackerId Object tracker ID
         *   - Range: `1`-`1000`
         * 
         * @return builder
         * 
         */
        public Builder objectTrackerId(Integer objectTrackerId) {
            return objectTrackerId(Output.of(objectTrackerId));
        }

        /**
         * @param objectTrackerIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder objectTrackerIdVariable(@Nullable Output<String> objectTrackerIdVariable) {
            $.objectTrackerIdVariable = objectTrackerIdVariable;
            return this;
        }

        /**
         * @param objectTrackerIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder objectTrackerIdVariable(String objectTrackerIdVariable) {
            return objectTrackerIdVariable(Output.of(objectTrackerIdVariable));
        }

        /**
         * @param objectTrackerType objectTrackerType:Interface SIG Route
         *   - Choices: `Interface`, `SIG`, `Route`
         * 
         * @return builder
         * 
         */
        public Builder objectTrackerType(Output<String> objectTrackerType) {
            $.objectTrackerType = objectTrackerType;
            return this;
        }

        /**
         * @param objectTrackerType objectTrackerType:Interface SIG Route
         *   - Choices: `Interface`, `SIG`, `Route`
         * 
         * @return builder
         * 
         */
        public Builder objectTrackerType(String objectTrackerType) {
            return objectTrackerType(Output.of(objectTrackerType));
        }

        /**
         * @param routeIp IP address
         * 
         * @return builder
         * 
         */
        public Builder routeIp(@Nullable Output<String> routeIp) {
            $.routeIp = routeIp;
            return this;
        }

        /**
         * @param routeIp IP address
         * 
         * @return builder
         * 
         */
        public Builder routeIp(String routeIp) {
            return routeIp(Output.of(routeIp));
        }

        /**
         * @param routeIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder routeIpVariable(@Nullable Output<String> routeIpVariable) {
            $.routeIpVariable = routeIpVariable;
            return this;
        }

        /**
         * @param routeIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder routeIpVariable(String routeIpVariable) {
            return routeIpVariable(Output.of(routeIpVariable));
        }

        /**
         * @param routeMask IP mask
         *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
         *   - Default value: `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder routeMask(@Nullable Output<String> routeMask) {
            $.routeMask = routeMask;
            return this;
        }

        /**
         * @param routeMask IP mask
         *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
         *   - Default value: `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder routeMask(String routeMask) {
            return routeMask(Output.of(routeMask));
        }

        /**
         * @param routeMaskVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder routeMaskVariable(@Nullable Output<String> routeMaskVariable) {
            $.routeMaskVariable = routeMaskVariable;
            return this;
        }

        /**
         * @param routeMaskVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder routeMaskVariable(String routeMaskVariable) {
            return routeMaskVariable(Output.of(routeMaskVariable));
        }

        /**
         * @param vpn VPN
         *   - Range: `0`-`65530`
         * 
         * @return builder
         * 
         */
        public Builder vpn(@Nullable Output<Integer> vpn) {
            $.vpn = vpn;
            return this;
        }

        /**
         * @param vpn VPN
         *   - Range: `0`-`65530`
         * 
         * @return builder
         * 
         */
        public Builder vpn(Integer vpn) {
            return vpn(Output.of(vpn));
        }

        /**
         * @param vpnVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vpnVariable(@Nullable Output<String> vpnVariable) {
            $.vpnVariable = vpnVariable;
            return this;
        }

        /**
         * @param vpnVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vpnVariable(String vpnVariable) {
            return vpnVariable(Output.of(vpnVariable));
        }

        public ServiceObjectTrackerFeatureArgs build() {
            if ($.featureProfileId == null) {
                throw new MissingRequiredPropertyException("ServiceObjectTrackerFeatureArgs", "featureProfileId");
            }
            if ($.objectTrackerType == null) {
                throw new MissingRequiredPropertyException("ServiceObjectTrackerFeatureArgs", "objectTrackerType");
            }
            return $;
        }
    }

}
