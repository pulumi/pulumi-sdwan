// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.CiscoWirelessLanFeatureTemplateSsidArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CiscoWirelessLanFeatureTemplateState extends com.pulumi.resources.ResourceArgs {

    public static final CiscoWirelessLanFeatureTemplateState Empty = new CiscoWirelessLanFeatureTemplateState();

    /**
     * Set mobile express default gateway
     *   - Default value: `0.0.0.0`
     * 
     */
    @Import(name="controllerDefaultGateway")
    private @Nullable Output<String> controllerDefaultGateway;

    /**
     * @return Set mobile express default gateway
     *   - Default value: `0.0.0.0`
     * 
     */
    public Optional<Output<String>> controllerDefaultGateway() {
        return Optional.ofNullable(this.controllerDefaultGateway);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="controllerDefaultGatewayVariable")
    private @Nullable Output<String> controllerDefaultGatewayVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> controllerDefaultGatewayVariable() {
        return Optional.ofNullable(this.controllerDefaultGatewayVariable);
    }

    /**
     * Set mobile express controller address
     *   - Default value: `0.0.0.0`
     * 
     */
    @Import(name="controllerIpAddress")
    private @Nullable Output<String> controllerIpAddress;

    /**
     * @return Set mobile express controller address
     *   - Default value: `0.0.0.0`
     * 
     */
    public Optional<Output<String>> controllerIpAddress() {
        return Optional.ofNullable(this.controllerIpAddress);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="controllerIpAddressVariable")
    private @Nullable Output<String> controllerIpAddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> controllerIpAddressVariable() {
        return Optional.ofNullable(this.controllerIpAddressVariable);
    }

    /**
     * Set mobile express controller subnet mask
     *   - Default value: `0.0.0.0`
     * 
     */
    @Import(name="controllerSubnetMask")
    private @Nullable Output<String> controllerSubnetMask;

    /**
     * @return Set mobile express controller subnet mask
     *   - Default value: `0.0.0.0`
     * 
     */
    public Optional<Output<String>> controllerSubnetMask() {
        return Optional.ofNullable(this.controllerSubnetMask);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="controllerSubnetMaskVariable")
    private @Nullable Output<String> controllerSubnetMaskVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> controllerSubnetMaskVariable() {
        return Optional.ofNullable(this.controllerSubnetMaskVariable);
    }

    /**
     * Select country
     *   - Choices: `AE`, `AR`, `AT`, `AU`, `BA`, `BB`, `BE`, `BG`, `BH`, `BN`, `BO`, `BR`, `BY`, `CA`, `CA2`, `CH`, `CL`, `CM`, `CN`, `CO`, `CR`, `CY`, `CZ`, `DE`, `DK`, `DO`, `DZ`, `EC`, `EE`, `EG`, `ES`, `FI`, `FJ`, `FR`, `GB`, `GH`, `GI`, `GR`, `HK`, `HR`, `HU`, `ID`, `IE`, `IL`, `IO`, `IN`, `IQ`, `IS`, `IT`, `J2`, `J4`, `JM`, `JO`, `KE`, `KN`, `KW`, `KZ`, `LB`, `LI`, `LK`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `ME`, `MK`, `MN`, `MO`, `MT`, `MX`, `MY`, `NL`, `NO`, `NZ`, `OM`, `PA`, `PE`, `PH`, `PH2`, `PK`, `PL`, `PR`, `PT`, `PY`, `QA`, `RO`, `RS`, `RU`, `SA`, `SE`, `SG`, `SI`, `SK`, `TH`, `TN`, `TR`, `TW`, `UA`, `US`, `UY`, `VE`, `VN`, `ZA`
     * 
     */
    @Import(name="country")
    private @Nullable Output<String> country;

    /**
     * @return Select country
     *   - Choices: `AE`, `AR`, `AT`, `AU`, `BA`, `BB`, `BE`, `BG`, `BH`, `BN`, `BO`, `BR`, `BY`, `CA`, `CA2`, `CH`, `CL`, `CM`, `CN`, `CO`, `CR`, `CY`, `CZ`, `DE`, `DK`, `DO`, `DZ`, `EC`, `EE`, `EG`, `ES`, `FI`, `FJ`, `FR`, `GB`, `GH`, `GI`, `GR`, `HK`, `HR`, `HU`, `ID`, `IE`, `IL`, `IO`, `IN`, `IQ`, `IS`, `IT`, `J2`, `J4`, `JM`, `JO`, `KE`, `KN`, `KW`, `KZ`, `LB`, `LI`, `LK`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `ME`, `MK`, `MN`, `MO`, `MT`, `MX`, `MY`, `NL`, `NO`, `NZ`, `OM`, `PA`, `PE`, `PH`, `PH2`, `PK`, `PL`, `PR`, `PT`, `PY`, `QA`, `RO`, `RS`, `RU`, `SA`, `SE`, `SG`, `SI`, `SK`, `TH`, `TN`, `TR`, `TW`, `UA`, `US`, `UY`, `VE`, `VN`, `ZA`
     * 
     */
    public Optional<Output<String>> country() {
        return Optional.ofNullable(this.country);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="countryVariable")
    private @Nullable Output<String> countryVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> countryVariable() {
        return Optional.ofNullable(this.countryVariable);
    }

    /**
     * The description of the feature template
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the feature template
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    @Import(name="deviceTypes")
    private @Nullable Output<List<String>> deviceTypes;

    /**
     * @return List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    public Optional<Output<List<String>>> deviceTypes() {
        return Optional.ofNullable(this.deviceTypes);
    }

    /**
     * The name of the feature template
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the feature template
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Set management password
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return Set management password
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="passwordVariable")
    private @Nullable Output<String> passwordVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> passwordVariable() {
        return Optional.ofNullable(this.passwordVariable);
    }

    /**
     * 2.4GHz Shutdown
     *   - Default value: `false`
     * 
     */
    @Import(name="shutdown24ghz")
    private @Nullable Output<Boolean> shutdown24ghz;

    /**
     * @return 2.4GHz Shutdown
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> shutdown24ghz() {
        return Optional.ofNullable(this.shutdown24ghz);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="shutdown24ghzVariable")
    private @Nullable Output<String> shutdown24ghzVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> shutdown24ghzVariable() {
        return Optional.ofNullable(this.shutdown24ghzVariable);
    }

    /**
     * 5GHz Shutdown
     *   - Default value: `false`
     * 
     */
    @Import(name="shutdown5ghz")
    private @Nullable Output<Boolean> shutdown5ghz;

    /**
     * @return 5GHz Shutdown
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> shutdown5ghz() {
        return Optional.ofNullable(this.shutdown5ghz);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="shutdown5ghzVariable")
    private @Nullable Output<String> shutdown5ghzVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> shutdown5ghzVariable() {
        return Optional.ofNullable(this.shutdown5ghzVariable);
    }

    /**
     * Configure Wi-Fi SSID
     * 
     */
    @Import(name="ssids")
    private @Nullable Output<List<CiscoWirelessLanFeatureTemplateSsidArgs>> ssids;

    /**
     * @return Configure Wi-Fi SSID
     * 
     */
    public Optional<Output<List<CiscoWirelessLanFeatureTemplateSsidArgs>>> ssids() {
        return Optional.ofNullable(this.ssids);
    }

    /**
     * The template type
     * 
     */
    @Import(name="templateType")
    private @Nullable Output<String> templateType;

    /**
     * @return The template type
     * 
     */
    public Optional<Output<String>> templateType() {
        return Optional.ofNullable(this.templateType);
    }

    /**
     * Set management username
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return Set management username
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="usernameVariable")
    private @Nullable Output<String> usernameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> usernameVariable() {
        return Optional.ofNullable(this.usernameVariable);
    }

    /**
     * The version of the feature template
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the feature template
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private CiscoWirelessLanFeatureTemplateState() {}

    private CiscoWirelessLanFeatureTemplateState(CiscoWirelessLanFeatureTemplateState $) {
        this.controllerDefaultGateway = $.controllerDefaultGateway;
        this.controllerDefaultGatewayVariable = $.controllerDefaultGatewayVariable;
        this.controllerIpAddress = $.controllerIpAddress;
        this.controllerIpAddressVariable = $.controllerIpAddressVariable;
        this.controllerSubnetMask = $.controllerSubnetMask;
        this.controllerSubnetMaskVariable = $.controllerSubnetMaskVariable;
        this.country = $.country;
        this.countryVariable = $.countryVariable;
        this.description = $.description;
        this.deviceTypes = $.deviceTypes;
        this.name = $.name;
        this.password = $.password;
        this.passwordVariable = $.passwordVariable;
        this.shutdown24ghz = $.shutdown24ghz;
        this.shutdown24ghzVariable = $.shutdown24ghzVariable;
        this.shutdown5ghz = $.shutdown5ghz;
        this.shutdown5ghzVariable = $.shutdown5ghzVariable;
        this.ssids = $.ssids;
        this.templateType = $.templateType;
        this.username = $.username;
        this.usernameVariable = $.usernameVariable;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CiscoWirelessLanFeatureTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CiscoWirelessLanFeatureTemplateState $;

        public Builder() {
            $ = new CiscoWirelessLanFeatureTemplateState();
        }

        public Builder(CiscoWirelessLanFeatureTemplateState defaults) {
            $ = new CiscoWirelessLanFeatureTemplateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param controllerDefaultGateway Set mobile express default gateway
         *   - Default value: `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder controllerDefaultGateway(@Nullable Output<String> controllerDefaultGateway) {
            $.controllerDefaultGateway = controllerDefaultGateway;
            return this;
        }

        /**
         * @param controllerDefaultGateway Set mobile express default gateway
         *   - Default value: `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder controllerDefaultGateway(String controllerDefaultGateway) {
            return controllerDefaultGateway(Output.of(controllerDefaultGateway));
        }

        /**
         * @param controllerDefaultGatewayVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder controllerDefaultGatewayVariable(@Nullable Output<String> controllerDefaultGatewayVariable) {
            $.controllerDefaultGatewayVariable = controllerDefaultGatewayVariable;
            return this;
        }

        /**
         * @param controllerDefaultGatewayVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder controllerDefaultGatewayVariable(String controllerDefaultGatewayVariable) {
            return controllerDefaultGatewayVariable(Output.of(controllerDefaultGatewayVariable));
        }

        /**
         * @param controllerIpAddress Set mobile express controller address
         *   - Default value: `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder controllerIpAddress(@Nullable Output<String> controllerIpAddress) {
            $.controllerIpAddress = controllerIpAddress;
            return this;
        }

        /**
         * @param controllerIpAddress Set mobile express controller address
         *   - Default value: `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder controllerIpAddress(String controllerIpAddress) {
            return controllerIpAddress(Output.of(controllerIpAddress));
        }

        /**
         * @param controllerIpAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder controllerIpAddressVariable(@Nullable Output<String> controllerIpAddressVariable) {
            $.controllerIpAddressVariable = controllerIpAddressVariable;
            return this;
        }

        /**
         * @param controllerIpAddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder controllerIpAddressVariable(String controllerIpAddressVariable) {
            return controllerIpAddressVariable(Output.of(controllerIpAddressVariable));
        }

        /**
         * @param controllerSubnetMask Set mobile express controller subnet mask
         *   - Default value: `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder controllerSubnetMask(@Nullable Output<String> controllerSubnetMask) {
            $.controllerSubnetMask = controllerSubnetMask;
            return this;
        }

        /**
         * @param controllerSubnetMask Set mobile express controller subnet mask
         *   - Default value: `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder controllerSubnetMask(String controllerSubnetMask) {
            return controllerSubnetMask(Output.of(controllerSubnetMask));
        }

        /**
         * @param controllerSubnetMaskVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder controllerSubnetMaskVariable(@Nullable Output<String> controllerSubnetMaskVariable) {
            $.controllerSubnetMaskVariable = controllerSubnetMaskVariable;
            return this;
        }

        /**
         * @param controllerSubnetMaskVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder controllerSubnetMaskVariable(String controllerSubnetMaskVariable) {
            return controllerSubnetMaskVariable(Output.of(controllerSubnetMaskVariable));
        }

        /**
         * @param country Select country
         *   - Choices: `AE`, `AR`, `AT`, `AU`, `BA`, `BB`, `BE`, `BG`, `BH`, `BN`, `BO`, `BR`, `BY`, `CA`, `CA2`, `CH`, `CL`, `CM`, `CN`, `CO`, `CR`, `CY`, `CZ`, `DE`, `DK`, `DO`, `DZ`, `EC`, `EE`, `EG`, `ES`, `FI`, `FJ`, `FR`, `GB`, `GH`, `GI`, `GR`, `HK`, `HR`, `HU`, `ID`, `IE`, `IL`, `IO`, `IN`, `IQ`, `IS`, `IT`, `J2`, `J4`, `JM`, `JO`, `KE`, `KN`, `KW`, `KZ`, `LB`, `LI`, `LK`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `ME`, `MK`, `MN`, `MO`, `MT`, `MX`, `MY`, `NL`, `NO`, `NZ`, `OM`, `PA`, `PE`, `PH`, `PH2`, `PK`, `PL`, `PR`, `PT`, `PY`, `QA`, `RO`, `RS`, `RU`, `SA`, `SE`, `SG`, `SI`, `SK`, `TH`, `TN`, `TR`, `TW`, `UA`, `US`, `UY`, `VE`, `VN`, `ZA`
         * 
         * @return builder
         * 
         */
        public Builder country(@Nullable Output<String> country) {
            $.country = country;
            return this;
        }

        /**
         * @param country Select country
         *   - Choices: `AE`, `AR`, `AT`, `AU`, `BA`, `BB`, `BE`, `BG`, `BH`, `BN`, `BO`, `BR`, `BY`, `CA`, `CA2`, `CH`, `CL`, `CM`, `CN`, `CO`, `CR`, `CY`, `CZ`, `DE`, `DK`, `DO`, `DZ`, `EC`, `EE`, `EG`, `ES`, `FI`, `FJ`, `FR`, `GB`, `GH`, `GI`, `GR`, `HK`, `HR`, `HU`, `ID`, `IE`, `IL`, `IO`, `IN`, `IQ`, `IS`, `IT`, `J2`, `J4`, `JM`, `JO`, `KE`, `KN`, `KW`, `KZ`, `LB`, `LI`, `LK`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `ME`, `MK`, `MN`, `MO`, `MT`, `MX`, `MY`, `NL`, `NO`, `NZ`, `OM`, `PA`, `PE`, `PH`, `PH2`, `PK`, `PL`, `PR`, `PT`, `PY`, `QA`, `RO`, `RS`, `RU`, `SA`, `SE`, `SG`, `SI`, `SK`, `TH`, `TN`, `TR`, `TW`, `UA`, `US`, `UY`, `VE`, `VN`, `ZA`
         * 
         * @return builder
         * 
         */
        public Builder country(String country) {
            return country(Output.of(country));
        }

        /**
         * @param countryVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder countryVariable(@Nullable Output<String> countryVariable) {
            $.countryVariable = countryVariable;
            return this;
        }

        /**
         * @param countryVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder countryVariable(String countryVariable) {
            return countryVariable(Output.of(countryVariable));
        }

        /**
         * @param description The description of the feature template
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the feature template
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param deviceTypes List of supported device types
         *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(@Nullable Output<List<String>> deviceTypes) {
            $.deviceTypes = deviceTypes;
            return this;
        }

        /**
         * @param deviceTypes List of supported device types
         *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(List<String> deviceTypes) {
            return deviceTypes(Output.of(deviceTypes));
        }

        /**
         * @param deviceTypes List of supported device types
         *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
         * 
         * @return builder
         * 
         */
        public Builder deviceTypes(String... deviceTypes) {
            return deviceTypes(List.of(deviceTypes));
        }

        /**
         * @param name The name of the feature template
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the feature template
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param password Set management password
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Set management password
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param passwordVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder passwordVariable(@Nullable Output<String> passwordVariable) {
            $.passwordVariable = passwordVariable;
            return this;
        }

        /**
         * @param passwordVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder passwordVariable(String passwordVariable) {
            return passwordVariable(Output.of(passwordVariable));
        }

        /**
         * @param shutdown24ghz 2.4GHz Shutdown
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder shutdown24ghz(@Nullable Output<Boolean> shutdown24ghz) {
            $.shutdown24ghz = shutdown24ghz;
            return this;
        }

        /**
         * @param shutdown24ghz 2.4GHz Shutdown
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder shutdown24ghz(Boolean shutdown24ghz) {
            return shutdown24ghz(Output.of(shutdown24ghz));
        }

        /**
         * @param shutdown24ghzVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdown24ghzVariable(@Nullable Output<String> shutdown24ghzVariable) {
            $.shutdown24ghzVariable = shutdown24ghzVariable;
            return this;
        }

        /**
         * @param shutdown24ghzVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdown24ghzVariable(String shutdown24ghzVariable) {
            return shutdown24ghzVariable(Output.of(shutdown24ghzVariable));
        }

        /**
         * @param shutdown5ghz 5GHz Shutdown
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder shutdown5ghz(@Nullable Output<Boolean> shutdown5ghz) {
            $.shutdown5ghz = shutdown5ghz;
            return this;
        }

        /**
         * @param shutdown5ghz 5GHz Shutdown
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder shutdown5ghz(Boolean shutdown5ghz) {
            return shutdown5ghz(Output.of(shutdown5ghz));
        }

        /**
         * @param shutdown5ghzVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdown5ghzVariable(@Nullable Output<String> shutdown5ghzVariable) {
            $.shutdown5ghzVariable = shutdown5ghzVariable;
            return this;
        }

        /**
         * @param shutdown5ghzVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdown5ghzVariable(String shutdown5ghzVariable) {
            return shutdown5ghzVariable(Output.of(shutdown5ghzVariable));
        }

        /**
         * @param ssids Configure Wi-Fi SSID
         * 
         * @return builder
         * 
         */
        public Builder ssids(@Nullable Output<List<CiscoWirelessLanFeatureTemplateSsidArgs>> ssids) {
            $.ssids = ssids;
            return this;
        }

        /**
         * @param ssids Configure Wi-Fi SSID
         * 
         * @return builder
         * 
         */
        public Builder ssids(List<CiscoWirelessLanFeatureTemplateSsidArgs> ssids) {
            return ssids(Output.of(ssids));
        }

        /**
         * @param ssids Configure Wi-Fi SSID
         * 
         * @return builder
         * 
         */
        public Builder ssids(CiscoWirelessLanFeatureTemplateSsidArgs... ssids) {
            return ssids(List.of(ssids));
        }

        /**
         * @param templateType The template type
         * 
         * @return builder
         * 
         */
        public Builder templateType(@Nullable Output<String> templateType) {
            $.templateType = templateType;
            return this;
        }

        /**
         * @param templateType The template type
         * 
         * @return builder
         * 
         */
        public Builder templateType(String templateType) {
            return templateType(Output.of(templateType));
        }

        /**
         * @param username Set management username
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username Set management username
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        /**
         * @param usernameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder usernameVariable(@Nullable Output<String> usernameVariable) {
            $.usernameVariable = usernameVariable;
            return this;
        }

        /**
         * @param usernameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder usernameVariable(String usernameVariable) {
            return usernameVariable(Output.of(usernameVariable));
        }

        /**
         * @param version The version of the feature template
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the feature template
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public CiscoWirelessLanFeatureTemplateState build() {
            return $;
        }
    }

}
