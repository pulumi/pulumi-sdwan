// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceLanVpnFeatureNatPortForwardArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceLanVpnFeatureNatPortForwardArgs Empty = new ServiceLanVpnFeatureNatPortForwardArgs();

    /**
     * NAT Pool Name
     *   - Range: `1`-`32`
     * 
     */
    @Import(name="natPoolName")
    private @Nullable Output<Integer> natPoolName;

    /**
     * @return NAT Pool Name
     *   - Range: `1`-`32`
     * 
     */
    public Optional<Output<Integer>> natPoolName() {
        return Optional.ofNullable(this.natPoolName);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="natPoolNameVariable")
    private @Nullable Output<String> natPoolNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> natPoolNameVariable() {
        return Optional.ofNullable(this.natPoolNameVariable);
    }

    /**
     * Protocol
     *   - Choices: `TCP`, `UDP`
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return Protocol
     *   - Choices: `TCP`, `UDP`
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="protocolVariable")
    private @Nullable Output<String> protocolVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> protocolVariable() {
        return Optional.ofNullable(this.protocolVariable);
    }

    /**
     * Source IP Address
     * 
     */
    @Import(name="sourceIp")
    private @Nullable Output<String> sourceIp;

    /**
     * @return Source IP Address
     * 
     */
    public Optional<Output<String>> sourceIp() {
        return Optional.ofNullable(this.sourceIp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sourceIpVariable")
    private @Nullable Output<String> sourceIpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sourceIpVariable() {
        return Optional.ofNullable(this.sourceIpVariable);
    }

    /**
     * Source Port
     * 
     */
    @Import(name="sourcePort")
    private @Nullable Output<Integer> sourcePort;

    /**
     * @return Source Port
     * 
     */
    public Optional<Output<Integer>> sourcePort() {
        return Optional.ofNullable(this.sourcePort);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="sourcePortVariable")
    private @Nullable Output<String> sourcePortVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> sourcePortVariable() {
        return Optional.ofNullable(this.sourcePortVariable);
    }

    /**
     * Translate Port
     * 
     */
    @Import(name="translatePort")
    private @Nullable Output<Integer> translatePort;

    /**
     * @return Translate Port
     * 
     */
    public Optional<Output<Integer>> translatePort() {
        return Optional.ofNullable(this.translatePort);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="translatePortVariable")
    private @Nullable Output<String> translatePortVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> translatePortVariable() {
        return Optional.ofNullable(this.translatePortVariable);
    }

    /**
     * Translated Source IP Address
     * 
     */
    @Import(name="translatedSourceIp")
    private @Nullable Output<String> translatedSourceIp;

    /**
     * @return Translated Source IP Address
     * 
     */
    public Optional<Output<String>> translatedSourceIp() {
        return Optional.ofNullable(this.translatedSourceIp);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="translatedSourceIpVariable")
    private @Nullable Output<String> translatedSourceIpVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> translatedSourceIpVariable() {
        return Optional.ofNullable(this.translatedSourceIpVariable);
    }

    private ServiceLanVpnFeatureNatPortForwardArgs() {}

    private ServiceLanVpnFeatureNatPortForwardArgs(ServiceLanVpnFeatureNatPortForwardArgs $) {
        this.natPoolName = $.natPoolName;
        this.natPoolNameVariable = $.natPoolNameVariable;
        this.protocol = $.protocol;
        this.protocolVariable = $.protocolVariable;
        this.sourceIp = $.sourceIp;
        this.sourceIpVariable = $.sourceIpVariable;
        this.sourcePort = $.sourcePort;
        this.sourcePortVariable = $.sourcePortVariable;
        this.translatePort = $.translatePort;
        this.translatePortVariable = $.translatePortVariable;
        this.translatedSourceIp = $.translatedSourceIp;
        this.translatedSourceIpVariable = $.translatedSourceIpVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceLanVpnFeatureNatPortForwardArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceLanVpnFeatureNatPortForwardArgs $;

        public Builder() {
            $ = new ServiceLanVpnFeatureNatPortForwardArgs();
        }

        public Builder(ServiceLanVpnFeatureNatPortForwardArgs defaults) {
            $ = new ServiceLanVpnFeatureNatPortForwardArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param natPoolName NAT Pool Name
         *   - Range: `1`-`32`
         * 
         * @return builder
         * 
         */
        public Builder natPoolName(@Nullable Output<Integer> natPoolName) {
            $.natPoolName = natPoolName;
            return this;
        }

        /**
         * @param natPoolName NAT Pool Name
         *   - Range: `1`-`32`
         * 
         * @return builder
         * 
         */
        public Builder natPoolName(Integer natPoolName) {
            return natPoolName(Output.of(natPoolName));
        }

        /**
         * @param natPoolNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natPoolNameVariable(@Nullable Output<String> natPoolNameVariable) {
            $.natPoolNameVariable = natPoolNameVariable;
            return this;
        }

        /**
         * @param natPoolNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natPoolNameVariable(String natPoolNameVariable) {
            return natPoolNameVariable(Output.of(natPoolNameVariable));
        }

        /**
         * @param protocol Protocol
         *   - Choices: `TCP`, `UDP`
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol Protocol
         *   - Choices: `TCP`, `UDP`
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param protocolVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder protocolVariable(@Nullable Output<String> protocolVariable) {
            $.protocolVariable = protocolVariable;
            return this;
        }

        /**
         * @param protocolVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder protocolVariable(String protocolVariable) {
            return protocolVariable(Output.of(protocolVariable));
        }

        /**
         * @param sourceIp Source IP Address
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(@Nullable Output<String> sourceIp) {
            $.sourceIp = sourceIp;
            return this;
        }

        /**
         * @param sourceIp Source IP Address
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(String sourceIp) {
            return sourceIp(Output.of(sourceIp));
        }

        /**
         * @param sourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceIpVariable(@Nullable Output<String> sourceIpVariable) {
            $.sourceIpVariable = sourceIpVariable;
            return this;
        }

        /**
         * @param sourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourceIpVariable(String sourceIpVariable) {
            return sourceIpVariable(Output.of(sourceIpVariable));
        }

        /**
         * @param sourcePort Source Port
         * 
         * @return builder
         * 
         */
        public Builder sourcePort(@Nullable Output<Integer> sourcePort) {
            $.sourcePort = sourcePort;
            return this;
        }

        /**
         * @param sourcePort Source Port
         * 
         * @return builder
         * 
         */
        public Builder sourcePort(Integer sourcePort) {
            return sourcePort(Output.of(sourcePort));
        }

        /**
         * @param sourcePortVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourcePortVariable(@Nullable Output<String> sourcePortVariable) {
            $.sourcePortVariable = sourcePortVariable;
            return this;
        }

        /**
         * @param sourcePortVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder sourcePortVariable(String sourcePortVariable) {
            return sourcePortVariable(Output.of(sourcePortVariable));
        }

        /**
         * @param translatePort Translate Port
         * 
         * @return builder
         * 
         */
        public Builder translatePort(@Nullable Output<Integer> translatePort) {
            $.translatePort = translatePort;
            return this;
        }

        /**
         * @param translatePort Translate Port
         * 
         * @return builder
         * 
         */
        public Builder translatePort(Integer translatePort) {
            return translatePort(Output.of(translatePort));
        }

        /**
         * @param translatePortVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder translatePortVariable(@Nullable Output<String> translatePortVariable) {
            $.translatePortVariable = translatePortVariable;
            return this;
        }

        /**
         * @param translatePortVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder translatePortVariable(String translatePortVariable) {
            return translatePortVariable(Output.of(translatePortVariable));
        }

        /**
         * @param translatedSourceIp Translated Source IP Address
         * 
         * @return builder
         * 
         */
        public Builder translatedSourceIp(@Nullable Output<String> translatedSourceIp) {
            $.translatedSourceIp = translatedSourceIp;
            return this;
        }

        /**
         * @param translatedSourceIp Translated Source IP Address
         * 
         * @return builder
         * 
         */
        public Builder translatedSourceIp(String translatedSourceIp) {
            return translatedSourceIp(Output.of(translatedSourceIp));
        }

        /**
         * @param translatedSourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder translatedSourceIpVariable(@Nullable Output<String> translatedSourceIpVariable) {
            $.translatedSourceIpVariable = translatedSourceIpVariable;
            return this;
        }

        /**
         * @param translatedSourceIpVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder translatedSourceIpVariable(String translatedSourceIpVariable) {
            return translatedSourceIpVariable(Output.of(translatedSourceIpVariable));
        }

        public ServiceLanVpnFeatureNatPortForwardArgs build() {
            return $;
        }
    }

}
