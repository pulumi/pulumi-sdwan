// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CiscoVpnFeatureTemplateDnsHostArgs extends com.pulumi.resources.ResourceArgs {

    public static final CiscoVpnFeatureTemplateDnsHostArgs Empty = new CiscoVpnFeatureTemplateDnsHostArgs();

    /**
     * Hostname
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return Hostname
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="hostnameVariable")
    private @Nullable Output<String> hostnameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> hostnameVariable() {
        return Optional.ofNullable(this.hostnameVariable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ipVariable")
    private @Nullable Output<String> ipVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ipVariable() {
        return Optional.ofNullable(this.ipVariable);
    }

    /**
     * List of IP
     * 
     */
    @Import(name="ips")
    private @Nullable Output<List<String>> ips;

    /**
     * @return List of IP
     * 
     */
    public Optional<Output<List<String>>> ips() {
        return Optional.ofNullable(this.ips);
    }

    /**
     * Indicates if list item is considered optional.
     * 
     */
    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    private CiscoVpnFeatureTemplateDnsHostArgs() {}

    private CiscoVpnFeatureTemplateDnsHostArgs(CiscoVpnFeatureTemplateDnsHostArgs $) {
        this.hostname = $.hostname;
        this.hostnameVariable = $.hostnameVariable;
        this.ipVariable = $.ipVariable;
        this.ips = $.ips;
        this.optional = $.optional;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CiscoVpnFeatureTemplateDnsHostArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CiscoVpnFeatureTemplateDnsHostArgs $;

        public Builder() {
            $ = new CiscoVpnFeatureTemplateDnsHostArgs();
        }

        public Builder(CiscoVpnFeatureTemplateDnsHostArgs defaults) {
            $ = new CiscoVpnFeatureTemplateDnsHostArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostname Hostname
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname Hostname
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param hostnameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder hostnameVariable(@Nullable Output<String> hostnameVariable) {
            $.hostnameVariable = hostnameVariable;
            return this;
        }

        /**
         * @param hostnameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder hostnameVariable(String hostnameVariable) {
            return hostnameVariable(Output.of(hostnameVariable));
        }

        /**
         * @param ipVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipVariable(@Nullable Output<String> ipVariable) {
            $.ipVariable = ipVariable;
            return this;
        }

        /**
         * @param ipVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ipVariable(String ipVariable) {
            return ipVariable(Output.of(ipVariable));
        }

        /**
         * @param ips List of IP
         * 
         * @return builder
         * 
         */
        public Builder ips(@Nullable Output<List<String>> ips) {
            $.ips = ips;
            return this;
        }

        /**
         * @param ips List of IP
         * 
         * @return builder
         * 
         */
        public Builder ips(List<String> ips) {
            return ips(Output.of(ips));
        }

        /**
         * @param ips List of IP
         * 
         * @return builder
         * 
         */
        public Builder ips(String... ips) {
            return ips(List.of(ips));
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        public CiscoVpnFeatureTemplateDnsHostArgs build() {
            return $;
        }
    }

}
