// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.CiscoBgpFeatureTemplateArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.CiscoBgpFeatureTemplateState;
import com.pulumi.sdwan.outputs.CiscoBgpFeatureTemplateAddressFamily;
import com.pulumi.sdwan.outputs.CiscoBgpFeatureTemplateIpv4Neighbor;
import com.pulumi.sdwan.outputs.CiscoBgpFeatureTemplateIpv4RouteTarget;
import com.pulumi.sdwan.outputs.CiscoBgpFeatureTemplateIpv6Neighbor;
import com.pulumi.sdwan.outputs.CiscoBgpFeatureTemplateIpv6RouteTarget;
import com.pulumi.sdwan.outputs.CiscoBgpFeatureTemplateMplsInterface;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Cisco BGP feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sdwan.CiscoBgpFeatureTemplate;
 * import com.pulumi.sdwan.CiscoBgpFeatureTemplateArgs;
 * import com.pulumi.sdwan.inputs.CiscoBgpFeatureTemplateIpv4RouteTargetArgs;
 * import com.pulumi.sdwan.inputs.CiscoBgpFeatureTemplateIpv6RouteTargetArgs;
 * import com.pulumi.sdwan.inputs.CiscoBgpFeatureTemplateMplsInterfaceArgs;
 * import com.pulumi.sdwan.inputs.CiscoBgpFeatureTemplateAddressFamilyArgs;
 * import com.pulumi.sdwan.inputs.CiscoBgpFeatureTemplateIpv4NeighborArgs;
 * import com.pulumi.sdwan.inputs.CiscoBgpFeatureTemplateIpv6NeighborArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new CiscoBgpFeatureTemplate(&#34;example&#34;, CiscoBgpFeatureTemplateArgs.builder()        
 *             .name(&#34;Example&#34;)
 *             .description(&#34;My Example&#34;)
 *             .deviceTypes(&#34;vedge-C8000V&#34;)
 *             .asNumber(&#34;65000&#34;)
 *             .shutdown(true)
 *             .routerId(&#34;1.2.3.4&#34;)
 *             .propagateAspath(true)
 *             .propagateCommunity(true)
 *             .ipv4RouteTargets(CiscoBgpFeatureTemplateIpv4RouteTargetArgs.builder()
 *                 .vpn_id(1)
 *                 .export(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .import_(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .build())
 *             .ipv6RouteTargets(CiscoBgpFeatureTemplateIpv6RouteTargetArgs.builder()
 *                 .vpn_id(1)
 *                 .export(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .import_(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .build())
 *             .mplsInterfaces(CiscoBgpFeatureTemplateMplsInterfaceArgs.builder()
 *                 .interface_name(&#34;GigabitEthernet0&#34;)
 *                 .build())
 *             .distanceExternal(30)
 *             .distanceInternal(210)
 *             .distanceLocal(30)
 *             .keepalive(90)
 *             .holdtime(220)
 *             .alwaysCompareMed(true)
 *             .deterministicMed(true)
 *             .missingMedWorst(true)
 *             .compareRouterId(true)
 *             .multipathRelax(true)
 *             .addressFamilies(CiscoBgpFeatureTemplateAddressFamilyArgs.builder()
 *                 .family_type(&#34;ipv4-unicast&#34;)
 *                 .ipv4_aggregate_addresses(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .ipv4_networks(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .maximum_paths(8)
 *                 .default_information_originate(true)
 *                 .table_map_policy(&#34;MAP1&#34;)
 *                 .table_map_filter(true)
 *                 .redistribute_routes(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .build())
 *             .ipv4Neighbors(CiscoBgpFeatureTemplateIpv4NeighborArgs.builder()
 *                 .address(&#34;10.2.2.2&#34;)
 *                 .description(&#34;My neighbor&#34;)
 *                 .shutdown(true)
 *                 .remote_as(&#34;65001&#34;)
 *                 .keepalive(30)
 *                 .holdtime(90)
 *                 .source_interface(&#34;GigabitEthernet1&#34;)
 *                 .next_hop_self(true)
 *                 .send_community(false)
 *                 .send_ext_community(false)
 *                 .ebgp_multihop(10)
 *                 .password(&#34;cisco123&#34;)
 *                 .send_label(true)
 *                 .send_label_explicit(true)
 *                 .as_override(true)
 *                 .allow_as_in(5)
 *                 .address_families(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .build())
 *             .ipv6Neighbors(CiscoBgpFeatureTemplateIpv6NeighborArgs.builder()
 *                 .address(&#34;2001:1::1&#34;)
 *                 .description(&#34;My neighbor&#34;)
 *                 .shutdown(true)
 *                 .remote_as(&#34;65001&#34;)
 *                 .keepalive(30)
 *                 .holdtime(90)
 *                 .source_interface(&#34;GigabitEthernet1&#34;)
 *                 .next_hop_self(true)
 *                 .send_community(false)
 *                 .send_ext_community(false)
 *                 .ebgp_multihop(10)
 *                 .password(&#34;cisco123&#34;)
 *                 .send_label(true)
 *                 .send_label_explicit(true)
 *                 .as_override(true)
 *                 .allow_as_in(5)
 *                 .address_families(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import sdwan:index/ciscoBgpFeatureTemplate:CiscoBgpFeatureTemplate example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/ciscoBgpFeatureTemplate:CiscoBgpFeatureTemplate")
public class CiscoBgpFeatureTemplate extends com.pulumi.resources.CustomResource {
    /**
     * Set BGP address family
     * 
     */
    @Export(name="addressFamilies", refs={List.class,CiscoBgpFeatureTemplateAddressFamily.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CiscoBgpFeatureTemplateAddressFamily>> addressFamilies;

    /**
     * @return Set BGP address family
     * 
     */
    public Output<Optional<List<CiscoBgpFeatureTemplateAddressFamily>>> addressFamilies() {
        return Codegen.optional(this.addressFamilies);
    }
    /**
     * Compare MEDs from all ASs when selecting active BGP paths - Default value: `false`
     * 
     */
    @Export(name="alwaysCompareMed", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> alwaysCompareMed;

    /**
     * @return Compare MEDs from all ASs when selecting active BGP paths - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> alwaysCompareMed() {
        return Codegen.optional(this.alwaysCompareMed);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="alwaysCompareMedVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> alwaysCompareMedVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> alwaysCompareMedVariable() {
        return Codegen.optional(this.alwaysCompareMedVariable);
    }
    /**
     * Set autonomous system number &lt;1..4294967295&gt; or &lt;XX.YY&gt;
     * 
     */
    @Export(name="asNumber", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> asNumber;

    /**
     * @return Set autonomous system number &lt;1..4294967295&gt; or &lt;XX.YY&gt;
     * 
     */
    public Output<Optional<String>> asNumber() {
        return Codegen.optional(this.asNumber);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="asNumberVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> asNumberVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> asNumberVariable() {
        return Codegen.optional(this.asNumberVariable);
    }
    /**
     * Compare router IDs when selecting active BGP paths - Default value: `false`
     * 
     */
    @Export(name="compareRouterId", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> compareRouterId;

    /**
     * @return Compare router IDs when selecting active BGP paths - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> compareRouterId() {
        return Codegen.optional(this.compareRouterId);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="compareRouterIdVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> compareRouterIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> compareRouterIdVariable() {
        return Codegen.optional(this.compareRouterIdVariable);
    }
    /**
     * The description of the feature template
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return The description of the feature template
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Compare MEDs from all routes from same AS when selecting active BGP paths - Default value: `false`
     * 
     */
    @Export(name="deterministicMed", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deterministicMed;

    /**
     * @return Compare MEDs from all routes from same AS when selecting active BGP paths - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> deterministicMed() {
        return Codegen.optional(this.deterministicMed);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="deterministicMedVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deterministicMedVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> deterministicMedVariable() {
        return Codegen.optional(this.deterministicMedVariable);
    }
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    @Export(name="deviceTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> deviceTypes;

    /**
     * @return List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     * 
     */
    public Output<List<String>> deviceTypes() {
        return this.deviceTypes;
    }
    /**
     * Set administrative distance for external BGP routes - Range: `1`-`255` - Default value: `20`
     * 
     */
    @Export(name="distanceExternal", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> distanceExternal;

    /**
     * @return Set administrative distance for external BGP routes - Range: `1`-`255` - Default value: `20`
     * 
     */
    public Output<Optional<Integer>> distanceExternal() {
        return Codegen.optional(this.distanceExternal);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="distanceExternalVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> distanceExternalVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> distanceExternalVariable() {
        return Codegen.optional(this.distanceExternalVariable);
    }
    /**
     * Set administrative distance for internal BGP routes - Range: `1`-`255` - Default value: `200`
     * 
     */
    @Export(name="distanceInternal", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> distanceInternal;

    /**
     * @return Set administrative distance for internal BGP routes - Range: `1`-`255` - Default value: `200`
     * 
     */
    public Output<Optional<Integer>> distanceInternal() {
        return Codegen.optional(this.distanceInternal);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="distanceInternalVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> distanceInternalVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> distanceInternalVariable() {
        return Codegen.optional(this.distanceInternalVariable);
    }
    /**
     * Set administrative distance for local BGP routes - Range: `1`-`255` - Default value: `20`
     * 
     */
    @Export(name="distanceLocal", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> distanceLocal;

    /**
     * @return Set administrative distance for local BGP routes - Range: `1`-`255` - Default value: `20`
     * 
     */
    public Output<Optional<Integer>> distanceLocal() {
        return Codegen.optional(this.distanceLocal);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="distanceLocalVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> distanceLocalVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> distanceLocalVariable() {
        return Codegen.optional(this.distanceLocalVariable);
    }
    /**
     * Set the interval when BGP considers a neighbor to be down - Range: `0`-`65535` - Default value: `180`
     * 
     */
    @Export(name="holdtime", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> holdtime;

    /**
     * @return Set the interval when BGP considers a neighbor to be down - Range: `0`-`65535` - Default value: `180`
     * 
     */
    public Output<Optional<Integer>> holdtime() {
        return Codegen.optional(this.holdtime);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="holdtimeVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> holdtimeVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> holdtimeVariable() {
        return Codegen.optional(this.holdtimeVariable);
    }
    /**
     * Set BGP neighbors
     * 
     */
    @Export(name="ipv4Neighbors", refs={List.class,CiscoBgpFeatureTemplateIpv4Neighbor.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CiscoBgpFeatureTemplateIpv4Neighbor>> ipv4Neighbors;

    /**
     * @return Set BGP neighbors
     * 
     */
    public Output<Optional<List<CiscoBgpFeatureTemplateIpv4Neighbor>>> ipv4Neighbors() {
        return Codegen.optional(this.ipv4Neighbors);
    }
    /**
     * Router Target for IPV4
     * 
     */
    @Export(name="ipv4RouteTargets", refs={List.class,CiscoBgpFeatureTemplateIpv4RouteTarget.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CiscoBgpFeatureTemplateIpv4RouteTarget>> ipv4RouteTargets;

    /**
     * @return Router Target for IPV4
     * 
     */
    public Output<Optional<List<CiscoBgpFeatureTemplateIpv4RouteTarget>>> ipv4RouteTargets() {
        return Codegen.optional(this.ipv4RouteTargets);
    }
    /**
     * Set BGP IPv6 neighbors
     * 
     */
    @Export(name="ipv6Neighbors", refs={List.class,CiscoBgpFeatureTemplateIpv6Neighbor.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CiscoBgpFeatureTemplateIpv6Neighbor>> ipv6Neighbors;

    /**
     * @return Set BGP IPv6 neighbors
     * 
     */
    public Output<Optional<List<CiscoBgpFeatureTemplateIpv6Neighbor>>> ipv6Neighbors() {
        return Codegen.optional(this.ipv6Neighbors);
    }
    /**
     * Router Target for IPV6
     * 
     */
    @Export(name="ipv6RouteTargets", refs={List.class,CiscoBgpFeatureTemplateIpv6RouteTarget.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CiscoBgpFeatureTemplateIpv6RouteTarget>> ipv6RouteTargets;

    /**
     * @return Router Target for IPV6
     * 
     */
    public Output<Optional<List<CiscoBgpFeatureTemplateIpv6RouteTarget>>> ipv6RouteTargets() {
        return Codegen.optional(this.ipv6RouteTargets);
    }
    /**
     * Set how often keepalive messages are sent to BGP peer - Range: `0`-`65535` - Default value: `60`
     * 
     */
    @Export(name="keepalive", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> keepalive;

    /**
     * @return Set how often keepalive messages are sent to BGP peer - Range: `0`-`65535` - Default value: `60`
     * 
     */
    public Output<Optional<Integer>> keepalive() {
        return Codegen.optional(this.keepalive);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="keepaliveVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keepaliveVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> keepaliveVariable() {
        return Codegen.optional(this.keepaliveVariable);
    }
    /**
     * If path has no MED, consider it to be worst path when selecting active BGP paths - Default value: `false`
     * 
     */
    @Export(name="missingMedWorst", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> missingMedWorst;

    /**
     * @return If path has no MED, consider it to be worst path when selecting active BGP paths - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> missingMedWorst() {
        return Codegen.optional(this.missingMedWorst);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="missingMedWorstVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> missingMedWorstVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> missingMedWorstVariable() {
        return Codegen.optional(this.missingMedWorstVariable);
    }
    /**
     * MPLS BGP Interface
     * 
     */
    @Export(name="mplsInterfaces", refs={List.class,CiscoBgpFeatureTemplateMplsInterface.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CiscoBgpFeatureTemplateMplsInterface>> mplsInterfaces;

    /**
     * @return MPLS BGP Interface
     * 
     */
    public Output<Optional<List<CiscoBgpFeatureTemplateMplsInterface>>> mplsInterfaces() {
        return Codegen.optional(this.mplsInterfaces);
    }
    /**
     * Ignore AS for multipath selection - Default value: `false`
     * 
     */
    @Export(name="multipathRelax", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> multipathRelax;

    /**
     * @return Ignore AS for multipath selection - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> multipathRelax() {
        return Codegen.optional(this.multipathRelax);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="multipathRelaxVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> multipathRelaxVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> multipathRelaxVariable() {
        return Codegen.optional(this.multipathRelaxVariable);
    }
    /**
     * The name of the feature template
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the feature template
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Propagate AS Path - Default value: `false`
     * 
     */
    @Export(name="propagateAspath", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> propagateAspath;

    /**
     * @return Propagate AS Path - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> propagateAspath() {
        return Codegen.optional(this.propagateAspath);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="propagateAspathVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> propagateAspathVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> propagateAspathVariable() {
        return Codegen.optional(this.propagateAspathVariable);
    }
    /**
     * Propagate Community - Default value: `false`
     * 
     */
    @Export(name="propagateCommunity", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> propagateCommunity;

    /**
     * @return Propagate Community - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> propagateCommunity() {
        return Codegen.optional(this.propagateCommunity);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="propagateCommunityVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> propagateCommunityVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> propagateCommunityVariable() {
        return Codegen.optional(this.propagateCommunityVariable);
    }
    /**
     * Configure BGP router identifier
     * 
     */
    @Export(name="routerId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> routerId;

    /**
     * @return Configure BGP router identifier
     * 
     */
    public Output<Optional<String>> routerId() {
        return Codegen.optional(this.routerId);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="routerIdVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> routerIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> routerIdVariable() {
        return Codegen.optional(this.routerIdVariable);
    }
    /**
     * Enable or disable BGP - Default value: `false`
     * 
     */
    @Export(name="shutdown", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> shutdown;

    /**
     * @return Enable or disable BGP - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> shutdown() {
        return Codegen.optional(this.shutdown);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="shutdownVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> shutdownVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> shutdownVariable() {
        return Codegen.optional(this.shutdownVariable);
    }
    /**
     * The template type
     * 
     */
    @Export(name="templateType", refs={String.class}, tree="[0]")
    private Output<String> templateType;

    /**
     * @return The template type
     * 
     */
    public Output<String> templateType() {
        return this.templateType;
    }
    /**
     * The version of the feature template
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the feature template
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CiscoBgpFeatureTemplate(String name) {
        this(name, CiscoBgpFeatureTemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CiscoBgpFeatureTemplate(String name, CiscoBgpFeatureTemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CiscoBgpFeatureTemplate(String name, CiscoBgpFeatureTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/ciscoBgpFeatureTemplate:CiscoBgpFeatureTemplate", name, args == null ? CiscoBgpFeatureTemplateArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CiscoBgpFeatureTemplate(String name, Output<String> id, @Nullable CiscoBgpFeatureTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/ciscoBgpFeatureTemplate:CiscoBgpFeatureTemplate", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CiscoBgpFeatureTemplate get(String name, Output<String> id, @Nullable CiscoBgpFeatureTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CiscoBgpFeatureTemplate(name, id, state, options);
    }
}
