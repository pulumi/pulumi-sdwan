// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTransportRoutingOspfv3Ipv6FeatureAreaInterface {
    /**
     * @return Set OSPF interface authentication IPSEC key
     * 
     */
    private String authenticationKey;
    /**
     * @return Variable name
     * 
     */
    private String authenticationKeyVariable;
    /**
     * @return Set OSPF interface authentication IPSec SPI, range 256..4294967295
     * 
     */
    private Integer authenticationSpi;
    /**
     * @return Variable name
     * 
     */
    private String authenticationSpiVariable;
    /**
     * @return No Authentication by default
     * 
     */
    private String authenticationType;
    /**
     * @return Set cost of OSPF interface
     * 
     */
    private Integer cost;
    /**
     * @return Variable name
     * 
     */
    private String costVariable;
    /**
     * @return Set interval after which neighbor is declared to be down
     * 
     */
    private Integer deadInterval;
    /**
     * @return Variable name
     * 
     */
    private String deadIntervalVariable;
    /**
     * @return Set interval between OSPF hello packets
     * 
     */
    private Integer helloInterval;
    /**
     * @return Variable name
     * 
     */
    private String helloIntervalVariable;
    /**
     * @return Set time between retransmitting LSAs
     * 
     */
    private Integer lsaRetransmitInterval;
    /**
     * @return Variable name
     * 
     */
    private String lsaRetransmitIntervalVariable;
    /**
     * @return Set interface name
     * 
     */
    private String name;
    /**
     * @return Variable name
     * 
     */
    private String nameVariable;
    /**
     * @return Set the OSPF network type
     * 
     */
    private String networkType;
    /**
     * @return Variable name
     * 
     */
    private String networkTypeVariable;
    /**
     * @return Set the interface to advertise its address, but not to actively run OSPF
     * 
     */
    private Boolean passiveInterface;
    /**
     * @return Variable name
     * 
     */
    private String passiveInterfaceVariable;

    private GetTransportRoutingOspfv3Ipv6FeatureAreaInterface() {}
    /**
     * @return Set OSPF interface authentication IPSEC key
     * 
     */
    public String authenticationKey() {
        return this.authenticationKey;
    }
    /**
     * @return Variable name
     * 
     */
    public String authenticationKeyVariable() {
        return this.authenticationKeyVariable;
    }
    /**
     * @return Set OSPF interface authentication IPSec SPI, range 256..4294967295
     * 
     */
    public Integer authenticationSpi() {
        return this.authenticationSpi;
    }
    /**
     * @return Variable name
     * 
     */
    public String authenticationSpiVariable() {
        return this.authenticationSpiVariable;
    }
    /**
     * @return No Authentication by default
     * 
     */
    public String authenticationType() {
        return this.authenticationType;
    }
    /**
     * @return Set cost of OSPF interface
     * 
     */
    public Integer cost() {
        return this.cost;
    }
    /**
     * @return Variable name
     * 
     */
    public String costVariable() {
        return this.costVariable;
    }
    /**
     * @return Set interval after which neighbor is declared to be down
     * 
     */
    public Integer deadInterval() {
        return this.deadInterval;
    }
    /**
     * @return Variable name
     * 
     */
    public String deadIntervalVariable() {
        return this.deadIntervalVariable;
    }
    /**
     * @return Set interval between OSPF hello packets
     * 
     */
    public Integer helloInterval() {
        return this.helloInterval;
    }
    /**
     * @return Variable name
     * 
     */
    public String helloIntervalVariable() {
        return this.helloIntervalVariable;
    }
    /**
     * @return Set time between retransmitting LSAs
     * 
     */
    public Integer lsaRetransmitInterval() {
        return this.lsaRetransmitInterval;
    }
    /**
     * @return Variable name
     * 
     */
    public String lsaRetransmitIntervalVariable() {
        return this.lsaRetransmitIntervalVariable;
    }
    /**
     * @return Set interface name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Variable name
     * 
     */
    public String nameVariable() {
        return this.nameVariable;
    }
    /**
     * @return Set the OSPF network type
     * 
     */
    public String networkType() {
        return this.networkType;
    }
    /**
     * @return Variable name
     * 
     */
    public String networkTypeVariable() {
        return this.networkTypeVariable;
    }
    /**
     * @return Set the interface to advertise its address, but not to actively run OSPF
     * 
     */
    public Boolean passiveInterface() {
        return this.passiveInterface;
    }
    /**
     * @return Variable name
     * 
     */
    public String passiveInterfaceVariable() {
        return this.passiveInterfaceVariable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTransportRoutingOspfv3Ipv6FeatureAreaInterface defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authenticationKey;
        private String authenticationKeyVariable;
        private Integer authenticationSpi;
        private String authenticationSpiVariable;
        private String authenticationType;
        private Integer cost;
        private String costVariable;
        private Integer deadInterval;
        private String deadIntervalVariable;
        private Integer helloInterval;
        private String helloIntervalVariable;
        private Integer lsaRetransmitInterval;
        private String lsaRetransmitIntervalVariable;
        private String name;
        private String nameVariable;
        private String networkType;
        private String networkTypeVariable;
        private Boolean passiveInterface;
        private String passiveInterfaceVariable;
        public Builder() {}
        public Builder(GetTransportRoutingOspfv3Ipv6FeatureAreaInterface defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationKey = defaults.authenticationKey;
    	      this.authenticationKeyVariable = defaults.authenticationKeyVariable;
    	      this.authenticationSpi = defaults.authenticationSpi;
    	      this.authenticationSpiVariable = defaults.authenticationSpiVariable;
    	      this.authenticationType = defaults.authenticationType;
    	      this.cost = defaults.cost;
    	      this.costVariable = defaults.costVariable;
    	      this.deadInterval = defaults.deadInterval;
    	      this.deadIntervalVariable = defaults.deadIntervalVariable;
    	      this.helloInterval = defaults.helloInterval;
    	      this.helloIntervalVariable = defaults.helloIntervalVariable;
    	      this.lsaRetransmitInterval = defaults.lsaRetransmitInterval;
    	      this.lsaRetransmitIntervalVariable = defaults.lsaRetransmitIntervalVariable;
    	      this.name = defaults.name;
    	      this.nameVariable = defaults.nameVariable;
    	      this.networkType = defaults.networkType;
    	      this.networkTypeVariable = defaults.networkTypeVariable;
    	      this.passiveInterface = defaults.passiveInterface;
    	      this.passiveInterfaceVariable = defaults.passiveInterfaceVariable;
        }

        @CustomType.Setter
        public Builder authenticationKey(String authenticationKey) {
            if (authenticationKey == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "authenticationKey");
            }
            this.authenticationKey = authenticationKey;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationKeyVariable(String authenticationKeyVariable) {
            if (authenticationKeyVariable == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "authenticationKeyVariable");
            }
            this.authenticationKeyVariable = authenticationKeyVariable;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationSpi(Integer authenticationSpi) {
            if (authenticationSpi == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "authenticationSpi");
            }
            this.authenticationSpi = authenticationSpi;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationSpiVariable(String authenticationSpiVariable) {
            if (authenticationSpiVariable == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "authenticationSpiVariable");
            }
            this.authenticationSpiVariable = authenticationSpiVariable;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationType(String authenticationType) {
            if (authenticationType == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "authenticationType");
            }
            this.authenticationType = authenticationType;
            return this;
        }
        @CustomType.Setter
        public Builder cost(Integer cost) {
            if (cost == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "cost");
            }
            this.cost = cost;
            return this;
        }
        @CustomType.Setter
        public Builder costVariable(String costVariable) {
            if (costVariable == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "costVariable");
            }
            this.costVariable = costVariable;
            return this;
        }
        @CustomType.Setter
        public Builder deadInterval(Integer deadInterval) {
            if (deadInterval == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "deadInterval");
            }
            this.deadInterval = deadInterval;
            return this;
        }
        @CustomType.Setter
        public Builder deadIntervalVariable(String deadIntervalVariable) {
            if (deadIntervalVariable == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "deadIntervalVariable");
            }
            this.deadIntervalVariable = deadIntervalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder helloInterval(Integer helloInterval) {
            if (helloInterval == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "helloInterval");
            }
            this.helloInterval = helloInterval;
            return this;
        }
        @CustomType.Setter
        public Builder helloIntervalVariable(String helloIntervalVariable) {
            if (helloIntervalVariable == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "helloIntervalVariable");
            }
            this.helloIntervalVariable = helloIntervalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder lsaRetransmitInterval(Integer lsaRetransmitInterval) {
            if (lsaRetransmitInterval == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "lsaRetransmitInterval");
            }
            this.lsaRetransmitInterval = lsaRetransmitInterval;
            return this;
        }
        @CustomType.Setter
        public Builder lsaRetransmitIntervalVariable(String lsaRetransmitIntervalVariable) {
            if (lsaRetransmitIntervalVariable == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "lsaRetransmitIntervalVariable");
            }
            this.lsaRetransmitIntervalVariable = lsaRetransmitIntervalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nameVariable(String nameVariable) {
            if (nameVariable == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "nameVariable");
            }
            this.nameVariable = nameVariable;
            return this;
        }
        @CustomType.Setter
        public Builder networkType(String networkType) {
            if (networkType == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "networkType");
            }
            this.networkType = networkType;
            return this;
        }
        @CustomType.Setter
        public Builder networkTypeVariable(String networkTypeVariable) {
            if (networkTypeVariable == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "networkTypeVariable");
            }
            this.networkTypeVariable = networkTypeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder passiveInterface(Boolean passiveInterface) {
            if (passiveInterface == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "passiveInterface");
            }
            this.passiveInterface = passiveInterface;
            return this;
        }
        @CustomType.Setter
        public Builder passiveInterfaceVariable(String passiveInterfaceVariable) {
            if (passiveInterfaceVariable == null) {
              throw new MissingRequiredPropertyException("GetTransportRoutingOspfv3Ipv6FeatureAreaInterface", "passiveInterfaceVariable");
            }
            this.passiveInterfaceVariable = passiveInterfaceVariable;
            return this;
        }
        public GetTransportRoutingOspfv3Ipv6FeatureAreaInterface build() {
            final var _resultValue = new GetTransportRoutingOspfv3Ipv6FeatureAreaInterface();
            _resultValue.authenticationKey = authenticationKey;
            _resultValue.authenticationKeyVariable = authenticationKeyVariable;
            _resultValue.authenticationSpi = authenticationSpi;
            _resultValue.authenticationSpiVariable = authenticationSpiVariable;
            _resultValue.authenticationType = authenticationType;
            _resultValue.cost = cost;
            _resultValue.costVariable = costVariable;
            _resultValue.deadInterval = deadInterval;
            _resultValue.deadIntervalVariable = deadIntervalVariable;
            _resultValue.helloInterval = helloInterval;
            _resultValue.helloIntervalVariable = helloIntervalVariable;
            _resultValue.lsaRetransmitInterval = lsaRetransmitInterval;
            _resultValue.lsaRetransmitIntervalVariable = lsaRetransmitIntervalVariable;
            _resultValue.name = name;
            _resultValue.nameVariable = nameVariable;
            _resultValue.networkType = networkType;
            _resultValue.networkTypeVariable = networkTypeVariable;
            _resultValue.passiveInterface = passiveInterface;
            _resultValue.passiveInterfaceVariable = passiveInterfaceVariable;
            return _resultValue;
        }
    }
}
