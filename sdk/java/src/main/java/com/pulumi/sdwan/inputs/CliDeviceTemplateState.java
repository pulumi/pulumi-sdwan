// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CliDeviceTemplateState extends com.pulumi.resources.ResourceArgs {

    public static final CliDeviceTemplateState Empty = new CliDeviceTemplateState();

    /**
     * CLI configuration
     * 
     */
    @Import(name="cliConfiguration")
    private @Nullable Output<String> cliConfiguration;

    /**
     * @return CLI configuration
     * 
     */
    public Optional<Output<String>> cliConfiguration() {
        return Optional.ofNullable(this.cliConfiguration);
    }

    /**
     * CLI type
     *   - Choices: `device`, `intend`
     * 
     */
    @Import(name="cliType")
    private @Nullable Output<String> cliType;

    /**
     * @return CLI type
     *   - Choices: `device`, `intend`
     * 
     */
    public Optional<Output<String>> cliType() {
        return Optional.ofNullable(this.cliType);
    }

    /**
     * The description of the device template
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the device template
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The device type (e.g., `vedge-ISR-4331`)
     * 
     */
    @Import(name="deviceType")
    private @Nullable Output<String> deviceType;

    /**
     * @return The device type (e.g., `vedge-ISR-4331`)
     * 
     */
    public Optional<Output<String>> deviceType() {
        return Optional.ofNullable(this.deviceType);
    }

    /**
     * The name of the device template
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the device template
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The version of the object
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the object
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private CliDeviceTemplateState() {}

    private CliDeviceTemplateState(CliDeviceTemplateState $) {
        this.cliConfiguration = $.cliConfiguration;
        this.cliType = $.cliType;
        this.description = $.description;
        this.deviceType = $.deviceType;
        this.name = $.name;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CliDeviceTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CliDeviceTemplateState $;

        public Builder() {
            $ = new CliDeviceTemplateState();
        }

        public Builder(CliDeviceTemplateState defaults) {
            $ = new CliDeviceTemplateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param cliConfiguration CLI configuration
         * 
         * @return builder
         * 
         */
        public Builder cliConfiguration(@Nullable Output<String> cliConfiguration) {
            $.cliConfiguration = cliConfiguration;
            return this;
        }

        /**
         * @param cliConfiguration CLI configuration
         * 
         * @return builder
         * 
         */
        public Builder cliConfiguration(String cliConfiguration) {
            return cliConfiguration(Output.of(cliConfiguration));
        }

        /**
         * @param cliType CLI type
         *   - Choices: `device`, `intend`
         * 
         * @return builder
         * 
         */
        public Builder cliType(@Nullable Output<String> cliType) {
            $.cliType = cliType;
            return this;
        }

        /**
         * @param cliType CLI type
         *   - Choices: `device`, `intend`
         * 
         * @return builder
         * 
         */
        public Builder cliType(String cliType) {
            return cliType(Output.of(cliType));
        }

        /**
         * @param description The description of the device template
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the device template
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param deviceType The device type (e.g., `vedge-ISR-4331`)
         * 
         * @return builder
         * 
         */
        public Builder deviceType(@Nullable Output<String> deviceType) {
            $.deviceType = deviceType;
            return this;
        }

        /**
         * @param deviceType The device type (e.g., `vedge-ISR-4331`)
         * 
         * @return builder
         * 
         */
        public Builder deviceType(String deviceType) {
            return deviceType(Output.of(deviceType));
        }

        /**
         * @param name The name of the device template
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the device template
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param version The version of the object
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the object
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public CliDeviceTemplateState build() {
            return $;
        }
    }

}
