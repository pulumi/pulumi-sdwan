// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sdwan.TransportCellularProfileFeatureArgs;
import com.pulumi.sdwan.Utilities;
import com.pulumi.sdwan.inputs.TransportCellularProfileFeatureState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage a Transport Cellular Profile Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sdwan.TransportCellularProfileFeature;
 * import com.pulumi.sdwan.TransportCellularProfileFeatureArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new TransportCellularProfileFeature("example", TransportCellularProfileFeatureArgs.builder()
 *             .name("Example")
 *             .description("My Example")
 *             .featureProfileId("f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac")
 *             .profileId(1)
 *             .accessPointName("apn1")
 *             .requiresAuthentication(true)
 *             .authenticationType("pap")
 *             .profileUsername("example")
 *             .profilePassword("example123!")
 *             .packetDataNetworkType("ipv4")
 *             .noOverwrite(false)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * Expected import identifier with the format: &#34;transport_cellular_profile_feature_id,feature_profile_id&#34;
 * 
 * ```sh
 * $ pulumi import sdwan:index/transportCellularProfileFeature:TransportCellularProfileFeature example &#34;f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac&#34;
 * ```
 * 
 */
@ResourceType(type="sdwan:index/transportCellularProfileFeature:TransportCellularProfileFeature")
public class TransportCellularProfileFeature extends com.pulumi.resources.CustomResource {
    /**
     * Set access point name
     * 
     */
    @Export(name="accessPointName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accessPointName;

    /**
     * @return Set access point name
     * 
     */
    public Output<Optional<String>> accessPointName() {
        return Codegen.optional(this.accessPointName);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="accessPointNameVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accessPointNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> accessPointNameVariable() {
        return Codegen.optional(this.accessPointNameVariable);
    }
    /**
     * Set authentication type, Attribute conditional on `requires_authentication` being equal to `true`
     *   - Choices: `pap`, `chap`, `pap_chap`
     * 
     */
    @Export(name="authenticationType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> authenticationType;

    /**
     * @return Set authentication type, Attribute conditional on `requires_authentication` being equal to `true`
     *   - Choices: `pap`, `chap`, `pap_chap`
     * 
     */
    public Output<Optional<String>> authenticationType() {
        return Codegen.optional(this.authenticationType);
    }
    /**
     * Variable name, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    @Export(name="authenticationTypeVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> authenticationTypeVariable;

    /**
     * @return Variable name, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    public Output<Optional<String>> authenticationTypeVariable() {
        return Codegen.optional(this.authenticationTypeVariable);
    }
    /**
     * The description of the Feature
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Feature Profile ID
     * 
     */
    @Export(name="featureProfileId", refs={String.class}, tree="[0]")
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * The name of the Feature
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * No Overwrite
     * 
     */
    @Export(name="noOverwrite", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> noOverwrite;

    /**
     * @return No Overwrite
     * 
     */
    public Output<Optional<Boolean>> noOverwrite() {
        return Codegen.optional(this.noOverwrite);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="noOverwriteVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> noOverwriteVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> noOverwriteVariable() {
        return Codegen.optional(this.noOverwriteVariable);
    }
    /**
     * Set packet data network type
     *   - Choices: `ipv4`, `ipv4v6`, `ipv6`
     *   - Default value: `ipv4`
     * 
     */
    @Export(name="packetDataNetworkType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> packetDataNetworkType;

    /**
     * @return Set packet data network type
     *   - Choices: `ipv4`, `ipv4v6`, `ipv6`
     *   - Default value: `ipv4`
     * 
     */
    public Output<Optional<String>> packetDataNetworkType() {
        return Codegen.optional(this.packetDataNetworkType);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="packetDataNetworkTypeVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> packetDataNetworkTypeVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> packetDataNetworkTypeVariable() {
        return Codegen.optional(this.packetDataNetworkTypeVariable);
    }
    /**
     * Set Profile ID
     *   - Range: `1`-`16`
     * 
     */
    @Export(name="profileId", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> profileId;

    /**
     * @return Set Profile ID
     *   - Range: `1`-`16`
     * 
     */
    public Output<Optional<Integer>> profileId() {
        return Codegen.optional(this.profileId);
    }
    /**
     * Variable name
     * 
     */
    @Export(name="profileIdVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> profileIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Output<Optional<String>> profileIdVariable() {
        return Codegen.optional(this.profileIdVariable);
    }
    /**
     * Set the profile password, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    @Export(name="profilePassword", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> profilePassword;

    /**
     * @return Set the profile password, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    public Output<Optional<String>> profilePassword() {
        return Codegen.optional(this.profilePassword);
    }
    /**
     * Variable name, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    @Export(name="profilePasswordVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> profilePasswordVariable;

    /**
     * @return Variable name, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    public Output<Optional<String>> profilePasswordVariable() {
        return Codegen.optional(this.profilePasswordVariable);
    }
    /**
     * Set the profile username, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    @Export(name="profileUsername", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> profileUsername;

    /**
     * @return Set the profile username, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    public Output<Optional<String>> profileUsername() {
        return Codegen.optional(this.profileUsername);
    }
    /**
     * Variable name, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    @Export(name="profileUsernameVariable", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> profileUsernameVariable;

    /**
     * @return Variable name, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    public Output<Optional<String>> profileUsernameVariable() {
        return Codegen.optional(this.profileUsernameVariable);
    }
    /**
     * Require authentication type
     *   - Default value: `false`
     * 
     */
    @Export(name="requiresAuthentication", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> requiresAuthentication;

    /**
     * @return Require authentication type
     *   - Default value: `false`
     * 
     */
    public Output<Optional<Boolean>> requiresAuthentication() {
        return Codegen.optional(this.requiresAuthentication);
    }
    /**
     * The version of the Feature
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of the Feature
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TransportCellularProfileFeature(java.lang.String name) {
        this(name, TransportCellularProfileFeatureArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TransportCellularProfileFeature(java.lang.String name, TransportCellularProfileFeatureArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TransportCellularProfileFeature(java.lang.String name, TransportCellularProfileFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/transportCellularProfileFeature:TransportCellularProfileFeature", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private TransportCellularProfileFeature(java.lang.String name, Output<java.lang.String> id, @Nullable TransportCellularProfileFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sdwan:index/transportCellularProfileFeature:TransportCellularProfileFeature", name, state, makeResourceOptions(options, id), false);
    }

    private static TransportCellularProfileFeatureArgs makeArgs(TransportCellularProfileFeatureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TransportCellularProfileFeatureArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TransportCellularProfileFeature get(java.lang.String name, Output<java.lang.String> id, @Nullable TransportCellularProfileFeatureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TransportCellularProfileFeature(name, id, state, options);
    }
}
