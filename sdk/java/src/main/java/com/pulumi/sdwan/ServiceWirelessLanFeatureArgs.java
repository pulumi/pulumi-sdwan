// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.ServiceWirelessLanFeatureSsidArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceWirelessLanFeatureArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceWirelessLanFeatureArgs Empty = new ServiceWirelessLanFeatureArgs();

    /**
     * Select country
     *   - Choices: `AE`, `AR`, `AT`, `AU`, `BA`, `BB`, `BE`, `BG`, `BH`, `BN`, `BO`, `BR`, `BY`, `CA`, `CA2`, `CH`, `CL`, `CM`, `CN`, `CO`, `CR`, `CY`, `CZ`, `DE`, `DK`, `DO`, `DZ`, `EC`, `EE`, `EG`, `ES`, `FI`, `FJ`, `FR`, `GB`, `GH`, `GI`, `GR`, `HK`, `HR`, `HU`, `ID`, `IE`, `IL`, `IO`, `IN`, `IQ`, `IS`, `IT`, `J2`, `J4`, `JM`, `JO`, `KE`, `KN`, `KW`, `KZ`, `LB`, `LI`, `LK`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `ME`, `MK`, `MN`, `MO`, `MT`, `MX`, `MY`, `NL`, `NO`, `NZ`, `OM`, `PA`, `PE`, `PH`, `PH2`, `PK`, `PL`, `PR`, `PT`, `PY`, `QA`, `RO`, `RS`, `RU`, `SA`, `SE`, `SG`, `SI`, `SK`, `TH`, `TN`, `TR`, `TW`, `UA`, `US`, `UY`, `VE`, `VN`, `ZA`
     * 
     */
    @Import(name="country")
    private @Nullable Output<String> country;

    /**
     * @return Select country
     *   - Choices: `AE`, `AR`, `AT`, `AU`, `BA`, `BB`, `BE`, `BG`, `BH`, `BN`, `BO`, `BR`, `BY`, `CA`, `CA2`, `CH`, `CL`, `CM`, `CN`, `CO`, `CR`, `CY`, `CZ`, `DE`, `DK`, `DO`, `DZ`, `EC`, `EE`, `EG`, `ES`, `FI`, `FJ`, `FR`, `GB`, `GH`, `GI`, `GR`, `HK`, `HR`, `HU`, `ID`, `IE`, `IL`, `IO`, `IN`, `IQ`, `IS`, `IT`, `J2`, `J4`, `JM`, `JO`, `KE`, `KN`, `KW`, `KZ`, `LB`, `LI`, `LK`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `ME`, `MK`, `MN`, `MO`, `MT`, `MX`, `MY`, `NL`, `NO`, `NZ`, `OM`, `PA`, `PE`, `PH`, `PH2`, `PK`, `PL`, `PR`, `PT`, `PY`, `QA`, `RO`, `RS`, `RU`, `SA`, `SE`, `SG`, `SI`, `SK`, `TH`, `TN`, `TR`, `TW`, `UA`, `US`, `UY`, `VE`, `VN`, `ZA`
     * 
     */
    public Optional<Output<String>> country() {
        return Optional.ofNullable(this.country);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="countryVariable")
    private @Nullable Output<String> countryVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> countryVariable() {
        return Optional.ofNullable(this.countryVariable);
    }

    /**
     * The description of the Feature
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * 2.4GHz Enabled
     *   - Default value: `true`
     * 
     */
    @Import(name="enable24g")
    private @Nullable Output<Boolean> enable24g;

    /**
     * @return 2.4GHz Enabled
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> enable24g() {
        return Optional.ofNullable(this.enable24g);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="enable24gVariable")
    private @Nullable Output<String> enable24gVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> enable24gVariable() {
        return Optional.ofNullable(this.enable24gVariable);
    }

    /**
     * 5GHz Enabled
     *   - Default value: `true`
     * 
     */
    @Import(name="enable5g")
    private @Nullable Output<Boolean> enable5g;

    /**
     * @return 5GHz Enabled
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> enable5g() {
        return Optional.ofNullable(this.enable5g);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="enable5gVariable")
    private @Nullable Output<String> enable5gVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> enable5gVariable() {
        return Optional.ofNullable(this.enable5gVariable);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId", required=true)
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }

    /**
     * Set mobile express default gateway
     * 
     */
    @Import(name="meDefaultGateway")
    private @Nullable Output<String> meDefaultGateway;

    /**
     * @return Set mobile express default gateway
     * 
     */
    public Optional<Output<String>> meDefaultGateway() {
        return Optional.ofNullable(this.meDefaultGateway);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="meDefaultGatewayVariable")
    private @Nullable Output<String> meDefaultGatewayVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> meDefaultGatewayVariable() {
        return Optional.ofNullable(this.meDefaultGatewayVariable);
    }

    /**
     * ME management IP dynamic allocated by DHCP
     * 
     */
    @Import(name="meDynamicIpEnabled", required=true)
    private Output<Boolean> meDynamicIpEnabled;

    /**
     * @return ME management IP dynamic allocated by DHCP
     * 
     */
    public Output<Boolean> meDynamicIpEnabled() {
        return this.meDynamicIpEnabled;
    }

    /**
     * Set mobile express controller address
     * 
     */
    @Import(name="meIpv4Address")
    private @Nullable Output<String> meIpv4Address;

    /**
     * @return Set mobile express controller address
     * 
     */
    public Optional<Output<String>> meIpv4Address() {
        return Optional.ofNullable(this.meIpv4Address);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="meIpv4AddressVariable")
    private @Nullable Output<String> meIpv4AddressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> meIpv4AddressVariable() {
        return Optional.ofNullable(this.meIpv4AddressVariable);
    }

    /**
     * Set mobile express controller subnet mask
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     * 
     */
    @Import(name="meSubnetMask")
    private @Nullable Output<String> meSubnetMask;

    /**
     * @return Set mobile express controller subnet mask
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     * 
     */
    public Optional<Output<String>> meSubnetMask() {
        return Optional.ofNullable(this.meSubnetMask);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="meSubnetMaskVariable")
    private @Nullable Output<String> meSubnetMaskVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> meSubnetMaskVariable() {
        return Optional.ofNullable(this.meSubnetMaskVariable);
    }

    /**
     * The name of the Feature
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Set management password,the password must contains characters from all of the following classes,lowercase letters,uppercase letters,digits,and special characters. No character in the password can be repeated more than three times consecutively. The password must not be the same as the associated username or the username reversed. The password must not be cisco,ocsic,or any variant obtained by changing the capitalization of the letters in word cisco. In addition,you can&#39;t substitute 1,l,or ! for i,0 for o,$ for s.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return Set management password,the password must contains characters from all of the following classes,lowercase letters,uppercase letters,digits,and special characters. No character in the password can be repeated more than three times consecutively. The password must not be the same as the associated username or the username reversed. The password must not be cisco,ocsic,or any variant obtained by changing the capitalization of the letters in word cisco. In addition,you can&#39;t substitute 1,l,or ! for i,0 for o,$ for s.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="passwordVariable")
    private @Nullable Output<String> passwordVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> passwordVariable() {
        return Optional.ofNullable(this.passwordVariable);
    }

    /**
     * Configure Wi-Fi SSID profile
     * 
     */
    @Import(name="ssids", required=true)
    private Output<List<ServiceWirelessLanFeatureSsidArgs>> ssids;

    /**
     * @return Configure Wi-Fi SSID profile
     * 
     */
    public Output<List<ServiceWirelessLanFeatureSsidArgs>> ssids() {
        return this.ssids;
    }

    /**
     * Set management username
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return Set management username
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="usernameVariable")
    private @Nullable Output<String> usernameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> usernameVariable() {
        return Optional.ofNullable(this.usernameVariable);
    }

    private ServiceWirelessLanFeatureArgs() {}

    private ServiceWirelessLanFeatureArgs(ServiceWirelessLanFeatureArgs $) {
        this.country = $.country;
        this.countryVariable = $.countryVariable;
        this.description = $.description;
        this.enable24g = $.enable24g;
        this.enable24gVariable = $.enable24gVariable;
        this.enable5g = $.enable5g;
        this.enable5gVariable = $.enable5gVariable;
        this.featureProfileId = $.featureProfileId;
        this.meDefaultGateway = $.meDefaultGateway;
        this.meDefaultGatewayVariable = $.meDefaultGatewayVariable;
        this.meDynamicIpEnabled = $.meDynamicIpEnabled;
        this.meIpv4Address = $.meIpv4Address;
        this.meIpv4AddressVariable = $.meIpv4AddressVariable;
        this.meSubnetMask = $.meSubnetMask;
        this.meSubnetMaskVariable = $.meSubnetMaskVariable;
        this.name = $.name;
        this.password = $.password;
        this.passwordVariable = $.passwordVariable;
        this.ssids = $.ssids;
        this.username = $.username;
        this.usernameVariable = $.usernameVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceWirelessLanFeatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceWirelessLanFeatureArgs $;

        public Builder() {
            $ = new ServiceWirelessLanFeatureArgs();
        }

        public Builder(ServiceWirelessLanFeatureArgs defaults) {
            $ = new ServiceWirelessLanFeatureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param country Select country
         *   - Choices: `AE`, `AR`, `AT`, `AU`, `BA`, `BB`, `BE`, `BG`, `BH`, `BN`, `BO`, `BR`, `BY`, `CA`, `CA2`, `CH`, `CL`, `CM`, `CN`, `CO`, `CR`, `CY`, `CZ`, `DE`, `DK`, `DO`, `DZ`, `EC`, `EE`, `EG`, `ES`, `FI`, `FJ`, `FR`, `GB`, `GH`, `GI`, `GR`, `HK`, `HR`, `HU`, `ID`, `IE`, `IL`, `IO`, `IN`, `IQ`, `IS`, `IT`, `J2`, `J4`, `JM`, `JO`, `KE`, `KN`, `KW`, `KZ`, `LB`, `LI`, `LK`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `ME`, `MK`, `MN`, `MO`, `MT`, `MX`, `MY`, `NL`, `NO`, `NZ`, `OM`, `PA`, `PE`, `PH`, `PH2`, `PK`, `PL`, `PR`, `PT`, `PY`, `QA`, `RO`, `RS`, `RU`, `SA`, `SE`, `SG`, `SI`, `SK`, `TH`, `TN`, `TR`, `TW`, `UA`, `US`, `UY`, `VE`, `VN`, `ZA`
         * 
         * @return builder
         * 
         */
        public Builder country(@Nullable Output<String> country) {
            $.country = country;
            return this;
        }

        /**
         * @param country Select country
         *   - Choices: `AE`, `AR`, `AT`, `AU`, `BA`, `BB`, `BE`, `BG`, `BH`, `BN`, `BO`, `BR`, `BY`, `CA`, `CA2`, `CH`, `CL`, `CM`, `CN`, `CO`, `CR`, `CY`, `CZ`, `DE`, `DK`, `DO`, `DZ`, `EC`, `EE`, `EG`, `ES`, `FI`, `FJ`, `FR`, `GB`, `GH`, `GI`, `GR`, `HK`, `HR`, `HU`, `ID`, `IE`, `IL`, `IO`, `IN`, `IQ`, `IS`, `IT`, `J2`, `J4`, `JM`, `JO`, `KE`, `KN`, `KW`, `KZ`, `LB`, `LI`, `LK`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `ME`, `MK`, `MN`, `MO`, `MT`, `MX`, `MY`, `NL`, `NO`, `NZ`, `OM`, `PA`, `PE`, `PH`, `PH2`, `PK`, `PL`, `PR`, `PT`, `PY`, `QA`, `RO`, `RS`, `RU`, `SA`, `SE`, `SG`, `SI`, `SK`, `TH`, `TN`, `TR`, `TW`, `UA`, `US`, `UY`, `VE`, `VN`, `ZA`
         * 
         * @return builder
         * 
         */
        public Builder country(String country) {
            return country(Output.of(country));
        }

        /**
         * @param countryVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder countryVariable(@Nullable Output<String> countryVariable) {
            $.countryVariable = countryVariable;
            return this;
        }

        /**
         * @param countryVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder countryVariable(String countryVariable) {
            return countryVariable(Output.of(countryVariable));
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param enable24g 2.4GHz Enabled
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder enable24g(@Nullable Output<Boolean> enable24g) {
            $.enable24g = enable24g;
            return this;
        }

        /**
         * @param enable24g 2.4GHz Enabled
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder enable24g(Boolean enable24g) {
            return enable24g(Output.of(enable24g));
        }

        /**
         * @param enable24gVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enable24gVariable(@Nullable Output<String> enable24gVariable) {
            $.enable24gVariable = enable24gVariable;
            return this;
        }

        /**
         * @param enable24gVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enable24gVariable(String enable24gVariable) {
            return enable24gVariable(Output.of(enable24gVariable));
        }

        /**
         * @param enable5g 5GHz Enabled
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder enable5g(@Nullable Output<Boolean> enable5g) {
            $.enable5g = enable5g;
            return this;
        }

        /**
         * @param enable5g 5GHz Enabled
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder enable5g(Boolean enable5g) {
            return enable5g(Output.of(enable5g));
        }

        /**
         * @param enable5gVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enable5gVariable(@Nullable Output<String> enable5gVariable) {
            $.enable5gVariable = enable5gVariable;
            return this;
        }

        /**
         * @param enable5gVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder enable5gVariable(String enable5gVariable) {
            return enable5gVariable(Output.of(enable5gVariable));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param meDefaultGateway Set mobile express default gateway
         * 
         * @return builder
         * 
         */
        public Builder meDefaultGateway(@Nullable Output<String> meDefaultGateway) {
            $.meDefaultGateway = meDefaultGateway;
            return this;
        }

        /**
         * @param meDefaultGateway Set mobile express default gateway
         * 
         * @return builder
         * 
         */
        public Builder meDefaultGateway(String meDefaultGateway) {
            return meDefaultGateway(Output.of(meDefaultGateway));
        }

        /**
         * @param meDefaultGatewayVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder meDefaultGatewayVariable(@Nullable Output<String> meDefaultGatewayVariable) {
            $.meDefaultGatewayVariable = meDefaultGatewayVariable;
            return this;
        }

        /**
         * @param meDefaultGatewayVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder meDefaultGatewayVariable(String meDefaultGatewayVariable) {
            return meDefaultGatewayVariable(Output.of(meDefaultGatewayVariable));
        }

        /**
         * @param meDynamicIpEnabled ME management IP dynamic allocated by DHCP
         * 
         * @return builder
         * 
         */
        public Builder meDynamicIpEnabled(Output<Boolean> meDynamicIpEnabled) {
            $.meDynamicIpEnabled = meDynamicIpEnabled;
            return this;
        }

        /**
         * @param meDynamicIpEnabled ME management IP dynamic allocated by DHCP
         * 
         * @return builder
         * 
         */
        public Builder meDynamicIpEnabled(Boolean meDynamicIpEnabled) {
            return meDynamicIpEnabled(Output.of(meDynamicIpEnabled));
        }

        /**
         * @param meIpv4Address Set mobile express controller address
         * 
         * @return builder
         * 
         */
        public Builder meIpv4Address(@Nullable Output<String> meIpv4Address) {
            $.meIpv4Address = meIpv4Address;
            return this;
        }

        /**
         * @param meIpv4Address Set mobile express controller address
         * 
         * @return builder
         * 
         */
        public Builder meIpv4Address(String meIpv4Address) {
            return meIpv4Address(Output.of(meIpv4Address));
        }

        /**
         * @param meIpv4AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder meIpv4AddressVariable(@Nullable Output<String> meIpv4AddressVariable) {
            $.meIpv4AddressVariable = meIpv4AddressVariable;
            return this;
        }

        /**
         * @param meIpv4AddressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder meIpv4AddressVariable(String meIpv4AddressVariable) {
            return meIpv4AddressVariable(Output.of(meIpv4AddressVariable));
        }

        /**
         * @param meSubnetMask Set mobile express controller subnet mask
         *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder meSubnetMask(@Nullable Output<String> meSubnetMask) {
            $.meSubnetMask = meSubnetMask;
            return this;
        }

        /**
         * @param meSubnetMask Set mobile express controller subnet mask
         *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
         * 
         * @return builder
         * 
         */
        public Builder meSubnetMask(String meSubnetMask) {
            return meSubnetMask(Output.of(meSubnetMask));
        }

        /**
         * @param meSubnetMaskVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder meSubnetMaskVariable(@Nullable Output<String> meSubnetMaskVariable) {
            $.meSubnetMaskVariable = meSubnetMaskVariable;
            return this;
        }

        /**
         * @param meSubnetMaskVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder meSubnetMaskVariable(String meSubnetMaskVariable) {
            return meSubnetMaskVariable(Output.of(meSubnetMaskVariable));
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param password Set management password,the password must contains characters from all of the following classes,lowercase letters,uppercase letters,digits,and special characters. No character in the password can be repeated more than three times consecutively. The password must not be the same as the associated username or the username reversed. The password must not be cisco,ocsic,or any variant obtained by changing the capitalization of the letters in word cisco. In addition,you can&#39;t substitute 1,l,or ! for i,0 for o,$ for s.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Set management password,the password must contains characters from all of the following classes,lowercase letters,uppercase letters,digits,and special characters. No character in the password can be repeated more than three times consecutively. The password must not be the same as the associated username or the username reversed. The password must not be cisco,ocsic,or any variant obtained by changing the capitalization of the letters in word cisco. In addition,you can&#39;t substitute 1,l,or ! for i,0 for o,$ for s.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param passwordVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder passwordVariable(@Nullable Output<String> passwordVariable) {
            $.passwordVariable = passwordVariable;
            return this;
        }

        /**
         * @param passwordVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder passwordVariable(String passwordVariable) {
            return passwordVariable(Output.of(passwordVariable));
        }

        /**
         * @param ssids Configure Wi-Fi SSID profile
         * 
         * @return builder
         * 
         */
        public Builder ssids(Output<List<ServiceWirelessLanFeatureSsidArgs>> ssids) {
            $.ssids = ssids;
            return this;
        }

        /**
         * @param ssids Configure Wi-Fi SSID profile
         * 
         * @return builder
         * 
         */
        public Builder ssids(List<ServiceWirelessLanFeatureSsidArgs> ssids) {
            return ssids(Output.of(ssids));
        }

        /**
         * @param ssids Configure Wi-Fi SSID profile
         * 
         * @return builder
         * 
         */
        public Builder ssids(ServiceWirelessLanFeatureSsidArgs... ssids) {
            return ssids(List.of(ssids));
        }

        /**
         * @param username Set management username
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username Set management username
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        /**
         * @param usernameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder usernameVariable(@Nullable Output<String> usernameVariable) {
            $.usernameVariable = usernameVariable;
            return this;
        }

        /**
         * @param usernameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder usernameVariable(String usernameVariable) {
            return usernameVariable(Output.of(usernameVariable));
        }

        public ServiceWirelessLanFeatureArgs build() {
            if ($.featureProfileId == null) {
                throw new MissingRequiredPropertyException("ServiceWirelessLanFeatureArgs", "featureProfileId");
            }
            if ($.meDynamicIpEnabled == null) {
                throw new MissingRequiredPropertyException("ServiceWirelessLanFeatureArgs", "meDynamicIpEnabled");
            }
            if ($.ssids == null) {
                throw new MissingRequiredPropertyException("ServiceWirelessLanFeatureArgs", "ssids");
            }
            return $;
        }
    }

}
