// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.outputs.SecurityPolicyDefinitionEntry;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SecurityPolicyDefinition {
    /**
     * @return List of zone pair definitions, Attribute conditional on `type` being equal to `zoneBasedFW`
     * 
     */
    private @Nullable List<SecurityPolicyDefinitionEntry> entries;
    /**
     * @return Policy definition ID
     * 
     */
    private String id;
    /**
     * @return Policy definition type
     *   - Choices: `urlFiltering`, `zoneBasedFW`, `intrusionPrevention`, `sslDecryption`, `advancedMalwareProtection`, `dnsSecurity`
     * 
     */
    private String type;
    /**
     * @return Policy definition version
     * 
     */
    private @Nullable Integer version;

    private SecurityPolicyDefinition() {}
    /**
     * @return List of zone pair definitions, Attribute conditional on `type` being equal to `zoneBasedFW`
     * 
     */
    public List<SecurityPolicyDefinitionEntry> entries() {
        return this.entries == null ? List.of() : this.entries;
    }
    /**
     * @return Policy definition ID
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Policy definition type
     *   - Choices: `urlFiltering`, `zoneBasedFW`, `intrusionPrevention`, `sslDecryption`, `advancedMalwareProtection`, `dnsSecurity`
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Policy definition version
     * 
     */
    public Optional<Integer> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityPolicyDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<SecurityPolicyDefinitionEntry> entries;
        private String id;
        private String type;
        private @Nullable Integer version;
        public Builder() {}
        public Builder(SecurityPolicyDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entries = defaults.entries;
    	      this.id = defaults.id;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder entries(@Nullable List<SecurityPolicyDefinitionEntry> entries) {

            this.entries = entries;
            return this;
        }
        public Builder entries(SecurityPolicyDefinitionEntry... entries) {
            return entries(List.of(entries));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("SecurityPolicyDefinition", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("SecurityPolicyDefinition", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable Integer version) {

            this.version = version;
            return this;
        }
        public SecurityPolicyDefinition build() {
            final var _resultValue = new SecurityPolicyDefinition();
            _resultValue.entries = entries;
            _resultValue.id = id;
            _resultValue.type = type;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
