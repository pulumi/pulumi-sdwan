// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicerPolicyObjectState extends com.pulumi.resources.ResourceArgs {

    public static final PolicerPolicyObjectState Empty = new PolicerPolicyObjectState();

    /**
     * Burst in bytes
     *   - Range: `15000`-`10000000`
     * 
     */
    @Import(name="burst")
    private @Nullable Output<Integer> burst;

    /**
     * @return Burst in bytes
     *   - Range: `15000`-`10000000`
     * 
     */
    public Optional<Output<Integer>> burst() {
        return Optional.ofNullable(this.burst);
    }

    /**
     * Exceed action
     *   - Choices: `drop`, `remark`
     * 
     */
    @Import(name="exceedAction")
    private @Nullable Output<String> exceedAction;

    /**
     * @return Exceed action
     *   - Choices: `drop`, `remark`
     * 
     */
    public Optional<Output<String>> exceedAction() {
        return Optional.ofNullable(this.exceedAction);
    }

    /**
     * The name of the policy object
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the policy object
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Rate in bps
     *   - Range: `8`-`100000000000`
     * 
     */
    @Import(name="rate")
    private @Nullable Output<Integer> rate;

    /**
     * @return Rate in bps
     *   - Range: `8`-`100000000000`
     * 
     */
    public Optional<Output<Integer>> rate() {
        return Optional.ofNullable(this.rate);
    }

    /**
     * The version of the object
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the object
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private PolicerPolicyObjectState() {}

    private PolicerPolicyObjectState(PolicerPolicyObjectState $) {
        this.burst = $.burst;
        this.exceedAction = $.exceedAction;
        this.name = $.name;
        this.rate = $.rate;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicerPolicyObjectState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicerPolicyObjectState $;

        public Builder() {
            $ = new PolicerPolicyObjectState();
        }

        public Builder(PolicerPolicyObjectState defaults) {
            $ = new PolicerPolicyObjectState(Objects.requireNonNull(defaults));
        }

        /**
         * @param burst Burst in bytes
         *   - Range: `15000`-`10000000`
         * 
         * @return builder
         * 
         */
        public Builder burst(@Nullable Output<Integer> burst) {
            $.burst = burst;
            return this;
        }

        /**
         * @param burst Burst in bytes
         *   - Range: `15000`-`10000000`
         * 
         * @return builder
         * 
         */
        public Builder burst(Integer burst) {
            return burst(Output.of(burst));
        }

        /**
         * @param exceedAction Exceed action
         *   - Choices: `drop`, `remark`
         * 
         * @return builder
         * 
         */
        public Builder exceedAction(@Nullable Output<String> exceedAction) {
            $.exceedAction = exceedAction;
            return this;
        }

        /**
         * @param exceedAction Exceed action
         *   - Choices: `drop`, `remark`
         * 
         * @return builder
         * 
         */
        public Builder exceedAction(String exceedAction) {
            return exceedAction(Output.of(exceedAction));
        }

        /**
         * @param name The name of the policy object
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the policy object
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param rate Rate in bps
         *   - Range: `8`-`100000000000`
         * 
         * @return builder
         * 
         */
        public Builder rate(@Nullable Output<Integer> rate) {
            $.rate = rate;
            return this;
        }

        /**
         * @param rate Rate in bps
         *   - Range: `8`-`100000000000`
         * 
         * @return builder
         * 
         */
        public Builder rate(Integer rate) {
            return rate(Output.of(rate));
        }

        /**
         * @param version The version of the object
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the object
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public PolicerPolicyObjectState build() {
            return $;
        }
    }

}
