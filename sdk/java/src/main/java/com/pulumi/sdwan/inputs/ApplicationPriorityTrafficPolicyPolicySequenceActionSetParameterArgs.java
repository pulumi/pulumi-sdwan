// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationPriorityTrafficPolicyPolicySequenceActionSetParameterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationPriorityTrafficPolicyPolicySequenceActionSetParameterArgs Empty = new ApplicationPriorityTrafficPolicyPolicySequenceActionSetParameterArgs();

    /**
     * - Range: `0`-`63`
     * 
     */
    @Import(name="dscp")
    private @Nullable Output<Integer> dscp;

    /**
     * @return - Range: `0`-`63`
     * 
     */
    public Optional<Output<Integer>> dscp() {
        return Optional.ofNullable(this.dscp);
    }

    @Import(name="forwardingClassListId")
    private @Nullable Output<String> forwardingClassListId;

    public Optional<Output<String>> forwardingClassListId() {
        return Optional.ofNullable(this.forwardingClassListId);
    }

    @Import(name="localTlocListColors")
    private @Nullable Output<List<String>> localTlocListColors;

    public Optional<Output<List<String>>> localTlocListColors() {
        return Optional.ofNullable(this.localTlocListColors);
    }

    /**
     * - Choices: `ipsec`, `gre`
     * 
     */
    @Import(name="localTlocListEncapsulation")
    private @Nullable Output<String> localTlocListEncapsulation;

    /**
     * @return - Choices: `ipsec`, `gre`
     * 
     */
    public Optional<Output<String>> localTlocListEncapsulation() {
        return Optional.ofNullable(this.localTlocListEncapsulation);
    }

    @Import(name="localTlocListRestrict")
    private @Nullable Output<String> localTlocListRestrict;

    public Optional<Output<String>> localTlocListRestrict() {
        return Optional.ofNullable(this.localTlocListRestrict);
    }

    @Import(name="nextHopIpv4")
    private @Nullable Output<String> nextHopIpv4;

    public Optional<Output<String>> nextHopIpv4() {
        return Optional.ofNullable(this.nextHopIpv4);
    }

    @Import(name="nextHopIpv6")
    private @Nullable Output<String> nextHopIpv6;

    public Optional<Output<String>> nextHopIpv6() {
        return Optional.ofNullable(this.nextHopIpv6);
    }

    @Import(name="nextHopLoose")
    private @Nullable Output<Boolean> nextHopLoose;

    public Optional<Output<Boolean>> nextHopLoose() {
        return Optional.ofNullable(this.nextHopLoose);
    }

    @Import(name="policerId")
    private @Nullable Output<String> policerId;

    public Optional<Output<String>> policerId() {
        return Optional.ofNullable(this.policerId);
    }

    @Import(name="preferredColorGroupId")
    private @Nullable Output<String> preferredColorGroupId;

    public Optional<Output<String>> preferredColorGroupId() {
        return Optional.ofNullable(this.preferredColorGroupId);
    }

    @Import(name="preferredRemoteColorIds")
    private @Nullable Output<List<String>> preferredRemoteColorIds;

    public Optional<Output<List<String>>> preferredRemoteColorIds() {
        return Optional.ofNullable(this.preferredRemoteColorIds);
    }

    @Import(name="preferredRemoteColorRestrict")
    private @Nullable Output<String> preferredRemoteColorRestrict;

    public Optional<Output<String>> preferredRemoteColorRestrict() {
        return Optional.ofNullable(this.preferredRemoteColorRestrict);
    }

    @Import(name="serviceChainFallbackToRouting")
    private @Nullable Output<Boolean> serviceChainFallbackToRouting;

    public Optional<Output<Boolean>> serviceChainFallbackToRouting() {
        return Optional.ofNullable(this.serviceChainFallbackToRouting);
    }

    @Import(name="serviceChainLocal")
    private @Nullable Output<Boolean> serviceChainLocal;

    public Optional<Output<Boolean>> serviceChainLocal() {
        return Optional.ofNullable(this.serviceChainLocal);
    }

    @Import(name="serviceChainTlocColors")
    private @Nullable Output<List<String>> serviceChainTlocColors;

    public Optional<Output<List<String>>> serviceChainTlocColors() {
        return Optional.ofNullable(this.serviceChainTlocColors);
    }

    /**
     * - Choices: `ipsec`, `gre`
     * 
     */
    @Import(name="serviceChainTlocEncapsulation")
    private @Nullable Output<String> serviceChainTlocEncapsulation;

    /**
     * @return - Choices: `ipsec`, `gre`
     * 
     */
    public Optional<Output<String>> serviceChainTlocEncapsulation() {
        return Optional.ofNullable(this.serviceChainTlocEncapsulation);
    }

    @Import(name="serviceChainTlocIp")
    private @Nullable Output<String> serviceChainTlocIp;

    public Optional<Output<String>> serviceChainTlocIp() {
        return Optional.ofNullable(this.serviceChainTlocIp);
    }

    @Import(name="serviceChainTlocListId")
    private @Nullable Output<String> serviceChainTlocListId;

    public Optional<Output<String>> serviceChainTlocListId() {
        return Optional.ofNullable(this.serviceChainTlocListId);
    }

    /**
     * - Choices: `SC1`, `SC2`, `SC4`, `SC5`, `SC6`, `SC7`, `SC8`, `SC9`, `SC10`, `SC11`, `SC12`, `SC13`, `SC14`, `SC15`, `SC16`
     * 
     */
    @Import(name="serviceChainType")
    private @Nullable Output<String> serviceChainType;

    /**
     * @return - Choices: `SC1`, `SC2`, `SC4`, `SC5`, `SC6`, `SC7`, `SC8`, `SC9`, `SC10`, `SC11`, `SC12`, `SC13`, `SC14`, `SC15`, `SC16`
     * 
     */
    public Optional<Output<String>> serviceChainType() {
        return Optional.ofNullable(this.serviceChainType);
    }

    /**
     * - Range: `0`-`65530`
     * 
     */
    @Import(name="serviceChainVpn")
    private @Nullable Output<Integer> serviceChainVpn;

    /**
     * @return - Range: `0`-`65530`
     * 
     */
    public Optional<Output<Integer>> serviceChainVpn() {
        return Optional.ofNullable(this.serviceChainVpn);
    }

    @Import(name="serviceTlocColors")
    private @Nullable Output<List<String>> serviceTlocColors;

    public Optional<Output<List<String>>> serviceTlocColors() {
        return Optional.ofNullable(this.serviceTlocColors);
    }

    /**
     * - Choices: `ipsec`, `gre`
     * 
     */
    @Import(name="serviceTlocEncapsulation")
    private @Nullable Output<String> serviceTlocEncapsulation;

    /**
     * @return - Choices: `ipsec`, `gre`
     * 
     */
    public Optional<Output<String>> serviceTlocEncapsulation() {
        return Optional.ofNullable(this.serviceTlocEncapsulation);
    }

    @Import(name="serviceTlocIp")
    private @Nullable Output<String> serviceTlocIp;

    public Optional<Output<String>> serviceTlocIp() {
        return Optional.ofNullable(this.serviceTlocIp);
    }

    @Import(name="serviceTlocListId")
    private @Nullable Output<String> serviceTlocListId;

    public Optional<Output<String>> serviceTlocListId() {
        return Optional.ofNullable(this.serviceTlocListId);
    }

    /**
     * - Choices: `FW`, `IDS`, `IDP`, `netsvc1`, `netsvc2`, `netsvc3`, `netsvc4`, `appqoe`
     * 
     */
    @Import(name="serviceType")
    private @Nullable Output<String> serviceType;

    /**
     * @return - Choices: `FW`, `IDS`, `IDP`, `netsvc1`, `netsvc2`, `netsvc3`, `netsvc4`, `appqoe`
     * 
     */
    public Optional<Output<String>> serviceType() {
        return Optional.ofNullable(this.serviceType);
    }

    @Import(name="serviceVpn")
    private @Nullable Output<String> serviceVpn;

    public Optional<Output<String>> serviceVpn() {
        return Optional.ofNullable(this.serviceVpn);
    }

    @Import(name="tlocColors")
    private @Nullable Output<List<String>> tlocColors;

    public Optional<Output<List<String>>> tlocColors() {
        return Optional.ofNullable(this.tlocColors);
    }

    /**
     * - Choices: `ipsec`, `gre`
     * 
     */
    @Import(name="tlocEncapsulation")
    private @Nullable Output<String> tlocEncapsulation;

    /**
     * @return - Choices: `ipsec`, `gre`
     * 
     */
    public Optional<Output<String>> tlocEncapsulation() {
        return Optional.ofNullable(this.tlocEncapsulation);
    }

    @Import(name="tlocIp")
    private @Nullable Output<String> tlocIp;

    public Optional<Output<String>> tlocIp() {
        return Optional.ofNullable(this.tlocIp);
    }

    @Import(name="tlocListId")
    private @Nullable Output<String> tlocListId;

    public Optional<Output<String>> tlocListId() {
        return Optional.ofNullable(this.tlocListId);
    }

    @Import(name="vpn")
    private @Nullable Output<String> vpn;

    public Optional<Output<String>> vpn() {
        return Optional.ofNullable(this.vpn);
    }

    private ApplicationPriorityTrafficPolicyPolicySequenceActionSetParameterArgs() {}

    private ApplicationPriorityTrafficPolicyPolicySequenceActionSetParameterArgs(ApplicationPriorityTrafficPolicyPolicySequenceActionSetParameterArgs $) {
        this.dscp = $.dscp;
        this.forwardingClassListId = $.forwardingClassListId;
        this.localTlocListColors = $.localTlocListColors;
        this.localTlocListEncapsulation = $.localTlocListEncapsulation;
        this.localTlocListRestrict = $.localTlocListRestrict;
        this.nextHopIpv4 = $.nextHopIpv4;
        this.nextHopIpv6 = $.nextHopIpv6;
        this.nextHopLoose = $.nextHopLoose;
        this.policerId = $.policerId;
        this.preferredColorGroupId = $.preferredColorGroupId;
        this.preferredRemoteColorIds = $.preferredRemoteColorIds;
        this.preferredRemoteColorRestrict = $.preferredRemoteColorRestrict;
        this.serviceChainFallbackToRouting = $.serviceChainFallbackToRouting;
        this.serviceChainLocal = $.serviceChainLocal;
        this.serviceChainTlocColors = $.serviceChainTlocColors;
        this.serviceChainTlocEncapsulation = $.serviceChainTlocEncapsulation;
        this.serviceChainTlocIp = $.serviceChainTlocIp;
        this.serviceChainTlocListId = $.serviceChainTlocListId;
        this.serviceChainType = $.serviceChainType;
        this.serviceChainVpn = $.serviceChainVpn;
        this.serviceTlocColors = $.serviceTlocColors;
        this.serviceTlocEncapsulation = $.serviceTlocEncapsulation;
        this.serviceTlocIp = $.serviceTlocIp;
        this.serviceTlocListId = $.serviceTlocListId;
        this.serviceType = $.serviceType;
        this.serviceVpn = $.serviceVpn;
        this.tlocColors = $.tlocColors;
        this.tlocEncapsulation = $.tlocEncapsulation;
        this.tlocIp = $.tlocIp;
        this.tlocListId = $.tlocListId;
        this.vpn = $.vpn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationPriorityTrafficPolicyPolicySequenceActionSetParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationPriorityTrafficPolicyPolicySequenceActionSetParameterArgs $;

        public Builder() {
            $ = new ApplicationPriorityTrafficPolicyPolicySequenceActionSetParameterArgs();
        }

        public Builder(ApplicationPriorityTrafficPolicyPolicySequenceActionSetParameterArgs defaults) {
            $ = new ApplicationPriorityTrafficPolicyPolicySequenceActionSetParameterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dscp - Range: `0`-`63`
         * 
         * @return builder
         * 
         */
        public Builder dscp(@Nullable Output<Integer> dscp) {
            $.dscp = dscp;
            return this;
        }

        /**
         * @param dscp - Range: `0`-`63`
         * 
         * @return builder
         * 
         */
        public Builder dscp(Integer dscp) {
            return dscp(Output.of(dscp));
        }

        public Builder forwardingClassListId(@Nullable Output<String> forwardingClassListId) {
            $.forwardingClassListId = forwardingClassListId;
            return this;
        }

        public Builder forwardingClassListId(String forwardingClassListId) {
            return forwardingClassListId(Output.of(forwardingClassListId));
        }

        public Builder localTlocListColors(@Nullable Output<List<String>> localTlocListColors) {
            $.localTlocListColors = localTlocListColors;
            return this;
        }

        public Builder localTlocListColors(List<String> localTlocListColors) {
            return localTlocListColors(Output.of(localTlocListColors));
        }

        public Builder localTlocListColors(String... localTlocListColors) {
            return localTlocListColors(List.of(localTlocListColors));
        }

        /**
         * @param localTlocListEncapsulation - Choices: `ipsec`, `gre`
         * 
         * @return builder
         * 
         */
        public Builder localTlocListEncapsulation(@Nullable Output<String> localTlocListEncapsulation) {
            $.localTlocListEncapsulation = localTlocListEncapsulation;
            return this;
        }

        /**
         * @param localTlocListEncapsulation - Choices: `ipsec`, `gre`
         * 
         * @return builder
         * 
         */
        public Builder localTlocListEncapsulation(String localTlocListEncapsulation) {
            return localTlocListEncapsulation(Output.of(localTlocListEncapsulation));
        }

        public Builder localTlocListRestrict(@Nullable Output<String> localTlocListRestrict) {
            $.localTlocListRestrict = localTlocListRestrict;
            return this;
        }

        public Builder localTlocListRestrict(String localTlocListRestrict) {
            return localTlocListRestrict(Output.of(localTlocListRestrict));
        }

        public Builder nextHopIpv4(@Nullable Output<String> nextHopIpv4) {
            $.nextHopIpv4 = nextHopIpv4;
            return this;
        }

        public Builder nextHopIpv4(String nextHopIpv4) {
            return nextHopIpv4(Output.of(nextHopIpv4));
        }

        public Builder nextHopIpv6(@Nullable Output<String> nextHopIpv6) {
            $.nextHopIpv6 = nextHopIpv6;
            return this;
        }

        public Builder nextHopIpv6(String nextHopIpv6) {
            return nextHopIpv6(Output.of(nextHopIpv6));
        }

        public Builder nextHopLoose(@Nullable Output<Boolean> nextHopLoose) {
            $.nextHopLoose = nextHopLoose;
            return this;
        }

        public Builder nextHopLoose(Boolean nextHopLoose) {
            return nextHopLoose(Output.of(nextHopLoose));
        }

        public Builder policerId(@Nullable Output<String> policerId) {
            $.policerId = policerId;
            return this;
        }

        public Builder policerId(String policerId) {
            return policerId(Output.of(policerId));
        }

        public Builder preferredColorGroupId(@Nullable Output<String> preferredColorGroupId) {
            $.preferredColorGroupId = preferredColorGroupId;
            return this;
        }

        public Builder preferredColorGroupId(String preferredColorGroupId) {
            return preferredColorGroupId(Output.of(preferredColorGroupId));
        }

        public Builder preferredRemoteColorIds(@Nullable Output<List<String>> preferredRemoteColorIds) {
            $.preferredRemoteColorIds = preferredRemoteColorIds;
            return this;
        }

        public Builder preferredRemoteColorIds(List<String> preferredRemoteColorIds) {
            return preferredRemoteColorIds(Output.of(preferredRemoteColorIds));
        }

        public Builder preferredRemoteColorIds(String... preferredRemoteColorIds) {
            return preferredRemoteColorIds(List.of(preferredRemoteColorIds));
        }

        public Builder preferredRemoteColorRestrict(@Nullable Output<String> preferredRemoteColorRestrict) {
            $.preferredRemoteColorRestrict = preferredRemoteColorRestrict;
            return this;
        }

        public Builder preferredRemoteColorRestrict(String preferredRemoteColorRestrict) {
            return preferredRemoteColorRestrict(Output.of(preferredRemoteColorRestrict));
        }

        public Builder serviceChainFallbackToRouting(@Nullable Output<Boolean> serviceChainFallbackToRouting) {
            $.serviceChainFallbackToRouting = serviceChainFallbackToRouting;
            return this;
        }

        public Builder serviceChainFallbackToRouting(Boolean serviceChainFallbackToRouting) {
            return serviceChainFallbackToRouting(Output.of(serviceChainFallbackToRouting));
        }

        public Builder serviceChainLocal(@Nullable Output<Boolean> serviceChainLocal) {
            $.serviceChainLocal = serviceChainLocal;
            return this;
        }

        public Builder serviceChainLocal(Boolean serviceChainLocal) {
            return serviceChainLocal(Output.of(serviceChainLocal));
        }

        public Builder serviceChainTlocColors(@Nullable Output<List<String>> serviceChainTlocColors) {
            $.serviceChainTlocColors = serviceChainTlocColors;
            return this;
        }

        public Builder serviceChainTlocColors(List<String> serviceChainTlocColors) {
            return serviceChainTlocColors(Output.of(serviceChainTlocColors));
        }

        public Builder serviceChainTlocColors(String... serviceChainTlocColors) {
            return serviceChainTlocColors(List.of(serviceChainTlocColors));
        }

        /**
         * @param serviceChainTlocEncapsulation - Choices: `ipsec`, `gre`
         * 
         * @return builder
         * 
         */
        public Builder serviceChainTlocEncapsulation(@Nullable Output<String> serviceChainTlocEncapsulation) {
            $.serviceChainTlocEncapsulation = serviceChainTlocEncapsulation;
            return this;
        }

        /**
         * @param serviceChainTlocEncapsulation - Choices: `ipsec`, `gre`
         * 
         * @return builder
         * 
         */
        public Builder serviceChainTlocEncapsulation(String serviceChainTlocEncapsulation) {
            return serviceChainTlocEncapsulation(Output.of(serviceChainTlocEncapsulation));
        }

        public Builder serviceChainTlocIp(@Nullable Output<String> serviceChainTlocIp) {
            $.serviceChainTlocIp = serviceChainTlocIp;
            return this;
        }

        public Builder serviceChainTlocIp(String serviceChainTlocIp) {
            return serviceChainTlocIp(Output.of(serviceChainTlocIp));
        }

        public Builder serviceChainTlocListId(@Nullable Output<String> serviceChainTlocListId) {
            $.serviceChainTlocListId = serviceChainTlocListId;
            return this;
        }

        public Builder serviceChainTlocListId(String serviceChainTlocListId) {
            return serviceChainTlocListId(Output.of(serviceChainTlocListId));
        }

        /**
         * @param serviceChainType - Choices: `SC1`, `SC2`, `SC4`, `SC5`, `SC6`, `SC7`, `SC8`, `SC9`, `SC10`, `SC11`, `SC12`, `SC13`, `SC14`, `SC15`, `SC16`
         * 
         * @return builder
         * 
         */
        public Builder serviceChainType(@Nullable Output<String> serviceChainType) {
            $.serviceChainType = serviceChainType;
            return this;
        }

        /**
         * @param serviceChainType - Choices: `SC1`, `SC2`, `SC4`, `SC5`, `SC6`, `SC7`, `SC8`, `SC9`, `SC10`, `SC11`, `SC12`, `SC13`, `SC14`, `SC15`, `SC16`
         * 
         * @return builder
         * 
         */
        public Builder serviceChainType(String serviceChainType) {
            return serviceChainType(Output.of(serviceChainType));
        }

        /**
         * @param serviceChainVpn - Range: `0`-`65530`
         * 
         * @return builder
         * 
         */
        public Builder serviceChainVpn(@Nullable Output<Integer> serviceChainVpn) {
            $.serviceChainVpn = serviceChainVpn;
            return this;
        }

        /**
         * @param serviceChainVpn - Range: `0`-`65530`
         * 
         * @return builder
         * 
         */
        public Builder serviceChainVpn(Integer serviceChainVpn) {
            return serviceChainVpn(Output.of(serviceChainVpn));
        }

        public Builder serviceTlocColors(@Nullable Output<List<String>> serviceTlocColors) {
            $.serviceTlocColors = serviceTlocColors;
            return this;
        }

        public Builder serviceTlocColors(List<String> serviceTlocColors) {
            return serviceTlocColors(Output.of(serviceTlocColors));
        }

        public Builder serviceTlocColors(String... serviceTlocColors) {
            return serviceTlocColors(List.of(serviceTlocColors));
        }

        /**
         * @param serviceTlocEncapsulation - Choices: `ipsec`, `gre`
         * 
         * @return builder
         * 
         */
        public Builder serviceTlocEncapsulation(@Nullable Output<String> serviceTlocEncapsulation) {
            $.serviceTlocEncapsulation = serviceTlocEncapsulation;
            return this;
        }

        /**
         * @param serviceTlocEncapsulation - Choices: `ipsec`, `gre`
         * 
         * @return builder
         * 
         */
        public Builder serviceTlocEncapsulation(String serviceTlocEncapsulation) {
            return serviceTlocEncapsulation(Output.of(serviceTlocEncapsulation));
        }

        public Builder serviceTlocIp(@Nullable Output<String> serviceTlocIp) {
            $.serviceTlocIp = serviceTlocIp;
            return this;
        }

        public Builder serviceTlocIp(String serviceTlocIp) {
            return serviceTlocIp(Output.of(serviceTlocIp));
        }

        public Builder serviceTlocListId(@Nullable Output<String> serviceTlocListId) {
            $.serviceTlocListId = serviceTlocListId;
            return this;
        }

        public Builder serviceTlocListId(String serviceTlocListId) {
            return serviceTlocListId(Output.of(serviceTlocListId));
        }

        /**
         * @param serviceType - Choices: `FW`, `IDS`, `IDP`, `netsvc1`, `netsvc2`, `netsvc3`, `netsvc4`, `appqoe`
         * 
         * @return builder
         * 
         */
        public Builder serviceType(@Nullable Output<String> serviceType) {
            $.serviceType = serviceType;
            return this;
        }

        /**
         * @param serviceType - Choices: `FW`, `IDS`, `IDP`, `netsvc1`, `netsvc2`, `netsvc3`, `netsvc4`, `appqoe`
         * 
         * @return builder
         * 
         */
        public Builder serviceType(String serviceType) {
            return serviceType(Output.of(serviceType));
        }

        public Builder serviceVpn(@Nullable Output<String> serviceVpn) {
            $.serviceVpn = serviceVpn;
            return this;
        }

        public Builder serviceVpn(String serviceVpn) {
            return serviceVpn(Output.of(serviceVpn));
        }

        public Builder tlocColors(@Nullable Output<List<String>> tlocColors) {
            $.tlocColors = tlocColors;
            return this;
        }

        public Builder tlocColors(List<String> tlocColors) {
            return tlocColors(Output.of(tlocColors));
        }

        public Builder tlocColors(String... tlocColors) {
            return tlocColors(List.of(tlocColors));
        }

        /**
         * @param tlocEncapsulation - Choices: `ipsec`, `gre`
         * 
         * @return builder
         * 
         */
        public Builder tlocEncapsulation(@Nullable Output<String> tlocEncapsulation) {
            $.tlocEncapsulation = tlocEncapsulation;
            return this;
        }

        /**
         * @param tlocEncapsulation - Choices: `ipsec`, `gre`
         * 
         * @return builder
         * 
         */
        public Builder tlocEncapsulation(String tlocEncapsulation) {
            return tlocEncapsulation(Output.of(tlocEncapsulation));
        }

        public Builder tlocIp(@Nullable Output<String> tlocIp) {
            $.tlocIp = tlocIp;
            return this;
        }

        public Builder tlocIp(String tlocIp) {
            return tlocIp(Output.of(tlocIp));
        }

        public Builder tlocListId(@Nullable Output<String> tlocListId) {
            $.tlocListId = tlocListId;
            return this;
        }

        public Builder tlocListId(String tlocListId) {
            return tlocListId(Output.of(tlocListId));
        }

        public Builder vpn(@Nullable Output<String> vpn) {
            $.vpn = vpn;
            return this;
        }

        public Builder vpn(String vpn) {
            return vpn(Output.of(vpn));
        }

        public ApplicationPriorityTrafficPolicyPolicySequenceActionSetParameterArgs build() {
            return $;
        }
    }

}
