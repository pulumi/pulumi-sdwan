// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CiscoVpnFeatureTemplateServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final CiscoVpnFeatureTemplateServiceArgs Empty = new CiscoVpnFeatureTemplateServiceArgs();

    /**
     * Variable name
     * 
     */
    @Import(name="addressVariable")
    private @Nullable Output<String> addressVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> addressVariable() {
        return Optional.ofNullable(this.addressVariable);
    }

    /**
     * List of IPv4 address
     * 
     */
    @Import(name="addresses")
    private @Nullable Output<List<String>> addresses;

    /**
     * @return List of IPv4 address
     * 
     */
    public Optional<Output<List<String>>> addresses() {
        return Optional.ofNullable(this.addresses);
    }

    /**
     * Tracking Service
     * 
     */
    @Import(name="interface")
    private @Nullable Output<String> interface_;

    /**
     * @return Tracking Service
     * 
     */
    public Optional<Output<String>> interface_() {
        return Optional.ofNullable(this.interface_);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceVariable")
    private @Nullable Output<String> interfaceVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceVariable() {
        return Optional.ofNullable(this.interfaceVariable);
    }

    /**
     * Indicates if list item is considered optional.
     * 
     */
    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    /**
     * Service Type
     *   - Choices: `FW`, `IDS`, `IDP`, `netsvc1`, `netsvc2`, `netsvc3`, `netsvc4`, `TE`, `appqoe`
     * 
     */
    @Import(name="serviceTypes")
    private @Nullable Output<String> serviceTypes;

    /**
     * @return Service Type
     *   - Choices: `FW`, `IDS`, `IDP`, `netsvc1`, `netsvc2`, `netsvc3`, `netsvc4`, `TE`, `appqoe`
     * 
     */
    public Optional<Output<String>> serviceTypes() {
        return Optional.ofNullable(this.serviceTypes);
    }

    /**
     * Tracking Service
     *   - Default value: `true`
     * 
     */
    @Import(name="trackEnable")
    private @Nullable Output<Boolean> trackEnable;

    /**
     * @return Tracking Service
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> trackEnable() {
        return Optional.ofNullable(this.trackEnable);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="trackEnableVariable")
    private @Nullable Output<String> trackEnableVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> trackEnableVariable() {
        return Optional.ofNullable(this.trackEnableVariable);
    }

    private CiscoVpnFeatureTemplateServiceArgs() {}

    private CiscoVpnFeatureTemplateServiceArgs(CiscoVpnFeatureTemplateServiceArgs $) {
        this.addressVariable = $.addressVariable;
        this.addresses = $.addresses;
        this.interface_ = $.interface_;
        this.interfaceVariable = $.interfaceVariable;
        this.optional = $.optional;
        this.serviceTypes = $.serviceTypes;
        this.trackEnable = $.trackEnable;
        this.trackEnableVariable = $.trackEnableVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CiscoVpnFeatureTemplateServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CiscoVpnFeatureTemplateServiceArgs $;

        public Builder() {
            $ = new CiscoVpnFeatureTemplateServiceArgs();
        }

        public Builder(CiscoVpnFeatureTemplateServiceArgs defaults) {
            $ = new CiscoVpnFeatureTemplateServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder addressVariable(@Nullable Output<String> addressVariable) {
            $.addressVariable = addressVariable;
            return this;
        }

        /**
         * @param addressVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder addressVariable(String addressVariable) {
            return addressVariable(Output.of(addressVariable));
        }

        /**
         * @param addresses List of IPv4 address
         * 
         * @return builder
         * 
         */
        public Builder addresses(@Nullable Output<List<String>> addresses) {
            $.addresses = addresses;
            return this;
        }

        /**
         * @param addresses List of IPv4 address
         * 
         * @return builder
         * 
         */
        public Builder addresses(List<String> addresses) {
            return addresses(Output.of(addresses));
        }

        /**
         * @param addresses List of IPv4 address
         * 
         * @return builder
         * 
         */
        public Builder addresses(String... addresses) {
            return addresses(List.of(addresses));
        }

        /**
         * @param interface_ Tracking Service
         * 
         * @return builder
         * 
         */
        public Builder interface_(@Nullable Output<String> interface_) {
            $.interface_ = interface_;
            return this;
        }

        /**
         * @param interface_ Tracking Service
         * 
         * @return builder
         * 
         */
        public Builder interface_(String interface_) {
            return interface_(Output.of(interface_));
        }

        /**
         * @param interfaceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceVariable(@Nullable Output<String> interfaceVariable) {
            $.interfaceVariable = interfaceVariable;
            return this;
        }

        /**
         * @param interfaceVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceVariable(String interfaceVariable) {
            return interfaceVariable(Output.of(interfaceVariable));
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        /**
         * @param serviceTypes Service Type
         *   - Choices: `FW`, `IDS`, `IDP`, `netsvc1`, `netsvc2`, `netsvc3`, `netsvc4`, `TE`, `appqoe`
         * 
         * @return builder
         * 
         */
        public Builder serviceTypes(@Nullable Output<String> serviceTypes) {
            $.serviceTypes = serviceTypes;
            return this;
        }

        /**
         * @param serviceTypes Service Type
         *   - Choices: `FW`, `IDS`, `IDP`, `netsvc1`, `netsvc2`, `netsvc3`, `netsvc4`, `TE`, `appqoe`
         * 
         * @return builder
         * 
         */
        public Builder serviceTypes(String serviceTypes) {
            return serviceTypes(Output.of(serviceTypes));
        }

        /**
         * @param trackEnable Tracking Service
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder trackEnable(@Nullable Output<Boolean> trackEnable) {
            $.trackEnable = trackEnable;
            return this;
        }

        /**
         * @param trackEnable Tracking Service
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder trackEnable(Boolean trackEnable) {
            return trackEnable(Output.of(trackEnable));
        }

        /**
         * @param trackEnableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackEnableVariable(@Nullable Output<String> trackEnableVariable) {
            $.trackEnableVariable = trackEnableVariable;
            return this;
        }

        /**
         * @param trackEnableVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder trackEnableVariable(String trackEnableVariable) {
            return trackEnableVariable(Output.of(trackEnableVariable));
        }

        public CiscoVpnFeatureTemplateServiceArgs build() {
            return $;
        }
    }

}
