// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVedgeInventoryDevice {
    /**
     * @return Chassis Number
     * 
     */
    private String chassisNumber;
    /**
     * @return Type of device
     * 
     */
    private String deviceType;
    /**
     * @return Hostname for respective device
     * 
     */
    private String hostname;
    /**
     * @return Serial number for device. Could be board or virtual identifier
     * 
     */
    private String serialNumber;
    /**
     * @return Site id for respective device
     * 
     */
    private String siteId;
    /**
     * @return Validity of device
     * 
     */
    private String validity;

    private GetVedgeInventoryDevice() {}
    /**
     * @return Chassis Number
     * 
     */
    public String chassisNumber() {
        return this.chassisNumber;
    }
    /**
     * @return Type of device
     * 
     */
    public String deviceType() {
        return this.deviceType;
    }
    /**
     * @return Hostname for respective device
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return Serial number for device. Could be board or virtual identifier
     * 
     */
    public String serialNumber() {
        return this.serialNumber;
    }
    /**
     * @return Site id for respective device
     * 
     */
    public String siteId() {
        return this.siteId;
    }
    /**
     * @return Validity of device
     * 
     */
    public String validity() {
        return this.validity;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVedgeInventoryDevice defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String chassisNumber;
        private String deviceType;
        private String hostname;
        private String serialNumber;
        private String siteId;
        private String validity;
        public Builder() {}
        public Builder(GetVedgeInventoryDevice defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.chassisNumber = defaults.chassisNumber;
    	      this.deviceType = defaults.deviceType;
    	      this.hostname = defaults.hostname;
    	      this.serialNumber = defaults.serialNumber;
    	      this.siteId = defaults.siteId;
    	      this.validity = defaults.validity;
        }

        @CustomType.Setter
        public Builder chassisNumber(String chassisNumber) {
            if (chassisNumber == null) {
              throw new MissingRequiredPropertyException("GetVedgeInventoryDevice", "chassisNumber");
            }
            this.chassisNumber = chassisNumber;
            return this;
        }
        @CustomType.Setter
        public Builder deviceType(String deviceType) {
            if (deviceType == null) {
              throw new MissingRequiredPropertyException("GetVedgeInventoryDevice", "deviceType");
            }
            this.deviceType = deviceType;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            if (hostname == null) {
              throw new MissingRequiredPropertyException("GetVedgeInventoryDevice", "hostname");
            }
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder serialNumber(String serialNumber) {
            if (serialNumber == null) {
              throw new MissingRequiredPropertyException("GetVedgeInventoryDevice", "serialNumber");
            }
            this.serialNumber = serialNumber;
            return this;
        }
        @CustomType.Setter
        public Builder siteId(String siteId) {
            if (siteId == null) {
              throw new MissingRequiredPropertyException("GetVedgeInventoryDevice", "siteId");
            }
            this.siteId = siteId;
            return this;
        }
        @CustomType.Setter
        public Builder validity(String validity) {
            if (validity == null) {
              throw new MissingRequiredPropertyException("GetVedgeInventoryDevice", "validity");
            }
            this.validity = validity;
            return this;
        }
        public GetVedgeInventoryDevice build() {
            final var _resultValue = new GetVedgeInventoryDevice();
            _resultValue.chassisNumber = chassisNumber;
            _resultValue.deviceType = deviceType;
            _resultValue.hostname = hostname;
            _resultValue.serialNumber = serialNumber;
            _resultValue.siteId = siteId;
            _resultValue.validity = validity;
            return _resultValue;
        }
    }
}
