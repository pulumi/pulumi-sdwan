// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CiscoVpnInterfaceFeatureTemplateIpv6VrrpIpv6Address {
    /**
     * @return Use link-local IPv6 Address
     * 
     */
    private @Nullable String ipv6LinkLocal;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String ipv6LinkLocalVariable;
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    private @Nullable Boolean optional;
    /**
     * @return Assign Global IPv6 Prefix
     * 
     */
    private @Nullable String prefix;
    /**
     * @return Variable name
     * 
     */
    private @Nullable String prefixVariable;

    private CiscoVpnInterfaceFeatureTemplateIpv6VrrpIpv6Address() {}
    /**
     * @return Use link-local IPv6 Address
     * 
     */
    public Optional<String> ipv6LinkLocal() {
        return Optional.ofNullable(this.ipv6LinkLocal);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> ipv6LinkLocalVariable() {
        return Optional.ofNullable(this.ipv6LinkLocalVariable);
    }
    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Boolean> optional() {
        return Optional.ofNullable(this.optional);
    }
    /**
     * @return Assign Global IPv6 Prefix
     * 
     */
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }
    /**
     * @return Variable name
     * 
     */
    public Optional<String> prefixVariable() {
        return Optional.ofNullable(this.prefixVariable);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CiscoVpnInterfaceFeatureTemplateIpv6VrrpIpv6Address defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String ipv6LinkLocal;
        private @Nullable String ipv6LinkLocalVariable;
        private @Nullable Boolean optional;
        private @Nullable String prefix;
        private @Nullable String prefixVariable;
        public Builder() {}
        public Builder(CiscoVpnInterfaceFeatureTemplateIpv6VrrpIpv6Address defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipv6LinkLocal = defaults.ipv6LinkLocal;
    	      this.ipv6LinkLocalVariable = defaults.ipv6LinkLocalVariable;
    	      this.optional = defaults.optional;
    	      this.prefix = defaults.prefix;
    	      this.prefixVariable = defaults.prefixVariable;
        }

        @CustomType.Setter
        public Builder ipv6LinkLocal(@Nullable String ipv6LinkLocal) {

            this.ipv6LinkLocal = ipv6LinkLocal;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6LinkLocalVariable(@Nullable String ipv6LinkLocalVariable) {

            this.ipv6LinkLocalVariable = ipv6LinkLocalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder optional(@Nullable Boolean optional) {

            this.optional = optional;
            return this;
        }
        @CustomType.Setter
        public Builder prefix(@Nullable String prefix) {

            this.prefix = prefix;
            return this;
        }
        @CustomType.Setter
        public Builder prefixVariable(@Nullable String prefixVariable) {

            this.prefixVariable = prefixVariable;
            return this;
        }
        public CiscoVpnInterfaceFeatureTemplateIpv6VrrpIpv6Address build() {
            final var _resultValue = new CiscoVpnInterfaceFeatureTemplateIpv6VrrpIpv6Address();
            _resultValue.ipv6LinkLocal = ipv6LinkLocal;
            _resultValue.ipv6LinkLocalVariable = ipv6LinkLocalVariable;
            _resultValue.optional = optional;
            _resultValue.prefix = prefix;
            _resultValue.prefixVariable = prefixVariable;
            return _resultValue;
        }
    }
}
