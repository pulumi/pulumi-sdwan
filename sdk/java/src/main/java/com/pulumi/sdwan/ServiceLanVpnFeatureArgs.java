// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureAdvertiseOmpIpv4Args;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureAdvertiseOmpIpv6Args;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureGreRouteArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureHostMappingArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureIpsecRouteArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureIpv4ExportRouteTargetArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureIpv4ImportRouteTargetArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureIpv4StaticRouteArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureIpv6ExportRouteTargetArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureIpv6ImportRouteTargetArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureIpv6StaticRouteArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureNat64V4PoolArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureNatPoolArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureNatPortForwardArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureRouteLeakFromGlobalVpnArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureRouteLeakFromOtherServiceArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureRouteLeakToGlobalVpnArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureServiceArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureServiceRouteArgs;
import com.pulumi.sdwan.inputs.ServiceLanVpnFeatureStaticNatArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceLanVpnFeatureArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceLanVpnFeatureArgs Empty = new ServiceLanVpnFeatureArgs();

    /**
     * OMP Advertise IPv4
     * 
     */
    @Import(name="advertiseOmpIpv4s")
    private @Nullable Output<List<ServiceLanVpnFeatureAdvertiseOmpIpv4Args>> advertiseOmpIpv4s;

    /**
     * @return OMP Advertise IPv4
     * 
     */
    public Optional<Output<List<ServiceLanVpnFeatureAdvertiseOmpIpv4Args>>> advertiseOmpIpv4s() {
        return Optional.ofNullable(this.advertiseOmpIpv4s);
    }

    /**
     * OMP Advertise IPv6
     * 
     */
    @Import(name="advertiseOmpIpv6s")
    private @Nullable Output<List<ServiceLanVpnFeatureAdvertiseOmpIpv6Args>> advertiseOmpIpv6s;

    /**
     * @return OMP Advertise IPv6
     * 
     */
    public Optional<Output<List<ServiceLanVpnFeatureAdvertiseOmpIpv6Args>>> advertiseOmpIpv6s() {
        return Optional.ofNullable(this.advertiseOmpIpv6s);
    }

    /**
     * Name
     * 
     */
    @Import(name="configDescription")
    private @Nullable Output<String> configDescription;

    /**
     * @return Name
     * 
     */
    public Optional<Output<String>> configDescription() {
        return Optional.ofNullable(this.configDescription);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="configDescriptionVariable")
    private @Nullable Output<String> configDescriptionVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> configDescriptionVariable() {
        return Optional.ofNullable(this.configDescriptionVariable);
    }

    /**
     * The description of the Feature
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Enable SDWAN Remote Access - Default value: `false`
     * 
     */
    @Import(name="enableSdwanRemoteAccess")
    private @Nullable Output<Boolean> enableSdwanRemoteAccess;

    /**
     * @return Enable SDWAN Remote Access - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> enableSdwanRemoteAccess() {
        return Optional.ofNullable(this.enableSdwanRemoteAccess);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId", required=true)
    private Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Output<String> featureProfileId() {
        return this.featureProfileId;
    }

    /**
     * IPv4 Static GRE Route
     * 
     */
    @Import(name="greRoutes")
    private @Nullable Output<List<ServiceLanVpnFeatureGreRouteArgs>> greRoutes;

    /**
     * @return IPv4 Static GRE Route
     * 
     */
    public Optional<Output<List<ServiceLanVpnFeatureGreRouteArgs>>> greRoutes() {
        return Optional.ofNullable(this.greRoutes);
    }

    @Import(name="hostMappings")
    private @Nullable Output<List<ServiceLanVpnFeatureHostMappingArgs>> hostMappings;

    public Optional<Output<List<ServiceLanVpnFeatureHostMappingArgs>>> hostMappings() {
        return Optional.ofNullable(this.hostMappings);
    }

    /**
     * IPv4 Static IPSEC Route
     * 
     */
    @Import(name="ipsecRoutes")
    private @Nullable Output<List<ServiceLanVpnFeatureIpsecRouteArgs>> ipsecRoutes;

    /**
     * @return IPv4 Static IPSEC Route
     * 
     */
    public Optional<Output<List<ServiceLanVpnFeatureIpsecRouteArgs>>> ipsecRoutes() {
        return Optional.ofNullable(this.ipsecRoutes);
    }

    @Import(name="ipv4ExportRouteTargets")
    private @Nullable Output<List<ServiceLanVpnFeatureIpv4ExportRouteTargetArgs>> ipv4ExportRouteTargets;

    public Optional<Output<List<ServiceLanVpnFeatureIpv4ExportRouteTargetArgs>>> ipv4ExportRouteTargets() {
        return Optional.ofNullable(this.ipv4ExportRouteTargets);
    }

    @Import(name="ipv4ImportRouteTargets")
    private @Nullable Output<List<ServiceLanVpnFeatureIpv4ImportRouteTargetArgs>> ipv4ImportRouteTargets;

    public Optional<Output<List<ServiceLanVpnFeatureIpv4ImportRouteTargetArgs>>> ipv4ImportRouteTargets() {
        return Optional.ofNullable(this.ipv4ImportRouteTargets);
    }

    /**
     * IPv4 Static Route
     * 
     */
    @Import(name="ipv4StaticRoutes")
    private @Nullable Output<List<ServiceLanVpnFeatureIpv4StaticRouteArgs>> ipv4StaticRoutes;

    /**
     * @return IPv4 Static Route
     * 
     */
    public Optional<Output<List<ServiceLanVpnFeatureIpv4StaticRouteArgs>>> ipv4StaticRoutes() {
        return Optional.ofNullable(this.ipv4StaticRoutes);
    }

    @Import(name="ipv6ExportRouteTargets")
    private @Nullable Output<List<ServiceLanVpnFeatureIpv6ExportRouteTargetArgs>> ipv6ExportRouteTargets;

    public Optional<Output<List<ServiceLanVpnFeatureIpv6ExportRouteTargetArgs>>> ipv6ExportRouteTargets() {
        return Optional.ofNullable(this.ipv6ExportRouteTargets);
    }

    @Import(name="ipv6ImportRouteTargets")
    private @Nullable Output<List<ServiceLanVpnFeatureIpv6ImportRouteTargetArgs>> ipv6ImportRouteTargets;

    public Optional<Output<List<ServiceLanVpnFeatureIpv6ImportRouteTargetArgs>>> ipv6ImportRouteTargets() {
        return Optional.ofNullable(this.ipv6ImportRouteTargets);
    }

    /**
     * IPv6 Static Route
     * 
     */
    @Import(name="ipv6StaticRoutes")
    private @Nullable Output<List<ServiceLanVpnFeatureIpv6StaticRouteArgs>> ipv6StaticRoutes;

    /**
     * @return IPv6 Static Route
     * 
     */
    public Optional<Output<List<ServiceLanVpnFeatureIpv6StaticRouteArgs>>> ipv6StaticRoutes() {
        return Optional.ofNullable(this.ipv6StaticRoutes);
    }

    /**
     * The name of the Feature
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * NAT64 V4 Pool
     * 
     */
    @Import(name="nat64V4Pools")
    private @Nullable Output<List<ServiceLanVpnFeatureNat64V4PoolArgs>> nat64V4Pools;

    /**
     * @return NAT64 V4 Pool
     * 
     */
    public Optional<Output<List<ServiceLanVpnFeatureNat64V4PoolArgs>>> nat64V4Pools() {
        return Optional.ofNullable(this.nat64V4Pools);
    }

    /**
     * NAT Pool
     * 
     */
    @Import(name="natPools")
    private @Nullable Output<List<ServiceLanVpnFeatureNatPoolArgs>> natPools;

    /**
     * @return NAT Pool
     * 
     */
    public Optional<Output<List<ServiceLanVpnFeatureNatPoolArgs>>> natPools() {
        return Optional.ofNullable(this.natPools);
    }

    /**
     * NAT Port Forward
     * 
     */
    @Import(name="natPortForwards")
    private @Nullable Output<List<ServiceLanVpnFeatureNatPortForwardArgs>> natPortForwards;

    /**
     * @return NAT Port Forward
     * 
     */
    public Optional<Output<List<ServiceLanVpnFeatureNatPortForwardArgs>>> natPortForwards() {
        return Optional.ofNullable(this.natPortForwards);
    }

    /**
     * OMP Admin Distance IPv4 - Range: `1`-`255`
     * 
     */
    @Import(name="ompAdminDistanceIpv4")
    private @Nullable Output<Integer> ompAdminDistanceIpv4;

    /**
     * @return OMP Admin Distance IPv4 - Range: `1`-`255`
     * 
     */
    public Optional<Output<Integer>> ompAdminDistanceIpv4() {
        return Optional.ofNullable(this.ompAdminDistanceIpv4);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ompAdminDistanceIpv4Variable")
    private @Nullable Output<String> ompAdminDistanceIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ompAdminDistanceIpv4Variable() {
        return Optional.ofNullable(this.ompAdminDistanceIpv4Variable);
    }

    /**
     * OMP Admin Distance IPv6 - Range: `1`-`255`
     * 
     */
    @Import(name="ompAdminDistanceIpv6")
    private @Nullable Output<Integer> ompAdminDistanceIpv6;

    /**
     * @return OMP Admin Distance IPv6 - Range: `1`-`255`
     * 
     */
    public Optional<Output<Integer>> ompAdminDistanceIpv6() {
        return Optional.ofNullable(this.ompAdminDistanceIpv6);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="ompAdminDistanceIpv6Variable")
    private @Nullable Output<String> ompAdminDistanceIpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> ompAdminDistanceIpv6Variable() {
        return Optional.ofNullable(this.ompAdminDistanceIpv6Variable);
    }

    /**
     * Primary DNS Address (IPv4)
     * 
     */
    @Import(name="primaryDnsAddressIpv4")
    private @Nullable Output<String> primaryDnsAddressIpv4;

    /**
     * @return Primary DNS Address (IPv4)
     * 
     */
    public Optional<Output<String>> primaryDnsAddressIpv4() {
        return Optional.ofNullable(this.primaryDnsAddressIpv4);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="primaryDnsAddressIpv4Variable")
    private @Nullable Output<String> primaryDnsAddressIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> primaryDnsAddressIpv4Variable() {
        return Optional.ofNullable(this.primaryDnsAddressIpv4Variable);
    }

    /**
     * Primary DNS Address (IPv6)
     * 
     */
    @Import(name="primaryDnsAddressIpv6")
    private @Nullable Output<String> primaryDnsAddressIpv6;

    /**
     * @return Primary DNS Address (IPv6)
     * 
     */
    public Optional<Output<String>> primaryDnsAddressIpv6() {
        return Optional.ofNullable(this.primaryDnsAddressIpv6);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="primaryDnsAddressIpv6Variable")
    private @Nullable Output<String> primaryDnsAddressIpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> primaryDnsAddressIpv6Variable() {
        return Optional.ofNullable(this.primaryDnsAddressIpv6Variable);
    }

    /**
     * Enable route leaking from Global to Service VPN
     * 
     */
    @Import(name="routeLeakFromGlobalVpns")
    private @Nullable Output<List<ServiceLanVpnFeatureRouteLeakFromGlobalVpnArgs>> routeLeakFromGlobalVpns;

    /**
     * @return Enable route leaking from Global to Service VPN
     * 
     */
    public Optional<Output<List<ServiceLanVpnFeatureRouteLeakFromGlobalVpnArgs>>> routeLeakFromGlobalVpns() {
        return Optional.ofNullable(this.routeLeakFromGlobalVpns);
    }

    /**
     * Enable route leak from another Service VPN to current Service VPN
     * 
     */
    @Import(name="routeLeakFromOtherServices")
    private @Nullable Output<List<ServiceLanVpnFeatureRouteLeakFromOtherServiceArgs>> routeLeakFromOtherServices;

    /**
     * @return Enable route leak from another Service VPN to current Service VPN
     * 
     */
    public Optional<Output<List<ServiceLanVpnFeatureRouteLeakFromOtherServiceArgs>>> routeLeakFromOtherServices() {
        return Optional.ofNullable(this.routeLeakFromOtherServices);
    }

    /**
     * Enable route leaking from Service to Global VPN
     * 
     */
    @Import(name="routeLeakToGlobalVpns")
    private @Nullable Output<List<ServiceLanVpnFeatureRouteLeakToGlobalVpnArgs>> routeLeakToGlobalVpns;

    /**
     * @return Enable route leaking from Service to Global VPN
     * 
     */
    public Optional<Output<List<ServiceLanVpnFeatureRouteLeakToGlobalVpnArgs>>> routeLeakToGlobalVpns() {
        return Optional.ofNullable(this.routeLeakToGlobalVpns);
    }

    /**
     * Secondary DNS Address (IPv4)
     * 
     */
    @Import(name="secondaryDnsAddressIpv4")
    private @Nullable Output<String> secondaryDnsAddressIpv4;

    /**
     * @return Secondary DNS Address (IPv4)
     * 
     */
    public Optional<Output<String>> secondaryDnsAddressIpv4() {
        return Optional.ofNullable(this.secondaryDnsAddressIpv4);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="secondaryDnsAddressIpv4Variable")
    private @Nullable Output<String> secondaryDnsAddressIpv4Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> secondaryDnsAddressIpv4Variable() {
        return Optional.ofNullable(this.secondaryDnsAddressIpv4Variable);
    }

    /**
     * Secondary DNS Address (IPv6)
     * 
     */
    @Import(name="secondaryDnsAddressIpv6")
    private @Nullable Output<String> secondaryDnsAddressIpv6;

    /**
     * @return Secondary DNS Address (IPv6)
     * 
     */
    public Optional<Output<String>> secondaryDnsAddressIpv6() {
        return Optional.ofNullable(this.secondaryDnsAddressIpv6);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="secondaryDnsAddressIpv6Variable")
    private @Nullable Output<String> secondaryDnsAddressIpv6Variable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> secondaryDnsAddressIpv6Variable() {
        return Optional.ofNullable(this.secondaryDnsAddressIpv6Variable);
    }

    /**
     * Service
     * 
     */
    @Import(name="serviceRoutes")
    private @Nullable Output<List<ServiceLanVpnFeatureServiceRouteArgs>> serviceRoutes;

    /**
     * @return Service
     * 
     */
    public Optional<Output<List<ServiceLanVpnFeatureServiceRouteArgs>>> serviceRoutes() {
        return Optional.ofNullable(this.serviceRoutes);
    }

    /**
     * Service
     * 
     */
    @Import(name="services")
    private @Nullable Output<List<ServiceLanVpnFeatureServiceArgs>> services;

    /**
     * @return Service
     * 
     */
    public Optional<Output<List<ServiceLanVpnFeatureServiceArgs>>> services() {
        return Optional.ofNullable(this.services);
    }

    /**
     * Static NAT Rules
     * 
     */
    @Import(name="staticNats")
    private @Nullable Output<List<ServiceLanVpnFeatureStaticNatArgs>> staticNats;

    /**
     * @return Static NAT Rules
     * 
     */
    public Optional<Output<List<ServiceLanVpnFeatureStaticNatArgs>>> staticNats() {
        return Optional.ofNullable(this.staticNats);
    }

    /**
     * VPN - Range: `1`-`65527` - Default value: `0`
     * 
     */
    @Import(name="vpn")
    private @Nullable Output<Integer> vpn;

    /**
     * @return VPN - Range: `1`-`65527` - Default value: `0`
     * 
     */
    public Optional<Output<Integer>> vpn() {
        return Optional.ofNullable(this.vpn);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="vpnVariable")
    private @Nullable Output<String> vpnVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> vpnVariable() {
        return Optional.ofNullable(this.vpnVariable);
    }

    private ServiceLanVpnFeatureArgs() {}

    private ServiceLanVpnFeatureArgs(ServiceLanVpnFeatureArgs $) {
        this.advertiseOmpIpv4s = $.advertiseOmpIpv4s;
        this.advertiseOmpIpv6s = $.advertiseOmpIpv6s;
        this.configDescription = $.configDescription;
        this.configDescriptionVariable = $.configDescriptionVariable;
        this.description = $.description;
        this.enableSdwanRemoteAccess = $.enableSdwanRemoteAccess;
        this.featureProfileId = $.featureProfileId;
        this.greRoutes = $.greRoutes;
        this.hostMappings = $.hostMappings;
        this.ipsecRoutes = $.ipsecRoutes;
        this.ipv4ExportRouteTargets = $.ipv4ExportRouteTargets;
        this.ipv4ImportRouteTargets = $.ipv4ImportRouteTargets;
        this.ipv4StaticRoutes = $.ipv4StaticRoutes;
        this.ipv6ExportRouteTargets = $.ipv6ExportRouteTargets;
        this.ipv6ImportRouteTargets = $.ipv6ImportRouteTargets;
        this.ipv6StaticRoutes = $.ipv6StaticRoutes;
        this.name = $.name;
        this.nat64V4Pools = $.nat64V4Pools;
        this.natPools = $.natPools;
        this.natPortForwards = $.natPortForwards;
        this.ompAdminDistanceIpv4 = $.ompAdminDistanceIpv4;
        this.ompAdminDistanceIpv4Variable = $.ompAdminDistanceIpv4Variable;
        this.ompAdminDistanceIpv6 = $.ompAdminDistanceIpv6;
        this.ompAdminDistanceIpv6Variable = $.ompAdminDistanceIpv6Variable;
        this.primaryDnsAddressIpv4 = $.primaryDnsAddressIpv4;
        this.primaryDnsAddressIpv4Variable = $.primaryDnsAddressIpv4Variable;
        this.primaryDnsAddressIpv6 = $.primaryDnsAddressIpv6;
        this.primaryDnsAddressIpv6Variable = $.primaryDnsAddressIpv6Variable;
        this.routeLeakFromGlobalVpns = $.routeLeakFromGlobalVpns;
        this.routeLeakFromOtherServices = $.routeLeakFromOtherServices;
        this.routeLeakToGlobalVpns = $.routeLeakToGlobalVpns;
        this.secondaryDnsAddressIpv4 = $.secondaryDnsAddressIpv4;
        this.secondaryDnsAddressIpv4Variable = $.secondaryDnsAddressIpv4Variable;
        this.secondaryDnsAddressIpv6 = $.secondaryDnsAddressIpv6;
        this.secondaryDnsAddressIpv6Variable = $.secondaryDnsAddressIpv6Variable;
        this.serviceRoutes = $.serviceRoutes;
        this.services = $.services;
        this.staticNats = $.staticNats;
        this.vpn = $.vpn;
        this.vpnVariable = $.vpnVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceLanVpnFeatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceLanVpnFeatureArgs $;

        public Builder() {
            $ = new ServiceLanVpnFeatureArgs();
        }

        public Builder(ServiceLanVpnFeatureArgs defaults) {
            $ = new ServiceLanVpnFeatureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param advertiseOmpIpv4s OMP Advertise IPv4
         * 
         * @return builder
         * 
         */
        public Builder advertiseOmpIpv4s(@Nullable Output<List<ServiceLanVpnFeatureAdvertiseOmpIpv4Args>> advertiseOmpIpv4s) {
            $.advertiseOmpIpv4s = advertiseOmpIpv4s;
            return this;
        }

        /**
         * @param advertiseOmpIpv4s OMP Advertise IPv4
         * 
         * @return builder
         * 
         */
        public Builder advertiseOmpIpv4s(List<ServiceLanVpnFeatureAdvertiseOmpIpv4Args> advertiseOmpIpv4s) {
            return advertiseOmpIpv4s(Output.of(advertiseOmpIpv4s));
        }

        /**
         * @param advertiseOmpIpv4s OMP Advertise IPv4
         * 
         * @return builder
         * 
         */
        public Builder advertiseOmpIpv4s(ServiceLanVpnFeatureAdvertiseOmpIpv4Args... advertiseOmpIpv4s) {
            return advertiseOmpIpv4s(List.of(advertiseOmpIpv4s));
        }

        /**
         * @param advertiseOmpIpv6s OMP Advertise IPv6
         * 
         * @return builder
         * 
         */
        public Builder advertiseOmpIpv6s(@Nullable Output<List<ServiceLanVpnFeatureAdvertiseOmpIpv6Args>> advertiseOmpIpv6s) {
            $.advertiseOmpIpv6s = advertiseOmpIpv6s;
            return this;
        }

        /**
         * @param advertiseOmpIpv6s OMP Advertise IPv6
         * 
         * @return builder
         * 
         */
        public Builder advertiseOmpIpv6s(List<ServiceLanVpnFeatureAdvertiseOmpIpv6Args> advertiseOmpIpv6s) {
            return advertiseOmpIpv6s(Output.of(advertiseOmpIpv6s));
        }

        /**
         * @param advertiseOmpIpv6s OMP Advertise IPv6
         * 
         * @return builder
         * 
         */
        public Builder advertiseOmpIpv6s(ServiceLanVpnFeatureAdvertiseOmpIpv6Args... advertiseOmpIpv6s) {
            return advertiseOmpIpv6s(List.of(advertiseOmpIpv6s));
        }

        /**
         * @param configDescription Name
         * 
         * @return builder
         * 
         */
        public Builder configDescription(@Nullable Output<String> configDescription) {
            $.configDescription = configDescription;
            return this;
        }

        /**
         * @param configDescription Name
         * 
         * @return builder
         * 
         */
        public Builder configDescription(String configDescription) {
            return configDescription(Output.of(configDescription));
        }

        /**
         * @param configDescriptionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder configDescriptionVariable(@Nullable Output<String> configDescriptionVariable) {
            $.configDescriptionVariable = configDescriptionVariable;
            return this;
        }

        /**
         * @param configDescriptionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder configDescriptionVariable(String configDescriptionVariable) {
            return configDescriptionVariable(Output.of(configDescriptionVariable));
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param enableSdwanRemoteAccess Enable SDWAN Remote Access - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder enableSdwanRemoteAccess(@Nullable Output<Boolean> enableSdwanRemoteAccess) {
            $.enableSdwanRemoteAccess = enableSdwanRemoteAccess;
            return this;
        }

        /**
         * @param enableSdwanRemoteAccess Enable SDWAN Remote Access - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder enableSdwanRemoteAccess(Boolean enableSdwanRemoteAccess) {
            return enableSdwanRemoteAccess(Output.of(enableSdwanRemoteAccess));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param greRoutes IPv4 Static GRE Route
         * 
         * @return builder
         * 
         */
        public Builder greRoutes(@Nullable Output<List<ServiceLanVpnFeatureGreRouteArgs>> greRoutes) {
            $.greRoutes = greRoutes;
            return this;
        }

        /**
         * @param greRoutes IPv4 Static GRE Route
         * 
         * @return builder
         * 
         */
        public Builder greRoutes(List<ServiceLanVpnFeatureGreRouteArgs> greRoutes) {
            return greRoutes(Output.of(greRoutes));
        }

        /**
         * @param greRoutes IPv4 Static GRE Route
         * 
         * @return builder
         * 
         */
        public Builder greRoutes(ServiceLanVpnFeatureGreRouteArgs... greRoutes) {
            return greRoutes(List.of(greRoutes));
        }

        public Builder hostMappings(@Nullable Output<List<ServiceLanVpnFeatureHostMappingArgs>> hostMappings) {
            $.hostMappings = hostMappings;
            return this;
        }

        public Builder hostMappings(List<ServiceLanVpnFeatureHostMappingArgs> hostMappings) {
            return hostMappings(Output.of(hostMappings));
        }

        public Builder hostMappings(ServiceLanVpnFeatureHostMappingArgs... hostMappings) {
            return hostMappings(List.of(hostMappings));
        }

        /**
         * @param ipsecRoutes IPv4 Static IPSEC Route
         * 
         * @return builder
         * 
         */
        public Builder ipsecRoutes(@Nullable Output<List<ServiceLanVpnFeatureIpsecRouteArgs>> ipsecRoutes) {
            $.ipsecRoutes = ipsecRoutes;
            return this;
        }

        /**
         * @param ipsecRoutes IPv4 Static IPSEC Route
         * 
         * @return builder
         * 
         */
        public Builder ipsecRoutes(List<ServiceLanVpnFeatureIpsecRouteArgs> ipsecRoutes) {
            return ipsecRoutes(Output.of(ipsecRoutes));
        }

        /**
         * @param ipsecRoutes IPv4 Static IPSEC Route
         * 
         * @return builder
         * 
         */
        public Builder ipsecRoutes(ServiceLanVpnFeatureIpsecRouteArgs... ipsecRoutes) {
            return ipsecRoutes(List.of(ipsecRoutes));
        }

        public Builder ipv4ExportRouteTargets(@Nullable Output<List<ServiceLanVpnFeatureIpv4ExportRouteTargetArgs>> ipv4ExportRouteTargets) {
            $.ipv4ExportRouteTargets = ipv4ExportRouteTargets;
            return this;
        }

        public Builder ipv4ExportRouteTargets(List<ServiceLanVpnFeatureIpv4ExportRouteTargetArgs> ipv4ExportRouteTargets) {
            return ipv4ExportRouteTargets(Output.of(ipv4ExportRouteTargets));
        }

        public Builder ipv4ExportRouteTargets(ServiceLanVpnFeatureIpv4ExportRouteTargetArgs... ipv4ExportRouteTargets) {
            return ipv4ExportRouteTargets(List.of(ipv4ExportRouteTargets));
        }

        public Builder ipv4ImportRouteTargets(@Nullable Output<List<ServiceLanVpnFeatureIpv4ImportRouteTargetArgs>> ipv4ImportRouteTargets) {
            $.ipv4ImportRouteTargets = ipv4ImportRouteTargets;
            return this;
        }

        public Builder ipv4ImportRouteTargets(List<ServiceLanVpnFeatureIpv4ImportRouteTargetArgs> ipv4ImportRouteTargets) {
            return ipv4ImportRouteTargets(Output.of(ipv4ImportRouteTargets));
        }

        public Builder ipv4ImportRouteTargets(ServiceLanVpnFeatureIpv4ImportRouteTargetArgs... ipv4ImportRouteTargets) {
            return ipv4ImportRouteTargets(List.of(ipv4ImportRouteTargets));
        }

        /**
         * @param ipv4StaticRoutes IPv4 Static Route
         * 
         * @return builder
         * 
         */
        public Builder ipv4StaticRoutes(@Nullable Output<List<ServiceLanVpnFeatureIpv4StaticRouteArgs>> ipv4StaticRoutes) {
            $.ipv4StaticRoutes = ipv4StaticRoutes;
            return this;
        }

        /**
         * @param ipv4StaticRoutes IPv4 Static Route
         * 
         * @return builder
         * 
         */
        public Builder ipv4StaticRoutes(List<ServiceLanVpnFeatureIpv4StaticRouteArgs> ipv4StaticRoutes) {
            return ipv4StaticRoutes(Output.of(ipv4StaticRoutes));
        }

        /**
         * @param ipv4StaticRoutes IPv4 Static Route
         * 
         * @return builder
         * 
         */
        public Builder ipv4StaticRoutes(ServiceLanVpnFeatureIpv4StaticRouteArgs... ipv4StaticRoutes) {
            return ipv4StaticRoutes(List.of(ipv4StaticRoutes));
        }

        public Builder ipv6ExportRouteTargets(@Nullable Output<List<ServiceLanVpnFeatureIpv6ExportRouteTargetArgs>> ipv6ExportRouteTargets) {
            $.ipv6ExportRouteTargets = ipv6ExportRouteTargets;
            return this;
        }

        public Builder ipv6ExportRouteTargets(List<ServiceLanVpnFeatureIpv6ExportRouteTargetArgs> ipv6ExportRouteTargets) {
            return ipv6ExportRouteTargets(Output.of(ipv6ExportRouteTargets));
        }

        public Builder ipv6ExportRouteTargets(ServiceLanVpnFeatureIpv6ExportRouteTargetArgs... ipv6ExportRouteTargets) {
            return ipv6ExportRouteTargets(List.of(ipv6ExportRouteTargets));
        }

        public Builder ipv6ImportRouteTargets(@Nullable Output<List<ServiceLanVpnFeatureIpv6ImportRouteTargetArgs>> ipv6ImportRouteTargets) {
            $.ipv6ImportRouteTargets = ipv6ImportRouteTargets;
            return this;
        }

        public Builder ipv6ImportRouteTargets(List<ServiceLanVpnFeatureIpv6ImportRouteTargetArgs> ipv6ImportRouteTargets) {
            return ipv6ImportRouteTargets(Output.of(ipv6ImportRouteTargets));
        }

        public Builder ipv6ImportRouteTargets(ServiceLanVpnFeatureIpv6ImportRouteTargetArgs... ipv6ImportRouteTargets) {
            return ipv6ImportRouteTargets(List.of(ipv6ImportRouteTargets));
        }

        /**
         * @param ipv6StaticRoutes IPv6 Static Route
         * 
         * @return builder
         * 
         */
        public Builder ipv6StaticRoutes(@Nullable Output<List<ServiceLanVpnFeatureIpv6StaticRouteArgs>> ipv6StaticRoutes) {
            $.ipv6StaticRoutes = ipv6StaticRoutes;
            return this;
        }

        /**
         * @param ipv6StaticRoutes IPv6 Static Route
         * 
         * @return builder
         * 
         */
        public Builder ipv6StaticRoutes(List<ServiceLanVpnFeatureIpv6StaticRouteArgs> ipv6StaticRoutes) {
            return ipv6StaticRoutes(Output.of(ipv6StaticRoutes));
        }

        /**
         * @param ipv6StaticRoutes IPv6 Static Route
         * 
         * @return builder
         * 
         */
        public Builder ipv6StaticRoutes(ServiceLanVpnFeatureIpv6StaticRouteArgs... ipv6StaticRoutes) {
            return ipv6StaticRoutes(List.of(ipv6StaticRoutes));
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nat64V4Pools NAT64 V4 Pool
         * 
         * @return builder
         * 
         */
        public Builder nat64V4Pools(@Nullable Output<List<ServiceLanVpnFeatureNat64V4PoolArgs>> nat64V4Pools) {
            $.nat64V4Pools = nat64V4Pools;
            return this;
        }

        /**
         * @param nat64V4Pools NAT64 V4 Pool
         * 
         * @return builder
         * 
         */
        public Builder nat64V4Pools(List<ServiceLanVpnFeatureNat64V4PoolArgs> nat64V4Pools) {
            return nat64V4Pools(Output.of(nat64V4Pools));
        }

        /**
         * @param nat64V4Pools NAT64 V4 Pool
         * 
         * @return builder
         * 
         */
        public Builder nat64V4Pools(ServiceLanVpnFeatureNat64V4PoolArgs... nat64V4Pools) {
            return nat64V4Pools(List.of(nat64V4Pools));
        }

        /**
         * @param natPools NAT Pool
         * 
         * @return builder
         * 
         */
        public Builder natPools(@Nullable Output<List<ServiceLanVpnFeatureNatPoolArgs>> natPools) {
            $.natPools = natPools;
            return this;
        }

        /**
         * @param natPools NAT Pool
         * 
         * @return builder
         * 
         */
        public Builder natPools(List<ServiceLanVpnFeatureNatPoolArgs> natPools) {
            return natPools(Output.of(natPools));
        }

        /**
         * @param natPools NAT Pool
         * 
         * @return builder
         * 
         */
        public Builder natPools(ServiceLanVpnFeatureNatPoolArgs... natPools) {
            return natPools(List.of(natPools));
        }

        /**
         * @param natPortForwards NAT Port Forward
         * 
         * @return builder
         * 
         */
        public Builder natPortForwards(@Nullable Output<List<ServiceLanVpnFeatureNatPortForwardArgs>> natPortForwards) {
            $.natPortForwards = natPortForwards;
            return this;
        }

        /**
         * @param natPortForwards NAT Port Forward
         * 
         * @return builder
         * 
         */
        public Builder natPortForwards(List<ServiceLanVpnFeatureNatPortForwardArgs> natPortForwards) {
            return natPortForwards(Output.of(natPortForwards));
        }

        /**
         * @param natPortForwards NAT Port Forward
         * 
         * @return builder
         * 
         */
        public Builder natPortForwards(ServiceLanVpnFeatureNatPortForwardArgs... natPortForwards) {
            return natPortForwards(List.of(natPortForwards));
        }

        /**
         * @param ompAdminDistanceIpv4 OMP Admin Distance IPv4 - Range: `1`-`255`
         * 
         * @return builder
         * 
         */
        public Builder ompAdminDistanceIpv4(@Nullable Output<Integer> ompAdminDistanceIpv4) {
            $.ompAdminDistanceIpv4 = ompAdminDistanceIpv4;
            return this;
        }

        /**
         * @param ompAdminDistanceIpv4 OMP Admin Distance IPv4 - Range: `1`-`255`
         * 
         * @return builder
         * 
         */
        public Builder ompAdminDistanceIpv4(Integer ompAdminDistanceIpv4) {
            return ompAdminDistanceIpv4(Output.of(ompAdminDistanceIpv4));
        }

        /**
         * @param ompAdminDistanceIpv4Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ompAdminDistanceIpv4Variable(@Nullable Output<String> ompAdminDistanceIpv4Variable) {
            $.ompAdminDistanceIpv4Variable = ompAdminDistanceIpv4Variable;
            return this;
        }

        /**
         * @param ompAdminDistanceIpv4Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ompAdminDistanceIpv4Variable(String ompAdminDistanceIpv4Variable) {
            return ompAdminDistanceIpv4Variable(Output.of(ompAdminDistanceIpv4Variable));
        }

        /**
         * @param ompAdminDistanceIpv6 OMP Admin Distance IPv6 - Range: `1`-`255`
         * 
         * @return builder
         * 
         */
        public Builder ompAdminDistanceIpv6(@Nullable Output<Integer> ompAdminDistanceIpv6) {
            $.ompAdminDistanceIpv6 = ompAdminDistanceIpv6;
            return this;
        }

        /**
         * @param ompAdminDistanceIpv6 OMP Admin Distance IPv6 - Range: `1`-`255`
         * 
         * @return builder
         * 
         */
        public Builder ompAdminDistanceIpv6(Integer ompAdminDistanceIpv6) {
            return ompAdminDistanceIpv6(Output.of(ompAdminDistanceIpv6));
        }

        /**
         * @param ompAdminDistanceIpv6Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ompAdminDistanceIpv6Variable(@Nullable Output<String> ompAdminDistanceIpv6Variable) {
            $.ompAdminDistanceIpv6Variable = ompAdminDistanceIpv6Variable;
            return this;
        }

        /**
         * @param ompAdminDistanceIpv6Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder ompAdminDistanceIpv6Variable(String ompAdminDistanceIpv6Variable) {
            return ompAdminDistanceIpv6Variable(Output.of(ompAdminDistanceIpv6Variable));
        }

        /**
         * @param primaryDnsAddressIpv4 Primary DNS Address (IPv4)
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv4(@Nullable Output<String> primaryDnsAddressIpv4) {
            $.primaryDnsAddressIpv4 = primaryDnsAddressIpv4;
            return this;
        }

        /**
         * @param primaryDnsAddressIpv4 Primary DNS Address (IPv4)
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv4(String primaryDnsAddressIpv4) {
            return primaryDnsAddressIpv4(Output.of(primaryDnsAddressIpv4));
        }

        /**
         * @param primaryDnsAddressIpv4Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv4Variable(@Nullable Output<String> primaryDnsAddressIpv4Variable) {
            $.primaryDnsAddressIpv4Variable = primaryDnsAddressIpv4Variable;
            return this;
        }

        /**
         * @param primaryDnsAddressIpv4Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv4Variable(String primaryDnsAddressIpv4Variable) {
            return primaryDnsAddressIpv4Variable(Output.of(primaryDnsAddressIpv4Variable));
        }

        /**
         * @param primaryDnsAddressIpv6 Primary DNS Address (IPv6)
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv6(@Nullable Output<String> primaryDnsAddressIpv6) {
            $.primaryDnsAddressIpv6 = primaryDnsAddressIpv6;
            return this;
        }

        /**
         * @param primaryDnsAddressIpv6 Primary DNS Address (IPv6)
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv6(String primaryDnsAddressIpv6) {
            return primaryDnsAddressIpv6(Output.of(primaryDnsAddressIpv6));
        }

        /**
         * @param primaryDnsAddressIpv6Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv6Variable(@Nullable Output<String> primaryDnsAddressIpv6Variable) {
            $.primaryDnsAddressIpv6Variable = primaryDnsAddressIpv6Variable;
            return this;
        }

        /**
         * @param primaryDnsAddressIpv6Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder primaryDnsAddressIpv6Variable(String primaryDnsAddressIpv6Variable) {
            return primaryDnsAddressIpv6Variable(Output.of(primaryDnsAddressIpv6Variable));
        }

        /**
         * @param routeLeakFromGlobalVpns Enable route leaking from Global to Service VPN
         * 
         * @return builder
         * 
         */
        public Builder routeLeakFromGlobalVpns(@Nullable Output<List<ServiceLanVpnFeatureRouteLeakFromGlobalVpnArgs>> routeLeakFromGlobalVpns) {
            $.routeLeakFromGlobalVpns = routeLeakFromGlobalVpns;
            return this;
        }

        /**
         * @param routeLeakFromGlobalVpns Enable route leaking from Global to Service VPN
         * 
         * @return builder
         * 
         */
        public Builder routeLeakFromGlobalVpns(List<ServiceLanVpnFeatureRouteLeakFromGlobalVpnArgs> routeLeakFromGlobalVpns) {
            return routeLeakFromGlobalVpns(Output.of(routeLeakFromGlobalVpns));
        }

        /**
         * @param routeLeakFromGlobalVpns Enable route leaking from Global to Service VPN
         * 
         * @return builder
         * 
         */
        public Builder routeLeakFromGlobalVpns(ServiceLanVpnFeatureRouteLeakFromGlobalVpnArgs... routeLeakFromGlobalVpns) {
            return routeLeakFromGlobalVpns(List.of(routeLeakFromGlobalVpns));
        }

        /**
         * @param routeLeakFromOtherServices Enable route leak from another Service VPN to current Service VPN
         * 
         * @return builder
         * 
         */
        public Builder routeLeakFromOtherServices(@Nullable Output<List<ServiceLanVpnFeatureRouteLeakFromOtherServiceArgs>> routeLeakFromOtherServices) {
            $.routeLeakFromOtherServices = routeLeakFromOtherServices;
            return this;
        }

        /**
         * @param routeLeakFromOtherServices Enable route leak from another Service VPN to current Service VPN
         * 
         * @return builder
         * 
         */
        public Builder routeLeakFromOtherServices(List<ServiceLanVpnFeatureRouteLeakFromOtherServiceArgs> routeLeakFromOtherServices) {
            return routeLeakFromOtherServices(Output.of(routeLeakFromOtherServices));
        }

        /**
         * @param routeLeakFromOtherServices Enable route leak from another Service VPN to current Service VPN
         * 
         * @return builder
         * 
         */
        public Builder routeLeakFromOtherServices(ServiceLanVpnFeatureRouteLeakFromOtherServiceArgs... routeLeakFromOtherServices) {
            return routeLeakFromOtherServices(List.of(routeLeakFromOtherServices));
        }

        /**
         * @param routeLeakToGlobalVpns Enable route leaking from Service to Global VPN
         * 
         * @return builder
         * 
         */
        public Builder routeLeakToGlobalVpns(@Nullable Output<List<ServiceLanVpnFeatureRouteLeakToGlobalVpnArgs>> routeLeakToGlobalVpns) {
            $.routeLeakToGlobalVpns = routeLeakToGlobalVpns;
            return this;
        }

        /**
         * @param routeLeakToGlobalVpns Enable route leaking from Service to Global VPN
         * 
         * @return builder
         * 
         */
        public Builder routeLeakToGlobalVpns(List<ServiceLanVpnFeatureRouteLeakToGlobalVpnArgs> routeLeakToGlobalVpns) {
            return routeLeakToGlobalVpns(Output.of(routeLeakToGlobalVpns));
        }

        /**
         * @param routeLeakToGlobalVpns Enable route leaking from Service to Global VPN
         * 
         * @return builder
         * 
         */
        public Builder routeLeakToGlobalVpns(ServiceLanVpnFeatureRouteLeakToGlobalVpnArgs... routeLeakToGlobalVpns) {
            return routeLeakToGlobalVpns(List.of(routeLeakToGlobalVpns));
        }

        /**
         * @param secondaryDnsAddressIpv4 Secondary DNS Address (IPv4)
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv4(@Nullable Output<String> secondaryDnsAddressIpv4) {
            $.secondaryDnsAddressIpv4 = secondaryDnsAddressIpv4;
            return this;
        }

        /**
         * @param secondaryDnsAddressIpv4 Secondary DNS Address (IPv4)
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv4(String secondaryDnsAddressIpv4) {
            return secondaryDnsAddressIpv4(Output.of(secondaryDnsAddressIpv4));
        }

        /**
         * @param secondaryDnsAddressIpv4Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv4Variable(@Nullable Output<String> secondaryDnsAddressIpv4Variable) {
            $.secondaryDnsAddressIpv4Variable = secondaryDnsAddressIpv4Variable;
            return this;
        }

        /**
         * @param secondaryDnsAddressIpv4Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv4Variable(String secondaryDnsAddressIpv4Variable) {
            return secondaryDnsAddressIpv4Variable(Output.of(secondaryDnsAddressIpv4Variable));
        }

        /**
         * @param secondaryDnsAddressIpv6 Secondary DNS Address (IPv6)
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv6(@Nullable Output<String> secondaryDnsAddressIpv6) {
            $.secondaryDnsAddressIpv6 = secondaryDnsAddressIpv6;
            return this;
        }

        /**
         * @param secondaryDnsAddressIpv6 Secondary DNS Address (IPv6)
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv6(String secondaryDnsAddressIpv6) {
            return secondaryDnsAddressIpv6(Output.of(secondaryDnsAddressIpv6));
        }

        /**
         * @param secondaryDnsAddressIpv6Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv6Variable(@Nullable Output<String> secondaryDnsAddressIpv6Variable) {
            $.secondaryDnsAddressIpv6Variable = secondaryDnsAddressIpv6Variable;
            return this;
        }

        /**
         * @param secondaryDnsAddressIpv6Variable Variable name
         * 
         * @return builder
         * 
         */
        public Builder secondaryDnsAddressIpv6Variable(String secondaryDnsAddressIpv6Variable) {
            return secondaryDnsAddressIpv6Variable(Output.of(secondaryDnsAddressIpv6Variable));
        }

        /**
         * @param serviceRoutes Service
         * 
         * @return builder
         * 
         */
        public Builder serviceRoutes(@Nullable Output<List<ServiceLanVpnFeatureServiceRouteArgs>> serviceRoutes) {
            $.serviceRoutes = serviceRoutes;
            return this;
        }

        /**
         * @param serviceRoutes Service
         * 
         * @return builder
         * 
         */
        public Builder serviceRoutes(List<ServiceLanVpnFeatureServiceRouteArgs> serviceRoutes) {
            return serviceRoutes(Output.of(serviceRoutes));
        }

        /**
         * @param serviceRoutes Service
         * 
         * @return builder
         * 
         */
        public Builder serviceRoutes(ServiceLanVpnFeatureServiceRouteArgs... serviceRoutes) {
            return serviceRoutes(List.of(serviceRoutes));
        }

        /**
         * @param services Service
         * 
         * @return builder
         * 
         */
        public Builder services(@Nullable Output<List<ServiceLanVpnFeatureServiceArgs>> services) {
            $.services = services;
            return this;
        }

        /**
         * @param services Service
         * 
         * @return builder
         * 
         */
        public Builder services(List<ServiceLanVpnFeatureServiceArgs> services) {
            return services(Output.of(services));
        }

        /**
         * @param services Service
         * 
         * @return builder
         * 
         */
        public Builder services(ServiceLanVpnFeatureServiceArgs... services) {
            return services(List.of(services));
        }

        /**
         * @param staticNats Static NAT Rules
         * 
         * @return builder
         * 
         */
        public Builder staticNats(@Nullable Output<List<ServiceLanVpnFeatureStaticNatArgs>> staticNats) {
            $.staticNats = staticNats;
            return this;
        }

        /**
         * @param staticNats Static NAT Rules
         * 
         * @return builder
         * 
         */
        public Builder staticNats(List<ServiceLanVpnFeatureStaticNatArgs> staticNats) {
            return staticNats(Output.of(staticNats));
        }

        /**
         * @param staticNats Static NAT Rules
         * 
         * @return builder
         * 
         */
        public Builder staticNats(ServiceLanVpnFeatureStaticNatArgs... staticNats) {
            return staticNats(List.of(staticNats));
        }

        /**
         * @param vpn VPN - Range: `1`-`65527` - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder vpn(@Nullable Output<Integer> vpn) {
            $.vpn = vpn;
            return this;
        }

        /**
         * @param vpn VPN - Range: `1`-`65527` - Default value: `0`
         * 
         * @return builder
         * 
         */
        public Builder vpn(Integer vpn) {
            return vpn(Output.of(vpn));
        }

        /**
         * @param vpnVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vpnVariable(@Nullable Output<String> vpnVariable) {
            $.vpnVariable = vpnVariable;
            return this;
        }

        /**
         * @param vpnVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder vpnVariable(String vpnVariable) {
            return vpnVariable(Output.of(vpnVariable));
        }

        public ServiceLanVpnFeatureArgs build() {
            if ($.featureProfileId == null) {
                throw new MissingRequiredPropertyException("ServiceLanVpnFeatureArgs", "featureProfileId");
            }
            return $;
        }
    }

}
