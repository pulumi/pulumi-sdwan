// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceLanVpnProfileParcelNatPoolArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceLanVpnProfileParcelNatPoolArgs Empty = new ServiceLanVpnProfileParcelNatPoolArgs();

    /**
     * NAT Direction
     *   - Choices: `inside`, `outside`
     * 
     */
    @Import(name="direction")
    private @Nullable Output<String> direction;

    /**
     * @return NAT Direction
     *   - Choices: `inside`, `outside`
     * 
     */
    public Optional<Output<String>> direction() {
        return Optional.ofNullable(this.direction);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="directionVariable")
    private @Nullable Output<String> directionVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> directionVariable() {
        return Optional.ofNullable(this.directionVariable);
    }

    /**
     * NAT Pool Name
     *   - Range: `1`-`32`
     * 
     */
    @Import(name="natPoolName")
    private @Nullable Output<Integer> natPoolName;

    /**
     * @return NAT Pool Name
     *   - Range: `1`-`32`
     * 
     */
    public Optional<Output<Integer>> natPoolName() {
        return Optional.ofNullable(this.natPoolName);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="natPoolNameVariable")
    private @Nullable Output<String> natPoolNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> natPoolNameVariable() {
        return Optional.ofNullable(this.natPoolNameVariable);
    }

    /**
     * NAT Overload
     *   - Default value: `true`
     * 
     */
    @Import(name="overload")
    private @Nullable Output<Boolean> overload;

    /**
     * @return NAT Overload
     *   - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> overload() {
        return Optional.ofNullable(this.overload);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="overloadVariable")
    private @Nullable Output<String> overloadVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> overloadVariable() {
        return Optional.ofNullable(this.overloadVariable);
    }

    /**
     * NAT Pool Prefix Length
     *   - Range: `1`-`32`
     * 
     */
    @Import(name="prefixLength")
    private @Nullable Output<Integer> prefixLength;

    /**
     * @return NAT Pool Prefix Length
     *   - Range: `1`-`32`
     * 
     */
    public Optional<Output<Integer>> prefixLength() {
        return Optional.ofNullable(this.prefixLength);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="prefixLengthVariable")
    private @Nullable Output<String> prefixLengthVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> prefixLengthVariable() {
        return Optional.ofNullable(this.prefixLengthVariable);
    }

    /**
     * NAT Pool Range End
     * 
     */
    @Import(name="rangeEnd")
    private @Nullable Output<String> rangeEnd;

    /**
     * @return NAT Pool Range End
     * 
     */
    public Optional<Output<String>> rangeEnd() {
        return Optional.ofNullable(this.rangeEnd);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="rangeEndVariable")
    private @Nullable Output<String> rangeEndVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> rangeEndVariable() {
        return Optional.ofNullable(this.rangeEndVariable);
    }

    /**
     * NAT Pool Range Start
     * 
     */
    @Import(name="rangeStart")
    private @Nullable Output<String> rangeStart;

    /**
     * @return NAT Pool Range Start
     * 
     */
    public Optional<Output<String>> rangeStart() {
        return Optional.ofNullable(this.rangeStart);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="rangeStartVariable")
    private @Nullable Output<String> rangeStartVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> rangeStartVariable() {
        return Optional.ofNullable(this.rangeStartVariable);
    }

    @Import(name="trackerObjectId")
    private @Nullable Output<String> trackerObjectId;

    public Optional<Output<String>> trackerObjectId() {
        return Optional.ofNullable(this.trackerObjectId);
    }

    private ServiceLanVpnProfileParcelNatPoolArgs() {}

    private ServiceLanVpnProfileParcelNatPoolArgs(ServiceLanVpnProfileParcelNatPoolArgs $) {
        this.direction = $.direction;
        this.directionVariable = $.directionVariable;
        this.natPoolName = $.natPoolName;
        this.natPoolNameVariable = $.natPoolNameVariable;
        this.overload = $.overload;
        this.overloadVariable = $.overloadVariable;
        this.prefixLength = $.prefixLength;
        this.prefixLengthVariable = $.prefixLengthVariable;
        this.rangeEnd = $.rangeEnd;
        this.rangeEndVariable = $.rangeEndVariable;
        this.rangeStart = $.rangeStart;
        this.rangeStartVariable = $.rangeStartVariable;
        this.trackerObjectId = $.trackerObjectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceLanVpnProfileParcelNatPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceLanVpnProfileParcelNatPoolArgs $;

        public Builder() {
            $ = new ServiceLanVpnProfileParcelNatPoolArgs();
        }

        public Builder(ServiceLanVpnProfileParcelNatPoolArgs defaults) {
            $ = new ServiceLanVpnProfileParcelNatPoolArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param direction NAT Direction
         *   - Choices: `inside`, `outside`
         * 
         * @return builder
         * 
         */
        public Builder direction(@Nullable Output<String> direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param direction NAT Direction
         *   - Choices: `inside`, `outside`
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            return direction(Output.of(direction));
        }

        /**
         * @param directionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder directionVariable(@Nullable Output<String> directionVariable) {
            $.directionVariable = directionVariable;
            return this;
        }

        /**
         * @param directionVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder directionVariable(String directionVariable) {
            return directionVariable(Output.of(directionVariable));
        }

        /**
         * @param natPoolName NAT Pool Name
         *   - Range: `1`-`32`
         * 
         * @return builder
         * 
         */
        public Builder natPoolName(@Nullable Output<Integer> natPoolName) {
            $.natPoolName = natPoolName;
            return this;
        }

        /**
         * @param natPoolName NAT Pool Name
         *   - Range: `1`-`32`
         * 
         * @return builder
         * 
         */
        public Builder natPoolName(Integer natPoolName) {
            return natPoolName(Output.of(natPoolName));
        }

        /**
         * @param natPoolNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natPoolNameVariable(@Nullable Output<String> natPoolNameVariable) {
            $.natPoolNameVariable = natPoolNameVariable;
            return this;
        }

        /**
         * @param natPoolNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder natPoolNameVariable(String natPoolNameVariable) {
            return natPoolNameVariable(Output.of(natPoolNameVariable));
        }

        /**
         * @param overload NAT Overload
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder overload(@Nullable Output<Boolean> overload) {
            $.overload = overload;
            return this;
        }

        /**
         * @param overload NAT Overload
         *   - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder overload(Boolean overload) {
            return overload(Output.of(overload));
        }

        /**
         * @param overloadVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder overloadVariable(@Nullable Output<String> overloadVariable) {
            $.overloadVariable = overloadVariable;
            return this;
        }

        /**
         * @param overloadVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder overloadVariable(String overloadVariable) {
            return overloadVariable(Output.of(overloadVariable));
        }

        /**
         * @param prefixLength NAT Pool Prefix Length
         *   - Range: `1`-`32`
         * 
         * @return builder
         * 
         */
        public Builder prefixLength(@Nullable Output<Integer> prefixLength) {
            $.prefixLength = prefixLength;
            return this;
        }

        /**
         * @param prefixLength NAT Pool Prefix Length
         *   - Range: `1`-`32`
         * 
         * @return builder
         * 
         */
        public Builder prefixLength(Integer prefixLength) {
            return prefixLength(Output.of(prefixLength));
        }

        /**
         * @param prefixLengthVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder prefixLengthVariable(@Nullable Output<String> prefixLengthVariable) {
            $.prefixLengthVariable = prefixLengthVariable;
            return this;
        }

        /**
         * @param prefixLengthVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder prefixLengthVariable(String prefixLengthVariable) {
            return prefixLengthVariable(Output.of(prefixLengthVariable));
        }

        /**
         * @param rangeEnd NAT Pool Range End
         * 
         * @return builder
         * 
         */
        public Builder rangeEnd(@Nullable Output<String> rangeEnd) {
            $.rangeEnd = rangeEnd;
            return this;
        }

        /**
         * @param rangeEnd NAT Pool Range End
         * 
         * @return builder
         * 
         */
        public Builder rangeEnd(String rangeEnd) {
            return rangeEnd(Output.of(rangeEnd));
        }

        /**
         * @param rangeEndVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder rangeEndVariable(@Nullable Output<String> rangeEndVariable) {
            $.rangeEndVariable = rangeEndVariable;
            return this;
        }

        /**
         * @param rangeEndVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder rangeEndVariable(String rangeEndVariable) {
            return rangeEndVariable(Output.of(rangeEndVariable));
        }

        /**
         * @param rangeStart NAT Pool Range Start
         * 
         * @return builder
         * 
         */
        public Builder rangeStart(@Nullable Output<String> rangeStart) {
            $.rangeStart = rangeStart;
            return this;
        }

        /**
         * @param rangeStart NAT Pool Range Start
         * 
         * @return builder
         * 
         */
        public Builder rangeStart(String rangeStart) {
            return rangeStart(Output.of(rangeStart));
        }

        /**
         * @param rangeStartVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder rangeStartVariable(@Nullable Output<String> rangeStartVariable) {
            $.rangeStartVariable = rangeStartVariable;
            return this;
        }

        /**
         * @param rangeStartVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder rangeStartVariable(String rangeStartVariable) {
            return rangeStartVariable(Output.of(rangeStartVariable));
        }

        public Builder trackerObjectId(@Nullable Output<String> trackerObjectId) {
            $.trackerObjectId = trackerObjectId;
            return this;
        }

        public Builder trackerObjectId(String trackerObjectId) {
            return trackerObjectId(Output.of(trackerObjectId));
        }

        public ServiceLanVpnProfileParcelNatPoolArgs build() {
            return $;
        }
    }

}
