// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSystemOmpProfileParcelResult {
    /**
     * @return BGP
     * 
     */
    private Boolean advertiseIpv4Bgp;
    /**
     * @return Variable name
     * 
     */
    private String advertiseIpv4BgpVariable;
    /**
     * @return Connected
     * 
     */
    private Boolean advertiseIpv4Connected;
    /**
     * @return Variable name
     * 
     */
    private String advertiseIpv4ConnectedVariable;
    /**
     * @return EIGRP
     * 
     */
    private Boolean advertiseIpv4Eigrp;
    /**
     * @return Variable name
     * 
     */
    private String advertiseIpv4EigrpVariable;
    /**
     * @return ISIS
     * 
     */
    private Boolean advertiseIpv4Isis;
    /**
     * @return Variable name
     * 
     */
    private String advertiseIpv4IsisVariable;
    /**
     * @return LISP
     * 
     */
    private Boolean advertiseIpv4Lisp;
    /**
     * @return Variable name
     * 
     */
    private String advertiseIpv4LispVariable;
    /**
     * @return OSPF
     * 
     */
    private Boolean advertiseIpv4Ospf;
    /**
     * @return OSPFV3
     * 
     */
    private Boolean advertiseIpv4OspfV3;
    /**
     * @return Variable name
     * 
     */
    private String advertiseIpv4OspfV3Variable;
    /**
     * @return Variable name
     * 
     */
    private String advertiseIpv4OspfVariable;
    /**
     * @return Static
     * 
     */
    private Boolean advertiseIpv4Static;
    /**
     * @return Variable name
     * 
     */
    private String advertiseIpv4StaticVariable;
    /**
     * @return BGP
     * 
     */
    private Boolean advertiseIpv6Bgp;
    /**
     * @return Variable name
     * 
     */
    private String advertiseIpv6BgpVariable;
    /**
     * @return Connected
     * 
     */
    private Boolean advertiseIpv6Connected;
    /**
     * @return Variable name
     * 
     */
    private String advertiseIpv6ConnectedVariable;
    /**
     * @return EIGRP
     * 
     */
    private Boolean advertiseIpv6Eigrp;
    /**
     * @return Variable name
     * 
     */
    private String advertiseIpv6EigrpVariable;
    /**
     * @return ISIS
     * 
     */
    private Boolean advertiseIpv6Isis;
    /**
     * @return Variable name
     * 
     */
    private String advertiseIpv6IsisVariable;
    /**
     * @return LISP
     * 
     */
    private Boolean advertiseIpv6Lisp;
    /**
     * @return Variable name
     * 
     */
    private String advertiseIpv6LispVariable;
    /**
     * @return OSPF
     * 
     */
    private Boolean advertiseIpv6Ospf;
    /**
     * @return Variable name
     * 
     */
    private String advertiseIpv6OspfVariable;
    /**
     * @return Static
     * 
     */
    private Boolean advertiseIpv6Static;
    /**
     * @return Variable name
     * 
     */
    private String advertiseIpv6StaticVariable;
    /**
     * @return Advertisement Interval (seconds)
     * 
     */
    private Integer advertisementInterval;
    /**
     * @return Variable name
     * 
     */
    private String advertisementIntervalVariable;
    /**
     * @return The description of the profile parcel
     * 
     */
    private String description;
    /**
     * @return Set maximum number of OMP paths to install in cEdge route table
     * 
     */
    private Integer ecmpLimit;
    /**
     * @return Variable name
     * 
     */
    private String ecmpLimitVariable;
    /**
     * @return EOR Timer
     * 
     */
    private Integer eorTimer;
    /**
     * @return Variable name
     * 
     */
    private String eorTimerVariable;
    /**
     * @return Feature Profile ID
     * 
     */
    private String featureProfileId;
    /**
     * @return Graceful Restart for OMP
     * 
     */
    private Boolean gracefulRestart;
    /**
     * @return Graceful Restart Timer (seconds)
     * 
     */
    private Integer gracefulRestartTimer;
    /**
     * @return Variable name
     * 
     */
    private String gracefulRestartTimerVariable;
    /**
     * @return Variable name
     * 
     */
    private String gracefulRestartVariable;
    /**
     * @return Hold Time (seconds)
     * 
     */
    private Integer holdtime;
    /**
     * @return Variable name
     * 
     */
    private String holdtimeVariable;
    /**
     * @return The id of the profile parcel
     * 
     */
    private String id;
    /**
     * @return Treat hierarchical and direct (secondary region) paths equally
     * 
     */
    private Boolean ignoreRegionPathLength;
    /**
     * @return Variable name
     * 
     */
    private String ignoreRegionPathLengthVariable;
    /**
     * @return The name of the profile parcel
     * 
     */
    private String name;
    /**
     * @return OMP Admin Distance IPv4
     * 
     */
    private Integer ompAdminDistanceIpv4;
    /**
     * @return Variable name
     * 
     */
    private String ompAdminDistanceIpv4Variable;
    /**
     * @return OMP Admin Distance IPv6
     * 
     */
    private Integer ompAdminDistanceIpv6;
    /**
     * @return Variable name
     * 
     */
    private String ompAdminDistanceIpv6Variable;
    /**
     * @return Overlay AS Number
     * 
     */
    private Integer overlayAs;
    /**
     * @return Variable name
     * 
     */
    private String overlayAsVariable;
    /**
     * @return Number of Paths Advertised per Prefix
     * 
     */
    private Integer pathsAdvertisedPerPrefix;
    /**
     * @return Variable name
     * 
     */
    private String pathsAdvertisedPerPrefixVariable;
    /**
     * @return Shutdown
     * 
     */
    private Boolean shutdown;
    /**
     * @return Variable name
     * 
     */
    private String shutdownVariable;
    /**
     * @return Site Types
     * 
     */
    private List<String> siteTypes;
    /**
     * @return Variable name
     * 
     */
    private String siteTypesVariable;
    /**
     * @return Transport Gateway Path Behavior
     * 
     */
    private String transportGateway;
    /**
     * @return Variable name
     * 
     */
    private String transportGatewayVariable;
    /**
     * @return The version of the profile parcel
     * 
     */
    private Integer version;

    private GetSystemOmpProfileParcelResult() {}
    /**
     * @return BGP
     * 
     */
    public Boolean advertiseIpv4Bgp() {
        return this.advertiseIpv4Bgp;
    }
    /**
     * @return Variable name
     * 
     */
    public String advertiseIpv4BgpVariable() {
        return this.advertiseIpv4BgpVariable;
    }
    /**
     * @return Connected
     * 
     */
    public Boolean advertiseIpv4Connected() {
        return this.advertiseIpv4Connected;
    }
    /**
     * @return Variable name
     * 
     */
    public String advertiseIpv4ConnectedVariable() {
        return this.advertiseIpv4ConnectedVariable;
    }
    /**
     * @return EIGRP
     * 
     */
    public Boolean advertiseIpv4Eigrp() {
        return this.advertiseIpv4Eigrp;
    }
    /**
     * @return Variable name
     * 
     */
    public String advertiseIpv4EigrpVariable() {
        return this.advertiseIpv4EigrpVariable;
    }
    /**
     * @return ISIS
     * 
     */
    public Boolean advertiseIpv4Isis() {
        return this.advertiseIpv4Isis;
    }
    /**
     * @return Variable name
     * 
     */
    public String advertiseIpv4IsisVariable() {
        return this.advertiseIpv4IsisVariable;
    }
    /**
     * @return LISP
     * 
     */
    public Boolean advertiseIpv4Lisp() {
        return this.advertiseIpv4Lisp;
    }
    /**
     * @return Variable name
     * 
     */
    public String advertiseIpv4LispVariable() {
        return this.advertiseIpv4LispVariable;
    }
    /**
     * @return OSPF
     * 
     */
    public Boolean advertiseIpv4Ospf() {
        return this.advertiseIpv4Ospf;
    }
    /**
     * @return OSPFV3
     * 
     */
    public Boolean advertiseIpv4OspfV3() {
        return this.advertiseIpv4OspfV3;
    }
    /**
     * @return Variable name
     * 
     */
    public String advertiseIpv4OspfV3Variable() {
        return this.advertiseIpv4OspfV3Variable;
    }
    /**
     * @return Variable name
     * 
     */
    public String advertiseIpv4OspfVariable() {
        return this.advertiseIpv4OspfVariable;
    }
    /**
     * @return Static
     * 
     */
    public Boolean advertiseIpv4Static() {
        return this.advertiseIpv4Static;
    }
    /**
     * @return Variable name
     * 
     */
    public String advertiseIpv4StaticVariable() {
        return this.advertiseIpv4StaticVariable;
    }
    /**
     * @return BGP
     * 
     */
    public Boolean advertiseIpv6Bgp() {
        return this.advertiseIpv6Bgp;
    }
    /**
     * @return Variable name
     * 
     */
    public String advertiseIpv6BgpVariable() {
        return this.advertiseIpv6BgpVariable;
    }
    /**
     * @return Connected
     * 
     */
    public Boolean advertiseIpv6Connected() {
        return this.advertiseIpv6Connected;
    }
    /**
     * @return Variable name
     * 
     */
    public String advertiseIpv6ConnectedVariable() {
        return this.advertiseIpv6ConnectedVariable;
    }
    /**
     * @return EIGRP
     * 
     */
    public Boolean advertiseIpv6Eigrp() {
        return this.advertiseIpv6Eigrp;
    }
    /**
     * @return Variable name
     * 
     */
    public String advertiseIpv6EigrpVariable() {
        return this.advertiseIpv6EigrpVariable;
    }
    /**
     * @return ISIS
     * 
     */
    public Boolean advertiseIpv6Isis() {
        return this.advertiseIpv6Isis;
    }
    /**
     * @return Variable name
     * 
     */
    public String advertiseIpv6IsisVariable() {
        return this.advertiseIpv6IsisVariable;
    }
    /**
     * @return LISP
     * 
     */
    public Boolean advertiseIpv6Lisp() {
        return this.advertiseIpv6Lisp;
    }
    /**
     * @return Variable name
     * 
     */
    public String advertiseIpv6LispVariable() {
        return this.advertiseIpv6LispVariable;
    }
    /**
     * @return OSPF
     * 
     */
    public Boolean advertiseIpv6Ospf() {
        return this.advertiseIpv6Ospf;
    }
    /**
     * @return Variable name
     * 
     */
    public String advertiseIpv6OspfVariable() {
        return this.advertiseIpv6OspfVariable;
    }
    /**
     * @return Static
     * 
     */
    public Boolean advertiseIpv6Static() {
        return this.advertiseIpv6Static;
    }
    /**
     * @return Variable name
     * 
     */
    public String advertiseIpv6StaticVariable() {
        return this.advertiseIpv6StaticVariable;
    }
    /**
     * @return Advertisement Interval (seconds)
     * 
     */
    public Integer advertisementInterval() {
        return this.advertisementInterval;
    }
    /**
     * @return Variable name
     * 
     */
    public String advertisementIntervalVariable() {
        return this.advertisementIntervalVariable;
    }
    /**
     * @return The description of the profile parcel
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Set maximum number of OMP paths to install in cEdge route table
     * 
     */
    public Integer ecmpLimit() {
        return this.ecmpLimit;
    }
    /**
     * @return Variable name
     * 
     */
    public String ecmpLimitVariable() {
        return this.ecmpLimitVariable;
    }
    /**
     * @return EOR Timer
     * 
     */
    public Integer eorTimer() {
        return this.eorTimer;
    }
    /**
     * @return Variable name
     * 
     */
    public String eorTimerVariable() {
        return this.eorTimerVariable;
    }
    /**
     * @return Feature Profile ID
     * 
     */
    public String featureProfileId() {
        return this.featureProfileId;
    }
    /**
     * @return Graceful Restart for OMP
     * 
     */
    public Boolean gracefulRestart() {
        return this.gracefulRestart;
    }
    /**
     * @return Graceful Restart Timer (seconds)
     * 
     */
    public Integer gracefulRestartTimer() {
        return this.gracefulRestartTimer;
    }
    /**
     * @return Variable name
     * 
     */
    public String gracefulRestartTimerVariable() {
        return this.gracefulRestartTimerVariable;
    }
    /**
     * @return Variable name
     * 
     */
    public String gracefulRestartVariable() {
        return this.gracefulRestartVariable;
    }
    /**
     * @return Hold Time (seconds)
     * 
     */
    public Integer holdtime() {
        return this.holdtime;
    }
    /**
     * @return Variable name
     * 
     */
    public String holdtimeVariable() {
        return this.holdtimeVariable;
    }
    /**
     * @return The id of the profile parcel
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Treat hierarchical and direct (secondary region) paths equally
     * 
     */
    public Boolean ignoreRegionPathLength() {
        return this.ignoreRegionPathLength;
    }
    /**
     * @return Variable name
     * 
     */
    public String ignoreRegionPathLengthVariable() {
        return this.ignoreRegionPathLengthVariable;
    }
    /**
     * @return The name of the profile parcel
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return OMP Admin Distance IPv4
     * 
     */
    public Integer ompAdminDistanceIpv4() {
        return this.ompAdminDistanceIpv4;
    }
    /**
     * @return Variable name
     * 
     */
    public String ompAdminDistanceIpv4Variable() {
        return this.ompAdminDistanceIpv4Variable;
    }
    /**
     * @return OMP Admin Distance IPv6
     * 
     */
    public Integer ompAdminDistanceIpv6() {
        return this.ompAdminDistanceIpv6;
    }
    /**
     * @return Variable name
     * 
     */
    public String ompAdminDistanceIpv6Variable() {
        return this.ompAdminDistanceIpv6Variable;
    }
    /**
     * @return Overlay AS Number
     * 
     */
    public Integer overlayAs() {
        return this.overlayAs;
    }
    /**
     * @return Variable name
     * 
     */
    public String overlayAsVariable() {
        return this.overlayAsVariable;
    }
    /**
     * @return Number of Paths Advertised per Prefix
     * 
     */
    public Integer pathsAdvertisedPerPrefix() {
        return this.pathsAdvertisedPerPrefix;
    }
    /**
     * @return Variable name
     * 
     */
    public String pathsAdvertisedPerPrefixVariable() {
        return this.pathsAdvertisedPerPrefixVariable;
    }
    /**
     * @return Shutdown
     * 
     */
    public Boolean shutdown() {
        return this.shutdown;
    }
    /**
     * @return Variable name
     * 
     */
    public String shutdownVariable() {
        return this.shutdownVariable;
    }
    /**
     * @return Site Types
     * 
     */
    public List<String> siteTypes() {
        return this.siteTypes;
    }
    /**
     * @return Variable name
     * 
     */
    public String siteTypesVariable() {
        return this.siteTypesVariable;
    }
    /**
     * @return Transport Gateway Path Behavior
     * 
     */
    public String transportGateway() {
        return this.transportGateway;
    }
    /**
     * @return Variable name
     * 
     */
    public String transportGatewayVariable() {
        return this.transportGatewayVariable;
    }
    /**
     * @return The version of the profile parcel
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSystemOmpProfileParcelResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean advertiseIpv4Bgp;
        private String advertiseIpv4BgpVariable;
        private Boolean advertiseIpv4Connected;
        private String advertiseIpv4ConnectedVariable;
        private Boolean advertiseIpv4Eigrp;
        private String advertiseIpv4EigrpVariable;
        private Boolean advertiseIpv4Isis;
        private String advertiseIpv4IsisVariable;
        private Boolean advertiseIpv4Lisp;
        private String advertiseIpv4LispVariable;
        private Boolean advertiseIpv4Ospf;
        private Boolean advertiseIpv4OspfV3;
        private String advertiseIpv4OspfV3Variable;
        private String advertiseIpv4OspfVariable;
        private Boolean advertiseIpv4Static;
        private String advertiseIpv4StaticVariable;
        private Boolean advertiseIpv6Bgp;
        private String advertiseIpv6BgpVariable;
        private Boolean advertiseIpv6Connected;
        private String advertiseIpv6ConnectedVariable;
        private Boolean advertiseIpv6Eigrp;
        private String advertiseIpv6EigrpVariable;
        private Boolean advertiseIpv6Isis;
        private String advertiseIpv6IsisVariable;
        private Boolean advertiseIpv6Lisp;
        private String advertiseIpv6LispVariable;
        private Boolean advertiseIpv6Ospf;
        private String advertiseIpv6OspfVariable;
        private Boolean advertiseIpv6Static;
        private String advertiseIpv6StaticVariable;
        private Integer advertisementInterval;
        private String advertisementIntervalVariable;
        private String description;
        private Integer ecmpLimit;
        private String ecmpLimitVariable;
        private Integer eorTimer;
        private String eorTimerVariable;
        private String featureProfileId;
        private Boolean gracefulRestart;
        private Integer gracefulRestartTimer;
        private String gracefulRestartTimerVariable;
        private String gracefulRestartVariable;
        private Integer holdtime;
        private String holdtimeVariable;
        private String id;
        private Boolean ignoreRegionPathLength;
        private String ignoreRegionPathLengthVariable;
        private String name;
        private Integer ompAdminDistanceIpv4;
        private String ompAdminDistanceIpv4Variable;
        private Integer ompAdminDistanceIpv6;
        private String ompAdminDistanceIpv6Variable;
        private Integer overlayAs;
        private String overlayAsVariable;
        private Integer pathsAdvertisedPerPrefix;
        private String pathsAdvertisedPerPrefixVariable;
        private Boolean shutdown;
        private String shutdownVariable;
        private List<String> siteTypes;
        private String siteTypesVariable;
        private String transportGateway;
        private String transportGatewayVariable;
        private Integer version;
        public Builder() {}
        public Builder(GetSystemOmpProfileParcelResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.advertiseIpv4Bgp = defaults.advertiseIpv4Bgp;
    	      this.advertiseIpv4BgpVariable = defaults.advertiseIpv4BgpVariable;
    	      this.advertiseIpv4Connected = defaults.advertiseIpv4Connected;
    	      this.advertiseIpv4ConnectedVariable = defaults.advertiseIpv4ConnectedVariable;
    	      this.advertiseIpv4Eigrp = defaults.advertiseIpv4Eigrp;
    	      this.advertiseIpv4EigrpVariable = defaults.advertiseIpv4EigrpVariable;
    	      this.advertiseIpv4Isis = defaults.advertiseIpv4Isis;
    	      this.advertiseIpv4IsisVariable = defaults.advertiseIpv4IsisVariable;
    	      this.advertiseIpv4Lisp = defaults.advertiseIpv4Lisp;
    	      this.advertiseIpv4LispVariable = defaults.advertiseIpv4LispVariable;
    	      this.advertiseIpv4Ospf = defaults.advertiseIpv4Ospf;
    	      this.advertiseIpv4OspfV3 = defaults.advertiseIpv4OspfV3;
    	      this.advertiseIpv4OspfV3Variable = defaults.advertiseIpv4OspfV3Variable;
    	      this.advertiseIpv4OspfVariable = defaults.advertiseIpv4OspfVariable;
    	      this.advertiseIpv4Static = defaults.advertiseIpv4Static;
    	      this.advertiseIpv4StaticVariable = defaults.advertiseIpv4StaticVariable;
    	      this.advertiseIpv6Bgp = defaults.advertiseIpv6Bgp;
    	      this.advertiseIpv6BgpVariable = defaults.advertiseIpv6BgpVariable;
    	      this.advertiseIpv6Connected = defaults.advertiseIpv6Connected;
    	      this.advertiseIpv6ConnectedVariable = defaults.advertiseIpv6ConnectedVariable;
    	      this.advertiseIpv6Eigrp = defaults.advertiseIpv6Eigrp;
    	      this.advertiseIpv6EigrpVariable = defaults.advertiseIpv6EigrpVariable;
    	      this.advertiseIpv6Isis = defaults.advertiseIpv6Isis;
    	      this.advertiseIpv6IsisVariable = defaults.advertiseIpv6IsisVariable;
    	      this.advertiseIpv6Lisp = defaults.advertiseIpv6Lisp;
    	      this.advertiseIpv6LispVariable = defaults.advertiseIpv6LispVariable;
    	      this.advertiseIpv6Ospf = defaults.advertiseIpv6Ospf;
    	      this.advertiseIpv6OspfVariable = defaults.advertiseIpv6OspfVariable;
    	      this.advertiseIpv6Static = defaults.advertiseIpv6Static;
    	      this.advertiseIpv6StaticVariable = defaults.advertiseIpv6StaticVariable;
    	      this.advertisementInterval = defaults.advertisementInterval;
    	      this.advertisementIntervalVariable = defaults.advertisementIntervalVariable;
    	      this.description = defaults.description;
    	      this.ecmpLimit = defaults.ecmpLimit;
    	      this.ecmpLimitVariable = defaults.ecmpLimitVariable;
    	      this.eorTimer = defaults.eorTimer;
    	      this.eorTimerVariable = defaults.eorTimerVariable;
    	      this.featureProfileId = defaults.featureProfileId;
    	      this.gracefulRestart = defaults.gracefulRestart;
    	      this.gracefulRestartTimer = defaults.gracefulRestartTimer;
    	      this.gracefulRestartTimerVariable = defaults.gracefulRestartTimerVariable;
    	      this.gracefulRestartVariable = defaults.gracefulRestartVariable;
    	      this.holdtime = defaults.holdtime;
    	      this.holdtimeVariable = defaults.holdtimeVariable;
    	      this.id = defaults.id;
    	      this.ignoreRegionPathLength = defaults.ignoreRegionPathLength;
    	      this.ignoreRegionPathLengthVariable = defaults.ignoreRegionPathLengthVariable;
    	      this.name = defaults.name;
    	      this.ompAdminDistanceIpv4 = defaults.ompAdminDistanceIpv4;
    	      this.ompAdminDistanceIpv4Variable = defaults.ompAdminDistanceIpv4Variable;
    	      this.ompAdminDistanceIpv6 = defaults.ompAdminDistanceIpv6;
    	      this.ompAdminDistanceIpv6Variable = defaults.ompAdminDistanceIpv6Variable;
    	      this.overlayAs = defaults.overlayAs;
    	      this.overlayAsVariable = defaults.overlayAsVariable;
    	      this.pathsAdvertisedPerPrefix = defaults.pathsAdvertisedPerPrefix;
    	      this.pathsAdvertisedPerPrefixVariable = defaults.pathsAdvertisedPerPrefixVariable;
    	      this.shutdown = defaults.shutdown;
    	      this.shutdownVariable = defaults.shutdownVariable;
    	      this.siteTypes = defaults.siteTypes;
    	      this.siteTypesVariable = defaults.siteTypesVariable;
    	      this.transportGateway = defaults.transportGateway;
    	      this.transportGatewayVariable = defaults.transportGatewayVariable;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder advertiseIpv4Bgp(Boolean advertiseIpv4Bgp) {
            if (advertiseIpv4Bgp == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv4Bgp");
            }
            this.advertiseIpv4Bgp = advertiseIpv4Bgp;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv4BgpVariable(String advertiseIpv4BgpVariable) {
            if (advertiseIpv4BgpVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv4BgpVariable");
            }
            this.advertiseIpv4BgpVariable = advertiseIpv4BgpVariable;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv4Connected(Boolean advertiseIpv4Connected) {
            if (advertiseIpv4Connected == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv4Connected");
            }
            this.advertiseIpv4Connected = advertiseIpv4Connected;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv4ConnectedVariable(String advertiseIpv4ConnectedVariable) {
            if (advertiseIpv4ConnectedVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv4ConnectedVariable");
            }
            this.advertiseIpv4ConnectedVariable = advertiseIpv4ConnectedVariable;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv4Eigrp(Boolean advertiseIpv4Eigrp) {
            if (advertiseIpv4Eigrp == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv4Eigrp");
            }
            this.advertiseIpv4Eigrp = advertiseIpv4Eigrp;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv4EigrpVariable(String advertiseIpv4EigrpVariable) {
            if (advertiseIpv4EigrpVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv4EigrpVariable");
            }
            this.advertiseIpv4EigrpVariable = advertiseIpv4EigrpVariable;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv4Isis(Boolean advertiseIpv4Isis) {
            if (advertiseIpv4Isis == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv4Isis");
            }
            this.advertiseIpv4Isis = advertiseIpv4Isis;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv4IsisVariable(String advertiseIpv4IsisVariable) {
            if (advertiseIpv4IsisVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv4IsisVariable");
            }
            this.advertiseIpv4IsisVariable = advertiseIpv4IsisVariable;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv4Lisp(Boolean advertiseIpv4Lisp) {
            if (advertiseIpv4Lisp == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv4Lisp");
            }
            this.advertiseIpv4Lisp = advertiseIpv4Lisp;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv4LispVariable(String advertiseIpv4LispVariable) {
            if (advertiseIpv4LispVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv4LispVariable");
            }
            this.advertiseIpv4LispVariable = advertiseIpv4LispVariable;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv4Ospf(Boolean advertiseIpv4Ospf) {
            if (advertiseIpv4Ospf == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv4Ospf");
            }
            this.advertiseIpv4Ospf = advertiseIpv4Ospf;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv4OspfV3(Boolean advertiseIpv4OspfV3) {
            if (advertiseIpv4OspfV3 == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv4OspfV3");
            }
            this.advertiseIpv4OspfV3 = advertiseIpv4OspfV3;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv4OspfV3Variable(String advertiseIpv4OspfV3Variable) {
            if (advertiseIpv4OspfV3Variable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv4OspfV3Variable");
            }
            this.advertiseIpv4OspfV3Variable = advertiseIpv4OspfV3Variable;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv4OspfVariable(String advertiseIpv4OspfVariable) {
            if (advertiseIpv4OspfVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv4OspfVariable");
            }
            this.advertiseIpv4OspfVariable = advertiseIpv4OspfVariable;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv4Static(Boolean advertiseIpv4Static) {
            if (advertiseIpv4Static == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv4Static");
            }
            this.advertiseIpv4Static = advertiseIpv4Static;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv4StaticVariable(String advertiseIpv4StaticVariable) {
            if (advertiseIpv4StaticVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv4StaticVariable");
            }
            this.advertiseIpv4StaticVariable = advertiseIpv4StaticVariable;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv6Bgp(Boolean advertiseIpv6Bgp) {
            if (advertiseIpv6Bgp == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv6Bgp");
            }
            this.advertiseIpv6Bgp = advertiseIpv6Bgp;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv6BgpVariable(String advertiseIpv6BgpVariable) {
            if (advertiseIpv6BgpVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv6BgpVariable");
            }
            this.advertiseIpv6BgpVariable = advertiseIpv6BgpVariable;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv6Connected(Boolean advertiseIpv6Connected) {
            if (advertiseIpv6Connected == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv6Connected");
            }
            this.advertiseIpv6Connected = advertiseIpv6Connected;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv6ConnectedVariable(String advertiseIpv6ConnectedVariable) {
            if (advertiseIpv6ConnectedVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv6ConnectedVariable");
            }
            this.advertiseIpv6ConnectedVariable = advertiseIpv6ConnectedVariable;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv6Eigrp(Boolean advertiseIpv6Eigrp) {
            if (advertiseIpv6Eigrp == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv6Eigrp");
            }
            this.advertiseIpv6Eigrp = advertiseIpv6Eigrp;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv6EigrpVariable(String advertiseIpv6EigrpVariable) {
            if (advertiseIpv6EigrpVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv6EigrpVariable");
            }
            this.advertiseIpv6EigrpVariable = advertiseIpv6EigrpVariable;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv6Isis(Boolean advertiseIpv6Isis) {
            if (advertiseIpv6Isis == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv6Isis");
            }
            this.advertiseIpv6Isis = advertiseIpv6Isis;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv6IsisVariable(String advertiseIpv6IsisVariable) {
            if (advertiseIpv6IsisVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv6IsisVariable");
            }
            this.advertiseIpv6IsisVariable = advertiseIpv6IsisVariable;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv6Lisp(Boolean advertiseIpv6Lisp) {
            if (advertiseIpv6Lisp == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv6Lisp");
            }
            this.advertiseIpv6Lisp = advertiseIpv6Lisp;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv6LispVariable(String advertiseIpv6LispVariable) {
            if (advertiseIpv6LispVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv6LispVariable");
            }
            this.advertiseIpv6LispVariable = advertiseIpv6LispVariable;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv6Ospf(Boolean advertiseIpv6Ospf) {
            if (advertiseIpv6Ospf == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv6Ospf");
            }
            this.advertiseIpv6Ospf = advertiseIpv6Ospf;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv6OspfVariable(String advertiseIpv6OspfVariable) {
            if (advertiseIpv6OspfVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv6OspfVariable");
            }
            this.advertiseIpv6OspfVariable = advertiseIpv6OspfVariable;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv6Static(Boolean advertiseIpv6Static) {
            if (advertiseIpv6Static == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv6Static");
            }
            this.advertiseIpv6Static = advertiseIpv6Static;
            return this;
        }
        @CustomType.Setter
        public Builder advertiseIpv6StaticVariable(String advertiseIpv6StaticVariable) {
            if (advertiseIpv6StaticVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertiseIpv6StaticVariable");
            }
            this.advertiseIpv6StaticVariable = advertiseIpv6StaticVariable;
            return this;
        }
        @CustomType.Setter
        public Builder advertisementInterval(Integer advertisementInterval) {
            if (advertisementInterval == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertisementInterval");
            }
            this.advertisementInterval = advertisementInterval;
            return this;
        }
        @CustomType.Setter
        public Builder advertisementIntervalVariable(String advertisementIntervalVariable) {
            if (advertisementIntervalVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "advertisementIntervalVariable");
            }
            this.advertisementIntervalVariable = advertisementIntervalVariable;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder ecmpLimit(Integer ecmpLimit) {
            if (ecmpLimit == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "ecmpLimit");
            }
            this.ecmpLimit = ecmpLimit;
            return this;
        }
        @CustomType.Setter
        public Builder ecmpLimitVariable(String ecmpLimitVariable) {
            if (ecmpLimitVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "ecmpLimitVariable");
            }
            this.ecmpLimitVariable = ecmpLimitVariable;
            return this;
        }
        @CustomType.Setter
        public Builder eorTimer(Integer eorTimer) {
            if (eorTimer == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "eorTimer");
            }
            this.eorTimer = eorTimer;
            return this;
        }
        @CustomType.Setter
        public Builder eorTimerVariable(String eorTimerVariable) {
            if (eorTimerVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "eorTimerVariable");
            }
            this.eorTimerVariable = eorTimerVariable;
            return this;
        }
        @CustomType.Setter
        public Builder featureProfileId(String featureProfileId) {
            if (featureProfileId == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "featureProfileId");
            }
            this.featureProfileId = featureProfileId;
            return this;
        }
        @CustomType.Setter
        public Builder gracefulRestart(Boolean gracefulRestart) {
            if (gracefulRestart == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "gracefulRestart");
            }
            this.gracefulRestart = gracefulRestart;
            return this;
        }
        @CustomType.Setter
        public Builder gracefulRestartTimer(Integer gracefulRestartTimer) {
            if (gracefulRestartTimer == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "gracefulRestartTimer");
            }
            this.gracefulRestartTimer = gracefulRestartTimer;
            return this;
        }
        @CustomType.Setter
        public Builder gracefulRestartTimerVariable(String gracefulRestartTimerVariable) {
            if (gracefulRestartTimerVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "gracefulRestartTimerVariable");
            }
            this.gracefulRestartTimerVariable = gracefulRestartTimerVariable;
            return this;
        }
        @CustomType.Setter
        public Builder gracefulRestartVariable(String gracefulRestartVariable) {
            if (gracefulRestartVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "gracefulRestartVariable");
            }
            this.gracefulRestartVariable = gracefulRestartVariable;
            return this;
        }
        @CustomType.Setter
        public Builder holdtime(Integer holdtime) {
            if (holdtime == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "holdtime");
            }
            this.holdtime = holdtime;
            return this;
        }
        @CustomType.Setter
        public Builder holdtimeVariable(String holdtimeVariable) {
            if (holdtimeVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "holdtimeVariable");
            }
            this.holdtimeVariable = holdtimeVariable;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ignoreRegionPathLength(Boolean ignoreRegionPathLength) {
            if (ignoreRegionPathLength == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "ignoreRegionPathLength");
            }
            this.ignoreRegionPathLength = ignoreRegionPathLength;
            return this;
        }
        @CustomType.Setter
        public Builder ignoreRegionPathLengthVariable(String ignoreRegionPathLengthVariable) {
            if (ignoreRegionPathLengthVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "ignoreRegionPathLengthVariable");
            }
            this.ignoreRegionPathLengthVariable = ignoreRegionPathLengthVariable;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder ompAdminDistanceIpv4(Integer ompAdminDistanceIpv4) {
            if (ompAdminDistanceIpv4 == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "ompAdminDistanceIpv4");
            }
            this.ompAdminDistanceIpv4 = ompAdminDistanceIpv4;
            return this;
        }
        @CustomType.Setter
        public Builder ompAdminDistanceIpv4Variable(String ompAdminDistanceIpv4Variable) {
            if (ompAdminDistanceIpv4Variable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "ompAdminDistanceIpv4Variable");
            }
            this.ompAdminDistanceIpv4Variable = ompAdminDistanceIpv4Variable;
            return this;
        }
        @CustomType.Setter
        public Builder ompAdminDistanceIpv6(Integer ompAdminDistanceIpv6) {
            if (ompAdminDistanceIpv6 == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "ompAdminDistanceIpv6");
            }
            this.ompAdminDistanceIpv6 = ompAdminDistanceIpv6;
            return this;
        }
        @CustomType.Setter
        public Builder ompAdminDistanceIpv6Variable(String ompAdminDistanceIpv6Variable) {
            if (ompAdminDistanceIpv6Variable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "ompAdminDistanceIpv6Variable");
            }
            this.ompAdminDistanceIpv6Variable = ompAdminDistanceIpv6Variable;
            return this;
        }
        @CustomType.Setter
        public Builder overlayAs(Integer overlayAs) {
            if (overlayAs == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "overlayAs");
            }
            this.overlayAs = overlayAs;
            return this;
        }
        @CustomType.Setter
        public Builder overlayAsVariable(String overlayAsVariable) {
            if (overlayAsVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "overlayAsVariable");
            }
            this.overlayAsVariable = overlayAsVariable;
            return this;
        }
        @CustomType.Setter
        public Builder pathsAdvertisedPerPrefix(Integer pathsAdvertisedPerPrefix) {
            if (pathsAdvertisedPerPrefix == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "pathsAdvertisedPerPrefix");
            }
            this.pathsAdvertisedPerPrefix = pathsAdvertisedPerPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder pathsAdvertisedPerPrefixVariable(String pathsAdvertisedPerPrefixVariable) {
            if (pathsAdvertisedPerPrefixVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "pathsAdvertisedPerPrefixVariable");
            }
            this.pathsAdvertisedPerPrefixVariable = pathsAdvertisedPerPrefixVariable;
            return this;
        }
        @CustomType.Setter
        public Builder shutdown(Boolean shutdown) {
            if (shutdown == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "shutdown");
            }
            this.shutdown = shutdown;
            return this;
        }
        @CustomType.Setter
        public Builder shutdownVariable(String shutdownVariable) {
            if (shutdownVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "shutdownVariable");
            }
            this.shutdownVariable = shutdownVariable;
            return this;
        }
        @CustomType.Setter
        public Builder siteTypes(List<String> siteTypes) {
            if (siteTypes == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "siteTypes");
            }
            this.siteTypes = siteTypes;
            return this;
        }
        public Builder siteTypes(String... siteTypes) {
            return siteTypes(List.of(siteTypes));
        }
        @CustomType.Setter
        public Builder siteTypesVariable(String siteTypesVariable) {
            if (siteTypesVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "siteTypesVariable");
            }
            this.siteTypesVariable = siteTypesVariable;
            return this;
        }
        @CustomType.Setter
        public Builder transportGateway(String transportGateway) {
            if (transportGateway == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "transportGateway");
            }
            this.transportGateway = transportGateway;
            return this;
        }
        @CustomType.Setter
        public Builder transportGatewayVariable(String transportGatewayVariable) {
            if (transportGatewayVariable == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "transportGatewayVariable");
            }
            this.transportGatewayVariable = transportGatewayVariable;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetSystemOmpProfileParcelResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetSystemOmpProfileParcelResult build() {
            final var _resultValue = new GetSystemOmpProfileParcelResult();
            _resultValue.advertiseIpv4Bgp = advertiseIpv4Bgp;
            _resultValue.advertiseIpv4BgpVariable = advertiseIpv4BgpVariable;
            _resultValue.advertiseIpv4Connected = advertiseIpv4Connected;
            _resultValue.advertiseIpv4ConnectedVariable = advertiseIpv4ConnectedVariable;
            _resultValue.advertiseIpv4Eigrp = advertiseIpv4Eigrp;
            _resultValue.advertiseIpv4EigrpVariable = advertiseIpv4EigrpVariable;
            _resultValue.advertiseIpv4Isis = advertiseIpv4Isis;
            _resultValue.advertiseIpv4IsisVariable = advertiseIpv4IsisVariable;
            _resultValue.advertiseIpv4Lisp = advertiseIpv4Lisp;
            _resultValue.advertiseIpv4LispVariable = advertiseIpv4LispVariable;
            _resultValue.advertiseIpv4Ospf = advertiseIpv4Ospf;
            _resultValue.advertiseIpv4OspfV3 = advertiseIpv4OspfV3;
            _resultValue.advertiseIpv4OspfV3Variable = advertiseIpv4OspfV3Variable;
            _resultValue.advertiseIpv4OspfVariable = advertiseIpv4OspfVariable;
            _resultValue.advertiseIpv4Static = advertiseIpv4Static;
            _resultValue.advertiseIpv4StaticVariable = advertiseIpv4StaticVariable;
            _resultValue.advertiseIpv6Bgp = advertiseIpv6Bgp;
            _resultValue.advertiseIpv6BgpVariable = advertiseIpv6BgpVariable;
            _resultValue.advertiseIpv6Connected = advertiseIpv6Connected;
            _resultValue.advertiseIpv6ConnectedVariable = advertiseIpv6ConnectedVariable;
            _resultValue.advertiseIpv6Eigrp = advertiseIpv6Eigrp;
            _resultValue.advertiseIpv6EigrpVariable = advertiseIpv6EigrpVariable;
            _resultValue.advertiseIpv6Isis = advertiseIpv6Isis;
            _resultValue.advertiseIpv6IsisVariable = advertiseIpv6IsisVariable;
            _resultValue.advertiseIpv6Lisp = advertiseIpv6Lisp;
            _resultValue.advertiseIpv6LispVariable = advertiseIpv6LispVariable;
            _resultValue.advertiseIpv6Ospf = advertiseIpv6Ospf;
            _resultValue.advertiseIpv6OspfVariable = advertiseIpv6OspfVariable;
            _resultValue.advertiseIpv6Static = advertiseIpv6Static;
            _resultValue.advertiseIpv6StaticVariable = advertiseIpv6StaticVariable;
            _resultValue.advertisementInterval = advertisementInterval;
            _resultValue.advertisementIntervalVariable = advertisementIntervalVariable;
            _resultValue.description = description;
            _resultValue.ecmpLimit = ecmpLimit;
            _resultValue.ecmpLimitVariable = ecmpLimitVariable;
            _resultValue.eorTimer = eorTimer;
            _resultValue.eorTimerVariable = eorTimerVariable;
            _resultValue.featureProfileId = featureProfileId;
            _resultValue.gracefulRestart = gracefulRestart;
            _resultValue.gracefulRestartTimer = gracefulRestartTimer;
            _resultValue.gracefulRestartTimerVariable = gracefulRestartTimerVariable;
            _resultValue.gracefulRestartVariable = gracefulRestartVariable;
            _resultValue.holdtime = holdtime;
            _resultValue.holdtimeVariable = holdtimeVariable;
            _resultValue.id = id;
            _resultValue.ignoreRegionPathLength = ignoreRegionPathLength;
            _resultValue.ignoreRegionPathLengthVariable = ignoreRegionPathLengthVariable;
            _resultValue.name = name;
            _resultValue.ompAdminDistanceIpv4 = ompAdminDistanceIpv4;
            _resultValue.ompAdminDistanceIpv4Variable = ompAdminDistanceIpv4Variable;
            _resultValue.ompAdminDistanceIpv6 = ompAdminDistanceIpv6;
            _resultValue.ompAdminDistanceIpv6Variable = ompAdminDistanceIpv6Variable;
            _resultValue.overlayAs = overlayAs;
            _resultValue.overlayAsVariable = overlayAsVariable;
            _resultValue.pathsAdvertisedPerPrefix = pathsAdvertisedPerPrefix;
            _resultValue.pathsAdvertisedPerPrefixVariable = pathsAdvertisedPerPrefixVariable;
            _resultValue.shutdown = shutdown;
            _resultValue.shutdownVariable = shutdownVariable;
            _resultValue.siteTypes = siteTypes;
            _resultValue.siteTypesVariable = siteTypesVariable;
            _resultValue.transportGateway = transportGateway;
            _resultValue.transportGatewayVariable = transportGatewayVariable;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
