// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sdwan.inputs.EigrpFeatureTemplateInterfaceSummaryAddressArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EigrpFeatureTemplateInterfaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final EigrpFeatureTemplateInterfaceArgs Empty = new EigrpFeatureTemplateInterfaceArgs();

    /**
     * Set interface name
     * 
     */
    @Import(name="interfaceName")
    private @Nullable Output<String> interfaceName;

    /**
     * @return Set interface name
     * 
     */
    public Optional<Output<String>> interfaceName() {
        return Optional.ofNullable(this.interfaceName);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="interfaceNameVariable")
    private @Nullable Output<String> interfaceNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> interfaceNameVariable() {
        return Optional.ofNullable(this.interfaceNameVariable);
    }

    /**
     * Indicates if list item is considered optional.
     * 
     */
    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    /**
     * @return Indicates if list item is considered optional.
     * 
     */
    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    /**
     * Enable/disable EIGRP
     *   - Default value: `false`
     * 
     */
    @Import(name="shutdown")
    private @Nullable Output<Boolean> shutdown;

    /**
     * @return Enable/disable EIGRP
     *   - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> shutdown() {
        return Optional.ofNullable(this.shutdown);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="shutdownVariable")
    private @Nullable Output<String> shutdownVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> shutdownVariable() {
        return Optional.ofNullable(this.shutdownVariable);
    }

    /**
     * Set summary addresses
     * 
     */
    @Import(name="summaryAddresses")
    private @Nullable Output<List<EigrpFeatureTemplateInterfaceSummaryAddressArgs>> summaryAddresses;

    /**
     * @return Set summary addresses
     * 
     */
    public Optional<Output<List<EigrpFeatureTemplateInterfaceSummaryAddressArgs>>> summaryAddresses() {
        return Optional.ofNullable(this.summaryAddresses);
    }

    private EigrpFeatureTemplateInterfaceArgs() {}

    private EigrpFeatureTemplateInterfaceArgs(EigrpFeatureTemplateInterfaceArgs $) {
        this.interfaceName = $.interfaceName;
        this.interfaceNameVariable = $.interfaceNameVariable;
        this.optional = $.optional;
        this.shutdown = $.shutdown;
        this.shutdownVariable = $.shutdownVariable;
        this.summaryAddresses = $.summaryAddresses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EigrpFeatureTemplateInterfaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EigrpFeatureTemplateInterfaceArgs $;

        public Builder() {
            $ = new EigrpFeatureTemplateInterfaceArgs();
        }

        public Builder(EigrpFeatureTemplateInterfaceArgs defaults) {
            $ = new EigrpFeatureTemplateInterfaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param interfaceName Set interface name
         * 
         * @return builder
         * 
         */
        public Builder interfaceName(@Nullable Output<String> interfaceName) {
            $.interfaceName = interfaceName;
            return this;
        }

        /**
         * @param interfaceName Set interface name
         * 
         * @return builder
         * 
         */
        public Builder interfaceName(String interfaceName) {
            return interfaceName(Output.of(interfaceName));
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(@Nullable Output<String> interfaceNameVariable) {
            $.interfaceNameVariable = interfaceNameVariable;
            return this;
        }

        /**
         * @param interfaceNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder interfaceNameVariable(String interfaceNameVariable) {
            return interfaceNameVariable(Output.of(interfaceNameVariable));
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        /**
         * @param optional Indicates if list item is considered optional.
         * 
         * @return builder
         * 
         */
        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        /**
         * @param shutdown Enable/disable EIGRP
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder shutdown(@Nullable Output<Boolean> shutdown) {
            $.shutdown = shutdown;
            return this;
        }

        /**
         * @param shutdown Enable/disable EIGRP
         *   - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder shutdown(Boolean shutdown) {
            return shutdown(Output.of(shutdown));
        }

        /**
         * @param shutdownVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdownVariable(@Nullable Output<String> shutdownVariable) {
            $.shutdownVariable = shutdownVariable;
            return this;
        }

        /**
         * @param shutdownVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder shutdownVariable(String shutdownVariable) {
            return shutdownVariable(Output.of(shutdownVariable));
        }

        /**
         * @param summaryAddresses Set summary addresses
         * 
         * @return builder
         * 
         */
        public Builder summaryAddresses(@Nullable Output<List<EigrpFeatureTemplateInterfaceSummaryAddressArgs>> summaryAddresses) {
            $.summaryAddresses = summaryAddresses;
            return this;
        }

        /**
         * @param summaryAddresses Set summary addresses
         * 
         * @return builder
         * 
         */
        public Builder summaryAddresses(List<EigrpFeatureTemplateInterfaceSummaryAddressArgs> summaryAddresses) {
            return summaryAddresses(Output.of(summaryAddresses));
        }

        /**
         * @param summaryAddresses Set summary addresses
         * 
         * @return builder
         * 
         */
        public Builder summaryAddresses(EigrpFeatureTemplateInterfaceSummaryAddressArgs... summaryAddresses) {
            return summaryAddresses(List.of(summaryAddresses));
        }

        public EigrpFeatureTemplateInterfaceArgs build() {
            return $;
        }
    }

}
