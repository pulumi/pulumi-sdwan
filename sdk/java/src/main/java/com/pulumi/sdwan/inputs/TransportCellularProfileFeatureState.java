// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sdwan.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransportCellularProfileFeatureState extends com.pulumi.resources.ResourceArgs {

    public static final TransportCellularProfileFeatureState Empty = new TransportCellularProfileFeatureState();

    /**
     * Set access point name
     * 
     */
    @Import(name="accessPointName")
    private @Nullable Output<String> accessPointName;

    /**
     * @return Set access point name
     * 
     */
    public Optional<Output<String>> accessPointName() {
        return Optional.ofNullable(this.accessPointName);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="accessPointNameVariable")
    private @Nullable Output<String> accessPointNameVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> accessPointNameVariable() {
        return Optional.ofNullable(this.accessPointNameVariable);
    }

    /**
     * Set authentication type, Attribute conditional on `requires_authentication` being equal to `true` - Choices: `pap`,
     * `chap`, `pap_chap`
     * 
     */
    @Import(name="authenticationType")
    private @Nullable Output<String> authenticationType;

    /**
     * @return Set authentication type, Attribute conditional on `requires_authentication` being equal to `true` - Choices: `pap`,
     * `chap`, `pap_chap`
     * 
     */
    public Optional<Output<String>> authenticationType() {
        return Optional.ofNullable(this.authenticationType);
    }

    /**
     * Variable name, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    @Import(name="authenticationTypeVariable")
    private @Nullable Output<String> authenticationTypeVariable;

    /**
     * @return Variable name, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    public Optional<Output<String>> authenticationTypeVariable() {
        return Optional.ofNullable(this.authenticationTypeVariable);
    }

    /**
     * The description of the Feature
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Feature
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Feature Profile ID
     * 
     */
    @Import(name="featureProfileId")
    private @Nullable Output<String> featureProfileId;

    /**
     * @return Feature Profile ID
     * 
     */
    public Optional<Output<String>> featureProfileId() {
        return Optional.ofNullable(this.featureProfileId);
    }

    /**
     * The name of the Feature
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Feature
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * No Overwrite
     * 
     */
    @Import(name="noOverwrite")
    private @Nullable Output<Boolean> noOverwrite;

    /**
     * @return No Overwrite
     * 
     */
    public Optional<Output<Boolean>> noOverwrite() {
        return Optional.ofNullable(this.noOverwrite);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="noOverwriteVariable")
    private @Nullable Output<String> noOverwriteVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> noOverwriteVariable() {
        return Optional.ofNullable(this.noOverwriteVariable);
    }

    /**
     * Set packet data network type - Choices: `ipv4`, `ipv4v6`, `ipv6` - Default value: `ipv4`
     * 
     */
    @Import(name="packetDataNetworkType")
    private @Nullable Output<String> packetDataNetworkType;

    /**
     * @return Set packet data network type - Choices: `ipv4`, `ipv4v6`, `ipv6` - Default value: `ipv4`
     * 
     */
    public Optional<Output<String>> packetDataNetworkType() {
        return Optional.ofNullable(this.packetDataNetworkType);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="packetDataNetworkTypeVariable")
    private @Nullable Output<String> packetDataNetworkTypeVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> packetDataNetworkTypeVariable() {
        return Optional.ofNullable(this.packetDataNetworkTypeVariable);
    }

    /**
     * Set Profile ID - Range: `1`-`16`
     * 
     */
    @Import(name="profileId")
    private @Nullable Output<Integer> profileId;

    /**
     * @return Set Profile ID - Range: `1`-`16`
     * 
     */
    public Optional<Output<Integer>> profileId() {
        return Optional.ofNullable(this.profileId);
    }

    /**
     * Variable name
     * 
     */
    @Import(name="profileIdVariable")
    private @Nullable Output<String> profileIdVariable;

    /**
     * @return Variable name
     * 
     */
    public Optional<Output<String>> profileIdVariable() {
        return Optional.ofNullable(this.profileIdVariable);
    }

    /**
     * Set the profile password, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    @Import(name="profilePassword")
    private @Nullable Output<String> profilePassword;

    /**
     * @return Set the profile password, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    public Optional<Output<String>> profilePassword() {
        return Optional.ofNullable(this.profilePassword);
    }

    /**
     * Variable name, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    @Import(name="profilePasswordVariable")
    private @Nullable Output<String> profilePasswordVariable;

    /**
     * @return Variable name, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    public Optional<Output<String>> profilePasswordVariable() {
        return Optional.ofNullable(this.profilePasswordVariable);
    }

    /**
     * Set the profile username, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    @Import(name="profileUsername")
    private @Nullable Output<String> profileUsername;

    /**
     * @return Set the profile username, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    public Optional<Output<String>> profileUsername() {
        return Optional.ofNullable(this.profileUsername);
    }

    /**
     * Variable name, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    @Import(name="profileUsernameVariable")
    private @Nullable Output<String> profileUsernameVariable;

    /**
     * @return Variable name, Attribute conditional on `requires_authentication` being equal to `true`
     * 
     */
    public Optional<Output<String>> profileUsernameVariable() {
        return Optional.ofNullable(this.profileUsernameVariable);
    }

    /**
     * Require authentication type - Default value: `false`
     * 
     */
    @Import(name="requiresAuthentication")
    private @Nullable Output<Boolean> requiresAuthentication;

    /**
     * @return Require authentication type - Default value: `false`
     * 
     */
    public Optional<Output<Boolean>> requiresAuthentication() {
        return Optional.ofNullable(this.requiresAuthentication);
    }

    /**
     * The version of the Feature
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the Feature
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private TransportCellularProfileFeatureState() {}

    private TransportCellularProfileFeatureState(TransportCellularProfileFeatureState $) {
        this.accessPointName = $.accessPointName;
        this.accessPointNameVariable = $.accessPointNameVariable;
        this.authenticationType = $.authenticationType;
        this.authenticationTypeVariable = $.authenticationTypeVariable;
        this.description = $.description;
        this.featureProfileId = $.featureProfileId;
        this.name = $.name;
        this.noOverwrite = $.noOverwrite;
        this.noOverwriteVariable = $.noOverwriteVariable;
        this.packetDataNetworkType = $.packetDataNetworkType;
        this.packetDataNetworkTypeVariable = $.packetDataNetworkTypeVariable;
        this.profileId = $.profileId;
        this.profileIdVariable = $.profileIdVariable;
        this.profilePassword = $.profilePassword;
        this.profilePasswordVariable = $.profilePasswordVariable;
        this.profileUsername = $.profileUsername;
        this.profileUsernameVariable = $.profileUsernameVariable;
        this.requiresAuthentication = $.requiresAuthentication;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransportCellularProfileFeatureState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransportCellularProfileFeatureState $;

        public Builder() {
            $ = new TransportCellularProfileFeatureState();
        }

        public Builder(TransportCellularProfileFeatureState defaults) {
            $ = new TransportCellularProfileFeatureState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessPointName Set access point name
         * 
         * @return builder
         * 
         */
        public Builder accessPointName(@Nullable Output<String> accessPointName) {
            $.accessPointName = accessPointName;
            return this;
        }

        /**
         * @param accessPointName Set access point name
         * 
         * @return builder
         * 
         */
        public Builder accessPointName(String accessPointName) {
            return accessPointName(Output.of(accessPointName));
        }

        /**
         * @param accessPointNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder accessPointNameVariable(@Nullable Output<String> accessPointNameVariable) {
            $.accessPointNameVariable = accessPointNameVariable;
            return this;
        }

        /**
         * @param accessPointNameVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder accessPointNameVariable(String accessPointNameVariable) {
            return accessPointNameVariable(Output.of(accessPointNameVariable));
        }

        /**
         * @param authenticationType Set authentication type, Attribute conditional on `requires_authentication` being equal to `true` - Choices: `pap`,
         * `chap`, `pap_chap`
         * 
         * @return builder
         * 
         */
        public Builder authenticationType(@Nullable Output<String> authenticationType) {
            $.authenticationType = authenticationType;
            return this;
        }

        /**
         * @param authenticationType Set authentication type, Attribute conditional on `requires_authentication` being equal to `true` - Choices: `pap`,
         * `chap`, `pap_chap`
         * 
         * @return builder
         * 
         */
        public Builder authenticationType(String authenticationType) {
            return authenticationType(Output.of(authenticationType));
        }

        /**
         * @param authenticationTypeVariable Variable name, Attribute conditional on `requires_authentication` being equal to `true`
         * 
         * @return builder
         * 
         */
        public Builder authenticationTypeVariable(@Nullable Output<String> authenticationTypeVariable) {
            $.authenticationTypeVariable = authenticationTypeVariable;
            return this;
        }

        /**
         * @param authenticationTypeVariable Variable name, Attribute conditional on `requires_authentication` being equal to `true`
         * 
         * @return builder
         * 
         */
        public Builder authenticationTypeVariable(String authenticationTypeVariable) {
            return authenticationTypeVariable(Output.of(authenticationTypeVariable));
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Feature
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(@Nullable Output<String> featureProfileId) {
            $.featureProfileId = featureProfileId;
            return this;
        }

        /**
         * @param featureProfileId Feature Profile ID
         * 
         * @return builder
         * 
         */
        public Builder featureProfileId(String featureProfileId) {
            return featureProfileId(Output.of(featureProfileId));
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Feature
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param noOverwrite No Overwrite
         * 
         * @return builder
         * 
         */
        public Builder noOverwrite(@Nullable Output<Boolean> noOverwrite) {
            $.noOverwrite = noOverwrite;
            return this;
        }

        /**
         * @param noOverwrite No Overwrite
         * 
         * @return builder
         * 
         */
        public Builder noOverwrite(Boolean noOverwrite) {
            return noOverwrite(Output.of(noOverwrite));
        }

        /**
         * @param noOverwriteVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder noOverwriteVariable(@Nullable Output<String> noOverwriteVariable) {
            $.noOverwriteVariable = noOverwriteVariable;
            return this;
        }

        /**
         * @param noOverwriteVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder noOverwriteVariable(String noOverwriteVariable) {
            return noOverwriteVariable(Output.of(noOverwriteVariable));
        }

        /**
         * @param packetDataNetworkType Set packet data network type - Choices: `ipv4`, `ipv4v6`, `ipv6` - Default value: `ipv4`
         * 
         * @return builder
         * 
         */
        public Builder packetDataNetworkType(@Nullable Output<String> packetDataNetworkType) {
            $.packetDataNetworkType = packetDataNetworkType;
            return this;
        }

        /**
         * @param packetDataNetworkType Set packet data network type - Choices: `ipv4`, `ipv4v6`, `ipv6` - Default value: `ipv4`
         * 
         * @return builder
         * 
         */
        public Builder packetDataNetworkType(String packetDataNetworkType) {
            return packetDataNetworkType(Output.of(packetDataNetworkType));
        }

        /**
         * @param packetDataNetworkTypeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder packetDataNetworkTypeVariable(@Nullable Output<String> packetDataNetworkTypeVariable) {
            $.packetDataNetworkTypeVariable = packetDataNetworkTypeVariable;
            return this;
        }

        /**
         * @param packetDataNetworkTypeVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder packetDataNetworkTypeVariable(String packetDataNetworkTypeVariable) {
            return packetDataNetworkTypeVariable(Output.of(packetDataNetworkTypeVariable));
        }

        /**
         * @param profileId Set Profile ID - Range: `1`-`16`
         * 
         * @return builder
         * 
         */
        public Builder profileId(@Nullable Output<Integer> profileId) {
            $.profileId = profileId;
            return this;
        }

        /**
         * @param profileId Set Profile ID - Range: `1`-`16`
         * 
         * @return builder
         * 
         */
        public Builder profileId(Integer profileId) {
            return profileId(Output.of(profileId));
        }

        /**
         * @param profileIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder profileIdVariable(@Nullable Output<String> profileIdVariable) {
            $.profileIdVariable = profileIdVariable;
            return this;
        }

        /**
         * @param profileIdVariable Variable name
         * 
         * @return builder
         * 
         */
        public Builder profileIdVariable(String profileIdVariable) {
            return profileIdVariable(Output.of(profileIdVariable));
        }

        /**
         * @param profilePassword Set the profile password, Attribute conditional on `requires_authentication` being equal to `true`
         * 
         * @return builder
         * 
         */
        public Builder profilePassword(@Nullable Output<String> profilePassword) {
            $.profilePassword = profilePassword;
            return this;
        }

        /**
         * @param profilePassword Set the profile password, Attribute conditional on `requires_authentication` being equal to `true`
         * 
         * @return builder
         * 
         */
        public Builder profilePassword(String profilePassword) {
            return profilePassword(Output.of(profilePassword));
        }

        /**
         * @param profilePasswordVariable Variable name, Attribute conditional on `requires_authentication` being equal to `true`
         * 
         * @return builder
         * 
         */
        public Builder profilePasswordVariable(@Nullable Output<String> profilePasswordVariable) {
            $.profilePasswordVariable = profilePasswordVariable;
            return this;
        }

        /**
         * @param profilePasswordVariable Variable name, Attribute conditional on `requires_authentication` being equal to `true`
         * 
         * @return builder
         * 
         */
        public Builder profilePasswordVariable(String profilePasswordVariable) {
            return profilePasswordVariable(Output.of(profilePasswordVariable));
        }

        /**
         * @param profileUsername Set the profile username, Attribute conditional on `requires_authentication` being equal to `true`
         * 
         * @return builder
         * 
         */
        public Builder profileUsername(@Nullable Output<String> profileUsername) {
            $.profileUsername = profileUsername;
            return this;
        }

        /**
         * @param profileUsername Set the profile username, Attribute conditional on `requires_authentication` being equal to `true`
         * 
         * @return builder
         * 
         */
        public Builder profileUsername(String profileUsername) {
            return profileUsername(Output.of(profileUsername));
        }

        /**
         * @param profileUsernameVariable Variable name, Attribute conditional on `requires_authentication` being equal to `true`
         * 
         * @return builder
         * 
         */
        public Builder profileUsernameVariable(@Nullable Output<String> profileUsernameVariable) {
            $.profileUsernameVariable = profileUsernameVariable;
            return this;
        }

        /**
         * @param profileUsernameVariable Variable name, Attribute conditional on `requires_authentication` being equal to `true`
         * 
         * @return builder
         * 
         */
        public Builder profileUsernameVariable(String profileUsernameVariable) {
            return profileUsernameVariable(Output.of(profileUsernameVariable));
        }

        /**
         * @param requiresAuthentication Require authentication type - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder requiresAuthentication(@Nullable Output<Boolean> requiresAuthentication) {
            $.requiresAuthentication = requiresAuthentication;
            return this;
        }

        /**
         * @param requiresAuthentication Require authentication type - Default value: `false`
         * 
         * @return builder
         * 
         */
        public Builder requiresAuthentication(Boolean requiresAuthentication) {
            return requiresAuthentication(Output.of(requiresAuthentication));
        }

        /**
         * @param version The version of the Feature
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the Feature
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public TransportCellularProfileFeatureState build() {
            return $;
        }
    }

}
