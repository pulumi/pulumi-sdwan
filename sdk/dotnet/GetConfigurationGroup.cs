// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetConfigurationGroup
    {
        /// <summary>
        /// This data source can read the Configuration Group .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetConfigurationGroup.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetConfigurationGroupResult> InvokeAsync(GetConfigurationGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConfigurationGroupResult>("sdwan:index/getConfigurationGroup:getConfigurationGroup", args ?? new GetConfigurationGroupArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Configuration Group .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetConfigurationGroup.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetConfigurationGroupResult> Invoke(GetConfigurationGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfigurationGroupResult>("sdwan:index/getConfigurationGroup:getConfigurationGroup", args ?? new GetConfigurationGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Configuration Group .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetConfigurationGroup.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetConfigurationGroupResult> Invoke(GetConfigurationGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfigurationGroupResult>("sdwan:index/getConfigurationGroup:getConfigurationGroup", args ?? new GetConfigurationGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfigurationGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the object
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetConfigurationGroupArgs()
        {
        }
        public static new GetConfigurationGroupArgs Empty => new GetConfigurationGroupArgs();
    }

    public sealed class GetConfigurationGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the object
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetConfigurationGroupInvokeArgs()
        {
        }
        public static new GetConfigurationGroupInvokeArgs Empty => new GetConfigurationGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetConfigurationGroupResult
    {
        /// <summary>
        /// Description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// List of devices
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConfigurationGroupDeviceResult> Devices;
        /// <summary>
        /// List of feature profiles
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConfigurationGroupFeatureProfileResult> FeatureProfiles;
        /// <summary>
        /// List of all associated feature versions
        /// </summary>
        public readonly ImmutableArray<string> FeatureVersions;
        /// <summary>
        /// The id of the object
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the configuration group
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Type of solution
        /// </summary>
        public readonly string Solution;
        /// <summary>
        /// List of topology device types
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConfigurationGroupTopologyDeviceResult> TopologyDevices;
        /// <summary>
        /// Number of devices per site
        /// </summary>
        public readonly int TopologySiteDevices;

        [OutputConstructor]
        private GetConfigurationGroupResult(
            string description,

            ImmutableArray<Outputs.GetConfigurationGroupDeviceResult> devices,

            ImmutableArray<Outputs.GetConfigurationGroupFeatureProfileResult> featureProfiles,

            ImmutableArray<string> featureVersions,

            string id,

            string name,

            string solution,

            ImmutableArray<Outputs.GetConfigurationGroupTopologyDeviceResult> topologyDevices,

            int topologySiteDevices)
        {
            Description = description;
            Devices = devices;
            FeatureProfiles = featureProfiles;
            FeatureVersions = featureVersions;
            Id = id;
            Name = name;
            Solution = solution;
            TopologyDevices = topologyDevices;
            TopologySiteDevices = topologySiteDevices;
        }
    }
}
