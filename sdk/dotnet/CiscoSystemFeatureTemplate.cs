// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a Cisco System feature template.
    ///   - Minimum SD-WAN Manager version: `15.0.0`
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/ciscoSystemFeatureTemplate:CiscoSystemFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/ciscoSystemFeatureTemplate:CiscoSystemFeatureTemplate")]
    public partial class CiscoSystemFeatureTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Collect admin-tech before reboot due to daemon failure
        ///   - Default value: `true`
        /// </summary>
        [Output("adminTechOnFailure")]
        public Output<bool?> AdminTechOnFailure { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("adminTechOnFailureVariable")]
        public Output<string?> AdminTechOnFailureVariable { get; private set; } = null!;

        /// <summary>
        /// Set the affinity group number for router
        ///   - Range: `1`-`255`
        /// </summary>
        [Output("affinityGroupNumber")]
        public Output<int?> AffinityGroupNumber { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("affinityGroupNumberVariable")]
        public Output<string?> AffinityGroupNumberVariable { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("affinityGroupPreferenceVariable")]
        public Output<string?> AffinityGroupPreferenceVariable { get; private set; } = null!;

        /// <summary>
        /// Set the affinity group preference
        /// </summary>
        [Output("affinityGroupPreferences")]
        public Output<ImmutableArray<int>> AffinityGroupPreferences { get; private set; } = null!;

        /// <summary>
        /// Set the console baud rate
        ///   - Choices: `1200`, `2400`, `4800`, `9600`, `19200`, `38400`, `57600`, `115200`
        ///   - Default value: `9600`
        /// </summary>
        [Output("consoleBaudRate")]
        public Output<string?> ConsoleBaudRate { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("consoleBaudRateVariable")]
        public Output<string?> ConsoleBaudRateVariable { get; private set; } = null!;

        /// <summary>
        /// Set the policer rate for control sessions
        ///   - Range: `1`-`65535`
        ///   - Default value: `300`
        /// </summary>
        [Output("controlSessionPps")]
        public Output<int?> ControlSessionPps { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("controlSessionPpsVariable")]
        public Output<string?> ControlSessionPpsVariable { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("controllerGroupListVariable")]
        public Output<string?> ControllerGroupListVariable { get; private set; } = null!;

        /// <summary>
        /// Configure a list of comma-separated device groups
        /// </summary>
        [Output("controllerGroupLists")]
        public Output<ImmutableArray<int>> ControllerGroupLists { get; private set; } = null!;

        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Device groups (Use comma(,) for multiple groups)
        /// </summary>
        [Output("deviceGroups")]
        public Output<ImmutableArray<string>> DeviceGroups { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("deviceGroupsVariable")]
        public Output<string?> DeviceGroupsVariable { get; private set; } = null!;

        /// <summary>
        /// List of supported device types
        ///   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        [Output("deviceTypes")]
        public Output<ImmutableArray<string>> DeviceTypes { get; private set; } = null!;

        /// <summary>
        /// Enable migration mode to Multi-Region Fabric
        ///   - Choices: `enabled`, `enabled-from-bgp-core`
        /// </summary>
        [Output("enableMrfMigration")]
        public Output<string?> EnableMrfMigration { get; private set; } = null!;

        /// <summary>
        /// Enhanced App Aware Routing
        ///   - Choices: `disabled`, `aggressive`, `moderate`, `conservative`
        ///   - Default value: `disabled`
        /// </summary>
        [Output("enhancedAppAwareRouting")]
        public Output<string?> EnhancedAppAwareRouting { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("enhancedAppAwareRoutingVariable")]
        public Output<string?> EnhancedAppAwareRoutingVariable { get; private set; } = null!;

        /// <summary>
        /// Enable Geo fencing
        ///   - Default value: `false`
        /// </summary>
        [Output("geoFencing")]
        public Output<bool?> GeoFencing { get; private set; } = null!;

        /// <summary>
        /// Set the device’s geo fencing range
        ///   - Range: `100`-`10000`
        ///   - Default value: `100`
        /// </summary>
        [Output("geoFencingRange")]
        public Output<int?> GeoFencingRange { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("geoFencingRangeVariable")]
        public Output<string?> GeoFencingRangeVariable { get; private set; } = null!;

        /// <summary>
        /// Enable Geo fencing
        ///   - Default value: `false`
        /// </summary>
        [Output("geoFencingSms")]
        public Output<bool?> GeoFencingSms { get; private set; } = null!;

        /// <summary>
        /// Set device’s geo fencing SMS phone number
        /// </summary>
        [Output("geoFencingSmsPhoneNumbers")]
        public Output<ImmutableArray<Outputs.CiscoSystemFeatureTemplateGeoFencingSmsPhoneNumber>> GeoFencingSmsPhoneNumbers { get; private set; } = null!;

        /// <summary>
        /// Set the hostname
        /// </summary>
        [Output("hostname")]
        public Output<string?> Hostname { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("hostnameVariable")]
        public Output<string?> HostnameVariable { get; private set; } = null!;

        /// <summary>
        /// Idle CLI timeout in minutes
        ///   - Range: `0`-`300`
        /// </summary>
        [Output("idleTimeout")]
        public Output<int?> IdleTimeout { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("idleTimeoutVariable")]
        public Output<string?> IdleTimeoutVariable { get; private set; } = null!;

        /// <summary>
        /// Set the device’s physical latitude
        ///   - Range: `-90`-`90`
        /// </summary>
        [Output("latitude")]
        public Output<double?> Latitude { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("latitudeVariable")]
        public Output<string?> LatitudeVariable { get; private set; } = null!;

        /// <summary>
        /// Set the location of the device
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("locationVariable")]
        public Output<string?> LocationVariable { get; private set; } = null!;

        /// <summary>
        /// Set the device’s physical longitude
        ///   - Range: `-180`-`180`
        /// </summary>
        [Output("longitude")]
        public Output<double?> Longitude { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("longitudeVariable")]
        public Output<string?> LongitudeVariable { get; private set; } = null!;

        /// <summary>
        /// Set the maximum number of OMP sessions &lt;1..100&gt; the device can have
        ///   - Range: `1`-`100`
        /// </summary>
        [Output("maxOmpSessions")]
        public Output<int?> MaxOmpSessions { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("maxOmpSessionsVariable")]
        public Output<string?> MaxOmpSessionsVariable { get; private set; } = null!;

        /// <summary>
        /// Set BGP community during migration from BGP-core based network
        ///   - Range: `1`-`4294967295`
        /// </summary>
        [Output("migrationBgpCommunity")]
        public Output<int?> MigrationBgpCommunity { get; private set; } = null!;

        /// <summary>
        /// Device is multi-tenant
        ///   - Default value: `false`
        /// </summary>
        [Output("multiTenant")]
        public Output<bool?> MultiTenant { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("multiTenantVariable")]
        public Output<string?> MultiTenantVariable { get; private set; } = null!;

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Object Track configuration
        /// </summary>
        [Output("objectTrackers")]
        public Output<ImmutableArray<Outputs.CiscoSystemFeatureTemplateObjectTracker>> ObjectTrackers { get; private set; } = null!;

        /// <summary>
        /// Enable or disable On-demand Tunnel
        ///   - Default value: `false`
        /// </summary>
        [Output("onDemandTunnel")]
        public Output<bool?> OnDemandTunnel { get; private set; } = null!;

        /// <summary>
        /// Idle CLI timeout in minutes
        ///   - Range: `0`-`300`
        /// </summary>
        [Output("onDemandTunnelIdleTimeout")]
        public Output<int?> OnDemandTunnelIdleTimeout { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("onDemandTunnelIdleTimeoutVariable")]
        public Output<string?> OnDemandTunnelIdleTimeoutVariable { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("onDemandTunnelVariable")]
        public Output<string?> OnDemandTunnelVariable { get; private set; } = null!;

        /// <summary>
        /// Set the Overlay ID
        ///   - Range: `1`-`4294967295`
        ///   - Default value: `1`
        /// </summary>
        [Output("overlayId")]
        public Output<int?> OverlayId { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("overlayIdVariable")]
        public Output<string?> OverlayIdVariable { get; private set; } = null!;

        /// <summary>
        /// Enable port hopping
        ///   - Default value: `true`
        /// </summary>
        [Output("portHopping")]
        public Output<bool?> PortHopping { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("portHoppingVariable")]
        public Output<string?> PortHoppingVariable { get; private set; } = null!;

        /// <summary>
        /// Set the TLOC port offset when multiple devices are behind a NAT
        ///   - Range: `0`-`19`
        ///   - Default value: `0`
        /// </summary>
        [Output("portOffset")]
        public Output<int?> PortOffset { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("portOffsetVariable")]
        public Output<string?> PortOffsetVariable { get; private set; } = null!;

        /// <summary>
        /// Set region ID
        ///   - Range: `1`-`63`
        /// </summary>
        [Output("regionId")]
        public Output<int?> RegionId { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("regionIdVariable")]
        public Output<string?> RegionIdVariable { get; private set; } = null!;

        /// <summary>
        /// Set the role for router
        ///   - Choices: `edge-router`, `border-router`
        /// </summary>
        [Output("role")]
        public Output<string?> Role { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("roleVariable")]
        public Output<string?> RoleVariable { get; private set; } = null!;

        /// <summary>
        /// Set secondary region ID
        ///   - Range: `1`-`63`
        /// </summary>
        [Output("secondaryRegionId")]
        public Output<int?> SecondaryRegionId { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("secondaryRegionIdVariable")]
        public Output<string?> SecondaryRegionIdVariable { get; private set; } = null!;

        /// <summary>
        /// Set the site identifier
        ///   - Range: `1`-`4294967295`
        /// </summary>
        [Output("siteId")]
        public Output<int?> SiteId { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("siteIdVariable")]
        public Output<string?> SiteIdVariable { get; private set; } = null!;

        /// <summary>
        /// Set a text description of the device
        /// </summary>
        [Output("systemDescription")]
        public Output<string?> SystemDescription { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("systemDescriptionVariable")]
        public Output<string?> SystemDescriptionVariable { get; private set; } = null!;

        /// <summary>
        /// Set the system IP address
        /// </summary>
        [Output("systemIp")]
        public Output<string?> SystemIp { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("systemIpVariable")]
        public Output<string?> SystemIpVariable { get; private set; } = null!;

        /// <summary>
        /// The template type
        /// </summary>
        [Output("templateType")]
        public Output<string> TemplateType { get; private set; } = null!;

        /// <summary>
        /// Set the timezone
        ///   - Choices: `Europe/Andorra`, `Asia/Dubai`, `Asia/Kabul`, `America/Antigua`, `America/Anguilla`, `Europe/Tirane`, `Asia/Yerevan`, `Africa/Luanda`, `Antarctica/McMurdo`, `Antarctica/Rothera`, `Antarctica/Palmer`, `Antarctica/Mawson`, `Antarctica/Davis`, `Antarctica/Casey`, `Antarctica/Vostok`, `Antarctica/DumontDUrville`, `Antarctica/Syowa`, `America/Argentina/Buenos_Aires`, `America/Argentina/Cordoba`, `America/Argentina/Salta`, `America/Argentina/Jujuy`, `America/Argentina/Tucuman`, `America/Argentina/Catamarca`, `America/Argentina/La_Rioja`, `America/Argentina/San_Juan`, `America/Argentina/Mendoza`, `America/Argentina/San_Luis`, `America/Argentina/Rio_Gallegos`, `America/Argentina/Ushuaia`, `Pacific/Pago_Pago`, `Europe/Vienna`, `Australia/Lord_Howe`, `Antarctica/Macquarie`, `Australia/Hobart`, `Australia/Currie`, `Australia/Melbourne`, `Australia/Sydney`, `Australia/Broken_Hill`, `Australia/Brisbane`, `Australia/Lindeman`, `Australia/Adelaide`, `Australia/Darwin`, `Australia/Perth`, `Australia/Eucla`, `America/Aruba`, `Europe/Mariehamn`, `Asia/Baku`, `Europe/Sarajevo`, `America/Barbados`, `Asia/Dhaka`, `Europe/Brussels`, `Africa/Ouagadougou`, `Europe/Sofia`, `Asia/Bahrain`, `Africa/Bujumbura`, `Africa/Porto-Novo`, `America/St_Barthelemy`, `Atlantic/Bermuda`, `Asia/Brunei`, `America/La_Paz`, `America/Kralendijk`, `America/Noronha`, `America/Belem`, `America/Fortaleza`, `America/Recife`, `America/Araguaina`, `America/Maceio`, `America/Bahia`, `America/Sao_Paulo`, `America/Campo_Grande`, `America/Cuiaba`, `America/Santarem`, `America/Porto_Velho`, `America/Boa_Vista`, `America/Manaus`, `America/Eirunepe`, `America/Rio_Branco`, `America/Nassau`, `Asia/Thimphu`, `Africa/Gaborone`, `Europe/Minsk`, `America/Belize`, `America/St_Johns`, `America/Halifax`, `America/Glace_Bay`, `America/Moncton`, `America/Goose_Bay`, `America/Blanc-Sablon`, `America/Toronto`, `America/Nipigon`, `America/Thunder_Bay`, `America/Iqaluit`, `America/Pangnirtung`, `America/Resolute`, `America/Atikokan`, `America/Rankin_Inlet`, `America/Winnipeg`, `America/Rainy_River`, `America/Regina`, `America/Swift_Current`, `America/Edmonton`, `America/Cambridge_Bay`, `America/Yellowknife`, `America/Inuvik`, `America/Creston`, `America/Dawson_Creek`, `America/Vancouver`, `America/Whitehorse`, `America/Dawson`, `Indian/Cocos`, `Africa/Kinshasa`, `Africa/Lubumbashi`, `Africa/Bangui`, `Africa/Brazzaville`, `Europe/Zurich`, `Africa/Abidjan`, `Pacific/Rarotonga`, `America/Santiago`, `Pacific/Easter`, `Africa/Douala`, `Asia/Shanghai`, `Asia/Harbin`, `Asia/Chongqing`, `Asia/Urumqi`, `Asia/Kashgar`, `America/Bogota`, `America/Costa_Rica`, `America/Havana`, `Atlantic/Cape_Verde`, `America/Curacao`, `Indian/Christmas`, `Asia/Nicosia`, `Europe/Prague`, `Europe/Berlin`, `Europe/Busingen`, `Africa/Djibouti`, `Europe/Copenhagen`, `America/Dominica`, `America/Santo_Domingo`, `Africa/Algiers`, `America/Guayaquil`, `Pacific/Galapagos`, `Europe/Tallinn`, `Africa/Cairo`, `Africa/El_Aaiun`, `Africa/Asmara`, `Europe/Madrid`, `Africa/Ceuta`, `Atlantic/Canary`, `Africa/Addis_Ababa`, `Europe/Helsinki`, `Pacific/Fiji`, `Atlantic/Stanley`, `Pacific/Chuuk`, `Pacific/Pohnpei`, `Pacific/Kosrae`, `Atlantic/Faroe`, `Europe/Paris`, `Africa/Libreville`, `Europe/London`, `America/Grenada`, `Asia/Tbilisi`, `America/Cayenne`, `Europe/Guernsey`, `Africa/Accra`, `Europe/Gibraltar`, `America/Godthab`, `America/Danmarkshavn`, `America/Scoresbysund`, `America/Thule`, `Africa/Banjul`, `Africa/Conakry`, `America/Guadeloupe`, `Africa/Malabo`, `Europe/Athens`, `Atlantic/South_Georgia`, `America/Guatemala`, `Pacific/Guam`, `Africa/Bissau`, `America/Guyana`, `Asia/Hong_Kong`, `America/Tegucigalpa`, `Europe/Zagreb`, `America/Port-au-Prince`, `Europe/Budapest`, `Asia/Jakarta`, `Asia/Pontianak`, `Asia/Makassar`, `Asia/Jayapura`, `Europe/Dublin`, `Asia/Jerusalem`, `Europe/Isle_of_Man`, `Asia/Kolkata`, `Indian/Chagos`, `Asia/Baghdad`, `Asia/Tehran`, `Atlantic/Reykjavik`, `Europe/Rome`, `Europe/Jersey`, `America/Jamaica`, `Asia/Amman`, `Asia/Tokyo`, `Africa/Nairobi`, `Asia/Bishkek`, `Asia/Phnom_Penh`, `Pacific/Tarawa`, `Pacific/Enderbury`, `Pacific/Kiritimati`, `Indian/Comoro`, `America/St_Kitts`, `Asia/Pyongyang`, `Asia/Seoul`, `Asia/Kuwait`, `America/Cayman`, `Asia/Almaty`, `Asia/Qyzylorda`, `Asia/Aqtobe`, `Asia/Aqtau`, `Asia/Oral`, `Asia/Vientiane`, `Asia/Beirut`, `America/St_Lucia`, `Europe/Vaduz`, `Asia/Colombo`, `Africa/Monrovia`, `Africa/Maseru`, `Europe/Vilnius`, `Europe/Luxembourg`, `Europe/Riga`, `Africa/Tripoli`, `Africa/Casablanca`, `Europe/Monaco`, `Europe/Chisinau`, `Europe/Podgorica`, `America/Marigot`, `Indian/Antananarivo`, `Pacific/Majuro`, `Pacific/Kwajalein`, `Europe/Skopje`, `Africa/Bamako`, `Asia/Rangoon`, `Asia/Ulaanbaatar`, `Asia/Hovd`, `Asia/Choibalsan`, `Asia/Macau`, `Pacific/Saipan`, `America/Martinique`, `Africa/Nouakchott`, `America/Montserrat`, `Europe/Malta`, `Indian/Mauritius`, `Indian/Maldives`, `Africa/Blantyre`, `America/Mexico_City`, `America/Cancun`, `America/Merida`, `America/Monterrey`, `America/Matamoros`, `America/Mazatlan`, `America/Chihuahua`, `America/Ojinaga`, `America/Hermosillo`, `America/Tijuana`, `America/Santa_Isabel`, `America/Bahia_Banderas`, `Asia/Kuala_Lumpur`, `Asia/Kuching`, `Africa/Maputo`, `Africa/Windhoek`, `Pacific/Noumea`, `Africa/Niamey`, `Pacific/Norfolk`, `Africa/Lagos`, `America/Managua`, `Europe/Amsterdam`, `Europe/Oslo`, `Asia/Kathmandu`, `Pacific/Nauru`, `Pacific/Niue`, `Pacific/Auckland`, `Pacific/Chatham`, `Asia/Muscat`, `America/Panama`, `America/Lima`, `Pacific/Tahiti`, `Pacific/Marquesas`, `Pacific/Gambier`, `Pacific/Port_Moresby`, `Asia/Manila`, `Asia/Karachi`, `Europe/Warsaw`, `America/Miquelon`, `Pacific/Pitcairn`, `America/Puerto_Rico`, `Asia/Gaza`, `Asia/Hebron`, `Europe/Lisbon`, `Atlantic/Madeira`, `Atlantic/Azores`, `Pacific/Palau`, `America/Asuncion`, `Asia/Qatar`, `Indian/Reunion`, `Europe/Bucharest`, `Europe/Belgrade`, `Europe/Kaliningrad`, `Europe/Moscow`, `Europe/Volgograd`, `Europe/Samara`, `Asia/Yekaterinburg`, `Asia/Omsk`, `Asia/Novosibirsk`, `Asia/Novokuznetsk`, `Asia/Krasnoyarsk`, `Asia/Irkutsk`, `Asia/Yakutsk`, `Asia/Khandyga`, `Asia/Vladivostok`, `Asia/Sakhalin`, `Asia/Ust-Nera`, `Asia/Magadan`, `Asia/Kamchatka`, `Asia/Anadyr`, `Africa/Kigali`, `Asia/Riyadh`, `Pacific/Guadalcanal`, `Indian/Mahe`, `Africa/Khartoum`, `Europe/Stockholm`, `Asia/Singapore`, `Atlantic/St_Helena`, `Europe/Ljubljana`, `Arctic/Longyearbyen`, `Europe/Bratislava`, `Africa/Freetown`, `Europe/San_Marino`, `Africa/Dakar`, `Africa/Mogadishu`, `America/Paramaribo`, `Africa/Juba`, `Africa/Sao_Tome`, `America/El_Salvador`, `America/Lower_Princes`, `Asia/Damascus`, `Africa/Mbabane`, `America/Grand_Turk`, `Africa/Ndjamena`, `Indian/Kerguelen`, `Africa/Lome`, `Asia/Bangkok`, `Asia/Dushanbe`, `Pacific/Fakaofo`, `Asia/Dili`, `Asia/Ashgabat`, `Africa/Tunis`, `Pacific/Tongatapu`, `Europe/Istanbul`, `America/Port_of_Spain`, `Pacific/Funafuti`, `Asia/Taipei`, `Africa/Dar_es_Salaam`, `Europe/Kiev`, `Europe/Uzhgorod`, `Europe/Zaporozhye`, `Europe/Simferopol`, `Africa/Kampala`, `Pacific/Johnston`, `Pacific/Midway`, `Pacific/Wake`, `America/New_York`, `America/Detroit`, `America/Kentucky/Louisville`, `America/Kentucky/Monticello`, `America/Indiana/Indianapolis`, `America/Indiana/Vincennes`, `America/Indiana/Winamac`, `America/Indiana/Marengo`, `America/Indiana/Petersburg`, `America/Indiana/Vevay`, `America/Chicago`, `America/Indiana/Tell_City`, `America/Indiana/Knox`, `America/Menominee`, `America/North_Dakota/Center`, `America/North_Dakota/New_Salem`, `America/North_Dakota/Beulah`, `America/Denver`, `America/Boise`, `America/Phoenix`, `America/Los_Angeles`, `America/Anchorage`, `America/Juneau`, `America/Sitka`, `America/Yakutat`, `America/Nome`, `America/Adak`, `America/Metlakatla`, `Pacific/Honolulu`, `America/Montevideo`, `Asia/Samarkand`, `Asia/Tashkent`, `Europe/Vatican`, `America/St_Vincent`, `America/Caracas`, `America/Tortola`, `America/St_Thomas`, `Asia/Ho_Chi_Minh`, `Pacific/Efate`, `Pacific/Wallis`, `Pacific/Apia`, `Asia/Aden`, `Indian/Mayotte`, `Africa/Johannesburg`, `Africa/Lusaka`, `Africa/Harare`, `UTC`
        ///   - Default value: `UTC`
        /// </summary>
        [Output("timezone")]
        public Output<string?> Timezone { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("timezoneVariable")]
        public Output<string?> TimezoneVariable { get; private set; } = null!;

        /// <summary>
        /// Enable or disable default gateway tracking
        ///   - Default value: `true`
        /// </summary>
        [Output("trackDefaultGateway")]
        public Output<bool?> TrackDefaultGateway { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("trackDefaultGatewayVariable")]
        public Output<string?> TrackDefaultGatewayVariable { get; private set; } = null!;

        /// <summary>
        /// OMP Tag attached to routes based on interface tracking
        ///   - Range: `1`-`4294967295`
        /// </summary>
        [Output("trackInterfaceTag")]
        public Output<int?> TrackInterfaceTag { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("trackInterfaceTagVariable")]
        public Output<string?> TrackInterfaceTagVariable { get; private set; } = null!;

        /// <summary>
        /// Configure tracking of transport
        ///   - Default value: `true`
        /// </summary>
        [Output("trackTransport")]
        public Output<bool?> TrackTransport { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("trackTransportVariable")]
        public Output<string?> TrackTransportVariable { get; private set; } = null!;

        /// <summary>
        /// Tracker configuration
        /// </summary>
        [Output("trackers")]
        public Output<ImmutableArray<Outputs.CiscoSystemFeatureTemplateTracker>> Trackers { get; private set; } = null!;

        /// <summary>
        /// Enable transport gateway
        ///   - Default value: `false`
        /// </summary>
        [Output("transportGateway")]
        public Output<bool?> TransportGateway { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("transportGatewayVariable")]
        public Output<string?> TransportGatewayVariable { get; private set; } = null!;

        /// <summary>
        /// The version of the feature template
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a CiscoSystemFeatureTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CiscoSystemFeatureTemplate(string name, CiscoSystemFeatureTemplateArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/ciscoSystemFeatureTemplate:CiscoSystemFeatureTemplate", name, args ?? new CiscoSystemFeatureTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CiscoSystemFeatureTemplate(string name, Input<string> id, CiscoSystemFeatureTemplateState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/ciscoSystemFeatureTemplate:CiscoSystemFeatureTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CiscoSystemFeatureTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CiscoSystemFeatureTemplate Get(string name, Input<string> id, CiscoSystemFeatureTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new CiscoSystemFeatureTemplate(name, id, state, options);
        }
    }

    public sealed class CiscoSystemFeatureTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Collect admin-tech before reboot due to daemon failure
        ///   - Default value: `true`
        /// </summary>
        [Input("adminTechOnFailure")]
        public Input<bool>? AdminTechOnFailure { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("adminTechOnFailureVariable")]
        public Input<string>? AdminTechOnFailureVariable { get; set; }

        /// <summary>
        /// Set the affinity group number for router
        ///   - Range: `1`-`255`
        /// </summary>
        [Input("affinityGroupNumber")]
        public Input<int>? AffinityGroupNumber { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("affinityGroupNumberVariable")]
        public Input<string>? AffinityGroupNumberVariable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("affinityGroupPreferenceVariable")]
        public Input<string>? AffinityGroupPreferenceVariable { get; set; }

        [Input("affinityGroupPreferences")]
        private InputList<int>? _affinityGroupPreferences;

        /// <summary>
        /// Set the affinity group preference
        /// </summary>
        public InputList<int> AffinityGroupPreferences
        {
            get => _affinityGroupPreferences ?? (_affinityGroupPreferences = new InputList<int>());
            set => _affinityGroupPreferences = value;
        }

        /// <summary>
        /// Set the console baud rate
        ///   - Choices: `1200`, `2400`, `4800`, `9600`, `19200`, `38400`, `57600`, `115200`
        ///   - Default value: `9600`
        /// </summary>
        [Input("consoleBaudRate")]
        public Input<string>? ConsoleBaudRate { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("consoleBaudRateVariable")]
        public Input<string>? ConsoleBaudRateVariable { get; set; }

        /// <summary>
        /// Set the policer rate for control sessions
        ///   - Range: `1`-`65535`
        ///   - Default value: `300`
        /// </summary>
        [Input("controlSessionPps")]
        public Input<int>? ControlSessionPps { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("controlSessionPpsVariable")]
        public Input<string>? ControlSessionPpsVariable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("controllerGroupListVariable")]
        public Input<string>? ControllerGroupListVariable { get; set; }

        [Input("controllerGroupLists")]
        private InputList<int>? _controllerGroupLists;

        /// <summary>
        /// Configure a list of comma-separated device groups
        /// </summary>
        public InputList<int> ControllerGroupLists
        {
            get => _controllerGroupLists ?? (_controllerGroupLists = new InputList<int>());
            set => _controllerGroupLists = value;
        }

        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("deviceGroups")]
        private InputList<string>? _deviceGroups;

        /// <summary>
        /// Device groups (Use comma(,) for multiple groups)
        /// </summary>
        public InputList<string> DeviceGroups
        {
            get => _deviceGroups ?? (_deviceGroups = new InputList<string>());
            set => _deviceGroups = value;
        }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("deviceGroupsVariable")]
        public Input<string>? DeviceGroupsVariable { get; set; }

        [Input("deviceTypes", required: true)]
        private InputList<string>? _deviceTypes;

        /// <summary>
        /// List of supported device types
        ///   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        public InputList<string> DeviceTypes
        {
            get => _deviceTypes ?? (_deviceTypes = new InputList<string>());
            set => _deviceTypes = value;
        }

        /// <summary>
        /// Enable migration mode to Multi-Region Fabric
        ///   - Choices: `enabled`, `enabled-from-bgp-core`
        /// </summary>
        [Input("enableMrfMigration")]
        public Input<string>? EnableMrfMigration { get; set; }

        /// <summary>
        /// Enhanced App Aware Routing
        ///   - Choices: `disabled`, `aggressive`, `moderate`, `conservative`
        ///   - Default value: `disabled`
        /// </summary>
        [Input("enhancedAppAwareRouting")]
        public Input<string>? EnhancedAppAwareRouting { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("enhancedAppAwareRoutingVariable")]
        public Input<string>? EnhancedAppAwareRoutingVariable { get; set; }

        /// <summary>
        /// Enable Geo fencing
        ///   - Default value: `false`
        /// </summary>
        [Input("geoFencing")]
        public Input<bool>? GeoFencing { get; set; }

        /// <summary>
        /// Set the device’s geo fencing range
        ///   - Range: `100`-`10000`
        ///   - Default value: `100`
        /// </summary>
        [Input("geoFencingRange")]
        public Input<int>? GeoFencingRange { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("geoFencingRangeVariable")]
        public Input<string>? GeoFencingRangeVariable { get; set; }

        /// <summary>
        /// Enable Geo fencing
        ///   - Default value: `false`
        /// </summary>
        [Input("geoFencingSms")]
        public Input<bool>? GeoFencingSms { get; set; }

        [Input("geoFencingSmsPhoneNumbers")]
        private InputList<Inputs.CiscoSystemFeatureTemplateGeoFencingSmsPhoneNumberArgs>? _geoFencingSmsPhoneNumbers;

        /// <summary>
        /// Set device’s geo fencing SMS phone number
        /// </summary>
        public InputList<Inputs.CiscoSystemFeatureTemplateGeoFencingSmsPhoneNumberArgs> GeoFencingSmsPhoneNumbers
        {
            get => _geoFencingSmsPhoneNumbers ?? (_geoFencingSmsPhoneNumbers = new InputList<Inputs.CiscoSystemFeatureTemplateGeoFencingSmsPhoneNumberArgs>());
            set => _geoFencingSmsPhoneNumbers = value;
        }

        /// <summary>
        /// Set the hostname
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("hostnameVariable")]
        public Input<string>? HostnameVariable { get; set; }

        /// <summary>
        /// Idle CLI timeout in minutes
        ///   - Range: `0`-`300`
        /// </summary>
        [Input("idleTimeout")]
        public Input<int>? IdleTimeout { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("idleTimeoutVariable")]
        public Input<string>? IdleTimeoutVariable { get; set; }

        /// <summary>
        /// Set the device’s physical latitude
        ///   - Range: `-90`-`90`
        /// </summary>
        [Input("latitude")]
        public Input<double>? Latitude { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("latitudeVariable")]
        public Input<string>? LatitudeVariable { get; set; }

        /// <summary>
        /// Set the location of the device
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("locationVariable")]
        public Input<string>? LocationVariable { get; set; }

        /// <summary>
        /// Set the device’s physical longitude
        ///   - Range: `-180`-`180`
        /// </summary>
        [Input("longitude")]
        public Input<double>? Longitude { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("longitudeVariable")]
        public Input<string>? LongitudeVariable { get; set; }

        /// <summary>
        /// Set the maximum number of OMP sessions &lt;1..100&gt; the device can have
        ///   - Range: `1`-`100`
        /// </summary>
        [Input("maxOmpSessions")]
        public Input<int>? MaxOmpSessions { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("maxOmpSessionsVariable")]
        public Input<string>? MaxOmpSessionsVariable { get; set; }

        /// <summary>
        /// Set BGP community during migration from BGP-core based network
        ///   - Range: `1`-`4294967295`
        /// </summary>
        [Input("migrationBgpCommunity")]
        public Input<int>? MigrationBgpCommunity { get; set; }

        /// <summary>
        /// Device is multi-tenant
        ///   - Default value: `false`
        /// </summary>
        [Input("multiTenant")]
        public Input<bool>? MultiTenant { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("multiTenantVariable")]
        public Input<string>? MultiTenantVariable { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("objectTrackers")]
        private InputList<Inputs.CiscoSystemFeatureTemplateObjectTrackerArgs>? _objectTrackers;

        /// <summary>
        /// Object Track configuration
        /// </summary>
        public InputList<Inputs.CiscoSystemFeatureTemplateObjectTrackerArgs> ObjectTrackers
        {
            get => _objectTrackers ?? (_objectTrackers = new InputList<Inputs.CiscoSystemFeatureTemplateObjectTrackerArgs>());
            set => _objectTrackers = value;
        }

        /// <summary>
        /// Enable or disable On-demand Tunnel
        ///   - Default value: `false`
        /// </summary>
        [Input("onDemandTunnel")]
        public Input<bool>? OnDemandTunnel { get; set; }

        /// <summary>
        /// Idle CLI timeout in minutes
        ///   - Range: `0`-`300`
        /// </summary>
        [Input("onDemandTunnelIdleTimeout")]
        public Input<int>? OnDemandTunnelIdleTimeout { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("onDemandTunnelIdleTimeoutVariable")]
        public Input<string>? OnDemandTunnelIdleTimeoutVariable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("onDemandTunnelVariable")]
        public Input<string>? OnDemandTunnelVariable { get; set; }

        /// <summary>
        /// Set the Overlay ID
        ///   - Range: `1`-`4294967295`
        ///   - Default value: `1`
        /// </summary>
        [Input("overlayId")]
        public Input<int>? OverlayId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("overlayIdVariable")]
        public Input<string>? OverlayIdVariable { get; set; }

        /// <summary>
        /// Enable port hopping
        ///   - Default value: `true`
        /// </summary>
        [Input("portHopping")]
        public Input<bool>? PortHopping { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("portHoppingVariable")]
        public Input<string>? PortHoppingVariable { get; set; }

        /// <summary>
        /// Set the TLOC port offset when multiple devices are behind a NAT
        ///   - Range: `0`-`19`
        ///   - Default value: `0`
        /// </summary>
        [Input("portOffset")]
        public Input<int>? PortOffset { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("portOffsetVariable")]
        public Input<string>? PortOffsetVariable { get; set; }

        /// <summary>
        /// Set region ID
        ///   - Range: `1`-`63`
        /// </summary>
        [Input("regionId")]
        public Input<int>? RegionId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("regionIdVariable")]
        public Input<string>? RegionIdVariable { get; set; }

        /// <summary>
        /// Set the role for router
        ///   - Choices: `edge-router`, `border-router`
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("roleVariable")]
        public Input<string>? RoleVariable { get; set; }

        /// <summary>
        /// Set secondary region ID
        ///   - Range: `1`-`63`
        /// </summary>
        [Input("secondaryRegionId")]
        public Input<int>? SecondaryRegionId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("secondaryRegionIdVariable")]
        public Input<string>? SecondaryRegionIdVariable { get; set; }

        /// <summary>
        /// Set the site identifier
        ///   - Range: `1`-`4294967295`
        /// </summary>
        [Input("siteId")]
        public Input<int>? SiteId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("siteIdVariable")]
        public Input<string>? SiteIdVariable { get; set; }

        /// <summary>
        /// Set a text description of the device
        /// </summary>
        [Input("systemDescription")]
        public Input<string>? SystemDescription { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("systemDescriptionVariable")]
        public Input<string>? SystemDescriptionVariable { get; set; }

        /// <summary>
        /// Set the system IP address
        /// </summary>
        [Input("systemIp")]
        public Input<string>? SystemIp { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("systemIpVariable")]
        public Input<string>? SystemIpVariable { get; set; }

        /// <summary>
        /// Set the timezone
        ///   - Choices: `Europe/Andorra`, `Asia/Dubai`, `Asia/Kabul`, `America/Antigua`, `America/Anguilla`, `Europe/Tirane`, `Asia/Yerevan`, `Africa/Luanda`, `Antarctica/McMurdo`, `Antarctica/Rothera`, `Antarctica/Palmer`, `Antarctica/Mawson`, `Antarctica/Davis`, `Antarctica/Casey`, `Antarctica/Vostok`, `Antarctica/DumontDUrville`, `Antarctica/Syowa`, `America/Argentina/Buenos_Aires`, `America/Argentina/Cordoba`, `America/Argentina/Salta`, `America/Argentina/Jujuy`, `America/Argentina/Tucuman`, `America/Argentina/Catamarca`, `America/Argentina/La_Rioja`, `America/Argentina/San_Juan`, `America/Argentina/Mendoza`, `America/Argentina/San_Luis`, `America/Argentina/Rio_Gallegos`, `America/Argentina/Ushuaia`, `Pacific/Pago_Pago`, `Europe/Vienna`, `Australia/Lord_Howe`, `Antarctica/Macquarie`, `Australia/Hobart`, `Australia/Currie`, `Australia/Melbourne`, `Australia/Sydney`, `Australia/Broken_Hill`, `Australia/Brisbane`, `Australia/Lindeman`, `Australia/Adelaide`, `Australia/Darwin`, `Australia/Perth`, `Australia/Eucla`, `America/Aruba`, `Europe/Mariehamn`, `Asia/Baku`, `Europe/Sarajevo`, `America/Barbados`, `Asia/Dhaka`, `Europe/Brussels`, `Africa/Ouagadougou`, `Europe/Sofia`, `Asia/Bahrain`, `Africa/Bujumbura`, `Africa/Porto-Novo`, `America/St_Barthelemy`, `Atlantic/Bermuda`, `Asia/Brunei`, `America/La_Paz`, `America/Kralendijk`, `America/Noronha`, `America/Belem`, `America/Fortaleza`, `America/Recife`, `America/Araguaina`, `America/Maceio`, `America/Bahia`, `America/Sao_Paulo`, `America/Campo_Grande`, `America/Cuiaba`, `America/Santarem`, `America/Porto_Velho`, `America/Boa_Vista`, `America/Manaus`, `America/Eirunepe`, `America/Rio_Branco`, `America/Nassau`, `Asia/Thimphu`, `Africa/Gaborone`, `Europe/Minsk`, `America/Belize`, `America/St_Johns`, `America/Halifax`, `America/Glace_Bay`, `America/Moncton`, `America/Goose_Bay`, `America/Blanc-Sablon`, `America/Toronto`, `America/Nipigon`, `America/Thunder_Bay`, `America/Iqaluit`, `America/Pangnirtung`, `America/Resolute`, `America/Atikokan`, `America/Rankin_Inlet`, `America/Winnipeg`, `America/Rainy_River`, `America/Regina`, `America/Swift_Current`, `America/Edmonton`, `America/Cambridge_Bay`, `America/Yellowknife`, `America/Inuvik`, `America/Creston`, `America/Dawson_Creek`, `America/Vancouver`, `America/Whitehorse`, `America/Dawson`, `Indian/Cocos`, `Africa/Kinshasa`, `Africa/Lubumbashi`, `Africa/Bangui`, `Africa/Brazzaville`, `Europe/Zurich`, `Africa/Abidjan`, `Pacific/Rarotonga`, `America/Santiago`, `Pacific/Easter`, `Africa/Douala`, `Asia/Shanghai`, `Asia/Harbin`, `Asia/Chongqing`, `Asia/Urumqi`, `Asia/Kashgar`, `America/Bogota`, `America/Costa_Rica`, `America/Havana`, `Atlantic/Cape_Verde`, `America/Curacao`, `Indian/Christmas`, `Asia/Nicosia`, `Europe/Prague`, `Europe/Berlin`, `Europe/Busingen`, `Africa/Djibouti`, `Europe/Copenhagen`, `America/Dominica`, `America/Santo_Domingo`, `Africa/Algiers`, `America/Guayaquil`, `Pacific/Galapagos`, `Europe/Tallinn`, `Africa/Cairo`, `Africa/El_Aaiun`, `Africa/Asmara`, `Europe/Madrid`, `Africa/Ceuta`, `Atlantic/Canary`, `Africa/Addis_Ababa`, `Europe/Helsinki`, `Pacific/Fiji`, `Atlantic/Stanley`, `Pacific/Chuuk`, `Pacific/Pohnpei`, `Pacific/Kosrae`, `Atlantic/Faroe`, `Europe/Paris`, `Africa/Libreville`, `Europe/London`, `America/Grenada`, `Asia/Tbilisi`, `America/Cayenne`, `Europe/Guernsey`, `Africa/Accra`, `Europe/Gibraltar`, `America/Godthab`, `America/Danmarkshavn`, `America/Scoresbysund`, `America/Thule`, `Africa/Banjul`, `Africa/Conakry`, `America/Guadeloupe`, `Africa/Malabo`, `Europe/Athens`, `Atlantic/South_Georgia`, `America/Guatemala`, `Pacific/Guam`, `Africa/Bissau`, `America/Guyana`, `Asia/Hong_Kong`, `America/Tegucigalpa`, `Europe/Zagreb`, `America/Port-au-Prince`, `Europe/Budapest`, `Asia/Jakarta`, `Asia/Pontianak`, `Asia/Makassar`, `Asia/Jayapura`, `Europe/Dublin`, `Asia/Jerusalem`, `Europe/Isle_of_Man`, `Asia/Kolkata`, `Indian/Chagos`, `Asia/Baghdad`, `Asia/Tehran`, `Atlantic/Reykjavik`, `Europe/Rome`, `Europe/Jersey`, `America/Jamaica`, `Asia/Amman`, `Asia/Tokyo`, `Africa/Nairobi`, `Asia/Bishkek`, `Asia/Phnom_Penh`, `Pacific/Tarawa`, `Pacific/Enderbury`, `Pacific/Kiritimati`, `Indian/Comoro`, `America/St_Kitts`, `Asia/Pyongyang`, `Asia/Seoul`, `Asia/Kuwait`, `America/Cayman`, `Asia/Almaty`, `Asia/Qyzylorda`, `Asia/Aqtobe`, `Asia/Aqtau`, `Asia/Oral`, `Asia/Vientiane`, `Asia/Beirut`, `America/St_Lucia`, `Europe/Vaduz`, `Asia/Colombo`, `Africa/Monrovia`, `Africa/Maseru`, `Europe/Vilnius`, `Europe/Luxembourg`, `Europe/Riga`, `Africa/Tripoli`, `Africa/Casablanca`, `Europe/Monaco`, `Europe/Chisinau`, `Europe/Podgorica`, `America/Marigot`, `Indian/Antananarivo`, `Pacific/Majuro`, `Pacific/Kwajalein`, `Europe/Skopje`, `Africa/Bamako`, `Asia/Rangoon`, `Asia/Ulaanbaatar`, `Asia/Hovd`, `Asia/Choibalsan`, `Asia/Macau`, `Pacific/Saipan`, `America/Martinique`, `Africa/Nouakchott`, `America/Montserrat`, `Europe/Malta`, `Indian/Mauritius`, `Indian/Maldives`, `Africa/Blantyre`, `America/Mexico_City`, `America/Cancun`, `America/Merida`, `America/Monterrey`, `America/Matamoros`, `America/Mazatlan`, `America/Chihuahua`, `America/Ojinaga`, `America/Hermosillo`, `America/Tijuana`, `America/Santa_Isabel`, `America/Bahia_Banderas`, `Asia/Kuala_Lumpur`, `Asia/Kuching`, `Africa/Maputo`, `Africa/Windhoek`, `Pacific/Noumea`, `Africa/Niamey`, `Pacific/Norfolk`, `Africa/Lagos`, `America/Managua`, `Europe/Amsterdam`, `Europe/Oslo`, `Asia/Kathmandu`, `Pacific/Nauru`, `Pacific/Niue`, `Pacific/Auckland`, `Pacific/Chatham`, `Asia/Muscat`, `America/Panama`, `America/Lima`, `Pacific/Tahiti`, `Pacific/Marquesas`, `Pacific/Gambier`, `Pacific/Port_Moresby`, `Asia/Manila`, `Asia/Karachi`, `Europe/Warsaw`, `America/Miquelon`, `Pacific/Pitcairn`, `America/Puerto_Rico`, `Asia/Gaza`, `Asia/Hebron`, `Europe/Lisbon`, `Atlantic/Madeira`, `Atlantic/Azores`, `Pacific/Palau`, `America/Asuncion`, `Asia/Qatar`, `Indian/Reunion`, `Europe/Bucharest`, `Europe/Belgrade`, `Europe/Kaliningrad`, `Europe/Moscow`, `Europe/Volgograd`, `Europe/Samara`, `Asia/Yekaterinburg`, `Asia/Omsk`, `Asia/Novosibirsk`, `Asia/Novokuznetsk`, `Asia/Krasnoyarsk`, `Asia/Irkutsk`, `Asia/Yakutsk`, `Asia/Khandyga`, `Asia/Vladivostok`, `Asia/Sakhalin`, `Asia/Ust-Nera`, `Asia/Magadan`, `Asia/Kamchatka`, `Asia/Anadyr`, `Africa/Kigali`, `Asia/Riyadh`, `Pacific/Guadalcanal`, `Indian/Mahe`, `Africa/Khartoum`, `Europe/Stockholm`, `Asia/Singapore`, `Atlantic/St_Helena`, `Europe/Ljubljana`, `Arctic/Longyearbyen`, `Europe/Bratislava`, `Africa/Freetown`, `Europe/San_Marino`, `Africa/Dakar`, `Africa/Mogadishu`, `America/Paramaribo`, `Africa/Juba`, `Africa/Sao_Tome`, `America/El_Salvador`, `America/Lower_Princes`, `Asia/Damascus`, `Africa/Mbabane`, `America/Grand_Turk`, `Africa/Ndjamena`, `Indian/Kerguelen`, `Africa/Lome`, `Asia/Bangkok`, `Asia/Dushanbe`, `Pacific/Fakaofo`, `Asia/Dili`, `Asia/Ashgabat`, `Africa/Tunis`, `Pacific/Tongatapu`, `Europe/Istanbul`, `America/Port_of_Spain`, `Pacific/Funafuti`, `Asia/Taipei`, `Africa/Dar_es_Salaam`, `Europe/Kiev`, `Europe/Uzhgorod`, `Europe/Zaporozhye`, `Europe/Simferopol`, `Africa/Kampala`, `Pacific/Johnston`, `Pacific/Midway`, `Pacific/Wake`, `America/New_York`, `America/Detroit`, `America/Kentucky/Louisville`, `America/Kentucky/Monticello`, `America/Indiana/Indianapolis`, `America/Indiana/Vincennes`, `America/Indiana/Winamac`, `America/Indiana/Marengo`, `America/Indiana/Petersburg`, `America/Indiana/Vevay`, `America/Chicago`, `America/Indiana/Tell_City`, `America/Indiana/Knox`, `America/Menominee`, `America/North_Dakota/Center`, `America/North_Dakota/New_Salem`, `America/North_Dakota/Beulah`, `America/Denver`, `America/Boise`, `America/Phoenix`, `America/Los_Angeles`, `America/Anchorage`, `America/Juneau`, `America/Sitka`, `America/Yakutat`, `America/Nome`, `America/Adak`, `America/Metlakatla`, `Pacific/Honolulu`, `America/Montevideo`, `Asia/Samarkand`, `Asia/Tashkent`, `Europe/Vatican`, `America/St_Vincent`, `America/Caracas`, `America/Tortola`, `America/St_Thomas`, `Asia/Ho_Chi_Minh`, `Pacific/Efate`, `Pacific/Wallis`, `Pacific/Apia`, `Asia/Aden`, `Indian/Mayotte`, `Africa/Johannesburg`, `Africa/Lusaka`, `Africa/Harare`, `UTC`
        ///   - Default value: `UTC`
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("timezoneVariable")]
        public Input<string>? TimezoneVariable { get; set; }

        /// <summary>
        /// Enable or disable default gateway tracking
        ///   - Default value: `true`
        /// </summary>
        [Input("trackDefaultGateway")]
        public Input<bool>? TrackDefaultGateway { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("trackDefaultGatewayVariable")]
        public Input<string>? TrackDefaultGatewayVariable { get; set; }

        /// <summary>
        /// OMP Tag attached to routes based on interface tracking
        ///   - Range: `1`-`4294967295`
        /// </summary>
        [Input("trackInterfaceTag")]
        public Input<int>? TrackInterfaceTag { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("trackInterfaceTagVariable")]
        public Input<string>? TrackInterfaceTagVariable { get; set; }

        /// <summary>
        /// Configure tracking of transport
        ///   - Default value: `true`
        /// </summary>
        [Input("trackTransport")]
        public Input<bool>? TrackTransport { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("trackTransportVariable")]
        public Input<string>? TrackTransportVariable { get; set; }

        [Input("trackers")]
        private InputList<Inputs.CiscoSystemFeatureTemplateTrackerArgs>? _trackers;

        /// <summary>
        /// Tracker configuration
        /// </summary>
        public InputList<Inputs.CiscoSystemFeatureTemplateTrackerArgs> Trackers
        {
            get => _trackers ?? (_trackers = new InputList<Inputs.CiscoSystemFeatureTemplateTrackerArgs>());
            set => _trackers = value;
        }

        /// <summary>
        /// Enable transport gateway
        ///   - Default value: `false`
        /// </summary>
        [Input("transportGateway")]
        public Input<bool>? TransportGateway { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("transportGatewayVariable")]
        public Input<string>? TransportGatewayVariable { get; set; }

        public CiscoSystemFeatureTemplateArgs()
        {
        }
        public static new CiscoSystemFeatureTemplateArgs Empty => new CiscoSystemFeatureTemplateArgs();
    }

    public sealed class CiscoSystemFeatureTemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Collect admin-tech before reboot due to daemon failure
        ///   - Default value: `true`
        /// </summary>
        [Input("adminTechOnFailure")]
        public Input<bool>? AdminTechOnFailure { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("adminTechOnFailureVariable")]
        public Input<string>? AdminTechOnFailureVariable { get; set; }

        /// <summary>
        /// Set the affinity group number for router
        ///   - Range: `1`-`255`
        /// </summary>
        [Input("affinityGroupNumber")]
        public Input<int>? AffinityGroupNumber { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("affinityGroupNumberVariable")]
        public Input<string>? AffinityGroupNumberVariable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("affinityGroupPreferenceVariable")]
        public Input<string>? AffinityGroupPreferenceVariable { get; set; }

        [Input("affinityGroupPreferences")]
        private InputList<int>? _affinityGroupPreferences;

        /// <summary>
        /// Set the affinity group preference
        /// </summary>
        public InputList<int> AffinityGroupPreferences
        {
            get => _affinityGroupPreferences ?? (_affinityGroupPreferences = new InputList<int>());
            set => _affinityGroupPreferences = value;
        }

        /// <summary>
        /// Set the console baud rate
        ///   - Choices: `1200`, `2400`, `4800`, `9600`, `19200`, `38400`, `57600`, `115200`
        ///   - Default value: `9600`
        /// </summary>
        [Input("consoleBaudRate")]
        public Input<string>? ConsoleBaudRate { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("consoleBaudRateVariable")]
        public Input<string>? ConsoleBaudRateVariable { get; set; }

        /// <summary>
        /// Set the policer rate for control sessions
        ///   - Range: `1`-`65535`
        ///   - Default value: `300`
        /// </summary>
        [Input("controlSessionPps")]
        public Input<int>? ControlSessionPps { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("controlSessionPpsVariable")]
        public Input<string>? ControlSessionPpsVariable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("controllerGroupListVariable")]
        public Input<string>? ControllerGroupListVariable { get; set; }

        [Input("controllerGroupLists")]
        private InputList<int>? _controllerGroupLists;

        /// <summary>
        /// Configure a list of comma-separated device groups
        /// </summary>
        public InputList<int> ControllerGroupLists
        {
            get => _controllerGroupLists ?? (_controllerGroupLists = new InputList<int>());
            set => _controllerGroupLists = value;
        }

        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("deviceGroups")]
        private InputList<string>? _deviceGroups;

        /// <summary>
        /// Device groups (Use comma(,) for multiple groups)
        /// </summary>
        public InputList<string> DeviceGroups
        {
            get => _deviceGroups ?? (_deviceGroups = new InputList<string>());
            set => _deviceGroups = value;
        }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("deviceGroupsVariable")]
        public Input<string>? DeviceGroupsVariable { get; set; }

        [Input("deviceTypes")]
        private InputList<string>? _deviceTypes;

        /// <summary>
        /// List of supported device types
        ///   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        public InputList<string> DeviceTypes
        {
            get => _deviceTypes ?? (_deviceTypes = new InputList<string>());
            set => _deviceTypes = value;
        }

        /// <summary>
        /// Enable migration mode to Multi-Region Fabric
        ///   - Choices: `enabled`, `enabled-from-bgp-core`
        /// </summary>
        [Input("enableMrfMigration")]
        public Input<string>? EnableMrfMigration { get; set; }

        /// <summary>
        /// Enhanced App Aware Routing
        ///   - Choices: `disabled`, `aggressive`, `moderate`, `conservative`
        ///   - Default value: `disabled`
        /// </summary>
        [Input("enhancedAppAwareRouting")]
        public Input<string>? EnhancedAppAwareRouting { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("enhancedAppAwareRoutingVariable")]
        public Input<string>? EnhancedAppAwareRoutingVariable { get; set; }

        /// <summary>
        /// Enable Geo fencing
        ///   - Default value: `false`
        /// </summary>
        [Input("geoFencing")]
        public Input<bool>? GeoFencing { get; set; }

        /// <summary>
        /// Set the device’s geo fencing range
        ///   - Range: `100`-`10000`
        ///   - Default value: `100`
        /// </summary>
        [Input("geoFencingRange")]
        public Input<int>? GeoFencingRange { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("geoFencingRangeVariable")]
        public Input<string>? GeoFencingRangeVariable { get; set; }

        /// <summary>
        /// Enable Geo fencing
        ///   - Default value: `false`
        /// </summary>
        [Input("geoFencingSms")]
        public Input<bool>? GeoFencingSms { get; set; }

        [Input("geoFencingSmsPhoneNumbers")]
        private InputList<Inputs.CiscoSystemFeatureTemplateGeoFencingSmsPhoneNumberGetArgs>? _geoFencingSmsPhoneNumbers;

        /// <summary>
        /// Set device’s geo fencing SMS phone number
        /// </summary>
        public InputList<Inputs.CiscoSystemFeatureTemplateGeoFencingSmsPhoneNumberGetArgs> GeoFencingSmsPhoneNumbers
        {
            get => _geoFencingSmsPhoneNumbers ?? (_geoFencingSmsPhoneNumbers = new InputList<Inputs.CiscoSystemFeatureTemplateGeoFencingSmsPhoneNumberGetArgs>());
            set => _geoFencingSmsPhoneNumbers = value;
        }

        /// <summary>
        /// Set the hostname
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("hostnameVariable")]
        public Input<string>? HostnameVariable { get; set; }

        /// <summary>
        /// Idle CLI timeout in minutes
        ///   - Range: `0`-`300`
        /// </summary>
        [Input("idleTimeout")]
        public Input<int>? IdleTimeout { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("idleTimeoutVariable")]
        public Input<string>? IdleTimeoutVariable { get; set; }

        /// <summary>
        /// Set the device’s physical latitude
        ///   - Range: `-90`-`90`
        /// </summary>
        [Input("latitude")]
        public Input<double>? Latitude { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("latitudeVariable")]
        public Input<string>? LatitudeVariable { get; set; }

        /// <summary>
        /// Set the location of the device
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("locationVariable")]
        public Input<string>? LocationVariable { get; set; }

        /// <summary>
        /// Set the device’s physical longitude
        ///   - Range: `-180`-`180`
        /// </summary>
        [Input("longitude")]
        public Input<double>? Longitude { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("longitudeVariable")]
        public Input<string>? LongitudeVariable { get; set; }

        /// <summary>
        /// Set the maximum number of OMP sessions &lt;1..100&gt; the device can have
        ///   - Range: `1`-`100`
        /// </summary>
        [Input("maxOmpSessions")]
        public Input<int>? MaxOmpSessions { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("maxOmpSessionsVariable")]
        public Input<string>? MaxOmpSessionsVariable { get; set; }

        /// <summary>
        /// Set BGP community during migration from BGP-core based network
        ///   - Range: `1`-`4294967295`
        /// </summary>
        [Input("migrationBgpCommunity")]
        public Input<int>? MigrationBgpCommunity { get; set; }

        /// <summary>
        /// Device is multi-tenant
        ///   - Default value: `false`
        /// </summary>
        [Input("multiTenant")]
        public Input<bool>? MultiTenant { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("multiTenantVariable")]
        public Input<string>? MultiTenantVariable { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("objectTrackers")]
        private InputList<Inputs.CiscoSystemFeatureTemplateObjectTrackerGetArgs>? _objectTrackers;

        /// <summary>
        /// Object Track configuration
        /// </summary>
        public InputList<Inputs.CiscoSystemFeatureTemplateObjectTrackerGetArgs> ObjectTrackers
        {
            get => _objectTrackers ?? (_objectTrackers = new InputList<Inputs.CiscoSystemFeatureTemplateObjectTrackerGetArgs>());
            set => _objectTrackers = value;
        }

        /// <summary>
        /// Enable or disable On-demand Tunnel
        ///   - Default value: `false`
        /// </summary>
        [Input("onDemandTunnel")]
        public Input<bool>? OnDemandTunnel { get; set; }

        /// <summary>
        /// Idle CLI timeout in minutes
        ///   - Range: `0`-`300`
        /// </summary>
        [Input("onDemandTunnelIdleTimeout")]
        public Input<int>? OnDemandTunnelIdleTimeout { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("onDemandTunnelIdleTimeoutVariable")]
        public Input<string>? OnDemandTunnelIdleTimeoutVariable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("onDemandTunnelVariable")]
        public Input<string>? OnDemandTunnelVariable { get; set; }

        /// <summary>
        /// Set the Overlay ID
        ///   - Range: `1`-`4294967295`
        ///   - Default value: `1`
        /// </summary>
        [Input("overlayId")]
        public Input<int>? OverlayId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("overlayIdVariable")]
        public Input<string>? OverlayIdVariable { get; set; }

        /// <summary>
        /// Enable port hopping
        ///   - Default value: `true`
        /// </summary>
        [Input("portHopping")]
        public Input<bool>? PortHopping { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("portHoppingVariable")]
        public Input<string>? PortHoppingVariable { get; set; }

        /// <summary>
        /// Set the TLOC port offset when multiple devices are behind a NAT
        ///   - Range: `0`-`19`
        ///   - Default value: `0`
        /// </summary>
        [Input("portOffset")]
        public Input<int>? PortOffset { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("portOffsetVariable")]
        public Input<string>? PortOffsetVariable { get; set; }

        /// <summary>
        /// Set region ID
        ///   - Range: `1`-`63`
        /// </summary>
        [Input("regionId")]
        public Input<int>? RegionId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("regionIdVariable")]
        public Input<string>? RegionIdVariable { get; set; }

        /// <summary>
        /// Set the role for router
        ///   - Choices: `edge-router`, `border-router`
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("roleVariable")]
        public Input<string>? RoleVariable { get; set; }

        /// <summary>
        /// Set secondary region ID
        ///   - Range: `1`-`63`
        /// </summary>
        [Input("secondaryRegionId")]
        public Input<int>? SecondaryRegionId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("secondaryRegionIdVariable")]
        public Input<string>? SecondaryRegionIdVariable { get; set; }

        /// <summary>
        /// Set the site identifier
        ///   - Range: `1`-`4294967295`
        /// </summary>
        [Input("siteId")]
        public Input<int>? SiteId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("siteIdVariable")]
        public Input<string>? SiteIdVariable { get; set; }

        /// <summary>
        /// Set a text description of the device
        /// </summary>
        [Input("systemDescription")]
        public Input<string>? SystemDescription { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("systemDescriptionVariable")]
        public Input<string>? SystemDescriptionVariable { get; set; }

        /// <summary>
        /// Set the system IP address
        /// </summary>
        [Input("systemIp")]
        public Input<string>? SystemIp { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("systemIpVariable")]
        public Input<string>? SystemIpVariable { get; set; }

        /// <summary>
        /// The template type
        /// </summary>
        [Input("templateType")]
        public Input<string>? TemplateType { get; set; }

        /// <summary>
        /// Set the timezone
        ///   - Choices: `Europe/Andorra`, `Asia/Dubai`, `Asia/Kabul`, `America/Antigua`, `America/Anguilla`, `Europe/Tirane`, `Asia/Yerevan`, `Africa/Luanda`, `Antarctica/McMurdo`, `Antarctica/Rothera`, `Antarctica/Palmer`, `Antarctica/Mawson`, `Antarctica/Davis`, `Antarctica/Casey`, `Antarctica/Vostok`, `Antarctica/DumontDUrville`, `Antarctica/Syowa`, `America/Argentina/Buenos_Aires`, `America/Argentina/Cordoba`, `America/Argentina/Salta`, `America/Argentina/Jujuy`, `America/Argentina/Tucuman`, `America/Argentina/Catamarca`, `America/Argentina/La_Rioja`, `America/Argentina/San_Juan`, `America/Argentina/Mendoza`, `America/Argentina/San_Luis`, `America/Argentina/Rio_Gallegos`, `America/Argentina/Ushuaia`, `Pacific/Pago_Pago`, `Europe/Vienna`, `Australia/Lord_Howe`, `Antarctica/Macquarie`, `Australia/Hobart`, `Australia/Currie`, `Australia/Melbourne`, `Australia/Sydney`, `Australia/Broken_Hill`, `Australia/Brisbane`, `Australia/Lindeman`, `Australia/Adelaide`, `Australia/Darwin`, `Australia/Perth`, `Australia/Eucla`, `America/Aruba`, `Europe/Mariehamn`, `Asia/Baku`, `Europe/Sarajevo`, `America/Barbados`, `Asia/Dhaka`, `Europe/Brussels`, `Africa/Ouagadougou`, `Europe/Sofia`, `Asia/Bahrain`, `Africa/Bujumbura`, `Africa/Porto-Novo`, `America/St_Barthelemy`, `Atlantic/Bermuda`, `Asia/Brunei`, `America/La_Paz`, `America/Kralendijk`, `America/Noronha`, `America/Belem`, `America/Fortaleza`, `America/Recife`, `America/Araguaina`, `America/Maceio`, `America/Bahia`, `America/Sao_Paulo`, `America/Campo_Grande`, `America/Cuiaba`, `America/Santarem`, `America/Porto_Velho`, `America/Boa_Vista`, `America/Manaus`, `America/Eirunepe`, `America/Rio_Branco`, `America/Nassau`, `Asia/Thimphu`, `Africa/Gaborone`, `Europe/Minsk`, `America/Belize`, `America/St_Johns`, `America/Halifax`, `America/Glace_Bay`, `America/Moncton`, `America/Goose_Bay`, `America/Blanc-Sablon`, `America/Toronto`, `America/Nipigon`, `America/Thunder_Bay`, `America/Iqaluit`, `America/Pangnirtung`, `America/Resolute`, `America/Atikokan`, `America/Rankin_Inlet`, `America/Winnipeg`, `America/Rainy_River`, `America/Regina`, `America/Swift_Current`, `America/Edmonton`, `America/Cambridge_Bay`, `America/Yellowknife`, `America/Inuvik`, `America/Creston`, `America/Dawson_Creek`, `America/Vancouver`, `America/Whitehorse`, `America/Dawson`, `Indian/Cocos`, `Africa/Kinshasa`, `Africa/Lubumbashi`, `Africa/Bangui`, `Africa/Brazzaville`, `Europe/Zurich`, `Africa/Abidjan`, `Pacific/Rarotonga`, `America/Santiago`, `Pacific/Easter`, `Africa/Douala`, `Asia/Shanghai`, `Asia/Harbin`, `Asia/Chongqing`, `Asia/Urumqi`, `Asia/Kashgar`, `America/Bogota`, `America/Costa_Rica`, `America/Havana`, `Atlantic/Cape_Verde`, `America/Curacao`, `Indian/Christmas`, `Asia/Nicosia`, `Europe/Prague`, `Europe/Berlin`, `Europe/Busingen`, `Africa/Djibouti`, `Europe/Copenhagen`, `America/Dominica`, `America/Santo_Domingo`, `Africa/Algiers`, `America/Guayaquil`, `Pacific/Galapagos`, `Europe/Tallinn`, `Africa/Cairo`, `Africa/El_Aaiun`, `Africa/Asmara`, `Europe/Madrid`, `Africa/Ceuta`, `Atlantic/Canary`, `Africa/Addis_Ababa`, `Europe/Helsinki`, `Pacific/Fiji`, `Atlantic/Stanley`, `Pacific/Chuuk`, `Pacific/Pohnpei`, `Pacific/Kosrae`, `Atlantic/Faroe`, `Europe/Paris`, `Africa/Libreville`, `Europe/London`, `America/Grenada`, `Asia/Tbilisi`, `America/Cayenne`, `Europe/Guernsey`, `Africa/Accra`, `Europe/Gibraltar`, `America/Godthab`, `America/Danmarkshavn`, `America/Scoresbysund`, `America/Thule`, `Africa/Banjul`, `Africa/Conakry`, `America/Guadeloupe`, `Africa/Malabo`, `Europe/Athens`, `Atlantic/South_Georgia`, `America/Guatemala`, `Pacific/Guam`, `Africa/Bissau`, `America/Guyana`, `Asia/Hong_Kong`, `America/Tegucigalpa`, `Europe/Zagreb`, `America/Port-au-Prince`, `Europe/Budapest`, `Asia/Jakarta`, `Asia/Pontianak`, `Asia/Makassar`, `Asia/Jayapura`, `Europe/Dublin`, `Asia/Jerusalem`, `Europe/Isle_of_Man`, `Asia/Kolkata`, `Indian/Chagos`, `Asia/Baghdad`, `Asia/Tehran`, `Atlantic/Reykjavik`, `Europe/Rome`, `Europe/Jersey`, `America/Jamaica`, `Asia/Amman`, `Asia/Tokyo`, `Africa/Nairobi`, `Asia/Bishkek`, `Asia/Phnom_Penh`, `Pacific/Tarawa`, `Pacific/Enderbury`, `Pacific/Kiritimati`, `Indian/Comoro`, `America/St_Kitts`, `Asia/Pyongyang`, `Asia/Seoul`, `Asia/Kuwait`, `America/Cayman`, `Asia/Almaty`, `Asia/Qyzylorda`, `Asia/Aqtobe`, `Asia/Aqtau`, `Asia/Oral`, `Asia/Vientiane`, `Asia/Beirut`, `America/St_Lucia`, `Europe/Vaduz`, `Asia/Colombo`, `Africa/Monrovia`, `Africa/Maseru`, `Europe/Vilnius`, `Europe/Luxembourg`, `Europe/Riga`, `Africa/Tripoli`, `Africa/Casablanca`, `Europe/Monaco`, `Europe/Chisinau`, `Europe/Podgorica`, `America/Marigot`, `Indian/Antananarivo`, `Pacific/Majuro`, `Pacific/Kwajalein`, `Europe/Skopje`, `Africa/Bamako`, `Asia/Rangoon`, `Asia/Ulaanbaatar`, `Asia/Hovd`, `Asia/Choibalsan`, `Asia/Macau`, `Pacific/Saipan`, `America/Martinique`, `Africa/Nouakchott`, `America/Montserrat`, `Europe/Malta`, `Indian/Mauritius`, `Indian/Maldives`, `Africa/Blantyre`, `America/Mexico_City`, `America/Cancun`, `America/Merida`, `America/Monterrey`, `America/Matamoros`, `America/Mazatlan`, `America/Chihuahua`, `America/Ojinaga`, `America/Hermosillo`, `America/Tijuana`, `America/Santa_Isabel`, `America/Bahia_Banderas`, `Asia/Kuala_Lumpur`, `Asia/Kuching`, `Africa/Maputo`, `Africa/Windhoek`, `Pacific/Noumea`, `Africa/Niamey`, `Pacific/Norfolk`, `Africa/Lagos`, `America/Managua`, `Europe/Amsterdam`, `Europe/Oslo`, `Asia/Kathmandu`, `Pacific/Nauru`, `Pacific/Niue`, `Pacific/Auckland`, `Pacific/Chatham`, `Asia/Muscat`, `America/Panama`, `America/Lima`, `Pacific/Tahiti`, `Pacific/Marquesas`, `Pacific/Gambier`, `Pacific/Port_Moresby`, `Asia/Manila`, `Asia/Karachi`, `Europe/Warsaw`, `America/Miquelon`, `Pacific/Pitcairn`, `America/Puerto_Rico`, `Asia/Gaza`, `Asia/Hebron`, `Europe/Lisbon`, `Atlantic/Madeira`, `Atlantic/Azores`, `Pacific/Palau`, `America/Asuncion`, `Asia/Qatar`, `Indian/Reunion`, `Europe/Bucharest`, `Europe/Belgrade`, `Europe/Kaliningrad`, `Europe/Moscow`, `Europe/Volgograd`, `Europe/Samara`, `Asia/Yekaterinburg`, `Asia/Omsk`, `Asia/Novosibirsk`, `Asia/Novokuznetsk`, `Asia/Krasnoyarsk`, `Asia/Irkutsk`, `Asia/Yakutsk`, `Asia/Khandyga`, `Asia/Vladivostok`, `Asia/Sakhalin`, `Asia/Ust-Nera`, `Asia/Magadan`, `Asia/Kamchatka`, `Asia/Anadyr`, `Africa/Kigali`, `Asia/Riyadh`, `Pacific/Guadalcanal`, `Indian/Mahe`, `Africa/Khartoum`, `Europe/Stockholm`, `Asia/Singapore`, `Atlantic/St_Helena`, `Europe/Ljubljana`, `Arctic/Longyearbyen`, `Europe/Bratislava`, `Africa/Freetown`, `Europe/San_Marino`, `Africa/Dakar`, `Africa/Mogadishu`, `America/Paramaribo`, `Africa/Juba`, `Africa/Sao_Tome`, `America/El_Salvador`, `America/Lower_Princes`, `Asia/Damascus`, `Africa/Mbabane`, `America/Grand_Turk`, `Africa/Ndjamena`, `Indian/Kerguelen`, `Africa/Lome`, `Asia/Bangkok`, `Asia/Dushanbe`, `Pacific/Fakaofo`, `Asia/Dili`, `Asia/Ashgabat`, `Africa/Tunis`, `Pacific/Tongatapu`, `Europe/Istanbul`, `America/Port_of_Spain`, `Pacific/Funafuti`, `Asia/Taipei`, `Africa/Dar_es_Salaam`, `Europe/Kiev`, `Europe/Uzhgorod`, `Europe/Zaporozhye`, `Europe/Simferopol`, `Africa/Kampala`, `Pacific/Johnston`, `Pacific/Midway`, `Pacific/Wake`, `America/New_York`, `America/Detroit`, `America/Kentucky/Louisville`, `America/Kentucky/Monticello`, `America/Indiana/Indianapolis`, `America/Indiana/Vincennes`, `America/Indiana/Winamac`, `America/Indiana/Marengo`, `America/Indiana/Petersburg`, `America/Indiana/Vevay`, `America/Chicago`, `America/Indiana/Tell_City`, `America/Indiana/Knox`, `America/Menominee`, `America/North_Dakota/Center`, `America/North_Dakota/New_Salem`, `America/North_Dakota/Beulah`, `America/Denver`, `America/Boise`, `America/Phoenix`, `America/Los_Angeles`, `America/Anchorage`, `America/Juneau`, `America/Sitka`, `America/Yakutat`, `America/Nome`, `America/Adak`, `America/Metlakatla`, `Pacific/Honolulu`, `America/Montevideo`, `Asia/Samarkand`, `Asia/Tashkent`, `Europe/Vatican`, `America/St_Vincent`, `America/Caracas`, `America/Tortola`, `America/St_Thomas`, `Asia/Ho_Chi_Minh`, `Pacific/Efate`, `Pacific/Wallis`, `Pacific/Apia`, `Asia/Aden`, `Indian/Mayotte`, `Africa/Johannesburg`, `Africa/Lusaka`, `Africa/Harare`, `UTC`
        ///   - Default value: `UTC`
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("timezoneVariable")]
        public Input<string>? TimezoneVariable { get; set; }

        /// <summary>
        /// Enable or disable default gateway tracking
        ///   - Default value: `true`
        /// </summary>
        [Input("trackDefaultGateway")]
        public Input<bool>? TrackDefaultGateway { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("trackDefaultGatewayVariable")]
        public Input<string>? TrackDefaultGatewayVariable { get; set; }

        /// <summary>
        /// OMP Tag attached to routes based on interface tracking
        ///   - Range: `1`-`4294967295`
        /// </summary>
        [Input("trackInterfaceTag")]
        public Input<int>? TrackInterfaceTag { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("trackInterfaceTagVariable")]
        public Input<string>? TrackInterfaceTagVariable { get; set; }

        /// <summary>
        /// Configure tracking of transport
        ///   - Default value: `true`
        /// </summary>
        [Input("trackTransport")]
        public Input<bool>? TrackTransport { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("trackTransportVariable")]
        public Input<string>? TrackTransportVariable { get; set; }

        [Input("trackers")]
        private InputList<Inputs.CiscoSystemFeatureTemplateTrackerGetArgs>? _trackers;

        /// <summary>
        /// Tracker configuration
        /// </summary>
        public InputList<Inputs.CiscoSystemFeatureTemplateTrackerGetArgs> Trackers
        {
            get => _trackers ?? (_trackers = new InputList<Inputs.CiscoSystemFeatureTemplateTrackerGetArgs>());
            set => _trackers = value;
        }

        /// <summary>
        /// Enable transport gateway
        ///   - Default value: `false`
        /// </summary>
        [Input("transportGateway")]
        public Input<bool>? TransportGateway { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("transportGatewayVariable")]
        public Input<string>? TransportGatewayVariable { get; set; }

        /// <summary>
        /// The version of the feature template
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public CiscoSystemFeatureTemplateState()
        {
        }
        public static new CiscoSystemFeatureTemplateState Empty => new CiscoSystemFeatureTemplateState();
    }
}
