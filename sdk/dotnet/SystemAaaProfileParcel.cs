// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a System AAA profile parcel.
    ///   - Minimum SD-WAN Manager version: `20.12.0`
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/systemAaaProfileParcel:SystemAaaProfileParcel example "f6b2c44c-693c-4763-b010-895aa3d236bd"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/systemAaaProfileParcel:SystemAaaProfileParcel")]
    public partial class SystemAaaProfileParcel : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Accounting configurations parameters - Default value: `false`
        /// </summary>
        [Output("accountingGroup")]
        public Output<bool?> AccountingGroup { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("accountingGroupVariable")]
        public Output<string?> AccountingGroupVariable { get; private set; } = null!;

        /// <summary>
        /// Configure the accounting rules
        /// </summary>
        [Output("accountingRules")]
        public Output<ImmutableArray<Outputs.SystemAaaProfileParcelAccountingRule>> AccountingRules { get; private set; } = null!;

        /// <summary>
        /// Authentication configurations parameters - Default value: `false`
        /// </summary>
        [Output("authenticationGroup")]
        public Output<bool?> AuthenticationGroup { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("authenticationGroupVariable")]
        public Output<string?> AuthenticationGroupVariable { get; private set; } = null!;

        /// <summary>
        /// For configuration mode commands. - Default value: `false`
        /// </summary>
        [Output("authorizationConfigCommands")]
        public Output<bool?> AuthorizationConfigCommands { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("authorizationConfigCommandsVariable")]
        public Output<string?> AuthorizationConfigCommandsVariable { get; private set; } = null!;

        /// <summary>
        /// For enabling console authorization - Default value: `false`
        /// </summary>
        [Output("authorizationConsole")]
        public Output<bool?> AuthorizationConsole { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("authorizationConsoleVariable")]
        public Output<string?> AuthorizationConsoleVariable { get; private set; } = null!;

        /// <summary>
        /// Configure the Authorization Rules
        /// </summary>
        [Output("authorizationRules")]
        public Output<ImmutableArray<Outputs.SystemAaaProfileParcelAuthorizationRule>> AuthorizationRules { get; private set; } = null!;

        /// <summary>
        /// The description of the profile parcel
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Output("featureProfileId")]
        public Output<string> FeatureProfileId { get; private set; } = null!;

        /// <summary>
        /// The name of the profile parcel
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Configure the Radius serverGroup
        /// </summary>
        [Output("radiusGroups")]
        public Output<ImmutableArray<Outputs.SystemAaaProfileParcelRadiusGroup>> RadiusGroups { get; private set; } = null!;

        /// <summary>
        /// ServerGroups priority order
        /// </summary>
        [Output("serverAuthOrders")]
        public Output<ImmutableArray<string>> ServerAuthOrders { get; private set; } = null!;

        /// <summary>
        /// Configure the TACACS serverGroup
        /// </summary>
        [Output("tacacsGroups")]
        public Output<ImmutableArray<Outputs.SystemAaaProfileParcelTacacsGroup>> TacacsGroups { get; private set; } = null!;

        /// <summary>
        /// Create local login account
        /// </summary>
        [Output("users")]
        public Output<ImmutableArray<Outputs.SystemAaaProfileParcelUser>> Users { get; private set; } = null!;

        /// <summary>
        /// The version of the profile parcel
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a SystemAaaProfileParcel resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SystemAaaProfileParcel(string name, SystemAaaProfileParcelArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/systemAaaProfileParcel:SystemAaaProfileParcel", name, args ?? new SystemAaaProfileParcelArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SystemAaaProfileParcel(string name, Input<string> id, SystemAaaProfileParcelState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/systemAaaProfileParcel:SystemAaaProfileParcel", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SystemAaaProfileParcel resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SystemAaaProfileParcel Get(string name, Input<string> id, SystemAaaProfileParcelState? state = null, CustomResourceOptions? options = null)
        {
            return new SystemAaaProfileParcel(name, id, state, options);
        }
    }

    public sealed class SystemAaaProfileParcelArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Accounting configurations parameters - Default value: `false`
        /// </summary>
        [Input("accountingGroup")]
        public Input<bool>? AccountingGroup { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("accountingGroupVariable")]
        public Input<string>? AccountingGroupVariable { get; set; }

        [Input("accountingRules")]
        private InputList<Inputs.SystemAaaProfileParcelAccountingRuleArgs>? _accountingRules;

        /// <summary>
        /// Configure the accounting rules
        /// </summary>
        public InputList<Inputs.SystemAaaProfileParcelAccountingRuleArgs> AccountingRules
        {
            get => _accountingRules ?? (_accountingRules = new InputList<Inputs.SystemAaaProfileParcelAccountingRuleArgs>());
            set => _accountingRules = value;
        }

        /// <summary>
        /// Authentication configurations parameters - Default value: `false`
        /// </summary>
        [Input("authenticationGroup")]
        public Input<bool>? AuthenticationGroup { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("authenticationGroupVariable")]
        public Input<string>? AuthenticationGroupVariable { get; set; }

        /// <summary>
        /// For configuration mode commands. - Default value: `false`
        /// </summary>
        [Input("authorizationConfigCommands")]
        public Input<bool>? AuthorizationConfigCommands { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("authorizationConfigCommandsVariable")]
        public Input<string>? AuthorizationConfigCommandsVariable { get; set; }

        /// <summary>
        /// For enabling console authorization - Default value: `false`
        /// </summary>
        [Input("authorizationConsole")]
        public Input<bool>? AuthorizationConsole { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("authorizationConsoleVariable")]
        public Input<string>? AuthorizationConsoleVariable { get; set; }

        [Input("authorizationRules")]
        private InputList<Inputs.SystemAaaProfileParcelAuthorizationRuleArgs>? _authorizationRules;

        /// <summary>
        /// Configure the Authorization Rules
        /// </summary>
        public InputList<Inputs.SystemAaaProfileParcelAuthorizationRuleArgs> AuthorizationRules
        {
            get => _authorizationRules ?? (_authorizationRules = new InputList<Inputs.SystemAaaProfileParcelAuthorizationRuleArgs>());
            set => _authorizationRules = value;
        }

        /// <summary>
        /// The description of the profile parcel
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The name of the profile parcel
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("radiusGroups")]
        private InputList<Inputs.SystemAaaProfileParcelRadiusGroupArgs>? _radiusGroups;

        /// <summary>
        /// Configure the Radius serverGroup
        /// </summary>
        public InputList<Inputs.SystemAaaProfileParcelRadiusGroupArgs> RadiusGroups
        {
            get => _radiusGroups ?? (_radiusGroups = new InputList<Inputs.SystemAaaProfileParcelRadiusGroupArgs>());
            set => _radiusGroups = value;
        }

        [Input("serverAuthOrders", required: true)]
        private InputList<string>? _serverAuthOrders;

        /// <summary>
        /// ServerGroups priority order
        /// </summary>
        public InputList<string> ServerAuthOrders
        {
            get => _serverAuthOrders ?? (_serverAuthOrders = new InputList<string>());
            set => _serverAuthOrders = value;
        }

        [Input("tacacsGroups")]
        private InputList<Inputs.SystemAaaProfileParcelTacacsGroupArgs>? _tacacsGroups;

        /// <summary>
        /// Configure the TACACS serverGroup
        /// </summary>
        public InputList<Inputs.SystemAaaProfileParcelTacacsGroupArgs> TacacsGroups
        {
            get => _tacacsGroups ?? (_tacacsGroups = new InputList<Inputs.SystemAaaProfileParcelTacacsGroupArgs>());
            set => _tacacsGroups = value;
        }

        [Input("users")]
        private InputList<Inputs.SystemAaaProfileParcelUserArgs>? _users;

        /// <summary>
        /// Create local login account
        /// </summary>
        public InputList<Inputs.SystemAaaProfileParcelUserArgs> Users
        {
            get => _users ?? (_users = new InputList<Inputs.SystemAaaProfileParcelUserArgs>());
            set => _users = value;
        }

        public SystemAaaProfileParcelArgs()
        {
        }
        public static new SystemAaaProfileParcelArgs Empty => new SystemAaaProfileParcelArgs();
    }

    public sealed class SystemAaaProfileParcelState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Accounting configurations parameters - Default value: `false`
        /// </summary>
        [Input("accountingGroup")]
        public Input<bool>? AccountingGroup { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("accountingGroupVariable")]
        public Input<string>? AccountingGroupVariable { get; set; }

        [Input("accountingRules")]
        private InputList<Inputs.SystemAaaProfileParcelAccountingRuleGetArgs>? _accountingRules;

        /// <summary>
        /// Configure the accounting rules
        /// </summary>
        public InputList<Inputs.SystemAaaProfileParcelAccountingRuleGetArgs> AccountingRules
        {
            get => _accountingRules ?? (_accountingRules = new InputList<Inputs.SystemAaaProfileParcelAccountingRuleGetArgs>());
            set => _accountingRules = value;
        }

        /// <summary>
        /// Authentication configurations parameters - Default value: `false`
        /// </summary>
        [Input("authenticationGroup")]
        public Input<bool>? AuthenticationGroup { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("authenticationGroupVariable")]
        public Input<string>? AuthenticationGroupVariable { get; set; }

        /// <summary>
        /// For configuration mode commands. - Default value: `false`
        /// </summary>
        [Input("authorizationConfigCommands")]
        public Input<bool>? AuthorizationConfigCommands { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("authorizationConfigCommandsVariable")]
        public Input<string>? AuthorizationConfigCommandsVariable { get; set; }

        /// <summary>
        /// For enabling console authorization - Default value: `false`
        /// </summary>
        [Input("authorizationConsole")]
        public Input<bool>? AuthorizationConsole { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("authorizationConsoleVariable")]
        public Input<string>? AuthorizationConsoleVariable { get; set; }

        [Input("authorizationRules")]
        private InputList<Inputs.SystemAaaProfileParcelAuthorizationRuleGetArgs>? _authorizationRules;

        /// <summary>
        /// Configure the Authorization Rules
        /// </summary>
        public InputList<Inputs.SystemAaaProfileParcelAuthorizationRuleGetArgs> AuthorizationRules
        {
            get => _authorizationRules ?? (_authorizationRules = new InputList<Inputs.SystemAaaProfileParcelAuthorizationRuleGetArgs>());
            set => _authorizationRules = value;
        }

        /// <summary>
        /// The description of the profile parcel
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId")]
        public Input<string>? FeatureProfileId { get; set; }

        /// <summary>
        /// The name of the profile parcel
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("radiusGroups")]
        private InputList<Inputs.SystemAaaProfileParcelRadiusGroupGetArgs>? _radiusGroups;

        /// <summary>
        /// Configure the Radius serverGroup
        /// </summary>
        public InputList<Inputs.SystemAaaProfileParcelRadiusGroupGetArgs> RadiusGroups
        {
            get => _radiusGroups ?? (_radiusGroups = new InputList<Inputs.SystemAaaProfileParcelRadiusGroupGetArgs>());
            set => _radiusGroups = value;
        }

        [Input("serverAuthOrders")]
        private InputList<string>? _serverAuthOrders;

        /// <summary>
        /// ServerGroups priority order
        /// </summary>
        public InputList<string> ServerAuthOrders
        {
            get => _serverAuthOrders ?? (_serverAuthOrders = new InputList<string>());
            set => _serverAuthOrders = value;
        }

        [Input("tacacsGroups")]
        private InputList<Inputs.SystemAaaProfileParcelTacacsGroupGetArgs>? _tacacsGroups;

        /// <summary>
        /// Configure the TACACS serverGroup
        /// </summary>
        public InputList<Inputs.SystemAaaProfileParcelTacacsGroupGetArgs> TacacsGroups
        {
            get => _tacacsGroups ?? (_tacacsGroups = new InputList<Inputs.SystemAaaProfileParcelTacacsGroupGetArgs>());
            set => _tacacsGroups = value;
        }

        [Input("users")]
        private InputList<Inputs.SystemAaaProfileParcelUserGetArgs>? _users;

        /// <summary>
        /// Create local login account
        /// </summary>
        public InputList<Inputs.SystemAaaProfileParcelUserGetArgs> Users
        {
            get => _users ?? (_users = new InputList<Inputs.SystemAaaProfileParcelUserGetArgs>());
            set => _users = value;
        }

        /// <summary>
        /// The version of the profile parcel
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public SystemAaaProfileParcelState()
        {
        }
        public static new SystemAaaProfileParcelState Empty => new SystemAaaProfileParcelState();
    }
}
