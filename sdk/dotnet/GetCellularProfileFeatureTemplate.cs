// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetCellularProfileFeatureTemplate
    {
        /// <summary>
        /// This data source can read the Cellular Profile feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCellularProfileFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCellularProfileFeatureTemplateResult> InvokeAsync(GetCellularProfileFeatureTemplateArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCellularProfileFeatureTemplateResult>("sdwan:index/getCellularProfileFeatureTemplate:getCellularProfileFeatureTemplate", args ?? new GetCellularProfileFeatureTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Cellular Profile feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCellularProfileFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCellularProfileFeatureTemplateResult> Invoke(GetCellularProfileFeatureTemplateInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCellularProfileFeatureTemplateResult>("sdwan:index/getCellularProfileFeatureTemplate:getCellularProfileFeatureTemplate", args ?? new GetCellularProfileFeatureTemplateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Cellular Profile feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCellularProfileFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCellularProfileFeatureTemplateResult> Invoke(GetCellularProfileFeatureTemplateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCellularProfileFeatureTemplateResult>("sdwan:index/getCellularProfileFeatureTemplate:getCellularProfileFeatureTemplate", args ?? new GetCellularProfileFeatureTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCellularProfileFeatureTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetCellularProfileFeatureTemplateArgs()
        {
        }
        public static new GetCellularProfileFeatureTemplateArgs Empty => new GetCellularProfileFeatureTemplateArgs();
    }

    public sealed class GetCellularProfileFeatureTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetCellularProfileFeatureTemplateInvokeArgs()
        {
        }
        public static new GetCellularProfileFeatureTemplateInvokeArgs Empty => new GetCellularProfileFeatureTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetCellularProfileFeatureTemplateResult
    {
        /// <summary>
        /// Set access point name
        /// </summary>
        public readonly string AccessPointName;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AccessPointNameVariable;
        /// <summary>
        /// Set authentication type
        /// </summary>
        public readonly string AuthenticationType;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AuthenticationTypeVariable;
        /// <summary>
        /// The description of the feature template
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// List of supported device types
        /// </summary>
        public readonly ImmutableArray<string> DeviceTypes;
        /// <summary>
        /// The id of the feature template
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Set interface name
        /// </summary>
        public readonly string IfName;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IfNameVariable;
        /// <summary>
        /// Set IP address
        /// </summary>
        public readonly string IpAddress;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IpAddressVariable;
        /// <summary>
        /// The name of the feature template
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Set packet data network type
        /// </summary>
        public readonly string PacketDataNetworkType;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PacketDataNetworkTypeVariable;
        /// <summary>
        /// Set the address of the primary DNS server
        /// </summary>
        public readonly string PrimaryDnsAddress;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PrimaryDnsAddressVariable;
        /// <summary>
        /// Set Profile ID
        /// </summary>
        public readonly int ProfileId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ProfileIdVariable;
        /// <summary>
        /// Set profile name
        /// </summary>
        public readonly string ProfileName;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ProfileNameVariable;
        /// <summary>
        /// Set the profile password
        /// </summary>
        public readonly string ProfilePassword;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ProfilePasswordVariable;
        /// <summary>
        /// Set the profile username
        /// </summary>
        public readonly string ProfileUsername;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ProfileUsernameVariable;
        /// <summary>
        /// Set the address of the secondary DNS server
        /// </summary>
        public readonly string SecondaryDnsAddress;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SecondaryDnsAddressVariable;
        /// <summary>
        /// The template type
        /// </summary>
        public readonly string TemplateType;
        /// <summary>
        /// The version of the feature template
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetCellularProfileFeatureTemplateResult(
            string accessPointName,

            string accessPointNameVariable,

            string authenticationType,

            string authenticationTypeVariable,

            string description,

            ImmutableArray<string> deviceTypes,

            string id,

            string ifName,

            string ifNameVariable,

            string ipAddress,

            string ipAddressVariable,

            string name,

            string packetDataNetworkType,

            string packetDataNetworkTypeVariable,

            string primaryDnsAddress,

            string primaryDnsAddressVariable,

            int profileId,

            string profileIdVariable,

            string profileName,

            string profileNameVariable,

            string profilePassword,

            string profilePasswordVariable,

            string profileUsername,

            string profileUsernameVariable,

            string secondaryDnsAddress,

            string secondaryDnsAddressVariable,

            string templateType,

            int version)
        {
            AccessPointName = accessPointName;
            AccessPointNameVariable = accessPointNameVariable;
            AuthenticationType = authenticationType;
            AuthenticationTypeVariable = authenticationTypeVariable;
            Description = description;
            DeviceTypes = deviceTypes;
            Id = id;
            IfName = ifName;
            IfNameVariable = ifNameVariable;
            IpAddress = ipAddress;
            IpAddressVariable = ipAddressVariable;
            Name = name;
            PacketDataNetworkType = packetDataNetworkType;
            PacketDataNetworkTypeVariable = packetDataNetworkTypeVariable;
            PrimaryDnsAddress = primaryDnsAddress;
            PrimaryDnsAddressVariable = primaryDnsAddressVariable;
            ProfileId = profileId;
            ProfileIdVariable = profileIdVariable;
            ProfileName = profileName;
            ProfileNameVariable = profileNameVariable;
            ProfilePassword = profilePassword;
            ProfilePasswordVariable = profilePasswordVariable;
            ProfileUsername = profileUsername;
            ProfileUsernameVariable = profileUsernameVariable;
            SecondaryDnsAddress = secondaryDnsAddress;
            SecondaryDnsAddressVariable = secondaryDnsAddressVariable;
            TemplateType = templateType;
            Version = version;
        }
    }
}
