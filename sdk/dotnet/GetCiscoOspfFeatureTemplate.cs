// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetCiscoOspfFeatureTemplate
    {
        /// <summary>
        /// This data source can read the Cisco OSPF feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoOspfFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCiscoOspfFeatureTemplateResult> InvokeAsync(GetCiscoOspfFeatureTemplateArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCiscoOspfFeatureTemplateResult>("sdwan:index/getCiscoOspfFeatureTemplate:getCiscoOspfFeatureTemplate", args ?? new GetCiscoOspfFeatureTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Cisco OSPF feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoOspfFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCiscoOspfFeatureTemplateResult> Invoke(GetCiscoOspfFeatureTemplateInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCiscoOspfFeatureTemplateResult>("sdwan:index/getCiscoOspfFeatureTemplate:getCiscoOspfFeatureTemplate", args ?? new GetCiscoOspfFeatureTemplateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Cisco OSPF feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoOspfFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCiscoOspfFeatureTemplateResult> Invoke(GetCiscoOspfFeatureTemplateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCiscoOspfFeatureTemplateResult>("sdwan:index/getCiscoOspfFeatureTemplate:getCiscoOspfFeatureTemplate", args ?? new GetCiscoOspfFeatureTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCiscoOspfFeatureTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetCiscoOspfFeatureTemplateArgs()
        {
        }
        public static new GetCiscoOspfFeatureTemplateArgs Empty => new GetCiscoOspfFeatureTemplateArgs();
    }

    public sealed class GetCiscoOspfFeatureTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetCiscoOspfFeatureTemplateInvokeArgs()
        {
        }
        public static new GetCiscoOspfFeatureTemplateInvokeArgs Empty => new GetCiscoOspfFeatureTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetCiscoOspfFeatureTemplateResult
    {
        /// <summary>
        /// Configure OSPF area
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCiscoOspfFeatureTemplateAreaResult> Areas;
        /// <summary>
        /// Set reference bandwidth method to assign OSPF cost
        /// </summary>
        public readonly int AutoCostReferenceBandwidth;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AutoCostReferenceBandwidthVariable;
        /// <summary>
        /// Calculate summary route cost based on RFC 1583
        /// </summary>
        public readonly bool CompatibleRfc1583;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string CompatibleRfc1583Variable;
        /// <summary>
        /// Distribute default external route into OSPF
        /// </summary>
        public readonly bool DefaultInformationOriginate;
        /// <summary>
        /// Always advertise default route
        /// </summary>
        public readonly bool DefaultInformationOriginateAlways;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DefaultInformationOriginateAlwaysVariable;
        /// <summary>
        /// Set metric used to generate default route \n\n
        /// </summary>
        public readonly int DefaultInformationOriginateMetric;
        /// <summary>
        /// Set default route type
        /// </summary>
        public readonly string DefaultInformationOriginateMetricType;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DefaultInformationOriginateMetricTypeVariable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DefaultInformationOriginateMetricVariable;
        /// <summary>
        /// The description of the feature template
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// List of supported device types
        /// </summary>
        public readonly ImmutableArray<string> DeviceTypes;
        /// <summary>
        /// Set distance for external routes
        /// </summary>
        public readonly int DistanceExternal;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DistanceExternalVariable;
        /// <summary>
        /// Set distance for inter-area routes
        /// </summary>
        public readonly int DistanceInterArea;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DistanceInterAreaVariable;
        /// <summary>
        /// Set distance for intra-area routes
        /// </summary>
        public readonly int DistanceIntraArea;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DistanceIntraAreaVariable;
        /// <summary>
        /// The id of the feature template
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Advertise own router LSA with infinite distance
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCiscoOspfFeatureTemplateMaxMetricRouterLsaResult> MaxMetricRouterLsas;
        /// <summary>
        /// The name of the feature template
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Redistribute routes
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCiscoOspfFeatureTemplateRedistributeResult> Redistributes;
        /// <summary>
        /// Set route policy to apply
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCiscoOspfFeatureTemplateRoutePolicyResult> RoutePolicies;
        /// <summary>
        /// Set OSPF router ID to override system IP address
        /// </summary>
        public readonly string RouterId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string RouterIdVariable;
        /// <summary>
        /// The template type
        /// </summary>
        public readonly string TemplateType;
        /// <summary>
        /// Set delay from first change received until performing SPF calculation
        /// </summary>
        public readonly int TimersSpfDelay;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TimersSpfDelayVariable;
        /// <summary>
        /// Set initial hold time between consecutive SPF calculations
        /// </summary>
        public readonly int TimersSpfInitialHold;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TimersSpfInitialHoldVariable;
        /// <summary>
        /// Set maximum hold time between consecutive SPF calculations
        /// </summary>
        public readonly int TimersSpfMaxHold;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TimersSpfMaxHoldVariable;
        /// <summary>
        /// The version of the feature template
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetCiscoOspfFeatureTemplateResult(
            ImmutableArray<Outputs.GetCiscoOspfFeatureTemplateAreaResult> areas,

            int autoCostReferenceBandwidth,

            string autoCostReferenceBandwidthVariable,

            bool compatibleRfc1583,

            string compatibleRfc1583Variable,

            bool defaultInformationOriginate,

            bool defaultInformationOriginateAlways,

            string defaultInformationOriginateAlwaysVariable,

            int defaultInformationOriginateMetric,

            string defaultInformationOriginateMetricType,

            string defaultInformationOriginateMetricTypeVariable,

            string defaultInformationOriginateMetricVariable,

            string description,

            ImmutableArray<string> deviceTypes,

            int distanceExternal,

            string distanceExternalVariable,

            int distanceInterArea,

            string distanceInterAreaVariable,

            int distanceIntraArea,

            string distanceIntraAreaVariable,

            string id,

            ImmutableArray<Outputs.GetCiscoOspfFeatureTemplateMaxMetricRouterLsaResult> maxMetricRouterLsas,

            string name,

            ImmutableArray<Outputs.GetCiscoOspfFeatureTemplateRedistributeResult> redistributes,

            ImmutableArray<Outputs.GetCiscoOspfFeatureTemplateRoutePolicyResult> routePolicies,

            string routerId,

            string routerIdVariable,

            string templateType,

            int timersSpfDelay,

            string timersSpfDelayVariable,

            int timersSpfInitialHold,

            string timersSpfInitialHoldVariable,

            int timersSpfMaxHold,

            string timersSpfMaxHoldVariable,

            int version)
        {
            Areas = areas;
            AutoCostReferenceBandwidth = autoCostReferenceBandwidth;
            AutoCostReferenceBandwidthVariable = autoCostReferenceBandwidthVariable;
            CompatibleRfc1583 = compatibleRfc1583;
            CompatibleRfc1583Variable = compatibleRfc1583Variable;
            DefaultInformationOriginate = defaultInformationOriginate;
            DefaultInformationOriginateAlways = defaultInformationOriginateAlways;
            DefaultInformationOriginateAlwaysVariable = defaultInformationOriginateAlwaysVariable;
            DefaultInformationOriginateMetric = defaultInformationOriginateMetric;
            DefaultInformationOriginateMetricType = defaultInformationOriginateMetricType;
            DefaultInformationOriginateMetricTypeVariable = defaultInformationOriginateMetricTypeVariable;
            DefaultInformationOriginateMetricVariable = defaultInformationOriginateMetricVariable;
            Description = description;
            DeviceTypes = deviceTypes;
            DistanceExternal = distanceExternal;
            DistanceExternalVariable = distanceExternalVariable;
            DistanceInterArea = distanceInterArea;
            DistanceInterAreaVariable = distanceInterAreaVariable;
            DistanceIntraArea = distanceIntraArea;
            DistanceIntraAreaVariable = distanceIntraAreaVariable;
            Id = id;
            MaxMetricRouterLsas = maxMetricRouterLsas;
            Name = name;
            Redistributes = redistributes;
            RoutePolicies = routePolicies;
            RouterId = routerId;
            RouterIdVariable = routerIdVariable;
            TemplateType = templateType;
            TimersSpfDelay = timersSpfDelay;
            TimersSpfDelayVariable = timersSpfDelayVariable;
            TimersSpfInitialHold = timersSpfInitialHold;
            TimersSpfInitialHoldVariable = timersSpfInitialHoldVariable;
            TimersSpfMaxHold = timersSpfMaxHold;
            TimersSpfMaxHoldVariable = timersSpfMaxHoldVariable;
            Version = version;
        }
    }
}
