// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a Hub and Spoke Topology Policy Definition .
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/hubAndSpokeTopologyPolicyDefinition:HubAndSpokeTopologyPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/hubAndSpokeTopologyPolicyDefinition:HubAndSpokeTopologyPolicyDefinition")]
    public partial class HubAndSpokeTopologyPolicyDefinition : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the policy definition
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the policy definition
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of topologies
        /// </summary>
        [Output("topologies")]
        public Output<ImmutableArray<Outputs.HubAndSpokeTopologyPolicyDefinitionTopology>> Topologies { get; private set; } = null!;

        /// <summary>
        /// Type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The version of the object
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;

        /// <summary>
        /// VPN list ID
        /// </summary>
        [Output("vpnListId")]
        public Output<string?> VpnListId { get; private set; } = null!;

        /// <summary>
        /// VPN list version
        /// </summary>
        [Output("vpnListVersion")]
        public Output<int?> VpnListVersion { get; private set; } = null!;


        /// <summary>
        /// Create a HubAndSpokeTopologyPolicyDefinition resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HubAndSpokeTopologyPolicyDefinition(string name, HubAndSpokeTopologyPolicyDefinitionArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/hubAndSpokeTopologyPolicyDefinition:HubAndSpokeTopologyPolicyDefinition", name, args ?? new HubAndSpokeTopologyPolicyDefinitionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HubAndSpokeTopologyPolicyDefinition(string name, Input<string> id, HubAndSpokeTopologyPolicyDefinitionState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/hubAndSpokeTopologyPolicyDefinition:HubAndSpokeTopologyPolicyDefinition", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HubAndSpokeTopologyPolicyDefinition resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HubAndSpokeTopologyPolicyDefinition Get(string name, Input<string> id, HubAndSpokeTopologyPolicyDefinitionState? state = null, CustomResourceOptions? options = null)
        {
            return new HubAndSpokeTopologyPolicyDefinition(name, id, state, options);
        }
    }

    public sealed class HubAndSpokeTopologyPolicyDefinitionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the policy definition
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// The name of the policy definition
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("topologies", required: true)]
        private InputList<Inputs.HubAndSpokeTopologyPolicyDefinitionTopologyArgs>? _topologies;

        /// <summary>
        /// List of topologies
        /// </summary>
        public InputList<Inputs.HubAndSpokeTopologyPolicyDefinitionTopologyArgs> Topologies
        {
            get => _topologies ?? (_topologies = new InputList<Inputs.HubAndSpokeTopologyPolicyDefinitionTopologyArgs>());
            set => _topologies = value;
        }

        /// <summary>
        /// VPN list ID
        /// </summary>
        [Input("vpnListId")]
        public Input<string>? VpnListId { get; set; }

        /// <summary>
        /// VPN list version
        /// </summary>
        [Input("vpnListVersion")]
        public Input<int>? VpnListVersion { get; set; }

        public HubAndSpokeTopologyPolicyDefinitionArgs()
        {
        }
        public static new HubAndSpokeTopologyPolicyDefinitionArgs Empty => new HubAndSpokeTopologyPolicyDefinitionArgs();
    }

    public sealed class HubAndSpokeTopologyPolicyDefinitionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the policy definition
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the policy definition
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("topologies")]
        private InputList<Inputs.HubAndSpokeTopologyPolicyDefinitionTopologyGetArgs>? _topologies;

        /// <summary>
        /// List of topologies
        /// </summary>
        public InputList<Inputs.HubAndSpokeTopologyPolicyDefinitionTopologyGetArgs> Topologies
        {
            get => _topologies ?? (_topologies = new InputList<Inputs.HubAndSpokeTopologyPolicyDefinitionTopologyGetArgs>());
            set => _topologies = value;
        }

        /// <summary>
        /// Type
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The version of the object
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        /// <summary>
        /// VPN list ID
        /// </summary>
        [Input("vpnListId")]
        public Input<string>? VpnListId { get; set; }

        /// <summary>
        /// VPN list version
        /// </summary>
        [Input("vpnListVersion")]
        public Input<int>? VpnListVersion { get; set; }

        public HubAndSpokeTopologyPolicyDefinitionState()
        {
        }
        public static new HubAndSpokeTopologyPolicyDefinitionState Empty => new HubAndSpokeTopologyPolicyDefinitionState();
    }
}
