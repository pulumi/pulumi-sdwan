// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a Preferred Color Group Policy Object .
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Sdwan = Pulumi.Sdwan;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Sdwan.PreferredColorGroupPolicyObject("example", new()
    ///     {
    ///         Name = "Example",
    ///         PrimaryColorPreference = "blue bronze",
    ///         PrimaryPathPreference = "direct-path",
    ///         SecondaryColorPreference = "3g",
    ///         SecondaryPathPreference = "multi-hop-path",
    ///         TertiaryColorPreference = "custom1",
    ///         TertiaryPathPreference = "all-paths",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/preferredColorGroupPolicyObject:PreferredColorGroupPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/preferredColorGroupPolicyObject:PreferredColorGroupPolicyObject")]
    public partial class PreferredColorGroupPolicyObject : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the policy object
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Color or space separated list of colors
        /// </summary>
        [Output("primaryColorPreference")]
        public Output<string> PrimaryColorPreference { get; private set; } = null!;

        /// <summary>
        /// Path preference - Choices: `direct-path`, `multi-hop-path`, `all-paths`
        /// </summary>
        [Output("primaryPathPreference")]
        public Output<string?> PrimaryPathPreference { get; private set; } = null!;

        /// <summary>
        /// Color or space separated list of colors
        /// </summary>
        [Output("secondaryColorPreference")]
        public Output<string?> SecondaryColorPreference { get; private set; } = null!;

        /// <summary>
        /// Path preference - Choices: `direct-path`, `multi-hop-path`, `all-paths`
        /// </summary>
        [Output("secondaryPathPreference")]
        public Output<string?> SecondaryPathPreference { get; private set; } = null!;

        /// <summary>
        /// Color or space separated list of colors
        /// </summary>
        [Output("tertiaryColorPreference")]
        public Output<string?> TertiaryColorPreference { get; private set; } = null!;

        /// <summary>
        /// Path preference - Choices: `direct-path`, `multi-hop-path`, `all-paths`
        /// </summary>
        [Output("tertiaryPathPreference")]
        public Output<string?> TertiaryPathPreference { get; private set; } = null!;

        /// <summary>
        /// The version of the object
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a PreferredColorGroupPolicyObject resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PreferredColorGroupPolicyObject(string name, PreferredColorGroupPolicyObjectArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/preferredColorGroupPolicyObject:PreferredColorGroupPolicyObject", name, args ?? new PreferredColorGroupPolicyObjectArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PreferredColorGroupPolicyObject(string name, Input<string> id, PreferredColorGroupPolicyObjectState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/preferredColorGroupPolicyObject:PreferredColorGroupPolicyObject", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PreferredColorGroupPolicyObject resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PreferredColorGroupPolicyObject Get(string name, Input<string> id, PreferredColorGroupPolicyObjectState? state = null, CustomResourceOptions? options = null)
        {
            return new PreferredColorGroupPolicyObject(name, id, state, options);
        }
    }

    public sealed class PreferredColorGroupPolicyObjectArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the policy object
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Color or space separated list of colors
        /// </summary>
        [Input("primaryColorPreference", required: true)]
        public Input<string> PrimaryColorPreference { get; set; } = null!;

        /// <summary>
        /// Path preference - Choices: `direct-path`, `multi-hop-path`, `all-paths`
        /// </summary>
        [Input("primaryPathPreference")]
        public Input<string>? PrimaryPathPreference { get; set; }

        /// <summary>
        /// Color or space separated list of colors
        /// </summary>
        [Input("secondaryColorPreference")]
        public Input<string>? SecondaryColorPreference { get; set; }

        /// <summary>
        /// Path preference - Choices: `direct-path`, `multi-hop-path`, `all-paths`
        /// </summary>
        [Input("secondaryPathPreference")]
        public Input<string>? SecondaryPathPreference { get; set; }

        /// <summary>
        /// Color or space separated list of colors
        /// </summary>
        [Input("tertiaryColorPreference")]
        public Input<string>? TertiaryColorPreference { get; set; }

        /// <summary>
        /// Path preference - Choices: `direct-path`, `multi-hop-path`, `all-paths`
        /// </summary>
        [Input("tertiaryPathPreference")]
        public Input<string>? TertiaryPathPreference { get; set; }

        public PreferredColorGroupPolicyObjectArgs()
        {
        }
        public static new PreferredColorGroupPolicyObjectArgs Empty => new PreferredColorGroupPolicyObjectArgs();
    }

    public sealed class PreferredColorGroupPolicyObjectState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the policy object
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Color or space separated list of colors
        /// </summary>
        [Input("primaryColorPreference")]
        public Input<string>? PrimaryColorPreference { get; set; }

        /// <summary>
        /// Path preference - Choices: `direct-path`, `multi-hop-path`, `all-paths`
        /// </summary>
        [Input("primaryPathPreference")]
        public Input<string>? PrimaryPathPreference { get; set; }

        /// <summary>
        /// Color or space separated list of colors
        /// </summary>
        [Input("secondaryColorPreference")]
        public Input<string>? SecondaryColorPreference { get; set; }

        /// <summary>
        /// Path preference - Choices: `direct-path`, `multi-hop-path`, `all-paths`
        /// </summary>
        [Input("secondaryPathPreference")]
        public Input<string>? SecondaryPathPreference { get; set; }

        /// <summary>
        /// Color or space separated list of colors
        /// </summary>
        [Input("tertiaryColorPreference")]
        public Input<string>? TertiaryColorPreference { get; set; }

        /// <summary>
        /// Path preference - Choices: `direct-path`, `multi-hop-path`, `all-paths`
        /// </summary>
        [Input("tertiaryPathPreference")]
        public Input<string>? TertiaryPathPreference { get; set; }

        /// <summary>
        /// The version of the object
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public PreferredColorGroupPolicyObjectState()
        {
        }
        public static new PreferredColorGroupPolicyObjectState Empty => new PreferredColorGroupPolicyObjectState();
    }
}
