// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a System MRF Feature.
    ///   - Minimum SD-WAN Manager version: `20.12.0`
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Sdwan = Pulumi.Sdwan;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Sdwan.SystemMrfFeature("example", new()
    ///     {
    ///         Name = "Example",
    ///         Description = "My Example",
    ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
    ///         RegionId = 1,
    ///         SecondaryRegionId = 2,
    ///         Role = "edge-router",
    ///         EnableMigrationToMrf = "enabled",
    ///         MigrationBgpCommunity = 100,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// Expected import identifier with the format: "system_mrf_feature_id,feature_profile_id"
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/systemMrfFeature:SystemMrfFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/systemMrfFeature:SystemMrfFeature")]
    public partial class SystemMrfFeature : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Enable migration mode to Multi-Region Fabric - Choices: `enabled`, `enabled-from-bgp-core`
        /// </summary>
        [Output("enableMigrationToMrf")]
        public Output<string?> EnableMigrationToMrf { get; private set; } = null!;

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Output("featureProfileId")]
        public Output<string> FeatureProfileId { get; private set; } = null!;

        /// <summary>
        /// Set BGP community during migration from BGP-core based network - Range: `1`-`4294967295`
        /// </summary>
        [Output("migrationBgpCommunity")]
        public Output<int?> MigrationBgpCommunity { get; private set; } = null!;

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Set region ID - Range: `1`-`63`
        /// </summary>
        [Output("regionId")]
        public Output<int?> RegionId { get; private set; } = null!;

        /// <summary>
        /// Set the role for router - Choices: `edge-router`, `border-router`
        /// </summary>
        [Output("role")]
        public Output<string?> Role { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("roleVariable")]
        public Output<string?> RoleVariable { get; private set; } = null!;

        /// <summary>
        /// Set secondary region ID - Range: `1`-`63`
        /// </summary>
        [Output("secondaryRegionId")]
        public Output<int?> SecondaryRegionId { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("secondaryRegionIdVariable")]
        public Output<string?> SecondaryRegionIdVariable { get; private set; } = null!;

        /// <summary>
        /// The version of the Feature
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a SystemMrfFeature resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SystemMrfFeature(string name, SystemMrfFeatureArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/systemMrfFeature:SystemMrfFeature", name, args ?? new SystemMrfFeatureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SystemMrfFeature(string name, Input<string> id, SystemMrfFeatureState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/systemMrfFeature:SystemMrfFeature", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SystemMrfFeature resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SystemMrfFeature Get(string name, Input<string> id, SystemMrfFeatureState? state = null, CustomResourceOptions? options = null)
        {
            return new SystemMrfFeature(name, id, state, options);
        }
    }

    public sealed class SystemMrfFeatureArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Enable migration mode to Multi-Region Fabric - Choices: `enabled`, `enabled-from-bgp-core`
        /// </summary>
        [Input("enableMigrationToMrf")]
        public Input<string>? EnableMigrationToMrf { get; set; }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// Set BGP community during migration from BGP-core based network - Range: `1`-`4294967295`
        /// </summary>
        [Input("migrationBgpCommunity")]
        public Input<int>? MigrationBgpCommunity { get; set; }

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Set region ID - Range: `1`-`63`
        /// </summary>
        [Input("regionId")]
        public Input<int>? RegionId { get; set; }

        /// <summary>
        /// Set the role for router - Choices: `edge-router`, `border-router`
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("roleVariable")]
        public Input<string>? RoleVariable { get; set; }

        /// <summary>
        /// Set secondary region ID - Range: `1`-`63`
        /// </summary>
        [Input("secondaryRegionId")]
        public Input<int>? SecondaryRegionId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("secondaryRegionIdVariable")]
        public Input<string>? SecondaryRegionIdVariable { get; set; }

        public SystemMrfFeatureArgs()
        {
        }
        public static new SystemMrfFeatureArgs Empty => new SystemMrfFeatureArgs();
    }

    public sealed class SystemMrfFeatureState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Enable migration mode to Multi-Region Fabric - Choices: `enabled`, `enabled-from-bgp-core`
        /// </summary>
        [Input("enableMigrationToMrf")]
        public Input<string>? EnableMigrationToMrf { get; set; }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId")]
        public Input<string>? FeatureProfileId { get; set; }

        /// <summary>
        /// Set BGP community during migration from BGP-core based network - Range: `1`-`4294967295`
        /// </summary>
        [Input("migrationBgpCommunity")]
        public Input<int>? MigrationBgpCommunity { get; set; }

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Set region ID - Range: `1`-`63`
        /// </summary>
        [Input("regionId")]
        public Input<int>? RegionId { get; set; }

        /// <summary>
        /// Set the role for router - Choices: `edge-router`, `border-router`
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("roleVariable")]
        public Input<string>? RoleVariable { get; set; }

        /// <summary>
        /// Set secondary region ID - Range: `1`-`63`
        /// </summary>
        [Input("secondaryRegionId")]
        public Input<int>? SecondaryRegionId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("secondaryRegionIdVariable")]
        public Input<string>? SecondaryRegionIdVariable { get; set; }

        /// <summary>
        /// The version of the Feature
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public SystemMrfFeatureState()
        {
        }
        public static new SystemMrfFeatureState Empty => new SystemMrfFeatureState();
    }
}
