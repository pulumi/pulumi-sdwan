// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a Configuration Group Devices .
    ///   - Minimum SD-WAN Manager version: `20.12.0`
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Sdwan = Pulumi.Sdwan;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Sdwan.ConfigurationGroupDevices("example", new()
    ///     {
    ///         ConfigurationGroupId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
    ///         Devices = new[]
    ///         {
    ///             new Sdwan.Inputs.ConfigurationGroupDevicesDeviceArgs
    ///             {
    ///                 Id = "C8K-15411CCC-D476-0B3B-21F2-5D6AC387EE7B",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/configurationGroupDevices:ConfigurationGroupDevices example "f6b2c44c-693c-4763-b010-895aa3d236bd"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/configurationGroupDevices:ConfigurationGroupDevices")]
    public partial class ConfigurationGroupDevices : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configuration Group ID
        /// </summary>
        [Output("configurationGroupId")]
        public Output<string> ConfigurationGroupId { get; private set; } = null!;

        /// <summary>
        /// List of devices
        /// </summary>
        [Output("devices")]
        public Output<ImmutableArray<Outputs.ConfigurationGroupDevicesDevice>> Devices { get; private set; } = null!;


        /// <summary>
        /// Create a ConfigurationGroupDevices resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigurationGroupDevices(string name, ConfigurationGroupDevicesArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/configurationGroupDevices:ConfigurationGroupDevices", name, args ?? new ConfigurationGroupDevicesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConfigurationGroupDevices(string name, Input<string> id, ConfigurationGroupDevicesState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/configurationGroupDevices:ConfigurationGroupDevices", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConfigurationGroupDevices resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConfigurationGroupDevices Get(string name, Input<string> id, ConfigurationGroupDevicesState? state = null, CustomResourceOptions? options = null)
        {
            return new ConfigurationGroupDevices(name, id, state, options);
        }
    }

    public sealed class ConfigurationGroupDevicesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration Group ID
        /// </summary>
        [Input("configurationGroupId", required: true)]
        public Input<string> ConfigurationGroupId { get; set; } = null!;

        [Input("devices", required: true)]
        private InputList<Inputs.ConfigurationGroupDevicesDeviceArgs>? _devices;

        /// <summary>
        /// List of devices
        /// </summary>
        public InputList<Inputs.ConfigurationGroupDevicesDeviceArgs> Devices
        {
            get => _devices ?? (_devices = new InputList<Inputs.ConfigurationGroupDevicesDeviceArgs>());
            set => _devices = value;
        }

        public ConfigurationGroupDevicesArgs()
        {
        }
        public static new ConfigurationGroupDevicesArgs Empty => new ConfigurationGroupDevicesArgs();
    }

    public sealed class ConfigurationGroupDevicesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration Group ID
        /// </summary>
        [Input("configurationGroupId")]
        public Input<string>? ConfigurationGroupId { get; set; }

        [Input("devices")]
        private InputList<Inputs.ConfigurationGroupDevicesDeviceGetArgs>? _devices;

        /// <summary>
        /// List of devices
        /// </summary>
        public InputList<Inputs.ConfigurationGroupDevicesDeviceGetArgs> Devices
        {
            get => _devices ?? (_devices = new InputList<Inputs.ConfigurationGroupDevicesDeviceGetArgs>());
            set => _devices = value;
        }

        public ConfigurationGroupDevicesState()
        {
        }
        public static new ConfigurationGroupDevicesState Empty => new ConfigurationGroupDevicesState();
    }
}
