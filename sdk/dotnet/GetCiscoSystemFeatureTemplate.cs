// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetCiscoSystemFeatureTemplate
    {
        /// <summary>
        /// This data source can read the Cisco System feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoSystemFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCiscoSystemFeatureTemplateResult> InvokeAsync(GetCiscoSystemFeatureTemplateArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCiscoSystemFeatureTemplateResult>("sdwan:index/getCiscoSystemFeatureTemplate:getCiscoSystemFeatureTemplate", args ?? new GetCiscoSystemFeatureTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Cisco System feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoSystemFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCiscoSystemFeatureTemplateResult> Invoke(GetCiscoSystemFeatureTemplateInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCiscoSystemFeatureTemplateResult>("sdwan:index/getCiscoSystemFeatureTemplate:getCiscoSystemFeatureTemplate", args ?? new GetCiscoSystemFeatureTemplateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Cisco System feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoSystemFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCiscoSystemFeatureTemplateResult> Invoke(GetCiscoSystemFeatureTemplateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCiscoSystemFeatureTemplateResult>("sdwan:index/getCiscoSystemFeatureTemplate:getCiscoSystemFeatureTemplate", args ?? new GetCiscoSystemFeatureTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCiscoSystemFeatureTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetCiscoSystemFeatureTemplateArgs()
        {
        }
        public static new GetCiscoSystemFeatureTemplateArgs Empty => new GetCiscoSystemFeatureTemplateArgs();
    }

    public sealed class GetCiscoSystemFeatureTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetCiscoSystemFeatureTemplateInvokeArgs()
        {
        }
        public static new GetCiscoSystemFeatureTemplateInvokeArgs Empty => new GetCiscoSystemFeatureTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetCiscoSystemFeatureTemplateResult
    {
        /// <summary>
        /// Collect admin-tech before reboot due to daemon failure
        /// </summary>
        public readonly bool AdminTechOnFailure;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AdminTechOnFailureVariable;
        /// <summary>
        /// Set the affinity group number for router
        /// </summary>
        public readonly int AffinityGroupNumber;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AffinityGroupNumberVariable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AffinityGroupPreferenceVariable;
        /// <summary>
        /// Set the affinity group preference
        /// </summary>
        public readonly ImmutableArray<int> AffinityGroupPreferences;
        /// <summary>
        /// Set the console baud rate
        /// </summary>
        public readonly string ConsoleBaudRate;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ConsoleBaudRateVariable;
        /// <summary>
        /// Set the policer rate for control sessions
        /// </summary>
        public readonly int ControlSessionPps;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ControlSessionPpsVariable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ControllerGroupListVariable;
        /// <summary>
        /// Configure a list of comma-separated device groups
        /// </summary>
        public readonly ImmutableArray<int> ControllerGroupLists;
        /// <summary>
        /// The description of the feature template
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Device groups (Use comma(,) for multiple groups)
        /// </summary>
        public readonly ImmutableArray<string> DeviceGroups;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DeviceGroupsVariable;
        /// <summary>
        /// List of supported device types
        /// </summary>
        public readonly ImmutableArray<string> DeviceTypes;
        /// <summary>
        /// Enable migration mode to Multi-Region Fabric
        /// </summary>
        public readonly string EnableMrfMigration;
        /// <summary>
        /// Enable Geo fencing
        /// </summary>
        public readonly bool GeoFencing;
        /// <summary>
        /// Set the device’s geo fencing range
        /// </summary>
        public readonly int GeoFencingRange;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string GeoFencingRangeVariable;
        /// <summary>
        /// Enable Geo fencing
        /// </summary>
        public readonly bool GeoFencingSms;
        /// <summary>
        /// Set device’s geo fencing SMS phone number
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCiscoSystemFeatureTemplateGeoFencingSmsPhoneNumberResult> GeoFencingSmsPhoneNumbers;
        /// <summary>
        /// Set the hostname
        /// </summary>
        public readonly string Hostname;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string HostnameVariable;
        /// <summary>
        /// The id of the feature template
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Idle CLI timeout in minutes
        /// </summary>
        public readonly int IdleTimeout;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IdleTimeoutVariable;
        /// <summary>
        /// Set the device’s physical latitude
        /// </summary>
        public readonly double Latitude;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string LatitudeVariable;
        /// <summary>
        /// Set the location of the device
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string LocationVariable;
        /// <summary>
        /// Set the device’s physical longitude
        /// </summary>
        public readonly double Longitude;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string LongitudeVariable;
        /// <summary>
        /// Set the maximum number of OMP sessions \n\n the device can have
        /// </summary>
        public readonly int MaxOmpSessions;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string MaxOmpSessionsVariable;
        /// <summary>
        /// Set BGP community during migration from BGP-core based network
        /// </summary>
        public readonly int MigrationBgpCommunity;
        /// <summary>
        /// Device is multi-tenant
        /// </summary>
        public readonly bool MultiTenant;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string MultiTenantVariable;
        /// <summary>
        /// The name of the feature template
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Object Track configuration
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCiscoSystemFeatureTemplateObjectTrackerResult> ObjectTrackers;
        /// <summary>
        /// Enable or disable On-demand Tunnel
        /// </summary>
        public readonly bool OnDemandTunnel;
        /// <summary>
        /// Idle CLI timeout in minutes
        /// </summary>
        public readonly int OnDemandTunnelIdleTimeout;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string OnDemandTunnelIdleTimeoutVariable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string OnDemandTunnelVariable;
        /// <summary>
        /// Set the Overlay ID
        /// </summary>
        public readonly int OverlayId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string OverlayIdVariable;
        /// <summary>
        /// Enable port hopping
        /// </summary>
        public readonly bool PortHopping;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PortHoppingVariable;
        /// <summary>
        /// Set the TLOC port offset when multiple devices are behind a NAT
        /// </summary>
        public readonly int PortOffset;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PortOffsetVariable;
        /// <summary>
        /// Set region ID
        /// </summary>
        public readonly int RegionId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string RegionIdVariable;
        /// <summary>
        /// Set the role for router
        /// </summary>
        public readonly string Role;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string RoleVariable;
        /// <summary>
        /// Set secondary region ID
        /// </summary>
        public readonly int SecondaryRegionId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SecondaryRegionIdVariable;
        /// <summary>
        /// Set the site identifier
        /// </summary>
        public readonly int SiteId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SiteIdVariable;
        /// <summary>
        /// Set a text description of the device
        /// </summary>
        public readonly string SystemDescription;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SystemDescriptionVariable;
        /// <summary>
        /// Set the system IP address
        /// </summary>
        public readonly string SystemIp;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SystemIpVariable;
        /// <summary>
        /// The template type
        /// </summary>
        public readonly string TemplateType;
        /// <summary>
        /// Set the timezone
        /// </summary>
        public readonly string Timezone;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TimezoneVariable;
        /// <summary>
        /// Enable or disable default gateway tracking
        /// </summary>
        public readonly bool TrackDefaultGateway;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TrackDefaultGatewayVariable;
        /// <summary>
        /// OMP Tag attached to routes based on interface tracking
        /// </summary>
        public readonly int TrackInterfaceTag;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TrackInterfaceTagVariable;
        /// <summary>
        /// Configure tracking of transport
        /// </summary>
        public readonly bool TrackTransport;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TrackTransportVariable;
        /// <summary>
        /// Tracker configuration
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCiscoSystemFeatureTemplateTrackerResult> Trackers;
        /// <summary>
        /// Enable transport gateway
        /// </summary>
        public readonly bool TransportGateway;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TransportGatewayVariable;
        /// <summary>
        /// The version of the feature template
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetCiscoSystemFeatureTemplateResult(
            bool adminTechOnFailure,

            string adminTechOnFailureVariable,

            int affinityGroupNumber,

            string affinityGroupNumberVariable,

            string affinityGroupPreferenceVariable,

            ImmutableArray<int> affinityGroupPreferences,

            string consoleBaudRate,

            string consoleBaudRateVariable,

            int controlSessionPps,

            string controlSessionPpsVariable,

            string controllerGroupListVariable,

            ImmutableArray<int> controllerGroupLists,

            string description,

            ImmutableArray<string> deviceGroups,

            string deviceGroupsVariable,

            ImmutableArray<string> deviceTypes,

            string enableMrfMigration,

            bool geoFencing,

            int geoFencingRange,

            string geoFencingRangeVariable,

            bool geoFencingSms,

            ImmutableArray<Outputs.GetCiscoSystemFeatureTemplateGeoFencingSmsPhoneNumberResult> geoFencingSmsPhoneNumbers,

            string hostname,

            string hostnameVariable,

            string id,

            int idleTimeout,

            string idleTimeoutVariable,

            double latitude,

            string latitudeVariable,

            string location,

            string locationVariable,

            double longitude,

            string longitudeVariable,

            int maxOmpSessions,

            string maxOmpSessionsVariable,

            int migrationBgpCommunity,

            bool multiTenant,

            string multiTenantVariable,

            string name,

            ImmutableArray<Outputs.GetCiscoSystemFeatureTemplateObjectTrackerResult> objectTrackers,

            bool onDemandTunnel,

            int onDemandTunnelIdleTimeout,

            string onDemandTunnelIdleTimeoutVariable,

            string onDemandTunnelVariable,

            int overlayId,

            string overlayIdVariable,

            bool portHopping,

            string portHoppingVariable,

            int portOffset,

            string portOffsetVariable,

            int regionId,

            string regionIdVariable,

            string role,

            string roleVariable,

            int secondaryRegionId,

            string secondaryRegionIdVariable,

            int siteId,

            string siteIdVariable,

            string systemDescription,

            string systemDescriptionVariable,

            string systemIp,

            string systemIpVariable,

            string templateType,

            string timezone,

            string timezoneVariable,

            bool trackDefaultGateway,

            string trackDefaultGatewayVariable,

            int trackInterfaceTag,

            string trackInterfaceTagVariable,

            bool trackTransport,

            string trackTransportVariable,

            ImmutableArray<Outputs.GetCiscoSystemFeatureTemplateTrackerResult> trackers,

            bool transportGateway,

            string transportGatewayVariable,

            int version)
        {
            AdminTechOnFailure = adminTechOnFailure;
            AdminTechOnFailureVariable = adminTechOnFailureVariable;
            AffinityGroupNumber = affinityGroupNumber;
            AffinityGroupNumberVariable = affinityGroupNumberVariable;
            AffinityGroupPreferenceVariable = affinityGroupPreferenceVariable;
            AffinityGroupPreferences = affinityGroupPreferences;
            ConsoleBaudRate = consoleBaudRate;
            ConsoleBaudRateVariable = consoleBaudRateVariable;
            ControlSessionPps = controlSessionPps;
            ControlSessionPpsVariable = controlSessionPpsVariable;
            ControllerGroupListVariable = controllerGroupListVariable;
            ControllerGroupLists = controllerGroupLists;
            Description = description;
            DeviceGroups = deviceGroups;
            DeviceGroupsVariable = deviceGroupsVariable;
            DeviceTypes = deviceTypes;
            EnableMrfMigration = enableMrfMigration;
            GeoFencing = geoFencing;
            GeoFencingRange = geoFencingRange;
            GeoFencingRangeVariable = geoFencingRangeVariable;
            GeoFencingSms = geoFencingSms;
            GeoFencingSmsPhoneNumbers = geoFencingSmsPhoneNumbers;
            Hostname = hostname;
            HostnameVariable = hostnameVariable;
            Id = id;
            IdleTimeout = idleTimeout;
            IdleTimeoutVariable = idleTimeoutVariable;
            Latitude = latitude;
            LatitudeVariable = latitudeVariable;
            Location = location;
            LocationVariable = locationVariable;
            Longitude = longitude;
            LongitudeVariable = longitudeVariable;
            MaxOmpSessions = maxOmpSessions;
            MaxOmpSessionsVariable = maxOmpSessionsVariable;
            MigrationBgpCommunity = migrationBgpCommunity;
            MultiTenant = multiTenant;
            MultiTenantVariable = multiTenantVariable;
            Name = name;
            ObjectTrackers = objectTrackers;
            OnDemandTunnel = onDemandTunnel;
            OnDemandTunnelIdleTimeout = onDemandTunnelIdleTimeout;
            OnDemandTunnelIdleTimeoutVariable = onDemandTunnelIdleTimeoutVariable;
            OnDemandTunnelVariable = onDemandTunnelVariable;
            OverlayId = overlayId;
            OverlayIdVariable = overlayIdVariable;
            PortHopping = portHopping;
            PortHoppingVariable = portHoppingVariable;
            PortOffset = portOffset;
            PortOffsetVariable = portOffsetVariable;
            RegionId = regionId;
            RegionIdVariable = regionIdVariable;
            Role = role;
            RoleVariable = roleVariable;
            SecondaryRegionId = secondaryRegionId;
            SecondaryRegionIdVariable = secondaryRegionIdVariable;
            SiteId = siteId;
            SiteIdVariable = siteIdVariable;
            SystemDescription = systemDescription;
            SystemDescriptionVariable = systemDescriptionVariable;
            SystemIp = systemIp;
            SystemIpVariable = systemIpVariable;
            TemplateType = templateType;
            Timezone = timezone;
            TimezoneVariable = timezoneVariable;
            TrackDefaultGateway = trackDefaultGateway;
            TrackDefaultGatewayVariable = trackDefaultGatewayVariable;
            TrackInterfaceTag = trackInterfaceTag;
            TrackInterfaceTagVariable = trackInterfaceTagVariable;
            TrackTransport = trackTransport;
            TrackTransportVariable = trackTransportVariable;
            Trackers = trackers;
            TransportGateway = transportGateway;
            TransportGatewayVariable = transportGatewayVariable;
            Version = version;
        }
    }
}
