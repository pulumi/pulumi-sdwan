// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a Cflowd Policy Definition .
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/cflowdPolicyDefinition:CflowdPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/cflowdPolicyDefinition:CflowdPolicyDefinition")]
    public partial class CflowdPolicyDefinition : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Active flow timeout in seconds - Range: `30`-`3600`
        /// </summary>
        [Output("activeFlowTimeout")]
        public Output<int?> ActiveFlowTimeout { get; private set; } = null!;

        /// <summary>
        /// List of collectors
        /// </summary>
        [Output("collectors")]
        public Output<ImmutableArray<Outputs.CflowdPolicyDefinitionCollector>> Collectors { get; private set; } = null!;

        /// <summary>
        /// The description of the policy definition
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Flow refresh in seconds - Range: `60`-`86400`
        /// </summary>
        [Output("flowRefresh")]
        public Output<int?> FlowRefresh { get; private set; } = null!;

        /// <summary>
        /// Inactive flow timeout in seconds - Range: `1`-`3600`
        /// </summary>
        [Output("inactiveFlowTimeout")]
        public Output<int?> InactiveFlowTimeout { get; private set; } = null!;

        /// <summary>
        /// The name of the policy definition
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Protocol, either `ipv4`, `ipv6` or `all` - Choices: `ipv4`, `ipv6`, `all`
        /// </summary>
        [Output("protocol")]
        public Output<string?> Protocol { get; private set; } = null!;

        /// <summary>
        /// Collect remarked DSCP
        /// </summary>
        [Output("remarkedDscp")]
        public Output<bool?> RemarkedDscp { get; private set; } = null!;

        /// <summary>
        /// Flow sampling interval - Range: `1`-`65536`
        /// </summary>
        [Output("samplingInterval")]
        public Output<int?> SamplingInterval { get; private set; } = null!;

        /// <summary>
        /// Collect TOS record field
        /// </summary>
        [Output("tos")]
        public Output<bool?> Tos { get; private set; } = null!;

        /// <summary>
        /// Type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The version of the object
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a CflowdPolicyDefinition resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CflowdPolicyDefinition(string name, CflowdPolicyDefinitionArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/cflowdPolicyDefinition:CflowdPolicyDefinition", name, args ?? new CflowdPolicyDefinitionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CflowdPolicyDefinition(string name, Input<string> id, CflowdPolicyDefinitionState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/cflowdPolicyDefinition:CflowdPolicyDefinition", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CflowdPolicyDefinition resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CflowdPolicyDefinition Get(string name, Input<string> id, CflowdPolicyDefinitionState? state = null, CustomResourceOptions? options = null)
        {
            return new CflowdPolicyDefinition(name, id, state, options);
        }
    }

    public sealed class CflowdPolicyDefinitionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Active flow timeout in seconds - Range: `30`-`3600`
        /// </summary>
        [Input("activeFlowTimeout")]
        public Input<int>? ActiveFlowTimeout { get; set; }

        [Input("collectors", required: true)]
        private InputList<Inputs.CflowdPolicyDefinitionCollectorArgs>? _collectors;

        /// <summary>
        /// List of collectors
        /// </summary>
        public InputList<Inputs.CflowdPolicyDefinitionCollectorArgs> Collectors
        {
            get => _collectors ?? (_collectors = new InputList<Inputs.CflowdPolicyDefinitionCollectorArgs>());
            set => _collectors = value;
        }

        /// <summary>
        /// The description of the policy definition
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// Flow refresh in seconds - Range: `60`-`86400`
        /// </summary>
        [Input("flowRefresh")]
        public Input<int>? FlowRefresh { get; set; }

        /// <summary>
        /// Inactive flow timeout in seconds - Range: `1`-`3600`
        /// </summary>
        [Input("inactiveFlowTimeout")]
        public Input<int>? InactiveFlowTimeout { get; set; }

        /// <summary>
        /// The name of the policy definition
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Protocol, either `ipv4`, `ipv6` or `all` - Choices: `ipv4`, `ipv6`, `all`
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// Collect remarked DSCP
        /// </summary>
        [Input("remarkedDscp")]
        public Input<bool>? RemarkedDscp { get; set; }

        /// <summary>
        /// Flow sampling interval - Range: `1`-`65536`
        /// </summary>
        [Input("samplingInterval")]
        public Input<int>? SamplingInterval { get; set; }

        /// <summary>
        /// Collect TOS record field
        /// </summary>
        [Input("tos")]
        public Input<bool>? Tos { get; set; }

        public CflowdPolicyDefinitionArgs()
        {
        }
        public static new CflowdPolicyDefinitionArgs Empty => new CflowdPolicyDefinitionArgs();
    }

    public sealed class CflowdPolicyDefinitionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Active flow timeout in seconds - Range: `30`-`3600`
        /// </summary>
        [Input("activeFlowTimeout")]
        public Input<int>? ActiveFlowTimeout { get; set; }

        [Input("collectors")]
        private InputList<Inputs.CflowdPolicyDefinitionCollectorGetArgs>? _collectors;

        /// <summary>
        /// List of collectors
        /// </summary>
        public InputList<Inputs.CflowdPolicyDefinitionCollectorGetArgs> Collectors
        {
            get => _collectors ?? (_collectors = new InputList<Inputs.CflowdPolicyDefinitionCollectorGetArgs>());
            set => _collectors = value;
        }

        /// <summary>
        /// The description of the policy definition
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Flow refresh in seconds - Range: `60`-`86400`
        /// </summary>
        [Input("flowRefresh")]
        public Input<int>? FlowRefresh { get; set; }

        /// <summary>
        /// Inactive flow timeout in seconds - Range: `1`-`3600`
        /// </summary>
        [Input("inactiveFlowTimeout")]
        public Input<int>? InactiveFlowTimeout { get; set; }

        /// <summary>
        /// The name of the policy definition
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Protocol, either `ipv4`, `ipv6` or `all` - Choices: `ipv4`, `ipv6`, `all`
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// Collect remarked DSCP
        /// </summary>
        [Input("remarkedDscp")]
        public Input<bool>? RemarkedDscp { get; set; }

        /// <summary>
        /// Flow sampling interval - Range: `1`-`65536`
        /// </summary>
        [Input("samplingInterval")]
        public Input<int>? SamplingInterval { get; set; }

        /// <summary>
        /// Collect TOS record field
        /// </summary>
        [Input("tos")]
        public Input<bool>? Tos { get; set; }

        /// <summary>
        /// Type
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The version of the object
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public CflowdPolicyDefinitionState()
        {
        }
        public static new CflowdPolicyDefinitionState Empty => new CflowdPolicyDefinitionState();
    }
}
