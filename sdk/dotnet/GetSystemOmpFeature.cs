// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetSystemOmpFeature
    {
        /// <summary>
        /// This data source can read the System OMP Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetSystemOmpFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSystemOmpFeatureResult> InvokeAsync(GetSystemOmpFeatureArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSystemOmpFeatureResult>("sdwan:index/getSystemOmpFeature:getSystemOmpFeature", args ?? new GetSystemOmpFeatureArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the System OMP Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetSystemOmpFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSystemOmpFeatureResult> Invoke(GetSystemOmpFeatureInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSystemOmpFeatureResult>("sdwan:index/getSystemOmpFeature:getSystemOmpFeature", args ?? new GetSystemOmpFeatureInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSystemOmpFeatureArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public string FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Feature
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetSystemOmpFeatureArgs()
        {
        }
        public static new GetSystemOmpFeatureArgs Empty => new GetSystemOmpFeatureArgs();
    }

    public sealed class GetSystemOmpFeatureInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Feature
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetSystemOmpFeatureInvokeArgs()
        {
        }
        public static new GetSystemOmpFeatureInvokeArgs Empty => new GetSystemOmpFeatureInvokeArgs();
    }


    [OutputType]
    public sealed class GetSystemOmpFeatureResult
    {
        /// <summary>
        /// BGP
        /// </summary>
        public readonly bool AdvertiseIpv4Bgp;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AdvertiseIpv4BgpVariable;
        /// <summary>
        /// Connected
        /// </summary>
        public readonly bool AdvertiseIpv4Connected;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AdvertiseIpv4ConnectedVariable;
        /// <summary>
        /// EIGRP
        /// </summary>
        public readonly bool AdvertiseIpv4Eigrp;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AdvertiseIpv4EigrpVariable;
        /// <summary>
        /// ISIS
        /// </summary>
        public readonly bool AdvertiseIpv4Isis;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AdvertiseIpv4IsisVariable;
        /// <summary>
        /// LISP
        /// </summary>
        public readonly bool AdvertiseIpv4Lisp;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AdvertiseIpv4LispVariable;
        /// <summary>
        /// OSPF
        /// </summary>
        public readonly bool AdvertiseIpv4Ospf;
        /// <summary>
        /// OSPFV3
        /// </summary>
        public readonly bool AdvertiseIpv4OspfV3;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AdvertiseIpv4OspfV3Variable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AdvertiseIpv4OspfVariable;
        /// <summary>
        /// Static
        /// </summary>
        public readonly bool AdvertiseIpv4Static;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AdvertiseIpv4StaticVariable;
        /// <summary>
        /// BGP
        /// </summary>
        public readonly bool AdvertiseIpv6Bgp;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AdvertiseIpv6BgpVariable;
        /// <summary>
        /// Connected
        /// </summary>
        public readonly bool AdvertiseIpv6Connected;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AdvertiseIpv6ConnectedVariable;
        /// <summary>
        /// EIGRP
        /// </summary>
        public readonly bool AdvertiseIpv6Eigrp;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AdvertiseIpv6EigrpVariable;
        /// <summary>
        /// ISIS
        /// </summary>
        public readonly bool AdvertiseIpv6Isis;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AdvertiseIpv6IsisVariable;
        /// <summary>
        /// LISP
        /// </summary>
        public readonly bool AdvertiseIpv6Lisp;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AdvertiseIpv6LispVariable;
        /// <summary>
        /// OSPF
        /// </summary>
        public readonly bool AdvertiseIpv6Ospf;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AdvertiseIpv6OspfVariable;
        /// <summary>
        /// Static
        /// </summary>
        public readonly bool AdvertiseIpv6Static;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AdvertiseIpv6StaticVariable;
        /// <summary>
        /// Advertisement Interval (seconds)
        /// </summary>
        public readonly int AdvertisementInterval;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AdvertisementIntervalVariable;
        /// <summary>
        /// The description of the Feature
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Set maximum number of OMP paths to install in cEdge route table
        /// </summary>
        public readonly int EcmpLimit;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string EcmpLimitVariable;
        /// <summary>
        /// EOR Timer
        /// </summary>
        public readonly int EorTimer;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string EorTimerVariable;
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        public readonly string FeatureProfileId;
        /// <summary>
        /// Graceful Restart for OMP
        /// </summary>
        public readonly bool GracefulRestart;
        /// <summary>
        /// Graceful Restart Timer (seconds)
        /// </summary>
        public readonly int GracefulRestartTimer;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string GracefulRestartTimerVariable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string GracefulRestartVariable;
        /// <summary>
        /// Hold Time (seconds)
        /// </summary>
        public readonly int Holdtime;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string HoldtimeVariable;
        /// <summary>
        /// The id of the Feature
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Treat hierarchical and direct (secondary region) paths equally
        /// </summary>
        public readonly bool IgnoreRegionPathLength;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IgnoreRegionPathLengthVariable;
        /// <summary>
        /// The name of the Feature
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// OMP Admin Distance IPv4
        /// </summary>
        public readonly int OmpAdminDistanceIpv4;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string OmpAdminDistanceIpv4Variable;
        /// <summary>
        /// OMP Admin Distance IPv6
        /// </summary>
        public readonly int OmpAdminDistanceIpv6;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string OmpAdminDistanceIpv6Variable;
        /// <summary>
        /// Overlay AS Number
        /// </summary>
        public readonly int OverlayAs;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string OverlayAsVariable;
        /// <summary>
        /// Number of Paths Advertised per Prefix
        /// </summary>
        public readonly int PathsAdvertisedPerPrefix;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PathsAdvertisedPerPrefixVariable;
        /// <summary>
        /// Shutdown
        /// </summary>
        public readonly bool Shutdown;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ShutdownVariable;
        /// <summary>
        /// Site Types
        /// </summary>
        public readonly ImmutableArray<string> SiteTypes;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SiteTypesVariable;
        /// <summary>
        /// Transport Gateway Path Behavior
        /// </summary>
        public readonly string TransportGateway;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TransportGatewayVariable;
        /// <summary>
        /// The version of the Feature
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetSystemOmpFeatureResult(
            bool advertiseIpv4Bgp,

            string advertiseIpv4BgpVariable,

            bool advertiseIpv4Connected,

            string advertiseIpv4ConnectedVariable,

            bool advertiseIpv4Eigrp,

            string advertiseIpv4EigrpVariable,

            bool advertiseIpv4Isis,

            string advertiseIpv4IsisVariable,

            bool advertiseIpv4Lisp,

            string advertiseIpv4LispVariable,

            bool advertiseIpv4Ospf,

            bool advertiseIpv4OspfV3,

            string advertiseIpv4OspfV3Variable,

            string advertiseIpv4OspfVariable,

            bool advertiseIpv4Static,

            string advertiseIpv4StaticVariable,

            bool advertiseIpv6Bgp,

            string advertiseIpv6BgpVariable,

            bool advertiseIpv6Connected,

            string advertiseIpv6ConnectedVariable,

            bool advertiseIpv6Eigrp,

            string advertiseIpv6EigrpVariable,

            bool advertiseIpv6Isis,

            string advertiseIpv6IsisVariable,

            bool advertiseIpv6Lisp,

            string advertiseIpv6LispVariable,

            bool advertiseIpv6Ospf,

            string advertiseIpv6OspfVariable,

            bool advertiseIpv6Static,

            string advertiseIpv6StaticVariable,

            int advertisementInterval,

            string advertisementIntervalVariable,

            string description,

            int ecmpLimit,

            string ecmpLimitVariable,

            int eorTimer,

            string eorTimerVariable,

            string featureProfileId,

            bool gracefulRestart,

            int gracefulRestartTimer,

            string gracefulRestartTimerVariable,

            string gracefulRestartVariable,

            int holdtime,

            string holdtimeVariable,

            string id,

            bool ignoreRegionPathLength,

            string ignoreRegionPathLengthVariable,

            string name,

            int ompAdminDistanceIpv4,

            string ompAdminDistanceIpv4Variable,

            int ompAdminDistanceIpv6,

            string ompAdminDistanceIpv6Variable,

            int overlayAs,

            string overlayAsVariable,

            int pathsAdvertisedPerPrefix,

            string pathsAdvertisedPerPrefixVariable,

            bool shutdown,

            string shutdownVariable,

            ImmutableArray<string> siteTypes,

            string siteTypesVariable,

            string transportGateway,

            string transportGatewayVariable,

            int version)
        {
            AdvertiseIpv4Bgp = advertiseIpv4Bgp;
            AdvertiseIpv4BgpVariable = advertiseIpv4BgpVariable;
            AdvertiseIpv4Connected = advertiseIpv4Connected;
            AdvertiseIpv4ConnectedVariable = advertiseIpv4ConnectedVariable;
            AdvertiseIpv4Eigrp = advertiseIpv4Eigrp;
            AdvertiseIpv4EigrpVariable = advertiseIpv4EigrpVariable;
            AdvertiseIpv4Isis = advertiseIpv4Isis;
            AdvertiseIpv4IsisVariable = advertiseIpv4IsisVariable;
            AdvertiseIpv4Lisp = advertiseIpv4Lisp;
            AdvertiseIpv4LispVariable = advertiseIpv4LispVariable;
            AdvertiseIpv4Ospf = advertiseIpv4Ospf;
            AdvertiseIpv4OspfV3 = advertiseIpv4OspfV3;
            AdvertiseIpv4OspfV3Variable = advertiseIpv4OspfV3Variable;
            AdvertiseIpv4OspfVariable = advertiseIpv4OspfVariable;
            AdvertiseIpv4Static = advertiseIpv4Static;
            AdvertiseIpv4StaticVariable = advertiseIpv4StaticVariable;
            AdvertiseIpv6Bgp = advertiseIpv6Bgp;
            AdvertiseIpv6BgpVariable = advertiseIpv6BgpVariable;
            AdvertiseIpv6Connected = advertiseIpv6Connected;
            AdvertiseIpv6ConnectedVariable = advertiseIpv6ConnectedVariable;
            AdvertiseIpv6Eigrp = advertiseIpv6Eigrp;
            AdvertiseIpv6EigrpVariable = advertiseIpv6EigrpVariable;
            AdvertiseIpv6Isis = advertiseIpv6Isis;
            AdvertiseIpv6IsisVariable = advertiseIpv6IsisVariable;
            AdvertiseIpv6Lisp = advertiseIpv6Lisp;
            AdvertiseIpv6LispVariable = advertiseIpv6LispVariable;
            AdvertiseIpv6Ospf = advertiseIpv6Ospf;
            AdvertiseIpv6OspfVariable = advertiseIpv6OspfVariable;
            AdvertiseIpv6Static = advertiseIpv6Static;
            AdvertiseIpv6StaticVariable = advertiseIpv6StaticVariable;
            AdvertisementInterval = advertisementInterval;
            AdvertisementIntervalVariable = advertisementIntervalVariable;
            Description = description;
            EcmpLimit = ecmpLimit;
            EcmpLimitVariable = ecmpLimitVariable;
            EorTimer = eorTimer;
            EorTimerVariable = eorTimerVariable;
            FeatureProfileId = featureProfileId;
            GracefulRestart = gracefulRestart;
            GracefulRestartTimer = gracefulRestartTimer;
            GracefulRestartTimerVariable = gracefulRestartTimerVariable;
            GracefulRestartVariable = gracefulRestartVariable;
            Holdtime = holdtime;
            HoldtimeVariable = holdtimeVariable;
            Id = id;
            IgnoreRegionPathLength = ignoreRegionPathLength;
            IgnoreRegionPathLengthVariable = ignoreRegionPathLengthVariable;
            Name = name;
            OmpAdminDistanceIpv4 = ompAdminDistanceIpv4;
            OmpAdminDistanceIpv4Variable = ompAdminDistanceIpv4Variable;
            OmpAdminDistanceIpv6 = ompAdminDistanceIpv6;
            OmpAdminDistanceIpv6Variable = ompAdminDistanceIpv6Variable;
            OverlayAs = overlayAs;
            OverlayAsVariable = overlayAsVariable;
            PathsAdvertisedPerPrefix = pathsAdvertisedPerPrefix;
            PathsAdvertisedPerPrefixVariable = pathsAdvertisedPerPrefixVariable;
            Shutdown = shutdown;
            ShutdownVariable = shutdownVariable;
            SiteTypes = siteTypes;
            SiteTypesVariable = siteTypesVariable;
            TransportGateway = transportGateway;
            TransportGatewayVariable = transportGatewayVariable;
            Version = version;
        }
    }
}
