// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetFeatureDeviceTemplate
    {
        /// <summary>
        /// This data source can read the Feature Device Template .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetFeatureDeviceTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFeatureDeviceTemplateResult> InvokeAsync(GetFeatureDeviceTemplateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFeatureDeviceTemplateResult>("sdwan:index/getFeatureDeviceTemplate:getFeatureDeviceTemplate", args ?? new GetFeatureDeviceTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Feature Device Template .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetFeatureDeviceTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFeatureDeviceTemplateResult> Invoke(GetFeatureDeviceTemplateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFeatureDeviceTemplateResult>("sdwan:index/getFeatureDeviceTemplate:getFeatureDeviceTemplate", args ?? new GetFeatureDeviceTemplateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Feature Device Template .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetFeatureDeviceTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFeatureDeviceTemplateResult> Invoke(GetFeatureDeviceTemplateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFeatureDeviceTemplateResult>("sdwan:index/getFeatureDeviceTemplate:getFeatureDeviceTemplate", args ?? new GetFeatureDeviceTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFeatureDeviceTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the object
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetFeatureDeviceTemplateArgs()
        {
        }
        public static new GetFeatureDeviceTemplateArgs Empty => new GetFeatureDeviceTemplateArgs();
    }

    public sealed class GetFeatureDeviceTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the object
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetFeatureDeviceTemplateInvokeArgs()
        {
        }
        public static new GetFeatureDeviceTemplateInvokeArgs Empty => new GetFeatureDeviceTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetFeatureDeviceTemplateResult
    {
        /// <summary>
        /// The description of the device template
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The device role
        /// </summary>
        public readonly string DeviceRole;
        /// <summary>
        /// The device type (e.g., `vedge-ISR-4331`)
        /// </summary>
        public readonly string DeviceType;
        /// <summary>
        /// List of general templates
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFeatureDeviceTemplateGeneralTemplateResult> GeneralTemplates;
        /// <summary>
        /// The id of the object
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the device template
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The policy ID
        /// </summary>
        public readonly string PolicyId;
        /// <summary>
        /// The policy version
        /// </summary>
        public readonly int PolicyVersion;
        /// <summary>
        /// The security policy ID
        /// </summary>
        public readonly string SecurityPolicyId;
        /// <summary>
        /// The security policy version
        /// </summary>
        public readonly int SecurityPolicyVersion;
        /// <summary>
        /// The version of the object
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetFeatureDeviceTemplateResult(
            string description,

            string deviceRole,

            string deviceType,

            ImmutableArray<Outputs.GetFeatureDeviceTemplateGeneralTemplateResult> generalTemplates,

            string id,

            string name,

            string policyId,

            int policyVersion,

            string securityPolicyId,

            int securityPolicyVersion,

            int version)
        {
            Description = description;
            DeviceRole = deviceRole;
            DeviceType = deviceType;
            GeneralTemplates = generalTemplates;
            Id = id;
            Name = name;
            PolicyId = policyId;
            PolicyVersion = policyVersion;
            SecurityPolicyId = securityPolicyId;
            SecurityPolicyVersion = securityPolicyVersion;
            Version = version;
        }
    }
}
