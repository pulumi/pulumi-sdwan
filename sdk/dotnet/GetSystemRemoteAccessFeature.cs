// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetSystemRemoteAccessFeature
    {
        /// <summary>
        /// This data source can read the System Remote Access Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetSystemRemoteAccessFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSystemRemoteAccessFeatureResult> InvokeAsync(GetSystemRemoteAccessFeatureArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSystemRemoteAccessFeatureResult>("sdwan:index/getSystemRemoteAccessFeature:getSystemRemoteAccessFeature", args ?? new GetSystemRemoteAccessFeatureArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the System Remote Access Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetSystemRemoteAccessFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSystemRemoteAccessFeatureResult> Invoke(GetSystemRemoteAccessFeatureInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSystemRemoteAccessFeatureResult>("sdwan:index/getSystemRemoteAccessFeature:getSystemRemoteAccessFeature", args ?? new GetSystemRemoteAccessFeatureInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSystemRemoteAccessFeatureArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public string FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Feature
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetSystemRemoteAccessFeatureArgs()
        {
        }
        public static new GetSystemRemoteAccessFeatureArgs Empty => new GetSystemRemoteAccessFeatureArgs();
    }

    public sealed class GetSystemRemoteAccessFeatureInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Feature
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetSystemRemoteAccessFeatureInvokeArgs()
        {
        }
        public static new GetSystemRemoteAccessFeatureInvokeArgs Empty => new GetSystemRemoteAccessFeatureInvokeArgs();
    }


    [OutputType]
    public sealed class GetSystemRemoteAccessFeatureResult
    {
        public readonly string AaaDeriveNameFromPeerDomain;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AaaDeriveNameFromPeerDomainVariable;
        public readonly string AaaDeriveNameFromPeerIdentity;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AaaDeriveNameFromPeerIdentityVariable;
        /// <summary>
        /// Enable Accounting
        /// </summary>
        public readonly bool AaaEnableAccounting;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AaaEnableAccountingVariable;
        public readonly string AaaSpecifyNamePolicyName;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AaaSpecifyNamePolicyNameVariable;
        public readonly string AaaSpecifyNamePolicyPassword;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AaaSpecifyNamePolicyPasswordVariable;
        public readonly string AnyConnectEapAuthenticationType;
        /// <summary>
        /// Enabled SSL VPN
        /// </summary>
        public readonly bool ConnectionTypeSsl;
        /// <summary>
        /// The description of the Feature
        /// </summary>
        public readonly string Description;
        public readonly bool EnableCertificateListCheck;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string EnableCertificateListCheckVariable;
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        public readonly string FeatureProfileId;
        /// <summary>
        /// The id of the Feature
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Anti-DOS Threshold
        /// </summary>
        public readonly int Ikev2AntiDosThreshold;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ikev2AntiDosThresholdVariable;
        public readonly string Ikev2LocalIkeIdentityType;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ikev2LocalIkeIdentityTypeVariable;
        public readonly string Ikev2LocalIkeIdentityValue;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ikev2LocalIkeIdentityValueVariable;
        /// <summary>
        /// Security Association Lifetime in Seconds
        /// </summary>
        public readonly int Ikev2SecurityAssociationLifetime;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ikev2SecurityAssociationLifetimeVariable;
        /// <summary>
        /// security Association Lifetime
        /// </summary>
        public readonly int IpsecAntiReplayWindowSize;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IpsecAntiReplayWindowSizeVariable;
        /// <summary>
        /// Enable Anti-Replay
        /// </summary>
        public readonly bool IpsecEnableAntiReplay;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IpsecEnableAntiReplayVariable;
        /// <summary>
        /// security Association Lifetime
        /// </summary>
        public readonly bool IpsecEnablePerfectFowardSecrecy;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IpsecEnablePerfectFowardSecrecyVariable;
        /// <summary>
        /// Security Association Lifetime in Seconds
        /// </summary>
        public readonly int IpsecSecurityAssociationLifetime;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IpsecSecurityAssociationLifetimeVariable;
        /// <summary>
        /// IPv4 Pool Size
        /// </summary>
        public readonly int Ipv4PoolSize;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4PoolSizeVariable;
        /// <summary>
        /// IPv6 Pool Size
        /// </summary>
        public readonly int Ipv6PoolSize;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv6PoolSizeVariable;
        /// <summary>
        /// The name of the Feature
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// PSK Pre Shared Key
        /// </summary>
        public readonly string PskAuthenticationPreSharedKey;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PskAuthenticationPreSharedKeyVariable;
        /// <summary>
        /// PSK Selection
        /// </summary>
        public readonly string PskAuthenticationType;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PskAuthenticationTypeVariable;
        public readonly string RadiusGroupName;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string RadiusGroupNameVariable;
        /// <summary>
        /// The version of the Feature
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetSystemRemoteAccessFeatureResult(
            string aaaDeriveNameFromPeerDomain,

            string aaaDeriveNameFromPeerDomainVariable,

            string aaaDeriveNameFromPeerIdentity,

            string aaaDeriveNameFromPeerIdentityVariable,

            bool aaaEnableAccounting,

            string aaaEnableAccountingVariable,

            string aaaSpecifyNamePolicyName,

            string aaaSpecifyNamePolicyNameVariable,

            string aaaSpecifyNamePolicyPassword,

            string aaaSpecifyNamePolicyPasswordVariable,

            string anyConnectEapAuthenticationType,

            bool connectionTypeSsl,

            string description,

            bool enableCertificateListCheck,

            string enableCertificateListCheckVariable,

            string featureProfileId,

            string id,

            int ikev2AntiDosThreshold,

            string ikev2AntiDosThresholdVariable,

            string ikev2LocalIkeIdentityType,

            string ikev2LocalIkeIdentityTypeVariable,

            string ikev2LocalIkeIdentityValue,

            string ikev2LocalIkeIdentityValueVariable,

            int ikev2SecurityAssociationLifetime,

            string ikev2SecurityAssociationLifetimeVariable,

            int ipsecAntiReplayWindowSize,

            string ipsecAntiReplayWindowSizeVariable,

            bool ipsecEnableAntiReplay,

            string ipsecEnableAntiReplayVariable,

            bool ipsecEnablePerfectFowardSecrecy,

            string ipsecEnablePerfectFowardSecrecyVariable,

            int ipsecSecurityAssociationLifetime,

            string ipsecSecurityAssociationLifetimeVariable,

            int ipv4PoolSize,

            string ipv4PoolSizeVariable,

            int ipv6PoolSize,

            string ipv6PoolSizeVariable,

            string name,

            string pskAuthenticationPreSharedKey,

            string pskAuthenticationPreSharedKeyVariable,

            string pskAuthenticationType,

            string pskAuthenticationTypeVariable,

            string radiusGroupName,

            string radiusGroupNameVariable,

            int version)
        {
            AaaDeriveNameFromPeerDomain = aaaDeriveNameFromPeerDomain;
            AaaDeriveNameFromPeerDomainVariable = aaaDeriveNameFromPeerDomainVariable;
            AaaDeriveNameFromPeerIdentity = aaaDeriveNameFromPeerIdentity;
            AaaDeriveNameFromPeerIdentityVariable = aaaDeriveNameFromPeerIdentityVariable;
            AaaEnableAccounting = aaaEnableAccounting;
            AaaEnableAccountingVariable = aaaEnableAccountingVariable;
            AaaSpecifyNamePolicyName = aaaSpecifyNamePolicyName;
            AaaSpecifyNamePolicyNameVariable = aaaSpecifyNamePolicyNameVariable;
            AaaSpecifyNamePolicyPassword = aaaSpecifyNamePolicyPassword;
            AaaSpecifyNamePolicyPasswordVariable = aaaSpecifyNamePolicyPasswordVariable;
            AnyConnectEapAuthenticationType = anyConnectEapAuthenticationType;
            ConnectionTypeSsl = connectionTypeSsl;
            Description = description;
            EnableCertificateListCheck = enableCertificateListCheck;
            EnableCertificateListCheckVariable = enableCertificateListCheckVariable;
            FeatureProfileId = featureProfileId;
            Id = id;
            Ikev2AntiDosThreshold = ikev2AntiDosThreshold;
            Ikev2AntiDosThresholdVariable = ikev2AntiDosThresholdVariable;
            Ikev2LocalIkeIdentityType = ikev2LocalIkeIdentityType;
            Ikev2LocalIkeIdentityTypeVariable = ikev2LocalIkeIdentityTypeVariable;
            Ikev2LocalIkeIdentityValue = ikev2LocalIkeIdentityValue;
            Ikev2LocalIkeIdentityValueVariable = ikev2LocalIkeIdentityValueVariable;
            Ikev2SecurityAssociationLifetime = ikev2SecurityAssociationLifetime;
            Ikev2SecurityAssociationLifetimeVariable = ikev2SecurityAssociationLifetimeVariable;
            IpsecAntiReplayWindowSize = ipsecAntiReplayWindowSize;
            IpsecAntiReplayWindowSizeVariable = ipsecAntiReplayWindowSizeVariable;
            IpsecEnableAntiReplay = ipsecEnableAntiReplay;
            IpsecEnableAntiReplayVariable = ipsecEnableAntiReplayVariable;
            IpsecEnablePerfectFowardSecrecy = ipsecEnablePerfectFowardSecrecy;
            IpsecEnablePerfectFowardSecrecyVariable = ipsecEnablePerfectFowardSecrecyVariable;
            IpsecSecurityAssociationLifetime = ipsecSecurityAssociationLifetime;
            IpsecSecurityAssociationLifetimeVariable = ipsecSecurityAssociationLifetimeVariable;
            Ipv4PoolSize = ipv4PoolSize;
            Ipv4PoolSizeVariable = ipv4PoolSizeVariable;
            Ipv6PoolSize = ipv6PoolSize;
            Ipv6PoolSizeVariable = ipv6PoolSizeVariable;
            Name = name;
            PskAuthenticationPreSharedKey = pskAuthenticationPreSharedKey;
            PskAuthenticationPreSharedKeyVariable = pskAuthenticationPreSharedKeyVariable;
            PskAuthenticationType = pskAuthenticationType;
            PskAuthenticationTypeVariable = pskAuthenticationTypeVariable;
            RadiusGroupName = radiusGroupName;
            RadiusGroupNameVariable = radiusGroupNameVariable;
            Version = version;
        }
    }
}
