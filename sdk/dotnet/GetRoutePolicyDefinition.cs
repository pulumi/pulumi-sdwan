// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetRoutePolicyDefinition
    {
        /// <summary>
        /// This data source can read the Route Policy Definition .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetRoutePolicyDefinition.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRoutePolicyDefinitionResult> InvokeAsync(GetRoutePolicyDefinitionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRoutePolicyDefinitionResult>("sdwan:index/getRoutePolicyDefinition:getRoutePolicyDefinition", args ?? new GetRoutePolicyDefinitionArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Route Policy Definition .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetRoutePolicyDefinition.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRoutePolicyDefinitionResult> Invoke(GetRoutePolicyDefinitionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutePolicyDefinitionResult>("sdwan:index/getRoutePolicyDefinition:getRoutePolicyDefinition", args ?? new GetRoutePolicyDefinitionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Route Policy Definition .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetRoutePolicyDefinition.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRoutePolicyDefinitionResult> Invoke(GetRoutePolicyDefinitionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutePolicyDefinitionResult>("sdwan:index/getRoutePolicyDefinition:getRoutePolicyDefinition", args ?? new GetRoutePolicyDefinitionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRoutePolicyDefinitionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the object
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetRoutePolicyDefinitionArgs()
        {
        }
        public static new GetRoutePolicyDefinitionArgs Empty => new GetRoutePolicyDefinitionArgs();
    }

    public sealed class GetRoutePolicyDefinitionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the object
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetRoutePolicyDefinitionInvokeArgs()
        {
        }
        public static new GetRoutePolicyDefinitionInvokeArgs Empty => new GetRoutePolicyDefinitionInvokeArgs();
    }


    [OutputType]
    public sealed class GetRoutePolicyDefinitionResult
    {
        /// <summary>
        /// Default action, either `accept` or `reject`
        /// </summary>
        public readonly string DefaultAction;
        /// <summary>
        /// The description of the policy definition
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The id of the object
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the policy definition
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of ACL sequences
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRoutePolicyDefinitionSequenceResult> Sequences;
        /// <summary>
        /// Type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The version of the object
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetRoutePolicyDefinitionResult(
            string defaultAction,

            string description,

            string id,

            string name,

            ImmutableArray<Outputs.GetRoutePolicyDefinitionSequenceResult> sequences,

            string type,

            int version)
        {
            DefaultAction = defaultAction;
            Description = description;
            Id = id;
            Name = name;
            Sequences = sequences;
            Type = type;
            Version = version;
        }
    }
}
