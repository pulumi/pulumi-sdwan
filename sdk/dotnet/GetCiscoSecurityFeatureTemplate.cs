// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetCiscoSecurityFeatureTemplate
    {
        /// <summary>
        /// This data source can read the Cisco Security feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoSecurityFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCiscoSecurityFeatureTemplateResult> InvokeAsync(GetCiscoSecurityFeatureTemplateArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCiscoSecurityFeatureTemplateResult>("sdwan:index/getCiscoSecurityFeatureTemplate:getCiscoSecurityFeatureTemplate", args ?? new GetCiscoSecurityFeatureTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Cisco Security feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoSecurityFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCiscoSecurityFeatureTemplateResult> Invoke(GetCiscoSecurityFeatureTemplateInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCiscoSecurityFeatureTemplateResult>("sdwan:index/getCiscoSecurityFeatureTemplate:getCiscoSecurityFeatureTemplate", args ?? new GetCiscoSecurityFeatureTemplateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Cisco Security feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoSecurityFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCiscoSecurityFeatureTemplateResult> Invoke(GetCiscoSecurityFeatureTemplateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCiscoSecurityFeatureTemplateResult>("sdwan:index/getCiscoSecurityFeatureTemplate:getCiscoSecurityFeatureTemplate", args ?? new GetCiscoSecurityFeatureTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCiscoSecurityFeatureTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetCiscoSecurityFeatureTemplateArgs()
        {
        }
        public static new GetCiscoSecurityFeatureTemplateArgs Empty => new GetCiscoSecurityFeatureTemplateArgs();
    }

    public sealed class GetCiscoSecurityFeatureTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetCiscoSecurityFeatureTemplateInvokeArgs()
        {
        }
        public static new GetCiscoSecurityFeatureTemplateInvokeArgs Empty => new GetCiscoSecurityFeatureTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetCiscoSecurityFeatureTemplateResult
    {
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AuthenticationTypeVariable;
        /// <summary>
        /// Set the authentication type for DTLS connections
        /// </summary>
        public readonly ImmutableArray<string> AuthenticationTypes;
        /// <summary>
        /// The description of the feature template
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// List of supported device types
        /// </summary>
        public readonly ImmutableArray<string> DeviceTypes;
        /// <summary>
        /// Extended Anti-Replay Window
        /// </summary>
        public readonly int ExtendedArWindow;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ExtendedArWindowVariable;
        /// <summary>
        /// The id of the feature template
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IntegrityTypeVariable;
        /// <summary>
        /// Set the authentication type for DTLS connections
        /// </summary>
        public readonly ImmutableArray<string> IntegrityTypes;
        /// <summary>
        /// Configure a Keychain
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCiscoSecurityFeatureTemplateKeychainResult> Keychains;
        /// <summary>
        /// Configure a Key
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCiscoSecurityFeatureTemplateKeyResult> Keys;
        /// <summary>
        /// The name of the feature template
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Enable or disable IPsec pairwise-keying
        /// </summary>
        public readonly bool PairwiseKeying;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PairwiseKeyingVariable;
        /// <summary>
        /// Set how often to change the AES key for DTLS connections
        /// </summary>
        public readonly int RekeyInterval;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string RekeyIntervalVariable;
        /// <summary>
        /// Set the sliding replay window size
        /// </summary>
        public readonly string ReplayWindow;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ReplayWindowVariable;
        /// <summary>
        /// The template type
        /// </summary>
        public readonly string TemplateType;
        /// <summary>
        /// The version of the feature template
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetCiscoSecurityFeatureTemplateResult(
            string authenticationTypeVariable,

            ImmutableArray<string> authenticationTypes,

            string description,

            ImmutableArray<string> deviceTypes,

            int extendedArWindow,

            string extendedArWindowVariable,

            string id,

            string integrityTypeVariable,

            ImmutableArray<string> integrityTypes,

            ImmutableArray<Outputs.GetCiscoSecurityFeatureTemplateKeychainResult> keychains,

            ImmutableArray<Outputs.GetCiscoSecurityFeatureTemplateKeyResult> keys,

            string name,

            bool pairwiseKeying,

            string pairwiseKeyingVariable,

            int rekeyInterval,

            string rekeyIntervalVariable,

            string replayWindow,

            string replayWindowVariable,

            string templateType,

            int version)
        {
            AuthenticationTypeVariable = authenticationTypeVariable;
            AuthenticationTypes = authenticationTypes;
            Description = description;
            DeviceTypes = deviceTypes;
            ExtendedArWindow = extendedArWindow;
            ExtendedArWindowVariable = extendedArWindowVariable;
            Id = id;
            IntegrityTypeVariable = integrityTypeVariable;
            IntegrityTypes = integrityTypes;
            Keychains = keychains;
            Keys = keys;
            Name = name;
            PairwiseKeying = pairwiseKeying;
            PairwiseKeyingVariable = pairwiseKeyingVariable;
            RekeyInterval = rekeyInterval;
            RekeyIntervalVariable = rekeyIntervalVariable;
            ReplayWindow = replayWindow;
            ReplayWindowVariable = replayWindowVariable;
            TemplateType = templateType;
            Version = version;
        }
    }
}
