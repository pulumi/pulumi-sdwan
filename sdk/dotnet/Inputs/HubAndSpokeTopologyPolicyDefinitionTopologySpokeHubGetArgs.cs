// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Inputs
{

    public sealed class HubAndSpokeTopologyPolicyDefinitionTopologySpokeHubGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("ipv4PrefixListIds")]
        private InputList<string>? _ipv4PrefixListIds;

        /// <summary>
        /// List of IPv4 prefix list IDs
        /// </summary>
        public InputList<string> Ipv4PrefixListIds
        {
            get => _ipv4PrefixListIds ?? (_ipv4PrefixListIds = new InputList<string>());
            set => _ipv4PrefixListIds = value;
        }

        [Input("ipv6PrefixListIds")]
        private InputList<string>? _ipv6PrefixListIds;

        /// <summary>
        /// List of IPv6 prefix list IDs
        /// </summary>
        public InputList<string> Ipv6PrefixListIds
        {
            get => _ipv6PrefixListIds ?? (_ipv6PrefixListIds = new InputList<string>());
            set => _ipv6PrefixListIds = value;
        }

        /// <summary>
        /// Preference, multiple of 10 (for example 70, 80, 90, 100). The higher the value the higher the priority of the associated hub (required when `all_hubs_are_equal` is 'false')
        /// </summary>
        [Input("preference")]
        public Input<string>? Preference { get; set; }

        /// <summary>
        /// Site list ID
        /// </summary>
        [Input("siteListId")]
        public Input<string>? SiteListId { get; set; }

        /// <summary>
        /// Site list version
        /// </summary>
        [Input("siteListVersion")]
        public Input<int>? SiteListVersion { get; set; }

        public HubAndSpokeTopologyPolicyDefinitionTopologySpokeHubGetArgs()
        {
        }
        public static new HubAndSpokeTopologyPolicyDefinitionTopologySpokeHubGetArgs Empty => new HubAndSpokeTopologyPolicyDefinitionTopologySpokeHubGetArgs();
    }
}
