// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Inputs
{

    public sealed class ServiceWirelessLanFeatureSsidGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set admin state
        ///   - Default value: `True`
        /// </summary>
        [Input("adminState")]
        public Input<bool>? AdminState { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("adminStateVariable")]
        public Input<string>? AdminStateVariable { get; set; }

        /// <summary>
        /// Enable broadcast SSID
        ///   - Default value: `True`
        /// </summary>
        [Input("broadcastSsid")]
        public Input<bool>? BroadcastSsid { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("broadcastSsidVariable")]
        public Input<string>? BroadcastSsidVariable { get; set; }

        /// <summary>
        /// Set passphrase, Attribute conditional on `SecurityType` being equal to `Personal`
        /// </summary>
        [Input("passphrase")]
        public Input<string>? Passphrase { get; set; }

        /// <summary>
        /// Variable name, Attribute conditional on `SecurityType` being equal to `Personal`
        /// </summary>
        [Input("passphraseVariable")]
        public Input<string>? PassphraseVariable { get; set; }

        /// <summary>
        /// Select QoS profile
        ///   - Choices: `Platinum`, `Gold`, `Silver`, `Bronze`
        ///   - Default value: `Silver`
        /// </summary>
        [Input("qosProfile")]
        public Input<string>? QosProfile { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("qosProfileVariable")]
        public Input<string>? QosProfileVariable { get; set; }

        /// <summary>
        /// Select radio type
        ///   - Choices: `24ghz`, `5ghz`, `All`
        ///   - Default value: `All`
        /// </summary>
        [Input("radioType")]
        public Input<string>? RadioType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("radioTypeVariable")]
        public Input<string>? RadioTypeVariable { get; set; }

        /// <summary>
        /// Set RADIUS server IP, Attribute conditional on `SecurityType` being equal to `Enterprise`
        /// </summary>
        [Input("radiusServerIp")]
        public Input<string>? RadiusServerIp { get; set; }

        /// <summary>
        /// Variable name, Attribute conditional on `SecurityType` being equal to `Enterprise`
        /// </summary>
        [Input("radiusServerIpVariable")]
        public Input<string>? RadiusServerIpVariable { get; set; }

        /// <summary>
        /// Set RADIUS server authentication port, Attribute conditional on `SecurityType` being equal to `Enterprise`
        ///   - Range: `1`-`65535`
        ///   - Default value: `1812`
        /// </summary>
        [Input("radiusServerPort")]
        public Input<int>? RadiusServerPort { get; set; }

        /// <summary>
        /// Variable name, Attribute conditional on `SecurityType` being equal to `Enterprise`
        /// </summary>
        [Input("radiusServerPortVariable")]
        public Input<string>? RadiusServerPortVariable { get; set; }

        /// <summary>
        /// Set RADIUS server shared secret, Attribute conditional on `SecurityType` being equal to `Enterprise`
        /// </summary>
        [Input("radiusServerSecret")]
        public Input<string>? RadiusServerSecret { get; set; }

        /// <summary>
        /// Variable name, Attribute conditional on `SecurityType` being equal to `Enterprise`
        /// </summary>
        [Input("radiusServerSecretVariable")]
        public Input<string>? RadiusServerSecretVariable { get; set; }

        /// <summary>
        /// Select security type
        ///   - Choices: `Enterprise`, `Personal`, `Open`
        /// </summary>
        [Input("securityType")]
        public Input<string>? SecurityType { get; set; }

        /// <summary>
        /// Configure wlan SSID
        /// </summary>
        [Input("ssidName")]
        public Input<string>? SsidName { get; set; }

        /// <summary>
        /// Set VLAN ID
        ///   - Range: `1`-`4094`
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("vlanIdVariable")]
        public Input<string>? VlanIdVariable { get; set; }

        public ServiceWirelessLanFeatureSsidGetArgs()
        {
        }
        public static new ServiceWirelessLanFeatureSsidGetArgs Empty => new ServiceWirelessLanFeatureSsidGetArgs();
    }
}
