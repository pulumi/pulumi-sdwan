// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Inputs
{

    public sealed class ServiceSwitchportFeatureInterfaceGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set uni or bi directional authorization mode
        ///   - Choices: `both`, `in`
        /// </summary>
        [Input("controlDirection")]
        public Input<string>? ControlDirection { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("controlDirectionVariable")]
        public Input<string>? ControlDirectionVariable { get; set; }

        /// <summary>
        /// Set Critical VLAN
        ///   - Range: `1`-`4094`
        /// </summary>
        [Input("criticalVlan")]
        public Input<int>? CriticalVlan { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("criticalVlanVariable")]
        public Input<string>? CriticalVlanVariable { get; set; }

        /// <summary>
        /// Duplex mode
        ///   - Choices: `full`, `half`
        /// </summary>
        [Input("duplex")]
        public Input<string>? Duplex { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("duplexVariable")]
        public Input<string>? DuplexVariable { get; set; }

        /// <summary>
        /// Enable Periodic Reauthentication
        /// </summary>
        [Input("enablePeriodicReauth")]
        public Input<bool>? EnablePeriodicReauth { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("enablePeriodicReauthVariable")]
        public Input<string>? EnablePeriodicReauthVariable { get; set; }

        /// <summary>
        /// Enable Critical Voice VLAN
        /// </summary>
        [Input("enableVoice")]
        public Input<bool>? EnableVoice { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("enableVoiceVariable")]
        public Input<string>? EnableVoiceVariable { get; set; }

        /// <summary>
        /// Set vlan to drop non-802.1x enabled clients into if client is not in MAB list
        ///   - Range: `1`-`4094`
        /// </summary>
        [Input("guestVlan")]
        public Input<int>? GuestVlan { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("guestVlanVariable")]
        public Input<string>? GuestVlanVariable { get; set; }

        /// <summary>
        /// Set host mode
        ///   - Choices: `single-host`, `multi-auth`, `multi-host`, `multi-domain`
        /// </summary>
        [Input("hostMode")]
        public Input<string>? HostMode { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("hostModeVariable")]
        public Input<string>? HostModeVariable { get; set; }

        /// <summary>
        /// Periodic Reauthentication Inactivity Timeout (in seconds)
        ///   - Range: `1`-`65535`
        /// </summary>
        [Input("inactivity")]
        public Input<int>? Inactivity { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("inactivityVariable")]
        public Input<string>? InactivityVariable { get; set; }

        /// <summary>
        /// Set Interface name
        /// </summary>
        [Input("interfaceName")]
        public Input<string>? InterfaceName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("interfaceNameVariable")]
        public Input<string>? InterfaceNameVariable { get; set; }

        /// <summary>
        /// MAC Authentication Bypass
        /// </summary>
        [Input("macAuthenticationBypass")]
        public Input<bool>? MacAuthenticationBypass { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("macAuthenticationBypassVariable")]
        public Input<string>? MacAuthenticationBypassVariable { get; set; }

        /// <summary>
        /// Set type of switch port: access/trunk
        ///   - Choices: `access`, `trunk`
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// Set 802.1x Interface Pae Type
        /// </summary>
        [Input("paeEnable")]
        public Input<bool>? PaeEnable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("paeEnableVariable")]
        public Input<string>? PaeEnableVariable { get; set; }

        /// <summary>
        /// Set Port-Control Mode
        ///   - Choices: `auto`, `force-unauthorized`, `force-authorized`
        /// </summary>
        [Input("portControl")]
        public Input<string>? PortControl { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("portControlVariable")]
        public Input<string>? PortControlVariable { get; set; }

        /// <summary>
        /// Periodic Reauthentication Interval (in seconds)
        ///   - Range: `1`-`1073741823`
        ///   - Default value: `3600`
        /// </summary>
        [Input("reauthentication")]
        public Input<int>? Reauthentication { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("reauthenticationVariable")]
        public Input<string>? ReauthenticationVariable { get; set; }

        /// <summary>
        /// Set Restricted VLAN ID
        ///   - Range: `1`-`4094`
        /// </summary>
        [Input("restrictedVlan")]
        public Input<int>? RestrictedVlan { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("restrictedVlanVariable")]
        public Input<string>? RestrictedVlanVariable { get; set; }

        /// <summary>
        /// Administrative state
        ///   - Default value: `true`
        /// </summary>
        [Input("shutdown")]
        public Input<bool>? Shutdown { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("shutdownVariable")]
        public Input<string>? ShutdownVariable { get; set; }

        /// <summary>
        /// Set interface speed
        ///   - Choices: `10`, `100`, `1000`, `2500`, `10000`
        /// </summary>
        [Input("speed")]
        public Input<string>? Speed { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("speedVariable")]
        public Input<string>? SpeedVariable { get; set; }

        /// <summary>
        /// Set VLAN identifier associated with bridging domain
        ///   - Range: `1`-`4094`
        /// </summary>
        [Input("switchportAccessVlan")]
        public Input<int>? SwitchportAccessVlan { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("switchportAccessVlanVariable")]
        public Input<string>? SwitchportAccessVlanVariable { get; set; }

        /// <summary>
        /// Configure VLAN IDs used with the trunk
        /// </summary>
        [Input("switchportTrunkAllowedVlans")]
        public Input<string>? SwitchportTrunkAllowedVlans { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("switchportTrunkAllowedVlansVariable")]
        public Input<string>? SwitchportTrunkAllowedVlansVariable { get; set; }

        /// <summary>
        /// Configure VLAN ID used for native VLAN
        ///   - Range: `1`-`4094`
        /// </summary>
        [Input("switchportTrunkNativeVlan")]
        public Input<int>? SwitchportTrunkNativeVlan { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("switchportTrunkNativeVlanVariable")]
        public Input<string>? SwitchportTrunkNativeVlanVariable { get; set; }

        /// <summary>
        /// Configure Voice Vlan
        ///   - Range: `1`-`4094`
        /// </summary>
        [Input("voiceVlan")]
        public Input<int>? VoiceVlan { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("voiceVlanVariable")]
        public Input<string>? VoiceVlanVariable { get; set; }

        public ServiceSwitchportFeatureInterfaceGetArgs()
        {
        }
        public static new ServiceSwitchportFeatureInterfaceGetArgs Empty => new ServiceSwitchportFeatureInterfaceGetArgs();
    }
}
