// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Inputs
{

    public sealed class VpnInterfaceDslPppoaFeatureTemplatePvcGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Dialer Pool corresponding to this pvc
        ///   - Range: `1`-`255`
        /// </summary>
        [Input("atmDialerPoolMember")]
        public Input<int>? AtmDialerPoolMember { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("atmDialerPoolMemberVariable")]
        public Input<string>? AtmDialerPoolMemberVariable { get; set; }

        /// <summary>
        /// dialer
        /// </summary>
        [Input("atmEncapsulationAal5mux")]
        public Input<bool>? AtmEncapsulationAal5mux { get; set; }

        /// <summary>
        /// aal5nlpid
        /// </summary>
        [Input("atmEncapsulationAal5nlpid")]
        public Input<bool>? AtmEncapsulationAal5nlpid { get; set; }

        /// <summary>
        /// aal5snap
        /// </summary>
        [Input("atmEncapsulationAal5snap")]
        public Input<bool>? AtmEncapsulationAal5snap { get; set; }

        /// <summary>
        /// Maximum Burst Size in Cells
        ///   - Range: `1`-`65535`
        /// </summary>
        [Input("atmVbrNrtMaximumBurstSize")]
        public Input<int>? AtmVbrNrtMaximumBurstSize { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("atmVbrNrtMaximumBurstSizeVariable")]
        public Input<string>? AtmVbrNrtMaximumBurstSizeVariable { get; set; }

        /// <summary>
        /// Peak Cell Rate in Kbps
        ///   - Range: `48`-`1015`
        /// </summary>
        [Input("atmVbrNrtPeakCellRate")]
        public Input<int>? AtmVbrNrtPeakCellRate { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("atmVbrNrtPeakCellRateVariable")]
        public Input<string>? AtmVbrNrtPeakCellRateVariable { get; set; }

        /// <summary>
        /// Peak Cell Rate in Kbps
        /// </summary>
        [Input("atmVbrNrtSustainableCellRate")]
        public Input<int>? AtmVbrNrtSustainableCellRate { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("atmVbrNrtSustainableCellRateVariable")]
        public Input<string>? AtmVbrNrtSustainableCellRateVariable { get; set; }

        /// <summary>
        /// Average Cell Rate in Kbps
        /// </summary>
        [Input("atmVbrRtAverageCellRate")]
        public Input<int>? AtmVbrRtAverageCellRate { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("atmVbrRtAverageCellRateVariable")]
        public Input<string>? AtmVbrRtAverageCellRateVariable { get; set; }

        /// <summary>
        /// Maximum Burst Size in number of Cells
        ///   - Range: `1`-`65535`
        /// </summary>
        [Input("atmVbrRtMaximumBurstSize")]
        public Input<int>? AtmVbrRtMaximumBurstSize { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("atmVbrRtMaximumBurstSizeVariable")]
        public Input<string>? AtmVbrRtMaximumBurstSizeVariable { get; set; }

        /// <summary>
        /// Peak Cell Rate in Kbps
        ///   - Range: `48`-`25000`
        /// </summary>
        [Input("atmVbrRtPeakCellRate")]
        public Input<int>? AtmVbrRtPeakCellRate { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("atmVbrRtPeakCellRateVariable")]
        public Input<string>? AtmVbrRtPeakCellRateVariable { get; set; }

        /// <summary>
        /// VPI/VCI
        /// </summary>
        [Input("atmVpiAndVci")]
        public Input<string>? AtmVpiAndVci { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("atmVpiAndVciVariable")]
        public Input<string>? AtmVpiAndVciVariable { get; set; }

        /// <summary>
        /// Indicates if list item is considered optional.
        /// </summary>
        [Input("optional")]
        public Input<bool>? Optional { get; set; }

        public VpnInterfaceDslPppoaFeatureTemplatePvcGetArgs()
        {
        }
        public static new VpnInterfaceDslPppoaFeatureTemplatePvcGetArgs Empty => new VpnInterfaceDslPppoaFeatureTemplatePvcGetArgs();
    }
}
