// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Inputs
{

    public sealed class CiscoSecureInternetGatewayFeatureTemplateServiceArgs : global::Pulumi.ResourceArgs
    {
        [Input("interfacePairs")]
        private InputList<Inputs.CiscoSecureInternetGatewayFeatureTemplateServiceInterfacePairArgs>? _interfacePairs;

        /// <summary>
        /// Interface Pair for active and backup
        /// </summary>
        public InputList<Inputs.CiscoSecureInternetGatewayFeatureTemplateServiceInterfacePairArgs> InterfacePairs
        {
            get => _interfacePairs ?? (_interfacePairs = new InputList<Inputs.CiscoSecureInternetGatewayFeatureTemplateServiceInterfacePairArgs>());
            set => _interfacePairs = value;
        }

        /// <summary>
        /// Indicates if list item is considered optional.
        /// </summary>
        [Input("optional")]
        public Input<bool>? Optional { get; set; }

        /// <summary>
        /// Service Type
        ///   - Choices: `Sig`
        ///   - Default value: `Sig`
        /// </summary>
        [Input("serviceType")]
        public Input<string>? ServiceType { get; set; }

        /// <summary>
        /// Umbrella Primary Datacenter
        ///   - Default value: `Auto`
        /// </summary>
        [Input("umbrellaPrimaryDataCenter")]
        public Input<string>? UmbrellaPrimaryDataCenter { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("umbrellaPrimaryDataCenterVariable")]
        public Input<string>? UmbrellaPrimaryDataCenterVariable { get; set; }

        /// <summary>
        /// Umbrella Secondary Datacenter
        ///   - Default value: `Auto`
        /// </summary>
        [Input("umbrellaSecondaryDataCenter")]
        public Input<string>? UmbrellaSecondaryDataCenter { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("umbrellaSecondaryDataCenterVariable")]
        public Input<string>? UmbrellaSecondaryDataCenterVariable { get; set; }

        /// <summary>
        /// For first-time Acceptable User Policy behavior, block Internet access
        ///   - Default value: `False`
        /// </summary>
        [Input("zscalerAupBlockInternetUntilAccepted")]
        public Input<bool>? ZscalerAupBlockInternetUntilAccepted { get; set; }

        /// <summary>
        /// Enable Acceptable User Policy
        ///   - Default value: `False`
        /// </summary>
        [Input("zscalerAupEnabled")]
        public Input<bool>? ZscalerAupEnabled { get; set; }

        /// <summary>
        /// For first-time Acceptable User Policy behavior, force SSL inspection
        ///   - Default value: `False`
        /// </summary>
        [Input("zscalerAupForceSslInspection")]
        public Input<bool>? ZscalerAupForceSslInspection { get; set; }

        /// <summary>
        /// Custom Acceptable User Policy frequency in days
        ///   - Default value: `0`
        /// </summary>
        [Input("zscalerAupTimeout")]
        public Input<int>? ZscalerAupTimeout { get; set; }

        /// <summary>
        /// Enforce Authentication
        ///   - Default value: `False`
        /// </summary>
        [Input("zscalerAuthenticationRequired")]
        public Input<bool>? ZscalerAuthenticationRequired { get; set; }

        /// <summary>
        /// Enable Caution
        ///   - Default value: `False`
        /// </summary>
        [Input("zscalerCautionEnabled")]
        public Input<bool>? ZscalerCautionEnabled { get; set; }

        /// <summary>
        /// Firewall enabled
        ///   - Default value: `False`
        /// </summary>
        [Input("zscalerFirewallEnabled")]
        public Input<bool>? ZscalerFirewallEnabled { get; set; }

        /// <summary>
        /// Enable IPS Control
        ///   - Default value: `False`
        /// </summary>
        [Input("zscalerIpsControlEnabled")]
        public Input<bool>? ZscalerIpsControlEnabled { get; set; }

        /// <summary>
        /// Zscaler location name (optional)
        ///   - Default value: `Auto`
        /// </summary>
        [Input("zscalerLocationName")]
        public Input<string>? ZscalerLocationName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("zscalerLocationNameVariable")]
        public Input<string>? ZscalerLocationNameVariable { get; set; }

        /// <summary>
        /// Custom Primary Datacenter
        ///   - Default value: `Auto`
        /// </summary>
        [Input("zscalerPrimaryDataCenter")]
        public Input<string>? ZscalerPrimaryDataCenter { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("zscalerPrimaryDataCenterVariable")]
        public Input<string>? ZscalerPrimaryDataCenterVariable { get; set; }

        /// <summary>
        /// Custom Secondary Datacenter
        ///   - Default value: `Auto`
        /// </summary>
        [Input("zscalerSecondaryDataCenter")]
        public Input<string>? ZscalerSecondaryDataCenter { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("zscalerSecondaryDataCenterVariable")]
        public Input<string>? ZscalerSecondaryDataCenterVariable { get; set; }

        /// <summary>
        /// Display time unit
        ///   - Choices: `MINUTE`, `HOUR`, `DAY`
        ///   - Default value: `MINUTE`
        /// </summary>
        [Input("zscalerSurrogateDisplayTimeUnit")]
        public Input<string>? ZscalerSurrogateDisplayTimeUnit { get; set; }

        /// <summary>
        /// Idle time to disassociation
        ///   - Default value: `0`
        /// </summary>
        [Input("zscalerSurrogateIdleTime")]
        public Input<int>? ZscalerSurrogateIdleTime { get; set; }

        /// <summary>
        /// Enable Surrogate IP
        ///   - Default value: `False`
        /// </summary>
        [Input("zscalerSurrogateIp")]
        public Input<bool>? ZscalerSurrogateIp { get; set; }

        /// <summary>
        /// Enforce Surrogate IP for known browsers
        ///   - Default value: `False`
        /// </summary>
        [Input("zscalerSurrogateIpEnforceForKnownBrowsers")]
        public Input<bool>? ZscalerSurrogateIpEnforceForKnownBrowsers { get; set; }

        /// <summary>
        /// Refresh time for re-validation of surrogacy in minutes
        ///   - Default value: `0`
        /// </summary>
        [Input("zscalerSurrogateRefreshTime")]
        public Input<int>? ZscalerSurrogateRefreshTime { get; set; }

        /// <summary>
        /// Refresh Time unit
        ///   - Choices: `MINUTE`, `HOUR`, `DAY`
        ///   - Default value: `MINUTE`
        /// </summary>
        [Input("zscalerSurrogateRefreshTimeUnit")]
        public Input<string>? ZscalerSurrogateRefreshTimeUnit { get; set; }

        /// <summary>
        /// XFF forwarding enabled
        ///   - Default value: `False`
        /// </summary>
        [Input("zscalerXffForward")]
        public Input<bool>? ZscalerXffForward { get; set; }

        public CiscoSecureInternetGatewayFeatureTemplateServiceArgs()
        {
        }
        public static new CiscoSecureInternetGatewayFeatureTemplateServiceArgs Empty => new CiscoSecureInternetGatewayFeatureTemplateServiceArgs();
    }
}
