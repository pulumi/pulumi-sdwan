// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Inputs
{

    public sealed class CiscoVpnFeatureTemplateNat64PoolGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Ending IP address of NAT pool range
        /// </summary>
        [Input("endAddress")]
        public Input<string>? EndAddress { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("endAddressVariable")]
        public Input<string>? EndAddressVariable { get; set; }

        /// <summary>
        /// Enable Route Leaking from Global VPN to this Service VPN
        ///   - Default value: `False`
        /// </summary>
        [Input("leakFromGlobal")]
        public Input<bool>? LeakFromGlobal { get; set; }

        /// <summary>
        /// Select protocol for route leaking
        ///   - Choices: `All`, `Static`, `Mobile`, `Connected`, `Rip`, `Odr`
        /// </summary>
        [Input("leakFromGlobalProtocol")]
        public Input<string>? LeakFromGlobalProtocol { get; set; }

        /// <summary>
        /// Enable Route Leaking from this Service VPN to Global VPN
        ///   - Default value: `False`
        /// </summary>
        [Input("leakToGlobal")]
        public Input<bool>? LeakToGlobal { get; set; }

        /// <summary>
        /// NAT64 Pool name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Indicates if list item is considered optional.
        /// </summary>
        [Input("optional")]
        public Input<bool>? Optional { get; set; }

        /// <summary>
        /// NAT 64 Overload Option
        ///   - Default value: `False`
        /// </summary>
        [Input("overload")]
        public Input<bool>? Overload { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("overloadVariable")]
        public Input<string>? OverloadVariable { get; set; }

        /// <summary>
        /// Starting IP address of NAT pool range
        /// </summary>
        [Input("startAddress")]
        public Input<string>? StartAddress { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("startAddressVariable")]
        public Input<string>? StartAddressVariable { get; set; }

        public CiscoVpnFeatureTemplateNat64PoolGetArgs()
        {
        }
        public static new CiscoVpnFeatureTemplateNat64PoolGetArgs Empty => new CiscoVpnFeatureTemplateNat64PoolGetArgs();
    }
}
