// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Inputs
{

    public sealed class VpnInterfaceMultilinkFeatureTemplateMultilinkInterfaceGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("channelGroupLists")]
        private InputList<Inputs.VpnInterfaceMultilinkFeatureTemplateMultilinkInterfaceChannelGroupListGetArgs>? _channelGroupLists;

        /// <summary>
        /// Channel Group List
        /// </summary>
        public InputList<Inputs.VpnInterfaceMultilinkFeatureTemplateMultilinkInterfaceChannelGroupListGetArgs> ChannelGroupLists
        {
            get => _channelGroupLists ?? (_channelGroupLists = new InputList<Inputs.VpnInterfaceMultilinkFeatureTemplateMultilinkInterfaceChannelGroupListGetArgs>());
            set => _channelGroupLists = value;
        }

        /// <summary>
        /// Description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("descriptionVariable")]
        public Input<string>? DescriptionVariable { get; set; }

        /// <summary>
        /// Framing
        /// </summary>
        [Input("framing")]
        public Input<string>? Framing { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("framingVariable")]
        public Input<string>? FramingVariable { get; set; }

        /// <summary>
        /// Card Type
        ///   - Choices: `E1`, `T1`, `NIM-2T`, `NIM-4T`
        /// </summary>
        [Input("interfaceType")]
        public Input<string>? InterfaceType { get; set; }

        /// <summary>
        /// Internal
        ///   - Default value: `False`
        /// </summary>
        [Input("internal")]
        public Input<bool>? Internal { get; set; }

        /// <summary>
        /// Line Mode
        ///   - Choices: `Secondary`, `Primary`
        /// </summary>
        [Input("lineMode")]
        public Input<string>? LineMode { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("lineModeVariable")]
        public Input<string>? LineModeVariable { get; set; }

        /// <summary>
        /// LineCode
        ///   - Choices: `Ami`, `B8zs`, `Hdb3`
        /// </summary>
        [Input("linecode")]
        public Input<string>? Linecode { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("linecodeVariable")]
        public Input<string>? LinecodeVariable { get; set; }

        /// <summary>
        /// Indicates if list item is considered optional.
        /// </summary>
        [Input("optional")]
        public Input<bool>? Optional { get; set; }

        /// <summary>
        /// Set length for long
        /// </summary>
        [Input("setLengthForLong")]
        public Input<string>? SetLengthForLong { get; set; }

        /// <summary>
        /// Set Length for short
        /// </summary>
        [Input("setLengthForShort")]
        public Input<string>? SetLengthForShort { get; set; }

        /// <summary>
        /// Slot number
        /// </summary>
        [Input("slot")]
        public Input<string>? Slot { get; set; }

        public VpnInterfaceMultilinkFeatureTemplateMultilinkInterfaceGetArgs()
        {
        }
        public static new VpnInterfaceMultilinkFeatureTemplateMultilinkInterfaceGetArgs Empty => new VpnInterfaceMultilinkFeatureTemplateMultilinkInterfaceGetArgs();
    }
}
