// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Inputs
{

    public sealed class ServiceLanVpnFeatureIpv4StaticRouteArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IPv4 Route Gateway DHCP
        /// </summary>
        [Input("gatewayDhcp")]
        public Input<bool>? GatewayDhcp { get; set; }

        /// <summary>
        /// IP Address
        /// </summary>
        [Input("networkAddress")]
        public Input<string>? NetworkAddress { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("networkAddressVariable")]
        public Input<string>? NetworkAddressVariable { get; set; }

        [Input("nextHopWithTrackers")]
        private InputList<Inputs.ServiceLanVpnFeatureIpv4StaticRouteNextHopWithTrackerArgs>? _nextHopWithTrackers;

        /// <summary>
        /// IPv4 Route Gateway Next Hop with Tracker
        /// </summary>
        public InputList<Inputs.ServiceLanVpnFeatureIpv4StaticRouteNextHopWithTrackerArgs> NextHopWithTrackers
        {
            get => _nextHopWithTrackers ?? (_nextHopWithTrackers = new InputList<Inputs.ServiceLanVpnFeatureIpv4StaticRouteNextHopWithTrackerArgs>());
            set => _nextHopWithTrackers = value;
        }

        [Input("nextHops")]
        private InputList<Inputs.ServiceLanVpnFeatureIpv4StaticRouteNextHopArgs>? _nextHops;

        /// <summary>
        /// IPv4 Route Gateway Next Hop
        /// </summary>
        public InputList<Inputs.ServiceLanVpnFeatureIpv4StaticRouteNextHopArgs> NextHops
        {
            get => _nextHops ?? (_nextHops = new InputList<Inputs.ServiceLanVpnFeatureIpv4StaticRouteNextHopArgs>());
            set => _nextHops = value;
        }

        /// <summary>
        /// IPv4 Route Gateway Next Hop
        /// </summary>
        [Input("null0")]
        public Input<bool>? Null0 { get; set; }

        /// <summary>
        /// Subnet Mask
        ///   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        /// </summary>
        [Input("subnetMask")]
        public Input<string>? SubnetMask { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("subnetMaskVariable")]
        public Input<string>? SubnetMaskVariable { get; set; }

        /// <summary>
        /// IPv4 Route Gateway VPN
        /// </summary>
        [Input("vpn")]
        public Input<bool>? Vpn { get; set; }

        public ServiceLanVpnFeatureIpv4StaticRouteArgs()
        {
        }
        public static new ServiceLanVpnFeatureIpv4StaticRouteArgs Empty => new ServiceLanVpnFeatureIpv4StaticRouteArgs();
    }
}
