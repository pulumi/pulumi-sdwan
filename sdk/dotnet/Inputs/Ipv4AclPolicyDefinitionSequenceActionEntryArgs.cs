// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Inputs
{

    public sealed class Ipv4AclPolicyDefinitionSequenceActionEntryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Class map ID, Attribute conditional on `Type` being equal to `Class`
        /// </summary>
        [Input("classMapId")]
        public Input<string>? ClassMapId { get; set; }

        /// <summary>
        /// Class map version
        /// </summary>
        [Input("classMapVersion")]
        public Input<int>? ClassMapVersion { get; set; }

        /// <summary>
        /// Counter name, Attribute conditional on `Type` being equal to `Count`
        /// </summary>
        [Input("counterName")]
        public Input<string>? CounterName { get; set; }

        /// <summary>
        /// Enable logging, Attribute conditional on `Type` being equal to `Log`
        /// </summary>
        [Input("log")]
        public Input<bool>? Log { get; set; }

        /// <summary>
        /// Mirror ID, Attribute conditional on `Type` being equal to `Mirror`
        /// </summary>
        [Input("mirrorId")]
        public Input<string>? MirrorId { get; set; }

        /// <summary>
        /// Mirror version
        /// </summary>
        [Input("mirrorVersion")]
        public Input<int>? MirrorVersion { get; set; }

        /// <summary>
        /// Policer ID, Attribute conditional on `Type` being equal to `Policer`
        /// </summary>
        [Input("policerId")]
        public Input<string>? PolicerId { get; set; }

        /// <summary>
        /// Policer version
        /// </summary>
        [Input("policerVersion")]
        public Input<int>? PolicerVersion { get; set; }

        [Input("setParameters")]
        private InputList<Inputs.Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs>? _setParameters;

        /// <summary>
        /// List of set parameters, Attribute conditional on `Type` being equal to `Set`
        /// </summary>
        public InputList<Inputs.Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs> SetParameters
        {
            get => _setParameters ?? (_setParameters = new InputList<Inputs.Ipv4AclPolicyDefinitionSequenceActionEntrySetParameterArgs>());
            set => _setParameters = value;
        }

        /// <summary>
        /// Type of action entry
        ///   - Choices: `Class`, `Count`, `Set`, `Log`, `Mirror`, `Policer`
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public Ipv4AclPolicyDefinitionSequenceActionEntryArgs()
        {
        }
        public static new Ipv4AclPolicyDefinitionSequenceActionEntryArgs Empty => new Ipv4AclPolicyDefinitionSequenceActionEntryArgs();
    }
}
