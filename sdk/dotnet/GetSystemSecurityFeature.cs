// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetSystemSecurityFeature
    {
        /// <summary>
        /// This data source can read the System Security Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetSystemSecurityFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSystemSecurityFeatureResult> InvokeAsync(GetSystemSecurityFeatureArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSystemSecurityFeatureResult>("sdwan:index/getSystemSecurityFeature:getSystemSecurityFeature", args ?? new GetSystemSecurityFeatureArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the System Security Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetSystemSecurityFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSystemSecurityFeatureResult> Invoke(GetSystemSecurityFeatureInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSystemSecurityFeatureResult>("sdwan:index/getSystemSecurityFeature:getSystemSecurityFeature", args ?? new GetSystemSecurityFeatureInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the System Security Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetSystemSecurityFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSystemSecurityFeatureResult> Invoke(GetSystemSecurityFeatureInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSystemSecurityFeatureResult>("sdwan:index/getSystemSecurityFeature:getSystemSecurityFeature", args ?? new GetSystemSecurityFeatureInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSystemSecurityFeatureArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public string FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Feature
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetSystemSecurityFeatureArgs()
        {
        }
        public static new GetSystemSecurityFeatureArgs Empty => new GetSystemSecurityFeatureArgs();
    }

    public sealed class GetSystemSecurityFeatureInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Feature
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetSystemSecurityFeatureInvokeArgs()
        {
        }
        public static new GetSystemSecurityFeatureInvokeArgs Empty => new GetSystemSecurityFeatureInvokeArgs();
    }


    [OutputType]
    public sealed class GetSystemSecurityFeatureResult
    {
        /// <summary>
        /// Set the sliding replay window size
        /// </summary>
        public readonly string AntiReplayWindow;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AntiReplayWindowVariable;
        /// <summary>
        /// The description of the Feature
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Extended Anti-Replay Window
        /// </summary>
        public readonly int ExtendedAntiReplayWindow;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ExtendedAntiReplayWindowVariable;
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        public readonly string FeatureProfileId;
        /// <summary>
        /// The id of the Feature
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IntegrityTypeVariable;
        /// <summary>
        /// Set the authentication type for DTLS connections
        /// </summary>
        public readonly ImmutableArray<string> IntegrityTypes;
        /// <summary>
        /// Enable or disable IPsec pairwise-keying
        /// </summary>
        public readonly bool IpsecPairwiseKeying;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IpsecPairwiseKeyingVariable;
        /// <summary>
        /// Configure a Keychain
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSystemSecurityFeatureKeychainResult> Keychains;
        /// <summary>
        /// Configure a Key
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSystemSecurityFeatureKeyResult> Keys;
        /// <summary>
        /// The name of the Feature
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Set how often to change the AES key for DTLS connections
        /// </summary>
        public readonly int Rekey;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string RekeyVariable;
        /// <summary>
        /// The version of the Feature
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetSystemSecurityFeatureResult(
            string antiReplayWindow,

            string antiReplayWindowVariable,

            string description,

            int extendedAntiReplayWindow,

            string extendedAntiReplayWindowVariable,

            string featureProfileId,

            string id,

            string integrityTypeVariable,

            ImmutableArray<string> integrityTypes,

            bool ipsecPairwiseKeying,

            string ipsecPairwiseKeyingVariable,

            ImmutableArray<Outputs.GetSystemSecurityFeatureKeychainResult> keychains,

            ImmutableArray<Outputs.GetSystemSecurityFeatureKeyResult> keys,

            string name,

            int rekey,

            string rekeyVariable,

            int version)
        {
            AntiReplayWindow = antiReplayWindow;
            AntiReplayWindowVariable = antiReplayWindowVariable;
            Description = description;
            ExtendedAntiReplayWindow = extendedAntiReplayWindow;
            ExtendedAntiReplayWindowVariable = extendedAntiReplayWindowVariable;
            FeatureProfileId = featureProfileId;
            Id = id;
            IntegrityTypeVariable = integrityTypeVariable;
            IntegrityTypes = integrityTypes;
            IpsecPairwiseKeying = ipsecPairwiseKeying;
            IpsecPairwiseKeyingVariable = ipsecPairwiseKeyingVariable;
            Keychains = keychains;
            Keys = keys;
            Name = name;
            Rekey = rekey;
            RekeyVariable = rekeyVariable;
            Version = version;
        }
    }
}
