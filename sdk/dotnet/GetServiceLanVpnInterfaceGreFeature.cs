// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetServiceLanVpnInterfaceGreFeature
    {
        /// <summary>
        /// This data source can read the Service LAN VPN Interface GRE Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetServiceLanVpnInterfaceGreFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///         ServiceLanVpnFeatureId = "140331f6-5418-4755-a059-13c77eb96037",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetServiceLanVpnInterfaceGreFeatureResult> InvokeAsync(GetServiceLanVpnInterfaceGreFeatureArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceLanVpnInterfaceGreFeatureResult>("sdwan:index/getServiceLanVpnInterfaceGreFeature:getServiceLanVpnInterfaceGreFeature", args ?? new GetServiceLanVpnInterfaceGreFeatureArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Service LAN VPN Interface GRE Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetServiceLanVpnInterfaceGreFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///         ServiceLanVpnFeatureId = "140331f6-5418-4755-a059-13c77eb96037",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetServiceLanVpnInterfaceGreFeatureResult> Invoke(GetServiceLanVpnInterfaceGreFeatureInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceLanVpnInterfaceGreFeatureResult>("sdwan:index/getServiceLanVpnInterfaceGreFeature:getServiceLanVpnInterfaceGreFeature", args ?? new GetServiceLanVpnInterfaceGreFeatureInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Service LAN VPN Interface GRE Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetServiceLanVpnInterfaceGreFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///         ServiceLanVpnFeatureId = "140331f6-5418-4755-a059-13c77eb96037",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetServiceLanVpnInterfaceGreFeatureResult> Invoke(GetServiceLanVpnInterfaceGreFeatureInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceLanVpnInterfaceGreFeatureResult>("sdwan:index/getServiceLanVpnInterfaceGreFeature:getServiceLanVpnInterfaceGreFeature", args ?? new GetServiceLanVpnInterfaceGreFeatureInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceLanVpnInterfaceGreFeatureArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public string FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Feature
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// Service LAN VPN Feature ID
        /// </summary>
        [Input("serviceLanVpnFeatureId", required: true)]
        public string ServiceLanVpnFeatureId { get; set; } = null!;

        public GetServiceLanVpnInterfaceGreFeatureArgs()
        {
        }
        public static new GetServiceLanVpnInterfaceGreFeatureArgs Empty => new GetServiceLanVpnInterfaceGreFeatureArgs();
    }

    public sealed class GetServiceLanVpnInterfaceGreFeatureInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Feature
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Service LAN VPN Feature ID
        /// </summary>
        [Input("serviceLanVpnFeatureId", required: true)]
        public Input<string> ServiceLanVpnFeatureId { get; set; } = null!;

        public GetServiceLanVpnInterfaceGreFeatureInvokeArgs()
        {
        }
        public static new GetServiceLanVpnInterfaceGreFeatureInvokeArgs Empty => new GetServiceLanVpnInterfaceGreFeatureInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceLanVpnInterfaceGreFeatureResult
    {
        /// <summary>
        /// Enable Application Tunnel Type
        /// </summary>
        public readonly string ApplicationTunnelType;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ApplicationTunnelTypeVariable;
        /// <summary>
        /// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
        /// </summary>
        public readonly bool ClearDontFragment;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ClearDontFragmentVariable;
        /// <summary>
        /// The description of the Feature
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        public readonly string FeatureProfileId;
        /// <summary>
        /// The id of the Feature
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Interface description
        /// </summary>
        public readonly string InterfaceDescription;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string InterfaceDescriptionVariable;
        /// <summary>
        /// Interface name (1..255)
        /// </summary>
        public readonly string InterfaceName;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string InterfaceNameVariable;
        /// <summary>
        /// Interface MTU \n\n, in bytes
        /// </summary>
        public readonly int IpMtu;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IpMtuVariable;
        public readonly string Ipv4Address;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4AddressVariable;
        public readonly string Ipv4SubnetMask;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4SubnetMaskVariable;
        /// <summary>
        /// The name of the Feature
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Service LAN VPN Feature ID
        /// </summary>
        public readonly string ServiceLanVpnFeatureId;
        /// <summary>
        /// Administrative state
        /// </summary>
        public readonly bool Shutdown;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ShutdownVariable;
        /// <summary>
        /// TCP MSS on SYN packets, in bytes
        /// </summary>
        public readonly int TcpMss;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TcpMssVariable;
        /// <summary>
        /// Tunnel destination IP Address
        /// </summary>
        public readonly string TunnelDestinationIpv4Address;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelDestinationIpv4AddressVariable;
        /// <summary>
        /// \n\n Interface name, can't be Loopback interface
        /// </summary>
        public readonly string TunnelRouteViaLoopback;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelRouteViaLoopbackVariable;
        /// <summary>
        /// \n\n Interface name
        /// </summary>
        public readonly string TunnelSourceInterface;
        /// <summary>
        /// \n\n Interface name
        /// </summary>
        public readonly string TunnelSourceInterfaceLoopback;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelSourceInterfaceLoopbackVariable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelSourceInterfaceVariable;
        /// <summary>
        /// Tunnel source IP Address
        /// </summary>
        public readonly string TunnelSourceIpv4Address;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelSourceIpv4AddressVariable;
        /// <summary>
        /// The version of the Feature
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetServiceLanVpnInterfaceGreFeatureResult(
            string applicationTunnelType,

            string applicationTunnelTypeVariable,

            bool clearDontFragment,

            string clearDontFragmentVariable,

            string description,

            string featureProfileId,

            string id,

            string interfaceDescription,

            string interfaceDescriptionVariable,

            string interfaceName,

            string interfaceNameVariable,

            int ipMtu,

            string ipMtuVariable,

            string ipv4Address,

            string ipv4AddressVariable,

            string ipv4SubnetMask,

            string ipv4SubnetMaskVariable,

            string name,

            string serviceLanVpnFeatureId,

            bool shutdown,

            string shutdownVariable,

            int tcpMss,

            string tcpMssVariable,

            string tunnelDestinationIpv4Address,

            string tunnelDestinationIpv4AddressVariable,

            string tunnelRouteViaLoopback,

            string tunnelRouteViaLoopbackVariable,

            string tunnelSourceInterface,

            string tunnelSourceInterfaceLoopback,

            string tunnelSourceInterfaceLoopbackVariable,

            string tunnelSourceInterfaceVariable,

            string tunnelSourceIpv4Address,

            string tunnelSourceIpv4AddressVariable,

            int version)
        {
            ApplicationTunnelType = applicationTunnelType;
            ApplicationTunnelTypeVariable = applicationTunnelTypeVariable;
            ClearDontFragment = clearDontFragment;
            ClearDontFragmentVariable = clearDontFragmentVariable;
            Description = description;
            FeatureProfileId = featureProfileId;
            Id = id;
            InterfaceDescription = interfaceDescription;
            InterfaceDescriptionVariable = interfaceDescriptionVariable;
            InterfaceName = interfaceName;
            InterfaceNameVariable = interfaceNameVariable;
            IpMtu = ipMtu;
            IpMtuVariable = ipMtuVariable;
            Ipv4Address = ipv4Address;
            Ipv4AddressVariable = ipv4AddressVariable;
            Ipv4SubnetMask = ipv4SubnetMask;
            Ipv4SubnetMaskVariable = ipv4SubnetMaskVariable;
            Name = name;
            ServiceLanVpnFeatureId = serviceLanVpnFeatureId;
            Shutdown = shutdown;
            ShutdownVariable = shutdownVariable;
            TcpMss = tcpMss;
            TcpMssVariable = tcpMssVariable;
            TunnelDestinationIpv4Address = tunnelDestinationIpv4Address;
            TunnelDestinationIpv4AddressVariable = tunnelDestinationIpv4AddressVariable;
            TunnelRouteViaLoopback = tunnelRouteViaLoopback;
            TunnelRouteViaLoopbackVariable = tunnelRouteViaLoopbackVariable;
            TunnelSourceInterface = tunnelSourceInterface;
            TunnelSourceInterfaceLoopback = tunnelSourceInterfaceLoopback;
            TunnelSourceInterfaceLoopbackVariable = tunnelSourceInterfaceLoopbackVariable;
            TunnelSourceInterfaceVariable = tunnelSourceInterfaceVariable;
            TunnelSourceIpv4Address = tunnelSourceIpv4Address;
            TunnelSourceIpv4AddressVariable = tunnelSourceIpv4AddressVariable;
            Version = version;
        }
    }
}
