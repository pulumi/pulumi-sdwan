// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetTransportRoutingOspfFeature
    {
        /// <summary>
        /// This data source can read the Transport Routing OSPF Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetTransportRoutingOspfFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTransportRoutingOspfFeatureResult> InvokeAsync(GetTransportRoutingOspfFeatureArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTransportRoutingOspfFeatureResult>("sdwan:index/getTransportRoutingOspfFeature:getTransportRoutingOspfFeature", args ?? new GetTransportRoutingOspfFeatureArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Transport Routing OSPF Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetTransportRoutingOspfFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTransportRoutingOspfFeatureResult> Invoke(GetTransportRoutingOspfFeatureInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTransportRoutingOspfFeatureResult>("sdwan:index/getTransportRoutingOspfFeature:getTransportRoutingOspfFeature", args ?? new GetTransportRoutingOspfFeatureInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Transport Routing OSPF Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetTransportRoutingOspfFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTransportRoutingOspfFeatureResult> Invoke(GetTransportRoutingOspfFeatureInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTransportRoutingOspfFeatureResult>("sdwan:index/getTransportRoutingOspfFeature:getTransportRoutingOspfFeature", args ?? new GetTransportRoutingOspfFeatureInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTransportRoutingOspfFeatureArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public string FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Feature
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetTransportRoutingOspfFeatureArgs()
        {
        }
        public static new GetTransportRoutingOspfFeatureArgs Empty => new GetTransportRoutingOspfFeatureArgs();
    }

    public sealed class GetTransportRoutingOspfFeatureInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Feature
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetTransportRoutingOspfFeatureInvokeArgs()
        {
        }
        public static new GetTransportRoutingOspfFeatureInvokeArgs Empty => new GetTransportRoutingOspfFeatureInvokeArgs();
    }


    [OutputType]
    public sealed class GetTransportRoutingOspfFeatureResult
    {
        /// <summary>
        /// Configure OSPF area
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTransportRoutingOspfFeatureAreaResult> Areas;
        /// <summary>
        /// Distribute default external route into OSPF
        /// </summary>
        public readonly bool DefaultInformationOriginate;
        /// <summary>
        /// Always advertise default route
        /// </summary>
        public readonly bool DefaultInformationOriginateAlways;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DefaultInformationOriginateAlwaysVariable;
        /// <summary>
        /// Set metric used to generate default route \n\n
        /// </summary>
        public readonly int DefaultInformationOriginateMetric;
        /// <summary>
        /// Set default route type
        /// </summary>
        public readonly string DefaultInformationOriginateMetricType;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DefaultInformationOriginateMetricTypeVariable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DefaultInformationOriginateMetricVariable;
        /// <summary>
        /// The description of the Feature
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Set distance for external routes
        /// </summary>
        public readonly int DistanceExternal;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DistanceExternalVariable;
        /// <summary>
        /// Set distance for inter-area routes
        /// </summary>
        public readonly int DistanceInterArea;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DistanceInterAreaVariable;
        /// <summary>
        /// Set distance for intra-area routes
        /// </summary>
        public readonly int DistanceIntraArea;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DistanceIntraAreaVariable;
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        public readonly string FeatureProfileId;
        /// <summary>
        /// The id of the Feature
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Feature
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Redistribute routes
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTransportRoutingOspfFeatureRedistributeResult> Redistributes;
        /// <summary>
        /// Set reference bandwidth method to assign OSPF cost
        /// </summary>
        public readonly int ReferenceBandwidth;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ReferenceBandwidthVariable;
        /// <summary>
        /// Calculate summary route cost based on RFC 1583
        /// </summary>
        public readonly bool Rfc1583Compatible;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Rfc1583CompatibleVariable;
        public readonly string RoutePolicyId;
        /// <summary>
        /// Set OSPF router ID to override system IP address
        /// </summary>
        public readonly string RouterId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string RouterIdVariable;
        /// <summary>
        /// Advertise own router LSA with infinite distance
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTransportRoutingOspfFeatureRouterLsaResult> RouterLsas;
        /// <summary>
        /// Set delay from first change received until performing SPF calculation
        /// </summary>
        public readonly int SpfCalculationDelay;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SpfCalculationDelayVariable;
        /// <summary>
        /// Set initial hold time between consecutive SPF calculations
        /// </summary>
        public readonly int SpfInitialHoldTime;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SpfInitialHoldTimeVariable;
        /// <summary>
        /// Set maximum hold time between consecutive SPF calculations
        /// </summary>
        public readonly int SpfMaximumHoldTime;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SpfMaximumHoldTimeVariable;
        /// <summary>
        /// The version of the Feature
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetTransportRoutingOspfFeatureResult(
            ImmutableArray<Outputs.GetTransportRoutingOspfFeatureAreaResult> areas,

            bool defaultInformationOriginate,

            bool defaultInformationOriginateAlways,

            string defaultInformationOriginateAlwaysVariable,

            int defaultInformationOriginateMetric,

            string defaultInformationOriginateMetricType,

            string defaultInformationOriginateMetricTypeVariable,

            string defaultInformationOriginateMetricVariable,

            string description,

            int distanceExternal,

            string distanceExternalVariable,

            int distanceInterArea,

            string distanceInterAreaVariable,

            int distanceIntraArea,

            string distanceIntraAreaVariable,

            string featureProfileId,

            string id,

            string name,

            ImmutableArray<Outputs.GetTransportRoutingOspfFeatureRedistributeResult> redistributes,

            int referenceBandwidth,

            string referenceBandwidthVariable,

            bool rfc1583Compatible,

            string rfc1583CompatibleVariable,

            string routePolicyId,

            string routerId,

            string routerIdVariable,

            ImmutableArray<Outputs.GetTransportRoutingOspfFeatureRouterLsaResult> routerLsas,

            int spfCalculationDelay,

            string spfCalculationDelayVariable,

            int spfInitialHoldTime,

            string spfInitialHoldTimeVariable,

            int spfMaximumHoldTime,

            string spfMaximumHoldTimeVariable,

            int version)
        {
            Areas = areas;
            DefaultInformationOriginate = defaultInformationOriginate;
            DefaultInformationOriginateAlways = defaultInformationOriginateAlways;
            DefaultInformationOriginateAlwaysVariable = defaultInformationOriginateAlwaysVariable;
            DefaultInformationOriginateMetric = defaultInformationOriginateMetric;
            DefaultInformationOriginateMetricType = defaultInformationOriginateMetricType;
            DefaultInformationOriginateMetricTypeVariable = defaultInformationOriginateMetricTypeVariable;
            DefaultInformationOriginateMetricVariable = defaultInformationOriginateMetricVariable;
            Description = description;
            DistanceExternal = distanceExternal;
            DistanceExternalVariable = distanceExternalVariable;
            DistanceInterArea = distanceInterArea;
            DistanceInterAreaVariable = distanceInterAreaVariable;
            DistanceIntraArea = distanceIntraArea;
            DistanceIntraAreaVariable = distanceIntraAreaVariable;
            FeatureProfileId = featureProfileId;
            Id = id;
            Name = name;
            Redistributes = redistributes;
            ReferenceBandwidth = referenceBandwidth;
            ReferenceBandwidthVariable = referenceBandwidthVariable;
            Rfc1583Compatible = rfc1583Compatible;
            Rfc1583CompatibleVariable = rfc1583CompatibleVariable;
            RoutePolicyId = routePolicyId;
            RouterId = routerId;
            RouterIdVariable = routerIdVariable;
            RouterLsas = routerLsas;
            SpfCalculationDelay = spfCalculationDelay;
            SpfCalculationDelayVariable = spfCalculationDelayVariable;
            SpfInitialHoldTime = spfInitialHoldTime;
            SpfInitialHoldTimeVariable = spfInitialHoldTimeVariable;
            SpfMaximumHoldTime = spfMaximumHoldTime;
            SpfMaximumHoldTimeVariable = spfMaximumHoldTimeVariable;
            Version = version;
        }
    }
}
