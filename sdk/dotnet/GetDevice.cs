// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetDevice
    {
        /// <summary>
        /// This data source can read the Device .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetDevice.Invoke(new()
        ///     {
        ///         SerialNumber = "12B53B6E42654E01B98C77C347CE216E",
        ///         Name = "Controller01",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDeviceResult> InvokeAsync(GetDeviceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDeviceResult>("sdwan:index/getDevice:getDevice", args ?? new GetDeviceArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Device .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetDevice.Invoke(new()
        ///     {
        ///         SerialNumber = "12B53B6E42654E01B98C77C347CE216E",
        ///         Name = "Controller01",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDeviceResult> Invoke(GetDeviceInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeviceResult>("sdwan:index/getDevice:getDevice", args ?? new GetDeviceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeviceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The hostname of a device
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Serial number for device. Could be board or virtual identifier
        /// </summary>
        [Input("serialNumber")]
        public string? SerialNumber { get; set; }

        public GetDeviceArgs()
        {
        }
        public static new GetDeviceArgs Empty => new GetDeviceArgs();
    }

    public sealed class GetDeviceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The hostname of a device
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Serial number for device. Could be board or virtual identifier
        /// </summary>
        [Input("serialNumber")]
        public Input<string>? SerialNumber { get; set; }

        public GetDeviceInvokeArgs()
        {
        }
        public static new GetDeviceInvokeArgs Empty => new GetDeviceInvokeArgs();
    }


    [OutputType]
    public sealed class GetDeviceResult
    {
        /// <summary>
        /// List of returned devices
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeviceDeviceResult> Devices;
        /// <summary>
        /// The id of the object
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The hostname of a device
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Serial number for device. Could be board or virtual identifier
        /// </summary>
        public readonly string? SerialNumber;

        [OutputConstructor]
        private GetDeviceResult(
            ImmutableArray<Outputs.GetDeviceDeviceResult> devices,

            string id,

            string? name,

            string? serialNumber)
        {
            Devices = devices;
            Id = id;
            Name = name;
            SerialNumber = serialNumber;
        }
    }
}
