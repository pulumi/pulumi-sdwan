// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetOtherUcseFeature
    {
        /// <summary>
        /// This data source can read the Other UCSE Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetOtherUcseFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOtherUcseFeatureResult> InvokeAsync(GetOtherUcseFeatureArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOtherUcseFeatureResult>("sdwan:index/getOtherUcseFeature:getOtherUcseFeature", args ?? new GetOtherUcseFeatureArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Other UCSE Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetOtherUcseFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOtherUcseFeatureResult> Invoke(GetOtherUcseFeatureInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOtherUcseFeatureResult>("sdwan:index/getOtherUcseFeature:getOtherUcseFeature", args ?? new GetOtherUcseFeatureInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Other UCSE Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetOtherUcseFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOtherUcseFeatureResult> Invoke(GetOtherUcseFeatureInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOtherUcseFeatureResult>("sdwan:index/getOtherUcseFeature:getOtherUcseFeature", args ?? new GetOtherUcseFeatureInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOtherUcseFeatureArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public string FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Feature
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetOtherUcseFeatureArgs()
        {
        }
        public static new GetOtherUcseFeatureArgs Empty => new GetOtherUcseFeatureArgs();
    }

    public sealed class GetOtherUcseFeatureInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Feature
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetOtherUcseFeatureInvokeArgs()
        {
        }
        public static new GetOtherUcseFeatureInvokeArgs Empty => new GetOtherUcseFeatureInvokeArgs();
    }


    [OutputType]
    public sealed class GetOtherUcseFeatureResult
    {
        /// <summary>
        /// Dedicated
        /// </summary>
        public readonly bool AccessPortDedicated;
        public readonly string AccessPortSharedFailoverType;
        public readonly string AccessPortSharedType;
        /// <summary>
        /// Assign priority
        /// </summary>
        public readonly int AssignPriority;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AssignPriorityVariable;
        /// <summary>
        /// Bay
        /// </summary>
        public readonly int Bay;
        /// <summary>
        /// Assign default gateway
        /// </summary>
        public readonly string DefaultGateway;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DefaultGatewayVariable;
        /// <summary>
        /// The description of the Feature
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        public readonly string FeatureProfileId;
        /// <summary>
        /// The id of the Feature
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Interface name: GigabitEthernet0/&lt;&gt;/&lt;&gt; when present
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOtherUcseFeatureInterfaceResult> Interfaces;
        /// <summary>
        /// Assign IPv4 address
        /// </summary>
        public readonly string Ipv4Address;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4AddressVariable;
        /// <summary>
        /// The name of the Feature
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Slot
        /// </summary>
        public readonly int Slot;
        /// <summary>
        /// The version of the Feature
        /// </summary>
        public readonly int Version;
        /// <summary>
        /// Assign Vlan Id
        /// </summary>
        public readonly int VlanId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string VlanIdVariable;

        [OutputConstructor]
        private GetOtherUcseFeatureResult(
            bool accessPortDedicated,

            string accessPortSharedFailoverType,

            string accessPortSharedType,

            int assignPriority,

            string assignPriorityVariable,

            int bay,

            string defaultGateway,

            string defaultGatewayVariable,

            string description,

            string featureProfileId,

            string id,

            ImmutableArray<Outputs.GetOtherUcseFeatureInterfaceResult> interfaces,

            string ipv4Address,

            string ipv4AddressVariable,

            string name,

            int slot,

            int version,

            int vlanId,

            string vlanIdVariable)
        {
            AccessPortDedicated = accessPortDedicated;
            AccessPortSharedFailoverType = accessPortSharedFailoverType;
            AccessPortSharedType = accessPortSharedType;
            AssignPriority = assignPriority;
            AssignPriorityVariable = assignPriorityVariable;
            Bay = bay;
            DefaultGateway = defaultGateway;
            DefaultGatewayVariable = defaultGatewayVariable;
            Description = description;
            FeatureProfileId = featureProfileId;
            Id = id;
            Interfaces = interfaces;
            Ipv4Address = ipv4Address;
            Ipv4AddressVariable = ipv4AddressVariable;
            Name = name;
            Slot = slot;
            Version = version;
            VlanId = vlanId;
            VlanIdVariable = vlanIdVariable;
        }
    }
}
