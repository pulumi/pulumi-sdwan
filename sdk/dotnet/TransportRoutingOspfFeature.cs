// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a Transport Routing OSPF Feature.
    ///   - Minimum SD-WAN Manager version: `20.12.0`
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/transportRoutingOspfFeature:TransportRoutingOspfFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/transportRoutingOspfFeature:TransportRoutingOspfFeature")]
    public partial class TransportRoutingOspfFeature : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configure OSPF area
        /// </summary>
        [Output("areas")]
        public Output<ImmutableArray<Outputs.TransportRoutingOspfFeatureArea>> Areas { get; private set; } = null!;

        /// <summary>
        /// Distribute default external route into OSPF - Default value: `false`
        /// </summary>
        [Output("defaultInformationOriginate")]
        public Output<bool?> DefaultInformationOriginate { get; private set; } = null!;

        /// <summary>
        /// Always advertise default route - Default value: `false`
        /// </summary>
        [Output("defaultInformationOriginateAlways")]
        public Output<bool?> DefaultInformationOriginateAlways { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("defaultInformationOriginateAlwaysVariable")]
        public Output<string?> DefaultInformationOriginateAlwaysVariable { get; private set; } = null!;

        /// <summary>
        /// Set metric used to generate default route &lt;0..16777214&gt; - Range: `0`-`16777214`
        /// </summary>
        [Output("defaultInformationOriginateMetric")]
        public Output<int?> DefaultInformationOriginateMetric { get; private set; } = null!;

        /// <summary>
        /// Set default route type - Choices: `type1`, `type2`
        /// </summary>
        [Output("defaultInformationOriginateMetricType")]
        public Output<string?> DefaultInformationOriginateMetricType { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("defaultInformationOriginateMetricTypeVariable")]
        public Output<string?> DefaultInformationOriginateMetricTypeVariable { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("defaultInformationOriginateMetricVariable")]
        public Output<string?> DefaultInformationOriginateMetricVariable { get; private set; } = null!;

        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Set distance for external routes - Range: `1`-`255` - Default value: `110`
        /// </summary>
        [Output("distanceExternal")]
        public Output<int?> DistanceExternal { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("distanceExternalVariable")]
        public Output<string?> DistanceExternalVariable { get; private set; } = null!;

        /// <summary>
        /// Set distance for inter-area routes - Range: `1`-`255` - Default value: `110`
        /// </summary>
        [Output("distanceInterArea")]
        public Output<int?> DistanceInterArea { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("distanceInterAreaVariable")]
        public Output<string?> DistanceInterAreaVariable { get; private set; } = null!;

        /// <summary>
        /// Set distance for intra-area routes - Range: `1`-`255` - Default value: `110`
        /// </summary>
        [Output("distanceIntraArea")]
        public Output<int?> DistanceIntraArea { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("distanceIntraAreaVariable")]
        public Output<string?> DistanceIntraAreaVariable { get; private set; } = null!;

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Output("featureProfileId")]
        public Output<string> FeatureProfileId { get; private set; } = null!;

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Redistribute routes
        /// </summary>
        [Output("redistributes")]
        public Output<ImmutableArray<Outputs.TransportRoutingOspfFeatureRedistribute>> Redistributes { get; private set; } = null!;

        /// <summary>
        /// Set reference bandwidth method to assign OSPF cost - Range: `1`-`4294967` - Default value: `100`
        /// </summary>
        [Output("referenceBandwidth")]
        public Output<int?> ReferenceBandwidth { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("referenceBandwidthVariable")]
        public Output<string?> ReferenceBandwidthVariable { get; private set; } = null!;

        /// <summary>
        /// Calculate summary route cost based on RFC 1583 - Default value: `true`
        /// </summary>
        [Output("rfc1583Compatible")]
        public Output<bool?> Rfc1583Compatible { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("rfc1583CompatibleVariable")]
        public Output<string?> Rfc1583CompatibleVariable { get; private set; } = null!;

        [Output("routePolicyId")]
        public Output<string?> RoutePolicyId { get; private set; } = null!;

        /// <summary>
        /// Set OSPF router ID to override system IP address
        /// </summary>
        [Output("routerId")]
        public Output<string?> RouterId { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("routerIdVariable")]
        public Output<string?> RouterIdVariable { get; private set; } = null!;

        /// <summary>
        /// Advertise own router LSA with infinite distance
        /// </summary>
        [Output("routerLsas")]
        public Output<ImmutableArray<Outputs.TransportRoutingOspfFeatureRouterLsa>> RouterLsas { get; private set; } = null!;

        /// <summary>
        /// Set delay from first change received until performing SPF calculation - Range: `1`-`600000` - Default value: `200`
        /// </summary>
        [Output("spfCalculationDelay")]
        public Output<int?> SpfCalculationDelay { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("spfCalculationDelayVariable")]
        public Output<string?> SpfCalculationDelayVariable { get; private set; } = null!;

        /// <summary>
        /// Set initial hold time between consecutive SPF calculations - Range: `1`-`600000` - Default value: `1000`
        /// </summary>
        [Output("spfInitialHoldTime")]
        public Output<int?> SpfInitialHoldTime { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("spfInitialHoldTimeVariable")]
        public Output<string?> SpfInitialHoldTimeVariable { get; private set; } = null!;

        /// <summary>
        /// Set maximum hold time between consecutive SPF calculations - Range: `1`-`600000` - Default value: `10000`
        /// </summary>
        [Output("spfMaximumHoldTime")]
        public Output<int?> SpfMaximumHoldTime { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("spfMaximumHoldTimeVariable")]
        public Output<string?> SpfMaximumHoldTimeVariable { get; private set; } = null!;

        /// <summary>
        /// The version of the Feature
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a TransportRoutingOspfFeature resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TransportRoutingOspfFeature(string name, TransportRoutingOspfFeatureArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/transportRoutingOspfFeature:TransportRoutingOspfFeature", name, args ?? new TransportRoutingOspfFeatureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TransportRoutingOspfFeature(string name, Input<string> id, TransportRoutingOspfFeatureState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/transportRoutingOspfFeature:TransportRoutingOspfFeature", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TransportRoutingOspfFeature resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TransportRoutingOspfFeature Get(string name, Input<string> id, TransportRoutingOspfFeatureState? state = null, CustomResourceOptions? options = null)
        {
            return new TransportRoutingOspfFeature(name, id, state, options);
        }
    }

    public sealed class TransportRoutingOspfFeatureArgs : global::Pulumi.ResourceArgs
    {
        [Input("areas")]
        private InputList<Inputs.TransportRoutingOspfFeatureAreaArgs>? _areas;

        /// <summary>
        /// Configure OSPF area
        /// </summary>
        public InputList<Inputs.TransportRoutingOspfFeatureAreaArgs> Areas
        {
            get => _areas ?? (_areas = new InputList<Inputs.TransportRoutingOspfFeatureAreaArgs>());
            set => _areas = value;
        }

        /// <summary>
        /// Distribute default external route into OSPF - Default value: `false`
        /// </summary>
        [Input("defaultInformationOriginate")]
        public Input<bool>? DefaultInformationOriginate { get; set; }

        /// <summary>
        /// Always advertise default route - Default value: `false`
        /// </summary>
        [Input("defaultInformationOriginateAlways")]
        public Input<bool>? DefaultInformationOriginateAlways { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("defaultInformationOriginateAlwaysVariable")]
        public Input<string>? DefaultInformationOriginateAlwaysVariable { get; set; }

        /// <summary>
        /// Set metric used to generate default route &lt;0..16777214&gt; - Range: `0`-`16777214`
        /// </summary>
        [Input("defaultInformationOriginateMetric")]
        public Input<int>? DefaultInformationOriginateMetric { get; set; }

        /// <summary>
        /// Set default route type - Choices: `type1`, `type2`
        /// </summary>
        [Input("defaultInformationOriginateMetricType")]
        public Input<string>? DefaultInformationOriginateMetricType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("defaultInformationOriginateMetricTypeVariable")]
        public Input<string>? DefaultInformationOriginateMetricTypeVariable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("defaultInformationOriginateMetricVariable")]
        public Input<string>? DefaultInformationOriginateMetricVariable { get; set; }

        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Set distance for external routes - Range: `1`-`255` - Default value: `110`
        /// </summary>
        [Input("distanceExternal")]
        public Input<int>? DistanceExternal { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("distanceExternalVariable")]
        public Input<string>? DistanceExternalVariable { get; set; }

        /// <summary>
        /// Set distance for inter-area routes - Range: `1`-`255` - Default value: `110`
        /// </summary>
        [Input("distanceInterArea")]
        public Input<int>? DistanceInterArea { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("distanceInterAreaVariable")]
        public Input<string>? DistanceInterAreaVariable { get; set; }

        /// <summary>
        /// Set distance for intra-area routes - Range: `1`-`255` - Default value: `110`
        /// </summary>
        [Input("distanceIntraArea")]
        public Input<int>? DistanceIntraArea { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("distanceIntraAreaVariable")]
        public Input<string>? DistanceIntraAreaVariable { get; set; }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("redistributes")]
        private InputList<Inputs.TransportRoutingOspfFeatureRedistributeArgs>? _redistributes;

        /// <summary>
        /// Redistribute routes
        /// </summary>
        public InputList<Inputs.TransportRoutingOspfFeatureRedistributeArgs> Redistributes
        {
            get => _redistributes ?? (_redistributes = new InputList<Inputs.TransportRoutingOspfFeatureRedistributeArgs>());
            set => _redistributes = value;
        }

        /// <summary>
        /// Set reference bandwidth method to assign OSPF cost - Range: `1`-`4294967` - Default value: `100`
        /// </summary>
        [Input("referenceBandwidth")]
        public Input<int>? ReferenceBandwidth { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("referenceBandwidthVariable")]
        public Input<string>? ReferenceBandwidthVariable { get; set; }

        /// <summary>
        /// Calculate summary route cost based on RFC 1583 - Default value: `true`
        /// </summary>
        [Input("rfc1583Compatible")]
        public Input<bool>? Rfc1583Compatible { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("rfc1583CompatibleVariable")]
        public Input<string>? Rfc1583CompatibleVariable { get; set; }

        [Input("routePolicyId")]
        public Input<string>? RoutePolicyId { get; set; }

        /// <summary>
        /// Set OSPF router ID to override system IP address
        /// </summary>
        [Input("routerId")]
        public Input<string>? RouterId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("routerIdVariable")]
        public Input<string>? RouterIdVariable { get; set; }

        [Input("routerLsas")]
        private InputList<Inputs.TransportRoutingOspfFeatureRouterLsaArgs>? _routerLsas;

        /// <summary>
        /// Advertise own router LSA with infinite distance
        /// </summary>
        public InputList<Inputs.TransportRoutingOspfFeatureRouterLsaArgs> RouterLsas
        {
            get => _routerLsas ?? (_routerLsas = new InputList<Inputs.TransportRoutingOspfFeatureRouterLsaArgs>());
            set => _routerLsas = value;
        }

        /// <summary>
        /// Set delay from first change received until performing SPF calculation - Range: `1`-`600000` - Default value: `200`
        /// </summary>
        [Input("spfCalculationDelay")]
        public Input<int>? SpfCalculationDelay { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("spfCalculationDelayVariable")]
        public Input<string>? SpfCalculationDelayVariable { get; set; }

        /// <summary>
        /// Set initial hold time between consecutive SPF calculations - Range: `1`-`600000` - Default value: `1000`
        /// </summary>
        [Input("spfInitialHoldTime")]
        public Input<int>? SpfInitialHoldTime { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("spfInitialHoldTimeVariable")]
        public Input<string>? SpfInitialHoldTimeVariable { get; set; }

        /// <summary>
        /// Set maximum hold time between consecutive SPF calculations - Range: `1`-`600000` - Default value: `10000`
        /// </summary>
        [Input("spfMaximumHoldTime")]
        public Input<int>? SpfMaximumHoldTime { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("spfMaximumHoldTimeVariable")]
        public Input<string>? SpfMaximumHoldTimeVariable { get; set; }

        public TransportRoutingOspfFeatureArgs()
        {
        }
        public static new TransportRoutingOspfFeatureArgs Empty => new TransportRoutingOspfFeatureArgs();
    }

    public sealed class TransportRoutingOspfFeatureState : global::Pulumi.ResourceArgs
    {
        [Input("areas")]
        private InputList<Inputs.TransportRoutingOspfFeatureAreaGetArgs>? _areas;

        /// <summary>
        /// Configure OSPF area
        /// </summary>
        public InputList<Inputs.TransportRoutingOspfFeatureAreaGetArgs> Areas
        {
            get => _areas ?? (_areas = new InputList<Inputs.TransportRoutingOspfFeatureAreaGetArgs>());
            set => _areas = value;
        }

        /// <summary>
        /// Distribute default external route into OSPF - Default value: `false`
        /// </summary>
        [Input("defaultInformationOriginate")]
        public Input<bool>? DefaultInformationOriginate { get; set; }

        /// <summary>
        /// Always advertise default route - Default value: `false`
        /// </summary>
        [Input("defaultInformationOriginateAlways")]
        public Input<bool>? DefaultInformationOriginateAlways { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("defaultInformationOriginateAlwaysVariable")]
        public Input<string>? DefaultInformationOriginateAlwaysVariable { get; set; }

        /// <summary>
        /// Set metric used to generate default route &lt;0..16777214&gt; - Range: `0`-`16777214`
        /// </summary>
        [Input("defaultInformationOriginateMetric")]
        public Input<int>? DefaultInformationOriginateMetric { get; set; }

        /// <summary>
        /// Set default route type - Choices: `type1`, `type2`
        /// </summary>
        [Input("defaultInformationOriginateMetricType")]
        public Input<string>? DefaultInformationOriginateMetricType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("defaultInformationOriginateMetricTypeVariable")]
        public Input<string>? DefaultInformationOriginateMetricTypeVariable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("defaultInformationOriginateMetricVariable")]
        public Input<string>? DefaultInformationOriginateMetricVariable { get; set; }

        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Set distance for external routes - Range: `1`-`255` - Default value: `110`
        /// </summary>
        [Input("distanceExternal")]
        public Input<int>? DistanceExternal { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("distanceExternalVariable")]
        public Input<string>? DistanceExternalVariable { get; set; }

        /// <summary>
        /// Set distance for inter-area routes - Range: `1`-`255` - Default value: `110`
        /// </summary>
        [Input("distanceInterArea")]
        public Input<int>? DistanceInterArea { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("distanceInterAreaVariable")]
        public Input<string>? DistanceInterAreaVariable { get; set; }

        /// <summary>
        /// Set distance for intra-area routes - Range: `1`-`255` - Default value: `110`
        /// </summary>
        [Input("distanceIntraArea")]
        public Input<int>? DistanceIntraArea { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("distanceIntraAreaVariable")]
        public Input<string>? DistanceIntraAreaVariable { get; set; }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId")]
        public Input<string>? FeatureProfileId { get; set; }

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("redistributes")]
        private InputList<Inputs.TransportRoutingOspfFeatureRedistributeGetArgs>? _redistributes;

        /// <summary>
        /// Redistribute routes
        /// </summary>
        public InputList<Inputs.TransportRoutingOspfFeatureRedistributeGetArgs> Redistributes
        {
            get => _redistributes ?? (_redistributes = new InputList<Inputs.TransportRoutingOspfFeatureRedistributeGetArgs>());
            set => _redistributes = value;
        }

        /// <summary>
        /// Set reference bandwidth method to assign OSPF cost - Range: `1`-`4294967` - Default value: `100`
        /// </summary>
        [Input("referenceBandwidth")]
        public Input<int>? ReferenceBandwidth { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("referenceBandwidthVariable")]
        public Input<string>? ReferenceBandwidthVariable { get; set; }

        /// <summary>
        /// Calculate summary route cost based on RFC 1583 - Default value: `true`
        /// </summary>
        [Input("rfc1583Compatible")]
        public Input<bool>? Rfc1583Compatible { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("rfc1583CompatibleVariable")]
        public Input<string>? Rfc1583CompatibleVariable { get; set; }

        [Input("routePolicyId")]
        public Input<string>? RoutePolicyId { get; set; }

        /// <summary>
        /// Set OSPF router ID to override system IP address
        /// </summary>
        [Input("routerId")]
        public Input<string>? RouterId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("routerIdVariable")]
        public Input<string>? RouterIdVariable { get; set; }

        [Input("routerLsas")]
        private InputList<Inputs.TransportRoutingOspfFeatureRouterLsaGetArgs>? _routerLsas;

        /// <summary>
        /// Advertise own router LSA with infinite distance
        /// </summary>
        public InputList<Inputs.TransportRoutingOspfFeatureRouterLsaGetArgs> RouterLsas
        {
            get => _routerLsas ?? (_routerLsas = new InputList<Inputs.TransportRoutingOspfFeatureRouterLsaGetArgs>());
            set => _routerLsas = value;
        }

        /// <summary>
        /// Set delay from first change received until performing SPF calculation - Range: `1`-`600000` - Default value: `200`
        /// </summary>
        [Input("spfCalculationDelay")]
        public Input<int>? SpfCalculationDelay { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("spfCalculationDelayVariable")]
        public Input<string>? SpfCalculationDelayVariable { get; set; }

        /// <summary>
        /// Set initial hold time between consecutive SPF calculations - Range: `1`-`600000` - Default value: `1000`
        /// </summary>
        [Input("spfInitialHoldTime")]
        public Input<int>? SpfInitialHoldTime { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("spfInitialHoldTimeVariable")]
        public Input<string>? SpfInitialHoldTimeVariable { get; set; }

        /// <summary>
        /// Set maximum hold time between consecutive SPF calculations - Range: `1`-`600000` - Default value: `10000`
        /// </summary>
        [Input("spfMaximumHoldTime")]
        public Input<int>? SpfMaximumHoldTime { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("spfMaximumHoldTimeVariable")]
        public Input<string>? SpfMaximumHoldTimeVariable { get; set; }

        /// <summary>
        /// The version of the Feature
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public TransportRoutingOspfFeatureState()
        {
        }
        public static new TransportRoutingOspfFeatureState Empty => new TransportRoutingOspfFeatureState();
    }
}
