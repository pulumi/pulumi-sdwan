// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetCiscoVpnInterfaceGreFeatureTemplate
    {
        /// <summary>
        /// This data source can read the Cisco VPN Interface GRE feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoVpnInterfaceGreFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCiscoVpnInterfaceGreFeatureTemplateResult> InvokeAsync(GetCiscoVpnInterfaceGreFeatureTemplateArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCiscoVpnInterfaceGreFeatureTemplateResult>("sdwan:index/getCiscoVpnInterfaceGreFeatureTemplate:getCiscoVpnInterfaceGreFeatureTemplate", args ?? new GetCiscoVpnInterfaceGreFeatureTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Cisco VPN Interface GRE feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoVpnInterfaceGreFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCiscoVpnInterfaceGreFeatureTemplateResult> Invoke(GetCiscoVpnInterfaceGreFeatureTemplateInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCiscoVpnInterfaceGreFeatureTemplateResult>("sdwan:index/getCiscoVpnInterfaceGreFeatureTemplate:getCiscoVpnInterfaceGreFeatureTemplate", args ?? new GetCiscoVpnInterfaceGreFeatureTemplateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Cisco VPN Interface GRE feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoVpnInterfaceGreFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCiscoVpnInterfaceGreFeatureTemplateResult> Invoke(GetCiscoVpnInterfaceGreFeatureTemplateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCiscoVpnInterfaceGreFeatureTemplateResult>("sdwan:index/getCiscoVpnInterfaceGreFeatureTemplate:getCiscoVpnInterfaceGreFeatureTemplate", args ?? new GetCiscoVpnInterfaceGreFeatureTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCiscoVpnInterfaceGreFeatureTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetCiscoVpnInterfaceGreFeatureTemplateArgs()
        {
        }
        public static new GetCiscoVpnInterfaceGreFeatureTemplateArgs Empty => new GetCiscoVpnInterfaceGreFeatureTemplateArgs();
    }

    public sealed class GetCiscoVpnInterfaceGreFeatureTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetCiscoVpnInterfaceGreFeatureTemplateInvokeArgs()
        {
        }
        public static new GetCiscoVpnInterfaceGreFeatureTemplateInvokeArgs Empty => new GetCiscoVpnInterfaceGreFeatureTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetCiscoVpnInterfaceGreFeatureTemplateResult
    {
        /// <summary>
        /// Apply ACL
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCiscoVpnInterfaceGreFeatureTemplateAccessListResult> AccessLists;
        /// <summary>
        /// Enable Application Tunnel Type
        /// </summary>
        public readonly string Application;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ApplicationVariable;
        /// <summary>
        /// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
        /// </summary>
        public readonly bool ClearDontFragment;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ClearDontFragmentVariable;
        /// <summary>
        /// The description of the feature template
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// List of supported device types
        /// </summary>
        public readonly ImmutableArray<string> DeviceTypes;
        /// <summary>
        /// The id of the feature template
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Interface description
        /// </summary>
        public readonly string InterfaceDescription;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string InterfaceDescriptionVariable;
        /// <summary>
        /// Interface name: ge0/\n\n or ge0/\n\n.vlanid or irbbridgeid:1-63 or loopback\n\n or natpool-\n\n when present
        /// </summary>
        public readonly string InterfaceName;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string InterfaceNameVariable;
        /// <summary>
        /// Assign IPv4 address
        /// </summary>
        public readonly string IpAddress;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IpAddressVariable;
        /// <summary>
        /// Interface MTU \n\n, in bytes
        /// </summary>
        public readonly int IpMtu;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IpMtuVariable;
        /// <summary>
        /// The name of the feature template
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Name of rewrite rule
        /// </summary>
        public readonly string RewriteRule;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string RewriteRuleVariable;
        /// <summary>
        /// Administrative state
        /// </summary>
        public readonly bool Shutdown;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ShutdownVariable;
        /// <summary>
        /// TCP MSS on SYN packets, in bytes
        /// </summary>
        public readonly int TcpMssAdjust;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TcpMssAdjustVariable;
        /// <summary>
        /// The template type
        /// </summary>
        public readonly string TemplateType;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TrackerVariable;
        /// <summary>
        /// Enable tracker for this interface
        /// </summary>
        public readonly ImmutableArray<string> Trackers;
        /// <summary>
        /// Tunnel destination IP Address
        /// </summary>
        public readonly string TunnelDestination;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelDestinationVariable;
        /// <summary>
        /// \n\n Interface name: ge0/\n\n or ge0/\n\n.vlanid
        /// </summary>
        public readonly string TunnelRouteVia;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelRouteViaVariable;
        /// <summary>
        /// Tunnel source IP Address
        /// </summary>
        public readonly string TunnelSource;
        /// <summary>
        /// \n\n Interface name: ge0/\n\n or ge0/\n\n.vlanid
        /// </summary>
        public readonly string TunnelSourceInterface;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelSourceInterfaceVariable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelSourceVariable;
        /// <summary>
        /// The version of the feature template
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetCiscoVpnInterfaceGreFeatureTemplateResult(
            ImmutableArray<Outputs.GetCiscoVpnInterfaceGreFeatureTemplateAccessListResult> accessLists,

            string application,

            string applicationVariable,

            bool clearDontFragment,

            string clearDontFragmentVariable,

            string description,

            ImmutableArray<string> deviceTypes,

            string id,

            string interfaceDescription,

            string interfaceDescriptionVariable,

            string interfaceName,

            string interfaceNameVariable,

            string ipAddress,

            string ipAddressVariable,

            int ipMtu,

            string ipMtuVariable,

            string name,

            string rewriteRule,

            string rewriteRuleVariable,

            bool shutdown,

            string shutdownVariable,

            int tcpMssAdjust,

            string tcpMssAdjustVariable,

            string templateType,

            string trackerVariable,

            ImmutableArray<string> trackers,

            string tunnelDestination,

            string tunnelDestinationVariable,

            string tunnelRouteVia,

            string tunnelRouteViaVariable,

            string tunnelSource,

            string tunnelSourceInterface,

            string tunnelSourceInterfaceVariable,

            string tunnelSourceVariable,

            int version)
        {
            AccessLists = accessLists;
            Application = application;
            ApplicationVariable = applicationVariable;
            ClearDontFragment = clearDontFragment;
            ClearDontFragmentVariable = clearDontFragmentVariable;
            Description = description;
            DeviceTypes = deviceTypes;
            Id = id;
            InterfaceDescription = interfaceDescription;
            InterfaceDescriptionVariable = interfaceDescriptionVariable;
            InterfaceName = interfaceName;
            InterfaceNameVariable = interfaceNameVariable;
            IpAddress = ipAddress;
            IpAddressVariable = ipAddressVariable;
            IpMtu = ipMtu;
            IpMtuVariable = ipMtuVariable;
            Name = name;
            RewriteRule = rewriteRule;
            RewriteRuleVariable = rewriteRuleVariable;
            Shutdown = shutdown;
            ShutdownVariable = shutdownVariable;
            TcpMssAdjust = tcpMssAdjust;
            TcpMssAdjustVariable = tcpMssAdjustVariable;
            TemplateType = templateType;
            TrackerVariable = trackerVariable;
            Trackers = trackers;
            TunnelDestination = tunnelDestination;
            TunnelDestinationVariable = tunnelDestinationVariable;
            TunnelRouteVia = tunnelRouteVia;
            TunnelRouteViaVariable = tunnelRouteViaVariable;
            TunnelSource = tunnelSource;
            TunnelSourceInterface = tunnelSourceInterface;
            TunnelSourceInterfaceVariable = tunnelSourceInterfaceVariable;
            TunnelSourceVariable = tunnelSourceVariable;
            Version = version;
        }
    }
}
