// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class GetTrafficDataPolicyDefinitionSequenceActionEntrySetParameterResult
    {
        /// <summary>
        /// DSCP
        /// </summary>
        public readonly int Dscp;
        /// <summary>
        /// Forwarding class
        /// </summary>
        public readonly string ForwardingClass;
        /// <summary>
        /// Local TLOC list color. Space separated list of colors.
        /// </summary>
        public readonly string LocalTlocListColor;
        /// <summary>
        /// Local TLOC list encapsulation.
        /// </summary>
        public readonly string LocalTlocListEncap;
        /// <summary>
        /// Local TLOC list restrict
        /// </summary>
        public readonly bool LocalTlocListRestrict;
        /// <summary>
        /// Next hop IP
        /// </summary>
        public readonly string NextHop;
        /// <summary>
        /// Use routing table entry to forward the packet in case Next-hop is not available
        /// </summary>
        public readonly bool NextHopLoose;
        /// <summary>
        /// Policer list ID
        /// </summary>
        public readonly string PolicerListId;
        /// <summary>
        /// Policer list version
        /// </summary>
        public readonly int PolicerListVersion;
        /// <summary>
        /// Preferred color group list ID
        /// </summary>
        public readonly string PreferredColorGroupList;
        /// <summary>
        /// Preferred color group list version
        /// </summary>
        public readonly int PreferredColorGroupListVersion;
        /// <summary>
        /// Service TLOC color
        /// </summary>
        public readonly string ServiceTlocColor;
        /// <summary>
        /// Service TLOC encapsulation
        /// </summary>
        public readonly string ServiceTlocEncapsulation;
        /// <summary>
        /// Service TLOC IP address
        /// </summary>
        public readonly string ServiceTlocIp;
        /// <summary>
        /// Service TLOC list ID
        /// </summary>
        public readonly string ServiceTlocListId;
        /// <summary>
        /// Service TLOC list version
        /// </summary>
        public readonly int ServiceTlocListVersion;
        /// <summary>
        /// Service TLOC Local
        /// </summary>
        public readonly bool ServiceTlocLocal;
        /// <summary>
        /// Service TLOC Restrict
        /// </summary>
        public readonly bool ServiceTlocRestrict;
        /// <summary>
        /// Service type
        /// </summary>
        public readonly string ServiceType;
        /// <summary>
        /// Service VPN ID
        /// </summary>
        public readonly int ServiceVpnId;
        /// <summary>
        /// TLOC color
        /// </summary>
        public readonly string TlocColor;
        /// <summary>
        /// TLOC encapsulation
        /// </summary>
        public readonly string TlocEncapsulation;
        /// <summary>
        /// TLOC IP address
        /// </summary>
        public readonly string TlocIp;
        /// <summary>
        /// TLOC list ID
        /// </summary>
        public readonly string TlocListId;
        /// <summary>
        /// TLOC list version
        /// </summary>
        public readonly int TlocListVersion;
        /// <summary>
        /// Type of set parameter
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// DSCP
        /// </summary>
        public readonly int VpnId;

        [OutputConstructor]
        private GetTrafficDataPolicyDefinitionSequenceActionEntrySetParameterResult(
            int dscp,

            string forwardingClass,

            string localTlocListColor,

            string localTlocListEncap,

            bool localTlocListRestrict,

            string nextHop,

            bool nextHopLoose,

            string policerListId,

            int policerListVersion,

            string preferredColorGroupList,

            int preferredColorGroupListVersion,

            string serviceTlocColor,

            string serviceTlocEncapsulation,

            string serviceTlocIp,

            string serviceTlocListId,

            int serviceTlocListVersion,

            bool serviceTlocLocal,

            bool serviceTlocRestrict,

            string serviceType,

            int serviceVpnId,

            string tlocColor,

            string tlocEncapsulation,

            string tlocIp,

            string tlocListId,

            int tlocListVersion,

            string type,

            int vpnId)
        {
            Dscp = dscp;
            ForwardingClass = forwardingClass;
            LocalTlocListColor = localTlocListColor;
            LocalTlocListEncap = localTlocListEncap;
            LocalTlocListRestrict = localTlocListRestrict;
            NextHop = nextHop;
            NextHopLoose = nextHopLoose;
            PolicerListId = policerListId;
            PolicerListVersion = policerListVersion;
            PreferredColorGroupList = preferredColorGroupList;
            PreferredColorGroupListVersion = preferredColorGroupListVersion;
            ServiceTlocColor = serviceTlocColor;
            ServiceTlocEncapsulation = serviceTlocEncapsulation;
            ServiceTlocIp = serviceTlocIp;
            ServiceTlocListId = serviceTlocListId;
            ServiceTlocListVersion = serviceTlocListVersion;
            ServiceTlocLocal = serviceTlocLocal;
            ServiceTlocRestrict = serviceTlocRestrict;
            ServiceType = serviceType;
            ServiceVpnId = serviceVpnId;
            TlocColor = tlocColor;
            TlocEncapsulation = tlocEncapsulation;
            TlocIp = tlocIp;
            TlocListId = tlocListId;
            TlocListVersion = tlocListVersion;
            Type = type;
            VpnId = vpnId;
        }
    }
}
