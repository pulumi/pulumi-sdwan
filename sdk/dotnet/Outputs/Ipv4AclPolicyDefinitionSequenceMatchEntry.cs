// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class Ipv4AclPolicyDefinitionSequenceMatchEntry
    {
        /// <summary>
        /// Class map ID
        /// </summary>
        public readonly string? ClassMapId;
        /// <summary>
        /// Class map version
        /// </summary>
        public readonly int? ClassMapVersion;
        /// <summary>
        /// Destination data IPv4 prefix list ID
        /// </summary>
        public readonly string? DestinationDataIpv4PrefixListId;
        /// <summary>
        /// Destination data IPv4 prefix list version
        /// </summary>
        public readonly int? DestinationDataIpv4PrefixListVersion;
        /// <summary>
        /// Destination IP prefix
        /// </summary>
        public readonly string? DestinationIp;
        /// <summary>
        /// Destination ports. Single value (0-65535) or ranges separated by spaces.
        /// </summary>
        public readonly string? DestinationPorts;
        /// <summary>
        /// DSCP value
        ///   - Range: `0`-`63`
        /// </summary>
        public readonly int? Dscp;
        /// <summary>
        /// ICMP Message
        /// </summary>
        public readonly string? IcmpMessage;
        /// <summary>
        /// Packet length
        ///   - Range: `0`-`65535`
        /// </summary>
        public readonly int? PacketLength;
        /// <summary>
        /// PLP - priority
        ///   - Choices: `high`, `low`
        /// </summary>
        public readonly string? Priority;
        /// <summary>
        /// Single value (0-255) or multiple values separated by spaces
        /// </summary>
        public readonly string? Protocol;
        /// <summary>
        /// Source data IPv4 prefix list ID
        /// </summary>
        public readonly string? SourceDataIpv4PrefixListId;
        /// <summary>
        /// Source data IPv4 prefix list version
        /// </summary>
        public readonly int? SourceDataIpv4PrefixListVersion;
        /// <summary>
        /// Source IP prefix
        /// </summary>
        public readonly string? SourceIp;
        /// <summary>
        /// Source ports. Single value (0-65535) or ranges separated by spaces.
        /// </summary>
        public readonly string? SourcePorts;
        /// <summary>
        /// TCP parameters
        ///   - Choices: `syn`
        /// </summary>
        public readonly string? Tcp;
        /// <summary>
        /// Type of match entry
        ///   - Choices: `dscp`, `sourceIp`, `destinationIp`, `class`, `packetLength`, `plp`, `sourcePort`, `destinationPort`, `sourceDataPrefixList`, `destinationDataPrefixList`, `protocol`, `tcp`, `icmpMessage`
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private Ipv4AclPolicyDefinitionSequenceMatchEntry(
            string? classMapId,

            int? classMapVersion,

            string? destinationDataIpv4PrefixListId,

            int? destinationDataIpv4PrefixListVersion,

            string? destinationIp,

            string? destinationPorts,

            int? dscp,

            string? icmpMessage,

            int? packetLength,

            string? priority,

            string? protocol,

            string? sourceDataIpv4PrefixListId,

            int? sourceDataIpv4PrefixListVersion,

            string? sourceIp,

            string? sourcePorts,

            string? tcp,

            string type)
        {
            ClassMapId = classMapId;
            ClassMapVersion = classMapVersion;
            DestinationDataIpv4PrefixListId = destinationDataIpv4PrefixListId;
            DestinationDataIpv4PrefixListVersion = destinationDataIpv4PrefixListVersion;
            DestinationIp = destinationIp;
            DestinationPorts = destinationPorts;
            Dscp = dscp;
            IcmpMessage = icmpMessage;
            PacketLength = packetLength;
            Priority = priority;
            Protocol = protocol;
            SourceDataIpv4PrefixListId = sourceDataIpv4PrefixListId;
            SourceDataIpv4PrefixListVersion = sourceDataIpv4PrefixListVersion;
            SourceIp = sourceIp;
            SourcePorts = sourcePorts;
            Tcp = tcp;
            Type = type;
        }
    }
}
