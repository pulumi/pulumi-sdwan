// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class CedgeAaaFeatureTemplateUser
    {
        /// <summary>
        /// Set the username
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? NameVariable;
        /// <summary>
        /// Indicates if list item is considered optional.
        /// </summary>
        public readonly bool? Optional;
        /// <summary>
        /// Set the user password
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// Set Privilege Level for this user
        ///   - Choices: `1`, `15`
        ///   - Default value: `15`
        /// </summary>
        public readonly string? PrivilegeLevel;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? PrivilegeLevelVariable;
        /// <summary>
        /// Set the user scrypt password/hash
        /// </summary>
        public readonly string? Secret;
        /// <summary>
        /// List of RSA public-keys per user
        /// </summary>
        public readonly ImmutableArray<Outputs.CedgeAaaFeatureTemplateUserSshPubkey> SshPubkeys;

        [OutputConstructor]
        private CedgeAaaFeatureTemplateUser(
            string? name,

            string? nameVariable,

            bool? optional,

            string? password,

            string? privilegeLevel,

            string? privilegeLevelVariable,

            string? secret,

            ImmutableArray<Outputs.CedgeAaaFeatureTemplateUserSshPubkey> sshPubkeys)
        {
            Name = name;
            NameVariable = nameVariable;
            Optional = optional;
            Password = password;
            PrivilegeLevel = privilegeLevel;
            PrivilegeLevelVariable = privilegeLevelVariable;
            Secret = secret;
            SshPubkeys = sshPubkeys;
        }
    }
}
