// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class ApplicationPriorityTrafficPolicyPolicySequenceAction
    {
        /// <summary>
        /// Backup SLA perferred color
        /// </summary>
        public readonly ImmutableArray<string> BackupSlaPreferredColors;
        public readonly bool? CloudProbe;
        public readonly bool? CloudSaas;
        public readonly string? Count;
        public readonly bool? FallbackToRouting;
        public readonly bool? Log;
        /// <summary>
        /// - Range: `1`-`5`
        /// </summary>
        public readonly int? LossCorrectFecThreshold;
        /// <summary>
        /// - Choices: `fecAdaptive`, `fecAlways`, `packetDuplication`
        /// </summary>
        public readonly string? LossCorrectType;
        public readonly bool? NatBypass;
        public readonly ImmutableArray<string> NatDiaInterfaces;
        public readonly ImmutableArray<int> NatDiaPools;
        public readonly bool? NatFallback;
        /// <summary>
        /// - Range: `1`-`31`
        /// </summary>
        public readonly int? NatPool;
        public readonly bool? NatVpn;
        /// <summary>
        /// - Choices: `ipAddress`, `redirectDns`
        /// </summary>
        public readonly string? RedirectDnsField;
        public readonly string? RedirectDnsValue;
        public readonly bool? SecureInternetGateway;
        public readonly ImmutableArray<Outputs.ApplicationPriorityTrafficPolicyPolicySequenceActionSetParameter> SetParameters;
        /// <summary>
        /// slaClass
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationPriorityTrafficPolicyPolicySequenceActionSlaClass> SlaClasses;

        [OutputConstructor]
        private ApplicationPriorityTrafficPolicyPolicySequenceAction(
            ImmutableArray<string> backupSlaPreferredColors,

            bool? cloudProbe,

            bool? cloudSaas,

            string? count,

            bool? fallbackToRouting,

            bool? log,

            int? lossCorrectFecThreshold,

            string? lossCorrectType,

            bool? natBypass,

            ImmutableArray<string> natDiaInterfaces,

            ImmutableArray<int> natDiaPools,

            bool? natFallback,

            int? natPool,

            bool? natVpn,

            string? redirectDnsField,

            string? redirectDnsValue,

            bool? secureInternetGateway,

            ImmutableArray<Outputs.ApplicationPriorityTrafficPolicyPolicySequenceActionSetParameter> setParameters,

            ImmutableArray<Outputs.ApplicationPriorityTrafficPolicyPolicySequenceActionSlaClass> slaClasses)
        {
            BackupSlaPreferredColors = backupSlaPreferredColors;
            CloudProbe = cloudProbe;
            CloudSaas = cloudSaas;
            Count = count;
            FallbackToRouting = fallbackToRouting;
            Log = log;
            LossCorrectFecThreshold = lossCorrectFecThreshold;
            LossCorrectType = lossCorrectType;
            NatBypass = natBypass;
            NatDiaInterfaces = natDiaInterfaces;
            NatDiaPools = natDiaPools;
            NatFallback = natFallback;
            NatPool = natPool;
            NatVpn = natVpn;
            RedirectDnsField = redirectDnsField;
            RedirectDnsValue = redirectDnsValue;
            SecureInternetGateway = secureInternetGateway;
            SetParameters = setParameters;
            SlaClasses = slaClasses;
        }
    }
}
