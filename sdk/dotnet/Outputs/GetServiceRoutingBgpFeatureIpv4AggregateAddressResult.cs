// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class GetServiceRoutingBgpFeatureIpv4AggregateAddressResult
    {
        /// <summary>
        /// Set AS set path information
        /// </summary>
        public readonly bool AsSetPath;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AsSetPathVariable;
        public readonly string NetworkAddress;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string NetworkAddressVariable;
        public readonly string SubnetMask;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SubnetMaskVariable;
        /// <summary>
        /// Filter out more specific routes from updates
        /// </summary>
        public readonly bool SummaryOnly;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SummaryOnlyVariable;

        [OutputConstructor]
        private GetServiceRoutingBgpFeatureIpv4AggregateAddressResult(
            bool asSetPath,

            string asSetPathVariable,

            string networkAddress,

            string networkAddressVariable,

            string subnetMask,

            string subnetMaskVariable,

            bool summaryOnly,

            string summaryOnlyVariable)
        {
            AsSetPath = asSetPath;
            AsSetPathVariable = asSetPathVariable;
            NetworkAddress = networkAddress;
            NetworkAddressVariable = networkAddressVariable;
            SubnetMask = subnetMask;
            SubnetMaskVariable = subnetMaskVariable;
            SummaryOnly = summaryOnly;
            SummaryOnlyVariable = summaryOnlyVariable;
        }
    }
}
