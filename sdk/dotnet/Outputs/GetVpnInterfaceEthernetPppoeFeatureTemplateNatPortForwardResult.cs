// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class GetVpnInterfaceEthernetPppoeFeatureTemplateNatPortForwardResult
    {
        /// <summary>
        /// Indicates if list item is considered optional.
        /// </summary>
        public readonly bool Optional;
        /// <summary>
        /// Ending port of port range
        /// </summary>
        public readonly int PortEndRange;
        /// <summary>
        /// Starting port of port range
        /// </summary>
        public readonly int PortStartRange;
        /// <summary>
        /// Private IP Address to translate to
        /// </summary>
        public readonly string PrivateIpAddress;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PrivateIpAddressVariable;
        /// <summary>
        /// VPN in which private IP Address resides
        /// </summary>
        public readonly int PrivateVpn;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PrivateVpnVariable;
        /// <summary>
        /// Layer 4 protocol to apply port forwarding to
        /// </summary>
        public readonly string Protocol;

        [OutputConstructor]
        private GetVpnInterfaceEthernetPppoeFeatureTemplateNatPortForwardResult(
            bool optional,

            int portEndRange,

            int portStartRange,

            string privateIpAddress,

            string privateIpAddressVariable,

            int privateVpn,

            string privateVpnVariable,

            string protocol)
        {
            Optional = optional;
            PortEndRange = portEndRange;
            PortStartRange = portStartRange;
            PrivateIpAddress = privateIpAddress;
            PrivateIpAddressVariable = privateIpAddressVariable;
            PrivateVpn = privateVpn;
            PrivateVpnVariable = privateVpnVariable;
            Protocol = protocol;
        }
    }
}
