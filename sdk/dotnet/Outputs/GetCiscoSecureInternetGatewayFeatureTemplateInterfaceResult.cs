// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class GetCiscoSecureInternetGatewayFeatureTemplateInterfaceResult
    {
        /// <summary>
        /// Enable Application Tunnel Type
        /// </summary>
        public readonly string Application;
        /// <summary>
        /// Auto Tunnel Mode
        /// </summary>
        public readonly bool AutoTunnelMode;
        /// <summary>
        /// IKE keepalive interval (seconds)
        /// </summary>
        public readonly int DeadPeerDetectionInterval;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DeadPeerDetectionIntervalVariable;
        /// <summary>
        /// IKE keepalive retries
        /// </summary>
        public readonly int DeadPeerDetectionRetries;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DeadPeerDetectionRetriesVariable;
        /// <summary>
        /// Interface description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DescriptionVariable;
        /// <summary>
        /// IKE identity the IKE preshared secret belongs to
        /// </summary>
        public readonly string IkeCiphersuite;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IkeCiphersuiteVariable;
        /// <summary>
        /// IKE Diffie Hellman Groups
        /// </summary>
        public readonly string IkeGroup;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IkeGroupVariable;
        /// <summary>
        /// Use preshared key to authenticate IKE peer
        /// </summary>
        public readonly string IkePreSharedKey;
        /// <summary>
        /// Use preshared key to authenticate IKE peer
        /// </summary>
        public readonly bool IkePreSharedKeyDynamic;
        /// <summary>
        /// IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
        /// </summary>
        public readonly string IkePreSharedKeyLocalId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IkePreSharedKeyLocalIdVariable;
        /// <summary>
        /// IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
        /// </summary>
        public readonly string IkePreSharedKeyRemoteId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IkePreSharedKeyRemoteIdVariable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IkePreSharedKeyVariable;
        /// <summary>
        /// IKE rekey interval \n\n seconds
        /// </summary>
        public readonly int IkeRekeyInterval;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IkeRekeyIntervalVariable;
        /// <summary>
        /// IKE Version \n\n
        /// </summary>
        public readonly int IkeVersion;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IkeVersionVariable;
        /// <summary>
        /// Unnumbered interface
        /// </summary>
        public readonly bool IpUnnumbered;
        /// <summary>
        /// IPsec(ESP) encryption and integrity protocol
        /// </summary>
        public readonly string IpsecCiphersuite;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IpsecCiphersuiteVariable;
        /// <summary>
        /// IPsec perfect forward secrecy settings
        /// </summary>
        public readonly string IpsecPerfectForwardSecrecy;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IpsecPerfectForwardSecrecyVariable;
        /// <summary>
        /// IPsec rekey interval \n\n seconds
        /// </summary>
        public readonly int IpsecRekeyInterval;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IpsecRekeyIntervalVariable;
        /// <summary>
        /// Replay window size 32..8192 (must be a power of 2)
        /// </summary>
        public readonly int IpsecReplayWindow;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IpsecReplayWindowVariable;
        /// <summary>
        /// Assign IPv4 address
        /// </summary>
        public readonly string Ipv4Address;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4AddressVariable;
        /// <summary>
        /// Interface MTU \n\n, in bytes
        /// </summary>
        public readonly int Mtu;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string MtuVariable;
        /// <summary>
        /// Interface name: IPsec when present
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string NameVariable;
        /// <summary>
        /// Indicates if list item is considered optional.
        /// </summary>
        public readonly bool Optional;
        /// <summary>
        /// Administrative state
        /// </summary>
        public readonly bool Shutdown;
        /// <summary>
        /// SIG Tunnel Provider
        /// </summary>
        public readonly string SigProvider;
        /// <summary>
        /// TCP MSS on SYN packets, in bytes
        /// </summary>
        public readonly int TcpMss;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TcpMssVariable;
        /// <summary>
        /// Enable/disable SIG tracking
        /// </summary>
        public readonly bool TrackEnable;
        /// <summary>
        /// Enable tracker for this interface
        /// </summary>
        public readonly string Tracker;
        /// <summary>
        /// SIG Tunnel Data Center
        /// </summary>
        public readonly string TunnelDcPreference;
        /// <summary>
        /// Tunnel destination IP address
        /// </summary>
        public readonly string TunnelDestination;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelDestinationVariable;
        /// <summary>
        /// Public IP required to setup GRE tunnel to Zscaler
        /// </summary>
        public readonly string TunnelPublicIp;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelPublicIpVariable;
        /// <summary>
        /// \n\n Interface name: ge0/\n\n or ge0/\n\n.vlanid
        /// </summary>
        public readonly string TunnelRouteVia;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelRouteViaVariable;
        /// <summary>
        /// Tunnel source IP Address
        /// </summary>
        public readonly string TunnelSource;
        /// <summary>
        /// \n\n Interface name: ge0/\n\n or ge0/\n\n.vlanid
        /// </summary>
        public readonly string TunnelSourceInterface;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelSourceInterfaceVariable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelSourceVariable;

        [OutputConstructor]
        private GetCiscoSecureInternetGatewayFeatureTemplateInterfaceResult(
            string application,

            bool autoTunnelMode,

            int deadPeerDetectionInterval,

            string deadPeerDetectionIntervalVariable,

            int deadPeerDetectionRetries,

            string deadPeerDetectionRetriesVariable,

            string description,

            string descriptionVariable,

            string ikeCiphersuite,

            string ikeCiphersuiteVariable,

            string ikeGroup,

            string ikeGroupVariable,

            string ikePreSharedKey,

            bool ikePreSharedKeyDynamic,

            string ikePreSharedKeyLocalId,

            string ikePreSharedKeyLocalIdVariable,

            string ikePreSharedKeyRemoteId,

            string ikePreSharedKeyRemoteIdVariable,

            string ikePreSharedKeyVariable,

            int ikeRekeyInterval,

            string ikeRekeyIntervalVariable,

            int ikeVersion,

            string ikeVersionVariable,

            bool ipUnnumbered,

            string ipsecCiphersuite,

            string ipsecCiphersuiteVariable,

            string ipsecPerfectForwardSecrecy,

            string ipsecPerfectForwardSecrecyVariable,

            int ipsecRekeyInterval,

            string ipsecRekeyIntervalVariable,

            int ipsecReplayWindow,

            string ipsecReplayWindowVariable,

            string ipv4Address,

            string ipv4AddressVariable,

            int mtu,

            string mtuVariable,

            string name,

            string nameVariable,

            bool optional,

            bool shutdown,

            string sigProvider,

            int tcpMss,

            string tcpMssVariable,

            bool trackEnable,

            string tracker,

            string tunnelDcPreference,

            string tunnelDestination,

            string tunnelDestinationVariable,

            string tunnelPublicIp,

            string tunnelPublicIpVariable,

            string tunnelRouteVia,

            string tunnelRouteViaVariable,

            string tunnelSource,

            string tunnelSourceInterface,

            string tunnelSourceInterfaceVariable,

            string tunnelSourceVariable)
        {
            Application = application;
            AutoTunnelMode = autoTunnelMode;
            DeadPeerDetectionInterval = deadPeerDetectionInterval;
            DeadPeerDetectionIntervalVariable = deadPeerDetectionIntervalVariable;
            DeadPeerDetectionRetries = deadPeerDetectionRetries;
            DeadPeerDetectionRetriesVariable = deadPeerDetectionRetriesVariable;
            Description = description;
            DescriptionVariable = descriptionVariable;
            IkeCiphersuite = ikeCiphersuite;
            IkeCiphersuiteVariable = ikeCiphersuiteVariable;
            IkeGroup = ikeGroup;
            IkeGroupVariable = ikeGroupVariable;
            IkePreSharedKey = ikePreSharedKey;
            IkePreSharedKeyDynamic = ikePreSharedKeyDynamic;
            IkePreSharedKeyLocalId = ikePreSharedKeyLocalId;
            IkePreSharedKeyLocalIdVariable = ikePreSharedKeyLocalIdVariable;
            IkePreSharedKeyRemoteId = ikePreSharedKeyRemoteId;
            IkePreSharedKeyRemoteIdVariable = ikePreSharedKeyRemoteIdVariable;
            IkePreSharedKeyVariable = ikePreSharedKeyVariable;
            IkeRekeyInterval = ikeRekeyInterval;
            IkeRekeyIntervalVariable = ikeRekeyIntervalVariable;
            IkeVersion = ikeVersion;
            IkeVersionVariable = ikeVersionVariable;
            IpUnnumbered = ipUnnumbered;
            IpsecCiphersuite = ipsecCiphersuite;
            IpsecCiphersuiteVariable = ipsecCiphersuiteVariable;
            IpsecPerfectForwardSecrecy = ipsecPerfectForwardSecrecy;
            IpsecPerfectForwardSecrecyVariable = ipsecPerfectForwardSecrecyVariable;
            IpsecRekeyInterval = ipsecRekeyInterval;
            IpsecRekeyIntervalVariable = ipsecRekeyIntervalVariable;
            IpsecReplayWindow = ipsecReplayWindow;
            IpsecReplayWindowVariable = ipsecReplayWindowVariable;
            Ipv4Address = ipv4Address;
            Ipv4AddressVariable = ipv4AddressVariable;
            Mtu = mtu;
            MtuVariable = mtuVariable;
            Name = name;
            NameVariable = nameVariable;
            Optional = optional;
            Shutdown = shutdown;
            SigProvider = sigProvider;
            TcpMss = tcpMss;
            TcpMssVariable = tcpMssVariable;
            TrackEnable = trackEnable;
            Tracker = tracker;
            TunnelDcPreference = tunnelDcPreference;
            TunnelDestination = tunnelDestination;
            TunnelDestinationVariable = tunnelDestinationVariable;
            TunnelPublicIp = tunnelPublicIp;
            TunnelPublicIpVariable = tunnelPublicIpVariable;
            TunnelRouteVia = tunnelRouteVia;
            TunnelRouteViaVariable = tunnelRouteViaVariable;
            TunnelSource = tunnelSource;
            TunnelSourceInterface = tunnelSourceInterface;
            TunnelSourceInterfaceVariable = tunnelSourceInterfaceVariable;
            TunnelSourceVariable = tunnelSourceVariable;
        }
    }
}
