// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class TransportRoutingOspfFeatureAreaInterface
    {
        /// <summary>
        /// Set OSPF interface authentication type
        ///   - Choices: `message-digest`
        /// </summary>
        public readonly string? AuthenticationType;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? AuthenticationTypeVariable;
        /// <summary>
        /// Set cost of OSPF interface
        ///   - Range: `1`-`65535`
        /// </summary>
        public readonly int? Cost;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? CostVariable;
        /// <summary>
        /// Set interval after which neighbor is declared to be down
        ///   - Range: `1`-`65535`
        ///   - Default value: `40`
        /// </summary>
        public readonly int? DeadInterval;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? DeadIntervalVariable;
        /// <summary>
        /// Set routerâ€™s priority to be elected as designated router
        ///   - Range: `0`-`255`
        ///   - Default value: `1`
        /// </summary>
        public readonly int? DesignatedRouterPriority;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? DesignatedRouterPriorityVariable;
        /// <summary>
        /// Set interval between OSPF hello packets
        ///   - Range: `1`-`65535`
        ///   - Default value: `10`
        /// </summary>
        public readonly int? HelloInterval;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? HelloIntervalVariable;
        /// <summary>
        /// Set time between retransmitting LSAs
        ///   - Range: `1`-`65535`
        ///   - Default value: `5`
        /// </summary>
        public readonly int? LsaRetransmitInterval;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? LsaRetransmitIntervalVariable;
        /// <summary>
        /// Set MD5 authentication key
        /// </summary>
        public readonly string? MessageDigestKey;
        /// <summary>
        /// Set MD5 message digest key
        ///   - Range: `1`-`255`
        /// </summary>
        public readonly int? MessageDigestKeyId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? MessageDigestKeyIdVariable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? MessageDigestKeyVariable;
        /// <summary>
        /// Set interface name
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? NameVariable;
        /// <summary>
        /// Set the OSPF network type
        ///   - Choices: `broadcast`, `point-to-point`, `non-broadcast`, `point-to-multipoint`
        ///   - Default value: `broadcast`
        /// </summary>
        public readonly string? NetworkType;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? NetworkTypeVariable;
        /// <summary>
        /// Set the interface to advertise its address, but not to actively run OSPF
        ///   - Default value: `false`
        /// </summary>
        public readonly bool? PassiveInterface;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? PassiveInterfaceVariable;

        [OutputConstructor]
        private TransportRoutingOspfFeatureAreaInterface(
            string? authenticationType,

            string? authenticationTypeVariable,

            int? cost,

            string? costVariable,

            int? deadInterval,

            string? deadIntervalVariable,

            int? designatedRouterPriority,

            string? designatedRouterPriorityVariable,

            int? helloInterval,

            string? helloIntervalVariable,

            int? lsaRetransmitInterval,

            string? lsaRetransmitIntervalVariable,

            string? messageDigestKey,

            int? messageDigestKeyId,

            string? messageDigestKeyIdVariable,

            string? messageDigestKeyVariable,

            string? name,

            string? nameVariable,

            string? networkType,

            string? networkTypeVariable,

            bool? passiveInterface,

            string? passiveInterfaceVariable)
        {
            AuthenticationType = authenticationType;
            AuthenticationTypeVariable = authenticationTypeVariable;
            Cost = cost;
            CostVariable = costVariable;
            DeadInterval = deadInterval;
            DeadIntervalVariable = deadIntervalVariable;
            DesignatedRouterPriority = designatedRouterPriority;
            DesignatedRouterPriorityVariable = designatedRouterPriorityVariable;
            HelloInterval = helloInterval;
            HelloIntervalVariable = helloIntervalVariable;
            LsaRetransmitInterval = lsaRetransmitInterval;
            LsaRetransmitIntervalVariable = lsaRetransmitIntervalVariable;
            MessageDigestKey = messageDigestKey;
            MessageDigestKeyId = messageDigestKeyId;
            MessageDigestKeyIdVariable = messageDigestKeyIdVariable;
            MessageDigestKeyVariable = messageDigestKeyVariable;
            Name = name;
            NameVariable = nameVariable;
            NetworkType = networkType;
            NetworkTypeVariable = networkTypeVariable;
            PassiveInterface = passiveInterface;
            PassiveInterfaceVariable = passiveInterfaceVariable;
        }
    }
}
