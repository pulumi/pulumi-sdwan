// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class GetTrafficDataPolicyDefinitionSequenceActionEntryResult
    {
        /// <summary>
        /// Enable cflowd
        /// </summary>
        public readonly bool Cflowd;
        /// <summary>
        /// Counter name
        /// </summary>
        public readonly string Counter;
        /// <summary>
        /// Enable DRE optimization
        /// </summary>
        public readonly bool DreOptimization;
        /// <summary>
        /// Enable fallback to routing
        /// </summary>
        public readonly bool FallbackToRouting;
        /// <summary>
        /// Enable logging
        /// </summary>
        public readonly bool Log;
        /// <summary>
        /// Loss correction
        /// </summary>
        public readonly string LossCorrection;
        /// <summary>
        /// Loss correction FEC
        /// </summary>
        public readonly string LossCorrectionFec;
        /// <summary>
        /// Loss correction FEC threshold
        /// </summary>
        public readonly string LossCorrectionFecThreshold;
        /// <summary>
        /// Loss correction packet duplication
        /// </summary>
        public readonly string LossCorrectionPacketDuplication;
        /// <summary>
        /// List of NAT parameters
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTrafficDataPolicyDefinitionSequenceActionEntryNatParameterResult> NatParameters;
        /// <summary>
        /// NAT pool
        /// </summary>
        public readonly string NatPool;
        /// <summary>
        /// NAT pool ID
        /// </summary>
        public readonly int NatPoolId;
        /// <summary>
        /// Redirect DNS
        /// </summary>
        public readonly string RedirectDns;
        /// <summary>
        /// Redirect DNS IP address
        /// </summary>
        public readonly string RedirectDnsAddress;
        /// <summary>
        /// Redirect DNS type
        /// </summary>
        public readonly string RedirectDnsType;
        /// <summary>
        /// Enable secure internet gateway
        /// </summary>
        public readonly bool SecureInternetGateway;
        /// <summary>
        /// Service node group
        /// </summary>
        public readonly string ServiceNodeGroup;
        /// <summary>
        /// List of set parameters
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTrafficDataPolicyDefinitionSequenceActionEntrySetParameterResult> SetParameters;
        /// <summary>
        /// Enable TCP optimization
        /// </summary>
        public readonly bool TcpOptimization;
        /// <summary>
        /// Type of action entry
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetTrafficDataPolicyDefinitionSequenceActionEntryResult(
            bool cflowd,

            string counter,

            bool dreOptimization,

            bool fallbackToRouting,

            bool log,

            string lossCorrection,

            string lossCorrectionFec,

            string lossCorrectionFecThreshold,

            string lossCorrectionPacketDuplication,

            ImmutableArray<Outputs.GetTrafficDataPolicyDefinitionSequenceActionEntryNatParameterResult> natParameters,

            string natPool,

            int natPoolId,

            string redirectDns,

            string redirectDnsAddress,

            string redirectDnsType,

            bool secureInternetGateway,

            string serviceNodeGroup,

            ImmutableArray<Outputs.GetTrafficDataPolicyDefinitionSequenceActionEntrySetParameterResult> setParameters,

            bool tcpOptimization,

            string type)
        {
            Cflowd = cflowd;
            Counter = counter;
            DreOptimization = dreOptimization;
            FallbackToRouting = fallbackToRouting;
            Log = log;
            LossCorrection = lossCorrection;
            LossCorrectionFec = lossCorrectionFec;
            LossCorrectionFecThreshold = lossCorrectionFecThreshold;
            LossCorrectionPacketDuplication = lossCorrectionPacketDuplication;
            NatParameters = natParameters;
            NatPool = natPool;
            NatPoolId = natPoolId;
            RedirectDns = redirectDns;
            RedirectDnsAddress = redirectDnsAddress;
            RedirectDnsType = redirectDnsType;
            SecureInternetGateway = secureInternetGateway;
            ServiceNodeGroup = serviceNodeGroup;
            SetParameters = setParameters;
            TcpOptimization = tcpOptimization;
            Type = type;
        }
    }
}
