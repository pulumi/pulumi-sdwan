// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class GetCedgeAaaFeatureTemplateTacacsServerGroupServerResult
    {
        /// <summary>
        /// Set IP address of TACACS server
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// Type of encyption. To be used for type 6
        /// </summary>
        public readonly string EncryptionType;
        /// <summary>
        /// Set the TACACS server shared key
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// Indicates if list item is considered optional.
        /// </summary>
        public readonly bool Optional;
        /// <summary>
        /// TACACS Port
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PortVariable;
        /// <summary>
        /// Set the TACACS server shared type 7 encrypted key
        /// </summary>
        public readonly string SecretKey;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SecretKeyVariable;
        /// <summary>
        /// Configure how long to wait for replies from the TACACS server
        /// </summary>
        public readonly int Timeout;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TimeoutVariable;

        [OutputConstructor]
        private GetCedgeAaaFeatureTemplateTacacsServerGroupServerResult(
            string address,

            string encryptionType,

            string key,

            bool optional,

            int port,

            string portVariable,

            string secretKey,

            string secretKeyVariable,

            int timeout,

            string timeoutVariable)
        {
            Address = address;
            EncryptionType = encryptionType;
            Key = key;
            Optional = optional;
            Port = port;
            PortVariable = portVariable;
            SecretKey = secretKey;
            SecretKeyVariable = secretKeyVariable;
            Timeout = timeout;
            TimeoutVariable = timeoutVariable;
        }
    }
}
