// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class GetCiscoVpnFeatureTemplateNat64PoolResult
    {
        /// <summary>
        /// Ending IP address of NAT pool range
        /// </summary>
        public readonly string EndAddress;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string EndAddressVariable;
        /// <summary>
        /// Enable Route Leaking from Global VPN to this Service VPN
        /// </summary>
        public readonly bool LeakFromGlobal;
        /// <summary>
        /// Select protocol for route leaking
        /// </summary>
        public readonly string LeakFromGlobalProtocol;
        /// <summary>
        /// Enable Route Leaking from this Service VPN to Global VPN
        /// </summary>
        public readonly bool LeakToGlobal;
        /// <summary>
        /// NAT64 Pool name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Indicates if list item is considered optional.
        /// </summary>
        public readonly bool Optional;
        /// <summary>
        /// NAT 64 Overload Option
        /// </summary>
        public readonly bool Overload;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string OverloadVariable;
        /// <summary>
        /// Starting IP address of NAT pool range
        /// </summary>
        public readonly string StartAddress;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string StartAddressVariable;

        [OutputConstructor]
        private GetCiscoVpnFeatureTemplateNat64PoolResult(
            string endAddress,

            string endAddressVariable,

            bool leakFromGlobal,

            string leakFromGlobalProtocol,

            bool leakToGlobal,

            string name,

            bool optional,

            bool overload,

            string overloadVariable,

            string startAddress,

            string startAddressVariable)
        {
            EndAddress = endAddress;
            EndAddressVariable = endAddressVariable;
            LeakFromGlobal = leakFromGlobal;
            LeakFromGlobalProtocol = leakFromGlobalProtocol;
            LeakToGlobal = leakToGlobal;
            Name = name;
            Optional = optional;
            Overload = overload;
            OverloadVariable = overloadVariable;
            StartAddress = startAddress;
            StartAddressVariable = startAddressVariable;
        }
    }
}
