// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class SwitchportFeatureTemplateInterface
    {
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? Dot1xAuthenticationOrderVariable;
        /// <summary>
        /// Specify authentication methods in the order of preference
        /// </summary>
        public readonly ImmutableArray<string> Dot1xAuthenticationOrders;
        /// <summary>
        /// Set uni or bi directional authorization mode
        ///   - Choices: `both`, `in`
        ///   - Default value: `both`
        /// </summary>
        public readonly string? Dot1xControlDirection;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? Dot1xControlDirectionVariable;
        /// <summary>
        /// Set Critical VLAN
        ///   - Range: `1`-`4094`
        /// </summary>
        public readonly int? Dot1xCriticalVlan;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? Dot1xCriticalVlanVariable;
        /// <summary>
        /// Set 802.1x on off
        ///   - Default value: `true`
        /// </summary>
        public readonly bool? Dot1xEnable;
        /// <summary>
        /// Enable Critical Voice VLAN
        ///   - Default value: `false`
        /// </summary>
        public readonly bool? Dot1xEnableCriticialVoiceVlan;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? Dot1xEnableCriticialVoiceVlanVariable;
        /// <summary>
        /// Enable Periodic Reauthentication
        ///   - Default value: `false`
        /// </summary>
        public readonly bool? Dot1xEnablePeriodicReauth;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? Dot1xEnablePeriodicReauthVariable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? Dot1xEnableVariable;
        /// <summary>
        /// Set vlan to drop non-802.1x enabled clients into if client is not in MAB list
        ///   - Range: `1`-`4094`
        /// </summary>
        public readonly int? Dot1xGuestVlan;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? Dot1xGuestVlanVariable;
        /// <summary>
        /// Set host mode
        ///   - Choices: `single-host`, `multi-auth`, `multi-host`, `multi-domain`
        ///   - Default value: `single-host`
        /// </summary>
        public readonly string? Dot1xHostMode;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? Dot1xHostModeVariable;
        /// <summary>
        /// MAC Authentication Bypass
        ///   - Default value: `false`
        /// </summary>
        public readonly bool? Dot1xMacAuthenticationBypass;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? Dot1xMacAuthenticationBypassVariable;
        /// <summary>
        /// Set 802.1x Interface Pae Type
        ///   - Default value: `true`
        /// </summary>
        public readonly bool? Dot1xPaeEnable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? Dot1xPaeEnableVariable;
        /// <summary>
        /// Periodic Reauthentication Inactivity Timeout (in seconds)
        ///   - Range: `1`-`1440`
        ///   - Default value: `60`
        /// </summary>
        public readonly int? Dot1xPeriodicReauthInactivityTimeout;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? Dot1xPeriodicReauthInactivityTimeoutVariable;
        /// <summary>
        /// Periodic Reauthentication Interval (in seconds)
        ///   - Range: `0`-`1440`
        ///   - Default value: `0`
        /// </summary>
        public readonly int? Dot1xPeriodicReauthInterval;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? Dot1xPeriodicReauthIntervalVariable;
        /// <summary>
        /// Set Port-Control Mode
        ///   - Choices: `auto`, `force-unauthorized`, `force-authorized`
        ///   - Default value: `auto`
        /// </summary>
        public readonly string? Dot1xPortControl;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? Dot1xPortControlVariable;
        /// <summary>
        /// Set Restricted VLAN ID
        ///   - Range: `1`-`4094`
        /// </summary>
        public readonly int? Dot1xRestrictedVlan;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? Dot1xRestrictedVlanVariable;
        /// <summary>
        /// Duplex mode
        ///   - Choices: `full`, `half`
        /// </summary>
        public readonly string? Duplex;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? DuplexVariable;
        /// <summary>
        /// Set Interface name
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? NameVariable;
        /// <summary>
        /// Indicates if list item is considered optional.
        /// </summary>
        public readonly bool? Optional;
        /// <summary>
        /// Administrative state
        ///   - Default value: `true`
        /// </summary>
        public readonly bool? Shutdown;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? ShutdownVariable;
        /// <summary>
        /// Set interface speed
        ///   - Choices: `10`, `100`, `1000`, `2500`, `10000`
        /// </summary>
        public readonly string? Speed;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? SpeedVariable;
        /// <summary>
        /// Set VLAN identifier associated with bridging domain
        ///   - Range: `1`-`4094`
        /// </summary>
        public readonly int? SwitchportAccessVlan;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? SwitchportAccessVlanVariable;
        /// <summary>
        /// Set type of switch port: access/trunk
        ///   - Choices: `access`, `trunk`
        /// </summary>
        public readonly string? SwitchportMode;
        /// <summary>
        /// Configure VLAN IDs used with the trunk
        /// </summary>
        public readonly string? SwitchportTrunkAllowedVlans;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? SwitchportTrunkAllowedVlansVariable;
        /// <summary>
        /// Configure VLAN ID used for native VLAN
        ///   - Range: `1`-`4094`
        /// </summary>
        public readonly int? SwitchportTrunkNativeVlan;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? SwitchportTrunkNativeVlanVariable;
        /// <summary>
        /// Configure Voice Vlan
        ///   - Range: `1`-`4094`
        /// </summary>
        public readonly int? VoiceVlan;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? VoiceVlanVariable;

        [OutputConstructor]
        private SwitchportFeatureTemplateInterface(
            string? dot1xAuthenticationOrderVariable,

            ImmutableArray<string> dot1xAuthenticationOrders,

            string? dot1xControlDirection,

            string? dot1xControlDirectionVariable,

            int? dot1xCriticalVlan,

            string? dot1xCriticalVlanVariable,

            bool? dot1xEnable,

            bool? dot1xEnableCriticialVoiceVlan,

            string? dot1xEnableCriticialVoiceVlanVariable,

            bool? dot1xEnablePeriodicReauth,

            string? dot1xEnablePeriodicReauthVariable,

            string? dot1xEnableVariable,

            int? dot1xGuestVlan,

            string? dot1xGuestVlanVariable,

            string? dot1xHostMode,

            string? dot1xHostModeVariable,

            bool? dot1xMacAuthenticationBypass,

            string? dot1xMacAuthenticationBypassVariable,

            bool? dot1xPaeEnable,

            string? dot1xPaeEnableVariable,

            int? dot1xPeriodicReauthInactivityTimeout,

            string? dot1xPeriodicReauthInactivityTimeoutVariable,

            int? dot1xPeriodicReauthInterval,

            string? dot1xPeriodicReauthIntervalVariable,

            string? dot1xPortControl,

            string? dot1xPortControlVariable,

            int? dot1xRestrictedVlan,

            string? dot1xRestrictedVlanVariable,

            string? duplex,

            string? duplexVariable,

            string? name,

            string? nameVariable,

            bool? optional,

            bool? shutdown,

            string? shutdownVariable,

            string? speed,

            string? speedVariable,

            int? switchportAccessVlan,

            string? switchportAccessVlanVariable,

            string? switchportMode,

            string? switchportTrunkAllowedVlans,

            string? switchportTrunkAllowedVlansVariable,

            int? switchportTrunkNativeVlan,

            string? switchportTrunkNativeVlanVariable,

            int? voiceVlan,

            string? voiceVlanVariable)
        {
            Dot1xAuthenticationOrderVariable = dot1xAuthenticationOrderVariable;
            Dot1xAuthenticationOrders = dot1xAuthenticationOrders;
            Dot1xControlDirection = dot1xControlDirection;
            Dot1xControlDirectionVariable = dot1xControlDirectionVariable;
            Dot1xCriticalVlan = dot1xCriticalVlan;
            Dot1xCriticalVlanVariable = dot1xCriticalVlanVariable;
            Dot1xEnable = dot1xEnable;
            Dot1xEnableCriticialVoiceVlan = dot1xEnableCriticialVoiceVlan;
            Dot1xEnableCriticialVoiceVlanVariable = dot1xEnableCriticialVoiceVlanVariable;
            Dot1xEnablePeriodicReauth = dot1xEnablePeriodicReauth;
            Dot1xEnablePeriodicReauthVariable = dot1xEnablePeriodicReauthVariable;
            Dot1xEnableVariable = dot1xEnableVariable;
            Dot1xGuestVlan = dot1xGuestVlan;
            Dot1xGuestVlanVariable = dot1xGuestVlanVariable;
            Dot1xHostMode = dot1xHostMode;
            Dot1xHostModeVariable = dot1xHostModeVariable;
            Dot1xMacAuthenticationBypass = dot1xMacAuthenticationBypass;
            Dot1xMacAuthenticationBypassVariable = dot1xMacAuthenticationBypassVariable;
            Dot1xPaeEnable = dot1xPaeEnable;
            Dot1xPaeEnableVariable = dot1xPaeEnableVariable;
            Dot1xPeriodicReauthInactivityTimeout = dot1xPeriodicReauthInactivityTimeout;
            Dot1xPeriodicReauthInactivityTimeoutVariable = dot1xPeriodicReauthInactivityTimeoutVariable;
            Dot1xPeriodicReauthInterval = dot1xPeriodicReauthInterval;
            Dot1xPeriodicReauthIntervalVariable = dot1xPeriodicReauthIntervalVariable;
            Dot1xPortControl = dot1xPortControl;
            Dot1xPortControlVariable = dot1xPortControlVariable;
            Dot1xRestrictedVlan = dot1xRestrictedVlan;
            Dot1xRestrictedVlanVariable = dot1xRestrictedVlanVariable;
            Duplex = duplex;
            DuplexVariable = duplexVariable;
            Name = name;
            NameVariable = nameVariable;
            Optional = optional;
            Shutdown = shutdown;
            ShutdownVariable = shutdownVariable;
            Speed = speed;
            SpeedVariable = speedVariable;
            SwitchportAccessVlan = switchportAccessVlan;
            SwitchportAccessVlanVariable = switchportAccessVlanVariable;
            SwitchportMode = switchportMode;
            SwitchportTrunkAllowedVlans = switchportTrunkAllowedVlans;
            SwitchportTrunkAllowedVlansVariable = switchportTrunkAllowedVlansVariable;
            SwitchportTrunkNativeVlan = switchportTrunkNativeVlan;
            SwitchportTrunkNativeVlanVariable = switchportTrunkNativeVlanVariable;
            VoiceVlan = voiceVlan;
            VoiceVlanVariable = voiceVlanVariable;
        }
    }
}
