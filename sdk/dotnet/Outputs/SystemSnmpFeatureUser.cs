// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class SystemSnmpFeatureUser
    {
        /// <summary>
        /// Specify authentication protocol password
        /// </summary>
        public readonly string? AuthenticationPassword;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? AuthenticationPasswordVariable;
        /// <summary>
        /// Configure authentication protocol
        ///   - Choices: `sha`
        /// </summary>
        public readonly string? AuthenticationProtocol;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? AuthenticationProtocolVariable;
        /// <summary>
        /// Name of the SNMP group
        /// </summary>
        public readonly string? Group;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? GroupVariable;
        /// <summary>
        /// Name of the SNMP user
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Specify privacy protocol password
        /// </summary>
        public readonly string? PrivacyPassword;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? PrivacyPasswordVariable;
        /// <summary>
        /// Configure privacy protocol
        ///   - Choices: `aes-cfb-128`, `aes-256-cfb-128`
        /// </summary>
        public readonly string? PrivacyProtocol;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? PrivacyProtocolVariable;

        [OutputConstructor]
        private SystemSnmpFeatureUser(
            string? authenticationPassword,

            string? authenticationPasswordVariable,

            string? authenticationProtocol,

            string? authenticationProtocolVariable,

            string? group,

            string? groupVariable,

            string? name,

            string? privacyPassword,

            string? privacyPasswordVariable,

            string? privacyProtocol,

            string? privacyProtocolVariable)
        {
            AuthenticationPassword = authenticationPassword;
            AuthenticationPasswordVariable = authenticationPasswordVariable;
            AuthenticationProtocol = authenticationProtocol;
            AuthenticationProtocolVariable = authenticationProtocolVariable;
            Group = group;
            GroupVariable = groupVariable;
            Name = name;
            PrivacyPassword = privacyPassword;
            PrivacyPasswordVariable = privacyPasswordVariable;
            PrivacyProtocol = privacyProtocol;
            PrivacyProtocolVariable = privacyProtocolVariable;
        }
    }
}
