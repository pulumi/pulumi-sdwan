// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class ApplicationPriorityTrafficPolicyPolicySequenceActionSetParameter
    {
        /// <summary>
        /// - Range: `0`-`63`
        /// </summary>
        public readonly int? Dscp;
        public readonly string? ForwardingClassListId;
        public readonly ImmutableArray<string> LocalTlocListColors;
        /// <summary>
        /// - Choices: `ipsec`, `gre`
        /// </summary>
        public readonly string? LocalTlocListEncapsulation;
        public readonly string? LocalTlocListRestrict;
        public readonly string? NextHopIpv4;
        public readonly string? NextHopIpv6;
        public readonly bool? NextHopLoose;
        public readonly string? PolicerId;
        public readonly string? PreferredColorGroupId;
        public readonly ImmutableArray<string> PreferredRemoteColorIds;
        public readonly string? PreferredRemoteColorRestrict;
        public readonly bool? ServiceChainFallbackToRouting;
        public readonly bool? ServiceChainLocal;
        public readonly ImmutableArray<string> ServiceChainTlocColors;
        /// <summary>
        /// - Choices: `ipsec`, `gre`
        /// </summary>
        public readonly string? ServiceChainTlocEncapsulation;
        public readonly string? ServiceChainTlocIp;
        public readonly string? ServiceChainTlocListId;
        /// <summary>
        /// - Choices: `SC1`, `SC2`, `SC4`, `SC5`, `SC6`, `SC7`, `SC8`, `SC9`, `SC10`, `SC11`, `SC12`, `SC13`, `SC14`, `SC15`, `SC16`
        /// </summary>
        public readonly string? ServiceChainType;
        /// <summary>
        /// - Range: `0`-`65530`
        /// </summary>
        public readonly int? ServiceChainVpn;
        public readonly ImmutableArray<string> ServiceTlocColors;
        /// <summary>
        /// - Choices: `ipsec`, `gre`
        /// </summary>
        public readonly string? ServiceTlocEncapsulation;
        public readonly string? ServiceTlocIp;
        public readonly string? ServiceTlocListId;
        /// <summary>
        /// - Choices: `FW`, `IDS`, `IDP`, `netsvc1`, `netsvc2`, `netsvc3`, `netsvc4`, `appqoe`
        /// </summary>
        public readonly string? ServiceType;
        public readonly string? ServiceVpn;
        public readonly ImmutableArray<string> TlocColors;
        /// <summary>
        /// - Choices: `ipsec`, `gre`
        /// </summary>
        public readonly string? TlocEncapsulation;
        public readonly string? TlocIp;
        public readonly string? TlocListId;
        public readonly string? Vpn;

        [OutputConstructor]
        private ApplicationPriorityTrafficPolicyPolicySequenceActionSetParameter(
            int? dscp,

            string? forwardingClassListId,

            ImmutableArray<string> localTlocListColors,

            string? localTlocListEncapsulation,

            string? localTlocListRestrict,

            string? nextHopIpv4,

            string? nextHopIpv6,

            bool? nextHopLoose,

            string? policerId,

            string? preferredColorGroupId,

            ImmutableArray<string> preferredRemoteColorIds,

            string? preferredRemoteColorRestrict,

            bool? serviceChainFallbackToRouting,

            bool? serviceChainLocal,

            ImmutableArray<string> serviceChainTlocColors,

            string? serviceChainTlocEncapsulation,

            string? serviceChainTlocIp,

            string? serviceChainTlocListId,

            string? serviceChainType,

            int? serviceChainVpn,

            ImmutableArray<string> serviceTlocColors,

            string? serviceTlocEncapsulation,

            string? serviceTlocIp,

            string? serviceTlocListId,

            string? serviceType,

            string? serviceVpn,

            ImmutableArray<string> tlocColors,

            string? tlocEncapsulation,

            string? tlocIp,

            string? tlocListId,

            string? vpn)
        {
            Dscp = dscp;
            ForwardingClassListId = forwardingClassListId;
            LocalTlocListColors = localTlocListColors;
            LocalTlocListEncapsulation = localTlocListEncapsulation;
            LocalTlocListRestrict = localTlocListRestrict;
            NextHopIpv4 = nextHopIpv4;
            NextHopIpv6 = nextHopIpv6;
            NextHopLoose = nextHopLoose;
            PolicerId = policerId;
            PreferredColorGroupId = preferredColorGroupId;
            PreferredRemoteColorIds = preferredRemoteColorIds;
            PreferredRemoteColorRestrict = preferredRemoteColorRestrict;
            ServiceChainFallbackToRouting = serviceChainFallbackToRouting;
            ServiceChainLocal = serviceChainLocal;
            ServiceChainTlocColors = serviceChainTlocColors;
            ServiceChainTlocEncapsulation = serviceChainTlocEncapsulation;
            ServiceChainTlocIp = serviceChainTlocIp;
            ServiceChainTlocListId = serviceChainTlocListId;
            ServiceChainType = serviceChainType;
            ServiceChainVpn = serviceChainVpn;
            ServiceTlocColors = serviceTlocColors;
            ServiceTlocEncapsulation = serviceTlocEncapsulation;
            ServiceTlocIp = serviceTlocIp;
            ServiceTlocListId = serviceTlocListId;
            ServiceType = serviceType;
            ServiceVpn = serviceVpn;
            TlocColors = tlocColors;
            TlocEncapsulation = tlocEncapsulation;
            TlocIp = tlocIp;
            TlocListId = tlocListId;
            Vpn = vpn;
        }
    }
}
