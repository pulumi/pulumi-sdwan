// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class ServiceWirelessLanFeatureSsid
    {
        /// <summary>
        /// Set admin state
        ///   - Default value: `true`
        /// </summary>
        public readonly bool? AdminState;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? AdminStateVariable;
        /// <summary>
        /// Enable broadcast SSID
        ///   - Default value: `true`
        /// </summary>
        public readonly bool? BroadcastSsid;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? BroadcastSsidVariable;
        /// <summary>
        /// Set passphrase, Attribute conditional on `security_type` being equal to `personal`
        /// </summary>
        public readonly string? Passphrase;
        /// <summary>
        /// Variable name, Attribute conditional on `security_type` being equal to `personal`
        /// </summary>
        public readonly string? PassphraseVariable;
        /// <summary>
        /// Select QoS profile
        ///   - Choices: `platinum`, `gold`, `silver`, `bronze`
        ///   - Default value: `silver`
        /// </summary>
        public readonly string? QosProfile;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? QosProfileVariable;
        /// <summary>
        /// Select radio type
        ///   - Choices: `24ghz`, `5ghz`, `all`
        ///   - Default value: `all`
        /// </summary>
        public readonly string? RadioType;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? RadioTypeVariable;
        /// <summary>
        /// Set RADIUS server IP, Attribute conditional on `security_type` being equal to `enterprise`
        /// </summary>
        public readonly string? RadiusServerIp;
        /// <summary>
        /// Variable name, Attribute conditional on `security_type` being equal to `enterprise`
        /// </summary>
        public readonly string? RadiusServerIpVariable;
        /// <summary>
        /// Set RADIUS server authentication port, Attribute conditional on `security_type` being equal to `enterprise`
        ///   - Range: `1`-`65535`
        ///   - Default value: `1812`
        /// </summary>
        public readonly int? RadiusServerPort;
        /// <summary>
        /// Variable name, Attribute conditional on `security_type` being equal to `enterprise`
        /// </summary>
        public readonly string? RadiusServerPortVariable;
        /// <summary>
        /// Set RADIUS server shared secret, Attribute conditional on `security_type` being equal to `enterprise`
        /// </summary>
        public readonly string? RadiusServerSecret;
        /// <summary>
        /// Variable name, Attribute conditional on `security_type` being equal to `enterprise`
        /// </summary>
        public readonly string? RadiusServerSecretVariable;
        /// <summary>
        /// Select security type
        ///   - Choices: `enterprise`, `personal`, `open`
        /// </summary>
        public readonly string? SecurityType;
        /// <summary>
        /// Configure wlan SSID
        /// </summary>
        public readonly string? SsidName;
        /// <summary>
        /// Set VLAN ID
        ///   - Range: `1`-`4094`
        /// </summary>
        public readonly int? VlanId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? VlanIdVariable;

        [OutputConstructor]
        private ServiceWirelessLanFeatureSsid(
            bool? adminState,

            string? adminStateVariable,

            bool? broadcastSsid,

            string? broadcastSsidVariable,

            string? passphrase,

            string? passphraseVariable,

            string? qosProfile,

            string? qosProfileVariable,

            string? radioType,

            string? radioTypeVariable,

            string? radiusServerIp,

            string? radiusServerIpVariable,

            int? radiusServerPort,

            string? radiusServerPortVariable,

            string? radiusServerSecret,

            string? radiusServerSecretVariable,

            string? securityType,

            string? ssidName,

            int? vlanId,

            string? vlanIdVariable)
        {
            AdminState = adminState;
            AdminStateVariable = adminStateVariable;
            BroadcastSsid = broadcastSsid;
            BroadcastSsidVariable = broadcastSsidVariable;
            Passphrase = passphrase;
            PassphraseVariable = passphraseVariable;
            QosProfile = qosProfile;
            QosProfileVariable = qosProfileVariable;
            RadioType = radioType;
            RadioTypeVariable = radioTypeVariable;
            RadiusServerIp = radiusServerIp;
            RadiusServerIpVariable = radiusServerIpVariable;
            RadiusServerPort = radiusServerPort;
            RadiusServerPortVariable = radiusServerPortVariable;
            RadiusServerSecret = radiusServerSecret;
            RadiusServerSecretVariable = radiusServerSecretVariable;
            SecurityType = securityType;
            SsidName = ssidName;
            VlanId = vlanId;
            VlanIdVariable = vlanIdVariable;
        }
    }
}
