// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class GetSystemNtpFeatureServerResult
    {
        /// <summary>
        /// Set authentication key for the server
        /// </summary>
        public readonly int AuthenticationKey;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AuthenticationKeyVariable;
        /// <summary>
        /// Set hostname or IP address of server
        /// </summary>
        public readonly string HostnameIpAddress;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string HostnameIpAddressVariable;
        /// <summary>
        /// Set NTP version
        /// </summary>
        public readonly int NtpVersion;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string NtpVersionVariable;
        /// <summary>
        /// Prefer this NTP server
        /// </summary>
        public readonly bool PreferThisNtpServer;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PreferThisNtpServerVariable;
        /// <summary>
        /// Set interface to use to reach NTP server
        /// </summary>
        public readonly string SourceInterface;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SourceInterfaceVariable;
        /// <summary>
        /// Set VPN in which NTP server is located
        /// </summary>
        public readonly int Vpn;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string VpnVariable;

        [OutputConstructor]
        private GetSystemNtpFeatureServerResult(
            int authenticationKey,

            string authenticationKeyVariable,

            string hostnameIpAddress,

            string hostnameIpAddressVariable,

            int ntpVersion,

            string ntpVersionVariable,

            bool preferThisNtpServer,

            string preferThisNtpServerVariable,

            string sourceInterface,

            string sourceInterfaceVariable,

            int vpn,

            string vpnVariable)
        {
            AuthenticationKey = authenticationKey;
            AuthenticationKeyVariable = authenticationKeyVariable;
            HostnameIpAddress = hostnameIpAddress;
            HostnameIpAddressVariable = hostnameIpAddressVariable;
            NtpVersion = ntpVersion;
            NtpVersionVariable = ntpVersionVariable;
            PreferThisNtpServer = preferThisNtpServer;
            PreferThisNtpServerVariable = preferThisNtpServerVariable;
            SourceInterface = sourceInterface;
            SourceInterfaceVariable = sourceInterfaceVariable;
            Vpn = vpn;
            VpnVariable = vpnVariable;
        }
    }
}
