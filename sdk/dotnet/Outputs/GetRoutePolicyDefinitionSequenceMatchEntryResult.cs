// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class GetRoutePolicyDefinitionSequenceMatchEntryResult
    {
        /// <summary>
        /// AS path list ID
        /// </summary>
        public readonly string AsPathListId;
        /// <summary>
        /// AS path list version
        /// </summary>
        public readonly int AsPathListVersion;
        /// <summary>
        /// Community list ID
        /// </summary>
        public readonly string CommunityListId;
        /// <summary>
        /// Community list IDs
        /// </summary>
        public readonly ImmutableArray<string> CommunityListIds;
        /// <summary>
        /// Community list match flag
        /// </summary>
        public readonly string CommunityListMatchFlag;
        /// <summary>
        /// Community list version
        /// </summary>
        public readonly int CommunityListVersion;
        /// <summary>
        /// Community list versions
        /// </summary>
        public readonly ImmutableArray<string> CommunityListVersions;
        /// <summary>
        /// Expanded community list ID
        /// </summary>
        public readonly string ExpandedCommunityListId;
        /// <summary>
        /// Expanded community list variable
        /// </summary>
        public readonly string ExpandedCommunityListVariable;
        /// <summary>
        /// Expanded community list version
        /// </summary>
        public readonly int ExpandedCommunityListVersion;
        /// <summary>
        /// Extended community list ID
        /// </summary>
        public readonly string ExtendedCommunityListId;
        /// <summary>
        /// Extended community list version
        /// </summary>
        public readonly int ExtendedCommunityListVersion;
        /// <summary>
        /// Local preference
        /// </summary>
        public readonly int LocalPreference;
        /// <summary>
        /// Metric
        /// </summary>
        public readonly int Metric;
        /// <summary>
        /// Next hop prefix list ID
        /// </summary>
        public readonly string NextHopPrefixListId;
        /// <summary>
        /// Next hop prefix list version
        /// </summary>
        public readonly int NextHopPrefixListVersion;
        /// <summary>
        /// OMP tag
        /// </summary>
        public readonly int OmpTag;
        /// <summary>
        /// Origin
        /// </summary>
        public readonly string Origin;
        /// <summary>
        /// OSPF tag
        /// </summary>
        public readonly int OspfTag;
        /// <summary>
        /// Peer IP
        /// </summary>
        public readonly string Peer;
        /// <summary>
        /// Prefix list ID
        /// </summary>
        public readonly string PrefixListId;
        /// <summary>
        /// Prefix list version
        /// </summary>
        public readonly int PrefixListVersion;
        /// <summary>
        /// Type of match entry
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetRoutePolicyDefinitionSequenceMatchEntryResult(
            string asPathListId,

            int asPathListVersion,

            string communityListId,

            ImmutableArray<string> communityListIds,

            string communityListMatchFlag,

            int communityListVersion,

            ImmutableArray<string> communityListVersions,

            string expandedCommunityListId,

            string expandedCommunityListVariable,

            int expandedCommunityListVersion,

            string extendedCommunityListId,

            int extendedCommunityListVersion,

            int localPreference,

            int metric,

            string nextHopPrefixListId,

            int nextHopPrefixListVersion,

            int ompTag,

            string origin,

            int ospfTag,

            string peer,

            string prefixListId,

            int prefixListVersion,

            string type)
        {
            AsPathListId = asPathListId;
            AsPathListVersion = asPathListVersion;
            CommunityListId = communityListId;
            CommunityListIds = communityListIds;
            CommunityListMatchFlag = communityListMatchFlag;
            CommunityListVersion = communityListVersion;
            CommunityListVersions = communityListVersions;
            ExpandedCommunityListId = expandedCommunityListId;
            ExpandedCommunityListVariable = expandedCommunityListVariable;
            ExpandedCommunityListVersion = expandedCommunityListVersion;
            ExtendedCommunityListId = extendedCommunityListId;
            ExtendedCommunityListVersion = extendedCommunityListVersion;
            LocalPreference = localPreference;
            Metric = metric;
            NextHopPrefixListId = nextHopPrefixListId;
            NextHopPrefixListVersion = nextHopPrefixListVersion;
            OmpTag = ompTag;
            Origin = origin;
            OspfTag = ospfTag;
            Peer = peer;
            PrefixListId = prefixListId;
            PrefixListVersion = prefixListVersion;
            Type = type;
        }
    }
}
