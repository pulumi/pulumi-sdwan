// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class CiscoSecurityFeatureTemplateKey
    {
        /// <summary>
        /// Configure Accept AO Mismatch
        ///   - Default value: `false`
        /// </summary>
        public readonly bool? AcceptAoMismatch;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? AcceptAoMismatchVariable;
        /// <summary>
        /// Configure Accept lifetime Duration
        ///   - Range: `1`-`2147483646`
        /// </summary>
        public readonly int? AcceptLifetimeDuration;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? AcceptLifetimeDurationVariable;
        /// <summary>
        /// Configure Key lifetime end time
        /// </summary>
        public readonly string? AcceptLifetimeEndTime;
        /// <summary>
        /// Configure Key lifetime end time
        ///   - Choices: `infinite`, `duration`, `end-epoch`
        ///   - Default value: `infinite`
        /// </summary>
        public readonly string? AcceptLifetimeEndTimeFormat;
        /// <summary>
        /// Configure Key lifetime end time
        /// </summary>
        public readonly bool? AcceptLifetimeInfinite;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? AcceptLifetimeInfiniteVariable;
        /// <summary>
        /// Configure Accept Lifetime Local
        ///   - Default value: `false`
        /// </summary>
        public readonly bool? AcceptLifetimeLocal;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? AcceptLifetimeLocalVariable;
        /// <summary>
        /// Configure Key lifetime start time
        /// </summary>
        public readonly string? AcceptLifetimeStartTime;
        /// <summary>
        /// Select the chain name
        /// </summary>
        public readonly string? ChainName;
        /// <summary>
        /// Crypto Algorithm
        ///   - Choices: `aes-128-cmac`, `hmac-sha-1`, `hmac-sha-256`
        /// </summary>
        public readonly string? CryptoAlgorithm;
        /// <summary>
        /// Select the Key ID
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Configure Include TCP Options
        ///   - Default value: `false`
        /// </summary>
        public readonly bool? IncludeTcpOptions;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? IncludeTcpOptionsVariable;
        /// <summary>
        /// Specify the Key String
        /// </summary>
        public readonly string? KeyString;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? KeyStringVariable;
        /// <summary>
        /// Indicates if list item is considered optional.
        /// </summary>
        public readonly bool? Optional;
        /// <summary>
        /// Specify the Receiver ID
        ///   - Range: `0`-`255`
        ///   - Default value: `0`
        /// </summary>
        public readonly int? ReceiveId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? ReceiveIdVariable;
        /// <summary>
        /// Specify the Send ID
        ///   - Range: `0`-`255`
        ///   - Default value: `0`
        /// </summary>
        public readonly int? SendId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? SendIdVariable;
        /// <summary>
        /// Configure Send lifetime Duration
        ///   - Range: `1`-`2147483646`
        /// </summary>
        public readonly int? SendLifetimeDuration;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? SendLifetimeDurationVariable;
        /// <summary>
        /// Configure Key lifetime end time
        /// </summary>
        public readonly string? SendLifetimeEndTime;
        /// <summary>
        /// Configure Key lifetime end time
        ///   - Choices: `infinite`, `duration`, `end-epoch`
        ///   - Default value: `infinite`
        /// </summary>
        public readonly string? SendLifetimeEndTimeFormat;
        /// <summary>
        /// Configure Key lifetime end time
        /// </summary>
        public readonly bool? SendLifetimeInfinite;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? SendLifetimeInfiniteVariable;
        /// <summary>
        /// Configure Send lifetime Local
        ///   - Default value: `false`
        /// </summary>
        public readonly bool? SendLifetimeLocal;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? SendLifetimeLocalVariable;
        /// <summary>
        /// Configure Key lifetime start time
        /// </summary>
        public readonly string? SendLifetimeStartTime;

        [OutputConstructor]
        private CiscoSecurityFeatureTemplateKey(
            bool? acceptAoMismatch,

            string? acceptAoMismatchVariable,

            int? acceptLifetimeDuration,

            string? acceptLifetimeDurationVariable,

            string? acceptLifetimeEndTime,

            string? acceptLifetimeEndTimeFormat,

            bool? acceptLifetimeInfinite,

            string? acceptLifetimeInfiniteVariable,

            bool? acceptLifetimeLocal,

            string? acceptLifetimeLocalVariable,

            string? acceptLifetimeStartTime,

            string? chainName,

            string? cryptoAlgorithm,

            string? id,

            bool? includeTcpOptions,

            string? includeTcpOptionsVariable,

            string? keyString,

            string? keyStringVariable,

            bool? optional,

            int? receiveId,

            string? receiveIdVariable,

            int? sendId,

            string? sendIdVariable,

            int? sendLifetimeDuration,

            string? sendLifetimeDurationVariable,

            string? sendLifetimeEndTime,

            string? sendLifetimeEndTimeFormat,

            bool? sendLifetimeInfinite,

            string? sendLifetimeInfiniteVariable,

            bool? sendLifetimeLocal,

            string? sendLifetimeLocalVariable,

            string? sendLifetimeStartTime)
        {
            AcceptAoMismatch = acceptAoMismatch;
            AcceptAoMismatchVariable = acceptAoMismatchVariable;
            AcceptLifetimeDuration = acceptLifetimeDuration;
            AcceptLifetimeDurationVariable = acceptLifetimeDurationVariable;
            AcceptLifetimeEndTime = acceptLifetimeEndTime;
            AcceptLifetimeEndTimeFormat = acceptLifetimeEndTimeFormat;
            AcceptLifetimeInfinite = acceptLifetimeInfinite;
            AcceptLifetimeInfiniteVariable = acceptLifetimeInfiniteVariable;
            AcceptLifetimeLocal = acceptLifetimeLocal;
            AcceptLifetimeLocalVariable = acceptLifetimeLocalVariable;
            AcceptLifetimeStartTime = acceptLifetimeStartTime;
            ChainName = chainName;
            CryptoAlgorithm = cryptoAlgorithm;
            Id = id;
            IncludeTcpOptions = includeTcpOptions;
            IncludeTcpOptionsVariable = includeTcpOptionsVariable;
            KeyString = keyString;
            KeyStringVariable = keyStringVariable;
            Optional = optional;
            ReceiveId = receiveId;
            ReceiveIdVariable = receiveIdVariable;
            SendId = sendId;
            SendIdVariable = sendIdVariable;
            SendLifetimeDuration = sendLifetimeDuration;
            SendLifetimeDurationVariable = sendLifetimeDurationVariable;
            SendLifetimeEndTime = sendLifetimeEndTime;
            SendLifetimeEndTimeFormat = sendLifetimeEndTimeFormat;
            SendLifetimeInfinite = sendLifetimeInfinite;
            SendLifetimeInfiniteVariable = sendLifetimeInfiniteVariable;
            SendLifetimeLocal = sendLifetimeLocal;
            SendLifetimeLocalVariable = sendLifetimeLocalVariable;
            SendLifetimeStartTime = sendLifetimeStartTime;
        }
    }
}
