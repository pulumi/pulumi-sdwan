// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class GetServiceRoutingBgpFeatureIpv4NeighborResult
    {
        /// <summary>
        /// Set neighbor address
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// Set BGP address family
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceRoutingBgpFeatureIpv4NeighborAddressFamilyResult> AddressFamilies;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AddressVariable;
        /// <summary>
        /// The number of accept as-path with my AS present in it
        /// </summary>
        public readonly int AllowasInNumber;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AllowasInNumberVariable;
        /// <summary>
        /// Override matching AS-number while sending update
        /// </summary>
        public readonly bool AsOverride;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AsOverrideVariable;
        /// <summary>
        /// Set description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DescriptionVariable;
        /// <summary>
        /// Set TTL value for peers that are not directly connected
        /// </summary>
        public readonly int EbgpMultihop;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string EbgpMultihopVariable;
        /// <summary>
        /// Interval (seconds) not receiving a keepalive message declares a BGP peer down
        /// </summary>
        public readonly int HoldTime;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string HoldTimeVariable;
        /// <summary>
        /// Interval (seconds) of keepalive messages sent to its BGP peer
        /// </summary>
        public readonly int KeepaliveTime;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string KeepaliveTimeVariable;
        /// <summary>
        /// Set local autonomous number,Local-AS cannot have the local BGP protocol AS number or the AS number of the remote peer.The local-as is valid only if the peer is a true eBGP peer. It does not work for two peers in different sub-ASs in a confederation.
        /// </summary>
        public readonly int LocalAs;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string LocalAsVariable;
        /// <summary>
        /// Set router to be next hop for routes advertised to neighbor
        /// </summary>
        public readonly bool NextHopSelf;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string NextHopSelfVariable;
        /// <summary>
        /// Set MD5 password on TCP connection with BGP peer
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PasswordVariable;
        /// <summary>
        /// Set remote autonomous system number
        /// </summary>
        public readonly int RemoteAs;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string RemoteAsVariable;
        /// <summary>
        /// Send community attribute
        /// </summary>
        public readonly bool SendCommunity;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SendCommunityVariable;
        /// <summary>
        /// Send extended community attribute
        /// </summary>
        public readonly bool SendExtendedCommunity;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SendExtendedCommunityVariable;
        /// <summary>
        /// Send label
        /// </summary>
        public readonly bool SendLabel;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SendLabelVariable;
        /// <summary>
        /// Enable or disable a BGP neighbor
        /// </summary>
        public readonly bool Shutdown;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ShutdownVariable;
        /// <summary>
        /// Source interface name for BGP neighbor
        /// </summary>
        public readonly string UpdateSourceInterface;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string UpdateSourceInterfaceVariable;

        [OutputConstructor]
        private GetServiceRoutingBgpFeatureIpv4NeighborResult(
            string address,

            ImmutableArray<Outputs.GetServiceRoutingBgpFeatureIpv4NeighborAddressFamilyResult> addressFamilies,

            string addressVariable,

            int allowasInNumber,

            string allowasInNumberVariable,

            bool asOverride,

            string asOverrideVariable,

            string description,

            string descriptionVariable,

            int ebgpMultihop,

            string ebgpMultihopVariable,

            int holdTime,

            string holdTimeVariable,

            int keepaliveTime,

            string keepaliveTimeVariable,

            int localAs,

            string localAsVariable,

            bool nextHopSelf,

            string nextHopSelfVariable,

            string password,

            string passwordVariable,

            int remoteAs,

            string remoteAsVariable,

            bool sendCommunity,

            string sendCommunityVariable,

            bool sendExtendedCommunity,

            string sendExtendedCommunityVariable,

            bool sendLabel,

            string sendLabelVariable,

            bool shutdown,

            string shutdownVariable,

            string updateSourceInterface,

            string updateSourceInterfaceVariable)
        {
            Address = address;
            AddressFamilies = addressFamilies;
            AddressVariable = addressVariable;
            AllowasInNumber = allowasInNumber;
            AllowasInNumberVariable = allowasInNumberVariable;
            AsOverride = asOverride;
            AsOverrideVariable = asOverrideVariable;
            Description = description;
            DescriptionVariable = descriptionVariable;
            EbgpMultihop = ebgpMultihop;
            EbgpMultihopVariable = ebgpMultihopVariable;
            HoldTime = holdTime;
            HoldTimeVariable = holdTimeVariable;
            KeepaliveTime = keepaliveTime;
            KeepaliveTimeVariable = keepaliveTimeVariable;
            LocalAs = localAs;
            LocalAsVariable = localAsVariable;
            NextHopSelf = nextHopSelf;
            NextHopSelfVariable = nextHopSelfVariable;
            Password = password;
            PasswordVariable = passwordVariable;
            RemoteAs = remoteAs;
            RemoteAsVariable = remoteAsVariable;
            SendCommunity = sendCommunity;
            SendCommunityVariable = sendCommunityVariable;
            SendExtendedCommunity = sendExtendedCommunity;
            SendExtendedCommunityVariable = sendExtendedCommunityVariable;
            SendLabel = sendLabel;
            SendLabelVariable = sendLabelVariable;
            Shutdown = shutdown;
            ShutdownVariable = shutdownVariable;
            UpdateSourceInterface = updateSourceInterface;
            UpdateSourceInterfaceVariable = updateSourceInterfaceVariable;
        }
    }
}
