// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class CedgeAaaFeatureTemplateTacacsServerGroupServer
    {
        /// <summary>
        /// Set IP address of TACACS server
        /// </summary>
        public readonly string? Address;
        /// <summary>
        /// Type of encyption. To be used for type 6
        ///   - Choices: `6`, `7`
        /// </summary>
        public readonly string? EncryptionType;
        /// <summary>
        /// Set the TACACS server shared key
        /// </summary>
        public readonly string? Key;
        /// <summary>
        /// Indicates if list item is considered optional.
        /// </summary>
        public readonly bool? Optional;
        /// <summary>
        /// TACACS Port
        ///   - Range: `1`-`65535`
        ///   - Default value: `49`
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? PortVariable;
        /// <summary>
        /// Set the TACACS server shared type 7 encrypted key
        /// </summary>
        public readonly string? SecretKey;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? SecretKeyVariable;
        /// <summary>
        /// Configure how long to wait for replies from the TACACS server
        ///   - Range: `1`-`1000`
        ///   - Default value: `5`
        /// </summary>
        public readonly int? Timeout;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? TimeoutVariable;

        [OutputConstructor]
        private CedgeAaaFeatureTemplateTacacsServerGroupServer(
            string? address,

            string? encryptionType,

            string? key,

            bool? optional,

            int? port,

            string? portVariable,

            string? secretKey,

            string? secretKeyVariable,

            int? timeout,

            string? timeoutVariable)
        {
            Address = address;
            EncryptionType = encryptionType;
            Key = key;
            Optional = optional;
            Port = port;
            PortVariable = portVariable;
            SecretKey = secretKey;
            SecretKeyVariable = secretKeyVariable;
            Timeout = timeout;
            TimeoutVariable = timeoutVariable;
        }
    }
}
