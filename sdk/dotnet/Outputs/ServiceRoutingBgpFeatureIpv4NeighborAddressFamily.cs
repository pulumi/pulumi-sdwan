// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class ServiceRoutingBgpFeatureIpv4NeighborAddressFamily
    {
        /// <summary>
        /// Set maximum number of prefixes accepted from BGP peer, Attribute conditional on `PolicyType` being equal to `disable-peer`
        ///   - Range: `1`-`4294967295`
        /// </summary>
        public readonly int? DisablePeerMaxNumberOfPrefixes;
        /// <summary>
        /// Variable name, Attribute conditional on `PolicyType` being equal to `disable-peer`
        /// </summary>
        public readonly string? DisablePeerMaxNumberOfPrefixesVariable;
        /// <summary>
        /// Set threshold(1 to 100) at which to generate a warning message, Attribute conditional on `PolicyType` being equal to `disable-peer`
        ///   - Range: `1`-`100`
        ///   - Default value: `75`
        /// </summary>
        public readonly int? DisablePeerThreshold;
        /// <summary>
        /// Variable name, Attribute conditional on `PolicyType` being equal to `disable-peer`
        /// </summary>
        public readonly string? DisablePeerThresholdVariable;
        /// <summary>
        /// Set IPv4 unicast address family
        /// </summary>
        public readonly string? FamilyType;
        public readonly string? InRoutePolicyId;
        public readonly string? OutRoutePolicyId;
        /// <summary>
        /// Neighbor received maximum prefix policy is disabled.
        ///   - Choices: `Restart`, `Off`, `warning-only`, `disable-peer`
        /// </summary>
        public readonly string? PolicyType;
        /// <summary>
        /// Set the restart interval(minutes) when to restart BGP connection if threshold is exceeded, Attribute conditional on `PolicyType` being equal to `Restart`
        ///   - Range: `1`-`65535`
        /// </summary>
        public readonly int? RestartInterval;
        /// <summary>
        /// Variable name, Attribute conditional on `PolicyType` being equal to `Restart`
        /// </summary>
        public readonly string? RestartIntervalVariable;
        /// <summary>
        /// Set maximum number of prefixes accepted from BGP peer, Attribute conditional on `PolicyType` being equal to `Restart`
        ///   - Range: `1`-`4294967295`
        /// </summary>
        public readonly int? RestartMaxNumberOfPrefixes;
        /// <summary>
        /// Variable name, Attribute conditional on `PolicyType` being equal to `Restart`
        /// </summary>
        public readonly string? RestartMaxNumberOfPrefixesVariable;
        /// <summary>
        /// Set threshold(1 to 100) at which to generate a warning message, Attribute conditional on `PolicyType` being equal to `Restart`
        ///   - Range: `1`-`100`
        ///   - Default value: `75`
        /// </summary>
        public readonly int? RestartThreshold;
        /// <summary>
        /// Variable name, Attribute conditional on `PolicyType` being equal to `Restart`
        /// </summary>
        public readonly string? RestartThresholdVariable;
        /// <summary>
        /// Set maximum number of prefixes accepted from BGP peer, Attribute conditional on `PolicyType` being equal to `warning-only`
        ///   - Range: `1`-`4294967295`
        /// </summary>
        public readonly int? WarningMessageMaxNumberOfPrefixes;
        /// <summary>
        /// Variable name, Attribute conditional on `PolicyType` being equal to `warning-only`
        /// </summary>
        public readonly string? WarningMessageMaxNumberOfPrefixesVariable;
        /// <summary>
        /// Set threshold(1 to 100) at which to generate a warning message, Attribute conditional on `PolicyType` being equal to `warning-only`
        ///   - Range: `1`-`100`
        ///   - Default value: `75`
        /// </summary>
        public readonly int? WarningMessageThreshold;
        /// <summary>
        /// Variable name, Attribute conditional on `PolicyType` being equal to `warning-only`
        /// </summary>
        public readonly string? WarningMessageThresholdVariable;

        [OutputConstructor]
        private ServiceRoutingBgpFeatureIpv4NeighborAddressFamily(
            int? disablePeerMaxNumberOfPrefixes,

            string? disablePeerMaxNumberOfPrefixesVariable,

            int? disablePeerThreshold,

            string? disablePeerThresholdVariable,

            string? familyType,

            string? inRoutePolicyId,

            string? outRoutePolicyId,

            string? policyType,

            int? restartInterval,

            string? restartIntervalVariable,

            int? restartMaxNumberOfPrefixes,

            string? restartMaxNumberOfPrefixesVariable,

            int? restartThreshold,

            string? restartThresholdVariable,

            int? warningMessageMaxNumberOfPrefixes,

            string? warningMessageMaxNumberOfPrefixesVariable,

            int? warningMessageThreshold,

            string? warningMessageThresholdVariable)
        {
            DisablePeerMaxNumberOfPrefixes = disablePeerMaxNumberOfPrefixes;
            DisablePeerMaxNumberOfPrefixesVariable = disablePeerMaxNumberOfPrefixesVariable;
            DisablePeerThreshold = disablePeerThreshold;
            DisablePeerThresholdVariable = disablePeerThresholdVariable;
            FamilyType = familyType;
            InRoutePolicyId = inRoutePolicyId;
            OutRoutePolicyId = outRoutePolicyId;
            PolicyType = policyType;
            RestartInterval = restartInterval;
            RestartIntervalVariable = restartIntervalVariable;
            RestartMaxNumberOfPrefixes = restartMaxNumberOfPrefixes;
            RestartMaxNumberOfPrefixesVariable = restartMaxNumberOfPrefixesVariable;
            RestartThreshold = restartThreshold;
            RestartThresholdVariable = restartThresholdVariable;
            WarningMessageMaxNumberOfPrefixes = warningMessageMaxNumberOfPrefixes;
            WarningMessageMaxNumberOfPrefixesVariable = warningMessageMaxNumberOfPrefixesVariable;
            WarningMessageThreshold = warningMessageThreshold;
            WarningMessageThresholdVariable = warningMessageThresholdVariable;
        }
    }
}
