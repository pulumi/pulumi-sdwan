// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class Ipv6AclPolicyDefinitionSequenceMatchEntry
    {
        /// <summary>
        /// Class map ID
        /// </summary>
        public readonly string? ClassMapId;
        /// <summary>
        /// Class map version
        /// </summary>
        public readonly int? ClassMapVersion;
        /// <summary>
        /// Destination dataIPv6 prefix list ID
        /// </summary>
        public readonly string? DestinationDataIpv6PrefixListId;
        /// <summary>
        /// Destination data prefix list version
        /// </summary>
        public readonly int? DestinationDataIpv6PrefixListVersion;
        /// <summary>
        /// Destination IPv6 prefix
        /// </summary>
        public readonly string? DestinationIp;
        /// <summary>
        /// Destination ports. Single value (0-65535) or ranges separated by spaces.
        /// </summary>
        public readonly string? DestinationPorts;
        /// <summary>
        /// Next header
        ///   - Range: `0`-`255`
        /// </summary>
        public readonly int? NextHeader;
        /// <summary>
        /// Packet length
        ///   - Range: `0`-`65535`
        /// </summary>
        public readonly int? PacketLength;
        /// <summary>
        /// PLP - priority
        ///   - Choices: `high`, `low`
        /// </summary>
        public readonly string? Priority;
        /// <summary>
        /// Source data IPv6 prefix list ID
        /// </summary>
        public readonly string? SourceDataIpv6PrefixListId;
        /// <summary>
        /// Source data IPv6 prefix list version
        /// </summary>
        public readonly int? SourceDataIpv6PrefixListVersion;
        /// <summary>
        /// Source IPv6 prefix
        /// </summary>
        public readonly string? SourceIp;
        /// <summary>
        /// Source ports. Single value (0-65535) or ranges separated by spaces.
        /// </summary>
        public readonly string? SourcePorts;
        /// <summary>
        /// TCP parameters
        ///   - Choices: `syn`
        /// </summary>
        public readonly string? Tcp;
        /// <summary>
        /// Traffic class
        ///   - Range: `0`-`63`
        /// </summary>
        public readonly int? TrafficClass;
        /// <summary>
        /// Type of match entry
        ///   - Choices: `nextHeader`, `sourceIpv6`, `destinationIpv6`, `class`, `packetLength`, `plp`, `sourcePort`, `destinationPort`, `sourceDataIpv6PrefixList`, `destinationDataIpv6PrefixList`, `tcp`, `trafficClass`
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private Ipv6AclPolicyDefinitionSequenceMatchEntry(
            string? classMapId,

            int? classMapVersion,

            string? destinationDataIpv6PrefixListId,

            int? destinationDataIpv6PrefixListVersion,

            string? destinationIp,

            string? destinationPorts,

            int? nextHeader,

            int? packetLength,

            string? priority,

            string? sourceDataIpv6PrefixListId,

            int? sourceDataIpv6PrefixListVersion,

            string? sourceIp,

            string? sourcePorts,

            string? tcp,

            int? trafficClass,

            string type)
        {
            ClassMapId = classMapId;
            ClassMapVersion = classMapVersion;
            DestinationDataIpv6PrefixListId = destinationDataIpv6PrefixListId;
            DestinationDataIpv6PrefixListVersion = destinationDataIpv6PrefixListVersion;
            DestinationIp = destinationIp;
            DestinationPorts = destinationPorts;
            NextHeader = nextHeader;
            PacketLength = packetLength;
            Priority = priority;
            SourceDataIpv6PrefixListId = sourceDataIpv6PrefixListId;
            SourceDataIpv6PrefixListVersion = sourceDataIpv6PrefixListVersion;
            SourceIp = sourceIp;
            SourcePorts = sourcePorts;
            Tcp = tcp;
            TrafficClass = trafficClass;
            Type = type;
        }
    }
}
