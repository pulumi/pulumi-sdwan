// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class GetServiceLanVpnFeatureIpv4StaticRouteResult
    {
        /// <summary>
        /// IPv4 Route Gateway DHCP
        /// </summary>
        public readonly bool GatewayDhcp;
        /// <summary>
        /// IP Address
        /// </summary>
        public readonly string NetworkAddress;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string NetworkAddressVariable;
        /// <summary>
        /// IPv4 Route Gateway Next Hop with Tracker
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceLanVpnFeatureIpv4StaticRouteNextHopWithTrackerResult> NextHopWithTrackers;
        /// <summary>
        /// IPv4 Route Gateway Next Hop
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceLanVpnFeatureIpv4StaticRouteNextHopResult> NextHops;
        /// <summary>
        /// IPv4 Route Gateway Next Hop
        /// </summary>
        public readonly bool Null0;
        /// <summary>
        /// Subnet Mask
        /// </summary>
        public readonly string SubnetMask;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SubnetMaskVariable;
        /// <summary>
        /// IPv4 Route Gateway VPN
        /// </summary>
        public readonly bool Vpn;

        [OutputConstructor]
        private GetServiceLanVpnFeatureIpv4StaticRouteResult(
            bool gatewayDhcp,

            string networkAddress,

            string networkAddressVariable,

            ImmutableArray<Outputs.GetServiceLanVpnFeatureIpv4StaticRouteNextHopWithTrackerResult> nextHopWithTrackers,

            ImmutableArray<Outputs.GetServiceLanVpnFeatureIpv4StaticRouteNextHopResult> nextHops,

            bool null0,

            string subnetMask,

            string subnetMaskVariable,

            bool vpn)
        {
            GatewayDhcp = gatewayDhcp;
            NetworkAddress = networkAddress;
            NetworkAddressVariable = networkAddressVariable;
            NextHopWithTrackers = nextHopWithTrackers;
            NextHops = nextHops;
            Null0 = null0;
            SubnetMask = subnetMask;
            SubnetMaskVariable = subnetMaskVariable;
            Vpn = vpn;
        }
    }
}
