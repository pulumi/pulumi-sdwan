// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class SystemSecurityFeatureKey
    {
        /// <summary>
        /// Configure Accept AO Mismatch
        ///   - Default value: `False`
        /// </summary>
        public readonly bool? AcceptAoMismatch;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? AcceptAoMismatchVariable;
        /// <summary>
        /// Send lifetime Duration (seconds)
        ///   - Range: `1`-`2147483646`
        /// </summary>
        public readonly int? AcceptLifeTimeDuration;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? AcceptLifeTimeDurationVariable;
        /// <summary>
        /// Configure Key lifetime end time
        /// </summary>
        public readonly int? AcceptLifeTimeExact;
        /// <summary>
        /// Infinite lifetime
        /// </summary>
        public readonly bool? AcceptLifeTimeInfinite;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? AcceptLifeTimeInfiniteVariable;
        /// <summary>
        /// Configure Send lifetime Local
        ///   - Default value: `False`
        /// </summary>
        public readonly bool? AcceptLifeTimeLocal;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? AcceptLifeTimeLocalVariable;
        /// <summary>
        /// Configure Key lifetime start time
        /// </summary>
        public readonly int? AcceptLifeTimeStartEpoch;
        /// <summary>
        /// Crypto Algorithm
        ///   - Choices: `aes-128-cmac`, `hmac-sha-1`, `hmac-sha-256`
        /// </summary>
        public readonly string? CryptoAlgorithm;
        /// <summary>
        /// Select the Key ID
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// Configure Include TCP Options
        ///   - Default value: `False`
        /// </summary>
        public readonly bool? IncludeTcpOptions;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? IncludeTcpOptionsVariable;
        /// <summary>
        /// Specify the Key String
        /// </summary>
        public readonly string? KeyString;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? KeyStringVariable;
        /// <summary>
        /// Select the chain name
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Specify the Receiver ID
        ///   - Range: `0`-`255`
        /// </summary>
        public readonly int? ReceiverId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? ReceiverIdVariable;
        /// <summary>
        /// Specify the Send ID
        ///   - Range: `0`-`255`
        /// </summary>
        public readonly int? SendId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? SendIdVariable;
        /// <summary>
        /// Send lifetime Duration (seconds)
        ///   - Range: `1`-`2147483646`
        /// </summary>
        public readonly int? SendLifeTimeDuration;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? SendLifeTimeDurationVariable;
        /// <summary>
        /// Configure Key lifetime end time
        /// </summary>
        public readonly int? SendLifeTimeExact;
        /// <summary>
        /// Infinite lifetime
        /// </summary>
        public readonly bool? SendLifeTimeInfinite;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? SendLifeTimeInfiniteVariable;
        /// <summary>
        /// Configure Send lifetime Local
        ///   - Default value: `False`
        /// </summary>
        public readonly bool? SendLifeTimeLocal;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? SendLifeTimeLocalVariable;
        /// <summary>
        /// Configure Key lifetime start time
        /// </summary>
        public readonly int? SendLifeTimeStartEpoch;

        [OutputConstructor]
        private SystemSecurityFeatureKey(
            bool? acceptAoMismatch,

            string? acceptAoMismatchVariable,

            int? acceptLifeTimeDuration,

            string? acceptLifeTimeDurationVariable,

            int? acceptLifeTimeExact,

            bool? acceptLifeTimeInfinite,

            string? acceptLifeTimeInfiniteVariable,

            bool? acceptLifeTimeLocal,

            string? acceptLifeTimeLocalVariable,

            int? acceptLifeTimeStartEpoch,

            string? cryptoAlgorithm,

            int? id,

            bool? includeTcpOptions,

            string? includeTcpOptionsVariable,

            string? keyString,

            string? keyStringVariable,

            string? name,

            int? receiverId,

            string? receiverIdVariable,

            int? sendId,

            string? sendIdVariable,

            int? sendLifeTimeDuration,

            string? sendLifeTimeDurationVariable,

            int? sendLifeTimeExact,

            bool? sendLifeTimeInfinite,

            string? sendLifeTimeInfiniteVariable,

            bool? sendLifeTimeLocal,

            string? sendLifeTimeLocalVariable,

            int? sendLifeTimeStartEpoch)
        {
            AcceptAoMismatch = acceptAoMismatch;
            AcceptAoMismatchVariable = acceptAoMismatchVariable;
            AcceptLifeTimeDuration = acceptLifeTimeDuration;
            AcceptLifeTimeDurationVariable = acceptLifeTimeDurationVariable;
            AcceptLifeTimeExact = acceptLifeTimeExact;
            AcceptLifeTimeInfinite = acceptLifeTimeInfinite;
            AcceptLifeTimeInfiniteVariable = acceptLifeTimeInfiniteVariable;
            AcceptLifeTimeLocal = acceptLifeTimeLocal;
            AcceptLifeTimeLocalVariable = acceptLifeTimeLocalVariable;
            AcceptLifeTimeStartEpoch = acceptLifeTimeStartEpoch;
            CryptoAlgorithm = cryptoAlgorithm;
            Id = id;
            IncludeTcpOptions = includeTcpOptions;
            IncludeTcpOptionsVariable = includeTcpOptionsVariable;
            KeyString = keyString;
            KeyStringVariable = keyStringVariable;
            Name = name;
            ReceiverId = receiverId;
            ReceiverIdVariable = receiverIdVariable;
            SendId = sendId;
            SendIdVariable = sendIdVariable;
            SendLifeTimeDuration = sendLifeTimeDuration;
            SendLifeTimeDurationVariable = sendLifeTimeDurationVariable;
            SendLifeTimeExact = sendLifeTimeExact;
            SendLifeTimeInfinite = sendLifeTimeInfinite;
            SendLifeTimeInfiniteVariable = sendLifeTimeInfiniteVariable;
            SendLifeTimeLocal = sendLifeTimeLocal;
            SendLifeTimeLocalVariable = sendLifeTimeLocalVariable;
            SendLifeTimeStartEpoch = sendLifeTimeStartEpoch;
        }
    }
}
