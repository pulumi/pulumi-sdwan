// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class CiscoBgpFeatureTemplateIpv6Neighbor
    {
        /// <summary>
        /// Set neighbor address
        /// </summary>
        public readonly string? Address;
        /// <summary>
        /// Set BGP address family
        /// </summary>
        public readonly ImmutableArray<Outputs.CiscoBgpFeatureTemplateIpv6NeighborAddressFamily> AddressFamilies;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? AddressVariable;
        /// <summary>
        /// As Number
        ///   - Range: `1`-`10`
        /// </summary>
        public readonly int? AllowAsIn;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? AllowAsInVariable;
        /// <summary>
        /// As Override
        ///   - Default value: `false`
        /// </summary>
        public readonly bool? AsOverride;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? AsOverrideVariable;
        /// <summary>
        /// Set description
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? DescriptionVariable;
        /// <summary>
        /// Set TTL value for peers that are not directly connected
        ///   - Range: `1`-`255`
        ///   - Default value: `1`
        /// </summary>
        public readonly int? EbgpMultihop;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? EbgpMultihopVariable;
        /// <summary>
        /// Set how long to wait since receiving a keepalive message to consider BGP peer unavailable
        ///   - Range: `0`-`65535`
        /// </summary>
        public readonly int? Holdtime;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? HoldtimeVariable;
        /// <summary>
        /// Set how often to advertise keepalive messages to BGP peer
        ///   - Range: `0`-`65535`
        /// </summary>
        public readonly int? Keepalive;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? KeepaliveVariable;
        /// <summary>
        /// Set router to be next hop for routes advertised to neighbor
        ///   - Default value: `false`
        /// </summary>
        public readonly bool? NextHopSelf;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? NextHopSelfVariable;
        /// <summary>
        /// Indicates if list item is considered optional.
        /// </summary>
        public readonly bool? Optional;
        /// <summary>
        /// Set MD5 password on TCP connection with BGP peer
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? PasswordVariable;
        /// <summary>
        /// Set remote autonomous system number
        /// </summary>
        public readonly string? RemoteAs;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? RemoteAsVariable;
        /// <summary>
        /// Send community attribute
        ///   - Default value: `true`
        /// </summary>
        public readonly bool? SendCommunity;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? SendCommunityVariable;
        /// <summary>
        /// Send extended community attribute
        ///   - Default value: `true`
        /// </summary>
        public readonly bool? SendExtCommunity;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? SendExtCommunityVariable;
        /// <summary>
        /// Send label
        ///   - Default value: `false`
        /// </summary>
        public readonly bool? SendLabel;
        /// <summary>
        /// Send label Explicit
        ///   - Default value: `false`
        /// </summary>
        public readonly bool? SendLabelExplicit;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? SendLabelExplicitVariable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? SendLabelVariable;
        /// <summary>
        /// Enable or disable a BGP neighbor
        ///   - Default value: `false`
        /// </summary>
        public readonly bool? Shutdown;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? ShutdownVariable;
        /// <summary>
        /// Set IP address of interface for TCP connection to BGP neighbor
        /// </summary>
        public readonly string? SourceInterface;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string? SourceInterfaceVariable;

        [OutputConstructor]
        private CiscoBgpFeatureTemplateIpv6Neighbor(
            string? address,

            ImmutableArray<Outputs.CiscoBgpFeatureTemplateIpv6NeighborAddressFamily> addressFamilies,

            string? addressVariable,

            int? allowAsIn,

            string? allowAsInVariable,

            bool? asOverride,

            string? asOverrideVariable,

            string? description,

            string? descriptionVariable,

            int? ebgpMultihop,

            string? ebgpMultihopVariable,

            int? holdtime,

            string? holdtimeVariable,

            int? keepalive,

            string? keepaliveVariable,

            bool? nextHopSelf,

            string? nextHopSelfVariable,

            bool? optional,

            string? password,

            string? passwordVariable,

            string? remoteAs,

            string? remoteAsVariable,

            bool? sendCommunity,

            string? sendCommunityVariable,

            bool? sendExtCommunity,

            string? sendExtCommunityVariable,

            bool? sendLabel,

            bool? sendLabelExplicit,

            string? sendLabelExplicitVariable,

            string? sendLabelVariable,

            bool? shutdown,

            string? shutdownVariable,

            string? sourceInterface,

            string? sourceInterfaceVariable)
        {
            Address = address;
            AddressFamilies = addressFamilies;
            AddressVariable = addressVariable;
            AllowAsIn = allowAsIn;
            AllowAsInVariable = allowAsInVariable;
            AsOverride = asOverride;
            AsOverrideVariable = asOverrideVariable;
            Description = description;
            DescriptionVariable = descriptionVariable;
            EbgpMultihop = ebgpMultihop;
            EbgpMultihopVariable = ebgpMultihopVariable;
            Holdtime = holdtime;
            HoldtimeVariable = holdtimeVariable;
            Keepalive = keepalive;
            KeepaliveVariable = keepaliveVariable;
            NextHopSelf = nextHopSelf;
            NextHopSelfVariable = nextHopSelfVariable;
            Optional = optional;
            Password = password;
            PasswordVariable = passwordVariable;
            RemoteAs = remoteAs;
            RemoteAsVariable = remoteAsVariable;
            SendCommunity = sendCommunity;
            SendCommunityVariable = sendCommunityVariable;
            SendExtCommunity = sendExtCommunity;
            SendExtCommunityVariable = sendExtCommunityVariable;
            SendLabel = sendLabel;
            SendLabelExplicit = sendLabelExplicit;
            SendLabelExplicitVariable = sendLabelExplicitVariable;
            SendLabelVariable = sendLabelVariable;
            Shutdown = shutdown;
            ShutdownVariable = shutdownVariable;
            SourceInterface = sourceInterface;
            SourceInterfaceVariable = sourceInterfaceVariable;
        }
    }
}
