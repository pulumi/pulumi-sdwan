// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class ZoneBasedFirewallPolicyDefinitionRuleMatchEntry
    {
        /// <summary>
        /// policy id for selected match entry
        /// </summary>
        public readonly string? PolicyId;
        /// <summary>
        /// Should be included with additionally entries for `destinationPort` and `Protocol` whenever the type `protocolName` is used.
        /// </summary>
        public readonly string? ProtocolType;
        /// <summary>
        /// Type of match entry
        ///   - Choices: `sourceFqdnList`, `sourceDataPrefixList`, `sourceGeoLocationList`, `sourcePortList`, `destinationFqdnList`, `destinationDataPrefixList`, `destinationGeoLocationList`, `destinationPortList`, `appList`, `protocolNameList`, `sourceIp`, `sourcePort`, `sourceFqdn`, `destinationIp`, `destinationFqdn`, `destinationPort`, `sourceGeoLocation`, `destinationGeoLocation`, `protocolName`, `Protocol`, `App`, `ruleSetList`
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// value for selected match entry
        /// </summary>
        public readonly string? Value;
        /// <summary>
        /// variable value for selected match entry if it has variable option (sourceIp &amp; destinationIp)
        /// </summary>
        public readonly string? ValueVariable;

        [OutputConstructor]
        private ZoneBasedFirewallPolicyDefinitionRuleMatchEntry(
            string? policyId,

            string? protocolType,

            string type,

            string? value,

            string? valueVariable)
        {
            PolicyId = policyId;
            ProtocolType = protocolType;
            Type = type;
            Value = value;
            ValueVariable = valueVariable;
        }
    }
}
