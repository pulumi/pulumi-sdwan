// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class GetCedgeAaaFeatureTemplateRadiusServerGroupServerResult
    {
        /// <summary>
        /// Set Accounting port to use to connect to Radius server
        /// </summary>
        public readonly int AccountingPort;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AccountingPortVariable;
        /// <summary>
        /// Set IP address of Radius server
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// Set Authentication port to use to connect to Radius server
        /// </summary>
        public readonly int AuthenticationPort;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AuthenticationPortVariable;
        /// <summary>
        /// Type of encyption. To be used for type 6
        /// </summary>
        public readonly string EncryptionType;
        /// <summary>
        /// Set the Radius server shared key
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// key type
        /// </summary>
        public readonly string KeyType;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string KeyTypeVariable;
        /// <summary>
        /// Indicates if list item is considered optional.
        /// </summary>
        public readonly bool Optional;
        /// <summary>
        /// Configure how many times to contact this Radius server
        /// </summary>
        public readonly int Retransmit;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string RetransmitVariable;
        /// <summary>
        /// Set the Radius server shared type 7 encrypted key
        /// </summary>
        public readonly string SecretKey;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SecretKeyVariable;
        /// <summary>
        /// Configure how long to wait for replies from the Radius server
        /// </summary>
        public readonly int Timeout;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TimeoutVariable;

        [OutputConstructor]
        private GetCedgeAaaFeatureTemplateRadiusServerGroupServerResult(
            int accountingPort,

            string accountingPortVariable,

            string address,

            int authenticationPort,

            string authenticationPortVariable,

            string encryptionType,

            string key,

            string keyType,

            string keyTypeVariable,

            bool optional,

            int retransmit,

            string retransmitVariable,

            string secretKey,

            string secretKeyVariable,

            int timeout,

            string timeoutVariable)
        {
            AccountingPort = accountingPort;
            AccountingPortVariable = accountingPortVariable;
            Address = address;
            AuthenticationPort = authenticationPort;
            AuthenticationPortVariable = authenticationPortVariable;
            EncryptionType = encryptionType;
            Key = key;
            KeyType = keyType;
            KeyTypeVariable = keyTypeVariable;
            Optional = optional;
            Retransmit = retransmit;
            RetransmitVariable = retransmitVariable;
            SecretKey = secretKey;
            SecretKeyVariable = secretKeyVariable;
            Timeout = timeout;
            TimeoutVariable = timeoutVariable;
        }
    }
}
