// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class RoutePolicyDefinitionSequenceActionEntry
    {
        /// <summary>
        /// Aggregator
        ///   - Range: `0`-`4294967295`
        /// </summary>
        public readonly int? Aggregator;
        /// <summary>
        /// IP address
        /// </summary>
        public readonly string? AggregatorIpAddress;
        /// <summary>
        /// Space separated list of ASN to exclude
        /// </summary>
        public readonly string? AsPathExclude;
        /// <summary>
        /// Space separated list of ASN to prepend
        /// </summary>
        public readonly string? AsPathPrepend;
        /// <summary>
        /// Atomic aggregate
        /// </summary>
        public readonly bool? AtomicAggregate;
        /// <summary>
        /// Community value, e.g. `1000:10000` or `internet` or `local-AS`
        /// </summary>
        public readonly string? Community;
        /// <summary>
        /// Community additive
        /// </summary>
        public readonly bool? CommunityAdditive;
        /// <summary>
        /// Local preference
        ///   - Range: `0`-`4294967295`
        /// </summary>
        public readonly int? LocalPreference;
        /// <summary>
        /// Metric
        ///   - Range: `0`-`4294967295`
        /// </summary>
        public readonly int? Metric;
        /// <summary>
        /// Metric type
        ///   - Choices: `type1`, `type2`
        /// </summary>
        public readonly string? MetricType;
        /// <summary>
        /// Next hop IP
        /// </summary>
        public readonly string? NextHop;
        /// <summary>
        /// OMP tag
        ///   - Range: `0`-`4294967295`
        /// </summary>
        public readonly int? OmpTag;
        /// <summary>
        /// Origin
        ///   - Choices: `igp`, `egp`, `incomplete`
        /// </summary>
        public readonly string? Origin;
        /// <summary>
        /// Originator IP
        /// </summary>
        public readonly string? Originator;
        /// <summary>
        /// OSPF tag
        ///   - Range: `0`-`4294967295`
        /// </summary>
        public readonly int? OspfTag;
        /// <summary>
        /// Type of action entry
        ///   - Choices: `aggregator`, `asPath`, `atomicAggregate`, `community`, `communityAdditive`, `localPreference`, `metric`, `weight`, `metricType`, `nextHop`, `ompTag`, `ospfTag`, `origin`, `originator`
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Weight
        ///   - Range: `0`-`4294967295`
        /// </summary>
        public readonly int? Weight;

        [OutputConstructor]
        private RoutePolicyDefinitionSequenceActionEntry(
            int? aggregator,

            string? aggregatorIpAddress,

            string? asPathExclude,

            string? asPathPrepend,

            bool? atomicAggregate,

            string? community,

            bool? communityAdditive,

            int? localPreference,

            int? metric,

            string? metricType,

            string? nextHop,

            int? ompTag,

            string? origin,

            string? originator,

            int? ospfTag,

            string type,

            int? weight)
        {
            Aggregator = aggregator;
            AggregatorIpAddress = aggregatorIpAddress;
            AsPathExclude = asPathExclude;
            AsPathPrepend = asPathPrepend;
            AtomicAggregate = atomicAggregate;
            Community = community;
            CommunityAdditive = communityAdditive;
            LocalPreference = localPreference;
            Metric = metric;
            MetricType = metricType;
            NextHop = nextHop;
            OmpTag = ompTag;
            Origin = origin;
            Originator = originator;
            OspfTag = ospfTag;
            Type = type;
            Weight = weight;
        }
    }
}
