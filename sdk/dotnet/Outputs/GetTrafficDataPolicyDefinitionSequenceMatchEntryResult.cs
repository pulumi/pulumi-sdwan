// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan.Outputs
{

    [OutputType]
    public sealed class GetTrafficDataPolicyDefinitionSequenceMatchEntryResult
    {
        /// <summary>
        /// Application list ID
        /// </summary>
        public readonly string ApplicationListId;
        /// <summary>
        /// Application list version
        /// </summary>
        public readonly int ApplicationListVersion;
        /// <summary>
        /// Destination Data Prefix list ID
        /// </summary>
        public readonly string DestinationDataPrefixListId;
        /// <summary>
        /// Destination Data Prefix list version
        /// </summary>
        public readonly int DestinationDataPrefixListVersion;
        /// <summary>
        /// Destination IP
        /// </summary>
        public readonly string DestinationIp;
        /// <summary>
        /// Destination port, 0-65535 (Single value, range or multiple values separated by spaces)
        /// </summary>
        public readonly string DestinationPort;
        /// <summary>
        /// Destination region
        /// </summary>
        public readonly string DestinationRegion;
        /// <summary>
        /// DNS request or response
        /// </summary>
        public readonly string Dns;
        /// <summary>
        /// DNS Application list ID
        /// </summary>
        public readonly string DnsApplicationListId;
        /// <summary>
        /// DNS Application list version
        /// </summary>
        public readonly int DnsApplicationListVersion;
        /// <summary>
        /// DSCP value
        /// </summary>
        public readonly int Dscp;
        /// <summary>
        /// ICMP Message
        /// </summary>
        public readonly string IcmpMessage;
        /// <summary>
        /// Packet length
        /// </summary>
        public readonly int PacketLength;
        /// <summary>
        /// PLP
        /// </summary>
        public readonly string Plp;
        /// <summary>
        /// IP Protocol, 0-255 (Single value or multiple values separated by spaces)
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// Source Data Prefix list ID
        /// </summary>
        public readonly string SourceDataPrefixListId;
        /// <summary>
        /// Source Data Prefix list version
        /// </summary>
        public readonly int SourceDataPrefixListVersion;
        /// <summary>
        /// Source IP
        /// </summary>
        public readonly string SourceIp;
        /// <summary>
        /// Source port, 0-65535 (Single value, range or multiple values separated by spaces)
        /// </summary>
        public readonly string SourcePort;
        /// <summary>
        /// TCP flags
        /// </summary>
        public readonly string Tcp;
        /// <summary>
        /// Traffic to
        /// </summary>
        public readonly string TrafficTo;
        /// <summary>
        /// Type of match entry
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetTrafficDataPolicyDefinitionSequenceMatchEntryResult(
            string applicationListId,

            int applicationListVersion,

            string destinationDataPrefixListId,

            int destinationDataPrefixListVersion,

            string destinationIp,

            string destinationPort,

            string destinationRegion,

            string dns,

            string dnsApplicationListId,

            int dnsApplicationListVersion,

            int dscp,

            string icmpMessage,

            int packetLength,

            string plp,

            string protocol,

            string sourceDataPrefixListId,

            int sourceDataPrefixListVersion,

            string sourceIp,

            string sourcePort,

            string tcp,

            string trafficTo,

            string type)
        {
            ApplicationListId = applicationListId;
            ApplicationListVersion = applicationListVersion;
            DestinationDataPrefixListId = destinationDataPrefixListId;
            DestinationDataPrefixListVersion = destinationDataPrefixListVersion;
            DestinationIp = destinationIp;
            DestinationPort = destinationPort;
            DestinationRegion = destinationRegion;
            Dns = dns;
            DnsApplicationListId = dnsApplicationListId;
            DnsApplicationListVersion = dnsApplicationListVersion;
            Dscp = dscp;
            IcmpMessage = icmpMessage;
            PacketLength = packetLength;
            Plp = plp;
            Protocol = protocol;
            SourceDataPrefixListId = sourceDataPrefixListId;
            SourceDataPrefixListVersion = sourceDataPrefixListVersion;
            SourceIp = sourceIp;
            SourcePort = sourcePort;
            Tcp = tcp;
            TrafficTo = trafficTo;
            Type = type;
        }
    }
}
