// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a System BFD Feature.
    ///   - Minimum SD-WAN Manager version: `20.12.0`
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Sdwan = Pulumi.Sdwan;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Sdwan.SystemBfdFeature("example", new()
    ///     {
    ///         Name = "Example",
    ///         Description = "My Example",
    ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
    ///         Multiplier = 3,
    ///         PollInterval = 100,
    ///         DefaultDscp = 8,
    ///         Colors = new[]
    ///         {
    ///             new Sdwan.Inputs.SystemBfdFeatureColorArgs
    ///             {
    ///                 Color = "3g",
    ///                 Hello_interval = 200,
    ///                 Multiplier = 3,
    ///                 Pmtu_discovery = true,
    ///                 Dscp = 16,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// Expected import identifier with the format: "system_bfd_feature_id,feature_profile_id"
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/systemBfdFeature:SystemBfdFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/systemBfdFeature:SystemBfdFeature")]
    public partial class SystemBfdFeature : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Set color that identifies the WAN transport tunnel
        /// </summary>
        [Output("colors")]
        public Output<ImmutableArray<Outputs.SystemBfdFeatureColor>> Colors { get; private set; } = null!;

        /// <summary>
        /// - Range: `0`-`63`
        ///   - Default value: `48`
        /// </summary>
        [Output("defaultDscp")]
        public Output<int?> DefaultDscp { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("defaultDscpVariable")]
        public Output<string?> DefaultDscpVariable { get; private set; } = null!;

        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Output("featureProfileId")]
        public Output<string> FeatureProfileId { get; private set; } = null!;

        /// <summary>
        /// - Range: `1`-`6`
        ///   - Default value: `6`
        /// </summary>
        [Output("multiplier")]
        public Output<int?> Multiplier { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("multiplierVariable")]
        public Output<string?> MultiplierVariable { get; private set; } = null!;

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// - Range: `1`-`4294967295`
        ///   - Default value: `600000`
        /// </summary>
        [Output("pollInterval")]
        public Output<int?> PollInterval { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("pollIntervalVariable")]
        public Output<string?> PollIntervalVariable { get; private set; } = null!;

        /// <summary>
        /// The version of the Feature
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a SystemBfdFeature resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SystemBfdFeature(string name, SystemBfdFeatureArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/systemBfdFeature:SystemBfdFeature", name, args ?? new SystemBfdFeatureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SystemBfdFeature(string name, Input<string> id, SystemBfdFeatureState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/systemBfdFeature:SystemBfdFeature", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SystemBfdFeature resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SystemBfdFeature Get(string name, Input<string> id, SystemBfdFeatureState? state = null, CustomResourceOptions? options = null)
        {
            return new SystemBfdFeature(name, id, state, options);
        }
    }

    public sealed class SystemBfdFeatureArgs : global::Pulumi.ResourceArgs
    {
        [Input("colors")]
        private InputList<Inputs.SystemBfdFeatureColorArgs>? _colors;

        /// <summary>
        /// Set color that identifies the WAN transport tunnel
        /// </summary>
        public InputList<Inputs.SystemBfdFeatureColorArgs> Colors
        {
            get => _colors ?? (_colors = new InputList<Inputs.SystemBfdFeatureColorArgs>());
            set => _colors = value;
        }

        /// <summary>
        /// - Range: `0`-`63`
        ///   - Default value: `48`
        /// </summary>
        [Input("defaultDscp")]
        public Input<int>? DefaultDscp { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("defaultDscpVariable")]
        public Input<string>? DefaultDscpVariable { get; set; }

        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// - Range: `1`-`6`
        ///   - Default value: `6`
        /// </summary>
        [Input("multiplier")]
        public Input<int>? Multiplier { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("multiplierVariable")]
        public Input<string>? MultiplierVariable { get; set; }

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// - Range: `1`-`4294967295`
        ///   - Default value: `600000`
        /// </summary>
        [Input("pollInterval")]
        public Input<int>? PollInterval { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("pollIntervalVariable")]
        public Input<string>? PollIntervalVariable { get; set; }

        public SystemBfdFeatureArgs()
        {
        }
        public static new SystemBfdFeatureArgs Empty => new SystemBfdFeatureArgs();
    }

    public sealed class SystemBfdFeatureState : global::Pulumi.ResourceArgs
    {
        [Input("colors")]
        private InputList<Inputs.SystemBfdFeatureColorGetArgs>? _colors;

        /// <summary>
        /// Set color that identifies the WAN transport tunnel
        /// </summary>
        public InputList<Inputs.SystemBfdFeatureColorGetArgs> Colors
        {
            get => _colors ?? (_colors = new InputList<Inputs.SystemBfdFeatureColorGetArgs>());
            set => _colors = value;
        }

        /// <summary>
        /// - Range: `0`-`63`
        ///   - Default value: `48`
        /// </summary>
        [Input("defaultDscp")]
        public Input<int>? DefaultDscp { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("defaultDscpVariable")]
        public Input<string>? DefaultDscpVariable { get; set; }

        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId")]
        public Input<string>? FeatureProfileId { get; set; }

        /// <summary>
        /// - Range: `1`-`6`
        ///   - Default value: `6`
        /// </summary>
        [Input("multiplier")]
        public Input<int>? Multiplier { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("multiplierVariable")]
        public Input<string>? MultiplierVariable { get; set; }

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// - Range: `1`-`4294967295`
        ///   - Default value: `600000`
        /// </summary>
        [Input("pollInterval")]
        public Input<int>? PollInterval { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("pollIntervalVariable")]
        public Input<string>? PollIntervalVariable { get; set; }

        /// <summary>
        /// The version of the Feature
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public SystemBfdFeatureState()
        {
        }
        public static new SystemBfdFeatureState Empty => new SystemBfdFeatureState();
    }
}
