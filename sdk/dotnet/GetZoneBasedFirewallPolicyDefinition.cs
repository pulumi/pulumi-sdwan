// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetZoneBasedFirewallPolicyDefinition
    {
        /// <summary>
        /// This data source can read the Zone Based Firewall Policy Definition .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetZoneBasedFirewallPolicyDefinition.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetZoneBasedFirewallPolicyDefinitionResult> InvokeAsync(GetZoneBasedFirewallPolicyDefinitionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZoneBasedFirewallPolicyDefinitionResult>("sdwan:index/getZoneBasedFirewallPolicyDefinition:getZoneBasedFirewallPolicyDefinition", args ?? new GetZoneBasedFirewallPolicyDefinitionArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Zone Based Firewall Policy Definition .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetZoneBasedFirewallPolicyDefinition.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZoneBasedFirewallPolicyDefinitionResult> Invoke(GetZoneBasedFirewallPolicyDefinitionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZoneBasedFirewallPolicyDefinitionResult>("sdwan:index/getZoneBasedFirewallPolicyDefinition:getZoneBasedFirewallPolicyDefinition", args ?? new GetZoneBasedFirewallPolicyDefinitionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Zone Based Firewall Policy Definition .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetZoneBasedFirewallPolicyDefinition.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZoneBasedFirewallPolicyDefinitionResult> Invoke(GetZoneBasedFirewallPolicyDefinitionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZoneBasedFirewallPolicyDefinitionResult>("sdwan:index/getZoneBasedFirewallPolicyDefinition:getZoneBasedFirewallPolicyDefinition", args ?? new GetZoneBasedFirewallPolicyDefinitionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZoneBasedFirewallPolicyDefinitionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the object
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetZoneBasedFirewallPolicyDefinitionArgs()
        {
        }
        public static new GetZoneBasedFirewallPolicyDefinitionArgs Empty => new GetZoneBasedFirewallPolicyDefinitionArgs();
    }

    public sealed class GetZoneBasedFirewallPolicyDefinitionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the object
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetZoneBasedFirewallPolicyDefinitionInvokeArgs()
        {
        }
        public static new GetZoneBasedFirewallPolicyDefinitionInvokeArgs Empty => new GetZoneBasedFirewallPolicyDefinitionInvokeArgs();
    }


    [OutputType]
    public sealed class GetZoneBasedFirewallPolicyDefinitionResult
    {
        public readonly ImmutableArray<Outputs.GetZoneBasedFirewallPolicyDefinitionApplyZonePairResult> ApplyZonePairs;
        /// <summary>
        /// Default Action
        /// </summary>
        public readonly string DefaultAction;
        /// <summary>
        /// The description of the policy definition
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The id of the object
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The policy mode
        /// </summary>
        public readonly string Mode;
        /// <summary>
        /// The name of the policy definition
        /// </summary>
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetZoneBasedFirewallPolicyDefinitionRuleResult> Rules;
        /// <summary>
        /// The version of the object
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetZoneBasedFirewallPolicyDefinitionResult(
            ImmutableArray<Outputs.GetZoneBasedFirewallPolicyDefinitionApplyZonePairResult> applyZonePairs,

            string defaultAction,

            string description,

            string id,

            string mode,

            string name,

            ImmutableArray<Outputs.GetZoneBasedFirewallPolicyDefinitionRuleResult> rules,

            int version)
        {
            ApplyZonePairs = applyZonePairs;
            DefaultAction = defaultAction;
            Description = description;
            Id = id;
            Mode = mode;
            Name = name;
            Rules = rules;
            Version = version;
        }
    }
}
