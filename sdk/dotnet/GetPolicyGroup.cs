// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetPolicyGroup
    {
        /// <summary>
        /// This data source can read the Policy Group .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetPolicyGroup.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPolicyGroupResult> InvokeAsync(GetPolicyGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPolicyGroupResult>("sdwan:index/getPolicyGroup:getPolicyGroup", args ?? new GetPolicyGroupArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Policy Group .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetPolicyGroup.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPolicyGroupResult> Invoke(GetPolicyGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPolicyGroupResult>("sdwan:index/getPolicyGroup:getPolicyGroup", args ?? new GetPolicyGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Policy Group .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetPolicyGroup.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPolicyGroupResult> Invoke(GetPolicyGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPolicyGroupResult>("sdwan:index/getPolicyGroup:getPolicyGroup", args ?? new GetPolicyGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPolicyGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the object
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetPolicyGroupArgs()
        {
        }
        public static new GetPolicyGroupArgs Empty => new GetPolicyGroupArgs();
    }

    public sealed class GetPolicyGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the object
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetPolicyGroupInvokeArgs()
        {
        }
        public static new GetPolicyGroupInvokeArgs Empty => new GetPolicyGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetPolicyGroupResult
    {
        /// <summary>
        /// Description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// List of devices
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPolicyGroupDeviceResult> Devices;
        /// <summary>
        /// List of feature profile IDs
        /// </summary>
        public readonly ImmutableArray<string> FeatureProfileIds;
        /// <summary>
        /// The id of the object
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the policy group
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of all associated policy versions
        /// </summary>
        public readonly ImmutableArray<string> PolicyVersions;
        /// <summary>
        /// Type of solution
        /// </summary>
        public readonly string Solution;

        [OutputConstructor]
        private GetPolicyGroupResult(
            string description,

            ImmutableArray<Outputs.GetPolicyGroupDeviceResult> devices,

            ImmutableArray<string> featureProfileIds,

            string id,

            string name,

            ImmutableArray<string> policyVersions,

            string solution)
        {
            Description = description;
            Devices = devices;
            FeatureProfileIds = featureProfileIds;
            Id = id;
            Name = name;
            PolicyVersions = policyVersions;
            Solution = solution;
        }
    }
}
