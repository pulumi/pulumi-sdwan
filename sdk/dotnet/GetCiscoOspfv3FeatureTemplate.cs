// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetCiscoOspfv3FeatureTemplate
    {
        /// <summary>
        /// This data source can read the Cisco OSPFv3 feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoOspfv3FeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCiscoOspfv3FeatureTemplateResult> InvokeAsync(GetCiscoOspfv3FeatureTemplateArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCiscoOspfv3FeatureTemplateResult>("sdwan:index/getCiscoOspfv3FeatureTemplate:getCiscoOspfv3FeatureTemplate", args ?? new GetCiscoOspfv3FeatureTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Cisco OSPFv3 feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoOspfv3FeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCiscoOspfv3FeatureTemplateResult> Invoke(GetCiscoOspfv3FeatureTemplateInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCiscoOspfv3FeatureTemplateResult>("sdwan:index/getCiscoOspfv3FeatureTemplate:getCiscoOspfv3FeatureTemplate", args ?? new GetCiscoOspfv3FeatureTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCiscoOspfv3FeatureTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetCiscoOspfv3FeatureTemplateArgs()
        {
        }
        public static new GetCiscoOspfv3FeatureTemplateArgs Empty => new GetCiscoOspfv3FeatureTemplateArgs();
    }

    public sealed class GetCiscoOspfv3FeatureTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetCiscoOspfv3FeatureTemplateInvokeArgs()
        {
        }
        public static new GetCiscoOspfv3FeatureTemplateInvokeArgs Empty => new GetCiscoOspfv3FeatureTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetCiscoOspfv3FeatureTemplateResult
    {
        /// <summary>
        /// The description of the feature template
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// List of supported device types
        /// </summary>
        public readonly ImmutableArray<string> DeviceTypes;
        /// <summary>
        /// The id of the feature template
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Configure OSPF area
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCiscoOspfv3FeatureTemplateIpv4AreaResult> Ipv4Areas;
        /// <summary>
        /// Set reference bandwidth method to assign OSPF cost
        /// </summary>
        public readonly int Ipv4AutoCostReferenceBandwidth;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4AutoCostReferenceBandwidthVariable;
        /// <summary>
        /// Calculate summary route cost based on RFC 1583
        /// </summary>
        public readonly bool Ipv4CompatibleRfc1583;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4CompatibleRfc1583Variable;
        /// <summary>
        /// Distribute default external route into OSPF
        /// </summary>
        public readonly bool Ipv4DefaultInformationOriginate;
        /// <summary>
        /// Always advertise default route
        /// </summary>
        public readonly bool Ipv4DefaultInformationOriginateAlways;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4DefaultInformationOriginateAlwaysVariable;
        /// <summary>
        /// Set metric used to generate default route \n\n
        /// </summary>
        public readonly int Ipv4DefaultInformationOriginateMetric;
        /// <summary>
        /// Set default route type
        /// </summary>
        public readonly string Ipv4DefaultInformationOriginateMetricType;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4DefaultInformationOriginateMetricTypeVariable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4DefaultInformationOriginateMetricVariable;
        /// <summary>
        /// Distance
        /// </summary>
        public readonly int Ipv4Distance;
        /// <summary>
        /// Set distance for external routes
        /// </summary>
        public readonly int Ipv4DistanceExternal;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4DistanceExternalVariable;
        /// <summary>
        /// Set distance for inter-area routes
        /// </summary>
        public readonly int Ipv4DistanceInterArea;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4DistanceInterAreaVariable;
        /// <summary>
        /// Set distance for intra-area routes
        /// </summary>
        public readonly int Ipv4DistanceIntraArea;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4DistanceIntraAreaVariable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4DistanceVariable;
        /// <summary>
        /// Filter
        /// </summary>
        public readonly bool Ipv4Filter;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4FilterVariable;
        /// <summary>
        /// Advertise own router LSA with infinite distance
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsaResult> Ipv4MaxMetricRouterLsas;
        /// <summary>
        /// Policy Name
        /// </summary>
        public readonly string Ipv4PolicyName;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4PolicyNameVariable;
        /// <summary>
        /// Redistribute routes
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCiscoOspfv3FeatureTemplateIpv4RedistributeResult> Ipv4Redistributes;
        /// <summary>
        /// Set OSPF router ID to override system IP address
        /// </summary>
        public readonly string Ipv4RouterId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4RouterIdVariable;
        /// <summary>
        /// Set delay from first change received until performing SPF calculation
        /// </summary>
        public readonly int Ipv4TimersSpfDelay;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4TimersSpfDelayVariable;
        /// <summary>
        /// Set initial hold time between consecutive SPF calculations
        /// </summary>
        public readonly int Ipv4TimersSpfInitialHold;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4TimersSpfInitialHoldVariable;
        /// <summary>
        /// Set maximum hold time between consecutive SPF calculations
        /// </summary>
        public readonly int Ipv4TimersSpfMaxHold;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4TimersSpfMaxHoldVariable;
        /// <summary>
        /// Configure OSPF area
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCiscoOspfv3FeatureTemplateIpv6AreaResult> Ipv6Areas;
        /// <summary>
        /// Set reference bandwidth method to assign OSPF cost
        /// </summary>
        public readonly int Ipv6AutoCostReferenceBandwidth;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv6AutoCostReferenceBandwidthVariable;
        /// <summary>
        /// Calculate summary route cost based on RFC 1583
        /// </summary>
        public readonly bool Ipv6CompatibleRfc1583;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv6CompatibleRfc1583Variable;
        /// <summary>
        /// Distribute default external route into OSPF
        /// </summary>
        public readonly bool Ipv6DefaultInformationOriginate;
        /// <summary>
        /// Always advertise default route
        /// </summary>
        public readonly bool Ipv6DefaultInformationOriginateAlways;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv6DefaultInformationOriginateAlwaysVariable;
        /// <summary>
        /// Set metric used to generate default route \n\n
        /// </summary>
        public readonly int Ipv6DefaultInformationOriginateMetric;
        /// <summary>
        /// Set default route type
        /// </summary>
        public readonly string Ipv6DefaultInformationOriginateMetricType;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv6DefaultInformationOriginateMetricTypeVariable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv6DefaultInformationOriginateMetricVariable;
        /// <summary>
        /// Distance
        /// </summary>
        public readonly int Ipv6Distance;
        /// <summary>
        /// Set distance for external routes
        /// </summary>
        public readonly int Ipv6DistanceExternal;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv6DistanceExternalVariable;
        /// <summary>
        /// Set distance for inter-area routes
        /// </summary>
        public readonly int Ipv6DistanceInterArea;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv6DistanceInterAreaVariable;
        /// <summary>
        /// Set distance for intra-area routes
        /// </summary>
        public readonly int Ipv6DistanceIntraArea;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv6DistanceIntraAreaVariable;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv6DistanceVariable;
        /// <summary>
        /// Filter
        /// </summary>
        public readonly bool Ipv6Filter;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv6FilterVariable;
        /// <summary>
        /// Advertise own router LSA with infinite distance
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsaResult> Ipv6MaxMetricRouterLsas;
        /// <summary>
        /// Name
        /// </summary>
        public readonly string Ipv6PolicyName;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv6PolicyNameVariable;
        /// <summary>
        /// Redistribute routes
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCiscoOspfv3FeatureTemplateIpv6RedistributeResult> Ipv6Redistributes;
        /// <summary>
        /// Set OSPF router ID to override system IP address
        /// </summary>
        public readonly string Ipv6RouterId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv6RouterIdVariable;
        /// <summary>
        /// Set delay from first change received until performing SPF calculation
        /// </summary>
        public readonly int Ipv6TimersSpfDelay;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv6TimersSpfDelayVariable;
        /// <summary>
        /// Set initial hold time between consecutive SPF calculations
        /// </summary>
        public readonly int Ipv6TimersSpfInitialHold;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv6TimersSpfInitialHoldVariable;
        /// <summary>
        /// Set maximum hold time between consecutive SPF calculations
        /// </summary>
        public readonly int Ipv6TimersSpfMaxHold;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv6TimersSpfMaxHoldVariable;
        /// <summary>
        /// The name of the feature template
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The template type
        /// </summary>
        public readonly string TemplateType;
        /// <summary>
        /// The version of the feature template
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetCiscoOspfv3FeatureTemplateResult(
            string description,

            ImmutableArray<string> deviceTypes,

            string id,

            ImmutableArray<Outputs.GetCiscoOspfv3FeatureTemplateIpv4AreaResult> ipv4Areas,

            int ipv4AutoCostReferenceBandwidth,

            string ipv4AutoCostReferenceBandwidthVariable,

            bool ipv4CompatibleRfc1583,

            string ipv4CompatibleRfc1583Variable,

            bool ipv4DefaultInformationOriginate,

            bool ipv4DefaultInformationOriginateAlways,

            string ipv4DefaultInformationOriginateAlwaysVariable,

            int ipv4DefaultInformationOriginateMetric,

            string ipv4DefaultInformationOriginateMetricType,

            string ipv4DefaultInformationOriginateMetricTypeVariable,

            string ipv4DefaultInformationOriginateMetricVariable,

            int ipv4Distance,

            int ipv4DistanceExternal,

            string ipv4DistanceExternalVariable,

            int ipv4DistanceInterArea,

            string ipv4DistanceInterAreaVariable,

            int ipv4DistanceIntraArea,

            string ipv4DistanceIntraAreaVariable,

            string ipv4DistanceVariable,

            bool ipv4Filter,

            string ipv4FilterVariable,

            ImmutableArray<Outputs.GetCiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsaResult> ipv4MaxMetricRouterLsas,

            string ipv4PolicyName,

            string ipv4PolicyNameVariable,

            ImmutableArray<Outputs.GetCiscoOspfv3FeatureTemplateIpv4RedistributeResult> ipv4Redistributes,

            string ipv4RouterId,

            string ipv4RouterIdVariable,

            int ipv4TimersSpfDelay,

            string ipv4TimersSpfDelayVariable,

            int ipv4TimersSpfInitialHold,

            string ipv4TimersSpfInitialHoldVariable,

            int ipv4TimersSpfMaxHold,

            string ipv4TimersSpfMaxHoldVariable,

            ImmutableArray<Outputs.GetCiscoOspfv3FeatureTemplateIpv6AreaResult> ipv6Areas,

            int ipv6AutoCostReferenceBandwidth,

            string ipv6AutoCostReferenceBandwidthVariable,

            bool ipv6CompatibleRfc1583,

            string ipv6CompatibleRfc1583Variable,

            bool ipv6DefaultInformationOriginate,

            bool ipv6DefaultInformationOriginateAlways,

            string ipv6DefaultInformationOriginateAlwaysVariable,

            int ipv6DefaultInformationOriginateMetric,

            string ipv6DefaultInformationOriginateMetricType,

            string ipv6DefaultInformationOriginateMetricTypeVariable,

            string ipv6DefaultInformationOriginateMetricVariable,

            int ipv6Distance,

            int ipv6DistanceExternal,

            string ipv6DistanceExternalVariable,

            int ipv6DistanceInterArea,

            string ipv6DistanceInterAreaVariable,

            int ipv6DistanceIntraArea,

            string ipv6DistanceIntraAreaVariable,

            string ipv6DistanceVariable,

            bool ipv6Filter,

            string ipv6FilterVariable,

            ImmutableArray<Outputs.GetCiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsaResult> ipv6MaxMetricRouterLsas,

            string ipv6PolicyName,

            string ipv6PolicyNameVariable,

            ImmutableArray<Outputs.GetCiscoOspfv3FeatureTemplateIpv6RedistributeResult> ipv6Redistributes,

            string ipv6RouterId,

            string ipv6RouterIdVariable,

            int ipv6TimersSpfDelay,

            string ipv6TimersSpfDelayVariable,

            int ipv6TimersSpfInitialHold,

            string ipv6TimersSpfInitialHoldVariable,

            int ipv6TimersSpfMaxHold,

            string ipv6TimersSpfMaxHoldVariable,

            string name,

            string templateType,

            int version)
        {
            Description = description;
            DeviceTypes = deviceTypes;
            Id = id;
            Ipv4Areas = ipv4Areas;
            Ipv4AutoCostReferenceBandwidth = ipv4AutoCostReferenceBandwidth;
            Ipv4AutoCostReferenceBandwidthVariable = ipv4AutoCostReferenceBandwidthVariable;
            Ipv4CompatibleRfc1583 = ipv4CompatibleRfc1583;
            Ipv4CompatibleRfc1583Variable = ipv4CompatibleRfc1583Variable;
            Ipv4DefaultInformationOriginate = ipv4DefaultInformationOriginate;
            Ipv4DefaultInformationOriginateAlways = ipv4DefaultInformationOriginateAlways;
            Ipv4DefaultInformationOriginateAlwaysVariable = ipv4DefaultInformationOriginateAlwaysVariable;
            Ipv4DefaultInformationOriginateMetric = ipv4DefaultInformationOriginateMetric;
            Ipv4DefaultInformationOriginateMetricType = ipv4DefaultInformationOriginateMetricType;
            Ipv4DefaultInformationOriginateMetricTypeVariable = ipv4DefaultInformationOriginateMetricTypeVariable;
            Ipv4DefaultInformationOriginateMetricVariable = ipv4DefaultInformationOriginateMetricVariable;
            Ipv4Distance = ipv4Distance;
            Ipv4DistanceExternal = ipv4DistanceExternal;
            Ipv4DistanceExternalVariable = ipv4DistanceExternalVariable;
            Ipv4DistanceInterArea = ipv4DistanceInterArea;
            Ipv4DistanceInterAreaVariable = ipv4DistanceInterAreaVariable;
            Ipv4DistanceIntraArea = ipv4DistanceIntraArea;
            Ipv4DistanceIntraAreaVariable = ipv4DistanceIntraAreaVariable;
            Ipv4DistanceVariable = ipv4DistanceVariable;
            Ipv4Filter = ipv4Filter;
            Ipv4FilterVariable = ipv4FilterVariable;
            Ipv4MaxMetricRouterLsas = ipv4MaxMetricRouterLsas;
            Ipv4PolicyName = ipv4PolicyName;
            Ipv4PolicyNameVariable = ipv4PolicyNameVariable;
            Ipv4Redistributes = ipv4Redistributes;
            Ipv4RouterId = ipv4RouterId;
            Ipv4RouterIdVariable = ipv4RouterIdVariable;
            Ipv4TimersSpfDelay = ipv4TimersSpfDelay;
            Ipv4TimersSpfDelayVariable = ipv4TimersSpfDelayVariable;
            Ipv4TimersSpfInitialHold = ipv4TimersSpfInitialHold;
            Ipv4TimersSpfInitialHoldVariable = ipv4TimersSpfInitialHoldVariable;
            Ipv4TimersSpfMaxHold = ipv4TimersSpfMaxHold;
            Ipv4TimersSpfMaxHoldVariable = ipv4TimersSpfMaxHoldVariable;
            Ipv6Areas = ipv6Areas;
            Ipv6AutoCostReferenceBandwidth = ipv6AutoCostReferenceBandwidth;
            Ipv6AutoCostReferenceBandwidthVariable = ipv6AutoCostReferenceBandwidthVariable;
            Ipv6CompatibleRfc1583 = ipv6CompatibleRfc1583;
            Ipv6CompatibleRfc1583Variable = ipv6CompatibleRfc1583Variable;
            Ipv6DefaultInformationOriginate = ipv6DefaultInformationOriginate;
            Ipv6DefaultInformationOriginateAlways = ipv6DefaultInformationOriginateAlways;
            Ipv6DefaultInformationOriginateAlwaysVariable = ipv6DefaultInformationOriginateAlwaysVariable;
            Ipv6DefaultInformationOriginateMetric = ipv6DefaultInformationOriginateMetric;
            Ipv6DefaultInformationOriginateMetricType = ipv6DefaultInformationOriginateMetricType;
            Ipv6DefaultInformationOriginateMetricTypeVariable = ipv6DefaultInformationOriginateMetricTypeVariable;
            Ipv6DefaultInformationOriginateMetricVariable = ipv6DefaultInformationOriginateMetricVariable;
            Ipv6Distance = ipv6Distance;
            Ipv6DistanceExternal = ipv6DistanceExternal;
            Ipv6DistanceExternalVariable = ipv6DistanceExternalVariable;
            Ipv6DistanceInterArea = ipv6DistanceInterArea;
            Ipv6DistanceInterAreaVariable = ipv6DistanceInterAreaVariable;
            Ipv6DistanceIntraArea = ipv6DistanceIntraArea;
            Ipv6DistanceIntraAreaVariable = ipv6DistanceIntraAreaVariable;
            Ipv6DistanceVariable = ipv6DistanceVariable;
            Ipv6Filter = ipv6Filter;
            Ipv6FilterVariable = ipv6FilterVariable;
            Ipv6MaxMetricRouterLsas = ipv6MaxMetricRouterLsas;
            Ipv6PolicyName = ipv6PolicyName;
            Ipv6PolicyNameVariable = ipv6PolicyNameVariable;
            Ipv6Redistributes = ipv6Redistributes;
            Ipv6RouterId = ipv6RouterId;
            Ipv6RouterIdVariable = ipv6RouterIdVariable;
            Ipv6TimersSpfDelay = ipv6TimersSpfDelay;
            Ipv6TimersSpfDelayVariable = ipv6TimersSpfDelayVariable;
            Ipv6TimersSpfInitialHold = ipv6TimersSpfInitialHold;
            Ipv6TimersSpfInitialHoldVariable = ipv6TimersSpfInitialHoldVariable;
            Ipv6TimersSpfMaxHold = ipv6TimersSpfMaxHold;
            Ipv6TimersSpfMaxHoldVariable = ipv6TimersSpfMaxHoldVariable;
            Name = name;
            TemplateType = templateType;
            Version = version;
        }
    }
}
