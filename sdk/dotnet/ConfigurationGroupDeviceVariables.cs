// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a Configuration Group Device Variables .
    ///   - Minimum SD-WAN Manager version: `20.12.0`
    /// </summary>
    [SdwanResourceType("sdwan:index/configurationGroupDeviceVariables:ConfigurationGroupDeviceVariables")]
    public partial class ConfigurationGroupDeviceVariables : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configuration Group ID
        /// </summary>
        [Output("configurationGroupId")]
        public Output<string> ConfigurationGroupId { get; private set; } = null!;

        /// <summary>
        /// List of devices
        /// </summary>
        [Output("devices")]
        public Output<ImmutableArray<Outputs.ConfigurationGroupDeviceVariablesDevice>> Devices { get; private set; } = null!;

        /// <summary>
        /// List of device groups
        /// </summary>
        [Output("groups")]
        public Output<ImmutableArray<Outputs.ConfigurationGroupDeviceVariablesGroup>> Groups { get; private set; } = null!;

        /// <summary>
        /// Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
        /// </summary>
        [Output("solution")]
        public Output<string> Solution { get; private set; } = null!;


        /// <summary>
        /// Create a ConfigurationGroupDeviceVariables resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigurationGroupDeviceVariables(string name, ConfigurationGroupDeviceVariablesArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/configurationGroupDeviceVariables:ConfigurationGroupDeviceVariables", name, args ?? new ConfigurationGroupDeviceVariablesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConfigurationGroupDeviceVariables(string name, Input<string> id, ConfigurationGroupDeviceVariablesState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/configurationGroupDeviceVariables:ConfigurationGroupDeviceVariables", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConfigurationGroupDeviceVariables resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConfigurationGroupDeviceVariables Get(string name, Input<string> id, ConfigurationGroupDeviceVariablesState? state = null, CustomResourceOptions? options = null)
        {
            return new ConfigurationGroupDeviceVariables(name, id, state, options);
        }
    }

    public sealed class ConfigurationGroupDeviceVariablesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration Group ID
        /// </summary>
        [Input("configurationGroupId", required: true)]
        public Input<string> ConfigurationGroupId { get; set; } = null!;

        [Input("devices", required: true)]
        private InputList<Inputs.ConfigurationGroupDeviceVariablesDeviceArgs>? _devices;

        /// <summary>
        /// List of devices
        /// </summary>
        public InputList<Inputs.ConfigurationGroupDeviceVariablesDeviceArgs> Devices
        {
            get => _devices ?? (_devices = new InputList<Inputs.ConfigurationGroupDeviceVariablesDeviceArgs>());
            set => _devices = value;
        }

        [Input("groups")]
        private InputList<Inputs.ConfigurationGroupDeviceVariablesGroupArgs>? _groups;

        /// <summary>
        /// List of device groups
        /// </summary>
        public InputList<Inputs.ConfigurationGroupDeviceVariablesGroupArgs> Groups
        {
            get => _groups ?? (_groups = new InputList<Inputs.ConfigurationGroupDeviceVariablesGroupArgs>());
            set => _groups = value;
        }

        /// <summary>
        /// Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
        /// </summary>
        [Input("solution", required: true)]
        public Input<string> Solution { get; set; } = null!;

        public ConfigurationGroupDeviceVariablesArgs()
        {
        }
        public static new ConfigurationGroupDeviceVariablesArgs Empty => new ConfigurationGroupDeviceVariablesArgs();
    }

    public sealed class ConfigurationGroupDeviceVariablesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration Group ID
        /// </summary>
        [Input("configurationGroupId")]
        public Input<string>? ConfigurationGroupId { get; set; }

        [Input("devices")]
        private InputList<Inputs.ConfigurationGroupDeviceVariablesDeviceGetArgs>? _devices;

        /// <summary>
        /// List of devices
        /// </summary>
        public InputList<Inputs.ConfigurationGroupDeviceVariablesDeviceGetArgs> Devices
        {
            get => _devices ?? (_devices = new InputList<Inputs.ConfigurationGroupDeviceVariablesDeviceGetArgs>());
            set => _devices = value;
        }

        [Input("groups")]
        private InputList<Inputs.ConfigurationGroupDeviceVariablesGroupGetArgs>? _groups;

        /// <summary>
        /// List of device groups
        /// </summary>
        public InputList<Inputs.ConfigurationGroupDeviceVariablesGroupGetArgs> Groups
        {
            get => _groups ?? (_groups = new InputList<Inputs.ConfigurationGroupDeviceVariablesGroupGetArgs>());
            set => _groups = value;
        }

        /// <summary>
        /// Type of solution - Choices: `mobility`, `sdwan`, `nfvirtual`
        /// </summary>
        [Input("solution")]
        public Input<string>? Solution { get; set; }

        public ConfigurationGroupDeviceVariablesState()
        {
        }
        public static new ConfigurationGroupDeviceVariablesState Empty => new ConfigurationGroupDeviceVariablesState();
    }
}
