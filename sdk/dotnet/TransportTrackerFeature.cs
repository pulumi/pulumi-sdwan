// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a Transport Tracker Feature.
    ///   - Minimum SD-WAN Manager version: `20.12.0`
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Sdwan = Pulumi.Sdwan;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Sdwan.TransportTrackerFeature("example", new()
    ///     {
    ///         Name = "Example",
    ///         Description = "My Example",
    ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
    ///         TrackerName = "TRACKER_1",
    ///         EndpointApiUrl = "google.com",
    ///         EndpointDnsName = "google.com",
    ///         EndpointIp = "1.2.3.4",
    ///         Interval = 30,
    ///         Multiplier = 3,
    ///         Threshold = 300,
    ///         EndpointTrackerType = "interface",
    ///         TrackerType = "endpoint",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Expected import identifier with the format: "transport_tracker_feature_id,feature_profile_id"
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/transportTrackerFeature:TransportTrackerFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/transportTrackerFeature:TransportTrackerFeature")]
    public partial class TransportTrackerFeature : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// API url of endpoint
        /// </summary>
        [Output("endpointApiUrl")]
        public Output<string?> EndpointApiUrl { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("endpointApiUrlVariable")]
        public Output<string?> EndpointApiUrlVariable { get; private set; } = null!;

        /// <summary>
        /// Endpoint DNS Name
        /// </summary>
        [Output("endpointDnsName")]
        public Output<string?> EndpointDnsName { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("endpointDnsNameVariable")]
        public Output<string?> EndpointDnsNameVariable { get; private set; } = null!;

        /// <summary>
        /// Endpoint IP
        /// </summary>
        [Output("endpointIp")]
        public Output<string?> EndpointIp { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("endpointIpVariable")]
        public Output<string?> EndpointIpVariable { get; private set; } = null!;

        /// <summary>
        /// Endpoint Tracker Type - Choices: `interface` - Default value: `interface`
        /// </summary>
        [Output("endpointTrackerType")]
        public Output<string?> EndpointTrackerType { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("endpointTrackerTypeVariable")]
        public Output<string?> EndpointTrackerTypeVariable { get; private set; } = null!;

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Output("featureProfileId")]
        public Output<string> FeatureProfileId { get; private set; } = null!;

        /// <summary>
        /// Interval - Range: `20`-`600` - Default value: `60`
        /// </summary>
        [Output("interval")]
        public Output<int?> Interval { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("intervalVariable")]
        public Output<string?> IntervalVariable { get; private set; } = null!;

        /// <summary>
        /// Multiplier - Range: `1`-`10` - Default value: `3`
        /// </summary>
        [Output("multiplier")]
        public Output<int?> Multiplier { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("multiplierVariable")]
        public Output<string?> MultiplierVariable { get; private set; } = null!;

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Threshold - Range: `100`-`1000` - Default value: `300`
        /// </summary>
        [Output("threshold")]
        public Output<int?> Threshold { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("thresholdVariable")]
        public Output<string?> ThresholdVariable { get; private set; } = null!;

        /// <summary>
        /// Tracker Name
        /// </summary>
        [Output("trackerName")]
        public Output<string?> TrackerName { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("trackerNameVariable")]
        public Output<string?> TrackerNameVariable { get; private set; } = null!;

        /// <summary>
        /// Tracker Type - Choices: `endpoint`, `object` - Default value: `endpoint`
        /// </summary>
        [Output("trackerType")]
        public Output<string?> TrackerType { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("trackerTypeVariable")]
        public Output<string?> TrackerTypeVariable { get; private set; } = null!;

        /// <summary>
        /// The version of the Feature
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a TransportTrackerFeature resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TransportTrackerFeature(string name, TransportTrackerFeatureArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/transportTrackerFeature:TransportTrackerFeature", name, args ?? new TransportTrackerFeatureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TransportTrackerFeature(string name, Input<string> id, TransportTrackerFeatureState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/transportTrackerFeature:TransportTrackerFeature", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TransportTrackerFeature resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TransportTrackerFeature Get(string name, Input<string> id, TransportTrackerFeatureState? state = null, CustomResourceOptions? options = null)
        {
            return new TransportTrackerFeature(name, id, state, options);
        }
    }

    public sealed class TransportTrackerFeatureArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// API url of endpoint
        /// </summary>
        [Input("endpointApiUrl")]
        public Input<string>? EndpointApiUrl { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("endpointApiUrlVariable")]
        public Input<string>? EndpointApiUrlVariable { get; set; }

        /// <summary>
        /// Endpoint DNS Name
        /// </summary>
        [Input("endpointDnsName")]
        public Input<string>? EndpointDnsName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("endpointDnsNameVariable")]
        public Input<string>? EndpointDnsNameVariable { get; set; }

        /// <summary>
        /// Endpoint IP
        /// </summary>
        [Input("endpointIp")]
        public Input<string>? EndpointIp { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("endpointIpVariable")]
        public Input<string>? EndpointIpVariable { get; set; }

        /// <summary>
        /// Endpoint Tracker Type - Choices: `interface` - Default value: `interface`
        /// </summary>
        [Input("endpointTrackerType")]
        public Input<string>? EndpointTrackerType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("endpointTrackerTypeVariable")]
        public Input<string>? EndpointTrackerTypeVariable { get; set; }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// Interval - Range: `20`-`600` - Default value: `60`
        /// </summary>
        [Input("interval")]
        public Input<int>? Interval { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("intervalVariable")]
        public Input<string>? IntervalVariable { get; set; }

        /// <summary>
        /// Multiplier - Range: `1`-`10` - Default value: `3`
        /// </summary>
        [Input("multiplier")]
        public Input<int>? Multiplier { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("multiplierVariable")]
        public Input<string>? MultiplierVariable { get; set; }

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Threshold - Range: `100`-`1000` - Default value: `300`
        /// </summary>
        [Input("threshold")]
        public Input<int>? Threshold { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("thresholdVariable")]
        public Input<string>? ThresholdVariable { get; set; }

        /// <summary>
        /// Tracker Name
        /// </summary>
        [Input("trackerName")]
        public Input<string>? TrackerName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("trackerNameVariable")]
        public Input<string>? TrackerNameVariable { get; set; }

        /// <summary>
        /// Tracker Type - Choices: `endpoint`, `object` - Default value: `endpoint`
        /// </summary>
        [Input("trackerType")]
        public Input<string>? TrackerType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("trackerTypeVariable")]
        public Input<string>? TrackerTypeVariable { get; set; }

        public TransportTrackerFeatureArgs()
        {
        }
        public static new TransportTrackerFeatureArgs Empty => new TransportTrackerFeatureArgs();
    }

    public sealed class TransportTrackerFeatureState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// API url of endpoint
        /// </summary>
        [Input("endpointApiUrl")]
        public Input<string>? EndpointApiUrl { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("endpointApiUrlVariable")]
        public Input<string>? EndpointApiUrlVariable { get; set; }

        /// <summary>
        /// Endpoint DNS Name
        /// </summary>
        [Input("endpointDnsName")]
        public Input<string>? EndpointDnsName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("endpointDnsNameVariable")]
        public Input<string>? EndpointDnsNameVariable { get; set; }

        /// <summary>
        /// Endpoint IP
        /// </summary>
        [Input("endpointIp")]
        public Input<string>? EndpointIp { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("endpointIpVariable")]
        public Input<string>? EndpointIpVariable { get; set; }

        /// <summary>
        /// Endpoint Tracker Type - Choices: `interface` - Default value: `interface`
        /// </summary>
        [Input("endpointTrackerType")]
        public Input<string>? EndpointTrackerType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("endpointTrackerTypeVariable")]
        public Input<string>? EndpointTrackerTypeVariable { get; set; }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId")]
        public Input<string>? FeatureProfileId { get; set; }

        /// <summary>
        /// Interval - Range: `20`-`600` - Default value: `60`
        /// </summary>
        [Input("interval")]
        public Input<int>? Interval { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("intervalVariable")]
        public Input<string>? IntervalVariable { get; set; }

        /// <summary>
        /// Multiplier - Range: `1`-`10` - Default value: `3`
        /// </summary>
        [Input("multiplier")]
        public Input<int>? Multiplier { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("multiplierVariable")]
        public Input<string>? MultiplierVariable { get; set; }

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Threshold - Range: `100`-`1000` - Default value: `300`
        /// </summary>
        [Input("threshold")]
        public Input<int>? Threshold { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("thresholdVariable")]
        public Input<string>? ThresholdVariable { get; set; }

        /// <summary>
        /// Tracker Name
        /// </summary>
        [Input("trackerName")]
        public Input<string>? TrackerName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("trackerNameVariable")]
        public Input<string>? TrackerNameVariable { get; set; }

        /// <summary>
        /// Tracker Type - Choices: `endpoint`, `object` - Default value: `endpoint`
        /// </summary>
        [Input("trackerType")]
        public Input<string>? TrackerType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("trackerTypeVariable")]
        public Input<string>? TrackerTypeVariable { get; set; }

        /// <summary>
        /// The version of the Feature
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public TransportTrackerFeatureState()
        {
        }
        public static new TransportTrackerFeatureState Empty => new TransportTrackerFeatureState();
    }
}
