// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can attach a feature device template. Due to limitations of the API, once a device template is attached to a device, only one change can be applied per `pulumi up` operation. More information is available here.
    /// 
    /// ## Import
    /// 
    /// One feature device template ID and a comma separated list containing at least one device ID must be included:
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/attachFeatureDeviceTemplate:AttachFeatureDeviceTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd,[C8K-83E4B5EE-52AC-075F-B5E4-0050110680F3,C8K-C38D156C-34E4-909A-15BB-96D0E9D0E808]"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/attachFeatureDeviceTemplate:AttachFeatureDeviceTemplate")]
    public partial class AttachFeatureDeviceTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Devices
        /// </summary>
        [Output("devices")]
        public Output<ImmutableArray<Outputs.AttachFeatureDeviceTemplateDevice>> Devices { get; private set; } = null!;

        /// <summary>
        /// The version of the device template
        /// </summary>
        [Output("version")]
        public Output<int?> Version { get; private set; } = null!;


        /// <summary>
        /// Create a AttachFeatureDeviceTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AttachFeatureDeviceTemplate(string name, AttachFeatureDeviceTemplateArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/attachFeatureDeviceTemplate:AttachFeatureDeviceTemplate", name, args ?? new AttachFeatureDeviceTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AttachFeatureDeviceTemplate(string name, Input<string> id, AttachFeatureDeviceTemplateState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/attachFeatureDeviceTemplate:AttachFeatureDeviceTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AttachFeatureDeviceTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AttachFeatureDeviceTemplate Get(string name, Input<string> id, AttachFeatureDeviceTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new AttachFeatureDeviceTemplate(name, id, state, options);
        }
    }

    public sealed class AttachFeatureDeviceTemplateArgs : global::Pulumi.ResourceArgs
    {
        [Input("devices", required: true)]
        private InputList<Inputs.AttachFeatureDeviceTemplateDeviceArgs>? _devices;

        /// <summary>
        /// Devices
        /// </summary>
        public InputList<Inputs.AttachFeatureDeviceTemplateDeviceArgs> Devices
        {
            get => _devices ?? (_devices = new InputList<Inputs.AttachFeatureDeviceTemplateDeviceArgs>());
            set => _devices = value;
        }

        /// <summary>
        /// The version of the device template
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public AttachFeatureDeviceTemplateArgs()
        {
        }
        public static new AttachFeatureDeviceTemplateArgs Empty => new AttachFeatureDeviceTemplateArgs();
    }

    public sealed class AttachFeatureDeviceTemplateState : global::Pulumi.ResourceArgs
    {
        [Input("devices")]
        private InputList<Inputs.AttachFeatureDeviceTemplateDeviceGetArgs>? _devices;

        /// <summary>
        /// Devices
        /// </summary>
        public InputList<Inputs.AttachFeatureDeviceTemplateDeviceGetArgs> Devices
        {
            get => _devices ?? (_devices = new InputList<Inputs.AttachFeatureDeviceTemplateDeviceGetArgs>());
            set => _devices = value;
        }

        /// <summary>
        /// The version of the device template
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public AttachFeatureDeviceTemplateState()
        {
        }
        public static new AttachFeatureDeviceTemplateState Empty => new AttachFeatureDeviceTemplateState();
    }
}
