// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a Transport Cellular Profile Feature.
    ///   - Minimum SD-WAN Manager version: `20.12.0`
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Sdwan = Pulumi.Sdwan;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Sdwan.TransportCellularProfileFeature("example", new()
    ///     {
    ///         Name = "Example",
    ///         Description = "My Example",
    ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
    ///         ProfileId = 1,
    ///         AccessPointName = "apn1",
    ///         AuthenticationType = "pap",
    ///         ProfileUsername = "example",
    ///         ProfilePassword = "example123!",
    ///         PacketDataNetworkType = "ipv4",
    ///         NoOverwrite = false,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Expected import identifier with the format: "transport_cellular_profile_feature_id,feature_profile_id"
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/transportCellularProfileFeature:TransportCellularProfileFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/transportCellularProfileFeature:TransportCellularProfileFeature")]
    public partial class TransportCellularProfileFeature : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Set access point name
        /// </summary>
        [Output("accessPointName")]
        public Output<string?> AccessPointName { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("accessPointNameVariable")]
        public Output<string?> AccessPointNameVariable { get; private set; } = null!;

        /// <summary>
        /// Set authentication type - Choices: `pap`, `chap`, `pap_chap`
        /// </summary>
        [Output("authenticationType")]
        public Output<string?> AuthenticationType { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("authenticationTypeVariable")]
        public Output<string?> AuthenticationTypeVariable { get; private set; } = null!;

        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Output("featureProfileId")]
        public Output<string> FeatureProfileId { get; private set; } = null!;

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// No Authentication
        /// </summary>
        [Output("noAuthentication")]
        public Output<string?> NoAuthentication { get; private set; } = null!;

        /// <summary>
        /// No Overwrite
        /// </summary>
        [Output("noOverwrite")]
        public Output<bool?> NoOverwrite { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("noOverwriteVariable")]
        public Output<string?> NoOverwriteVariable { get; private set; } = null!;

        /// <summary>
        /// Set packet data network type - Choices: `ipv4`, `ipv4v6`, `ipv6` - Default value: `ipv4`
        /// </summary>
        [Output("packetDataNetworkType")]
        public Output<string?> PacketDataNetworkType { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("packetDataNetworkTypeVariable")]
        public Output<string?> PacketDataNetworkTypeVariable { get; private set; } = null!;

        /// <summary>
        /// Set Profile ID - Range: `1`-`16`
        /// </summary>
        [Output("profileId")]
        public Output<int?> ProfileId { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("profileIdVariable")]
        public Output<string?> ProfileIdVariable { get; private set; } = null!;

        /// <summary>
        /// Set the profile password
        /// </summary>
        [Output("profilePassword")]
        public Output<string?> ProfilePassword { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("profilePasswordVariable")]
        public Output<string?> ProfilePasswordVariable { get; private set; } = null!;

        /// <summary>
        /// Set the profile username
        /// </summary>
        [Output("profileUsername")]
        public Output<string?> ProfileUsername { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("profileUsernameVariable")]
        public Output<string?> ProfileUsernameVariable { get; private set; } = null!;

        /// <summary>
        /// The version of the Feature
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a TransportCellularProfileFeature resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TransportCellularProfileFeature(string name, TransportCellularProfileFeatureArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/transportCellularProfileFeature:TransportCellularProfileFeature", name, args ?? new TransportCellularProfileFeatureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TransportCellularProfileFeature(string name, Input<string> id, TransportCellularProfileFeatureState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/transportCellularProfileFeature:TransportCellularProfileFeature", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TransportCellularProfileFeature resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TransportCellularProfileFeature Get(string name, Input<string> id, TransportCellularProfileFeatureState? state = null, CustomResourceOptions? options = null)
        {
            return new TransportCellularProfileFeature(name, id, state, options);
        }
    }

    public sealed class TransportCellularProfileFeatureArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set access point name
        /// </summary>
        [Input("accessPointName")]
        public Input<string>? AccessPointName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("accessPointNameVariable")]
        public Input<string>? AccessPointNameVariable { get; set; }

        /// <summary>
        /// Set authentication type - Choices: `pap`, `chap`, `pap_chap`
        /// </summary>
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("authenticationTypeVariable")]
        public Input<string>? AuthenticationTypeVariable { get; set; }

        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// No Authentication
        /// </summary>
        [Input("noAuthentication")]
        public Input<string>? NoAuthentication { get; set; }

        /// <summary>
        /// No Overwrite
        /// </summary>
        [Input("noOverwrite")]
        public Input<bool>? NoOverwrite { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("noOverwriteVariable")]
        public Input<string>? NoOverwriteVariable { get; set; }

        /// <summary>
        /// Set packet data network type - Choices: `ipv4`, `ipv4v6`, `ipv6` - Default value: `ipv4`
        /// </summary>
        [Input("packetDataNetworkType")]
        public Input<string>? PacketDataNetworkType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("packetDataNetworkTypeVariable")]
        public Input<string>? PacketDataNetworkTypeVariable { get; set; }

        /// <summary>
        /// Set Profile ID - Range: `1`-`16`
        /// </summary>
        [Input("profileId")]
        public Input<int>? ProfileId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("profileIdVariable")]
        public Input<string>? ProfileIdVariable { get; set; }

        /// <summary>
        /// Set the profile password
        /// </summary>
        [Input("profilePassword")]
        public Input<string>? ProfilePassword { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("profilePasswordVariable")]
        public Input<string>? ProfilePasswordVariable { get; set; }

        /// <summary>
        /// Set the profile username
        /// </summary>
        [Input("profileUsername")]
        public Input<string>? ProfileUsername { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("profileUsernameVariable")]
        public Input<string>? ProfileUsernameVariable { get; set; }

        public TransportCellularProfileFeatureArgs()
        {
        }
        public static new TransportCellularProfileFeatureArgs Empty => new TransportCellularProfileFeatureArgs();
    }

    public sealed class TransportCellularProfileFeatureState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set access point name
        /// </summary>
        [Input("accessPointName")]
        public Input<string>? AccessPointName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("accessPointNameVariable")]
        public Input<string>? AccessPointNameVariable { get; set; }

        /// <summary>
        /// Set authentication type - Choices: `pap`, `chap`, `pap_chap`
        /// </summary>
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("authenticationTypeVariable")]
        public Input<string>? AuthenticationTypeVariable { get; set; }

        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId")]
        public Input<string>? FeatureProfileId { get; set; }

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// No Authentication
        /// </summary>
        [Input("noAuthentication")]
        public Input<string>? NoAuthentication { get; set; }

        /// <summary>
        /// No Overwrite
        /// </summary>
        [Input("noOverwrite")]
        public Input<bool>? NoOverwrite { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("noOverwriteVariable")]
        public Input<string>? NoOverwriteVariable { get; set; }

        /// <summary>
        /// Set packet data network type - Choices: `ipv4`, `ipv4v6`, `ipv6` - Default value: `ipv4`
        /// </summary>
        [Input("packetDataNetworkType")]
        public Input<string>? PacketDataNetworkType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("packetDataNetworkTypeVariable")]
        public Input<string>? PacketDataNetworkTypeVariable { get; set; }

        /// <summary>
        /// Set Profile ID - Range: `1`-`16`
        /// </summary>
        [Input("profileId")]
        public Input<int>? ProfileId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("profileIdVariable")]
        public Input<string>? ProfileIdVariable { get; set; }

        /// <summary>
        /// Set the profile password
        /// </summary>
        [Input("profilePassword")]
        public Input<string>? ProfilePassword { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("profilePasswordVariable")]
        public Input<string>? ProfilePasswordVariable { get; set; }

        /// <summary>
        /// Set the profile username
        /// </summary>
        [Input("profileUsername")]
        public Input<string>? ProfileUsername { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("profileUsernameVariable")]
        public Input<string>? ProfileUsernameVariable { get; set; }

        /// <summary>
        /// The version of the Feature
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public TransportCellularProfileFeatureState()
        {
        }
        public static new TransportCellularProfileFeatureState Empty => new TransportCellularProfileFeatureState();
    }
}
