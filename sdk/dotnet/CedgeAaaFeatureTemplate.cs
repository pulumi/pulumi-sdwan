// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a cEdge AAA feature template.
    ///   - Minimum SD-WAN Manager version: `15.0.0`
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/cedgeAaaFeatureTemplate:CedgeAaaFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/cedgeAaaFeatureTemplate:CedgeAaaFeatureTemplate")]
    public partial class CedgeAaaFeatureTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configure the accounting rules
        /// </summary>
        [Output("accountingRules")]
        public Output<ImmutableArray<Outputs.CedgeAaaFeatureTemplateAccountingRule>> AccountingRules { get; private set; } = null!;

        /// <summary>
        /// For configuration mode commands. - Default value: `false`
        /// </summary>
        [Output("authorizationConfigCommands")]
        public Output<bool?> AuthorizationConfigCommands { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("authorizationConfigCommandsVariable")]
        public Output<string?> AuthorizationConfigCommandsVariable { get; private set; } = null!;

        /// <summary>
        /// For enabling console authorization - Default value: `false`
        /// </summary>
        [Output("authorizationConsole")]
        public Output<bool?> AuthorizationConsole { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("authorizationConsoleVariable")]
        public Output<string?> AuthorizationConsoleVariable { get; private set; } = null!;

        /// <summary>
        /// Configure the Authorization Rules
        /// </summary>
        [Output("authorizationRules")]
        public Output<ImmutableArray<Outputs.CedgeAaaFeatureTemplateAuthorizationRule>> AuthorizationRules { get; private set; } = null!;

        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
        /// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
        /// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        [Output("deviceTypes")]
        public Output<ImmutableArray<string>> DeviceTypes { get; private set; } = null!;

        /// <summary>
        /// Accounting configurations parameters - Default value: `false`
        /// </summary>
        [Output("dot1xAccounting")]
        public Output<bool?> Dot1xAccounting { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("dot1xAccountingVariable")]
        public Output<string?> Dot1xAccountingVariable { get; private set; } = null!;

        /// <summary>
        /// Authentication configurations parameters - Default value: `false`
        /// </summary>
        [Output("dot1xAuthentication")]
        public Output<bool?> Dot1xAuthentication { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("dot1xAuthenticationVariable")]
        public Output<string?> Dot1xAuthenticationVariable { get; private set; } = null!;

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specify a RADIUS client
        /// </summary>
        [Output("radiusClients")]
        public Output<ImmutableArray<Outputs.CedgeAaaFeatureTemplateRadiusClient>> RadiusClients { get; private set; } = null!;

        /// <summary>
        /// Authentication Type - Choices: `any`, `all`, `session-key` - Default value: `any`
        /// </summary>
        [Output("radiusDynamicAuthorAuthenticationType")]
        public Output<string?> RadiusDynamicAuthorAuthenticationType { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("radiusDynamicAuthorAuthenticationTypeVariable")]
        public Output<string?> RadiusDynamicAuthorAuthenticationTypeVariable { get; private set; } = null!;

        /// <summary>
        /// Domain Stripping - Choices: `yes`, `no`, `right-to-left` - Default value: `no`
        /// </summary>
        [Output("radiusDynamicAuthorDomainStripping")]
        public Output<string?> RadiusDynamicAuthorDomainStripping { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("radiusDynamicAuthorDomainStrippingVariable")]
        public Output<string?> RadiusDynamicAuthorDomainStrippingVariable { get; private set; } = null!;

        /// <summary>
        /// Specify Radius Dynamic Author Port - Range: `0`-`65535` - Default value: `1700`
        /// </summary>
        [Output("radiusDynamicAuthorPort")]
        public Output<int?> RadiusDynamicAuthorPort { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("radiusDynamicAuthorPortVariable")]
        public Output<string?> RadiusDynamicAuthorPortVariable { get; private set; } = null!;

        /// <summary>
        /// Specify a radius dynamic author server-key
        /// </summary>
        [Output("radiusDynamicAuthorServerKey")]
        public Output<string?> RadiusDynamicAuthorServerKey { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("radiusDynamicAuthorServerKeyVariable")]
        public Output<string?> RadiusDynamicAuthorServerKeyVariable { get; private set; } = null!;

        /// <summary>
        /// Configure the Radius serverGroup
        /// </summary>
        [Output("radiusServerGroups")]
        public Output<ImmutableArray<Outputs.CedgeAaaFeatureTemplateRadiusServerGroup>> RadiusServerGroups { get; private set; } = null!;

        /// <summary>
        /// CTS Authorization List
        /// </summary>
        [Output("radiusTrustsecCtsAuthorizationList")]
        public Output<string?> RadiusTrustsecCtsAuthorizationList { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("radiusTrustsecCtsAuthorizationListVariable")]
        public Output<string?> RadiusTrustsecCtsAuthorizationListVariable { get; private set; } = null!;

        /// <summary>
        /// RADIUS trustsec group
        /// </summary>
        [Output("radiusTrustsecGroup")]
        public Output<string?> RadiusTrustsecGroup { get; private set; } = null!;

        /// <summary>
        /// ServerGroups priority order - Default value: `local`
        /// </summary>
        [Output("serverGroupsPriorityOrder")]
        public Output<string?> ServerGroupsPriorityOrder { get; private set; } = null!;

        /// <summary>
        /// Configure the TACACS serverGroup
        /// </summary>
        [Output("tacacsServerGroups")]
        public Output<ImmutableArray<Outputs.CedgeAaaFeatureTemplateTacacsServerGroup>> TacacsServerGroups { get; private set; } = null!;

        /// <summary>
        /// The template type
        /// </summary>
        [Output("templateType")]
        public Output<string> TemplateType { get; private set; } = null!;

        /// <summary>
        /// Create local login account
        /// </summary>
        [Output("users")]
        public Output<ImmutableArray<Outputs.CedgeAaaFeatureTemplateUser>> Users { get; private set; } = null!;

        /// <summary>
        /// The version of the feature template
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a CedgeAaaFeatureTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CedgeAaaFeatureTemplate(string name, CedgeAaaFeatureTemplateArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/cedgeAaaFeatureTemplate:CedgeAaaFeatureTemplate", name, args ?? new CedgeAaaFeatureTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CedgeAaaFeatureTemplate(string name, Input<string> id, CedgeAaaFeatureTemplateState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/cedgeAaaFeatureTemplate:CedgeAaaFeatureTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CedgeAaaFeatureTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CedgeAaaFeatureTemplate Get(string name, Input<string> id, CedgeAaaFeatureTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new CedgeAaaFeatureTemplate(name, id, state, options);
        }
    }

    public sealed class CedgeAaaFeatureTemplateArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountingRules")]
        private InputList<Inputs.CedgeAaaFeatureTemplateAccountingRuleArgs>? _accountingRules;

        /// <summary>
        /// Configure the accounting rules
        /// </summary>
        public InputList<Inputs.CedgeAaaFeatureTemplateAccountingRuleArgs> AccountingRules
        {
            get => _accountingRules ?? (_accountingRules = new InputList<Inputs.CedgeAaaFeatureTemplateAccountingRuleArgs>());
            set => _accountingRules = value;
        }

        /// <summary>
        /// For configuration mode commands. - Default value: `false`
        /// </summary>
        [Input("authorizationConfigCommands")]
        public Input<bool>? AuthorizationConfigCommands { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("authorizationConfigCommandsVariable")]
        public Input<string>? AuthorizationConfigCommandsVariable { get; set; }

        /// <summary>
        /// For enabling console authorization - Default value: `false`
        /// </summary>
        [Input("authorizationConsole")]
        public Input<bool>? AuthorizationConsole { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("authorizationConsoleVariable")]
        public Input<string>? AuthorizationConsoleVariable { get; set; }

        [Input("authorizationRules")]
        private InputList<Inputs.CedgeAaaFeatureTemplateAuthorizationRuleArgs>? _authorizationRules;

        /// <summary>
        /// Configure the Authorization Rules
        /// </summary>
        public InputList<Inputs.CedgeAaaFeatureTemplateAuthorizationRuleArgs> AuthorizationRules
        {
            get => _authorizationRules ?? (_authorizationRules = new InputList<Inputs.CedgeAaaFeatureTemplateAuthorizationRuleArgs>());
            set => _authorizationRules = value;
        }

        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("deviceTypes", required: true)]
        private InputList<string>? _deviceTypes;

        /// <summary>
        /// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
        /// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
        /// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        public InputList<string> DeviceTypes
        {
            get => _deviceTypes ?? (_deviceTypes = new InputList<string>());
            set => _deviceTypes = value;
        }

        /// <summary>
        /// Accounting configurations parameters - Default value: `false`
        /// </summary>
        [Input("dot1xAccounting")]
        public Input<bool>? Dot1xAccounting { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("dot1xAccountingVariable")]
        public Input<string>? Dot1xAccountingVariable { get; set; }

        /// <summary>
        /// Authentication configurations parameters - Default value: `false`
        /// </summary>
        [Input("dot1xAuthentication")]
        public Input<bool>? Dot1xAuthentication { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("dot1xAuthenticationVariable")]
        public Input<string>? Dot1xAuthenticationVariable { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("radiusClients")]
        private InputList<Inputs.CedgeAaaFeatureTemplateRadiusClientArgs>? _radiusClients;

        /// <summary>
        /// Specify a RADIUS client
        /// </summary>
        public InputList<Inputs.CedgeAaaFeatureTemplateRadiusClientArgs> RadiusClients
        {
            get => _radiusClients ?? (_radiusClients = new InputList<Inputs.CedgeAaaFeatureTemplateRadiusClientArgs>());
            set => _radiusClients = value;
        }

        /// <summary>
        /// Authentication Type - Choices: `any`, `all`, `session-key` - Default value: `any`
        /// </summary>
        [Input("radiusDynamicAuthorAuthenticationType")]
        public Input<string>? RadiusDynamicAuthorAuthenticationType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("radiusDynamicAuthorAuthenticationTypeVariable")]
        public Input<string>? RadiusDynamicAuthorAuthenticationTypeVariable { get; set; }

        /// <summary>
        /// Domain Stripping - Choices: `yes`, `no`, `right-to-left` - Default value: `no`
        /// </summary>
        [Input("radiusDynamicAuthorDomainStripping")]
        public Input<string>? RadiusDynamicAuthorDomainStripping { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("radiusDynamicAuthorDomainStrippingVariable")]
        public Input<string>? RadiusDynamicAuthorDomainStrippingVariable { get; set; }

        /// <summary>
        /// Specify Radius Dynamic Author Port - Range: `0`-`65535` - Default value: `1700`
        /// </summary>
        [Input("radiusDynamicAuthorPort")]
        public Input<int>? RadiusDynamicAuthorPort { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("radiusDynamicAuthorPortVariable")]
        public Input<string>? RadiusDynamicAuthorPortVariable { get; set; }

        /// <summary>
        /// Specify a radius dynamic author server-key
        /// </summary>
        [Input("radiusDynamicAuthorServerKey")]
        public Input<string>? RadiusDynamicAuthorServerKey { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("radiusDynamicAuthorServerKeyVariable")]
        public Input<string>? RadiusDynamicAuthorServerKeyVariable { get; set; }

        [Input("radiusServerGroups")]
        private InputList<Inputs.CedgeAaaFeatureTemplateRadiusServerGroupArgs>? _radiusServerGroups;

        /// <summary>
        /// Configure the Radius serverGroup
        /// </summary>
        public InputList<Inputs.CedgeAaaFeatureTemplateRadiusServerGroupArgs> RadiusServerGroups
        {
            get => _radiusServerGroups ?? (_radiusServerGroups = new InputList<Inputs.CedgeAaaFeatureTemplateRadiusServerGroupArgs>());
            set => _radiusServerGroups = value;
        }

        /// <summary>
        /// CTS Authorization List
        /// </summary>
        [Input("radiusTrustsecCtsAuthorizationList")]
        public Input<string>? RadiusTrustsecCtsAuthorizationList { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("radiusTrustsecCtsAuthorizationListVariable")]
        public Input<string>? RadiusTrustsecCtsAuthorizationListVariable { get; set; }

        /// <summary>
        /// RADIUS trustsec group
        /// </summary>
        [Input("radiusTrustsecGroup")]
        public Input<string>? RadiusTrustsecGroup { get; set; }

        /// <summary>
        /// ServerGroups priority order - Default value: `local`
        /// </summary>
        [Input("serverGroupsPriorityOrder")]
        public Input<string>? ServerGroupsPriorityOrder { get; set; }

        [Input("tacacsServerGroups")]
        private InputList<Inputs.CedgeAaaFeatureTemplateTacacsServerGroupArgs>? _tacacsServerGroups;

        /// <summary>
        /// Configure the TACACS serverGroup
        /// </summary>
        public InputList<Inputs.CedgeAaaFeatureTemplateTacacsServerGroupArgs> TacacsServerGroups
        {
            get => _tacacsServerGroups ?? (_tacacsServerGroups = new InputList<Inputs.CedgeAaaFeatureTemplateTacacsServerGroupArgs>());
            set => _tacacsServerGroups = value;
        }

        [Input("users")]
        private InputList<Inputs.CedgeAaaFeatureTemplateUserArgs>? _users;

        /// <summary>
        /// Create local login account
        /// </summary>
        public InputList<Inputs.CedgeAaaFeatureTemplateUserArgs> Users
        {
            get => _users ?? (_users = new InputList<Inputs.CedgeAaaFeatureTemplateUserArgs>());
            set => _users = value;
        }

        public CedgeAaaFeatureTemplateArgs()
        {
        }
        public static new CedgeAaaFeatureTemplateArgs Empty => new CedgeAaaFeatureTemplateArgs();
    }

    public sealed class CedgeAaaFeatureTemplateState : global::Pulumi.ResourceArgs
    {
        [Input("accountingRules")]
        private InputList<Inputs.CedgeAaaFeatureTemplateAccountingRuleGetArgs>? _accountingRules;

        /// <summary>
        /// Configure the accounting rules
        /// </summary>
        public InputList<Inputs.CedgeAaaFeatureTemplateAccountingRuleGetArgs> AccountingRules
        {
            get => _accountingRules ?? (_accountingRules = new InputList<Inputs.CedgeAaaFeatureTemplateAccountingRuleGetArgs>());
            set => _accountingRules = value;
        }

        /// <summary>
        /// For configuration mode commands. - Default value: `false`
        /// </summary>
        [Input("authorizationConfigCommands")]
        public Input<bool>? AuthorizationConfigCommands { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("authorizationConfigCommandsVariable")]
        public Input<string>? AuthorizationConfigCommandsVariable { get; set; }

        /// <summary>
        /// For enabling console authorization - Default value: `false`
        /// </summary>
        [Input("authorizationConsole")]
        public Input<bool>? AuthorizationConsole { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("authorizationConsoleVariable")]
        public Input<string>? AuthorizationConsoleVariable { get; set; }

        [Input("authorizationRules")]
        private InputList<Inputs.CedgeAaaFeatureTemplateAuthorizationRuleGetArgs>? _authorizationRules;

        /// <summary>
        /// Configure the Authorization Rules
        /// </summary>
        public InputList<Inputs.CedgeAaaFeatureTemplateAuthorizationRuleGetArgs> AuthorizationRules
        {
            get => _authorizationRules ?? (_authorizationRules = new InputList<Inputs.CedgeAaaFeatureTemplateAuthorizationRuleGetArgs>());
            set => _authorizationRules = value;
        }

        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("deviceTypes")]
        private InputList<string>? _deviceTypes;

        /// <summary>
        /// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
        /// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
        /// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        public InputList<string> DeviceTypes
        {
            get => _deviceTypes ?? (_deviceTypes = new InputList<string>());
            set => _deviceTypes = value;
        }

        /// <summary>
        /// Accounting configurations parameters - Default value: `false`
        /// </summary>
        [Input("dot1xAccounting")]
        public Input<bool>? Dot1xAccounting { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("dot1xAccountingVariable")]
        public Input<string>? Dot1xAccountingVariable { get; set; }

        /// <summary>
        /// Authentication configurations parameters - Default value: `false`
        /// </summary>
        [Input("dot1xAuthentication")]
        public Input<bool>? Dot1xAuthentication { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("dot1xAuthenticationVariable")]
        public Input<string>? Dot1xAuthenticationVariable { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("radiusClients")]
        private InputList<Inputs.CedgeAaaFeatureTemplateRadiusClientGetArgs>? _radiusClients;

        /// <summary>
        /// Specify a RADIUS client
        /// </summary>
        public InputList<Inputs.CedgeAaaFeatureTemplateRadiusClientGetArgs> RadiusClients
        {
            get => _radiusClients ?? (_radiusClients = new InputList<Inputs.CedgeAaaFeatureTemplateRadiusClientGetArgs>());
            set => _radiusClients = value;
        }

        /// <summary>
        /// Authentication Type - Choices: `any`, `all`, `session-key` - Default value: `any`
        /// </summary>
        [Input("radiusDynamicAuthorAuthenticationType")]
        public Input<string>? RadiusDynamicAuthorAuthenticationType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("radiusDynamicAuthorAuthenticationTypeVariable")]
        public Input<string>? RadiusDynamicAuthorAuthenticationTypeVariable { get; set; }

        /// <summary>
        /// Domain Stripping - Choices: `yes`, `no`, `right-to-left` - Default value: `no`
        /// </summary>
        [Input("radiusDynamicAuthorDomainStripping")]
        public Input<string>? RadiusDynamicAuthorDomainStripping { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("radiusDynamicAuthorDomainStrippingVariable")]
        public Input<string>? RadiusDynamicAuthorDomainStrippingVariable { get; set; }

        /// <summary>
        /// Specify Radius Dynamic Author Port - Range: `0`-`65535` - Default value: `1700`
        /// </summary>
        [Input("radiusDynamicAuthorPort")]
        public Input<int>? RadiusDynamicAuthorPort { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("radiusDynamicAuthorPortVariable")]
        public Input<string>? RadiusDynamicAuthorPortVariable { get; set; }

        /// <summary>
        /// Specify a radius dynamic author server-key
        /// </summary>
        [Input("radiusDynamicAuthorServerKey")]
        public Input<string>? RadiusDynamicAuthorServerKey { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("radiusDynamicAuthorServerKeyVariable")]
        public Input<string>? RadiusDynamicAuthorServerKeyVariable { get; set; }

        [Input("radiusServerGroups")]
        private InputList<Inputs.CedgeAaaFeatureTemplateRadiusServerGroupGetArgs>? _radiusServerGroups;

        /// <summary>
        /// Configure the Radius serverGroup
        /// </summary>
        public InputList<Inputs.CedgeAaaFeatureTemplateRadiusServerGroupGetArgs> RadiusServerGroups
        {
            get => _radiusServerGroups ?? (_radiusServerGroups = new InputList<Inputs.CedgeAaaFeatureTemplateRadiusServerGroupGetArgs>());
            set => _radiusServerGroups = value;
        }

        /// <summary>
        /// CTS Authorization List
        /// </summary>
        [Input("radiusTrustsecCtsAuthorizationList")]
        public Input<string>? RadiusTrustsecCtsAuthorizationList { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("radiusTrustsecCtsAuthorizationListVariable")]
        public Input<string>? RadiusTrustsecCtsAuthorizationListVariable { get; set; }

        /// <summary>
        /// RADIUS trustsec group
        /// </summary>
        [Input("radiusTrustsecGroup")]
        public Input<string>? RadiusTrustsecGroup { get; set; }

        /// <summary>
        /// ServerGroups priority order - Default value: `local`
        /// </summary>
        [Input("serverGroupsPriorityOrder")]
        public Input<string>? ServerGroupsPriorityOrder { get; set; }

        [Input("tacacsServerGroups")]
        private InputList<Inputs.CedgeAaaFeatureTemplateTacacsServerGroupGetArgs>? _tacacsServerGroups;

        /// <summary>
        /// Configure the TACACS serverGroup
        /// </summary>
        public InputList<Inputs.CedgeAaaFeatureTemplateTacacsServerGroupGetArgs> TacacsServerGroups
        {
            get => _tacacsServerGroups ?? (_tacacsServerGroups = new InputList<Inputs.CedgeAaaFeatureTemplateTacacsServerGroupGetArgs>());
            set => _tacacsServerGroups = value;
        }

        /// <summary>
        /// The template type
        /// </summary>
        [Input("templateType")]
        public Input<string>? TemplateType { get; set; }

        [Input("users")]
        private InputList<Inputs.CedgeAaaFeatureTemplateUserGetArgs>? _users;

        /// <summary>
        /// Create local login account
        /// </summary>
        public InputList<Inputs.CedgeAaaFeatureTemplateUserGetArgs> Users
        {
            get => _users ?? (_users = new InputList<Inputs.CedgeAaaFeatureTemplateUserGetArgs>());
            set => _users = value;
        }

        /// <summary>
        /// The version of the feature template
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public CedgeAaaFeatureTemplateState()
        {
        }
        public static new CedgeAaaFeatureTemplateState Empty => new CedgeAaaFeatureTemplateState();
    }
}
