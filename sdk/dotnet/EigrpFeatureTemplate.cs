// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a eigrp feature template.
    ///   - Minimum SD-WAN Manager version: `15.0.0`
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/eigrpFeatureTemplate:EigrpFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/eigrpFeatureTemplate:EigrpFeatureTemplate")]
    public partial class EigrpFeatureTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Set EIGRP address family
        /// </summary>
        [Output("addressFamilies")]
        public Output<ImmutableArray<Outputs.EigrpFeatureTemplateAddressFamily>> AddressFamilies { get; private set; } = null!;

        /// <summary>
        /// Set autonomous system ID &lt;1..65535&gt; - Range: `1`-`65535`
        /// </summary>
        [Output("asNumber")]
        public Output<int?> AsNumber { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("asNumberVariable")]
        public Output<string?> AsNumberVariable { get; private set; } = null!;

        /// <summary>
        /// Set EIGRP router authentication type - Choices: `md5`, `hmac-sha-256`
        /// </summary>
        [Output("authenticationType")]
        public Output<string?> AuthenticationType { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("authenticationTypeVariable")]
        public Output<string?> AuthenticationTypeVariable { get; private set; } = null!;

        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
        /// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
        /// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        [Output("deviceTypes")]
        public Output<ImmutableArray<string>> DeviceTypes { get; private set; } = null!;

        /// <summary>
        /// Selective route download - Default value: `false`
        /// </summary>
        [Output("filter")]
        public Output<bool?> Filter { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("filterVariable")]
        public Output<string?> FilterVariable { get; private set; } = null!;

        /// <summary>
        /// Set EIGRP hello interval - Range: `0`-`65535` - Default value: `5`
        /// </summary>
        [Output("helloInterval")]
        public Output<int?> HelloInterval { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("helloIntervalVariable")]
        public Output<string?> HelloIntervalVariable { get; private set; } = null!;

        /// <summary>
        /// Set hmac-sha-256 authentication key
        /// </summary>
        [Output("hmacAuthenticationKey")]
        public Output<string?> HmacAuthenticationKey { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("hmacAuthenticationKeyVariable")]
        public Output<string?> HmacAuthenticationKeyVariable { get; private set; } = null!;

        /// <summary>
        /// Set EIGRP hold time - Range: `0`-`65535` - Default value: `15`
        /// </summary>
        [Output("holdTime")]
        public Output<int?> HoldTime { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("holdTimeVariable")]
        public Output<string?> HoldTimeVariable { get; private set; } = null!;

        /// <summary>
        /// Configure IPv4 Static Routes
        /// </summary>
        [Output("interfaces")]
        public Output<ImmutableArray<Outputs.EigrpFeatureTemplateInterface>> Interfaces { get; private set; } = null!;

        /// <summary>
        /// Set keychain name
        /// </summary>
        [Output("keys")]
        public Output<ImmutableArray<Outputs.EigrpFeatureTemplateKey>> Keys { get; private set; } = null!;

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Configure policy to apply to prefixes received from EIGRP neighbor
        /// </summary>
        [Output("routePolicyName")]
        public Output<string?> RoutePolicyName { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("routePolicyNameVariable")]
        public Output<string?> RoutePolicyNameVariable { get; private set; } = null!;

        /// <summary>
        /// The template type
        /// </summary>
        [Output("templateType")]
        public Output<string> TemplateType { get; private set; } = null!;

        /// <summary>
        /// The version of the feature template
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a EigrpFeatureTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EigrpFeatureTemplate(string name, EigrpFeatureTemplateArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/eigrpFeatureTemplate:EigrpFeatureTemplate", name, args ?? new EigrpFeatureTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EigrpFeatureTemplate(string name, Input<string> id, EigrpFeatureTemplateState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/eigrpFeatureTemplate:EigrpFeatureTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EigrpFeatureTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EigrpFeatureTemplate Get(string name, Input<string> id, EigrpFeatureTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new EigrpFeatureTemplate(name, id, state, options);
        }
    }

    public sealed class EigrpFeatureTemplateArgs : global::Pulumi.ResourceArgs
    {
        [Input("addressFamilies")]
        private InputList<Inputs.EigrpFeatureTemplateAddressFamilyArgs>? _addressFamilies;

        /// <summary>
        /// Set EIGRP address family
        /// </summary>
        public InputList<Inputs.EigrpFeatureTemplateAddressFamilyArgs> AddressFamilies
        {
            get => _addressFamilies ?? (_addressFamilies = new InputList<Inputs.EigrpFeatureTemplateAddressFamilyArgs>());
            set => _addressFamilies = value;
        }

        /// <summary>
        /// Set autonomous system ID &lt;1..65535&gt; - Range: `1`-`65535`
        /// </summary>
        [Input("asNumber")]
        public Input<int>? AsNumber { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("asNumberVariable")]
        public Input<string>? AsNumberVariable { get; set; }

        /// <summary>
        /// Set EIGRP router authentication type - Choices: `md5`, `hmac-sha-256`
        /// </summary>
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("authenticationTypeVariable")]
        public Input<string>? AuthenticationTypeVariable { get; set; }

        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("deviceTypes", required: true)]
        private InputList<string>? _deviceTypes;

        /// <summary>
        /// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
        /// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
        /// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        public InputList<string> DeviceTypes
        {
            get => _deviceTypes ?? (_deviceTypes = new InputList<string>());
            set => _deviceTypes = value;
        }

        /// <summary>
        /// Selective route download - Default value: `false`
        /// </summary>
        [Input("filter")]
        public Input<bool>? Filter { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("filterVariable")]
        public Input<string>? FilterVariable { get; set; }

        /// <summary>
        /// Set EIGRP hello interval - Range: `0`-`65535` - Default value: `5`
        /// </summary>
        [Input("helloInterval")]
        public Input<int>? HelloInterval { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("helloIntervalVariable")]
        public Input<string>? HelloIntervalVariable { get; set; }

        /// <summary>
        /// Set hmac-sha-256 authentication key
        /// </summary>
        [Input("hmacAuthenticationKey")]
        public Input<string>? HmacAuthenticationKey { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("hmacAuthenticationKeyVariable")]
        public Input<string>? HmacAuthenticationKeyVariable { get; set; }

        /// <summary>
        /// Set EIGRP hold time - Range: `0`-`65535` - Default value: `15`
        /// </summary>
        [Input("holdTime")]
        public Input<int>? HoldTime { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("holdTimeVariable")]
        public Input<string>? HoldTimeVariable { get; set; }

        [Input("interfaces")]
        private InputList<Inputs.EigrpFeatureTemplateInterfaceArgs>? _interfaces;

        /// <summary>
        /// Configure IPv4 Static Routes
        /// </summary>
        public InputList<Inputs.EigrpFeatureTemplateInterfaceArgs> Interfaces
        {
            get => _interfaces ?? (_interfaces = new InputList<Inputs.EigrpFeatureTemplateInterfaceArgs>());
            set => _interfaces = value;
        }

        [Input("keys")]
        private InputList<Inputs.EigrpFeatureTemplateKeyArgs>? _keys;

        /// <summary>
        /// Set keychain name
        /// </summary>
        public InputList<Inputs.EigrpFeatureTemplateKeyArgs> Keys
        {
            get => _keys ?? (_keys = new InputList<Inputs.EigrpFeatureTemplateKeyArgs>());
            set => _keys = value;
        }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Configure policy to apply to prefixes received from EIGRP neighbor
        /// </summary>
        [Input("routePolicyName")]
        public Input<string>? RoutePolicyName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("routePolicyNameVariable")]
        public Input<string>? RoutePolicyNameVariable { get; set; }

        public EigrpFeatureTemplateArgs()
        {
        }
        public static new EigrpFeatureTemplateArgs Empty => new EigrpFeatureTemplateArgs();
    }

    public sealed class EigrpFeatureTemplateState : global::Pulumi.ResourceArgs
    {
        [Input("addressFamilies")]
        private InputList<Inputs.EigrpFeatureTemplateAddressFamilyGetArgs>? _addressFamilies;

        /// <summary>
        /// Set EIGRP address family
        /// </summary>
        public InputList<Inputs.EigrpFeatureTemplateAddressFamilyGetArgs> AddressFamilies
        {
            get => _addressFamilies ?? (_addressFamilies = new InputList<Inputs.EigrpFeatureTemplateAddressFamilyGetArgs>());
            set => _addressFamilies = value;
        }

        /// <summary>
        /// Set autonomous system ID &lt;1..65535&gt; - Range: `1`-`65535`
        /// </summary>
        [Input("asNumber")]
        public Input<int>? AsNumber { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("asNumberVariable")]
        public Input<string>? AsNumberVariable { get; set; }

        /// <summary>
        /// Set EIGRP router authentication type - Choices: `md5`, `hmac-sha-256`
        /// </summary>
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("authenticationTypeVariable")]
        public Input<string>? AuthenticationTypeVariable { get; set; }

        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("deviceTypes")]
        private InputList<string>? _deviceTypes;

        /// <summary>
        /// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
        /// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
        /// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        public InputList<string> DeviceTypes
        {
            get => _deviceTypes ?? (_deviceTypes = new InputList<string>());
            set => _deviceTypes = value;
        }

        /// <summary>
        /// Selective route download - Default value: `false`
        /// </summary>
        [Input("filter")]
        public Input<bool>? Filter { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("filterVariable")]
        public Input<string>? FilterVariable { get; set; }

        /// <summary>
        /// Set EIGRP hello interval - Range: `0`-`65535` - Default value: `5`
        /// </summary>
        [Input("helloInterval")]
        public Input<int>? HelloInterval { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("helloIntervalVariable")]
        public Input<string>? HelloIntervalVariable { get; set; }

        /// <summary>
        /// Set hmac-sha-256 authentication key
        /// </summary>
        [Input("hmacAuthenticationKey")]
        public Input<string>? HmacAuthenticationKey { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("hmacAuthenticationKeyVariable")]
        public Input<string>? HmacAuthenticationKeyVariable { get; set; }

        /// <summary>
        /// Set EIGRP hold time - Range: `0`-`65535` - Default value: `15`
        /// </summary>
        [Input("holdTime")]
        public Input<int>? HoldTime { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("holdTimeVariable")]
        public Input<string>? HoldTimeVariable { get; set; }

        [Input("interfaces")]
        private InputList<Inputs.EigrpFeatureTemplateInterfaceGetArgs>? _interfaces;

        /// <summary>
        /// Configure IPv4 Static Routes
        /// </summary>
        public InputList<Inputs.EigrpFeatureTemplateInterfaceGetArgs> Interfaces
        {
            get => _interfaces ?? (_interfaces = new InputList<Inputs.EigrpFeatureTemplateInterfaceGetArgs>());
            set => _interfaces = value;
        }

        [Input("keys")]
        private InputList<Inputs.EigrpFeatureTemplateKeyGetArgs>? _keys;

        /// <summary>
        /// Set keychain name
        /// </summary>
        public InputList<Inputs.EigrpFeatureTemplateKeyGetArgs> Keys
        {
            get => _keys ?? (_keys = new InputList<Inputs.EigrpFeatureTemplateKeyGetArgs>());
            set => _keys = value;
        }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Configure policy to apply to prefixes received from EIGRP neighbor
        /// </summary>
        [Input("routePolicyName")]
        public Input<string>? RoutePolicyName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("routePolicyNameVariable")]
        public Input<string>? RoutePolicyNameVariable { get; set; }

        /// <summary>
        /// The template type
        /// </summary>
        [Input("templateType")]
        public Input<string>? TemplateType { get; set; }

        /// <summary>
        /// The version of the feature template
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public EigrpFeatureTemplateState()
        {
        }
        public static new EigrpFeatureTemplateState Empty => new EigrpFeatureTemplateState();
    }
}
