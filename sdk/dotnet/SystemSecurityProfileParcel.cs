// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a System Security profile parcel.
    ///   - Minimum SD-WAN Manager version: `20.12.0`
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/systemSecurityProfileParcel:SystemSecurityProfileParcel example "f6b2c44c-693c-4763-b010-895aa3d236bd"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/systemSecurityProfileParcel:SystemSecurityProfileParcel")]
    public partial class SystemSecurityProfileParcel : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Set the sliding replay window size - Choices: `64`, `128`, `256`, `512`, `1024`, `2048`, `4096`, `8192` - Default value:
        /// `512`
        /// </summary>
        [Output("antiReplayWindow")]
        public Output<string?> AntiReplayWindow { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("antiReplayWindowVariable")]
        public Output<string?> AntiReplayWindowVariable { get; private set; } = null!;

        /// <summary>
        /// The description of the profile parcel
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Extended Anti-Replay Window - Range: `10`-`2048` - Default value: `256`
        /// </summary>
        [Output("extendedAntiReplayWindow")]
        public Output<int?> ExtendedAntiReplayWindow { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("extendedAntiReplayWindowVariable")]
        public Output<string?> ExtendedAntiReplayWindowVariable { get; private set; } = null!;

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Output("featureProfileId")]
        public Output<string?> FeatureProfileId { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("integrityTypeVariable")]
        public Output<string?> IntegrityTypeVariable { get; private set; } = null!;

        /// <summary>
        /// Set the authentication type for DTLS connections
        /// </summary>
        [Output("integrityTypes")]
        public Output<ImmutableArray<string>> IntegrityTypes { get; private set; } = null!;

        /// <summary>
        /// Enable or disable IPsec pairwise-keying - Default value: `false`
        /// </summary>
        [Output("ipsecPairwiseKeying")]
        public Output<bool?> IpsecPairwiseKeying { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipsecPairwiseKeyingVariable")]
        public Output<string?> IpsecPairwiseKeyingVariable { get; private set; } = null!;

        /// <summary>
        /// Configure a Keychain
        /// </summary>
        [Output("keychains")]
        public Output<ImmutableArray<Outputs.SystemSecurityProfileParcelKeychain>> Keychains { get; private set; } = null!;

        /// <summary>
        /// Configure a Key
        /// </summary>
        [Output("keys")]
        public Output<ImmutableArray<Outputs.SystemSecurityProfileParcelKey>> Keys { get; private set; } = null!;

        /// <summary>
        /// The name of the profile parcel
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Set how often to change the AES key for DTLS connections - Range: `10`-`1209600` - Default value: `86400`
        /// </summary>
        [Output("rekey")]
        public Output<int?> Rekey { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("rekeyVariable")]
        public Output<string?> RekeyVariable { get; private set; } = null!;

        /// <summary>
        /// The version of the profile parcel
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a SystemSecurityProfileParcel resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SystemSecurityProfileParcel(string name, SystemSecurityProfileParcelArgs? args = null, CustomResourceOptions? options = null)
            : base("sdwan:index/systemSecurityProfileParcel:SystemSecurityProfileParcel", name, args ?? new SystemSecurityProfileParcelArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SystemSecurityProfileParcel(string name, Input<string> id, SystemSecurityProfileParcelState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/systemSecurityProfileParcel:SystemSecurityProfileParcel", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SystemSecurityProfileParcel resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SystemSecurityProfileParcel Get(string name, Input<string> id, SystemSecurityProfileParcelState? state = null, CustomResourceOptions? options = null)
        {
            return new SystemSecurityProfileParcel(name, id, state, options);
        }
    }

    public sealed class SystemSecurityProfileParcelArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set the sliding replay window size - Choices: `64`, `128`, `256`, `512`, `1024`, `2048`, `4096`, `8192` - Default value:
        /// `512`
        /// </summary>
        [Input("antiReplayWindow")]
        public Input<string>? AntiReplayWindow { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("antiReplayWindowVariable")]
        public Input<string>? AntiReplayWindowVariable { get; set; }

        /// <summary>
        /// The description of the profile parcel
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Extended Anti-Replay Window - Range: `10`-`2048` - Default value: `256`
        /// </summary>
        [Input("extendedAntiReplayWindow")]
        public Input<int>? ExtendedAntiReplayWindow { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("extendedAntiReplayWindowVariable")]
        public Input<string>? ExtendedAntiReplayWindowVariable { get; set; }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId")]
        public Input<string>? FeatureProfileId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("integrityTypeVariable")]
        public Input<string>? IntegrityTypeVariable { get; set; }

        [Input("integrityTypes")]
        private InputList<string>? _integrityTypes;

        /// <summary>
        /// Set the authentication type for DTLS connections
        /// </summary>
        public InputList<string> IntegrityTypes
        {
            get => _integrityTypes ?? (_integrityTypes = new InputList<string>());
            set => _integrityTypes = value;
        }

        /// <summary>
        /// Enable or disable IPsec pairwise-keying - Default value: `false`
        /// </summary>
        [Input("ipsecPairwiseKeying")]
        public Input<bool>? IpsecPairwiseKeying { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipsecPairwiseKeyingVariable")]
        public Input<string>? IpsecPairwiseKeyingVariable { get; set; }

        [Input("keychains")]
        private InputList<Inputs.SystemSecurityProfileParcelKeychainArgs>? _keychains;

        /// <summary>
        /// Configure a Keychain
        /// </summary>
        public InputList<Inputs.SystemSecurityProfileParcelKeychainArgs> Keychains
        {
            get => _keychains ?? (_keychains = new InputList<Inputs.SystemSecurityProfileParcelKeychainArgs>());
            set => _keychains = value;
        }

        [Input("keys")]
        private InputList<Inputs.SystemSecurityProfileParcelKeyArgs>? _keys;

        /// <summary>
        /// Configure a Key
        /// </summary>
        public InputList<Inputs.SystemSecurityProfileParcelKeyArgs> Keys
        {
            get => _keys ?? (_keys = new InputList<Inputs.SystemSecurityProfileParcelKeyArgs>());
            set => _keys = value;
        }

        /// <summary>
        /// The name of the profile parcel
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Set how often to change the AES key for DTLS connections - Range: `10`-`1209600` - Default value: `86400`
        /// </summary>
        [Input("rekey")]
        public Input<int>? Rekey { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("rekeyVariable")]
        public Input<string>? RekeyVariable { get; set; }

        public SystemSecurityProfileParcelArgs()
        {
        }
        public static new SystemSecurityProfileParcelArgs Empty => new SystemSecurityProfileParcelArgs();
    }

    public sealed class SystemSecurityProfileParcelState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set the sliding replay window size - Choices: `64`, `128`, `256`, `512`, `1024`, `2048`, `4096`, `8192` - Default value:
        /// `512`
        /// </summary>
        [Input("antiReplayWindow")]
        public Input<string>? AntiReplayWindow { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("antiReplayWindowVariable")]
        public Input<string>? AntiReplayWindowVariable { get; set; }

        /// <summary>
        /// The description of the profile parcel
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Extended Anti-Replay Window - Range: `10`-`2048` - Default value: `256`
        /// </summary>
        [Input("extendedAntiReplayWindow")]
        public Input<int>? ExtendedAntiReplayWindow { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("extendedAntiReplayWindowVariable")]
        public Input<string>? ExtendedAntiReplayWindowVariable { get; set; }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId")]
        public Input<string>? FeatureProfileId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("integrityTypeVariable")]
        public Input<string>? IntegrityTypeVariable { get; set; }

        [Input("integrityTypes")]
        private InputList<string>? _integrityTypes;

        /// <summary>
        /// Set the authentication type for DTLS connections
        /// </summary>
        public InputList<string> IntegrityTypes
        {
            get => _integrityTypes ?? (_integrityTypes = new InputList<string>());
            set => _integrityTypes = value;
        }

        /// <summary>
        /// Enable or disable IPsec pairwise-keying - Default value: `false`
        /// </summary>
        [Input("ipsecPairwiseKeying")]
        public Input<bool>? IpsecPairwiseKeying { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipsecPairwiseKeyingVariable")]
        public Input<string>? IpsecPairwiseKeyingVariable { get; set; }

        [Input("keychains")]
        private InputList<Inputs.SystemSecurityProfileParcelKeychainGetArgs>? _keychains;

        /// <summary>
        /// Configure a Keychain
        /// </summary>
        public InputList<Inputs.SystemSecurityProfileParcelKeychainGetArgs> Keychains
        {
            get => _keychains ?? (_keychains = new InputList<Inputs.SystemSecurityProfileParcelKeychainGetArgs>());
            set => _keychains = value;
        }

        [Input("keys")]
        private InputList<Inputs.SystemSecurityProfileParcelKeyGetArgs>? _keys;

        /// <summary>
        /// Configure a Key
        /// </summary>
        public InputList<Inputs.SystemSecurityProfileParcelKeyGetArgs> Keys
        {
            get => _keys ?? (_keys = new InputList<Inputs.SystemSecurityProfileParcelKeyGetArgs>());
            set => _keys = value;
        }

        /// <summary>
        /// The name of the profile parcel
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Set how often to change the AES key for DTLS connections - Range: `10`-`1209600` - Default value: `86400`
        /// </summary>
        [Input("rekey")]
        public Input<int>? Rekey { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("rekeyVariable")]
        public Input<string>? RekeyVariable { get; set; }

        /// <summary>
        /// The version of the profile parcel
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public SystemSecurityProfileParcelState()
        {
        }
        public static new SystemSecurityProfileParcelState Empty => new SystemSecurityProfileParcelState();
    }
}
