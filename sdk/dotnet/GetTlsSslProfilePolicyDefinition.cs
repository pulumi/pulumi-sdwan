// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetTlsSslProfilePolicyDefinition
    {
        /// <summary>
        /// This data source can read the TLS SSL Profile Policy Definition .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetTlsSslProfilePolicyDefinition.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTlsSslProfilePolicyDefinitionResult> InvokeAsync(GetTlsSslProfilePolicyDefinitionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTlsSslProfilePolicyDefinitionResult>("sdwan:index/getTlsSslProfilePolicyDefinition:getTlsSslProfilePolicyDefinition", args ?? new GetTlsSslProfilePolicyDefinitionArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the TLS SSL Profile Policy Definition .
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetTlsSslProfilePolicyDefinition.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTlsSslProfilePolicyDefinitionResult> Invoke(GetTlsSslProfilePolicyDefinitionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTlsSslProfilePolicyDefinitionResult>("sdwan:index/getTlsSslProfilePolicyDefinition:getTlsSslProfilePolicyDefinition", args ?? new GetTlsSslProfilePolicyDefinitionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTlsSslProfilePolicyDefinitionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the object
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetTlsSslProfilePolicyDefinitionArgs()
        {
        }
        public static new GetTlsSslProfilePolicyDefinitionArgs Empty => new GetTlsSslProfilePolicyDefinitionArgs();
    }

    public sealed class GetTlsSslProfilePolicyDefinitionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the object
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetTlsSslProfilePolicyDefinitionInvokeArgs()
        {
        }
        public static new GetTlsSslProfilePolicyDefinitionInvokeArgs Empty => new GetTlsSslProfilePolicyDefinitionInvokeArgs();
    }


    [OutputType]
    public sealed class GetTlsSslProfilePolicyDefinitionResult
    {
        /// <summary>
        /// Allow URL list ID
        /// </summary>
        public readonly string AllowUrlListId;
        /// <summary>
        /// Allow URL list version
        /// </summary>
        public readonly int AllowUrlListVersion;
        /// <summary>
        /// Block URL list ID
        /// </summary>
        public readonly string BlockUrlListId;
        /// <summary>
        /// Block URL list version
        /// </summary>
        public readonly int BlockUrlListVersion;
        /// <summary>
        /// Categories that should be decrypted
        /// </summary>
        public readonly ImmutableArray<string> DecryptCategories;
        /// <summary>
        /// Decrypt threshold
        /// </summary>
        public readonly string DecryptThreshold;
        /// <summary>
        /// The description of the policy definition.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Fail decrypt enabled
        /// </summary>
        public readonly bool FailDecrypt;
        /// <summary>
        /// The id of the object
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The policy mode
        /// </summary>
        public readonly string Mode;
        /// <summary>
        /// The name of the policy definition.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Categories that should never be decrypted
        /// </summary>
        public readonly ImmutableArray<string> NeverDecryptCategories;
        /// <summary>
        /// Reputation enabled
        /// </summary>
        public readonly bool Reputation;
        /// <summary>
        /// Categories that should skipped
        /// </summary>
        public readonly ImmutableArray<string> SkipDecryptCategories;
        /// <summary>
        /// The version of the object
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetTlsSslProfilePolicyDefinitionResult(
            string allowUrlListId,

            int allowUrlListVersion,

            string blockUrlListId,

            int blockUrlListVersion,

            ImmutableArray<string> decryptCategories,

            string decryptThreshold,

            string description,

            bool failDecrypt,

            string id,

            string mode,

            string name,

            ImmutableArray<string> neverDecryptCategories,

            bool reputation,

            ImmutableArray<string> skipDecryptCategories,

            int version)
        {
            AllowUrlListId = allowUrlListId;
            AllowUrlListVersion = allowUrlListVersion;
            BlockUrlListId = blockUrlListId;
            BlockUrlListVersion = blockUrlListVersion;
            DecryptCategories = decryptCategories;
            DecryptThreshold = decryptThreshold;
            Description = description;
            FailDecrypt = failDecrypt;
            Id = id;
            Mode = mode;
            Name = name;
            NeverDecryptCategories = neverDecryptCategories;
            Reputation = reputation;
            SkipDecryptCategories = skipDecryptCategories;
            Version = version;
        }
    }
}
