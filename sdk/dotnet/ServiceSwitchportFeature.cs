// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a Service Switchport Feature.
    ///   - Minimum SD-WAN Manager version: `20.12.0`
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Sdwan = Pulumi.Sdwan;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Sdwan.ServiceSwitchportFeature("example", new()
    ///     {
    ///         Name = "Example",
    ///         Description = "My Example",
    ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
    ///         Interfaces = new[]
    ///         {
    ///             new Sdwan.Inputs.ServiceSwitchportFeatureInterfaceArgs
    ///             {
    ///                 Interface_name = "GigabitEthernet",
    ///                 Mode = "access",
    ///                 Shutdown = true,
    ///                 Speed = "10",
    ///                 Duplex = "full",
    ///                 Switchport_access_vlan = 1,
    ///                 Switchport_trunk_allowed_vlans = "1",
    ///                 Switchport_trunk_native_vlan = 1,
    ///                 Port_control = "auto",
    ///                 Voice_vlan = 1,
    ///                 Pae_enable = true,
    ///                 Mac_authentication_bypass = false,
    ///                 Host_mode = "single-host",
    ///                 Enable_periodic_reauth = false,
    ///                 Inactivity = 60,
    ///                 Reauthentication = 1,
    ///                 Control_direction = "both",
    ///                 Restricted_vlan = 1,
    ///                 Guest_vlan = 1,
    ///                 Critical_vlan = 1,
    ///                 Enable_voice = false,
    ///             },
    ///         },
    ///         AgeOutTime = 300,
    ///         StaticMacAddresses = new[]
    ///         {
    ///             new Sdwan.Inputs.ServiceSwitchportFeatureStaticMacAddressArgs
    ///             {
    ///                 Mac_address = "01:02:03:04:05:06",
    ///                 Vlan_id = 1,
    ///                 Interface_name = "GigabitEthernet0/0/0",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// Expected import identifier with the format: "service_switchport_feature_id,feature_profile_id"
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/serviceSwitchportFeature:ServiceSwitchportFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/serviceSwitchportFeature:ServiceSwitchportFeature")]
    public partial class ServiceSwitchportFeature : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Set when a MAC table entry ages out (0 to disable, 10-1000000 otherwise)
        ///   - Range: `0`-`1000000`
        ///   - Default value: `300`
        /// </summary>
        [Output("ageOutTime")]
        public Output<int?> AgeOutTime { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ageOutTimeVariable")]
        public Output<string?> AgeOutTimeVariable { get; private set; } = null!;

        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Output("featureProfileId")]
        public Output<string> FeatureProfileId { get; private set; } = null!;

        /// <summary>
        /// Interface name: GigabitEthernet0/&lt;&gt;/&lt;&gt; when present
        /// </summary>
        [Output("interfaces")]
        public Output<ImmutableArray<Outputs.ServiceSwitchportFeatureInterface>> Interfaces { get; private set; } = null!;

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Add static MAC address entries for interface
        /// </summary>
        [Output("staticMacAddresses")]
        public Output<ImmutableArray<Outputs.ServiceSwitchportFeatureStaticMacAddress>> StaticMacAddresses { get; private set; } = null!;

        /// <summary>
        /// The version of the Feature
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceSwitchportFeature resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceSwitchportFeature(string name, ServiceSwitchportFeatureArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/serviceSwitchportFeature:ServiceSwitchportFeature", name, args ?? new ServiceSwitchportFeatureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceSwitchportFeature(string name, Input<string> id, ServiceSwitchportFeatureState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/serviceSwitchportFeature:ServiceSwitchportFeature", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceSwitchportFeature resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceSwitchportFeature Get(string name, Input<string> id, ServiceSwitchportFeatureState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceSwitchportFeature(name, id, state, options);
        }
    }

    public sealed class ServiceSwitchportFeatureArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set when a MAC table entry ages out (0 to disable, 10-1000000 otherwise)
        ///   - Range: `0`-`1000000`
        ///   - Default value: `300`
        /// </summary>
        [Input("ageOutTime")]
        public Input<int>? AgeOutTime { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ageOutTimeVariable")]
        public Input<string>? AgeOutTimeVariable { get; set; }

        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        [Input("interfaces")]
        private InputList<Inputs.ServiceSwitchportFeatureInterfaceArgs>? _interfaces;

        /// <summary>
        /// Interface name: GigabitEthernet0/&lt;&gt;/&lt;&gt; when present
        /// </summary>
        public InputList<Inputs.ServiceSwitchportFeatureInterfaceArgs> Interfaces
        {
            get => _interfaces ?? (_interfaces = new InputList<Inputs.ServiceSwitchportFeatureInterfaceArgs>());
            set => _interfaces = value;
        }

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("staticMacAddresses")]
        private InputList<Inputs.ServiceSwitchportFeatureStaticMacAddressArgs>? _staticMacAddresses;

        /// <summary>
        /// Add static MAC address entries for interface
        /// </summary>
        public InputList<Inputs.ServiceSwitchportFeatureStaticMacAddressArgs> StaticMacAddresses
        {
            get => _staticMacAddresses ?? (_staticMacAddresses = new InputList<Inputs.ServiceSwitchportFeatureStaticMacAddressArgs>());
            set => _staticMacAddresses = value;
        }

        public ServiceSwitchportFeatureArgs()
        {
        }
        public static new ServiceSwitchportFeatureArgs Empty => new ServiceSwitchportFeatureArgs();
    }

    public sealed class ServiceSwitchportFeatureState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set when a MAC table entry ages out (0 to disable, 10-1000000 otherwise)
        ///   - Range: `0`-`1000000`
        ///   - Default value: `300`
        /// </summary>
        [Input("ageOutTime")]
        public Input<int>? AgeOutTime { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ageOutTimeVariable")]
        public Input<string>? AgeOutTimeVariable { get; set; }

        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId")]
        public Input<string>? FeatureProfileId { get; set; }

        [Input("interfaces")]
        private InputList<Inputs.ServiceSwitchportFeatureInterfaceGetArgs>? _interfaces;

        /// <summary>
        /// Interface name: GigabitEthernet0/&lt;&gt;/&lt;&gt; when present
        /// </summary>
        public InputList<Inputs.ServiceSwitchportFeatureInterfaceGetArgs> Interfaces
        {
            get => _interfaces ?? (_interfaces = new InputList<Inputs.ServiceSwitchportFeatureInterfaceGetArgs>());
            set => _interfaces = value;
        }

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("staticMacAddresses")]
        private InputList<Inputs.ServiceSwitchportFeatureStaticMacAddressGetArgs>? _staticMacAddresses;

        /// <summary>
        /// Add static MAC address entries for interface
        /// </summary>
        public InputList<Inputs.ServiceSwitchportFeatureStaticMacAddressGetArgs> StaticMacAddresses
        {
            get => _staticMacAddresses ?? (_staticMacAddresses = new InputList<Inputs.ServiceSwitchportFeatureStaticMacAddressGetArgs>());
            set => _staticMacAddresses = value;
        }

        /// <summary>
        /// The version of the Feature
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public ServiceSwitchportFeatureState()
        {
        }
        public static new ServiceSwitchportFeatureState Empty => new ServiceSwitchportFeatureState();
    }
}
