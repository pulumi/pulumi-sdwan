// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a Service Routing EIGRP Feature.
    ///   - Minimum SD-WAN Manager version: `20.12.0`
    /// 
    /// ## Import
    /// 
    /// Expected import identifier with the format: "service_routing_eigrp_feature_id,feature_profile_id"
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/serviceRoutingEigrpFeature:ServiceRoutingEigrpFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/serviceRoutingEigrpFeature:ServiceRoutingEigrpFeature")]
    public partial class ServiceRoutingEigrpFeature : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Set EIGRP router authentication type - Choices: `md5`, `hmac-sha-256`
        /// </summary>
        [Output("authenticationType")]
        public Output<string?> AuthenticationType { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("authenticationTypeVariable")]
        public Output<string?> AuthenticationTypeVariable { get; private set; } = null!;

        /// <summary>
        /// Set autonomous system ID &lt;1..65535&gt; - Range: `1`-`65535`
        /// </summary>
        [Output("autonomousSystemId")]
        public Output<int?> AutonomousSystemId { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("autonomousSystemIdVariable")]
        public Output<string?> AutonomousSystemIdVariable { get; private set; } = null!;

        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Output("featureProfileId")]
        public Output<string> FeatureProfileId { get; private set; } = null!;

        /// <summary>
        /// Selective route download - Default value: `false`
        /// </summary>
        [Output("filter")]
        public Output<bool?> Filter { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("filterVariable")]
        public Output<string?> FilterVariable { get; private set; } = null!;

        /// <summary>
        /// Set EIGRP hello interval - Range: `0`-`65535` - Default value: `5`
        /// </summary>
        [Output("helloInterval")]
        public Output<int?> HelloInterval { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("helloIntervalVariable")]
        public Output<string?> HelloIntervalVariable { get; private set; } = null!;

        /// <summary>
        /// Set hmac-sha-256 authentication key, Attribute conditional on `authentication_type` being equal to `hmac-sha-256`
        /// </summary>
        [Output("hmacAuthenticationKey")]
        public Output<string?> HmacAuthenticationKey { get; private set; } = null!;

        /// <summary>
        /// Variable name, Attribute conditional on `authentication_type` being equal to `hmac-sha-256`
        /// </summary>
        [Output("hmacAuthenticationKeyVariable")]
        public Output<string?> HmacAuthenticationKeyVariable { get; private set; } = null!;

        /// <summary>
        /// Set EIGRP hold time - Range: `0`-`65535` - Default value: `15`
        /// </summary>
        [Output("holdTime")]
        public Output<int?> HoldTime { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("holdTimeVariable")]
        public Output<string?> HoldTimeVariable { get; private set; } = null!;

        /// <summary>
        /// Configure IPv4 Static Routes
        /// </summary>
        [Output("interfaces")]
        public Output<ImmutableArray<Outputs.ServiceRoutingEigrpFeatureInterface>> Interfaces { get; private set; } = null!;

        /// <summary>
        /// Set keychain details, Attribute conditional on `authentication_type` being equal to `md5`
        /// </summary>
        [Output("md5Keys")]
        public Output<ImmutableArray<Outputs.ServiceRoutingEigrpFeatureMd5Key>> Md5Keys { get; private set; } = null!;

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Configure the networks for EIGRP to advertise
        /// </summary>
        [Output("networks")]
        public Output<ImmutableArray<Outputs.ServiceRoutingEigrpFeatureNetwork>> Networks { get; private set; } = null!;

        /// <summary>
        /// Redistribute routes into EIGRP
        /// </summary>
        [Output("redistributes")]
        public Output<ImmutableArray<Outputs.ServiceRoutingEigrpFeatureRedistribute>> Redistributes { get; private set; } = null!;

        [Output("routePolicyId")]
        public Output<string?> RoutePolicyId { get; private set; } = null!;

        /// <summary>
        /// The version of the Feature
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceRoutingEigrpFeature resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceRoutingEigrpFeature(string name, ServiceRoutingEigrpFeatureArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/serviceRoutingEigrpFeature:ServiceRoutingEigrpFeature", name, args ?? new ServiceRoutingEigrpFeatureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceRoutingEigrpFeature(string name, Input<string> id, ServiceRoutingEigrpFeatureState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/serviceRoutingEigrpFeature:ServiceRoutingEigrpFeature", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceRoutingEigrpFeature resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceRoutingEigrpFeature Get(string name, Input<string> id, ServiceRoutingEigrpFeatureState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceRoutingEigrpFeature(name, id, state, options);
        }
    }

    public sealed class ServiceRoutingEigrpFeatureArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set EIGRP router authentication type - Choices: `md5`, `hmac-sha-256`
        /// </summary>
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("authenticationTypeVariable")]
        public Input<string>? AuthenticationTypeVariable { get; set; }

        /// <summary>
        /// Set autonomous system ID &lt;1..65535&gt; - Range: `1`-`65535`
        /// </summary>
        [Input("autonomousSystemId")]
        public Input<int>? AutonomousSystemId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("autonomousSystemIdVariable")]
        public Input<string>? AutonomousSystemIdVariable { get; set; }

        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// Selective route download - Default value: `false`
        /// </summary>
        [Input("filter")]
        public Input<bool>? Filter { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("filterVariable")]
        public Input<string>? FilterVariable { get; set; }

        /// <summary>
        /// Set EIGRP hello interval - Range: `0`-`65535` - Default value: `5`
        /// </summary>
        [Input("helloInterval")]
        public Input<int>? HelloInterval { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("helloIntervalVariable")]
        public Input<string>? HelloIntervalVariable { get; set; }

        /// <summary>
        /// Set hmac-sha-256 authentication key, Attribute conditional on `authentication_type` being equal to `hmac-sha-256`
        /// </summary>
        [Input("hmacAuthenticationKey")]
        public Input<string>? HmacAuthenticationKey { get; set; }

        /// <summary>
        /// Variable name, Attribute conditional on `authentication_type` being equal to `hmac-sha-256`
        /// </summary>
        [Input("hmacAuthenticationKeyVariable")]
        public Input<string>? HmacAuthenticationKeyVariable { get; set; }

        /// <summary>
        /// Set EIGRP hold time - Range: `0`-`65535` - Default value: `15`
        /// </summary>
        [Input("holdTime")]
        public Input<int>? HoldTime { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("holdTimeVariable")]
        public Input<string>? HoldTimeVariable { get; set; }

        [Input("interfaces")]
        private InputList<Inputs.ServiceRoutingEigrpFeatureInterfaceArgs>? _interfaces;

        /// <summary>
        /// Configure IPv4 Static Routes
        /// </summary>
        public InputList<Inputs.ServiceRoutingEigrpFeatureInterfaceArgs> Interfaces
        {
            get => _interfaces ?? (_interfaces = new InputList<Inputs.ServiceRoutingEigrpFeatureInterfaceArgs>());
            set => _interfaces = value;
        }

        [Input("md5Keys")]
        private InputList<Inputs.ServiceRoutingEigrpFeatureMd5KeyArgs>? _md5Keys;

        /// <summary>
        /// Set keychain details, Attribute conditional on `authentication_type` being equal to `md5`
        /// </summary>
        public InputList<Inputs.ServiceRoutingEigrpFeatureMd5KeyArgs> Md5Keys
        {
            get => _md5Keys ?? (_md5Keys = new InputList<Inputs.ServiceRoutingEigrpFeatureMd5KeyArgs>());
            set => _md5Keys = value;
        }

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networks", required: true)]
        private InputList<Inputs.ServiceRoutingEigrpFeatureNetworkArgs>? _networks;

        /// <summary>
        /// Configure the networks for EIGRP to advertise
        /// </summary>
        public InputList<Inputs.ServiceRoutingEigrpFeatureNetworkArgs> Networks
        {
            get => _networks ?? (_networks = new InputList<Inputs.ServiceRoutingEigrpFeatureNetworkArgs>());
            set => _networks = value;
        }

        [Input("redistributes")]
        private InputList<Inputs.ServiceRoutingEigrpFeatureRedistributeArgs>? _redistributes;

        /// <summary>
        /// Redistribute routes into EIGRP
        /// </summary>
        public InputList<Inputs.ServiceRoutingEigrpFeatureRedistributeArgs> Redistributes
        {
            get => _redistributes ?? (_redistributes = new InputList<Inputs.ServiceRoutingEigrpFeatureRedistributeArgs>());
            set => _redistributes = value;
        }

        [Input("routePolicyId")]
        public Input<string>? RoutePolicyId { get; set; }

        public ServiceRoutingEigrpFeatureArgs()
        {
        }
        public static new ServiceRoutingEigrpFeatureArgs Empty => new ServiceRoutingEigrpFeatureArgs();
    }

    public sealed class ServiceRoutingEigrpFeatureState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set EIGRP router authentication type - Choices: `md5`, `hmac-sha-256`
        /// </summary>
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("authenticationTypeVariable")]
        public Input<string>? AuthenticationTypeVariable { get; set; }

        /// <summary>
        /// Set autonomous system ID &lt;1..65535&gt; - Range: `1`-`65535`
        /// </summary>
        [Input("autonomousSystemId")]
        public Input<int>? AutonomousSystemId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("autonomousSystemIdVariable")]
        public Input<string>? AutonomousSystemIdVariable { get; set; }

        /// <summary>
        /// The description of the Feature
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId")]
        public Input<string>? FeatureProfileId { get; set; }

        /// <summary>
        /// Selective route download - Default value: `false`
        /// </summary>
        [Input("filter")]
        public Input<bool>? Filter { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("filterVariable")]
        public Input<string>? FilterVariable { get; set; }

        /// <summary>
        /// Set EIGRP hello interval - Range: `0`-`65535` - Default value: `5`
        /// </summary>
        [Input("helloInterval")]
        public Input<int>? HelloInterval { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("helloIntervalVariable")]
        public Input<string>? HelloIntervalVariable { get; set; }

        /// <summary>
        /// Set hmac-sha-256 authentication key, Attribute conditional on `authentication_type` being equal to `hmac-sha-256`
        /// </summary>
        [Input("hmacAuthenticationKey")]
        public Input<string>? HmacAuthenticationKey { get; set; }

        /// <summary>
        /// Variable name, Attribute conditional on `authentication_type` being equal to `hmac-sha-256`
        /// </summary>
        [Input("hmacAuthenticationKeyVariable")]
        public Input<string>? HmacAuthenticationKeyVariable { get; set; }

        /// <summary>
        /// Set EIGRP hold time - Range: `0`-`65535` - Default value: `15`
        /// </summary>
        [Input("holdTime")]
        public Input<int>? HoldTime { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("holdTimeVariable")]
        public Input<string>? HoldTimeVariable { get; set; }

        [Input("interfaces")]
        private InputList<Inputs.ServiceRoutingEigrpFeatureInterfaceGetArgs>? _interfaces;

        /// <summary>
        /// Configure IPv4 Static Routes
        /// </summary>
        public InputList<Inputs.ServiceRoutingEigrpFeatureInterfaceGetArgs> Interfaces
        {
            get => _interfaces ?? (_interfaces = new InputList<Inputs.ServiceRoutingEigrpFeatureInterfaceGetArgs>());
            set => _interfaces = value;
        }

        [Input("md5Keys")]
        private InputList<Inputs.ServiceRoutingEigrpFeatureMd5KeyGetArgs>? _md5Keys;

        /// <summary>
        /// Set keychain details, Attribute conditional on `authentication_type` being equal to `md5`
        /// </summary>
        public InputList<Inputs.ServiceRoutingEigrpFeatureMd5KeyGetArgs> Md5Keys
        {
            get => _md5Keys ?? (_md5Keys = new InputList<Inputs.ServiceRoutingEigrpFeatureMd5KeyGetArgs>());
            set => _md5Keys = value;
        }

        /// <summary>
        /// The name of the Feature
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networks")]
        private InputList<Inputs.ServiceRoutingEigrpFeatureNetworkGetArgs>? _networks;

        /// <summary>
        /// Configure the networks for EIGRP to advertise
        /// </summary>
        public InputList<Inputs.ServiceRoutingEigrpFeatureNetworkGetArgs> Networks
        {
            get => _networks ?? (_networks = new InputList<Inputs.ServiceRoutingEigrpFeatureNetworkGetArgs>());
            set => _networks = value;
        }

        [Input("redistributes")]
        private InputList<Inputs.ServiceRoutingEigrpFeatureRedistributeGetArgs>? _redistributes;

        /// <summary>
        /// Redistribute routes into EIGRP
        /// </summary>
        public InputList<Inputs.ServiceRoutingEigrpFeatureRedistributeGetArgs> Redistributes
        {
            get => _redistributes ?? (_redistributes = new InputList<Inputs.ServiceRoutingEigrpFeatureRedistributeGetArgs>());
            set => _redistributes = value;
        }

        [Input("routePolicyId")]
        public Input<string>? RoutePolicyId { get; set; }

        /// <summary>
        /// The version of the Feature
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public ServiceRoutingEigrpFeatureState()
        {
        }
        public static new ServiceRoutingEigrpFeatureState Empty => new ServiceRoutingEigrpFeatureState();
    }
}
