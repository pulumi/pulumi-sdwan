// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetSystemNtpProfileParcel
    {
        /// <summary>
        /// This data source can read the System NTP profile parcel.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetSystemNtpProfileParcel.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSystemNtpProfileParcelResult> InvokeAsync(GetSystemNtpProfileParcelArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSystemNtpProfileParcelResult>("sdwan:index/getSystemNtpProfileParcel:getSystemNtpProfileParcel", args ?? new GetSystemNtpProfileParcelArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the System NTP profile parcel.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetSystemNtpProfileParcel.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSystemNtpProfileParcelResult> Invoke(GetSystemNtpProfileParcelInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSystemNtpProfileParcelResult>("sdwan:index/getSystemNtpProfileParcel:getSystemNtpProfileParcel", args ?? new GetSystemNtpProfileParcelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSystemNtpProfileParcelArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public string FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the profile parcel
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetSystemNtpProfileParcelArgs()
        {
        }
        public static new GetSystemNtpProfileParcelArgs Empty => new GetSystemNtpProfileParcelArgs();
    }

    public sealed class GetSystemNtpProfileParcelInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the profile parcel
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetSystemNtpProfileParcelInvokeArgs()
        {
        }
        public static new GetSystemNtpProfileParcelInvokeArgs Empty => new GetSystemNtpProfileParcelInvokeArgs();
    }


    [OutputType]
    public sealed class GetSystemNtpProfileParcelResult
    {
        /// <summary>
        /// Set MD5 authentication key
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSystemNtpProfileParcelAuthenticationKeyResult> AuthenticationKeys;
        /// <summary>
        /// Enable device as NTP Leader
        /// </summary>
        public readonly bool AuthoritativeNtpServer;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AuthoritativeNtpServerVariable;
        /// <summary>
        /// The description of the profile parcel
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        public readonly string FeatureProfileId;
        /// <summary>
        /// The id of the profile parcel
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the profile parcel
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Configure NTP servers
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSystemNtpProfileParcelServerResult> Servers;
        /// <summary>
        /// Enable device as NTP Leader
        /// </summary>
        public readonly string SourceInterface;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SourceInterfaceVariable;
        /// <summary>
        /// Enable device as NTP Leader
        /// </summary>
        public readonly int Stratum;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string StratumVariable;
        /// <summary>
        /// Designate authentication key as trustworthy
        /// </summary>
        public readonly ImmutableArray<int> TrustedKeys;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TrustedKeysVariable;
        /// <summary>
        /// The version of the profile parcel
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetSystemNtpProfileParcelResult(
            ImmutableArray<Outputs.GetSystemNtpProfileParcelAuthenticationKeyResult> authenticationKeys,

            bool authoritativeNtpServer,

            string authoritativeNtpServerVariable,

            string description,

            string featureProfileId,

            string id,

            string name,

            ImmutableArray<Outputs.GetSystemNtpProfileParcelServerResult> servers,

            string sourceInterface,

            string sourceInterfaceVariable,

            int stratum,

            string stratumVariable,

            ImmutableArray<int> trustedKeys,

            string trustedKeysVariable,

            int version)
        {
            AuthenticationKeys = authenticationKeys;
            AuthoritativeNtpServer = authoritativeNtpServer;
            AuthoritativeNtpServerVariable = authoritativeNtpServerVariable;
            Description = description;
            FeatureProfileId = featureProfileId;
            Id = id;
            Name = name;
            Servers = servers;
            SourceInterface = sourceInterface;
            SourceInterfaceVariable = sourceInterfaceVariable;
            Stratum = stratum;
            StratumVariable = stratumVariable;
            TrustedKeys = trustedKeys;
            TrustedKeysVariable = trustedKeysVariable;
            Version = version;
        }
    }
}
