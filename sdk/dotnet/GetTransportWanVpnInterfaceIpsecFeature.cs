// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetTransportWanVpnInterfaceIpsecFeature
    {
        /// <summary>
        /// This data source can read the Transport WAN VPN Interface IPSEC Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetTransportWanVpnInterfaceIpsecFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///         TransportWanVpnFeatureId = "140331f6-5418-4755-a059-13c77eb96037",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTransportWanVpnInterfaceIpsecFeatureResult> InvokeAsync(GetTransportWanVpnInterfaceIpsecFeatureArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTransportWanVpnInterfaceIpsecFeatureResult>("sdwan:index/getTransportWanVpnInterfaceIpsecFeature:getTransportWanVpnInterfaceIpsecFeature", args ?? new GetTransportWanVpnInterfaceIpsecFeatureArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Transport WAN VPN Interface IPSEC Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetTransportWanVpnInterfaceIpsecFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///         TransportWanVpnFeatureId = "140331f6-5418-4755-a059-13c77eb96037",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTransportWanVpnInterfaceIpsecFeatureResult> Invoke(GetTransportWanVpnInterfaceIpsecFeatureInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTransportWanVpnInterfaceIpsecFeatureResult>("sdwan:index/getTransportWanVpnInterfaceIpsecFeature:getTransportWanVpnInterfaceIpsecFeature", args ?? new GetTransportWanVpnInterfaceIpsecFeatureInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTransportWanVpnInterfaceIpsecFeatureArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public string FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Feature
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// Transport WAN VPN Feature ID
        /// </summary>
        [Input("transportWanVpnFeatureId", required: true)]
        public string TransportWanVpnFeatureId { get; set; } = null!;

        public GetTransportWanVpnInterfaceIpsecFeatureArgs()
        {
        }
        public static new GetTransportWanVpnInterfaceIpsecFeatureArgs Empty => new GetTransportWanVpnInterfaceIpsecFeatureArgs();
    }

    public sealed class GetTransportWanVpnInterfaceIpsecFeatureInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Feature
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Transport WAN VPN Feature ID
        /// </summary>
        [Input("transportWanVpnFeatureId", required: true)]
        public Input<string> TransportWanVpnFeatureId { get; set; } = null!;

        public GetTransportWanVpnInterfaceIpsecFeatureInvokeArgs()
        {
        }
        public static new GetTransportWanVpnInterfaceIpsecFeatureInvokeArgs Empty => new GetTransportWanVpnInterfaceIpsecFeatureInvokeArgs();
    }


    [OutputType]
    public sealed class GetTransportWanVpnInterfaceIpsecFeatureResult
    {
        /// <summary>
        /// Enable Application Tunnel Type
        /// </summary>
        public readonly string ApplicationTunnelType;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ApplicationTunnelTypeVariable;
        /// <summary>
        /// Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
        /// </summary>
        public readonly bool ClearDontFragment;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ClearDontFragmentVariable;
        /// <summary>
        /// The description of the Feature
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// IKE keepalive interval (seconds)
        /// </summary>
        public readonly int DpdInterval;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DpdIntervalVariable;
        /// <summary>
        /// IKE keepalive retries
        /// </summary>
        public readonly int DpdRetries;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DpdRetriesVariable;
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        public readonly string FeatureProfileId;
        /// <summary>
        /// The id of the Feature
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// IKE identity the IKE preshared secret belongs to
        /// </summary>
        public readonly string IkeCiphersuite;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IkeCiphersuiteVariable;
        /// <summary>
        /// IKE Diffie Hellman Groups
        /// </summary>
        public readonly string IkeDiffieHellmanGroup;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IkeDiffieHellmanGroupVariable;
        /// <summary>
        /// IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
        /// </summary>
        public readonly string IkeIdLocalEndPoint;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IkeIdLocalEndPointVariable;
        /// <summary>
        /// IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
        /// </summary>
        public readonly string IkeIdRemoteEndPoint;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IkeIdRemoteEndPointVariable;
        /// <summary>
        /// IKE integrity protocol
        /// </summary>
        public readonly string IkeIntegrityProtocol;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IkeIntegrityProtocolVariable;
        /// <summary>
        /// Use preshared key to authenticate IKE peer
        /// </summary>
        public readonly string IkePresharedKey;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IkePresharedKeyVariable;
        /// <summary>
        /// IKE rekey interval \n\n seconds
        /// </summary>
        public readonly int IkeRekeyInterval;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IkeRekeyIntervalVariable;
        /// <summary>
        /// IKE Version \n\n
        /// </summary>
        public readonly int IkeVersion;
        /// <summary>
        /// Interface description
        /// </summary>
        public readonly string InterfaceDescription;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string InterfaceDescriptionVariable;
        /// <summary>
        /// Interface name: IPsec when present
        /// </summary>
        public readonly string InterfaceName;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string InterfaceNameVariable;
        /// <summary>
        /// Interface MTU \n\n, in bytes
        /// </summary>
        public readonly int IpMtu;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IpMtuVariable;
        /// <summary>
        /// IPsec(ESP) encryption and integrity protocol
        /// </summary>
        public readonly string IpsecCiphersuite;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IpsecCiphersuiteVariable;
        /// <summary>
        /// IPsec rekey interval \n\n seconds
        /// </summary>
        public readonly int IpsecRekeyInterval;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IpsecRekeyIntervalVariable;
        /// <summary>
        /// Replay window size 32..8192 (must be a power of 2)
        /// </summary>
        public readonly int IpsecReplayWindow;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IpsecReplayWindowVariable;
        public readonly string Ipv4Address;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4AddressVariable;
        public readonly string Ipv4SubnetMask;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Ipv4SubnetMaskVariable;
        /// <summary>
        /// The name of the Feature
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// IPsec perfect forward secrecy settings
        /// </summary>
        public readonly string PerfectForwardSecrecy;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PerfectForwardSecrecyVariable;
        /// <summary>
        /// Administrative state
        /// </summary>
        public readonly bool Shutdown;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ShutdownVariable;
        /// <summary>
        /// TCP MSS on SYN packets, in bytes
        /// </summary>
        public readonly int TcpMss;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TcpMssVariable;
        /// <summary>
        /// Enable tracker for this interface
        /// </summary>
        public readonly string TrackerId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TrackerIdVariable;
        /// <summary>
        /// Transport WAN VPN Feature ID
        /// </summary>
        public readonly string TransportWanVpnFeatureId;
        public readonly string TunnelDestinationIpv4Address;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelDestinationIpv4AddressVariable;
        public readonly string TunnelDestinationIpv4SubnetMask;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelDestinationIpv4SubnetMaskVariable;
        /// <summary>
        /// \n\n Interface name: ge0/\n\n or ge0/\n\n.vlanid
        /// </summary>
        public readonly string TunnelRouteVia;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelRouteViaVariable;
        /// <summary>
        /// \n\n Interface name: ge0/\n\n or ge0/\n\n.vlanid
        /// </summary>
        public readonly string TunnelSourceInterface;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelSourceInterfaceVariable;
        public readonly string TunnelSourceIpv4Address;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelSourceIpv4AddressVariable;
        public readonly string TunnelSourceIpv4SubnetMask;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TunnelSourceIpv4SubnetMaskVariable;
        /// <summary>
        /// The version of the Feature
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetTransportWanVpnInterfaceIpsecFeatureResult(
            string applicationTunnelType,

            string applicationTunnelTypeVariable,

            bool clearDontFragment,

            string clearDontFragmentVariable,

            string description,

            int dpdInterval,

            string dpdIntervalVariable,

            int dpdRetries,

            string dpdRetriesVariable,

            string featureProfileId,

            string id,

            string ikeCiphersuite,

            string ikeCiphersuiteVariable,

            string ikeDiffieHellmanGroup,

            string ikeDiffieHellmanGroupVariable,

            string ikeIdLocalEndPoint,

            string ikeIdLocalEndPointVariable,

            string ikeIdRemoteEndPoint,

            string ikeIdRemoteEndPointVariable,

            string ikeIntegrityProtocol,

            string ikeIntegrityProtocolVariable,

            string ikePresharedKey,

            string ikePresharedKeyVariable,

            int ikeRekeyInterval,

            string ikeRekeyIntervalVariable,

            int ikeVersion,

            string interfaceDescription,

            string interfaceDescriptionVariable,

            string interfaceName,

            string interfaceNameVariable,

            int ipMtu,

            string ipMtuVariable,

            string ipsecCiphersuite,

            string ipsecCiphersuiteVariable,

            int ipsecRekeyInterval,

            string ipsecRekeyIntervalVariable,

            int ipsecReplayWindow,

            string ipsecReplayWindowVariable,

            string ipv4Address,

            string ipv4AddressVariable,

            string ipv4SubnetMask,

            string ipv4SubnetMaskVariable,

            string name,

            string perfectForwardSecrecy,

            string perfectForwardSecrecyVariable,

            bool shutdown,

            string shutdownVariable,

            int tcpMss,

            string tcpMssVariable,

            string trackerId,

            string trackerIdVariable,

            string transportWanVpnFeatureId,

            string tunnelDestinationIpv4Address,

            string tunnelDestinationIpv4AddressVariable,

            string tunnelDestinationIpv4SubnetMask,

            string tunnelDestinationIpv4SubnetMaskVariable,

            string tunnelRouteVia,

            string tunnelRouteViaVariable,

            string tunnelSourceInterface,

            string tunnelSourceInterfaceVariable,

            string tunnelSourceIpv4Address,

            string tunnelSourceIpv4AddressVariable,

            string tunnelSourceIpv4SubnetMask,

            string tunnelSourceIpv4SubnetMaskVariable,

            int version)
        {
            ApplicationTunnelType = applicationTunnelType;
            ApplicationTunnelTypeVariable = applicationTunnelTypeVariable;
            ClearDontFragment = clearDontFragment;
            ClearDontFragmentVariable = clearDontFragmentVariable;
            Description = description;
            DpdInterval = dpdInterval;
            DpdIntervalVariable = dpdIntervalVariable;
            DpdRetries = dpdRetries;
            DpdRetriesVariable = dpdRetriesVariable;
            FeatureProfileId = featureProfileId;
            Id = id;
            IkeCiphersuite = ikeCiphersuite;
            IkeCiphersuiteVariable = ikeCiphersuiteVariable;
            IkeDiffieHellmanGroup = ikeDiffieHellmanGroup;
            IkeDiffieHellmanGroupVariable = ikeDiffieHellmanGroupVariable;
            IkeIdLocalEndPoint = ikeIdLocalEndPoint;
            IkeIdLocalEndPointVariable = ikeIdLocalEndPointVariable;
            IkeIdRemoteEndPoint = ikeIdRemoteEndPoint;
            IkeIdRemoteEndPointVariable = ikeIdRemoteEndPointVariable;
            IkeIntegrityProtocol = ikeIntegrityProtocol;
            IkeIntegrityProtocolVariable = ikeIntegrityProtocolVariable;
            IkePresharedKey = ikePresharedKey;
            IkePresharedKeyVariable = ikePresharedKeyVariable;
            IkeRekeyInterval = ikeRekeyInterval;
            IkeRekeyIntervalVariable = ikeRekeyIntervalVariable;
            IkeVersion = ikeVersion;
            InterfaceDescription = interfaceDescription;
            InterfaceDescriptionVariable = interfaceDescriptionVariable;
            InterfaceName = interfaceName;
            InterfaceNameVariable = interfaceNameVariable;
            IpMtu = ipMtu;
            IpMtuVariable = ipMtuVariable;
            IpsecCiphersuite = ipsecCiphersuite;
            IpsecCiphersuiteVariable = ipsecCiphersuiteVariable;
            IpsecRekeyInterval = ipsecRekeyInterval;
            IpsecRekeyIntervalVariable = ipsecRekeyIntervalVariable;
            IpsecReplayWindow = ipsecReplayWindow;
            IpsecReplayWindowVariable = ipsecReplayWindowVariable;
            Ipv4Address = ipv4Address;
            Ipv4AddressVariable = ipv4AddressVariable;
            Ipv4SubnetMask = ipv4SubnetMask;
            Ipv4SubnetMaskVariable = ipv4SubnetMaskVariable;
            Name = name;
            PerfectForwardSecrecy = perfectForwardSecrecy;
            PerfectForwardSecrecyVariable = perfectForwardSecrecyVariable;
            Shutdown = shutdown;
            ShutdownVariable = shutdownVariable;
            TcpMss = tcpMss;
            TcpMssVariable = tcpMssVariable;
            TrackerId = trackerId;
            TrackerIdVariable = trackerIdVariable;
            TransportWanVpnFeatureId = transportWanVpnFeatureId;
            TunnelDestinationIpv4Address = tunnelDestinationIpv4Address;
            TunnelDestinationIpv4AddressVariable = tunnelDestinationIpv4AddressVariable;
            TunnelDestinationIpv4SubnetMask = tunnelDestinationIpv4SubnetMask;
            TunnelDestinationIpv4SubnetMaskVariable = tunnelDestinationIpv4SubnetMaskVariable;
            TunnelRouteVia = tunnelRouteVia;
            TunnelRouteViaVariable = tunnelRouteViaVariable;
            TunnelSourceInterface = tunnelSourceInterface;
            TunnelSourceInterfaceVariable = tunnelSourceInterfaceVariable;
            TunnelSourceIpv4Address = tunnelSourceIpv4Address;
            TunnelSourceIpv4AddressVariable = tunnelSourceIpv4AddressVariable;
            TunnelSourceIpv4SubnetMask = tunnelSourceIpv4SubnetMask;
            TunnelSourceIpv4SubnetMaskVariable = tunnelSourceIpv4SubnetMaskVariable;
            Version = version;
        }
    }
}
