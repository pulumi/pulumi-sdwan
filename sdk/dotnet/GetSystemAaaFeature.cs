// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetSystemAaaFeature
    {
        /// <summary>
        /// This data source can read the System AAA Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetSystemAaaFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSystemAaaFeatureResult> InvokeAsync(GetSystemAaaFeatureArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSystemAaaFeatureResult>("sdwan:index/getSystemAaaFeature:getSystemAaaFeature", args ?? new GetSystemAaaFeatureArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the System AAA Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetSystemAaaFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSystemAaaFeatureResult> Invoke(GetSystemAaaFeatureInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSystemAaaFeatureResult>("sdwan:index/getSystemAaaFeature:getSystemAaaFeature", args ?? new GetSystemAaaFeatureInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the System AAA Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetSystemAaaFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSystemAaaFeatureResult> Invoke(GetSystemAaaFeatureInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSystemAaaFeatureResult>("sdwan:index/getSystemAaaFeature:getSystemAaaFeature", args ?? new GetSystemAaaFeatureInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSystemAaaFeatureArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public string FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Feature
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetSystemAaaFeatureArgs()
        {
        }
        public static new GetSystemAaaFeatureArgs Empty => new GetSystemAaaFeatureArgs();
    }

    public sealed class GetSystemAaaFeatureInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Feature
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetSystemAaaFeatureInvokeArgs()
        {
        }
        public static new GetSystemAaaFeatureInvokeArgs Empty => new GetSystemAaaFeatureInvokeArgs();
    }


    [OutputType]
    public sealed class GetSystemAaaFeatureResult
    {
        /// <summary>
        /// Accounting configurations parameters
        /// </summary>
        public readonly bool AccountingGroup;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AccountingGroupVariable;
        /// <summary>
        /// Configure the accounting rules
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSystemAaaFeatureAccountingRuleResult> AccountingRules;
        /// <summary>
        /// Authentication configurations parameters
        /// </summary>
        public readonly bool AuthenticationGroup;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AuthenticationGroupVariable;
        /// <summary>
        /// For configuration mode commands.
        /// </summary>
        public readonly bool AuthorizationConfigCommands;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AuthorizationConfigCommandsVariable;
        /// <summary>
        /// For enabling console authorization
        /// </summary>
        public readonly bool AuthorizationConsole;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AuthorizationConsoleVariable;
        /// <summary>
        /// Configure the Authorization Rules
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSystemAaaFeatureAuthorizationRuleResult> AuthorizationRules;
        /// <summary>
        /// The description of the Feature
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        public readonly string FeatureProfileId;
        /// <summary>
        /// The id of the Feature
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Feature
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Configure the Radius serverGroup
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSystemAaaFeatureRadiusGroupResult> RadiusGroups;
        /// <summary>
        /// ServerGroups priority order
        /// </summary>
        public readonly ImmutableArray<string> ServerAuthOrders;
        /// <summary>
        /// Configure the TACACS serverGroup
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSystemAaaFeatureTacacsGroupResult> TacacsGroups;
        /// <summary>
        /// Create local login account
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSystemAaaFeatureUserResult> Users;
        /// <summary>
        /// The version of the Feature
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetSystemAaaFeatureResult(
            bool accountingGroup,

            string accountingGroupVariable,

            ImmutableArray<Outputs.GetSystemAaaFeatureAccountingRuleResult> accountingRules,

            bool authenticationGroup,

            string authenticationGroupVariable,

            bool authorizationConfigCommands,

            string authorizationConfigCommandsVariable,

            bool authorizationConsole,

            string authorizationConsoleVariable,

            ImmutableArray<Outputs.GetSystemAaaFeatureAuthorizationRuleResult> authorizationRules,

            string description,

            string featureProfileId,

            string id,

            string name,

            ImmutableArray<Outputs.GetSystemAaaFeatureRadiusGroupResult> radiusGroups,

            ImmutableArray<string> serverAuthOrders,

            ImmutableArray<Outputs.GetSystemAaaFeatureTacacsGroupResult> tacacsGroups,

            ImmutableArray<Outputs.GetSystemAaaFeatureUserResult> users,

            int version)
        {
            AccountingGroup = accountingGroup;
            AccountingGroupVariable = accountingGroupVariable;
            AccountingRules = accountingRules;
            AuthenticationGroup = authenticationGroup;
            AuthenticationGroupVariable = authenticationGroupVariable;
            AuthorizationConfigCommands = authorizationConfigCommands;
            AuthorizationConfigCommandsVariable = authorizationConfigCommandsVariable;
            AuthorizationConsole = authorizationConsole;
            AuthorizationConsoleVariable = authorizationConsoleVariable;
            AuthorizationRules = authorizationRules;
            Description = description;
            FeatureProfileId = featureProfileId;
            Id = id;
            Name = name;
            RadiusGroups = radiusGroups;
            ServerAuthOrders = serverAuthOrders;
            TacacsGroups = tacacsGroups;
            Users = users;
            Version = version;
        }
    }
}
