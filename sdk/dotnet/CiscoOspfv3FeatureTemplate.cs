// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a Cisco OSPFv3 feature template.
    ///   - Minimum SD-WAN Manager version: `15.0.0`
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/ciscoOspfv3FeatureTemplate:CiscoOspfv3FeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/ciscoOspfv3FeatureTemplate:CiscoOspfv3FeatureTemplate")]
    public partial class CiscoOspfv3FeatureTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
        /// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
        /// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        [Output("deviceTypes")]
        public Output<ImmutableArray<string>> DeviceTypes { get; private set; } = null!;

        /// <summary>
        /// Configure OSPF area
        /// </summary>
        [Output("ipv4Areas")]
        public Output<ImmutableArray<Outputs.CiscoOspfv3FeatureTemplateIpv4Area>> Ipv4Areas { get; private set; } = null!;

        /// <summary>
        /// Set reference bandwidth method to assign OSPF cost - Range: `1`-`4294967` - Default value: `100`
        /// </summary>
        [Output("ipv4AutoCostReferenceBandwidth")]
        public Output<int?> Ipv4AutoCostReferenceBandwidth { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv4AutoCostReferenceBandwidthVariable")]
        public Output<string?> Ipv4AutoCostReferenceBandwidthVariable { get; private set; } = null!;

        /// <summary>
        /// Calculate summary route cost based on RFC 1583 - Default value: `true`
        /// </summary>
        [Output("ipv4CompatibleRfc1583")]
        public Output<bool?> Ipv4CompatibleRfc1583 { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv4CompatibleRfc1583Variable")]
        public Output<string?> Ipv4CompatibleRfc1583Variable { get; private set; } = null!;

        /// <summary>
        /// Distribute default external route into OSPF - Default value: `false`
        /// </summary>
        [Output("ipv4DefaultInformationOriginate")]
        public Output<bool?> Ipv4DefaultInformationOriginate { get; private set; } = null!;

        /// <summary>
        /// Always advertise default route - Default value: `false`
        /// </summary>
        [Output("ipv4DefaultInformationOriginateAlways")]
        public Output<bool?> Ipv4DefaultInformationOriginateAlways { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv4DefaultInformationOriginateAlwaysVariable")]
        public Output<string?> Ipv4DefaultInformationOriginateAlwaysVariable { get; private set; } = null!;

        /// <summary>
        /// Set metric used to generate default route &lt;0..16777214&gt; - Range: `0`-`16777214`
        /// </summary>
        [Output("ipv4DefaultInformationOriginateMetric")]
        public Output<int?> Ipv4DefaultInformationOriginateMetric { get; private set; } = null!;

        /// <summary>
        /// Set default route type - Choices: `type1`, `type2`
        /// </summary>
        [Output("ipv4DefaultInformationOriginateMetricType")]
        public Output<string?> Ipv4DefaultInformationOriginateMetricType { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv4DefaultInformationOriginateMetricTypeVariable")]
        public Output<string?> Ipv4DefaultInformationOriginateMetricTypeVariable { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv4DefaultInformationOriginateMetricVariable")]
        public Output<string?> Ipv4DefaultInformationOriginateMetricVariable { get; private set; } = null!;

        /// <summary>
        /// Distance - Range: `1`-`255` - Default value: `110`
        /// </summary>
        [Output("ipv4Distance")]
        public Output<int?> Ipv4Distance { get; private set; } = null!;

        /// <summary>
        /// Set distance for external routes - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Output("ipv4DistanceExternal")]
        public Output<int?> Ipv4DistanceExternal { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv4DistanceExternalVariable")]
        public Output<string?> Ipv4DistanceExternalVariable { get; private set; } = null!;

        /// <summary>
        /// Set distance for inter-area routes - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Output("ipv4DistanceInterArea")]
        public Output<int?> Ipv4DistanceInterArea { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv4DistanceInterAreaVariable")]
        public Output<string?> Ipv4DistanceInterAreaVariable { get; private set; } = null!;

        /// <summary>
        /// Set distance for intra-area routes - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Output("ipv4DistanceIntraArea")]
        public Output<int?> Ipv4DistanceIntraArea { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv4DistanceIntraAreaVariable")]
        public Output<string?> Ipv4DistanceIntraAreaVariable { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv4DistanceVariable")]
        public Output<string?> Ipv4DistanceVariable { get; private set; } = null!;

        /// <summary>
        /// Filter - Default value: `false`
        /// </summary>
        [Output("ipv4Filter")]
        public Output<bool?> Ipv4Filter { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv4FilterVariable")]
        public Output<string?> Ipv4FilterVariable { get; private set; } = null!;

        /// <summary>
        /// Advertise own router LSA with infinite distance
        /// </summary>
        [Output("ipv4MaxMetricRouterLsas")]
        public Output<ImmutableArray<Outputs.CiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsa>> Ipv4MaxMetricRouterLsas { get; private set; } = null!;

        /// <summary>
        /// Policy Name
        /// </summary>
        [Output("ipv4PolicyName")]
        public Output<string?> Ipv4PolicyName { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv4PolicyNameVariable")]
        public Output<string?> Ipv4PolicyNameVariable { get; private set; } = null!;

        /// <summary>
        /// Redistribute routes
        /// </summary>
        [Output("ipv4Redistributes")]
        public Output<ImmutableArray<Outputs.CiscoOspfv3FeatureTemplateIpv4Redistribute>> Ipv4Redistributes { get; private set; } = null!;

        /// <summary>
        /// Set OSPF router ID to override system IP address
        /// </summary>
        [Output("ipv4RouterId")]
        public Output<string?> Ipv4RouterId { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv4RouterIdVariable")]
        public Output<string?> Ipv4RouterIdVariable { get; private set; } = null!;

        /// <summary>
        /// Set delay from first change received until performing SPF calculation - Range: `1`-`600000` - Default value: `200`
        /// </summary>
        [Output("ipv4TimersSpfDelay")]
        public Output<int?> Ipv4TimersSpfDelay { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv4TimersSpfDelayVariable")]
        public Output<string?> Ipv4TimersSpfDelayVariable { get; private set; } = null!;

        /// <summary>
        /// Set initial hold time between consecutive SPF calculations - Range: `1`-`600000` - Default value: `1000`
        /// </summary>
        [Output("ipv4TimersSpfInitialHold")]
        public Output<int?> Ipv4TimersSpfInitialHold { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv4TimersSpfInitialHoldVariable")]
        public Output<string?> Ipv4TimersSpfInitialHoldVariable { get; private set; } = null!;

        /// <summary>
        /// Set maximum hold time between consecutive SPF calculations - Range: `1`-`600000` - Default value: `10000`
        /// </summary>
        [Output("ipv4TimersSpfMaxHold")]
        public Output<int?> Ipv4TimersSpfMaxHold { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv4TimersSpfMaxHoldVariable")]
        public Output<string?> Ipv4TimersSpfMaxHoldVariable { get; private set; } = null!;

        /// <summary>
        /// Configure OSPF area
        /// </summary>
        [Output("ipv6Areas")]
        public Output<ImmutableArray<Outputs.CiscoOspfv3FeatureTemplateIpv6Area>> Ipv6Areas { get; private set; } = null!;

        /// <summary>
        /// Set reference bandwidth method to assign OSPF cost - Range: `1`-`4294967` - Default value: `100`
        /// </summary>
        [Output("ipv6AutoCostReferenceBandwidth")]
        public Output<int?> Ipv6AutoCostReferenceBandwidth { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv6AutoCostReferenceBandwidthVariable")]
        public Output<string?> Ipv6AutoCostReferenceBandwidthVariable { get; private set; } = null!;

        /// <summary>
        /// Calculate summary route cost based on RFC 1583 - Default value: `true`
        /// </summary>
        [Output("ipv6CompatibleRfc1583")]
        public Output<bool?> Ipv6CompatibleRfc1583 { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv6CompatibleRfc1583Variable")]
        public Output<string?> Ipv6CompatibleRfc1583Variable { get; private set; } = null!;

        /// <summary>
        /// Distribute default external route into OSPF - Default value: `false`
        /// </summary>
        [Output("ipv6DefaultInformationOriginate")]
        public Output<bool?> Ipv6DefaultInformationOriginate { get; private set; } = null!;

        /// <summary>
        /// Always advertise default route - Default value: `false`
        /// </summary>
        [Output("ipv6DefaultInformationOriginateAlways")]
        public Output<bool?> Ipv6DefaultInformationOriginateAlways { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv6DefaultInformationOriginateAlwaysVariable")]
        public Output<string?> Ipv6DefaultInformationOriginateAlwaysVariable { get; private set; } = null!;

        /// <summary>
        /// Set metric used to generate default route &lt;0..16777214&gt; - Range: `0`-`16777214`
        /// </summary>
        [Output("ipv6DefaultInformationOriginateMetric")]
        public Output<int?> Ipv6DefaultInformationOriginateMetric { get; private set; } = null!;

        /// <summary>
        /// Set default route type - Choices: `type1`, `type2`
        /// </summary>
        [Output("ipv6DefaultInformationOriginateMetricType")]
        public Output<string?> Ipv6DefaultInformationOriginateMetricType { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv6DefaultInformationOriginateMetricTypeVariable")]
        public Output<string?> Ipv6DefaultInformationOriginateMetricTypeVariable { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv6DefaultInformationOriginateMetricVariable")]
        public Output<string?> Ipv6DefaultInformationOriginateMetricVariable { get; private set; } = null!;

        /// <summary>
        /// Distance - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Output("ipv6Distance")]
        public Output<int?> Ipv6Distance { get; private set; } = null!;

        /// <summary>
        /// Set distance for external routes - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Output("ipv6DistanceExternal")]
        public Output<int?> Ipv6DistanceExternal { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv6DistanceExternalVariable")]
        public Output<string?> Ipv6DistanceExternalVariable { get; private set; } = null!;

        /// <summary>
        /// Set distance for inter-area routes - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Output("ipv6DistanceInterArea")]
        public Output<int?> Ipv6DistanceInterArea { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv6DistanceInterAreaVariable")]
        public Output<string?> Ipv6DistanceInterAreaVariable { get; private set; } = null!;

        /// <summary>
        /// Set distance for intra-area routes - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Output("ipv6DistanceIntraArea")]
        public Output<int?> Ipv6DistanceIntraArea { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv6DistanceIntraAreaVariable")]
        public Output<string?> Ipv6DistanceIntraAreaVariable { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv6DistanceVariable")]
        public Output<string?> Ipv6DistanceVariable { get; private set; } = null!;

        /// <summary>
        /// Filter - Default value: `false`
        /// </summary>
        [Output("ipv6Filter")]
        public Output<bool?> Ipv6Filter { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv6FilterVariable")]
        public Output<string?> Ipv6FilterVariable { get; private set; } = null!;

        /// <summary>
        /// Advertise own router LSA with infinite distance
        /// </summary>
        [Output("ipv6MaxMetricRouterLsas")]
        public Output<ImmutableArray<Outputs.CiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsa>> Ipv6MaxMetricRouterLsas { get; private set; } = null!;

        /// <summary>
        /// Name
        /// </summary>
        [Output("ipv6PolicyName")]
        public Output<string?> Ipv6PolicyName { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv6PolicyNameVariable")]
        public Output<string?> Ipv6PolicyNameVariable { get; private set; } = null!;

        /// <summary>
        /// Redistribute routes
        /// </summary>
        [Output("ipv6Redistributes")]
        public Output<ImmutableArray<Outputs.CiscoOspfv3FeatureTemplateIpv6Redistribute>> Ipv6Redistributes { get; private set; } = null!;

        /// <summary>
        /// Set OSPF router ID to override system IP address
        /// </summary>
        [Output("ipv6RouterId")]
        public Output<string?> Ipv6RouterId { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv6RouterIdVariable")]
        public Output<string?> Ipv6RouterIdVariable { get; private set; } = null!;

        /// <summary>
        /// Set delay from first change received until performing SPF calculation - Range: `0`-`600000` - Default value: `200`
        /// </summary>
        [Output("ipv6TimersSpfDelay")]
        public Output<int?> Ipv6TimersSpfDelay { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv6TimersSpfDelayVariable")]
        public Output<string?> Ipv6TimersSpfDelayVariable { get; private set; } = null!;

        /// <summary>
        /// Set initial hold time between consecutive SPF calculations - Range: `0`-`600000` - Default value: `1000`
        /// </summary>
        [Output("ipv6TimersSpfInitialHold")]
        public Output<int?> Ipv6TimersSpfInitialHold { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv6TimersSpfInitialHoldVariable")]
        public Output<string?> Ipv6TimersSpfInitialHoldVariable { get; private set; } = null!;

        /// <summary>
        /// Set maximum hold time between consecutive SPF calculations - Range: `0`-`600000` - Default value: `10000`
        /// </summary>
        [Output("ipv6TimersSpfMaxHold")]
        public Output<int?> Ipv6TimersSpfMaxHold { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipv6TimersSpfMaxHoldVariable")]
        public Output<string?> Ipv6TimersSpfMaxHoldVariable { get; private set; } = null!;

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The template type
        /// </summary>
        [Output("templateType")]
        public Output<string> TemplateType { get; private set; } = null!;

        /// <summary>
        /// The version of the feature template
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a CiscoOspfv3FeatureTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CiscoOspfv3FeatureTemplate(string name, CiscoOspfv3FeatureTemplateArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/ciscoOspfv3FeatureTemplate:CiscoOspfv3FeatureTemplate", name, args ?? new CiscoOspfv3FeatureTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CiscoOspfv3FeatureTemplate(string name, Input<string> id, CiscoOspfv3FeatureTemplateState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/ciscoOspfv3FeatureTemplate:CiscoOspfv3FeatureTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CiscoOspfv3FeatureTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CiscoOspfv3FeatureTemplate Get(string name, Input<string> id, CiscoOspfv3FeatureTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new CiscoOspfv3FeatureTemplate(name, id, state, options);
        }
    }

    public sealed class CiscoOspfv3FeatureTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("deviceTypes", required: true)]
        private InputList<string>? _deviceTypes;

        /// <summary>
        /// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
        /// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
        /// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        public InputList<string> DeviceTypes
        {
            get => _deviceTypes ?? (_deviceTypes = new InputList<string>());
            set => _deviceTypes = value;
        }

        [Input("ipv4Areas")]
        private InputList<Inputs.CiscoOspfv3FeatureTemplateIpv4AreaArgs>? _ipv4Areas;

        /// <summary>
        /// Configure OSPF area
        /// </summary>
        public InputList<Inputs.CiscoOspfv3FeatureTemplateIpv4AreaArgs> Ipv4Areas
        {
            get => _ipv4Areas ?? (_ipv4Areas = new InputList<Inputs.CiscoOspfv3FeatureTemplateIpv4AreaArgs>());
            set => _ipv4Areas = value;
        }

        /// <summary>
        /// Set reference bandwidth method to assign OSPF cost - Range: `1`-`4294967` - Default value: `100`
        /// </summary>
        [Input("ipv4AutoCostReferenceBandwidth")]
        public Input<int>? Ipv4AutoCostReferenceBandwidth { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4AutoCostReferenceBandwidthVariable")]
        public Input<string>? Ipv4AutoCostReferenceBandwidthVariable { get; set; }

        /// <summary>
        /// Calculate summary route cost based on RFC 1583 - Default value: `true`
        /// </summary>
        [Input("ipv4CompatibleRfc1583")]
        public Input<bool>? Ipv4CompatibleRfc1583 { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4CompatibleRfc1583Variable")]
        public Input<string>? Ipv4CompatibleRfc1583Variable { get; set; }

        /// <summary>
        /// Distribute default external route into OSPF - Default value: `false`
        /// </summary>
        [Input("ipv4DefaultInformationOriginate")]
        public Input<bool>? Ipv4DefaultInformationOriginate { get; set; }

        /// <summary>
        /// Always advertise default route - Default value: `false`
        /// </summary>
        [Input("ipv4DefaultInformationOriginateAlways")]
        public Input<bool>? Ipv4DefaultInformationOriginateAlways { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4DefaultInformationOriginateAlwaysVariable")]
        public Input<string>? Ipv4DefaultInformationOriginateAlwaysVariable { get; set; }

        /// <summary>
        /// Set metric used to generate default route &lt;0..16777214&gt; - Range: `0`-`16777214`
        /// </summary>
        [Input("ipv4DefaultInformationOriginateMetric")]
        public Input<int>? Ipv4DefaultInformationOriginateMetric { get; set; }

        /// <summary>
        /// Set default route type - Choices: `type1`, `type2`
        /// </summary>
        [Input("ipv4DefaultInformationOriginateMetricType")]
        public Input<string>? Ipv4DefaultInformationOriginateMetricType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4DefaultInformationOriginateMetricTypeVariable")]
        public Input<string>? Ipv4DefaultInformationOriginateMetricTypeVariable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4DefaultInformationOriginateMetricVariable")]
        public Input<string>? Ipv4DefaultInformationOriginateMetricVariable { get; set; }

        /// <summary>
        /// Distance - Range: `1`-`255` - Default value: `110`
        /// </summary>
        [Input("ipv4Distance")]
        public Input<int>? Ipv4Distance { get; set; }

        /// <summary>
        /// Set distance for external routes - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Input("ipv4DistanceExternal")]
        public Input<int>? Ipv4DistanceExternal { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4DistanceExternalVariable")]
        public Input<string>? Ipv4DistanceExternalVariable { get; set; }

        /// <summary>
        /// Set distance for inter-area routes - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Input("ipv4DistanceInterArea")]
        public Input<int>? Ipv4DistanceInterArea { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4DistanceInterAreaVariable")]
        public Input<string>? Ipv4DistanceInterAreaVariable { get; set; }

        /// <summary>
        /// Set distance for intra-area routes - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Input("ipv4DistanceIntraArea")]
        public Input<int>? Ipv4DistanceIntraArea { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4DistanceIntraAreaVariable")]
        public Input<string>? Ipv4DistanceIntraAreaVariable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4DistanceVariable")]
        public Input<string>? Ipv4DistanceVariable { get; set; }

        /// <summary>
        /// Filter - Default value: `false`
        /// </summary>
        [Input("ipv4Filter")]
        public Input<bool>? Ipv4Filter { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4FilterVariable")]
        public Input<string>? Ipv4FilterVariable { get; set; }

        [Input("ipv4MaxMetricRouterLsas")]
        private InputList<Inputs.CiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsaArgs>? _ipv4MaxMetricRouterLsas;

        /// <summary>
        /// Advertise own router LSA with infinite distance
        /// </summary>
        public InputList<Inputs.CiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsaArgs> Ipv4MaxMetricRouterLsas
        {
            get => _ipv4MaxMetricRouterLsas ?? (_ipv4MaxMetricRouterLsas = new InputList<Inputs.CiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsaArgs>());
            set => _ipv4MaxMetricRouterLsas = value;
        }

        /// <summary>
        /// Policy Name
        /// </summary>
        [Input("ipv4PolicyName")]
        public Input<string>? Ipv4PolicyName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4PolicyNameVariable")]
        public Input<string>? Ipv4PolicyNameVariable { get; set; }

        [Input("ipv4Redistributes")]
        private InputList<Inputs.CiscoOspfv3FeatureTemplateIpv4RedistributeArgs>? _ipv4Redistributes;

        /// <summary>
        /// Redistribute routes
        /// </summary>
        public InputList<Inputs.CiscoOspfv3FeatureTemplateIpv4RedistributeArgs> Ipv4Redistributes
        {
            get => _ipv4Redistributes ?? (_ipv4Redistributes = new InputList<Inputs.CiscoOspfv3FeatureTemplateIpv4RedistributeArgs>());
            set => _ipv4Redistributes = value;
        }

        /// <summary>
        /// Set OSPF router ID to override system IP address
        /// </summary>
        [Input("ipv4RouterId")]
        public Input<string>? Ipv4RouterId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4RouterIdVariable")]
        public Input<string>? Ipv4RouterIdVariable { get; set; }

        /// <summary>
        /// Set delay from first change received until performing SPF calculation - Range: `1`-`600000` - Default value: `200`
        /// </summary>
        [Input("ipv4TimersSpfDelay")]
        public Input<int>? Ipv4TimersSpfDelay { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4TimersSpfDelayVariable")]
        public Input<string>? Ipv4TimersSpfDelayVariable { get; set; }

        /// <summary>
        /// Set initial hold time between consecutive SPF calculations - Range: `1`-`600000` - Default value: `1000`
        /// </summary>
        [Input("ipv4TimersSpfInitialHold")]
        public Input<int>? Ipv4TimersSpfInitialHold { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4TimersSpfInitialHoldVariable")]
        public Input<string>? Ipv4TimersSpfInitialHoldVariable { get; set; }

        /// <summary>
        /// Set maximum hold time between consecutive SPF calculations - Range: `1`-`600000` - Default value: `10000`
        /// </summary>
        [Input("ipv4TimersSpfMaxHold")]
        public Input<int>? Ipv4TimersSpfMaxHold { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4TimersSpfMaxHoldVariable")]
        public Input<string>? Ipv4TimersSpfMaxHoldVariable { get; set; }

        [Input("ipv6Areas")]
        private InputList<Inputs.CiscoOspfv3FeatureTemplateIpv6AreaArgs>? _ipv6Areas;

        /// <summary>
        /// Configure OSPF area
        /// </summary>
        public InputList<Inputs.CiscoOspfv3FeatureTemplateIpv6AreaArgs> Ipv6Areas
        {
            get => _ipv6Areas ?? (_ipv6Areas = new InputList<Inputs.CiscoOspfv3FeatureTemplateIpv6AreaArgs>());
            set => _ipv6Areas = value;
        }

        /// <summary>
        /// Set reference bandwidth method to assign OSPF cost - Range: `1`-`4294967` - Default value: `100`
        /// </summary>
        [Input("ipv6AutoCostReferenceBandwidth")]
        public Input<int>? Ipv6AutoCostReferenceBandwidth { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6AutoCostReferenceBandwidthVariable")]
        public Input<string>? Ipv6AutoCostReferenceBandwidthVariable { get; set; }

        /// <summary>
        /// Calculate summary route cost based on RFC 1583 - Default value: `true`
        /// </summary>
        [Input("ipv6CompatibleRfc1583")]
        public Input<bool>? Ipv6CompatibleRfc1583 { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6CompatibleRfc1583Variable")]
        public Input<string>? Ipv6CompatibleRfc1583Variable { get; set; }

        /// <summary>
        /// Distribute default external route into OSPF - Default value: `false`
        /// </summary>
        [Input("ipv6DefaultInformationOriginate")]
        public Input<bool>? Ipv6DefaultInformationOriginate { get; set; }

        /// <summary>
        /// Always advertise default route - Default value: `false`
        /// </summary>
        [Input("ipv6DefaultInformationOriginateAlways")]
        public Input<bool>? Ipv6DefaultInformationOriginateAlways { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6DefaultInformationOriginateAlwaysVariable")]
        public Input<string>? Ipv6DefaultInformationOriginateAlwaysVariable { get; set; }

        /// <summary>
        /// Set metric used to generate default route &lt;0..16777214&gt; - Range: `0`-`16777214`
        /// </summary>
        [Input("ipv6DefaultInformationOriginateMetric")]
        public Input<int>? Ipv6DefaultInformationOriginateMetric { get; set; }

        /// <summary>
        /// Set default route type - Choices: `type1`, `type2`
        /// </summary>
        [Input("ipv6DefaultInformationOriginateMetricType")]
        public Input<string>? Ipv6DefaultInformationOriginateMetricType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6DefaultInformationOriginateMetricTypeVariable")]
        public Input<string>? Ipv6DefaultInformationOriginateMetricTypeVariable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6DefaultInformationOriginateMetricVariable")]
        public Input<string>? Ipv6DefaultInformationOriginateMetricVariable { get; set; }

        /// <summary>
        /// Distance - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Input("ipv6Distance")]
        public Input<int>? Ipv6Distance { get; set; }

        /// <summary>
        /// Set distance for external routes - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Input("ipv6DistanceExternal")]
        public Input<int>? Ipv6DistanceExternal { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6DistanceExternalVariable")]
        public Input<string>? Ipv6DistanceExternalVariable { get; set; }

        /// <summary>
        /// Set distance for inter-area routes - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Input("ipv6DistanceInterArea")]
        public Input<int>? Ipv6DistanceInterArea { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6DistanceInterAreaVariable")]
        public Input<string>? Ipv6DistanceInterAreaVariable { get; set; }

        /// <summary>
        /// Set distance for intra-area routes - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Input("ipv6DistanceIntraArea")]
        public Input<int>? Ipv6DistanceIntraArea { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6DistanceIntraAreaVariable")]
        public Input<string>? Ipv6DistanceIntraAreaVariable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6DistanceVariable")]
        public Input<string>? Ipv6DistanceVariable { get; set; }

        /// <summary>
        /// Filter - Default value: `false`
        /// </summary>
        [Input("ipv6Filter")]
        public Input<bool>? Ipv6Filter { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6FilterVariable")]
        public Input<string>? Ipv6FilterVariable { get; set; }

        [Input("ipv6MaxMetricRouterLsas")]
        private InputList<Inputs.CiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsaArgs>? _ipv6MaxMetricRouterLsas;

        /// <summary>
        /// Advertise own router LSA with infinite distance
        /// </summary>
        public InputList<Inputs.CiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsaArgs> Ipv6MaxMetricRouterLsas
        {
            get => _ipv6MaxMetricRouterLsas ?? (_ipv6MaxMetricRouterLsas = new InputList<Inputs.CiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsaArgs>());
            set => _ipv6MaxMetricRouterLsas = value;
        }

        /// <summary>
        /// Name
        /// </summary>
        [Input("ipv6PolicyName")]
        public Input<string>? Ipv6PolicyName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6PolicyNameVariable")]
        public Input<string>? Ipv6PolicyNameVariable { get; set; }

        [Input("ipv6Redistributes")]
        private InputList<Inputs.CiscoOspfv3FeatureTemplateIpv6RedistributeArgs>? _ipv6Redistributes;

        /// <summary>
        /// Redistribute routes
        /// </summary>
        public InputList<Inputs.CiscoOspfv3FeatureTemplateIpv6RedistributeArgs> Ipv6Redistributes
        {
            get => _ipv6Redistributes ?? (_ipv6Redistributes = new InputList<Inputs.CiscoOspfv3FeatureTemplateIpv6RedistributeArgs>());
            set => _ipv6Redistributes = value;
        }

        /// <summary>
        /// Set OSPF router ID to override system IP address
        /// </summary>
        [Input("ipv6RouterId")]
        public Input<string>? Ipv6RouterId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6RouterIdVariable")]
        public Input<string>? Ipv6RouterIdVariable { get; set; }

        /// <summary>
        /// Set delay from first change received until performing SPF calculation - Range: `0`-`600000` - Default value: `200`
        /// </summary>
        [Input("ipv6TimersSpfDelay")]
        public Input<int>? Ipv6TimersSpfDelay { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6TimersSpfDelayVariable")]
        public Input<string>? Ipv6TimersSpfDelayVariable { get; set; }

        /// <summary>
        /// Set initial hold time between consecutive SPF calculations - Range: `0`-`600000` - Default value: `1000`
        /// </summary>
        [Input("ipv6TimersSpfInitialHold")]
        public Input<int>? Ipv6TimersSpfInitialHold { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6TimersSpfInitialHoldVariable")]
        public Input<string>? Ipv6TimersSpfInitialHoldVariable { get; set; }

        /// <summary>
        /// Set maximum hold time between consecutive SPF calculations - Range: `0`-`600000` - Default value: `10000`
        /// </summary>
        [Input("ipv6TimersSpfMaxHold")]
        public Input<int>? Ipv6TimersSpfMaxHold { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6TimersSpfMaxHoldVariable")]
        public Input<string>? Ipv6TimersSpfMaxHoldVariable { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public CiscoOspfv3FeatureTemplateArgs()
        {
        }
        public static new CiscoOspfv3FeatureTemplateArgs Empty => new CiscoOspfv3FeatureTemplateArgs();
    }

    public sealed class CiscoOspfv3FeatureTemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("deviceTypes")]
        private InputList<string>? _deviceTypes;

        /// <summary>
        /// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
        /// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
        /// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        public InputList<string> DeviceTypes
        {
            get => _deviceTypes ?? (_deviceTypes = new InputList<string>());
            set => _deviceTypes = value;
        }

        [Input("ipv4Areas")]
        private InputList<Inputs.CiscoOspfv3FeatureTemplateIpv4AreaGetArgs>? _ipv4Areas;

        /// <summary>
        /// Configure OSPF area
        /// </summary>
        public InputList<Inputs.CiscoOspfv3FeatureTemplateIpv4AreaGetArgs> Ipv4Areas
        {
            get => _ipv4Areas ?? (_ipv4Areas = new InputList<Inputs.CiscoOspfv3FeatureTemplateIpv4AreaGetArgs>());
            set => _ipv4Areas = value;
        }

        /// <summary>
        /// Set reference bandwidth method to assign OSPF cost - Range: `1`-`4294967` - Default value: `100`
        /// </summary>
        [Input("ipv4AutoCostReferenceBandwidth")]
        public Input<int>? Ipv4AutoCostReferenceBandwidth { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4AutoCostReferenceBandwidthVariable")]
        public Input<string>? Ipv4AutoCostReferenceBandwidthVariable { get; set; }

        /// <summary>
        /// Calculate summary route cost based on RFC 1583 - Default value: `true`
        /// </summary>
        [Input("ipv4CompatibleRfc1583")]
        public Input<bool>? Ipv4CompatibleRfc1583 { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4CompatibleRfc1583Variable")]
        public Input<string>? Ipv4CompatibleRfc1583Variable { get; set; }

        /// <summary>
        /// Distribute default external route into OSPF - Default value: `false`
        /// </summary>
        [Input("ipv4DefaultInformationOriginate")]
        public Input<bool>? Ipv4DefaultInformationOriginate { get; set; }

        /// <summary>
        /// Always advertise default route - Default value: `false`
        /// </summary>
        [Input("ipv4DefaultInformationOriginateAlways")]
        public Input<bool>? Ipv4DefaultInformationOriginateAlways { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4DefaultInformationOriginateAlwaysVariable")]
        public Input<string>? Ipv4DefaultInformationOriginateAlwaysVariable { get; set; }

        /// <summary>
        /// Set metric used to generate default route &lt;0..16777214&gt; - Range: `0`-`16777214`
        /// </summary>
        [Input("ipv4DefaultInformationOriginateMetric")]
        public Input<int>? Ipv4DefaultInformationOriginateMetric { get; set; }

        /// <summary>
        /// Set default route type - Choices: `type1`, `type2`
        /// </summary>
        [Input("ipv4DefaultInformationOriginateMetricType")]
        public Input<string>? Ipv4DefaultInformationOriginateMetricType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4DefaultInformationOriginateMetricTypeVariable")]
        public Input<string>? Ipv4DefaultInformationOriginateMetricTypeVariable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4DefaultInformationOriginateMetricVariable")]
        public Input<string>? Ipv4DefaultInformationOriginateMetricVariable { get; set; }

        /// <summary>
        /// Distance - Range: `1`-`255` - Default value: `110`
        /// </summary>
        [Input("ipv4Distance")]
        public Input<int>? Ipv4Distance { get; set; }

        /// <summary>
        /// Set distance for external routes - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Input("ipv4DistanceExternal")]
        public Input<int>? Ipv4DistanceExternal { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4DistanceExternalVariable")]
        public Input<string>? Ipv4DistanceExternalVariable { get; set; }

        /// <summary>
        /// Set distance for inter-area routes - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Input("ipv4DistanceInterArea")]
        public Input<int>? Ipv4DistanceInterArea { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4DistanceInterAreaVariable")]
        public Input<string>? Ipv4DistanceInterAreaVariable { get; set; }

        /// <summary>
        /// Set distance for intra-area routes - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Input("ipv4DistanceIntraArea")]
        public Input<int>? Ipv4DistanceIntraArea { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4DistanceIntraAreaVariable")]
        public Input<string>? Ipv4DistanceIntraAreaVariable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4DistanceVariable")]
        public Input<string>? Ipv4DistanceVariable { get; set; }

        /// <summary>
        /// Filter - Default value: `false`
        /// </summary>
        [Input("ipv4Filter")]
        public Input<bool>? Ipv4Filter { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4FilterVariable")]
        public Input<string>? Ipv4FilterVariable { get; set; }

        [Input("ipv4MaxMetricRouterLsas")]
        private InputList<Inputs.CiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsaGetArgs>? _ipv4MaxMetricRouterLsas;

        /// <summary>
        /// Advertise own router LSA with infinite distance
        /// </summary>
        public InputList<Inputs.CiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsaGetArgs> Ipv4MaxMetricRouterLsas
        {
            get => _ipv4MaxMetricRouterLsas ?? (_ipv4MaxMetricRouterLsas = new InputList<Inputs.CiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsaGetArgs>());
            set => _ipv4MaxMetricRouterLsas = value;
        }

        /// <summary>
        /// Policy Name
        /// </summary>
        [Input("ipv4PolicyName")]
        public Input<string>? Ipv4PolicyName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4PolicyNameVariable")]
        public Input<string>? Ipv4PolicyNameVariable { get; set; }

        [Input("ipv4Redistributes")]
        private InputList<Inputs.CiscoOspfv3FeatureTemplateIpv4RedistributeGetArgs>? _ipv4Redistributes;

        /// <summary>
        /// Redistribute routes
        /// </summary>
        public InputList<Inputs.CiscoOspfv3FeatureTemplateIpv4RedistributeGetArgs> Ipv4Redistributes
        {
            get => _ipv4Redistributes ?? (_ipv4Redistributes = new InputList<Inputs.CiscoOspfv3FeatureTemplateIpv4RedistributeGetArgs>());
            set => _ipv4Redistributes = value;
        }

        /// <summary>
        /// Set OSPF router ID to override system IP address
        /// </summary>
        [Input("ipv4RouterId")]
        public Input<string>? Ipv4RouterId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4RouterIdVariable")]
        public Input<string>? Ipv4RouterIdVariable { get; set; }

        /// <summary>
        /// Set delay from first change received until performing SPF calculation - Range: `1`-`600000` - Default value: `200`
        /// </summary>
        [Input("ipv4TimersSpfDelay")]
        public Input<int>? Ipv4TimersSpfDelay { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4TimersSpfDelayVariable")]
        public Input<string>? Ipv4TimersSpfDelayVariable { get; set; }

        /// <summary>
        /// Set initial hold time between consecutive SPF calculations - Range: `1`-`600000` - Default value: `1000`
        /// </summary>
        [Input("ipv4TimersSpfInitialHold")]
        public Input<int>? Ipv4TimersSpfInitialHold { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4TimersSpfInitialHoldVariable")]
        public Input<string>? Ipv4TimersSpfInitialHoldVariable { get; set; }

        /// <summary>
        /// Set maximum hold time between consecutive SPF calculations - Range: `1`-`600000` - Default value: `10000`
        /// </summary>
        [Input("ipv4TimersSpfMaxHold")]
        public Input<int>? Ipv4TimersSpfMaxHold { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv4TimersSpfMaxHoldVariable")]
        public Input<string>? Ipv4TimersSpfMaxHoldVariable { get; set; }

        [Input("ipv6Areas")]
        private InputList<Inputs.CiscoOspfv3FeatureTemplateIpv6AreaGetArgs>? _ipv6Areas;

        /// <summary>
        /// Configure OSPF area
        /// </summary>
        public InputList<Inputs.CiscoOspfv3FeatureTemplateIpv6AreaGetArgs> Ipv6Areas
        {
            get => _ipv6Areas ?? (_ipv6Areas = new InputList<Inputs.CiscoOspfv3FeatureTemplateIpv6AreaGetArgs>());
            set => _ipv6Areas = value;
        }

        /// <summary>
        /// Set reference bandwidth method to assign OSPF cost - Range: `1`-`4294967` - Default value: `100`
        /// </summary>
        [Input("ipv6AutoCostReferenceBandwidth")]
        public Input<int>? Ipv6AutoCostReferenceBandwidth { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6AutoCostReferenceBandwidthVariable")]
        public Input<string>? Ipv6AutoCostReferenceBandwidthVariable { get; set; }

        /// <summary>
        /// Calculate summary route cost based on RFC 1583 - Default value: `true`
        /// </summary>
        [Input("ipv6CompatibleRfc1583")]
        public Input<bool>? Ipv6CompatibleRfc1583 { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6CompatibleRfc1583Variable")]
        public Input<string>? Ipv6CompatibleRfc1583Variable { get; set; }

        /// <summary>
        /// Distribute default external route into OSPF - Default value: `false`
        /// </summary>
        [Input("ipv6DefaultInformationOriginate")]
        public Input<bool>? Ipv6DefaultInformationOriginate { get; set; }

        /// <summary>
        /// Always advertise default route - Default value: `false`
        /// </summary>
        [Input("ipv6DefaultInformationOriginateAlways")]
        public Input<bool>? Ipv6DefaultInformationOriginateAlways { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6DefaultInformationOriginateAlwaysVariable")]
        public Input<string>? Ipv6DefaultInformationOriginateAlwaysVariable { get; set; }

        /// <summary>
        /// Set metric used to generate default route &lt;0..16777214&gt; - Range: `0`-`16777214`
        /// </summary>
        [Input("ipv6DefaultInformationOriginateMetric")]
        public Input<int>? Ipv6DefaultInformationOriginateMetric { get; set; }

        /// <summary>
        /// Set default route type - Choices: `type1`, `type2`
        /// </summary>
        [Input("ipv6DefaultInformationOriginateMetricType")]
        public Input<string>? Ipv6DefaultInformationOriginateMetricType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6DefaultInformationOriginateMetricTypeVariable")]
        public Input<string>? Ipv6DefaultInformationOriginateMetricTypeVariable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6DefaultInformationOriginateMetricVariable")]
        public Input<string>? Ipv6DefaultInformationOriginateMetricVariable { get; set; }

        /// <summary>
        /// Distance - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Input("ipv6Distance")]
        public Input<int>? Ipv6Distance { get; set; }

        /// <summary>
        /// Set distance for external routes - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Input("ipv6DistanceExternal")]
        public Input<int>? Ipv6DistanceExternal { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6DistanceExternalVariable")]
        public Input<string>? Ipv6DistanceExternalVariable { get; set; }

        /// <summary>
        /// Set distance for inter-area routes - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Input("ipv6DistanceInterArea")]
        public Input<int>? Ipv6DistanceInterArea { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6DistanceInterAreaVariable")]
        public Input<string>? Ipv6DistanceInterAreaVariable { get; set; }

        /// <summary>
        /// Set distance for intra-area routes - Range: `1`-`254` - Default value: `110`
        /// </summary>
        [Input("ipv6DistanceIntraArea")]
        public Input<int>? Ipv6DistanceIntraArea { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6DistanceIntraAreaVariable")]
        public Input<string>? Ipv6DistanceIntraAreaVariable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6DistanceVariable")]
        public Input<string>? Ipv6DistanceVariable { get; set; }

        /// <summary>
        /// Filter - Default value: `false`
        /// </summary>
        [Input("ipv6Filter")]
        public Input<bool>? Ipv6Filter { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6FilterVariable")]
        public Input<string>? Ipv6FilterVariable { get; set; }

        [Input("ipv6MaxMetricRouterLsas")]
        private InputList<Inputs.CiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsaGetArgs>? _ipv6MaxMetricRouterLsas;

        /// <summary>
        /// Advertise own router LSA with infinite distance
        /// </summary>
        public InputList<Inputs.CiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsaGetArgs> Ipv6MaxMetricRouterLsas
        {
            get => _ipv6MaxMetricRouterLsas ?? (_ipv6MaxMetricRouterLsas = new InputList<Inputs.CiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsaGetArgs>());
            set => _ipv6MaxMetricRouterLsas = value;
        }

        /// <summary>
        /// Name
        /// </summary>
        [Input("ipv6PolicyName")]
        public Input<string>? Ipv6PolicyName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6PolicyNameVariable")]
        public Input<string>? Ipv6PolicyNameVariable { get; set; }

        [Input("ipv6Redistributes")]
        private InputList<Inputs.CiscoOspfv3FeatureTemplateIpv6RedistributeGetArgs>? _ipv6Redistributes;

        /// <summary>
        /// Redistribute routes
        /// </summary>
        public InputList<Inputs.CiscoOspfv3FeatureTemplateIpv6RedistributeGetArgs> Ipv6Redistributes
        {
            get => _ipv6Redistributes ?? (_ipv6Redistributes = new InputList<Inputs.CiscoOspfv3FeatureTemplateIpv6RedistributeGetArgs>());
            set => _ipv6Redistributes = value;
        }

        /// <summary>
        /// Set OSPF router ID to override system IP address
        /// </summary>
        [Input("ipv6RouterId")]
        public Input<string>? Ipv6RouterId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6RouterIdVariable")]
        public Input<string>? Ipv6RouterIdVariable { get; set; }

        /// <summary>
        /// Set delay from first change received until performing SPF calculation - Range: `0`-`600000` - Default value: `200`
        /// </summary>
        [Input("ipv6TimersSpfDelay")]
        public Input<int>? Ipv6TimersSpfDelay { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6TimersSpfDelayVariable")]
        public Input<string>? Ipv6TimersSpfDelayVariable { get; set; }

        /// <summary>
        /// Set initial hold time between consecutive SPF calculations - Range: `0`-`600000` - Default value: `1000`
        /// </summary>
        [Input("ipv6TimersSpfInitialHold")]
        public Input<int>? Ipv6TimersSpfInitialHold { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6TimersSpfInitialHoldVariable")]
        public Input<string>? Ipv6TimersSpfInitialHoldVariable { get; set; }

        /// <summary>
        /// Set maximum hold time between consecutive SPF calculations - Range: `0`-`600000` - Default value: `10000`
        /// </summary>
        [Input("ipv6TimersSpfMaxHold")]
        public Input<int>? Ipv6TimersSpfMaxHold { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipv6TimersSpfMaxHoldVariable")]
        public Input<string>? Ipv6TimersSpfMaxHoldVariable { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The template type
        /// </summary>
        [Input("templateType")]
        public Input<string>? TemplateType { get; set; }

        /// <summary>
        /// The version of the feature template
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public CiscoOspfv3FeatureTemplateState()
        {
        }
        public static new CiscoOspfv3FeatureTemplateState Empty => new CiscoOspfv3FeatureTemplateState();
    }
}
