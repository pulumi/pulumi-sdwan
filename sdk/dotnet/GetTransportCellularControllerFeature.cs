// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetTransportCellularControllerFeature
    {
        /// <summary>
        /// This data source can read the Transport Cellular Controller Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetTransportCellularControllerFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTransportCellularControllerFeatureResult> InvokeAsync(GetTransportCellularControllerFeatureArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTransportCellularControllerFeatureResult>("sdwan:index/getTransportCellularControllerFeature:getTransportCellularControllerFeature", args ?? new GetTransportCellularControllerFeatureArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Transport Cellular Controller Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetTransportCellularControllerFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTransportCellularControllerFeatureResult> Invoke(GetTransportCellularControllerFeatureInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTransportCellularControllerFeatureResult>("sdwan:index/getTransportCellularControllerFeature:getTransportCellularControllerFeature", args ?? new GetTransportCellularControllerFeatureInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Transport Cellular Controller Feature.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetTransportCellularControllerFeature.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTransportCellularControllerFeatureResult> Invoke(GetTransportCellularControllerFeatureInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTransportCellularControllerFeatureResult>("sdwan:index/getTransportCellularControllerFeature:getTransportCellularControllerFeature", args ?? new GetTransportCellularControllerFeatureInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTransportCellularControllerFeatureArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public string FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Feature
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetTransportCellularControllerFeatureArgs()
        {
        }
        public static new GetTransportCellularControllerFeatureArgs Empty => new GetTransportCellularControllerFeatureArgs();
    }

    public sealed class GetTransportCellularControllerFeatureInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Feature
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetTransportCellularControllerFeatureInvokeArgs()
        {
        }
        public static new GetTransportCellularControllerFeatureInvokeArgs Empty => new GetTransportCellularControllerFeatureInvokeArgs();
    }


    [OutputType]
    public sealed class GetTransportCellularControllerFeatureResult
    {
        /// <summary>
        /// Cellular ID
        /// </summary>
        public readonly string CellularId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string CellularIdVariable;
        /// <summary>
        /// The description of the Feature
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        public readonly string FeatureProfileId;
        /// <summary>
        /// Enable/Disable Firmware Auto Sim
        /// </summary>
        public readonly bool FirmwareAutoSim;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string FirmwareAutoSimVariable;
        /// <summary>
        /// The id of the Feature
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Feature
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Set primary SIM slot
        /// </summary>
        public readonly int PrimarySimSlot;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PrimarySimSlotVariable;
        /// <summary>
        /// Set SIM failover retries
        /// </summary>
        public readonly int SimFailoverRetries;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SimFailoverRetriesVariable;
        /// <summary>
        /// Set SIM failover timeout in minutes
        /// </summary>
        public readonly int SimFailoverTimeout;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SimFailoverTimeoutVariable;
        /// <summary>
        /// The version of the Feature
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetTransportCellularControllerFeatureResult(
            string cellularId,

            string cellularIdVariable,

            string description,

            string featureProfileId,

            bool firmwareAutoSim,

            string firmwareAutoSimVariable,

            string id,

            string name,

            int primarySimSlot,

            string primarySimSlotVariable,

            int simFailoverRetries,

            string simFailoverRetriesVariable,

            int simFailoverTimeout,

            string simFailoverTimeoutVariable,

            int version)
        {
            CellularId = cellularId;
            CellularIdVariable = cellularIdVariable;
            Description = description;
            FeatureProfileId = featureProfileId;
            FirmwareAutoSim = firmwareAutoSim;
            FirmwareAutoSimVariable = firmwareAutoSimVariable;
            Id = id;
            Name = name;
            PrimarySimSlot = primarySimSlot;
            PrimarySimSlotVariable = primarySimSlotVariable;
            SimFailoverRetries = simFailoverRetries;
            SimFailoverRetriesVariable = simFailoverRetriesVariable;
            SimFailoverTimeout = simFailoverTimeout;
            SimFailoverTimeoutVariable = simFailoverTimeoutVariable;
            Version = version;
        }
    }
}
