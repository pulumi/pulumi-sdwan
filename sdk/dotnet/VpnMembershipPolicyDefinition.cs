// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a VPN Membership Policy Definition .
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Sdwan = Pulumi.Sdwan;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Sdwan.VpnMembershipPolicyDefinition("example", new()
    ///     {
    ///         Name = "Example",
    ///         Description = "My description",
    ///         Sites = new[]
    ///         {
    ///             new Sdwan.Inputs.VpnMembershipPolicyDefinitionSiteArgs
    ///             {
    ///                 Site_list_id = "e858e1c4-6aa8-4de7-99df-c3adbf80290d",
    ///                 Vpn_list_ids = new[]
    ///                 {
    ///                     "04fcbb0b-efbf-43d2-a04b-847d3a7b104e",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/vpnMembershipPolicyDefinition:VpnMembershipPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/vpnMembershipPolicyDefinition:VpnMembershipPolicyDefinition")]
    public partial class VpnMembershipPolicyDefinition : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the policy definition
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the policy definition
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of sites
        /// </summary>
        [Output("sites")]
        public Output<ImmutableArray<Outputs.VpnMembershipPolicyDefinitionSite>> Sites { get; private set; } = null!;

        /// <summary>
        /// Type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The version of the object
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a VpnMembershipPolicyDefinition resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpnMembershipPolicyDefinition(string name, VpnMembershipPolicyDefinitionArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/vpnMembershipPolicyDefinition:VpnMembershipPolicyDefinition", name, args ?? new VpnMembershipPolicyDefinitionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpnMembershipPolicyDefinition(string name, Input<string> id, VpnMembershipPolicyDefinitionState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/vpnMembershipPolicyDefinition:VpnMembershipPolicyDefinition", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpnMembershipPolicyDefinition resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpnMembershipPolicyDefinition Get(string name, Input<string> id, VpnMembershipPolicyDefinitionState? state = null, CustomResourceOptions? options = null)
        {
            return new VpnMembershipPolicyDefinition(name, id, state, options);
        }
    }

    public sealed class VpnMembershipPolicyDefinitionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the policy definition
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// The name of the policy definition
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sites", required: true)]
        private InputList<Inputs.VpnMembershipPolicyDefinitionSiteArgs>? _sites;

        /// <summary>
        /// List of sites
        /// </summary>
        public InputList<Inputs.VpnMembershipPolicyDefinitionSiteArgs> Sites
        {
            get => _sites ?? (_sites = new InputList<Inputs.VpnMembershipPolicyDefinitionSiteArgs>());
            set => _sites = value;
        }

        public VpnMembershipPolicyDefinitionArgs()
        {
        }
        public static new VpnMembershipPolicyDefinitionArgs Empty => new VpnMembershipPolicyDefinitionArgs();
    }

    public sealed class VpnMembershipPolicyDefinitionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the policy definition
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the policy definition
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sites")]
        private InputList<Inputs.VpnMembershipPolicyDefinitionSiteGetArgs>? _sites;

        /// <summary>
        /// List of sites
        /// </summary>
        public InputList<Inputs.VpnMembershipPolicyDefinitionSiteGetArgs> Sites
        {
            get => _sites ?? (_sites = new InputList<Inputs.VpnMembershipPolicyDefinitionSiteGetArgs>());
            set => _sites = value;
        }

        /// <summary>
        /// Type
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The version of the object
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public VpnMembershipPolicyDefinitionState()
        {
        }
        public static new VpnMembershipPolicyDefinitionState Empty => new VpnMembershipPolicyDefinitionState();
    }
}
