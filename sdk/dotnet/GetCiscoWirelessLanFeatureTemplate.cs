// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetCiscoWirelessLanFeatureTemplate
    {
        /// <summary>
        /// This data source can read the Cisco Wireless LAN feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoWirelessLanFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCiscoWirelessLanFeatureTemplateResult> InvokeAsync(GetCiscoWirelessLanFeatureTemplateArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCiscoWirelessLanFeatureTemplateResult>("sdwan:index/getCiscoWirelessLanFeatureTemplate:getCiscoWirelessLanFeatureTemplate", args ?? new GetCiscoWirelessLanFeatureTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Cisco Wireless LAN feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoWirelessLanFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCiscoWirelessLanFeatureTemplateResult> Invoke(GetCiscoWirelessLanFeatureTemplateInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCiscoWirelessLanFeatureTemplateResult>("sdwan:index/getCiscoWirelessLanFeatureTemplate:getCiscoWirelessLanFeatureTemplate", args ?? new GetCiscoWirelessLanFeatureTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCiscoWirelessLanFeatureTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetCiscoWirelessLanFeatureTemplateArgs()
        {
        }
        public static new GetCiscoWirelessLanFeatureTemplateArgs Empty => new GetCiscoWirelessLanFeatureTemplateArgs();
    }

    public sealed class GetCiscoWirelessLanFeatureTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetCiscoWirelessLanFeatureTemplateInvokeArgs()
        {
        }
        public static new GetCiscoWirelessLanFeatureTemplateInvokeArgs Empty => new GetCiscoWirelessLanFeatureTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetCiscoWirelessLanFeatureTemplateResult
    {
        /// <summary>
        /// Set mobile express default gateway
        /// </summary>
        public readonly string ControllerDefaultGateway;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ControllerDefaultGatewayVariable;
        /// <summary>
        /// Set mobile express controller address
        /// </summary>
        public readonly string ControllerIpAddress;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ControllerIpAddressVariable;
        /// <summary>
        /// Set mobile express controller subnet mask
        /// </summary>
        public readonly string ControllerSubnetMask;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ControllerSubnetMaskVariable;
        /// <summary>
        /// Select country
        /// </summary>
        public readonly string Country;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string CountryVariable;
        /// <summary>
        /// The description of the feature template
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// List of supported device types
        /// </summary>
        public readonly ImmutableArray<string> DeviceTypes;
        /// <summary>
        /// The id of the feature template
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the feature template
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Set management password
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PasswordVariable;
        /// <summary>
        /// 2.4GHz Shutdown
        /// </summary>
        public readonly bool Shutdown24ghz;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Shutdown24ghzVariable;
        /// <summary>
        /// 5GHz Shutdown
        /// </summary>
        public readonly bool Shutdown5ghz;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string Shutdown5ghzVariable;
        /// <summary>
        /// Configure Wi-Fi SSID
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCiscoWirelessLanFeatureTemplateSsidResult> Ssids;
        /// <summary>
        /// The template type
        /// </summary>
        public readonly string TemplateType;
        /// <summary>
        /// Set management username
        /// </summary>
        public readonly string Username;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string UsernameVariable;
        /// <summary>
        /// The version of the feature template
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetCiscoWirelessLanFeatureTemplateResult(
            string controllerDefaultGateway,

            string controllerDefaultGatewayVariable,

            string controllerIpAddress,

            string controllerIpAddressVariable,

            string controllerSubnetMask,

            string controllerSubnetMaskVariable,

            string country,

            string countryVariable,

            string description,

            ImmutableArray<string> deviceTypes,

            string id,

            string name,

            string password,

            string passwordVariable,

            bool shutdown24ghz,

            string shutdown24ghzVariable,

            bool shutdown5ghz,

            string shutdown5ghzVariable,

            ImmutableArray<Outputs.GetCiscoWirelessLanFeatureTemplateSsidResult> ssids,

            string templateType,

            string username,

            string usernameVariable,

            int version)
        {
            ControllerDefaultGateway = controllerDefaultGateway;
            ControllerDefaultGatewayVariable = controllerDefaultGatewayVariable;
            ControllerIpAddress = controllerIpAddress;
            ControllerIpAddressVariable = controllerIpAddressVariable;
            ControllerSubnetMask = controllerSubnetMask;
            ControllerSubnetMaskVariable = controllerSubnetMaskVariable;
            Country = country;
            CountryVariable = countryVariable;
            Description = description;
            DeviceTypes = deviceTypes;
            Id = id;
            Name = name;
            Password = password;
            PasswordVariable = passwordVariable;
            Shutdown24ghz = shutdown24ghz;
            Shutdown24ghzVariable = shutdown24ghzVariable;
            Shutdown5ghz = shutdown5ghz;
            Shutdown5ghzVariable = shutdown5ghzVariable;
            Ssids = ssids;
            TemplateType = templateType;
            Username = username;
            UsernameVariable = usernameVariable;
            Version = version;
        }
    }
}
