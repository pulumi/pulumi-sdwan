// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a Policy Object Policer Policy_object.
    ///   - Minimum SD-WAN Manager version: `20.12.0`
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// Expected import identifier with the format: "policy_object_policer_id,feature_profile_id"
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/policyObjectPolicer:PolicyObjectPolicer example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/policyObjectPolicer:PolicyObjectPolicer")]
    public partial class PolicyObjectPolicer : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the Policy_object
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Policer Entries
        /// </summary>
        [Output("entries")]
        public Output<ImmutableArray<Outputs.PolicyObjectPolicerEntry>> Entries { get; private set; } = null!;

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Output("featureProfileId")]
        public Output<string> FeatureProfileId { get; private set; } = null!;

        /// <summary>
        /// The name of the Policy_object
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The version of the Policy_object
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a PolicyObjectPolicer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PolicyObjectPolicer(string name, PolicyObjectPolicerArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/policyObjectPolicer:PolicyObjectPolicer", name, args ?? new PolicyObjectPolicerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PolicyObjectPolicer(string name, Input<string> id, PolicyObjectPolicerState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/policyObjectPolicer:PolicyObjectPolicer", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PolicyObjectPolicer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PolicyObjectPolicer Get(string name, Input<string> id, PolicyObjectPolicerState? state = null, CustomResourceOptions? options = null)
        {
            return new PolicyObjectPolicer(name, id, state, options);
        }
    }

    public sealed class PolicyObjectPolicerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Policy_object
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("entries", required: true)]
        private InputList<Inputs.PolicyObjectPolicerEntryArgs>? _entries;

        /// <summary>
        /// Policer Entries
        /// </summary>
        public InputList<Inputs.PolicyObjectPolicerEntryArgs> Entries
        {
            get => _entries ?? (_entries = new InputList<Inputs.PolicyObjectPolicerEntryArgs>());
            set => _entries = value;
        }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The name of the Policy_object
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public PolicyObjectPolicerArgs()
        {
        }
        public static new PolicyObjectPolicerArgs Empty => new PolicyObjectPolicerArgs();
    }

    public sealed class PolicyObjectPolicerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Policy_object
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("entries")]
        private InputList<Inputs.PolicyObjectPolicerEntryGetArgs>? _entries;

        /// <summary>
        /// Policer Entries
        /// </summary>
        public InputList<Inputs.PolicyObjectPolicerEntryGetArgs> Entries
        {
            get => _entries ?? (_entries = new InputList<Inputs.PolicyObjectPolicerEntryGetArgs>());
            set => _entries = value;
        }

        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId")]
        public Input<string>? FeatureProfileId { get; set; }

        /// <summary>
        /// The name of the Policy_object
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The version of the Policy_object
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public PolicyObjectPolicerState()
        {
        }
        public static new PolicyObjectPolicerState Empty => new PolicyObjectPolicerState();
    }
}
