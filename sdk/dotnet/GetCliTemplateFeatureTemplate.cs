// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetCliTemplateFeatureTemplate
    {
        /// <summary>
        /// This data source can read the CLI Template feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCliTemplateFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCliTemplateFeatureTemplateResult> InvokeAsync(GetCliTemplateFeatureTemplateArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCliTemplateFeatureTemplateResult>("sdwan:index/getCliTemplateFeatureTemplate:getCliTemplateFeatureTemplate", args ?? new GetCliTemplateFeatureTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the CLI Template feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCliTemplateFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCliTemplateFeatureTemplateResult> Invoke(GetCliTemplateFeatureTemplateInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCliTemplateFeatureTemplateResult>("sdwan:index/getCliTemplateFeatureTemplate:getCliTemplateFeatureTemplate", args ?? new GetCliTemplateFeatureTemplateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the CLI Template feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCliTemplateFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCliTemplateFeatureTemplateResult> Invoke(GetCliTemplateFeatureTemplateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCliTemplateFeatureTemplateResult>("sdwan:index/getCliTemplateFeatureTemplate:getCliTemplateFeatureTemplate", args ?? new GetCliTemplateFeatureTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCliTemplateFeatureTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetCliTemplateFeatureTemplateArgs()
        {
        }
        public static new GetCliTemplateFeatureTemplateArgs Empty => new GetCliTemplateFeatureTemplateArgs();
    }

    public sealed class GetCliTemplateFeatureTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetCliTemplateFeatureTemplateInvokeArgs()
        {
        }
        public static new GetCliTemplateFeatureTemplateInvokeArgs Empty => new GetCliTemplateFeatureTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetCliTemplateFeatureTemplateResult
    {
        /// <summary>
        /// Cli config
        /// </summary>
        public readonly string CliConfig;
        /// <summary>
        /// The description of the feature template
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// List of supported device types
        /// </summary>
        public readonly ImmutableArray<string> DeviceTypes;
        /// <summary>
        /// The id of the feature template
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the feature template
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The template type
        /// </summary>
        public readonly string TemplateType;
        /// <summary>
        /// The version of the feature template
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetCliTemplateFeatureTemplateResult(
            string cliConfig,

            string description,

            ImmutableArray<string> deviceTypes,

            string id,

            string name,

            string templateType,

            int version)
        {
            CliConfig = cliConfig;
            Description = description;
            DeviceTypes = deviceTypes;
            Id = id;
            Name = name;
            TemplateType = templateType;
            Version = version;
        }
    }
}
