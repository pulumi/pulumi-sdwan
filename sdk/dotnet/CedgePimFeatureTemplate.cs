// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a cEdge PIM feature template.
    ///   - Minimum SD-WAN Manager version: `15.0.0`
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/cedgePimFeatureTemplate:CedgePimFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/cedgePimFeatureTemplate:CedgePimFeatureTemplate")]
    public partial class CedgePimFeatureTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enable or disable auto-RP - Default value: `false`
        /// </summary>
        [Output("autoRp")]
        public Output<bool?> AutoRp { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("autoRpVariable")]
        public Output<string?> AutoRpVariable { get; private set; } = null!;

        /// <summary>
        /// Set Autonomic-Networking virtual interface
        /// </summary>
        [Output("bsrCandidate")]
        public Output<string?> BsrCandidate { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("bsrCandidateVariable")]
        public Output<string?> BsrCandidateVariable { get; private set; } = null!;

        /// <summary>
        /// Turn SSM On / Off - Default value: `false`
        /// </summary>
        [Output("default")]
        public Output<bool?> Default { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("defaultVariable")]
        public Output<string?> DefaultVariable { get; private set; } = null!;

        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
        /// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
        /// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        [Output("deviceTypes")]
        public Output<ImmutableArray<string>> DeviceTypes { get; private set; } = null!;

        /// <summary>
        /// Hash Mask length for RP selection
        /// </summary>
        [Output("hashMaskLength")]
        public Output<string?> HashMaskLength { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("hashMaskLengthVariable")]
        public Output<string?> HashMaskLengthVariable { get; private set; } = null!;

        /// <summary>
        /// Set RP Discovery Interface Name
        /// </summary>
        [Output("interfaceName")]
        public Output<string?> InterfaceName { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("interfaceNameVariable")]
        public Output<string?> InterfaceNameVariable { get; private set; } = null!;

        /// <summary>
        /// Set PIM interface parameters
        /// </summary>
        [Output("interfaces")]
        public Output<ImmutableArray<Outputs.CedgePimFeatureTemplateInterface>> Interfaces { get; private set; } = null!;

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Set RP candidate priority - Range: `0`-`255`
        /// </summary>
        [Output("priority")]
        public Output<int?> Priority { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("priorityVariable")]
        public Output<string?> PriorityVariable { get; private set; } = null!;

        /// <summary>
        /// Set Access List for PIM SSM
        /// </summary>
        [Output("range")]
        public Output<string?> Range { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("rangeVariable")]
        public Output<string?> RangeVariable { get; private set; } = null!;

        /// <summary>
        /// Set Static RP Address(es)
        /// </summary>
        [Output("rpAddresses")]
        public Output<ImmutableArray<Outputs.CedgePimFeatureTemplateRpAddress>> RpAddresses { get; private set; } = null!;

        /// <summary>
        /// Enable or disable RP Announce
        /// </summary>
        [Output("rpAnnounceFields")]
        public Output<ImmutableArray<Outputs.CedgePimFeatureTemplateRpAnnounceField>> RpAnnounceFields { get; private set; } = null!;

        /// <summary>
        /// Set BSR RP candidate filter
        /// </summary>
        [Output("rpCandidateAccessList")]
        public Output<string?> RpCandidateAccessList { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("rpCandidateAccessListVariable")]
        public Output<string?> RpCandidateAccessListVariable { get; private set; } = null!;

        /// <summary>
        /// Set RP Discovery Scope
        /// </summary>
        [Output("rpCandidates")]
        public Output<ImmutableArray<Outputs.CedgePimFeatureTemplateRpCandidate>> RpCandidates { get; private set; } = null!;

        /// <summary>
        /// Set RP Discovery Scope - Range: `1`-`255`
        /// </summary>
        [Output("scope")]
        public Output<int?> Scope { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("scopeVariable")]
        public Output<string?> ScopeVariable { get; private set; } = null!;

        /// <summary>
        /// Set when PIM router joins the SPT (kbps) - Choices: `0`, `infinity`
        /// </summary>
        [Output("sptThreshold")]
        public Output<string?> SptThreshold { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("sptThresholdVariable")]
        public Output<string?> SptThresholdVariable { get; private set; } = null!;

        /// <summary>
        /// The template type
        /// </summary>
        [Output("templateType")]
        public Output<string> TemplateType { get; private set; } = null!;

        /// <summary>
        /// The version of the feature template
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a CedgePimFeatureTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CedgePimFeatureTemplate(string name, CedgePimFeatureTemplateArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/cedgePimFeatureTemplate:CedgePimFeatureTemplate", name, args ?? new CedgePimFeatureTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CedgePimFeatureTemplate(string name, Input<string> id, CedgePimFeatureTemplateState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/cedgePimFeatureTemplate:CedgePimFeatureTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CedgePimFeatureTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CedgePimFeatureTemplate Get(string name, Input<string> id, CedgePimFeatureTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new CedgePimFeatureTemplate(name, id, state, options);
        }
    }

    public sealed class CedgePimFeatureTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable or disable auto-RP - Default value: `false`
        /// </summary>
        [Input("autoRp")]
        public Input<bool>? AutoRp { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("autoRpVariable")]
        public Input<string>? AutoRpVariable { get; set; }

        /// <summary>
        /// Set Autonomic-Networking virtual interface
        /// </summary>
        [Input("bsrCandidate")]
        public Input<string>? BsrCandidate { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("bsrCandidateVariable")]
        public Input<string>? BsrCandidateVariable { get; set; }

        /// <summary>
        /// Turn SSM On / Off - Default value: `false`
        /// </summary>
        [Input("default")]
        public Input<bool>? Default { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("defaultVariable")]
        public Input<string>? DefaultVariable { get; set; }

        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("deviceTypes", required: true)]
        private InputList<string>? _deviceTypes;

        /// <summary>
        /// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
        /// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
        /// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        public InputList<string> DeviceTypes
        {
            get => _deviceTypes ?? (_deviceTypes = new InputList<string>());
            set => _deviceTypes = value;
        }

        /// <summary>
        /// Hash Mask length for RP selection
        /// </summary>
        [Input("hashMaskLength")]
        public Input<string>? HashMaskLength { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("hashMaskLengthVariable")]
        public Input<string>? HashMaskLengthVariable { get; set; }

        /// <summary>
        /// Set RP Discovery Interface Name
        /// </summary>
        [Input("interfaceName")]
        public Input<string>? InterfaceName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("interfaceNameVariable")]
        public Input<string>? InterfaceNameVariable { get; set; }

        [Input("interfaces")]
        private InputList<Inputs.CedgePimFeatureTemplateInterfaceArgs>? _interfaces;

        /// <summary>
        /// Set PIM interface parameters
        /// </summary>
        public InputList<Inputs.CedgePimFeatureTemplateInterfaceArgs> Interfaces
        {
            get => _interfaces ?? (_interfaces = new InputList<Inputs.CedgePimFeatureTemplateInterfaceArgs>());
            set => _interfaces = value;
        }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Set RP candidate priority - Range: `0`-`255`
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("priorityVariable")]
        public Input<string>? PriorityVariable { get; set; }

        /// <summary>
        /// Set Access List for PIM SSM
        /// </summary>
        [Input("range")]
        public Input<string>? Range { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("rangeVariable")]
        public Input<string>? RangeVariable { get; set; }

        [Input("rpAddresses")]
        private InputList<Inputs.CedgePimFeatureTemplateRpAddressArgs>? _rpAddresses;

        /// <summary>
        /// Set Static RP Address(es)
        /// </summary>
        public InputList<Inputs.CedgePimFeatureTemplateRpAddressArgs> RpAddresses
        {
            get => _rpAddresses ?? (_rpAddresses = new InputList<Inputs.CedgePimFeatureTemplateRpAddressArgs>());
            set => _rpAddresses = value;
        }

        [Input("rpAnnounceFields")]
        private InputList<Inputs.CedgePimFeatureTemplateRpAnnounceFieldArgs>? _rpAnnounceFields;

        /// <summary>
        /// Enable or disable RP Announce
        /// </summary>
        public InputList<Inputs.CedgePimFeatureTemplateRpAnnounceFieldArgs> RpAnnounceFields
        {
            get => _rpAnnounceFields ?? (_rpAnnounceFields = new InputList<Inputs.CedgePimFeatureTemplateRpAnnounceFieldArgs>());
            set => _rpAnnounceFields = value;
        }

        /// <summary>
        /// Set BSR RP candidate filter
        /// </summary>
        [Input("rpCandidateAccessList")]
        public Input<string>? RpCandidateAccessList { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("rpCandidateAccessListVariable")]
        public Input<string>? RpCandidateAccessListVariable { get; set; }

        [Input("rpCandidates")]
        private InputList<Inputs.CedgePimFeatureTemplateRpCandidateArgs>? _rpCandidates;

        /// <summary>
        /// Set RP Discovery Scope
        /// </summary>
        public InputList<Inputs.CedgePimFeatureTemplateRpCandidateArgs> RpCandidates
        {
            get => _rpCandidates ?? (_rpCandidates = new InputList<Inputs.CedgePimFeatureTemplateRpCandidateArgs>());
            set => _rpCandidates = value;
        }

        /// <summary>
        /// Set RP Discovery Scope - Range: `1`-`255`
        /// </summary>
        [Input("scope")]
        public Input<int>? Scope { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("scopeVariable")]
        public Input<string>? ScopeVariable { get; set; }

        /// <summary>
        /// Set when PIM router joins the SPT (kbps) - Choices: `0`, `infinity`
        /// </summary>
        [Input("sptThreshold")]
        public Input<string>? SptThreshold { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("sptThresholdVariable")]
        public Input<string>? SptThresholdVariable { get; set; }

        public CedgePimFeatureTemplateArgs()
        {
        }
        public static new CedgePimFeatureTemplateArgs Empty => new CedgePimFeatureTemplateArgs();
    }

    public sealed class CedgePimFeatureTemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable or disable auto-RP - Default value: `false`
        /// </summary>
        [Input("autoRp")]
        public Input<bool>? AutoRp { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("autoRpVariable")]
        public Input<string>? AutoRpVariable { get; set; }

        /// <summary>
        /// Set Autonomic-Networking virtual interface
        /// </summary>
        [Input("bsrCandidate")]
        public Input<string>? BsrCandidate { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("bsrCandidateVariable")]
        public Input<string>? BsrCandidateVariable { get; set; }

        /// <summary>
        /// Turn SSM On / Off - Default value: `false`
        /// </summary>
        [Input("default")]
        public Input<bool>? Default { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("defaultVariable")]
        public Input<string>? DefaultVariable { get; set; }

        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("deviceTypes")]
        private InputList<string>? _deviceTypes;

        /// <summary>
        /// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
        /// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
        /// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        public InputList<string> DeviceTypes
        {
            get => _deviceTypes ?? (_deviceTypes = new InputList<string>());
            set => _deviceTypes = value;
        }

        /// <summary>
        /// Hash Mask length for RP selection
        /// </summary>
        [Input("hashMaskLength")]
        public Input<string>? HashMaskLength { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("hashMaskLengthVariable")]
        public Input<string>? HashMaskLengthVariable { get; set; }

        /// <summary>
        /// Set RP Discovery Interface Name
        /// </summary>
        [Input("interfaceName")]
        public Input<string>? InterfaceName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("interfaceNameVariable")]
        public Input<string>? InterfaceNameVariable { get; set; }

        [Input("interfaces")]
        private InputList<Inputs.CedgePimFeatureTemplateInterfaceGetArgs>? _interfaces;

        /// <summary>
        /// Set PIM interface parameters
        /// </summary>
        public InputList<Inputs.CedgePimFeatureTemplateInterfaceGetArgs> Interfaces
        {
            get => _interfaces ?? (_interfaces = new InputList<Inputs.CedgePimFeatureTemplateInterfaceGetArgs>());
            set => _interfaces = value;
        }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Set RP candidate priority - Range: `0`-`255`
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("priorityVariable")]
        public Input<string>? PriorityVariable { get; set; }

        /// <summary>
        /// Set Access List for PIM SSM
        /// </summary>
        [Input("range")]
        public Input<string>? Range { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("rangeVariable")]
        public Input<string>? RangeVariable { get; set; }

        [Input("rpAddresses")]
        private InputList<Inputs.CedgePimFeatureTemplateRpAddressGetArgs>? _rpAddresses;

        /// <summary>
        /// Set Static RP Address(es)
        /// </summary>
        public InputList<Inputs.CedgePimFeatureTemplateRpAddressGetArgs> RpAddresses
        {
            get => _rpAddresses ?? (_rpAddresses = new InputList<Inputs.CedgePimFeatureTemplateRpAddressGetArgs>());
            set => _rpAddresses = value;
        }

        [Input("rpAnnounceFields")]
        private InputList<Inputs.CedgePimFeatureTemplateRpAnnounceFieldGetArgs>? _rpAnnounceFields;

        /// <summary>
        /// Enable or disable RP Announce
        /// </summary>
        public InputList<Inputs.CedgePimFeatureTemplateRpAnnounceFieldGetArgs> RpAnnounceFields
        {
            get => _rpAnnounceFields ?? (_rpAnnounceFields = new InputList<Inputs.CedgePimFeatureTemplateRpAnnounceFieldGetArgs>());
            set => _rpAnnounceFields = value;
        }

        /// <summary>
        /// Set BSR RP candidate filter
        /// </summary>
        [Input("rpCandidateAccessList")]
        public Input<string>? RpCandidateAccessList { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("rpCandidateAccessListVariable")]
        public Input<string>? RpCandidateAccessListVariable { get; set; }

        [Input("rpCandidates")]
        private InputList<Inputs.CedgePimFeatureTemplateRpCandidateGetArgs>? _rpCandidates;

        /// <summary>
        /// Set RP Discovery Scope
        /// </summary>
        public InputList<Inputs.CedgePimFeatureTemplateRpCandidateGetArgs> RpCandidates
        {
            get => _rpCandidates ?? (_rpCandidates = new InputList<Inputs.CedgePimFeatureTemplateRpCandidateGetArgs>());
            set => _rpCandidates = value;
        }

        /// <summary>
        /// Set RP Discovery Scope - Range: `1`-`255`
        /// </summary>
        [Input("scope")]
        public Input<int>? Scope { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("scopeVariable")]
        public Input<string>? ScopeVariable { get; set; }

        /// <summary>
        /// Set when PIM router joins the SPT (kbps) - Choices: `0`, `infinity`
        /// </summary>
        [Input("sptThreshold")]
        public Input<string>? SptThreshold { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("sptThresholdVariable")]
        public Input<string>? SptThresholdVariable { get; set; }

        /// <summary>
        /// The template type
        /// </summary>
        [Input("templateType")]
        public Input<string>? TemplateType { get; set; }

        /// <summary>
        /// The version of the feature template
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public CedgePimFeatureTemplateState()
        {
        }
        public static new CedgePimFeatureTemplateState Empty => new CedgePimFeatureTemplateState();
    }
}
