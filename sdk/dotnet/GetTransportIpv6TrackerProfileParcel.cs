// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetTransportIpv6TrackerProfileParcel
    {
        /// <summary>
        /// This data source can read the Transport IPv6 Tracker profile parcel.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetTransportIpv6TrackerProfileParcel.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTransportIpv6TrackerProfileParcelResult> InvokeAsync(GetTransportIpv6TrackerProfileParcelArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTransportIpv6TrackerProfileParcelResult>("sdwan:index/getTransportIpv6TrackerProfileParcel:getTransportIpv6TrackerProfileParcel", args ?? new GetTransportIpv6TrackerProfileParcelArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Transport IPv6 Tracker profile parcel.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetTransportIpv6TrackerProfileParcel.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTransportIpv6TrackerProfileParcelResult> Invoke(GetTransportIpv6TrackerProfileParcelInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTransportIpv6TrackerProfileParcelResult>("sdwan:index/getTransportIpv6TrackerProfileParcel:getTransportIpv6TrackerProfileParcel", args ?? new GetTransportIpv6TrackerProfileParcelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTransportIpv6TrackerProfileParcelArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public string FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the profile parcel
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetTransportIpv6TrackerProfileParcelArgs()
        {
        }
        public static new GetTransportIpv6TrackerProfileParcelArgs Empty => new GetTransportIpv6TrackerProfileParcelArgs();
    }

    public sealed class GetTransportIpv6TrackerProfileParcelInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the profile parcel
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetTransportIpv6TrackerProfileParcelInvokeArgs()
        {
        }
        public static new GetTransportIpv6TrackerProfileParcelInvokeArgs Empty => new GetTransportIpv6TrackerProfileParcelInvokeArgs();
    }


    [OutputType]
    public sealed class GetTransportIpv6TrackerProfileParcelResult
    {
        /// <summary>
        /// The description of the profile parcel
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// API url of endpoint
        /// </summary>
        public readonly string EndpointApiUrl;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string EndpointApiUrlVariable;
        /// <summary>
        /// Endpoint DNS Name
        /// </summary>
        public readonly string EndpointDnsName;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string EndpointDnsNameVariable;
        /// <summary>
        /// Endpoint IP
        /// </summary>
        public readonly string EndpointIp;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string EndpointIpVariable;
        /// <summary>
        /// Endpoint Tracker Type
        /// </summary>
        public readonly string EndpointTrackerType;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string EndpointTrackerTypeVariable;
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        public readonly string FeatureProfileId;
        /// <summary>
        /// The id of the profile parcel
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Interval
        /// </summary>
        public readonly int Interval;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string IntervalVariable;
        /// <summary>
        /// Multiplier
        /// </summary>
        public readonly int Multiplier;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string MultiplierVariable;
        /// <summary>
        /// The name of the profile parcel
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Threshold
        /// </summary>
        public readonly int Threshold;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string ThresholdVariable;
        /// <summary>
        /// Tracker Name
        /// </summary>
        public readonly string TrackerName;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TrackerNameVariable;
        /// <summary>
        /// Tracker Type
        /// </summary>
        public readonly string TrackerType;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string TrackerTypeVariable;
        /// <summary>
        /// The version of the profile parcel
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetTransportIpv6TrackerProfileParcelResult(
            string description,

            string endpointApiUrl,

            string endpointApiUrlVariable,

            string endpointDnsName,

            string endpointDnsNameVariable,

            string endpointIp,

            string endpointIpVariable,

            string endpointTrackerType,

            string endpointTrackerTypeVariable,

            string featureProfileId,

            string id,

            int interval,

            string intervalVariable,

            int multiplier,

            string multiplierVariable,

            string name,

            int threshold,

            string thresholdVariable,

            string trackerName,

            string trackerNameVariable,

            string trackerType,

            string trackerTypeVariable,

            int version)
        {
            Description = description;
            EndpointApiUrl = endpointApiUrl;
            EndpointApiUrlVariable = endpointApiUrlVariable;
            EndpointDnsName = endpointDnsName;
            EndpointDnsNameVariable = endpointDnsNameVariable;
            EndpointIp = endpointIp;
            EndpointIpVariable = endpointIpVariable;
            EndpointTrackerType = endpointTrackerType;
            EndpointTrackerTypeVariable = endpointTrackerTypeVariable;
            FeatureProfileId = featureProfileId;
            Id = id;
            Interval = interval;
            IntervalVariable = intervalVariable;
            Multiplier = multiplier;
            MultiplierVariable = multiplierVariable;
            Name = name;
            Threshold = threshold;
            ThresholdVariable = thresholdVariable;
            TrackerName = trackerName;
            TrackerNameVariable = trackerNameVariable;
            TrackerType = trackerType;
            TrackerTypeVariable = trackerTypeVariable;
            Version = version;
        }
    }
}
