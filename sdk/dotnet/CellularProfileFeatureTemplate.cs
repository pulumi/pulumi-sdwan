// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a Cellular Profile feature template.
    ///   - Minimum SD-WAN Manager version: `15.0.0`
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Sdwan = Pulumi.Sdwan;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Sdwan.CellularProfileFeatureTemplate("example", new()
    ///     {
    ///         Name = "Example",
    ///         Description = "My Example",
    ///         DeviceTypes = new[]
    ///         {
    ///             "vedge-C8000V",
    ///         },
    ///         IfName = "Ethernet1",
    ///         ProfileId = 1,
    ///         AccessPointName = "APN1",
    ///         AuthenticationType = "CHAP",
    ///         IpAddress = "1.2.3.4",
    ///         ProfileName = "PROFILE1",
    ///         PacketDataNetworkType = "ipv4",
    ///         ProfileUsername = "MyUsername",
    ///         ProfilePassword = "MyPassword",
    ///         PrimaryDnsAddress = "1.2.3.4",
    ///         SecondaryDnsAddress = "1.2.3.5",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/cellularProfileFeatureTemplate:CellularProfileFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/cellularProfileFeatureTemplate:CellularProfileFeatureTemplate")]
    public partial class CellularProfileFeatureTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Set access point name
        /// </summary>
        [Output("accessPointName")]
        public Output<string?> AccessPointName { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("accessPointNameVariable")]
        public Output<string?> AccessPointNameVariable { get; private set; } = null!;

        /// <summary>
        /// Set authentication type - Choices: `None`, `PAP`, `CHAP`, `PAP/CHAP` - Default value: `None`
        /// </summary>
        [Output("authenticationType")]
        public Output<string?> AuthenticationType { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("authenticationTypeVariable")]
        public Output<string?> AuthenticationTypeVariable { get; private set; } = null!;

        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
        /// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
        /// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        [Output("deviceTypes")]
        public Output<ImmutableArray<string>> DeviceTypes { get; private set; } = null!;

        /// <summary>
        /// Set interface name
        /// </summary>
        [Output("ifName")]
        public Output<string?> IfName { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ifNameVariable")]
        public Output<string?> IfNameVariable { get; private set; } = null!;

        /// <summary>
        /// Set IP address
        /// </summary>
        [Output("ipAddress")]
        public Output<string?> IpAddress { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ipAddressVariable")]
        public Output<string?> IpAddressVariable { get; private set; } = null!;

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Set packet data network type - Choices: `ipv4`, `ipv6`, `ipv46`
        /// </summary>
        [Output("packetDataNetworkType")]
        public Output<string?> PacketDataNetworkType { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("packetDataNetworkTypeVariable")]
        public Output<string?> PacketDataNetworkTypeVariable { get; private set; } = null!;

        /// <summary>
        /// Set the address of the primary DNS server
        /// </summary>
        [Output("primaryDnsAddress")]
        public Output<string?> PrimaryDnsAddress { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("primaryDnsAddressVariable")]
        public Output<string?> PrimaryDnsAddressVariable { get; private set; } = null!;

        /// <summary>
        /// Set Profile ID - Range: `1`-`16`
        /// </summary>
        [Output("profileId")]
        public Output<int?> ProfileId { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("profileIdVariable")]
        public Output<string?> ProfileIdVariable { get; private set; } = null!;

        /// <summary>
        /// Set profile name
        /// </summary>
        [Output("profileName")]
        public Output<string?> ProfileName { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("profileNameVariable")]
        public Output<string?> ProfileNameVariable { get; private set; } = null!;

        /// <summary>
        /// Set the profile password
        /// </summary>
        [Output("profilePassword")]
        public Output<string?> ProfilePassword { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("profilePasswordVariable")]
        public Output<string?> ProfilePasswordVariable { get; private set; } = null!;

        /// <summary>
        /// Set the profile username
        /// </summary>
        [Output("profileUsername")]
        public Output<string?> ProfileUsername { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("profileUsernameVariable")]
        public Output<string?> ProfileUsernameVariable { get; private set; } = null!;

        /// <summary>
        /// Set the address of the secondary DNS server
        /// </summary>
        [Output("secondaryDnsAddress")]
        public Output<string?> SecondaryDnsAddress { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("secondaryDnsAddressVariable")]
        public Output<string?> SecondaryDnsAddressVariable { get; private set; } = null!;

        /// <summary>
        /// The template type
        /// </summary>
        [Output("templateType")]
        public Output<string> TemplateType { get; private set; } = null!;

        /// <summary>
        /// The version of the feature template
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a CellularProfileFeatureTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CellularProfileFeatureTemplate(string name, CellularProfileFeatureTemplateArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/cellularProfileFeatureTemplate:CellularProfileFeatureTemplate", name, args ?? new CellularProfileFeatureTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CellularProfileFeatureTemplate(string name, Input<string> id, CellularProfileFeatureTemplateState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/cellularProfileFeatureTemplate:CellularProfileFeatureTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CellularProfileFeatureTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CellularProfileFeatureTemplate Get(string name, Input<string> id, CellularProfileFeatureTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new CellularProfileFeatureTemplate(name, id, state, options);
        }
    }

    public sealed class CellularProfileFeatureTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set access point name
        /// </summary>
        [Input("accessPointName")]
        public Input<string>? AccessPointName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("accessPointNameVariable")]
        public Input<string>? AccessPointNameVariable { get; set; }

        /// <summary>
        /// Set authentication type - Choices: `None`, `PAP`, `CHAP`, `PAP/CHAP` - Default value: `None`
        /// </summary>
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("authenticationTypeVariable")]
        public Input<string>? AuthenticationTypeVariable { get; set; }

        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("deviceTypes", required: true)]
        private InputList<string>? _deviceTypes;

        /// <summary>
        /// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
        /// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
        /// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        public InputList<string> DeviceTypes
        {
            get => _deviceTypes ?? (_deviceTypes = new InputList<string>());
            set => _deviceTypes = value;
        }

        /// <summary>
        /// Set interface name
        /// </summary>
        [Input("ifName")]
        public Input<string>? IfName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ifNameVariable")]
        public Input<string>? IfNameVariable { get; set; }

        /// <summary>
        /// Set IP address
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipAddressVariable")]
        public Input<string>? IpAddressVariable { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Set packet data network type - Choices: `ipv4`, `ipv6`, `ipv46`
        /// </summary>
        [Input("packetDataNetworkType")]
        public Input<string>? PacketDataNetworkType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("packetDataNetworkTypeVariable")]
        public Input<string>? PacketDataNetworkTypeVariable { get; set; }

        /// <summary>
        /// Set the address of the primary DNS server
        /// </summary>
        [Input("primaryDnsAddress")]
        public Input<string>? PrimaryDnsAddress { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("primaryDnsAddressVariable")]
        public Input<string>? PrimaryDnsAddressVariable { get; set; }

        /// <summary>
        /// Set Profile ID - Range: `1`-`16`
        /// </summary>
        [Input("profileId")]
        public Input<int>? ProfileId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("profileIdVariable")]
        public Input<string>? ProfileIdVariable { get; set; }

        /// <summary>
        /// Set profile name
        /// </summary>
        [Input("profileName")]
        public Input<string>? ProfileName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("profileNameVariable")]
        public Input<string>? ProfileNameVariable { get; set; }

        /// <summary>
        /// Set the profile password
        /// </summary>
        [Input("profilePassword")]
        public Input<string>? ProfilePassword { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("profilePasswordVariable")]
        public Input<string>? ProfilePasswordVariable { get; set; }

        /// <summary>
        /// Set the profile username
        /// </summary>
        [Input("profileUsername")]
        public Input<string>? ProfileUsername { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("profileUsernameVariable")]
        public Input<string>? ProfileUsernameVariable { get; set; }

        /// <summary>
        /// Set the address of the secondary DNS server
        /// </summary>
        [Input("secondaryDnsAddress")]
        public Input<string>? SecondaryDnsAddress { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("secondaryDnsAddressVariable")]
        public Input<string>? SecondaryDnsAddressVariable { get; set; }

        public CellularProfileFeatureTemplateArgs()
        {
        }
        public static new CellularProfileFeatureTemplateArgs Empty => new CellularProfileFeatureTemplateArgs();
    }

    public sealed class CellularProfileFeatureTemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set access point name
        /// </summary>
        [Input("accessPointName")]
        public Input<string>? AccessPointName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("accessPointNameVariable")]
        public Input<string>? AccessPointNameVariable { get; set; }

        /// <summary>
        /// Set authentication type - Choices: `None`, `PAP`, `CHAP`, `PAP/CHAP` - Default value: `None`
        /// </summary>
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("authenticationTypeVariable")]
        public Input<string>? AuthenticationTypeVariable { get; set; }

        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("deviceTypes")]
        private InputList<string>? _deviceTypes;

        /// <summary>
        /// List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
        /// `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
        /// `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        public InputList<string> DeviceTypes
        {
            get => _deviceTypes ?? (_deviceTypes = new InputList<string>());
            set => _deviceTypes = value;
        }

        /// <summary>
        /// Set interface name
        /// </summary>
        [Input("ifName")]
        public Input<string>? IfName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ifNameVariable")]
        public Input<string>? IfNameVariable { get; set; }

        /// <summary>
        /// Set IP address
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ipAddressVariable")]
        public Input<string>? IpAddressVariable { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Set packet data network type - Choices: `ipv4`, `ipv6`, `ipv46`
        /// </summary>
        [Input("packetDataNetworkType")]
        public Input<string>? PacketDataNetworkType { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("packetDataNetworkTypeVariable")]
        public Input<string>? PacketDataNetworkTypeVariable { get; set; }

        /// <summary>
        /// Set the address of the primary DNS server
        /// </summary>
        [Input("primaryDnsAddress")]
        public Input<string>? PrimaryDnsAddress { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("primaryDnsAddressVariable")]
        public Input<string>? PrimaryDnsAddressVariable { get; set; }

        /// <summary>
        /// Set Profile ID - Range: `1`-`16`
        /// </summary>
        [Input("profileId")]
        public Input<int>? ProfileId { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("profileIdVariable")]
        public Input<string>? ProfileIdVariable { get; set; }

        /// <summary>
        /// Set profile name
        /// </summary>
        [Input("profileName")]
        public Input<string>? ProfileName { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("profileNameVariable")]
        public Input<string>? ProfileNameVariable { get; set; }

        /// <summary>
        /// Set the profile password
        /// </summary>
        [Input("profilePassword")]
        public Input<string>? ProfilePassword { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("profilePasswordVariable")]
        public Input<string>? ProfilePasswordVariable { get; set; }

        /// <summary>
        /// Set the profile username
        /// </summary>
        [Input("profileUsername")]
        public Input<string>? ProfileUsername { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("profileUsernameVariable")]
        public Input<string>? ProfileUsernameVariable { get; set; }

        /// <summary>
        /// Set the address of the secondary DNS server
        /// </summary>
        [Input("secondaryDnsAddress")]
        public Input<string>? SecondaryDnsAddress { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("secondaryDnsAddressVariable")]
        public Input<string>? SecondaryDnsAddressVariable { get; set; }

        /// <summary>
        /// The template type
        /// </summary>
        [Input("templateType")]
        public Input<string>? TemplateType { get; set; }

        /// <summary>
        /// The version of the feature template
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public CellularProfileFeatureTemplateState()
        {
        }
        public static new CellularProfileFeatureTemplateState Empty => new CellularProfileFeatureTemplateState();
    }
}
