// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetCiscoBfdFeatureTemplate
    {
        /// <summary>
        /// This data source can read the Cisco BFD feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoBfdFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCiscoBfdFeatureTemplateResult> InvokeAsync(GetCiscoBfdFeatureTemplateArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCiscoBfdFeatureTemplateResult>("sdwan:index/getCiscoBfdFeatureTemplate:getCiscoBfdFeatureTemplate", args ?? new GetCiscoBfdFeatureTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Cisco BFD feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoBfdFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCiscoBfdFeatureTemplateResult> Invoke(GetCiscoBfdFeatureTemplateInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCiscoBfdFeatureTemplateResult>("sdwan:index/getCiscoBfdFeatureTemplate:getCiscoBfdFeatureTemplate", args ?? new GetCiscoBfdFeatureTemplateInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Cisco BFD feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCiscoBfdFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCiscoBfdFeatureTemplateResult> Invoke(GetCiscoBfdFeatureTemplateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCiscoBfdFeatureTemplateResult>("sdwan:index/getCiscoBfdFeatureTemplate:getCiscoBfdFeatureTemplate", args ?? new GetCiscoBfdFeatureTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCiscoBfdFeatureTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetCiscoBfdFeatureTemplateArgs()
        {
        }
        public static new GetCiscoBfdFeatureTemplateArgs Empty => new GetCiscoBfdFeatureTemplateArgs();
    }

    public sealed class GetCiscoBfdFeatureTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetCiscoBfdFeatureTemplateInvokeArgs()
        {
        }
        public static new GetCiscoBfdFeatureTemplateInvokeArgs Empty => new GetCiscoBfdFeatureTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetCiscoBfdFeatureTemplateResult
    {
        /// <summary>
        /// Set color that identifies the WAN transport tunnel
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCiscoBfdFeatureTemplateColorResult> Colors;
        /// <summary>
        /// Set default DSCP value for BFD packets
        /// </summary>
        public readonly int DefaultDscp;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DefaultDscpVariable;
        /// <summary>
        /// The description of the feature template
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// List of supported device types
        /// </summary>
        public readonly ImmutableArray<string> DeviceTypes;
        /// <summary>
        /// The id of the feature template
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Set the number of polling intervals used to determine tunnel SLA class
        /// </summary>
        public readonly int Multiplier;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string MultiplierVariable;
        /// <summary>
        /// The name of the feature template
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Set how often BFD polls tunnels to collect packet latency, loss, and statistics
        /// </summary>
        public readonly int PollInterval;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PollIntervalVariable;
        /// <summary>
        /// The template type
        /// </summary>
        public readonly string TemplateType;
        /// <summary>
        /// The version of the feature template
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetCiscoBfdFeatureTemplateResult(
            ImmutableArray<Outputs.GetCiscoBfdFeatureTemplateColorResult> colors,

            int defaultDscp,

            string defaultDscpVariable,

            string description,

            ImmutableArray<string> deviceTypes,

            string id,

            int multiplier,

            string multiplierVariable,

            string name,

            int pollInterval,

            string pollIntervalVariable,

            string templateType,

            int version)
        {
            Colors = colors;
            DefaultDscp = defaultDscp;
            DefaultDscpVariable = defaultDscpVariable;
            Description = description;
            DeviceTypes = deviceTypes;
            Id = id;
            Multiplier = multiplier;
            MultiplierVariable = multiplierVariable;
            Name = name;
            PollInterval = pollInterval;
            PollIntervalVariable = pollIntervalVariable;
            TemplateType = templateType;
            Version = version;
        }
    }
}
