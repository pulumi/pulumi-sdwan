// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetCellularControllerFeatureTemplate
    {
        /// <summary>
        /// This data source can read the Cellular Controller feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCellularControllerFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCellularControllerFeatureTemplateResult> InvokeAsync(GetCellularControllerFeatureTemplateArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCellularControllerFeatureTemplateResult>("sdwan:index/getCellularControllerFeatureTemplate:getCellularControllerFeatureTemplate", args ?? new GetCellularControllerFeatureTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Cellular Controller feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetCellularControllerFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCellularControllerFeatureTemplateResult> Invoke(GetCellularControllerFeatureTemplateInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCellularControllerFeatureTemplateResult>("sdwan:index/getCellularControllerFeatureTemplate:getCellularControllerFeatureTemplate", args ?? new GetCellularControllerFeatureTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCellularControllerFeatureTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetCellularControllerFeatureTemplateArgs()
        {
        }
        public static new GetCellularControllerFeatureTemplateArgs Empty => new GetCellularControllerFeatureTemplateArgs();
    }

    public sealed class GetCellularControllerFeatureTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetCellularControllerFeatureTemplateInvokeArgs()
        {
        }
        public static new GetCellularControllerFeatureTemplateInvokeArgs Empty => new GetCellularControllerFeatureTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetCellularControllerFeatureTemplateResult
    {
        /// <summary>
        /// Cellular interface name
        /// </summary>
        public readonly string CellularInterfaceId;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string CellularInterfaceIdVariable;
        /// <summary>
        /// Data Profile List
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCellularControllerFeatureTemplateDataProfileResult> DataProfiles;
        /// <summary>
        /// The description of the feature template
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// List of supported device types
        /// </summary>
        public readonly ImmutableArray<string> DeviceTypes;
        /// <summary>
        /// Enable/Disable Firmware Auto Sim
        /// </summary>
        public readonly bool FirmwareAutoSim;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string FirmwareAutoSimVariable;
        /// <summary>
        /// The id of the feature template
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the feature template
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Set primary SIM slot
        /// </summary>
        public readonly int PrimarySimSlot;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PrimarySimSlotVariable;
        /// <summary>
        /// Set SIM failover retries
        /// </summary>
        public readonly int SimFailoverRetries;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SimFailoverRetriesVariable;
        /// <summary>
        /// Set SIM failover timeout in minutes
        /// </summary>
        public readonly int SimFailoverTimeout;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string SimFailoverTimeoutVariable;
        /// <summary>
        /// The template type
        /// </summary>
        public readonly string TemplateType;
        /// <summary>
        /// The version of the feature template
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetCellularControllerFeatureTemplateResult(
            string cellularInterfaceId,

            string cellularInterfaceIdVariable,

            ImmutableArray<Outputs.GetCellularControllerFeatureTemplateDataProfileResult> dataProfiles,

            string description,

            ImmutableArray<string> deviceTypes,

            bool firmwareAutoSim,

            string firmwareAutoSimVariable,

            string id,

            string name,

            int primarySimSlot,

            string primarySimSlotVariable,

            int simFailoverRetries,

            string simFailoverRetriesVariable,

            int simFailoverTimeout,

            string simFailoverTimeoutVariable,

            string templateType,

            int version)
        {
            CellularInterfaceId = cellularInterfaceId;
            CellularInterfaceIdVariable = cellularInterfaceIdVariable;
            DataProfiles = dataProfiles;
            Description = description;
            DeviceTypes = deviceTypes;
            FirmwareAutoSim = firmwareAutoSim;
            FirmwareAutoSimVariable = firmwareAutoSimVariable;
            Id = id;
            Name = name;
            PrimarySimSlot = primarySimSlot;
            PrimarySimSlotVariable = primarySimSlotVariable;
            SimFailoverRetries = simFailoverRetries;
            SimFailoverRetriesVariable = simFailoverRetriesVariable;
            SimFailoverTimeout = simFailoverTimeout;
            SimFailoverTimeoutVariable = simFailoverTimeoutVariable;
            TemplateType = templateType;
            Version = version;
        }
    }
}
