// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a Cisco OMP feature template.
    ///   - Minimum SD-WAN Manager version: `15.0.0`
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Sdwan = Pulumi.Sdwan;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Sdwan.CiscoOmpFeatureTemplate("example", new()
    ///     {
    ///         Name = "Example",
    ///         Description = "My Example",
    ///         DeviceTypes = new[]
    ///         {
    ///             "vedge-C8000V",
    ///         },
    ///         GracefulRestart = true,
    ///         OverlayAs = 1,
    ///         SendPathLimit = 4,
    ///         EcmpLimit = 4,
    ///         Shutdown = false,
    ///         OmpAdminDistanceIpv4 = 10,
    ///         OmpAdminDistanceIpv6 = 10,
    ///         AdvertisementInterval = 1,
    ///         GracefulRestartTimer = 43200,
    ///         EorTimer = 300,
    ///         Holdtime = 60,
    ///         IgnoreRegionPathLength = false,
    ///         TransportGateway = "prefer",
    ///         AdvertiseIpv4Routes = new[]
    ///         {
    ///             new Sdwan.Inputs.CiscoOmpFeatureTemplateAdvertiseIpv4RouteArgs
    ///             {
    ///                 Protocol = "ospf",
    ///                 Advertise_external_ospf = "external",
    ///             },
    ///         },
    ///         AdvertiseIpv6Routes = new[]
    ///         {
    ///             new Sdwan.Inputs.CiscoOmpFeatureTemplateAdvertiseIpv6RouteArgs
    ///             {
    ///                 Protocol = "ospf",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/ciscoOmpFeatureTemplate:CiscoOmpFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/ciscoOmpFeatureTemplate:CiscoOmpFeatureTemplate")]
    public partial class CiscoOmpFeatureTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Advertise locally learned routes to OMP
        /// </summary>
        [Output("advertiseIpv4Routes")]
        public Output<ImmutableArray<Outputs.CiscoOmpFeatureTemplateAdvertiseIpv4Route>> AdvertiseIpv4Routes { get; private set; } = null!;

        /// <summary>
        /// Advertise locally learned routes to OMP
        /// </summary>
        [Output("advertiseIpv6Routes")]
        public Output<ImmutableArray<Outputs.CiscoOmpFeatureTemplateAdvertiseIpv6Route>> AdvertiseIpv6Routes { get; private set; } = null!;

        /// <summary>
        /// Set the time between OMP Update packets
        ///   - Range: `0`-`65535`
        ///   - Default value: `1`
        /// </summary>
        [Output("advertisementInterval")]
        public Output<int?> AdvertisementInterval { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("advertisementIntervalVariable")]
        public Output<string?> AdvertisementIntervalVariable { get; private set; } = null!;

        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// List of supported device types
        ///   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        [Output("deviceTypes")]
        public Output<ImmutableArray<string>> DeviceTypes { get; private set; } = null!;

        /// <summary>
        /// Set maximum number of OMP paths to install in vEdge route table
        ///   - Range: `1`-`16`
        ///   - Default value: `4`
        /// </summary>
        [Output("ecmpLimit")]
        public Output<int?> EcmpLimit { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ecmpLimitVariable")]
        public Output<string?> EcmpLimitVariable { get; private set; } = null!;

        /// <summary>
        /// End of RIB timer &lt;1..604800&gt; seconds
        ///   - Range: `1`-`3600`
        ///   - Default value: `300`
        /// </summary>
        [Output("eorTimer")]
        public Output<int?> EorTimer { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("eorTimerVariable")]
        public Output<string?> EorTimerVariable { get; private set; } = null!;

        /// <summary>
        /// Enable or disable OMP graceful restart
        ///   - Default value: `True`
        /// </summary>
        [Output("gracefulRestart")]
        public Output<bool?> GracefulRestart { get; private set; } = null!;

        /// <summary>
        /// Set the OMP graceful restart timer
        ///   - Range: `1`-`604800`
        ///   - Default value: `43200`
        /// </summary>
        [Output("gracefulRestartTimer")]
        public Output<int?> GracefulRestartTimer { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("gracefulRestartTimerVariable")]
        public Output<string?> GracefulRestartTimerVariable { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("gracefulRestartVariable")]
        public Output<string?> GracefulRestartVariable { get; private set; } = null!;

        /// <summary>
        /// Set how long to wait before closing OMP peer connection
        ///   - Default value: `60`
        /// </summary>
        [Output("holdtime")]
        public Output<int?> Holdtime { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("holdtimeVariable")]
        public Output<string?> HoldtimeVariable { get; private set; } = null!;

        /// <summary>
        /// Ignore Region-Path Length During Best-Path Algorithm
        ///   - Default value: `False`
        /// </summary>
        [Output("ignoreRegionPathLength")]
        public Output<bool?> IgnoreRegionPathLength { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ignoreRegionPathLengthVariable")]
        public Output<string?> IgnoreRegionPathLengthVariable { get; private set; } = null!;

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// omp-admin-distance-ipv4
        ///   - Range: `1`-`255`
        /// </summary>
        [Output("ompAdminDistanceIpv4")]
        public Output<int?> OmpAdminDistanceIpv4 { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ompAdminDistanceIpv4Variable")]
        public Output<string?> OmpAdminDistanceIpv4Variable { get; private set; } = null!;

        /// <summary>
        /// omp-admin-distance-ipv6
        ///   - Range: `1`-`255`
        /// </summary>
        [Output("ompAdminDistanceIpv6")]
        public Output<int?> OmpAdminDistanceIpv6 { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("ompAdminDistanceIpv6Variable")]
        public Output<string?> OmpAdminDistanceIpv6Variable { get; private set; } = null!;

        /// <summary>
        /// Set Overlay AS number &lt;1..4294967295&gt; or &lt;XX.YY&gt;
        ///   - Range: `1`-`4294967295`
        /// </summary>
        [Output("overlayAs")]
        public Output<int?> OverlayAs { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("overlayAsVariable")]
        public Output<string?> OverlayAsVariable { get; private set; } = null!;

        /// <summary>
        /// Set number of TLOC routes advertised between vSmart and vEdge
        ///   - Range: `1`-`16`
        ///   - Default value: `4`
        /// </summary>
        [Output("sendPathLimit")]
        public Output<int?> SendPathLimit { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("sendPathLimitVariable")]
        public Output<string?> SendPathLimitVariable { get; private set; } = null!;

        /// <summary>
        /// Enable or disable OMP
        ///   - Default value: `False`
        /// </summary>
        [Output("shutdown")]
        public Output<bool?> Shutdown { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("shutdownVariable")]
        public Output<string?> ShutdownVariable { get; private set; } = null!;

        /// <summary>
        /// The template type
        /// </summary>
        [Output("templateType")]
        public Output<string> TemplateType { get; private set; } = null!;

        /// <summary>
        /// Transport gateway path computation
        ///   - Choices: `Prefer`, `ecmp-with-direct-path`
        /// </summary>
        [Output("transportGateway")]
        public Output<string?> TransportGateway { get; private set; } = null!;

        /// <summary>
        /// Variable name
        /// </summary>
        [Output("transportGatewayVariable")]
        public Output<string?> TransportGatewayVariable { get; private set; } = null!;

        /// <summary>
        /// The version of the feature template
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a CiscoOmpFeatureTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CiscoOmpFeatureTemplate(string name, CiscoOmpFeatureTemplateArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/ciscoOmpFeatureTemplate:CiscoOmpFeatureTemplate", name, args ?? new CiscoOmpFeatureTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CiscoOmpFeatureTemplate(string name, Input<string> id, CiscoOmpFeatureTemplateState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/ciscoOmpFeatureTemplate:CiscoOmpFeatureTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CiscoOmpFeatureTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CiscoOmpFeatureTemplate Get(string name, Input<string> id, CiscoOmpFeatureTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new CiscoOmpFeatureTemplate(name, id, state, options);
        }
    }

    public sealed class CiscoOmpFeatureTemplateArgs : global::Pulumi.ResourceArgs
    {
        [Input("advertiseIpv4Routes")]
        private InputList<Inputs.CiscoOmpFeatureTemplateAdvertiseIpv4RouteArgs>? _advertiseIpv4Routes;

        /// <summary>
        /// Advertise locally learned routes to OMP
        /// </summary>
        public InputList<Inputs.CiscoOmpFeatureTemplateAdvertiseIpv4RouteArgs> AdvertiseIpv4Routes
        {
            get => _advertiseIpv4Routes ?? (_advertiseIpv4Routes = new InputList<Inputs.CiscoOmpFeatureTemplateAdvertiseIpv4RouteArgs>());
            set => _advertiseIpv4Routes = value;
        }

        [Input("advertiseIpv6Routes")]
        private InputList<Inputs.CiscoOmpFeatureTemplateAdvertiseIpv6RouteArgs>? _advertiseIpv6Routes;

        /// <summary>
        /// Advertise locally learned routes to OMP
        /// </summary>
        public InputList<Inputs.CiscoOmpFeatureTemplateAdvertiseIpv6RouteArgs> AdvertiseIpv6Routes
        {
            get => _advertiseIpv6Routes ?? (_advertiseIpv6Routes = new InputList<Inputs.CiscoOmpFeatureTemplateAdvertiseIpv6RouteArgs>());
            set => _advertiseIpv6Routes = value;
        }

        /// <summary>
        /// Set the time between OMP Update packets
        ///   - Range: `0`-`65535`
        ///   - Default value: `1`
        /// </summary>
        [Input("advertisementInterval")]
        public Input<int>? AdvertisementInterval { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("advertisementIntervalVariable")]
        public Input<string>? AdvertisementIntervalVariable { get; set; }

        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("deviceTypes", required: true)]
        private InputList<string>? _deviceTypes;

        /// <summary>
        /// List of supported device types
        ///   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        public InputList<string> DeviceTypes
        {
            get => _deviceTypes ?? (_deviceTypes = new InputList<string>());
            set => _deviceTypes = value;
        }

        /// <summary>
        /// Set maximum number of OMP paths to install in vEdge route table
        ///   - Range: `1`-`16`
        ///   - Default value: `4`
        /// </summary>
        [Input("ecmpLimit")]
        public Input<int>? EcmpLimit { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ecmpLimitVariable")]
        public Input<string>? EcmpLimitVariable { get; set; }

        /// <summary>
        /// End of RIB timer &lt;1..604800&gt; seconds
        ///   - Range: `1`-`3600`
        ///   - Default value: `300`
        /// </summary>
        [Input("eorTimer")]
        public Input<int>? EorTimer { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("eorTimerVariable")]
        public Input<string>? EorTimerVariable { get; set; }

        /// <summary>
        /// Enable or disable OMP graceful restart
        ///   - Default value: `True`
        /// </summary>
        [Input("gracefulRestart")]
        public Input<bool>? GracefulRestart { get; set; }

        /// <summary>
        /// Set the OMP graceful restart timer
        ///   - Range: `1`-`604800`
        ///   - Default value: `43200`
        /// </summary>
        [Input("gracefulRestartTimer")]
        public Input<int>? GracefulRestartTimer { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("gracefulRestartTimerVariable")]
        public Input<string>? GracefulRestartTimerVariable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("gracefulRestartVariable")]
        public Input<string>? GracefulRestartVariable { get; set; }

        /// <summary>
        /// Set how long to wait before closing OMP peer connection
        ///   - Default value: `60`
        /// </summary>
        [Input("holdtime")]
        public Input<int>? Holdtime { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("holdtimeVariable")]
        public Input<string>? HoldtimeVariable { get; set; }

        /// <summary>
        /// Ignore Region-Path Length During Best-Path Algorithm
        ///   - Default value: `False`
        /// </summary>
        [Input("ignoreRegionPathLength")]
        public Input<bool>? IgnoreRegionPathLength { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ignoreRegionPathLengthVariable")]
        public Input<string>? IgnoreRegionPathLengthVariable { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// omp-admin-distance-ipv4
        ///   - Range: `1`-`255`
        /// </summary>
        [Input("ompAdminDistanceIpv4")]
        public Input<int>? OmpAdminDistanceIpv4 { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ompAdminDistanceIpv4Variable")]
        public Input<string>? OmpAdminDistanceIpv4Variable { get; set; }

        /// <summary>
        /// omp-admin-distance-ipv6
        ///   - Range: `1`-`255`
        /// </summary>
        [Input("ompAdminDistanceIpv6")]
        public Input<int>? OmpAdminDistanceIpv6 { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ompAdminDistanceIpv6Variable")]
        public Input<string>? OmpAdminDistanceIpv6Variable { get; set; }

        /// <summary>
        /// Set Overlay AS number &lt;1..4294967295&gt; or &lt;XX.YY&gt;
        ///   - Range: `1`-`4294967295`
        /// </summary>
        [Input("overlayAs")]
        public Input<int>? OverlayAs { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("overlayAsVariable")]
        public Input<string>? OverlayAsVariable { get; set; }

        /// <summary>
        /// Set number of TLOC routes advertised between vSmart and vEdge
        ///   - Range: `1`-`16`
        ///   - Default value: `4`
        /// </summary>
        [Input("sendPathLimit")]
        public Input<int>? SendPathLimit { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("sendPathLimitVariable")]
        public Input<string>? SendPathLimitVariable { get; set; }

        /// <summary>
        /// Enable or disable OMP
        ///   - Default value: `False`
        /// </summary>
        [Input("shutdown")]
        public Input<bool>? Shutdown { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("shutdownVariable")]
        public Input<string>? ShutdownVariable { get; set; }

        /// <summary>
        /// Transport gateway path computation
        ///   - Choices: `Prefer`, `ecmp-with-direct-path`
        /// </summary>
        [Input("transportGateway")]
        public Input<string>? TransportGateway { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("transportGatewayVariable")]
        public Input<string>? TransportGatewayVariable { get; set; }

        public CiscoOmpFeatureTemplateArgs()
        {
        }
        public static new CiscoOmpFeatureTemplateArgs Empty => new CiscoOmpFeatureTemplateArgs();
    }

    public sealed class CiscoOmpFeatureTemplateState : global::Pulumi.ResourceArgs
    {
        [Input("advertiseIpv4Routes")]
        private InputList<Inputs.CiscoOmpFeatureTemplateAdvertiseIpv4RouteGetArgs>? _advertiseIpv4Routes;

        /// <summary>
        /// Advertise locally learned routes to OMP
        /// </summary>
        public InputList<Inputs.CiscoOmpFeatureTemplateAdvertiseIpv4RouteGetArgs> AdvertiseIpv4Routes
        {
            get => _advertiseIpv4Routes ?? (_advertiseIpv4Routes = new InputList<Inputs.CiscoOmpFeatureTemplateAdvertiseIpv4RouteGetArgs>());
            set => _advertiseIpv4Routes = value;
        }

        [Input("advertiseIpv6Routes")]
        private InputList<Inputs.CiscoOmpFeatureTemplateAdvertiseIpv6RouteGetArgs>? _advertiseIpv6Routes;

        /// <summary>
        /// Advertise locally learned routes to OMP
        /// </summary>
        public InputList<Inputs.CiscoOmpFeatureTemplateAdvertiseIpv6RouteGetArgs> AdvertiseIpv6Routes
        {
            get => _advertiseIpv6Routes ?? (_advertiseIpv6Routes = new InputList<Inputs.CiscoOmpFeatureTemplateAdvertiseIpv6RouteGetArgs>());
            set => _advertiseIpv6Routes = value;
        }

        /// <summary>
        /// Set the time between OMP Update packets
        ///   - Range: `0`-`65535`
        ///   - Default value: `1`
        /// </summary>
        [Input("advertisementInterval")]
        public Input<int>? AdvertisementInterval { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("advertisementIntervalVariable")]
        public Input<string>? AdvertisementIntervalVariable { get; set; }

        /// <summary>
        /// The description of the feature template
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("deviceTypes")]
        private InputList<string>? _deviceTypes;

        /// <summary>
        /// List of supported device types
        ///   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
        /// </summary>
        public InputList<string> DeviceTypes
        {
            get => _deviceTypes ?? (_deviceTypes = new InputList<string>());
            set => _deviceTypes = value;
        }

        /// <summary>
        /// Set maximum number of OMP paths to install in vEdge route table
        ///   - Range: `1`-`16`
        ///   - Default value: `4`
        /// </summary>
        [Input("ecmpLimit")]
        public Input<int>? EcmpLimit { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ecmpLimitVariable")]
        public Input<string>? EcmpLimitVariable { get; set; }

        /// <summary>
        /// End of RIB timer &lt;1..604800&gt; seconds
        ///   - Range: `1`-`3600`
        ///   - Default value: `300`
        /// </summary>
        [Input("eorTimer")]
        public Input<int>? EorTimer { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("eorTimerVariable")]
        public Input<string>? EorTimerVariable { get; set; }

        /// <summary>
        /// Enable or disable OMP graceful restart
        ///   - Default value: `True`
        /// </summary>
        [Input("gracefulRestart")]
        public Input<bool>? GracefulRestart { get; set; }

        /// <summary>
        /// Set the OMP graceful restart timer
        ///   - Range: `1`-`604800`
        ///   - Default value: `43200`
        /// </summary>
        [Input("gracefulRestartTimer")]
        public Input<int>? GracefulRestartTimer { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("gracefulRestartTimerVariable")]
        public Input<string>? GracefulRestartTimerVariable { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("gracefulRestartVariable")]
        public Input<string>? GracefulRestartVariable { get; set; }

        /// <summary>
        /// Set how long to wait before closing OMP peer connection
        ///   - Default value: `60`
        /// </summary>
        [Input("holdtime")]
        public Input<int>? Holdtime { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("holdtimeVariable")]
        public Input<string>? HoldtimeVariable { get; set; }

        /// <summary>
        /// Ignore Region-Path Length During Best-Path Algorithm
        ///   - Default value: `False`
        /// </summary>
        [Input("ignoreRegionPathLength")]
        public Input<bool>? IgnoreRegionPathLength { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ignoreRegionPathLengthVariable")]
        public Input<string>? IgnoreRegionPathLengthVariable { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// omp-admin-distance-ipv4
        ///   - Range: `1`-`255`
        /// </summary>
        [Input("ompAdminDistanceIpv4")]
        public Input<int>? OmpAdminDistanceIpv4 { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ompAdminDistanceIpv4Variable")]
        public Input<string>? OmpAdminDistanceIpv4Variable { get; set; }

        /// <summary>
        /// omp-admin-distance-ipv6
        ///   - Range: `1`-`255`
        /// </summary>
        [Input("ompAdminDistanceIpv6")]
        public Input<int>? OmpAdminDistanceIpv6 { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("ompAdminDistanceIpv6Variable")]
        public Input<string>? OmpAdminDistanceIpv6Variable { get; set; }

        /// <summary>
        /// Set Overlay AS number &lt;1..4294967295&gt; or &lt;XX.YY&gt;
        ///   - Range: `1`-`4294967295`
        /// </summary>
        [Input("overlayAs")]
        public Input<int>? OverlayAs { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("overlayAsVariable")]
        public Input<string>? OverlayAsVariable { get; set; }

        /// <summary>
        /// Set number of TLOC routes advertised between vSmart and vEdge
        ///   - Range: `1`-`16`
        ///   - Default value: `4`
        /// </summary>
        [Input("sendPathLimit")]
        public Input<int>? SendPathLimit { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("sendPathLimitVariable")]
        public Input<string>? SendPathLimitVariable { get; set; }

        /// <summary>
        /// Enable or disable OMP
        ///   - Default value: `False`
        /// </summary>
        [Input("shutdown")]
        public Input<bool>? Shutdown { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("shutdownVariable")]
        public Input<string>? ShutdownVariable { get; set; }

        /// <summary>
        /// The template type
        /// </summary>
        [Input("templateType")]
        public Input<string>? TemplateType { get; set; }

        /// <summary>
        /// Transport gateway path computation
        ///   - Choices: `Prefer`, `ecmp-with-direct-path`
        /// </summary>
        [Input("transportGateway")]
        public Input<string>? TransportGateway { get; set; }

        /// <summary>
        /// Variable name
        /// </summary>
        [Input("transportGatewayVariable")]
        public Input<string>? TransportGatewayVariable { get; set; }

        /// <summary>
        /// The version of the feature template
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public CiscoOmpFeatureTemplateState()
        {
        }
        public static new CiscoOmpFeatureTemplateState Empty => new CiscoOmpFeatureTemplateState();
    }
}
