// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetEigrpFeatureTemplate
    {
        /// <summary>
        /// This data source can read the eigrp feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetEigrpFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEigrpFeatureTemplateResult> InvokeAsync(GetEigrpFeatureTemplateArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEigrpFeatureTemplateResult>("sdwan:index/getEigrpFeatureTemplate:getEigrpFeatureTemplate", args ?? new GetEigrpFeatureTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the eigrp feature template.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetEigrpFeatureTemplate.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEigrpFeatureTemplateResult> Invoke(GetEigrpFeatureTemplateInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEigrpFeatureTemplateResult>("sdwan:index/getEigrpFeatureTemplate:getEigrpFeatureTemplate", args ?? new GetEigrpFeatureTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEigrpFeatureTemplateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetEigrpFeatureTemplateArgs()
        {
        }
        public static new GetEigrpFeatureTemplateArgs Empty => new GetEigrpFeatureTemplateArgs();
    }

    public sealed class GetEigrpFeatureTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the feature template
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the feature template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetEigrpFeatureTemplateInvokeArgs()
        {
        }
        public static new GetEigrpFeatureTemplateInvokeArgs Empty => new GetEigrpFeatureTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetEigrpFeatureTemplateResult
    {
        /// <summary>
        /// Set EIGRP address family
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEigrpFeatureTemplateAddressFamilyResult> AddressFamilies;
        /// <summary>
        /// Set autonomous system ID \n\n
        /// </summary>
        public readonly int AsNumber;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AsNumberVariable;
        /// <summary>
        /// Set EIGRP router authentication type
        /// </summary>
        public readonly string AuthenticationType;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string AuthenticationTypeVariable;
        /// <summary>
        /// The description of the feature template
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// List of supported device types
        /// </summary>
        public readonly ImmutableArray<string> DeviceTypes;
        /// <summary>
        /// Selective route download
        /// </summary>
        public readonly bool Filter;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string FilterVariable;
        /// <summary>
        /// Set EIGRP hello interval
        /// </summary>
        public readonly int HelloInterval;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string HelloIntervalVariable;
        /// <summary>
        /// Set hmac-sha-256 authentication key
        /// </summary>
        public readonly string HmacAuthenticationKey;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string HmacAuthenticationKeyVariable;
        /// <summary>
        /// Set EIGRP hold time
        /// </summary>
        public readonly int HoldTime;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string HoldTimeVariable;
        /// <summary>
        /// The id of the feature template
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Configure IPv4 Static Routes
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEigrpFeatureTemplateInterfaceResult> Interfaces;
        /// <summary>
        /// Set keychain name
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEigrpFeatureTemplateKeyResult> Keys;
        /// <summary>
        /// The name of the feature template
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Configure policy to apply to prefixes received from EIGRP neighbor
        /// </summary>
        public readonly string RoutePolicyName;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string RoutePolicyNameVariable;
        /// <summary>
        /// The template type
        /// </summary>
        public readonly string TemplateType;
        /// <summary>
        /// The version of the feature template
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetEigrpFeatureTemplateResult(
            ImmutableArray<Outputs.GetEigrpFeatureTemplateAddressFamilyResult> addressFamilies,

            int asNumber,

            string asNumberVariable,

            string authenticationType,

            string authenticationTypeVariable,

            string description,

            ImmutableArray<string> deviceTypes,

            bool filter,

            string filterVariable,

            int helloInterval,

            string helloIntervalVariable,

            string hmacAuthenticationKey,

            string hmacAuthenticationKeyVariable,

            int holdTime,

            string holdTimeVariable,

            string id,

            ImmutableArray<Outputs.GetEigrpFeatureTemplateInterfaceResult> interfaces,

            ImmutableArray<Outputs.GetEigrpFeatureTemplateKeyResult> keys,

            string name,

            string routePolicyName,

            string routePolicyNameVariable,

            string templateType,

            int version)
        {
            AddressFamilies = addressFamilies;
            AsNumber = asNumber;
            AsNumberVariable = asNumberVariable;
            AuthenticationType = authenticationType;
            AuthenticationTypeVariable = authenticationTypeVariable;
            Description = description;
            DeviceTypes = deviceTypes;
            Filter = filter;
            FilterVariable = filterVariable;
            HelloInterval = helloInterval;
            HelloIntervalVariable = helloIntervalVariable;
            HmacAuthenticationKey = hmacAuthenticationKey;
            HmacAuthenticationKeyVariable = hmacAuthenticationKeyVariable;
            HoldTime = holdTime;
            HoldTimeVariable = holdTimeVariable;
            Id = id;
            Interfaces = interfaces;
            Keys = keys;
            Name = name;
            RoutePolicyName = routePolicyName;
            RoutePolicyNameVariable = routePolicyNameVariable;
            TemplateType = templateType;
            Version = version;
        }
    }
}
