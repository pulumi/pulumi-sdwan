// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    /// <summary>
    /// This resource can manage a Intrusion Prevention Policy Definition .
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import sdwan:index/intrusionPreventionPolicyDefinition:IntrusionPreventionPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
    /// ```
    /// </summary>
    [SdwanResourceType("sdwan:index/intrusionPreventionPolicyDefinition:IntrusionPreventionPolicyDefinition")]
    public partial class IntrusionPreventionPolicyDefinition : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Custom signature
        /// </summary>
        [Output("customSignature")]
        public Output<bool?> CustomSignature { get; private set; } = null!;

        /// <summary>
        /// The description of the policy definition
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The inspection mode - Choices: `protection`, `detection`
        /// </summary>
        [Output("inspectionMode")]
        public Output<string?> InspectionMode { get; private set; } = null!;

        /// <summary>
        /// IPS signature list ID
        /// </summary>
        [Output("ipsSignatureListId")]
        public Output<string?> IpsSignatureListId { get; private set; } = null!;

        /// <summary>
        /// IPS signature list version
        /// </summary>
        [Output("ipsSignatureListVersion")]
        public Output<int?> IpsSignatureListVersion { get; private set; } = null!;

        /// <summary>
        /// Log level - Choices: `emergency`, `alert`, `critical`, `error`, `warning`, `notice`, `info`, `debug`
        /// </summary>
        [Output("logLevel")]
        public Output<string?> LogLevel { get; private set; } = null!;

        [Output("loggings")]
        public Output<ImmutableArray<Outputs.IntrusionPreventionPolicyDefinitionLogging>> Loggings { get; private set; } = null!;

        /// <summary>
        /// The policy mode - Choices: `security`, `unified`
        /// </summary>
        [Output("mode")]
        public Output<string?> Mode { get; private set; } = null!;

        /// <summary>
        /// The name of the policy definition
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Signature set - Choices: `balanced`, `connectivity`, `security`
        /// </summary>
        [Output("signatureSet")]
        public Output<string?> SignatureSet { get; private set; } = null!;

        /// <summary>
        /// List of VPN IDs
        /// </summary>
        [Output("targetVpns")]
        public Output<ImmutableArray<string>> TargetVpns { get; private set; } = null!;

        /// <summary>
        /// The version of the object
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a IntrusionPreventionPolicyDefinition resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IntrusionPreventionPolicyDefinition(string name, IntrusionPreventionPolicyDefinitionArgs args, CustomResourceOptions? options = null)
            : base("sdwan:index/intrusionPreventionPolicyDefinition:IntrusionPreventionPolicyDefinition", name, args ?? new IntrusionPreventionPolicyDefinitionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IntrusionPreventionPolicyDefinition(string name, Input<string> id, IntrusionPreventionPolicyDefinitionState? state = null, CustomResourceOptions? options = null)
            : base("sdwan:index/intrusionPreventionPolicyDefinition:IntrusionPreventionPolicyDefinition", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IntrusionPreventionPolicyDefinition resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IntrusionPreventionPolicyDefinition Get(string name, Input<string> id, IntrusionPreventionPolicyDefinitionState? state = null, CustomResourceOptions? options = null)
        {
            return new IntrusionPreventionPolicyDefinition(name, id, state, options);
        }
    }

    public sealed class IntrusionPreventionPolicyDefinitionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom signature
        /// </summary>
        [Input("customSignature")]
        public Input<bool>? CustomSignature { get; set; }

        /// <summary>
        /// The description of the policy definition
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// The inspection mode - Choices: `protection`, `detection`
        /// </summary>
        [Input("inspectionMode")]
        public Input<string>? InspectionMode { get; set; }

        /// <summary>
        /// IPS signature list ID
        /// </summary>
        [Input("ipsSignatureListId")]
        public Input<string>? IpsSignatureListId { get; set; }

        /// <summary>
        /// IPS signature list version
        /// </summary>
        [Input("ipsSignatureListVersion")]
        public Input<int>? IpsSignatureListVersion { get; set; }

        /// <summary>
        /// Log level - Choices: `emergency`, `alert`, `critical`, `error`, `warning`, `notice`, `info`, `debug`
        /// </summary>
        [Input("logLevel")]
        public Input<string>? LogLevel { get; set; }

        [Input("loggings")]
        private InputList<Inputs.IntrusionPreventionPolicyDefinitionLoggingArgs>? _loggings;
        public InputList<Inputs.IntrusionPreventionPolicyDefinitionLoggingArgs> Loggings
        {
            get => _loggings ?? (_loggings = new InputList<Inputs.IntrusionPreventionPolicyDefinitionLoggingArgs>());
            set => _loggings = value;
        }

        /// <summary>
        /// The policy mode - Choices: `security`, `unified`
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// The name of the policy definition
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Signature set - Choices: `balanced`, `connectivity`, `security`
        /// </summary>
        [Input("signatureSet")]
        public Input<string>? SignatureSet { get; set; }

        [Input("targetVpns")]
        private InputList<string>? _targetVpns;

        /// <summary>
        /// List of VPN IDs
        /// </summary>
        public InputList<string> TargetVpns
        {
            get => _targetVpns ?? (_targetVpns = new InputList<string>());
            set => _targetVpns = value;
        }

        public IntrusionPreventionPolicyDefinitionArgs()
        {
        }
        public static new IntrusionPreventionPolicyDefinitionArgs Empty => new IntrusionPreventionPolicyDefinitionArgs();
    }

    public sealed class IntrusionPreventionPolicyDefinitionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom signature
        /// </summary>
        [Input("customSignature")]
        public Input<bool>? CustomSignature { get; set; }

        /// <summary>
        /// The description of the policy definition
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The inspection mode - Choices: `protection`, `detection`
        /// </summary>
        [Input("inspectionMode")]
        public Input<string>? InspectionMode { get; set; }

        /// <summary>
        /// IPS signature list ID
        /// </summary>
        [Input("ipsSignatureListId")]
        public Input<string>? IpsSignatureListId { get; set; }

        /// <summary>
        /// IPS signature list version
        /// </summary>
        [Input("ipsSignatureListVersion")]
        public Input<int>? IpsSignatureListVersion { get; set; }

        /// <summary>
        /// Log level - Choices: `emergency`, `alert`, `critical`, `error`, `warning`, `notice`, `info`, `debug`
        /// </summary>
        [Input("logLevel")]
        public Input<string>? LogLevel { get; set; }

        [Input("loggings")]
        private InputList<Inputs.IntrusionPreventionPolicyDefinitionLoggingGetArgs>? _loggings;
        public InputList<Inputs.IntrusionPreventionPolicyDefinitionLoggingGetArgs> Loggings
        {
            get => _loggings ?? (_loggings = new InputList<Inputs.IntrusionPreventionPolicyDefinitionLoggingGetArgs>());
            set => _loggings = value;
        }

        /// <summary>
        /// The policy mode - Choices: `security`, `unified`
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// The name of the policy definition
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Signature set - Choices: `balanced`, `connectivity`, `security`
        /// </summary>
        [Input("signatureSet")]
        public Input<string>? SignatureSet { get; set; }

        [Input("targetVpns")]
        private InputList<string>? _targetVpns;

        /// <summary>
        /// List of VPN IDs
        /// </summary>
        public InputList<string> TargetVpns
        {
            get => _targetVpns ?? (_targetVpns = new InputList<string>());
            set => _targetVpns = value;
        }

        /// <summary>
        /// The version of the object
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public IntrusionPreventionPolicyDefinitionState()
        {
        }
        public static new IntrusionPreventionPolicyDefinitionState Empty => new IntrusionPreventionPolicyDefinitionState();
    }
}
