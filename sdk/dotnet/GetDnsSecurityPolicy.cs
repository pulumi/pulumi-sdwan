// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetDnsSecurityPolicy
    {
        /// <summary>
        /// This data source can read the DNS Security Policy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetDnsSecurityPolicy.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDnsSecurityPolicyResult> InvokeAsync(GetDnsSecurityPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDnsSecurityPolicyResult>("sdwan:index/getDnsSecurityPolicy:getDnsSecurityPolicy", args ?? new GetDnsSecurityPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the DNS Security Policy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetDnsSecurityPolicy.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDnsSecurityPolicyResult> Invoke(GetDnsSecurityPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDnsSecurityPolicyResult>("sdwan:index/getDnsSecurityPolicy:getDnsSecurityPolicy", args ?? new GetDnsSecurityPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the DNS Security Policy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetDnsSecurityPolicy.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDnsSecurityPolicyResult> Invoke(GetDnsSecurityPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDnsSecurityPolicyResult>("sdwan:index/getDnsSecurityPolicy:getDnsSecurityPolicy", args ?? new GetDnsSecurityPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDnsSecurityPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public string FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Policy
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetDnsSecurityPolicyArgs()
        {
        }
        public static new GetDnsSecurityPolicyArgs Empty => new GetDnsSecurityPolicyArgs();
    }

    public sealed class GetDnsSecurityPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the Policy
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetDnsSecurityPolicyInvokeArgs()
        {
        }
        public static new GetDnsSecurityPolicyInvokeArgs Empty => new GetDnsSecurityPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetDnsSecurityPolicyResult
    {
        /// <summary>
        /// String that is a number that corresponds to Umbrella Multi Org, can be empty if not using Umbrella Multi Org
        /// </summary>
        public readonly string ChildOrgId;
        /// <summary>
        /// The description of the Policy
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// If matchAllVpn is false, this field is only true if at least one of the targetVpns entires contains an umbrellaDefault true
        /// </summary>
        public readonly bool DnsCrypt;
        /// <summary>
        /// Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
        /// </summary>
        public readonly string DnsServerIp;
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        public readonly string FeatureProfileId;
        /// <summary>
        /// The id of the Policy
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
        /// </summary>
        public readonly bool LocalDomainBypassEnabled;
        public readonly string LocalDomainBypassListId;
        /// <summary>
        /// If this is true, there shouldn't be a targetVpns field, if false then targetVpns field should be there
        /// </summary>
        public readonly bool MatchAllVpn;
        /// <summary>
        /// The name of the Policy
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Will be under data field only if matchAllVpn is false, if matchAllVpn is true field should not be in payload
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDnsSecurityPolicyTargetVpnResult> TargetVpns;
        /// <summary>
        /// Field will only be under data field if matchAllVpn is true, otherwise field will be under targetVpns and set per entry
        /// </summary>
        public readonly bool UmbrellaDefault;
        /// <summary>
        /// The version of the Policy
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetDnsSecurityPolicyResult(
            string childOrgId,

            string description,

            bool dnsCrypt,

            string dnsServerIp,

            string featureProfileId,

            string id,

            bool localDomainBypassEnabled,

            string localDomainBypassListId,

            bool matchAllVpn,

            string name,

            ImmutableArray<Outputs.GetDnsSecurityPolicyTargetVpnResult> targetVpns,

            bool umbrellaDefault,

            int version)
        {
            ChildOrgId = childOrgId;
            Description = description;
            DnsCrypt = dnsCrypt;
            DnsServerIp = dnsServerIp;
            FeatureProfileId = featureProfileId;
            Id = id;
            LocalDomainBypassEnabled = localDomainBypassEnabled;
            LocalDomainBypassListId = localDomainBypassListId;
            MatchAllVpn = matchAllVpn;
            Name = name;
            TargetVpns = targetVpns;
            UmbrellaDefault = umbrellaDefault;
            Version = version;
        }
    }
}
