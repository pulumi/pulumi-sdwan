// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sdwan
{
    public static class GetSystemBfdProfileParcel
    {
        /// <summary>
        /// This data source can read the System BFD profile parcel.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetSystemBfdProfileParcel.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSystemBfdProfileParcelResult> InvokeAsync(GetSystemBfdProfileParcelArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSystemBfdProfileParcelResult>("sdwan:index/getSystemBfdProfileParcel:getSystemBfdProfileParcel", args ?? new GetSystemBfdProfileParcelArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the System BFD profile parcel.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sdwan = Pulumi.Sdwan;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Sdwan.GetSystemBfdProfileParcel.Invoke(new()
        ///     {
        ///         Id = "f6b2c44c-693c-4763-b010-895aa3d236bd",
        ///         FeatureProfileId = "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSystemBfdProfileParcelResult> Invoke(GetSystemBfdProfileParcelInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSystemBfdProfileParcelResult>("sdwan:index/getSystemBfdProfileParcel:getSystemBfdProfileParcel", args ?? new GetSystemBfdProfileParcelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSystemBfdProfileParcelArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public string FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the profile parcel
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetSystemBfdProfileParcelArgs()
        {
        }
        public static new GetSystemBfdProfileParcelArgs Empty => new GetSystemBfdProfileParcelArgs();
    }

    public sealed class GetSystemBfdProfileParcelInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        [Input("featureProfileId", required: true)]
        public Input<string> FeatureProfileId { get; set; } = null!;

        /// <summary>
        /// The id of the profile parcel
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetSystemBfdProfileParcelInvokeArgs()
        {
        }
        public static new GetSystemBfdProfileParcelInvokeArgs Empty => new GetSystemBfdProfileParcelInvokeArgs();
    }


    [OutputType]
    public sealed class GetSystemBfdProfileParcelResult
    {
        /// <summary>
        /// Set color that identifies the WAN transport tunnel
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSystemBfdProfileParcelColorResult> Colors;
        public readonly int DefaultDscp;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string DefaultDscpVariable;
        /// <summary>
        /// The description of the profile parcel
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Feature Profile ID
        /// </summary>
        public readonly string FeatureProfileId;
        /// <summary>
        /// The id of the profile parcel
        /// </summary>
        public readonly string Id;
        public readonly int Multiplier;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string MultiplierVariable;
        /// <summary>
        /// The name of the profile parcel
        /// </summary>
        public readonly string Name;
        public readonly int PollInterval;
        /// <summary>
        /// Variable name
        /// </summary>
        public readonly string PollIntervalVariable;
        /// <summary>
        /// The version of the profile parcel
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetSystemBfdProfileParcelResult(
            ImmutableArray<Outputs.GetSystemBfdProfileParcelColorResult> colors,

            int defaultDscp,

            string defaultDscpVariable,

            string description,

            string featureProfileId,

            string id,

            int multiplier,

            string multiplierVariable,

            string name,

            int pollInterval,

            string pollIntervalVariable,

            int version)
        {
            Colors = colors;
            DefaultDscp = defaultDscp;
            DefaultDscpVariable = defaultDscpVariable;
            Description = description;
            FeatureProfileId = featureProfileId;
            Id = id;
            Multiplier = multiplier;
            MultiplierVariable = multiplierVariable;
            Name = name;
            PollInterval = pollInterval;
            PollIntervalVariable = pollIntervalVariable;
            Version = version;
        }
    }
}
