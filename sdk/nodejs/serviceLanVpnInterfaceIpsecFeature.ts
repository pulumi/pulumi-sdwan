// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource can manage a Service LAN VPN Interface IPSec Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = new sdwan.ServiceLanVpnInterfaceIpsecFeature("example", {
 *     name: "Example",
 *     description: "My Example",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 *     serviceLanVpnFeatureId: "140331f6-5418-4755-a059-13c77eb96037",
 *     interfaceName: "ipsec987",
 *     shutdown: true,
 *     interfaceDescription: "ipsec987",
 *     ipv4Address: "9.7.5.4",
 *     ipv4SubnetMask: "255.255.255.0",
 *     tunnelSourceIpv4Address: "1.3.5.88",
 *     tunnelSourceIpv4SubnetMask: "255.255.255.0",
 *     tunnelSourceInterface: "GigabitEthernet8",
 *     tunnelDestinationIpv4Address: "2.55.67.99",
 *     tunnelDestinationIpv4SubnetMask: "255.255.255.0",
 *     applicationTunnelType: "none",
 *     tcpMss: 1460,
 *     clearDontFragment: false,
 *     ipMtu: 1500,
 *     dpdInterval: 10,
 *     dpdRetries: 3,
 *     ikePresharedKey: "123",
 *     ikeVersion: 1,
 *     ikeIntegrityProtocol: "main",
 *     ikeRekeyInterval: 14400,
 *     ikeCiphersuite: "aes256-cbc-sha1",
 *     ikeDiffieHellmanGroup: "16",
 *     ikeIdLocalEndPoint: "xxx",
 *     ikeIdRemoteEndPoint: "xxx",
 *     ipsecRekeyInterval: 3600,
 *     ipsecReplayWindow: 512,
 *     ipsecCiphersuite: "aes256-gcm",
 *     perfectForwardSecrecy: "group-16",
 *     tunnelRouteVia: "2222",
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * Expected import identifier with the format: "service_lan_vpn_interface_ipsec_feature_id,feature_profile_id,service_lan_vpn_feature_id"
 *
 * ```sh
 * $ pulumi import sdwan:index/serviceLanVpnInterfaceIpsecFeature:ServiceLanVpnInterfaceIpsecFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037"
 * ```
 */
export class ServiceLanVpnInterfaceIpsecFeature extends pulumi.CustomResource {
    /**
     * Get an existing ServiceLanVpnInterfaceIpsecFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceLanVpnInterfaceIpsecFeatureState, opts?: pulumi.CustomResourceOptions): ServiceLanVpnInterfaceIpsecFeature {
        return new ServiceLanVpnInterfaceIpsecFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/serviceLanVpnInterfaceIpsecFeature:ServiceLanVpnInterfaceIpsecFeature';

    /**
     * Returns true if the given object is an instance of ServiceLanVpnInterfaceIpsecFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceLanVpnInterfaceIpsecFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceLanVpnInterfaceIpsecFeature.__pulumiType;
    }

    /**
     * Enable Application Tunnel Type
     *   - Choices: `none`, `sig`
     */
    declare public readonly applicationTunnelType: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly applicationTunnelTypeVariable: pulumi.Output<string | undefined>;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
     *   - Default value: `false`
     */
    declare public readonly clearDontFragment: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly clearDontFragmentVariable: pulumi.Output<string | undefined>;
    /**
     * The description of the Feature
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * IKE keepalive interval (seconds)
     *   - Range: `10`-`3600`
     *   - Default value: `10`
     */
    declare public readonly dpdInterval: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly dpdIntervalVariable: pulumi.Output<string | undefined>;
    /**
     * IKE keepalive retries
     *   - Range: `2`-`60`
     *   - Default value: `3`
     */
    declare public readonly dpdRetries: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly dpdRetriesVariable: pulumi.Output<string | undefined>;
    /**
     * Feature Profile ID
     */
    declare public readonly featureProfileId: pulumi.Output<string>;
    /**
     * IKE identity the IKE preshared secret belongs to
     *   - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`, `aes128-cbc-sha2`
     *   - Default value: `aes256-cbc-sha1`
     */
    declare public readonly ikeCiphersuite: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ikeCiphersuiteVariable: pulumi.Output<string | undefined>;
    /**
     * IKE Diffie Hellman Groups
     *   - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24`
     *   - Default value: `16`
     */
    declare public readonly ikeDiffieHellmanGroup: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ikeDiffieHellmanGroupVariable: pulumi.Output<string | undefined>;
    /**
     * IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
     */
    declare public readonly ikeIdLocalEndPoint: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ikeIdLocalEndPointVariable: pulumi.Output<string | undefined>;
    /**
     * IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
     */
    declare public readonly ikeIdRemoteEndPoint: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ikeIdRemoteEndPointVariable: pulumi.Output<string | undefined>;
    /**
     * IKE integrity protocol
     *   - Choices: `main`, `aggressive`
     *   - Default value: `main`
     */
    declare public readonly ikeIntegrityProtocol: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ikeIntegrityProtocolVariable: pulumi.Output<string | undefined>;
    /**
     * Use preshared key to authenticate IKE peer
     */
    declare public readonly ikePresharedKey: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ikePresharedKeyVariable: pulumi.Output<string | undefined>;
    /**
     * IKE rekey interval <60..86400> seconds
     *   - Range: `60`-`86400`
     *   - Default value: `14400`
     */
    declare public readonly ikeRekeyInterval: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly ikeRekeyIntervalVariable: pulumi.Output<string | undefined>;
    /**
     * IKE Version <1..2>
     *   - Range: `1`-`2`
     *   - Default value: `1`
     */
    declare public readonly ikeVersion: pulumi.Output<number | undefined>;
    /**
     * Interface description
     */
    declare public readonly interfaceDescription: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly interfaceDescriptionVariable: pulumi.Output<string | undefined>;
    /**
     * Interface name: IPsec when present
     */
    declare public readonly interfaceName: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly interfaceNameVariable: pulumi.Output<string | undefined>;
    /**
     * Interface MTU <68..9216>, in bytes
     *   - Range: `68`-`9216`
     *   - Default value: `1500`
     */
    declare public readonly ipMtu: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipMtuVariable: pulumi.Output<string | undefined>;
    /**
     * IPsec(ESP) encryption and integrity protocol
     *   - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`, `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512`
     *   - Default value: `aes256-gcm`
     */
    declare public readonly ipsecCiphersuite: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipsecCiphersuiteVariable: pulumi.Output<string | undefined>;
    /**
     * IPsec rekey interval <300..1209600> seconds
     *   - Range: `120`-`2592000`
     *   - Default value: `3600`
     */
    declare public readonly ipsecRekeyInterval: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipsecRekeyIntervalVariable: pulumi.Output<string | undefined>;
    /**
     * Replay window size 32..8192 (must be a power of 2)
     *   - Range: `64`-`4096`
     *   - Default value: `512`
     */
    declare public readonly ipsecReplayWindow: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipsecReplayWindowVariable: pulumi.Output<string | undefined>;
    declare public readonly ipv4Address: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipv4AddressVariable: pulumi.Output<string | undefined>;
    /**
     * - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    declare public readonly ipv4SubnetMask: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipv4SubnetMaskVariable: pulumi.Output<string | undefined>;
    /**
     * The name of the Feature
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * IPsec perfect forward secrecy settings
     *   - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`, `group-19`, `group-20`, `group-21`, `group-24`, `none`
     *   - Default value: `group-16`
     */
    declare public readonly perfectForwardSecrecy: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly perfectForwardSecrecyVariable: pulumi.Output<string | undefined>;
    /**
     * Service LAN VPN Feature ID
     */
    declare public readonly serviceLanVpnFeatureId: pulumi.Output<string>;
    /**
     * Administrative state
     *   - Default value: `true`
     */
    declare public readonly shutdown: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly shutdownVariable: pulumi.Output<string | undefined>;
    /**
     * TCP MSS on SYN packets, in bytes
     *   - Range: `500`-`1460`
     */
    declare public readonly tcpMss: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly tcpMssVariable: pulumi.Output<string | undefined>;
    /**
     * Enable tracker for this interface
     */
    declare public readonly trackerId: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly trackerIdVariable: pulumi.Output<string | undefined>;
    declare public readonly tunnelDestinationIpv4Address: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly tunnelDestinationIpv4AddressVariable: pulumi.Output<string | undefined>;
    /**
     * - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    declare public readonly tunnelDestinationIpv4SubnetMask: pulumi.Output<string>;
    /**
     * Variable name
     */
    declare public readonly tunnelDestinationIpv4SubnetMaskVariable: pulumi.Output<string | undefined>;
    /**
     * <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
     */
    declare public readonly tunnelRouteVia: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly tunnelRouteViaVariable: pulumi.Output<string | undefined>;
    /**
     * <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
     */
    declare public readonly tunnelSourceInterface: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly tunnelSourceInterfaceVariable: pulumi.Output<string | undefined>;
    declare public readonly tunnelSourceIpv4Address: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly tunnelSourceIpv4AddressVariable: pulumi.Output<string | undefined>;
    /**
     * - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    declare public readonly tunnelSourceIpv4SubnetMask: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly tunnelSourceIpv4SubnetMaskVariable: pulumi.Output<string | undefined>;
    /**
     * The version of the Feature
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;

    /**
     * Create a ServiceLanVpnInterfaceIpsecFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceLanVpnInterfaceIpsecFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceLanVpnInterfaceIpsecFeatureArgs | ServiceLanVpnInterfaceIpsecFeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceLanVpnInterfaceIpsecFeatureState | undefined;
            resourceInputs["applicationTunnelType"] = state?.applicationTunnelType;
            resourceInputs["applicationTunnelTypeVariable"] = state?.applicationTunnelTypeVariable;
            resourceInputs["clearDontFragment"] = state?.clearDontFragment;
            resourceInputs["clearDontFragmentVariable"] = state?.clearDontFragmentVariable;
            resourceInputs["description"] = state?.description;
            resourceInputs["dpdInterval"] = state?.dpdInterval;
            resourceInputs["dpdIntervalVariable"] = state?.dpdIntervalVariable;
            resourceInputs["dpdRetries"] = state?.dpdRetries;
            resourceInputs["dpdRetriesVariable"] = state?.dpdRetriesVariable;
            resourceInputs["featureProfileId"] = state?.featureProfileId;
            resourceInputs["ikeCiphersuite"] = state?.ikeCiphersuite;
            resourceInputs["ikeCiphersuiteVariable"] = state?.ikeCiphersuiteVariable;
            resourceInputs["ikeDiffieHellmanGroup"] = state?.ikeDiffieHellmanGroup;
            resourceInputs["ikeDiffieHellmanGroupVariable"] = state?.ikeDiffieHellmanGroupVariable;
            resourceInputs["ikeIdLocalEndPoint"] = state?.ikeIdLocalEndPoint;
            resourceInputs["ikeIdLocalEndPointVariable"] = state?.ikeIdLocalEndPointVariable;
            resourceInputs["ikeIdRemoteEndPoint"] = state?.ikeIdRemoteEndPoint;
            resourceInputs["ikeIdRemoteEndPointVariable"] = state?.ikeIdRemoteEndPointVariable;
            resourceInputs["ikeIntegrityProtocol"] = state?.ikeIntegrityProtocol;
            resourceInputs["ikeIntegrityProtocolVariable"] = state?.ikeIntegrityProtocolVariable;
            resourceInputs["ikePresharedKey"] = state?.ikePresharedKey;
            resourceInputs["ikePresharedKeyVariable"] = state?.ikePresharedKeyVariable;
            resourceInputs["ikeRekeyInterval"] = state?.ikeRekeyInterval;
            resourceInputs["ikeRekeyIntervalVariable"] = state?.ikeRekeyIntervalVariable;
            resourceInputs["ikeVersion"] = state?.ikeVersion;
            resourceInputs["interfaceDescription"] = state?.interfaceDescription;
            resourceInputs["interfaceDescriptionVariable"] = state?.interfaceDescriptionVariable;
            resourceInputs["interfaceName"] = state?.interfaceName;
            resourceInputs["interfaceNameVariable"] = state?.interfaceNameVariable;
            resourceInputs["ipMtu"] = state?.ipMtu;
            resourceInputs["ipMtuVariable"] = state?.ipMtuVariable;
            resourceInputs["ipsecCiphersuite"] = state?.ipsecCiphersuite;
            resourceInputs["ipsecCiphersuiteVariable"] = state?.ipsecCiphersuiteVariable;
            resourceInputs["ipsecRekeyInterval"] = state?.ipsecRekeyInterval;
            resourceInputs["ipsecRekeyIntervalVariable"] = state?.ipsecRekeyIntervalVariable;
            resourceInputs["ipsecReplayWindow"] = state?.ipsecReplayWindow;
            resourceInputs["ipsecReplayWindowVariable"] = state?.ipsecReplayWindowVariable;
            resourceInputs["ipv4Address"] = state?.ipv4Address;
            resourceInputs["ipv4AddressVariable"] = state?.ipv4AddressVariable;
            resourceInputs["ipv4SubnetMask"] = state?.ipv4SubnetMask;
            resourceInputs["ipv4SubnetMaskVariable"] = state?.ipv4SubnetMaskVariable;
            resourceInputs["name"] = state?.name;
            resourceInputs["perfectForwardSecrecy"] = state?.perfectForwardSecrecy;
            resourceInputs["perfectForwardSecrecyVariable"] = state?.perfectForwardSecrecyVariable;
            resourceInputs["serviceLanVpnFeatureId"] = state?.serviceLanVpnFeatureId;
            resourceInputs["shutdown"] = state?.shutdown;
            resourceInputs["shutdownVariable"] = state?.shutdownVariable;
            resourceInputs["tcpMss"] = state?.tcpMss;
            resourceInputs["tcpMssVariable"] = state?.tcpMssVariable;
            resourceInputs["trackerId"] = state?.trackerId;
            resourceInputs["trackerIdVariable"] = state?.trackerIdVariable;
            resourceInputs["tunnelDestinationIpv4Address"] = state?.tunnelDestinationIpv4Address;
            resourceInputs["tunnelDestinationIpv4AddressVariable"] = state?.tunnelDestinationIpv4AddressVariable;
            resourceInputs["tunnelDestinationIpv4SubnetMask"] = state?.tunnelDestinationIpv4SubnetMask;
            resourceInputs["tunnelDestinationIpv4SubnetMaskVariable"] = state?.tunnelDestinationIpv4SubnetMaskVariable;
            resourceInputs["tunnelRouteVia"] = state?.tunnelRouteVia;
            resourceInputs["tunnelRouteViaVariable"] = state?.tunnelRouteViaVariable;
            resourceInputs["tunnelSourceInterface"] = state?.tunnelSourceInterface;
            resourceInputs["tunnelSourceInterfaceVariable"] = state?.tunnelSourceInterfaceVariable;
            resourceInputs["tunnelSourceIpv4Address"] = state?.tunnelSourceIpv4Address;
            resourceInputs["tunnelSourceIpv4AddressVariable"] = state?.tunnelSourceIpv4AddressVariable;
            resourceInputs["tunnelSourceIpv4SubnetMask"] = state?.tunnelSourceIpv4SubnetMask;
            resourceInputs["tunnelSourceIpv4SubnetMaskVariable"] = state?.tunnelSourceIpv4SubnetMaskVariable;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as ServiceLanVpnInterfaceIpsecFeatureArgs | undefined;
            if (args?.featureProfileId === undefined && !opts.urn) {
                throw new Error("Missing required property 'featureProfileId'");
            }
            if (args?.serviceLanVpnFeatureId === undefined && !opts.urn) {
                throw new Error("Missing required property 'serviceLanVpnFeatureId'");
            }
            if (args?.tunnelDestinationIpv4SubnetMask === undefined && !opts.urn) {
                throw new Error("Missing required property 'tunnelDestinationIpv4SubnetMask'");
            }
            resourceInputs["applicationTunnelType"] = args?.applicationTunnelType;
            resourceInputs["applicationTunnelTypeVariable"] = args?.applicationTunnelTypeVariable;
            resourceInputs["clearDontFragment"] = args?.clearDontFragment;
            resourceInputs["clearDontFragmentVariable"] = args?.clearDontFragmentVariable;
            resourceInputs["description"] = args?.description;
            resourceInputs["dpdInterval"] = args?.dpdInterval;
            resourceInputs["dpdIntervalVariable"] = args?.dpdIntervalVariable;
            resourceInputs["dpdRetries"] = args?.dpdRetries;
            resourceInputs["dpdRetriesVariable"] = args?.dpdRetriesVariable;
            resourceInputs["featureProfileId"] = args?.featureProfileId;
            resourceInputs["ikeCiphersuite"] = args?.ikeCiphersuite;
            resourceInputs["ikeCiphersuiteVariable"] = args?.ikeCiphersuiteVariable;
            resourceInputs["ikeDiffieHellmanGroup"] = args?.ikeDiffieHellmanGroup;
            resourceInputs["ikeDiffieHellmanGroupVariable"] = args?.ikeDiffieHellmanGroupVariable;
            resourceInputs["ikeIdLocalEndPoint"] = args?.ikeIdLocalEndPoint;
            resourceInputs["ikeIdLocalEndPointVariable"] = args?.ikeIdLocalEndPointVariable;
            resourceInputs["ikeIdRemoteEndPoint"] = args?.ikeIdRemoteEndPoint;
            resourceInputs["ikeIdRemoteEndPointVariable"] = args?.ikeIdRemoteEndPointVariable;
            resourceInputs["ikeIntegrityProtocol"] = args?.ikeIntegrityProtocol;
            resourceInputs["ikeIntegrityProtocolVariable"] = args?.ikeIntegrityProtocolVariable;
            resourceInputs["ikePresharedKey"] = args?.ikePresharedKey;
            resourceInputs["ikePresharedKeyVariable"] = args?.ikePresharedKeyVariable;
            resourceInputs["ikeRekeyInterval"] = args?.ikeRekeyInterval;
            resourceInputs["ikeRekeyIntervalVariable"] = args?.ikeRekeyIntervalVariable;
            resourceInputs["ikeVersion"] = args?.ikeVersion;
            resourceInputs["interfaceDescription"] = args?.interfaceDescription;
            resourceInputs["interfaceDescriptionVariable"] = args?.interfaceDescriptionVariable;
            resourceInputs["interfaceName"] = args?.interfaceName;
            resourceInputs["interfaceNameVariable"] = args?.interfaceNameVariable;
            resourceInputs["ipMtu"] = args?.ipMtu;
            resourceInputs["ipMtuVariable"] = args?.ipMtuVariable;
            resourceInputs["ipsecCiphersuite"] = args?.ipsecCiphersuite;
            resourceInputs["ipsecCiphersuiteVariable"] = args?.ipsecCiphersuiteVariable;
            resourceInputs["ipsecRekeyInterval"] = args?.ipsecRekeyInterval;
            resourceInputs["ipsecRekeyIntervalVariable"] = args?.ipsecRekeyIntervalVariable;
            resourceInputs["ipsecReplayWindow"] = args?.ipsecReplayWindow;
            resourceInputs["ipsecReplayWindowVariable"] = args?.ipsecReplayWindowVariable;
            resourceInputs["ipv4Address"] = args?.ipv4Address;
            resourceInputs["ipv4AddressVariable"] = args?.ipv4AddressVariable;
            resourceInputs["ipv4SubnetMask"] = args?.ipv4SubnetMask;
            resourceInputs["ipv4SubnetMaskVariable"] = args?.ipv4SubnetMaskVariable;
            resourceInputs["name"] = args?.name;
            resourceInputs["perfectForwardSecrecy"] = args?.perfectForwardSecrecy;
            resourceInputs["perfectForwardSecrecyVariable"] = args?.perfectForwardSecrecyVariable;
            resourceInputs["serviceLanVpnFeatureId"] = args?.serviceLanVpnFeatureId;
            resourceInputs["shutdown"] = args?.shutdown;
            resourceInputs["shutdownVariable"] = args?.shutdownVariable;
            resourceInputs["tcpMss"] = args?.tcpMss;
            resourceInputs["tcpMssVariable"] = args?.tcpMssVariable;
            resourceInputs["trackerId"] = args?.trackerId;
            resourceInputs["trackerIdVariable"] = args?.trackerIdVariable;
            resourceInputs["tunnelDestinationIpv4Address"] = args?.tunnelDestinationIpv4Address;
            resourceInputs["tunnelDestinationIpv4AddressVariable"] = args?.tunnelDestinationIpv4AddressVariable;
            resourceInputs["tunnelDestinationIpv4SubnetMask"] = args?.tunnelDestinationIpv4SubnetMask;
            resourceInputs["tunnelDestinationIpv4SubnetMaskVariable"] = args?.tunnelDestinationIpv4SubnetMaskVariable;
            resourceInputs["tunnelRouteVia"] = args?.tunnelRouteVia;
            resourceInputs["tunnelRouteViaVariable"] = args?.tunnelRouteViaVariable;
            resourceInputs["tunnelSourceInterface"] = args?.tunnelSourceInterface;
            resourceInputs["tunnelSourceInterfaceVariable"] = args?.tunnelSourceInterfaceVariable;
            resourceInputs["tunnelSourceIpv4Address"] = args?.tunnelSourceIpv4Address;
            resourceInputs["tunnelSourceIpv4AddressVariable"] = args?.tunnelSourceIpv4AddressVariable;
            resourceInputs["tunnelSourceIpv4SubnetMask"] = args?.tunnelSourceIpv4SubnetMask;
            resourceInputs["tunnelSourceIpv4SubnetMaskVariable"] = args?.tunnelSourceIpv4SubnetMaskVariable;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceLanVpnInterfaceIpsecFeature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceLanVpnInterfaceIpsecFeature resources.
 */
export interface ServiceLanVpnInterfaceIpsecFeatureState {
    /**
     * Enable Application Tunnel Type
     *   - Choices: `none`, `sig`
     */
    applicationTunnelType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    applicationTunnelTypeVariable?: pulumi.Input<string>;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
     *   - Default value: `false`
     */
    clearDontFragment?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    clearDontFragmentVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * IKE keepalive interval (seconds)
     *   - Range: `10`-`3600`
     *   - Default value: `10`
     */
    dpdInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    dpdIntervalVariable?: pulumi.Input<string>;
    /**
     * IKE keepalive retries
     *   - Range: `2`-`60`
     *   - Default value: `3`
     */
    dpdRetries?: pulumi.Input<number>;
    /**
     * Variable name
     */
    dpdRetriesVariable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * IKE identity the IKE preshared secret belongs to
     *   - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`, `aes128-cbc-sha2`
     *   - Default value: `aes256-cbc-sha1`
     */
    ikeCiphersuite?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeCiphersuiteVariable?: pulumi.Input<string>;
    /**
     * IKE Diffie Hellman Groups
     *   - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24`
     *   - Default value: `16`
     */
    ikeDiffieHellmanGroup?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeDiffieHellmanGroupVariable?: pulumi.Input<string>;
    /**
     * IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
     */
    ikeIdLocalEndPoint?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeIdLocalEndPointVariable?: pulumi.Input<string>;
    /**
     * IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
     */
    ikeIdRemoteEndPoint?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeIdRemoteEndPointVariable?: pulumi.Input<string>;
    /**
     * IKE integrity protocol
     *   - Choices: `main`, `aggressive`
     *   - Default value: `main`
     */
    ikeIntegrityProtocol?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeIntegrityProtocolVariable?: pulumi.Input<string>;
    /**
     * Use preshared key to authenticate IKE peer
     */
    ikePresharedKey?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikePresharedKeyVariable?: pulumi.Input<string>;
    /**
     * IKE rekey interval <60..86400> seconds
     *   - Range: `60`-`86400`
     *   - Default value: `14400`
     */
    ikeRekeyInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ikeRekeyIntervalVariable?: pulumi.Input<string>;
    /**
     * IKE Version <1..2>
     *   - Range: `1`-`2`
     *   - Default value: `1`
     */
    ikeVersion?: pulumi.Input<number>;
    /**
     * Interface description
     */
    interfaceDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceDescriptionVariable?: pulumi.Input<string>;
    /**
     * Interface name: IPsec when present
     */
    interfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceNameVariable?: pulumi.Input<string>;
    /**
     * Interface MTU <68..9216>, in bytes
     *   - Range: `68`-`9216`
     *   - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * IPsec(ESP) encryption and integrity protocol
     *   - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`, `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512`
     *   - Default value: `aes256-gcm`
     */
    ipsecCiphersuite?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipsecCiphersuiteVariable?: pulumi.Input<string>;
    /**
     * IPsec rekey interval <300..1209600> seconds
     *   - Range: `120`-`2592000`
     *   - Default value: `3600`
     */
    ipsecRekeyInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipsecRekeyIntervalVariable?: pulumi.Input<string>;
    /**
     * Replay window size 32..8192 (must be a power of 2)
     *   - Range: `64`-`4096`
     *   - Default value: `512`
     */
    ipsecReplayWindow?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipsecReplayWindowVariable?: pulumi.Input<string>;
    ipv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4AddressVariable?: pulumi.Input<string>;
    /**
     * - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    ipv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * IPsec perfect forward secrecy settings
     *   - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`, `group-19`, `group-20`, `group-21`, `group-24`, `none`
     *   - Default value: `group-16`
     */
    perfectForwardSecrecy?: pulumi.Input<string>;
    /**
     * Variable name
     */
    perfectForwardSecrecyVariable?: pulumi.Input<string>;
    /**
     * Service LAN VPN Feature ID
     */
    serviceLanVpnFeatureId?: pulumi.Input<string>;
    /**
     * Administrative state
     *   - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * TCP MSS on SYN packets, in bytes
     *   - Range: `500`-`1460`
     */
    tcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssVariable?: pulumi.Input<string>;
    /**
     * Enable tracker for this interface
     */
    trackerId?: pulumi.Input<string>;
    /**
     * Variable name
     */
    trackerIdVariable?: pulumi.Input<string>;
    tunnelDestinationIpv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelDestinationIpv4AddressVariable?: pulumi.Input<string>;
    /**
     * - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    tunnelDestinationIpv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelDestinationIpv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
     */
    tunnelRouteVia?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelRouteViaVariable?: pulumi.Input<string>;
    /**
     * <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
     */
    tunnelSourceInterface?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelSourceInterfaceVariable?: pulumi.Input<string>;
    tunnelSourceIpv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelSourceIpv4AddressVariable?: pulumi.Input<string>;
    /**
     * - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    tunnelSourceIpv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelSourceIpv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * The version of the Feature
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ServiceLanVpnInterfaceIpsecFeature resource.
 */
export interface ServiceLanVpnInterfaceIpsecFeatureArgs {
    /**
     * Enable Application Tunnel Type
     *   - Choices: `none`, `sig`
     */
    applicationTunnelType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    applicationTunnelTypeVariable?: pulumi.Input<string>;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
     *   - Default value: `false`
     */
    clearDontFragment?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    clearDontFragmentVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * IKE keepalive interval (seconds)
     *   - Range: `10`-`3600`
     *   - Default value: `10`
     */
    dpdInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    dpdIntervalVariable?: pulumi.Input<string>;
    /**
     * IKE keepalive retries
     *   - Range: `2`-`60`
     *   - Default value: `3`
     */
    dpdRetries?: pulumi.Input<number>;
    /**
     * Variable name
     */
    dpdRetriesVariable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * IKE identity the IKE preshared secret belongs to
     *   - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`, `aes128-cbc-sha2`
     *   - Default value: `aes256-cbc-sha1`
     */
    ikeCiphersuite?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeCiphersuiteVariable?: pulumi.Input<string>;
    /**
     * IKE Diffie Hellman Groups
     *   - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24`
     *   - Default value: `16`
     */
    ikeDiffieHellmanGroup?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeDiffieHellmanGroupVariable?: pulumi.Input<string>;
    /**
     * IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
     */
    ikeIdLocalEndPoint?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeIdLocalEndPointVariable?: pulumi.Input<string>;
    /**
     * IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
     */
    ikeIdRemoteEndPoint?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeIdRemoteEndPointVariable?: pulumi.Input<string>;
    /**
     * IKE integrity protocol
     *   - Choices: `main`, `aggressive`
     *   - Default value: `main`
     */
    ikeIntegrityProtocol?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeIntegrityProtocolVariable?: pulumi.Input<string>;
    /**
     * Use preshared key to authenticate IKE peer
     */
    ikePresharedKey?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikePresharedKeyVariable?: pulumi.Input<string>;
    /**
     * IKE rekey interval <60..86400> seconds
     *   - Range: `60`-`86400`
     *   - Default value: `14400`
     */
    ikeRekeyInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ikeRekeyIntervalVariable?: pulumi.Input<string>;
    /**
     * IKE Version <1..2>
     *   - Range: `1`-`2`
     *   - Default value: `1`
     */
    ikeVersion?: pulumi.Input<number>;
    /**
     * Interface description
     */
    interfaceDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceDescriptionVariable?: pulumi.Input<string>;
    /**
     * Interface name: IPsec when present
     */
    interfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceNameVariable?: pulumi.Input<string>;
    /**
     * Interface MTU <68..9216>, in bytes
     *   - Range: `68`-`9216`
     *   - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * IPsec(ESP) encryption and integrity protocol
     *   - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`, `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512`
     *   - Default value: `aes256-gcm`
     */
    ipsecCiphersuite?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipsecCiphersuiteVariable?: pulumi.Input<string>;
    /**
     * IPsec rekey interval <300..1209600> seconds
     *   - Range: `120`-`2592000`
     *   - Default value: `3600`
     */
    ipsecRekeyInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipsecRekeyIntervalVariable?: pulumi.Input<string>;
    /**
     * Replay window size 32..8192 (must be a power of 2)
     *   - Range: `64`-`4096`
     *   - Default value: `512`
     */
    ipsecReplayWindow?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipsecReplayWindowVariable?: pulumi.Input<string>;
    ipv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4AddressVariable?: pulumi.Input<string>;
    /**
     * - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    ipv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * IPsec perfect forward secrecy settings
     *   - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`, `group-19`, `group-20`, `group-21`, `group-24`, `none`
     *   - Default value: `group-16`
     */
    perfectForwardSecrecy?: pulumi.Input<string>;
    /**
     * Variable name
     */
    perfectForwardSecrecyVariable?: pulumi.Input<string>;
    /**
     * Service LAN VPN Feature ID
     */
    serviceLanVpnFeatureId: pulumi.Input<string>;
    /**
     * Administrative state
     *   - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * TCP MSS on SYN packets, in bytes
     *   - Range: `500`-`1460`
     */
    tcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssVariable?: pulumi.Input<string>;
    /**
     * Enable tracker for this interface
     */
    trackerId?: pulumi.Input<string>;
    /**
     * Variable name
     */
    trackerIdVariable?: pulumi.Input<string>;
    tunnelDestinationIpv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelDestinationIpv4AddressVariable?: pulumi.Input<string>;
    /**
     * - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    tunnelDestinationIpv4SubnetMask: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelDestinationIpv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
     */
    tunnelRouteVia?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelRouteViaVariable?: pulumi.Input<string>;
    /**
     * <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
     */
    tunnelSourceInterface?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelSourceInterfaceVariable?: pulumi.Input<string>;
    tunnelSourceIpv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelSourceIpv4AddressVariable?: pulumi.Input<string>;
    /**
     * - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    tunnelSourceIpv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelSourceIpv4SubnetMaskVariable?: pulumi.Input<string>;
}
