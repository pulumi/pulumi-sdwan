// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource can manage a Transport IPv6 Tracker profile parcel.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = new sdwan.TransportIpv6TrackerProfileParcel("example", {
 *     name: "Example",
 *     description: "My Example",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 *     trackerName: "TRACKER_1",
 *     endpointApiUrl: "google.com",
 *     endpointDnsName: "google.com",
 *     endpointIp: "2001:0:0:1::0",
 *     interval: 30,
 *     multiplier: 3,
 *     threshold: 300,
 *     endpointTrackerType: "ipv6-interface",
 *     trackerType: "endpoint",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import sdwan:index/transportIpv6TrackerProfileParcel:TransportIpv6TrackerProfileParcel example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class TransportIpv6TrackerProfileParcel extends pulumi.CustomResource {
    /**
     * Get an existing TransportIpv6TrackerProfileParcel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransportIpv6TrackerProfileParcelState, opts?: pulumi.CustomResourceOptions): TransportIpv6TrackerProfileParcel {
        return new TransportIpv6TrackerProfileParcel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/transportIpv6TrackerProfileParcel:TransportIpv6TrackerProfileParcel';

    /**
     * Returns true if the given object is an instance of TransportIpv6TrackerProfileParcel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransportIpv6TrackerProfileParcel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransportIpv6TrackerProfileParcel.__pulumiType;
    }

    /**
     * The description of the profile parcel
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * API url of endpoint
     */
    public readonly endpointApiUrl!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly endpointApiUrlVariable!: pulumi.Output<string | undefined>;
    /**
     * Endpoint DNS Name
     */
    public readonly endpointDnsName!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly endpointDnsNameVariable!: pulumi.Output<string | undefined>;
    /**
     * Endpoint IP
     */
    public readonly endpointIp!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly endpointIpVariable!: pulumi.Output<string | undefined>;
    /**
     * Endpoint Tracker Type - Choices: `ipv6-interface` - Default value: `ipv6-interface`
     */
    public readonly endpointTrackerType!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly endpointTrackerTypeVariable!: pulumi.Output<string | undefined>;
    /**
     * Feature Profile ID
     */
    public readonly featureProfileId!: pulumi.Output<string>;
    /**
     * Interval - Range: `20`-`600` - Default value: `60`
     */
    public readonly interval!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly intervalVariable!: pulumi.Output<string | undefined>;
    /**
     * Multiplier - Range: `1`-`10` - Default value: `3`
     */
    public readonly multiplier!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly multiplierVariable!: pulumi.Output<string | undefined>;
    /**
     * The name of the profile parcel
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Threshold - Range: `100`-`1000` - Default value: `300`
     */
    public readonly threshold!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly thresholdVariable!: pulumi.Output<string | undefined>;
    /**
     * Tracker Name
     */
    public readonly trackerName!: pulumi.Output<string>;
    /**
     * Variable name
     */
    public readonly trackerNameVariable!: pulumi.Output<string | undefined>;
    /**
     * Tracker Type - Choices: `endpoint` - Default value: `endpoint`
     */
    public readonly trackerType!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly trackerTypeVariable!: pulumi.Output<string | undefined>;
    /**
     * The version of the profile parcel
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a TransportIpv6TrackerProfileParcel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransportIpv6TrackerProfileParcelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransportIpv6TrackerProfileParcelArgs | TransportIpv6TrackerProfileParcelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransportIpv6TrackerProfileParcelState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["endpointApiUrl"] = state ? state.endpointApiUrl : undefined;
            resourceInputs["endpointApiUrlVariable"] = state ? state.endpointApiUrlVariable : undefined;
            resourceInputs["endpointDnsName"] = state ? state.endpointDnsName : undefined;
            resourceInputs["endpointDnsNameVariable"] = state ? state.endpointDnsNameVariable : undefined;
            resourceInputs["endpointIp"] = state ? state.endpointIp : undefined;
            resourceInputs["endpointIpVariable"] = state ? state.endpointIpVariable : undefined;
            resourceInputs["endpointTrackerType"] = state ? state.endpointTrackerType : undefined;
            resourceInputs["endpointTrackerTypeVariable"] = state ? state.endpointTrackerTypeVariable : undefined;
            resourceInputs["featureProfileId"] = state ? state.featureProfileId : undefined;
            resourceInputs["interval"] = state ? state.interval : undefined;
            resourceInputs["intervalVariable"] = state ? state.intervalVariable : undefined;
            resourceInputs["multiplier"] = state ? state.multiplier : undefined;
            resourceInputs["multiplierVariable"] = state ? state.multiplierVariable : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["threshold"] = state ? state.threshold : undefined;
            resourceInputs["thresholdVariable"] = state ? state.thresholdVariable : undefined;
            resourceInputs["trackerName"] = state ? state.trackerName : undefined;
            resourceInputs["trackerNameVariable"] = state ? state.trackerNameVariable : undefined;
            resourceInputs["trackerType"] = state ? state.trackerType : undefined;
            resourceInputs["trackerTypeVariable"] = state ? state.trackerTypeVariable : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as TransportIpv6TrackerProfileParcelArgs | undefined;
            if ((!args || args.featureProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'featureProfileId'");
            }
            if ((!args || args.trackerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'trackerName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["endpointApiUrl"] = args ? args.endpointApiUrl : undefined;
            resourceInputs["endpointApiUrlVariable"] = args ? args.endpointApiUrlVariable : undefined;
            resourceInputs["endpointDnsName"] = args ? args.endpointDnsName : undefined;
            resourceInputs["endpointDnsNameVariable"] = args ? args.endpointDnsNameVariable : undefined;
            resourceInputs["endpointIp"] = args ? args.endpointIp : undefined;
            resourceInputs["endpointIpVariable"] = args ? args.endpointIpVariable : undefined;
            resourceInputs["endpointTrackerType"] = args ? args.endpointTrackerType : undefined;
            resourceInputs["endpointTrackerTypeVariable"] = args ? args.endpointTrackerTypeVariable : undefined;
            resourceInputs["featureProfileId"] = args ? args.featureProfileId : undefined;
            resourceInputs["interval"] = args ? args.interval : undefined;
            resourceInputs["intervalVariable"] = args ? args.intervalVariable : undefined;
            resourceInputs["multiplier"] = args ? args.multiplier : undefined;
            resourceInputs["multiplierVariable"] = args ? args.multiplierVariable : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["threshold"] = args ? args.threshold : undefined;
            resourceInputs["thresholdVariable"] = args ? args.thresholdVariable : undefined;
            resourceInputs["trackerName"] = args ? args.trackerName : undefined;
            resourceInputs["trackerNameVariable"] = args ? args.trackerNameVariable : undefined;
            resourceInputs["trackerType"] = args ? args.trackerType : undefined;
            resourceInputs["trackerTypeVariable"] = args ? args.trackerTypeVariable : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransportIpv6TrackerProfileParcel.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TransportIpv6TrackerProfileParcel resources.
 */
export interface TransportIpv6TrackerProfileParcelState {
    /**
     * The description of the profile parcel
     */
    description?: pulumi.Input<string>;
    /**
     * API url of endpoint
     */
    endpointApiUrl?: pulumi.Input<string>;
    /**
     * Variable name
     */
    endpointApiUrlVariable?: pulumi.Input<string>;
    /**
     * Endpoint DNS Name
     */
    endpointDnsName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    endpointDnsNameVariable?: pulumi.Input<string>;
    /**
     * Endpoint IP
     */
    endpointIp?: pulumi.Input<string>;
    /**
     * Variable name
     */
    endpointIpVariable?: pulumi.Input<string>;
    /**
     * Endpoint Tracker Type - Choices: `ipv6-interface` - Default value: `ipv6-interface`
     */
    endpointTrackerType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    endpointTrackerTypeVariable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * Interval - Range: `20`-`600` - Default value: `60`
     */
    interval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    intervalVariable?: pulumi.Input<string>;
    /**
     * Multiplier - Range: `1`-`10` - Default value: `3`
     */
    multiplier?: pulumi.Input<number>;
    /**
     * Variable name
     */
    multiplierVariable?: pulumi.Input<string>;
    /**
     * The name of the profile parcel
     */
    name?: pulumi.Input<string>;
    /**
     * Threshold - Range: `100`-`1000` - Default value: `300`
     */
    threshold?: pulumi.Input<number>;
    /**
     * Variable name
     */
    thresholdVariable?: pulumi.Input<string>;
    /**
     * Tracker Name
     */
    trackerName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    trackerNameVariable?: pulumi.Input<string>;
    /**
     * Tracker Type - Choices: `endpoint` - Default value: `endpoint`
     */
    trackerType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    trackerTypeVariable?: pulumi.Input<string>;
    /**
     * The version of the profile parcel
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a TransportIpv6TrackerProfileParcel resource.
 */
export interface TransportIpv6TrackerProfileParcelArgs {
    /**
     * The description of the profile parcel
     */
    description?: pulumi.Input<string>;
    /**
     * API url of endpoint
     */
    endpointApiUrl?: pulumi.Input<string>;
    /**
     * Variable name
     */
    endpointApiUrlVariable?: pulumi.Input<string>;
    /**
     * Endpoint DNS Name
     */
    endpointDnsName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    endpointDnsNameVariable?: pulumi.Input<string>;
    /**
     * Endpoint IP
     */
    endpointIp?: pulumi.Input<string>;
    /**
     * Variable name
     */
    endpointIpVariable?: pulumi.Input<string>;
    /**
     * Endpoint Tracker Type - Choices: `ipv6-interface` - Default value: `ipv6-interface`
     */
    endpointTrackerType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    endpointTrackerTypeVariable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * Interval - Range: `20`-`600` - Default value: `60`
     */
    interval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    intervalVariable?: pulumi.Input<string>;
    /**
     * Multiplier - Range: `1`-`10` - Default value: `3`
     */
    multiplier?: pulumi.Input<number>;
    /**
     * Variable name
     */
    multiplierVariable?: pulumi.Input<string>;
    /**
     * The name of the profile parcel
     */
    name?: pulumi.Input<string>;
    /**
     * Threshold - Range: `100`-`1000` - Default value: `300`
     */
    threshold?: pulumi.Input<number>;
    /**
     * Variable name
     */
    thresholdVariable?: pulumi.Input<string>;
    /**
     * Tracker Name
     */
    trackerName: pulumi.Input<string>;
    /**
     * Variable name
     */
    trackerNameVariable?: pulumi.Input<string>;
    /**
     * Tracker Type - Choices: `endpoint` - Default value: `endpoint`
     */
    trackerType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    trackerTypeVariable?: pulumi.Input<string>;
}
