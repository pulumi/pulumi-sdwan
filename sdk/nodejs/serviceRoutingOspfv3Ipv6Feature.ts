// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Service Routing OSPFv3 IPv6 Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = new sdwan.ServiceRoutingOspfv3Ipv6Feature("example", {
 *     name: "Example",
 *     description: "My Example",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 *     routerId: "1.2.3.4",
 *     distance: 110,
 *     distanceExternal: 110,
 *     distanceInterArea: 110,
 *     distanceIntraArea: 110,
 *     referenceBandwidth: 101,
 *     rfc1583Compatible: true,
 *     defaultInformationOriginate: false,
 *     defaultInformationOriginateAlways: false,
 *     defaultInformationOriginateMetric: 1,
 *     defaultInformationOriginateMetricType: "type1",
 *     spfCalculationDelay: 200,
 *     spfInitialHoldTime: 1000,
 *     spfMaximumHoldTime: 10000,
 *     filter: false,
 *     redistributes: [{
 *         protocol: "static",
 *     }],
 *     routerLsaAction: "on-startup",
 *     routerLsaOnStartupTime: 30,
 *     areas: [{
 *         area_number: 1,
 *         area_type: "stub",
 *         interfaces: [{
 *             name: "GigabitEthernet2",
 *             helloInterval: 10,
 *             deadInterval: 40,
 *             lsaRetransmitInterval: 5,
 *             cost: 10,
 *             networkType: "broadcast",
 *             passiveInterface: false,
 *             authenticationType: "no-auth",
 *         }],
 *         ranges: [{
 *             prefix: "3002::/96",
 *             cost: 1,
 *             noAdvertise: false,
 *         }],
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * Expected import identifier with the format: "service_routing_ospfv3_ipv6_feature_id,feature_profile_id"
 *
 * ```sh
 * $ pulumi import sdwan:index/serviceRoutingOspfv3Ipv6Feature:ServiceRoutingOspfv3Ipv6Feature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
 * ```
 */
export class ServiceRoutingOspfv3Ipv6Feature extends pulumi.CustomResource {
    /**
     * Get an existing ServiceRoutingOspfv3Ipv6Feature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceRoutingOspfv3Ipv6FeatureState, opts?: pulumi.CustomResourceOptions): ServiceRoutingOspfv3Ipv6Feature {
        return new ServiceRoutingOspfv3Ipv6Feature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/serviceRoutingOspfv3Ipv6Feature:ServiceRoutingOspfv3Ipv6Feature';

    /**
     * Returns true if the given object is an instance of ServiceRoutingOspfv3Ipv6Feature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceRoutingOspfv3Ipv6Feature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceRoutingOspfv3Ipv6Feature.__pulumiType;
    }

    /**
     * Configure OSPFv3 IPv6 area
     */
    declare public readonly areas: pulumi.Output<outputs.ServiceRoutingOspfv3Ipv6FeatureArea[] | undefined>;
    /**
     * Distribute default external route into OSPF disabled
     */
    declare public readonly defaultInformationOriginate: pulumi.Output<boolean | undefined>;
    /**
     * Always advertise default route
     */
    declare public readonly defaultInformationOriginateAlways: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly defaultInformationOriginateAlwaysVariable: pulumi.Output<string | undefined>;
    /**
     * Set metric used to generate default route <0..16777214>
     *   - Range: `0`-`16777214`
     */
    declare public readonly defaultInformationOriginateMetric: pulumi.Output<number | undefined>;
    /**
     * Set default route metric type
     *   - Choices: `type1`, `type2`
     */
    declare public readonly defaultInformationOriginateMetricType: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly defaultInformationOriginateMetricTypeVariable: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly defaultInformationOriginateMetricVariable: pulumi.Output<string | undefined>;
    /**
     * The description of the Feature
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Distance
     *   - Range: `1`-`254`
     *   - Default value: `110`
     */
    declare public readonly distance: pulumi.Output<number | undefined>;
    /**
     * Set distance for external routes
     *   - Range: `1`-`254`
     *   - Default value: `110`
     */
    declare public readonly distanceExternal: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly distanceExternalVariable: pulumi.Output<string | undefined>;
    /**
     * Set distance for inter-area routes
     *   - Range: `1`-`254`
     *   - Default value: `110`
     */
    declare public readonly distanceInterArea: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly distanceInterAreaVariable: pulumi.Output<string | undefined>;
    /**
     * Set distance for intra-area routes
     *   - Range: `1`-`254`
     *   - Default value: `110`
     */
    declare public readonly distanceIntraArea: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly distanceIntraAreaVariable: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly distanceVariable: pulumi.Output<string | undefined>;
    /**
     * Feature Profile ID
     */
    declare public readonly featureProfileId: pulumi.Output<string>;
    /**
     * Table map filtered or not
     *   - Default value: `false`
     */
    declare public readonly filter: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly filterVariable: pulumi.Output<string | undefined>;
    /**
     * The name of the Feature
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Redistribute routes
     */
    declare public readonly redistributes: pulumi.Output<outputs.ServiceRoutingOspfv3Ipv6FeatureRedistribute[] | undefined>;
    /**
     * Set reference bandwidth method to assign OSPF cost
     *   - Range: `1`-`4294967`
     *   - Default value: `100`
     */
    declare public readonly referenceBandwidth: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly referenceBandwidthVariable: pulumi.Output<string | undefined>;
    /**
     * Calculate summary route cost based on RFC 1583
     *   - Default value: `true`
     */
    declare public readonly rfc1583Compatible: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly rfc1583CompatibleVariable: pulumi.Output<string | undefined>;
    declare public readonly routePolicyId: pulumi.Output<string | undefined>;
    /**
     * Set OSPF router ID to override system IP address
     */
    declare public readonly routerId: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly routerIdVariable: pulumi.Output<string | undefined>;
    /**
     * Not advertise maximum metric Router LSA policy by default
     */
    declare public readonly routerLsaAction: pulumi.Output<string | undefined>;
    /**
     * Set how long to advertise maximum metric after router boot up
     *   - Range: `5`-`86400`
     */
    declare public readonly routerLsaOnStartupTime: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly routerLsaOnStartupTimeVariable: pulumi.Output<string | undefined>;
    /**
     * Set delay from first change received until performing SPF calculation
     *   - Range: `1`-`600000`
     *   - Default value: `200`
     */
    declare public readonly spfCalculationDelay: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly spfCalculationDelayVariable: pulumi.Output<string | undefined>;
    /**
     * Set initial hold time between consecutive SPF calculations
     *   - Range: `1`-`600000`
     *   - Default value: `1000`
     */
    declare public readonly spfInitialHoldTime: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly spfInitialHoldTimeVariable: pulumi.Output<string | undefined>;
    /**
     * Set maximum hold time between consecutive SPF calculations
     *   - Range: `1`-`600000`
     *   - Default value: `10000`
     */
    declare public readonly spfMaximumHoldTime: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly spfMaximumHoldTimeVariable: pulumi.Output<string | undefined>;
    /**
     * The version of the Feature
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;

    /**
     * Create a ServiceRoutingOspfv3Ipv6Feature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceRoutingOspfv3Ipv6FeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceRoutingOspfv3Ipv6FeatureArgs | ServiceRoutingOspfv3Ipv6FeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceRoutingOspfv3Ipv6FeatureState | undefined;
            resourceInputs["areas"] = state?.areas;
            resourceInputs["defaultInformationOriginate"] = state?.defaultInformationOriginate;
            resourceInputs["defaultInformationOriginateAlways"] = state?.defaultInformationOriginateAlways;
            resourceInputs["defaultInformationOriginateAlwaysVariable"] = state?.defaultInformationOriginateAlwaysVariable;
            resourceInputs["defaultInformationOriginateMetric"] = state?.defaultInformationOriginateMetric;
            resourceInputs["defaultInformationOriginateMetricType"] = state?.defaultInformationOriginateMetricType;
            resourceInputs["defaultInformationOriginateMetricTypeVariable"] = state?.defaultInformationOriginateMetricTypeVariable;
            resourceInputs["defaultInformationOriginateMetricVariable"] = state?.defaultInformationOriginateMetricVariable;
            resourceInputs["description"] = state?.description;
            resourceInputs["distance"] = state?.distance;
            resourceInputs["distanceExternal"] = state?.distanceExternal;
            resourceInputs["distanceExternalVariable"] = state?.distanceExternalVariable;
            resourceInputs["distanceInterArea"] = state?.distanceInterArea;
            resourceInputs["distanceInterAreaVariable"] = state?.distanceInterAreaVariable;
            resourceInputs["distanceIntraArea"] = state?.distanceIntraArea;
            resourceInputs["distanceIntraAreaVariable"] = state?.distanceIntraAreaVariable;
            resourceInputs["distanceVariable"] = state?.distanceVariable;
            resourceInputs["featureProfileId"] = state?.featureProfileId;
            resourceInputs["filter"] = state?.filter;
            resourceInputs["filterVariable"] = state?.filterVariable;
            resourceInputs["name"] = state?.name;
            resourceInputs["redistributes"] = state?.redistributes;
            resourceInputs["referenceBandwidth"] = state?.referenceBandwidth;
            resourceInputs["referenceBandwidthVariable"] = state?.referenceBandwidthVariable;
            resourceInputs["rfc1583Compatible"] = state?.rfc1583Compatible;
            resourceInputs["rfc1583CompatibleVariable"] = state?.rfc1583CompatibleVariable;
            resourceInputs["routePolicyId"] = state?.routePolicyId;
            resourceInputs["routerId"] = state?.routerId;
            resourceInputs["routerIdVariable"] = state?.routerIdVariable;
            resourceInputs["routerLsaAction"] = state?.routerLsaAction;
            resourceInputs["routerLsaOnStartupTime"] = state?.routerLsaOnStartupTime;
            resourceInputs["routerLsaOnStartupTimeVariable"] = state?.routerLsaOnStartupTimeVariable;
            resourceInputs["spfCalculationDelay"] = state?.spfCalculationDelay;
            resourceInputs["spfCalculationDelayVariable"] = state?.spfCalculationDelayVariable;
            resourceInputs["spfInitialHoldTime"] = state?.spfInitialHoldTime;
            resourceInputs["spfInitialHoldTimeVariable"] = state?.spfInitialHoldTimeVariable;
            resourceInputs["spfMaximumHoldTime"] = state?.spfMaximumHoldTime;
            resourceInputs["spfMaximumHoldTimeVariable"] = state?.spfMaximumHoldTimeVariable;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as ServiceRoutingOspfv3Ipv6FeatureArgs | undefined;
            if (args?.featureProfileId === undefined && !opts.urn) {
                throw new Error("Missing required property 'featureProfileId'");
            }
            resourceInputs["areas"] = args?.areas;
            resourceInputs["defaultInformationOriginate"] = args?.defaultInformationOriginate;
            resourceInputs["defaultInformationOriginateAlways"] = args?.defaultInformationOriginateAlways;
            resourceInputs["defaultInformationOriginateAlwaysVariable"] = args?.defaultInformationOriginateAlwaysVariable;
            resourceInputs["defaultInformationOriginateMetric"] = args?.defaultInformationOriginateMetric;
            resourceInputs["defaultInformationOriginateMetricType"] = args?.defaultInformationOriginateMetricType;
            resourceInputs["defaultInformationOriginateMetricTypeVariable"] = args?.defaultInformationOriginateMetricTypeVariable;
            resourceInputs["defaultInformationOriginateMetricVariable"] = args?.defaultInformationOriginateMetricVariable;
            resourceInputs["description"] = args?.description;
            resourceInputs["distance"] = args?.distance;
            resourceInputs["distanceExternal"] = args?.distanceExternal;
            resourceInputs["distanceExternalVariable"] = args?.distanceExternalVariable;
            resourceInputs["distanceInterArea"] = args?.distanceInterArea;
            resourceInputs["distanceInterAreaVariable"] = args?.distanceInterAreaVariable;
            resourceInputs["distanceIntraArea"] = args?.distanceIntraArea;
            resourceInputs["distanceIntraAreaVariable"] = args?.distanceIntraAreaVariable;
            resourceInputs["distanceVariable"] = args?.distanceVariable;
            resourceInputs["featureProfileId"] = args?.featureProfileId;
            resourceInputs["filter"] = args?.filter;
            resourceInputs["filterVariable"] = args?.filterVariable;
            resourceInputs["name"] = args?.name;
            resourceInputs["redistributes"] = args?.redistributes;
            resourceInputs["referenceBandwidth"] = args?.referenceBandwidth;
            resourceInputs["referenceBandwidthVariable"] = args?.referenceBandwidthVariable;
            resourceInputs["rfc1583Compatible"] = args?.rfc1583Compatible;
            resourceInputs["rfc1583CompatibleVariable"] = args?.rfc1583CompatibleVariable;
            resourceInputs["routePolicyId"] = args?.routePolicyId;
            resourceInputs["routerId"] = args?.routerId;
            resourceInputs["routerIdVariable"] = args?.routerIdVariable;
            resourceInputs["routerLsaAction"] = args?.routerLsaAction;
            resourceInputs["routerLsaOnStartupTime"] = args?.routerLsaOnStartupTime;
            resourceInputs["routerLsaOnStartupTimeVariable"] = args?.routerLsaOnStartupTimeVariable;
            resourceInputs["spfCalculationDelay"] = args?.spfCalculationDelay;
            resourceInputs["spfCalculationDelayVariable"] = args?.spfCalculationDelayVariable;
            resourceInputs["spfInitialHoldTime"] = args?.spfInitialHoldTime;
            resourceInputs["spfInitialHoldTimeVariable"] = args?.spfInitialHoldTimeVariable;
            resourceInputs["spfMaximumHoldTime"] = args?.spfMaximumHoldTime;
            resourceInputs["spfMaximumHoldTimeVariable"] = args?.spfMaximumHoldTimeVariable;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceRoutingOspfv3Ipv6Feature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceRoutingOspfv3Ipv6Feature resources.
 */
export interface ServiceRoutingOspfv3Ipv6FeatureState {
    /**
     * Configure OSPFv3 IPv6 area
     */
    areas?: pulumi.Input<pulumi.Input<inputs.ServiceRoutingOspfv3Ipv6FeatureArea>[]>;
    /**
     * Distribute default external route into OSPF disabled
     */
    defaultInformationOriginate?: pulumi.Input<boolean>;
    /**
     * Always advertise default route
     */
    defaultInformationOriginateAlways?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    defaultInformationOriginateAlwaysVariable?: pulumi.Input<string>;
    /**
     * Set metric used to generate default route <0..16777214>
     *   - Range: `0`-`16777214`
     */
    defaultInformationOriginateMetric?: pulumi.Input<number>;
    /**
     * Set default route metric type
     *   - Choices: `type1`, `type2`
     */
    defaultInformationOriginateMetricType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    defaultInformationOriginateMetricTypeVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    defaultInformationOriginateMetricVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Distance
     *   - Range: `1`-`254`
     *   - Default value: `110`
     */
    distance?: pulumi.Input<number>;
    /**
     * Set distance for external routes
     *   - Range: `1`-`254`
     *   - Default value: `110`
     */
    distanceExternal?: pulumi.Input<number>;
    /**
     * Variable name
     */
    distanceExternalVariable?: pulumi.Input<string>;
    /**
     * Set distance for inter-area routes
     *   - Range: `1`-`254`
     *   - Default value: `110`
     */
    distanceInterArea?: pulumi.Input<number>;
    /**
     * Variable name
     */
    distanceInterAreaVariable?: pulumi.Input<string>;
    /**
     * Set distance for intra-area routes
     *   - Range: `1`-`254`
     *   - Default value: `110`
     */
    distanceIntraArea?: pulumi.Input<number>;
    /**
     * Variable name
     */
    distanceIntraAreaVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    distanceVariable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * Table map filtered or not
     *   - Default value: `false`
     */
    filter?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    filterVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * Redistribute routes
     */
    redistributes?: pulumi.Input<pulumi.Input<inputs.ServiceRoutingOspfv3Ipv6FeatureRedistribute>[]>;
    /**
     * Set reference bandwidth method to assign OSPF cost
     *   - Range: `1`-`4294967`
     *   - Default value: `100`
     */
    referenceBandwidth?: pulumi.Input<number>;
    /**
     * Variable name
     */
    referenceBandwidthVariable?: pulumi.Input<string>;
    /**
     * Calculate summary route cost based on RFC 1583
     *   - Default value: `true`
     */
    rfc1583Compatible?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    rfc1583CompatibleVariable?: pulumi.Input<string>;
    routePolicyId?: pulumi.Input<string>;
    /**
     * Set OSPF router ID to override system IP address
     */
    routerId?: pulumi.Input<string>;
    /**
     * Variable name
     */
    routerIdVariable?: pulumi.Input<string>;
    /**
     * Not advertise maximum metric Router LSA policy by default
     */
    routerLsaAction?: pulumi.Input<string>;
    /**
     * Set how long to advertise maximum metric after router boot up
     *   - Range: `5`-`86400`
     */
    routerLsaOnStartupTime?: pulumi.Input<number>;
    /**
     * Variable name
     */
    routerLsaOnStartupTimeVariable?: pulumi.Input<string>;
    /**
     * Set delay from first change received until performing SPF calculation
     *   - Range: `1`-`600000`
     *   - Default value: `200`
     */
    spfCalculationDelay?: pulumi.Input<number>;
    /**
     * Variable name
     */
    spfCalculationDelayVariable?: pulumi.Input<string>;
    /**
     * Set initial hold time between consecutive SPF calculations
     *   - Range: `1`-`600000`
     *   - Default value: `1000`
     */
    spfInitialHoldTime?: pulumi.Input<number>;
    /**
     * Variable name
     */
    spfInitialHoldTimeVariable?: pulumi.Input<string>;
    /**
     * Set maximum hold time between consecutive SPF calculations
     *   - Range: `1`-`600000`
     *   - Default value: `10000`
     */
    spfMaximumHoldTime?: pulumi.Input<number>;
    /**
     * Variable name
     */
    spfMaximumHoldTimeVariable?: pulumi.Input<string>;
    /**
     * The version of the Feature
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ServiceRoutingOspfv3Ipv6Feature resource.
 */
export interface ServiceRoutingOspfv3Ipv6FeatureArgs {
    /**
     * Configure OSPFv3 IPv6 area
     */
    areas?: pulumi.Input<pulumi.Input<inputs.ServiceRoutingOspfv3Ipv6FeatureArea>[]>;
    /**
     * Distribute default external route into OSPF disabled
     */
    defaultInformationOriginate?: pulumi.Input<boolean>;
    /**
     * Always advertise default route
     */
    defaultInformationOriginateAlways?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    defaultInformationOriginateAlwaysVariable?: pulumi.Input<string>;
    /**
     * Set metric used to generate default route <0..16777214>
     *   - Range: `0`-`16777214`
     */
    defaultInformationOriginateMetric?: pulumi.Input<number>;
    /**
     * Set default route metric type
     *   - Choices: `type1`, `type2`
     */
    defaultInformationOriginateMetricType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    defaultInformationOriginateMetricTypeVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    defaultInformationOriginateMetricVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Distance
     *   - Range: `1`-`254`
     *   - Default value: `110`
     */
    distance?: pulumi.Input<number>;
    /**
     * Set distance for external routes
     *   - Range: `1`-`254`
     *   - Default value: `110`
     */
    distanceExternal?: pulumi.Input<number>;
    /**
     * Variable name
     */
    distanceExternalVariable?: pulumi.Input<string>;
    /**
     * Set distance for inter-area routes
     *   - Range: `1`-`254`
     *   - Default value: `110`
     */
    distanceInterArea?: pulumi.Input<number>;
    /**
     * Variable name
     */
    distanceInterAreaVariable?: pulumi.Input<string>;
    /**
     * Set distance for intra-area routes
     *   - Range: `1`-`254`
     *   - Default value: `110`
     */
    distanceIntraArea?: pulumi.Input<number>;
    /**
     * Variable name
     */
    distanceIntraAreaVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    distanceVariable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * Table map filtered or not
     *   - Default value: `false`
     */
    filter?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    filterVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * Redistribute routes
     */
    redistributes?: pulumi.Input<pulumi.Input<inputs.ServiceRoutingOspfv3Ipv6FeatureRedistribute>[]>;
    /**
     * Set reference bandwidth method to assign OSPF cost
     *   - Range: `1`-`4294967`
     *   - Default value: `100`
     */
    referenceBandwidth?: pulumi.Input<number>;
    /**
     * Variable name
     */
    referenceBandwidthVariable?: pulumi.Input<string>;
    /**
     * Calculate summary route cost based on RFC 1583
     *   - Default value: `true`
     */
    rfc1583Compatible?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    rfc1583CompatibleVariable?: pulumi.Input<string>;
    routePolicyId?: pulumi.Input<string>;
    /**
     * Set OSPF router ID to override system IP address
     */
    routerId?: pulumi.Input<string>;
    /**
     * Variable name
     */
    routerIdVariable?: pulumi.Input<string>;
    /**
     * Not advertise maximum metric Router LSA policy by default
     */
    routerLsaAction?: pulumi.Input<string>;
    /**
     * Set how long to advertise maximum metric after router boot up
     *   - Range: `5`-`86400`
     */
    routerLsaOnStartupTime?: pulumi.Input<number>;
    /**
     * Variable name
     */
    routerLsaOnStartupTimeVariable?: pulumi.Input<string>;
    /**
     * Set delay from first change received until performing SPF calculation
     *   - Range: `1`-`600000`
     *   - Default value: `200`
     */
    spfCalculationDelay?: pulumi.Input<number>;
    /**
     * Variable name
     */
    spfCalculationDelayVariable?: pulumi.Input<string>;
    /**
     * Set initial hold time between consecutive SPF calculations
     *   - Range: `1`-`600000`
     *   - Default value: `1000`
     */
    spfInitialHoldTime?: pulumi.Input<number>;
    /**
     * Variable name
     */
    spfInitialHoldTimeVariable?: pulumi.Input<string>;
    /**
     * Set maximum hold time between consecutive SPF calculations
     *   - Range: `1`-`600000`
     *   - Default value: `10000`
     */
    spfMaximumHoldTime?: pulumi.Input<number>;
    /**
     * Variable name
     */
    spfMaximumHoldTimeVariable?: pulumi.Input<string>;
}
