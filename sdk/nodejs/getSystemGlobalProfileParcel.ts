// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read the System Global profile parcel.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getSystemGlobalProfileParcel({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 * });
 * ```
 */
export function getSystemGlobalProfileParcel(args: GetSystemGlobalProfileParcelArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemGlobalProfileParcelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getSystemGlobalProfileParcel:getSystemGlobalProfileParcel", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getSystemGlobalProfileParcel.
 */
export interface GetSystemGlobalProfileParcelArgs {
    /**
     * Feature Profile ID
     */
    featureProfileId: string;
    /**
     * The id of the profile parcel
     */
    id: string;
}

/**
 * A collection of values returned by getSystemGlobalProfileParcel.
 */
export interface GetSystemGlobalProfileParcelResult {
    /**
     * Set ARP Proxy
     */
    readonly arpProxy: boolean;
    /**
     * Variable name
     */
    readonly arpProxyVariable: string;
    /**
     * Configure CDP
     */
    readonly cdp: boolean;
    /**
     * Variable name
     */
    readonly cdpVariable: string;
    /**
     * Configure Console Logging
     */
    readonly consoleLogging: boolean;
    /**
     * Variable name
     */
    readonly consoleLoggingVariable: string;
    /**
     * The description of the profile parcel
     */
    readonly description: string;
    /**
     * Configure Domain-Lookup
     */
    readonly domainLookup: boolean;
    /**
     * Variable name
     */
    readonly domainLookupVariable: string;
    /**
     * Feature Profile ID
     */
    readonly featureProfileId: string;
    /**
     * Set Passive FTP
     */
    readonly ftpPassive: boolean;
    /**
     * Variable name
     */
    readonly ftpPassiveVariable: string;
    /**
     * Set preference for HTTP Authentication
     */
    readonly httpAuthentication: string;
    /**
     * Variable name
     */
    readonly httpAuthenticationVariable: string;
    /**
     * Set a HTTP Server
     */
    readonly httpServer: boolean;
    /**
     * Variable name
     */
    readonly httpServerVariable: string;
    /**
     * Set a HTTPS Server
     */
    readonly httpsServer: boolean;
    /**
     * Variable name
     */
    readonly httpsServerVariable: string;
    /**
     * The id of the profile parcel
     */
    readonly id: string;
    /**
     * Configure Ignore BOOTP
     */
    readonly ignoreBootp: boolean;
    /**
     * Variable name
     */
    readonly ignoreBootpVariable: string;
    /**
     * Set Source Route
     */
    readonly ipSourceRouting: boolean;
    /**
     * Variable name
     */
    readonly ipSourceRoutingVariable: string;
    /**
     * Configure Telnet (Outbound)
     */
    readonly lineVty: boolean;
    /**
     * Variable name
     */
    readonly lineVtyVariable: string;
    /**
     * Configure LLDP
     */
    readonly lldp: boolean;
    /**
     * Variable name
     */
    readonly lldpVariable: string;
    /**
     * The name of the profile parcel
     */
    readonly name: string;
    /**
     * Set NAT64 TCP session timeout, in seconds
     */
    readonly nat64TcpTimeout: number;
    /**
     * Variable name
     */
    readonly nat64TcpTimeoutVariable: string;
    /**
     * Set NAT64 UDP session timeout, in seconds
     */
    readonly nat64UdpTimeout: number;
    /**
     * Variable name
     */
    readonly nat64UdpTimeoutVariable: string;
    /**
     * Set RSH/RCP
     */
    readonly rshRcp: boolean;
    /**
     * Variable name
     */
    readonly rshRcpVariable: string;
    /**
     * Configure SNMP Ifindex Persist
     */
    readonly snmpIfindexPersist: boolean;
    /**
     * Variable name
     */
    readonly snmpIfindexPersistVariable: string;
    /**
     * Specify interface for source address in all HTTP(S) client connections
     */
    readonly sourceInterface: string;
    /**
     * Variable name
     */
    readonly sourceInterfaceVariable: string;
    /**
     * Set SSH version
     */
    readonly sshVersion: string;
    /**
     * Variable name
     */
    readonly sshVersionVariable: string;
    /**
     * Configure tcp-keepalives-in
     */
    readonly tcpKeepalivesIn: boolean;
    /**
     * Variable name
     */
    readonly tcpKeepalivesInVariable: string;
    /**
     * Configure tcp-keepalives-out
     */
    readonly tcpKeepalivesOut: boolean;
    /**
     * Variable name
     */
    readonly tcpKeepalivesOutVariable: string;
    /**
     * Configure tcp-small-servers
     */
    readonly tcpSmallServers: boolean;
    /**
     * Variable name
     */
    readonly tcpSmallServersVariable: string;
    /**
     * Configure udp-small-servers
     */
    readonly udpSmallServers: boolean;
    /**
     * Variable name
     */
    readonly udpSmallServersVariable: string;
    /**
     * The version of the profile parcel
     */
    readonly version: number;
    /**
     * Configure VTY Line Logging
     */
    readonly vtyLineLogging: boolean;
    /**
     * Variable name
     */
    readonly vtyLineLoggingVariable: string;
}
/**
 * This data source can read the System Global profile parcel.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getSystemGlobalProfileParcel({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 * });
 * ```
 */
export function getSystemGlobalProfileParcelOutput(args: GetSystemGlobalProfileParcelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemGlobalProfileParcelResult> {
    return pulumi.output(args).apply((a: any) => getSystemGlobalProfileParcel(a, opts))
}

/**
 * A collection of arguments for invoking getSystemGlobalProfileParcel.
 */
export interface GetSystemGlobalProfileParcelOutputArgs {
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * The id of the profile parcel
     */
    id: pulumi.Input<string>;
}
