// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Transport Management VPN Interface Ethernet profile parcel.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import sdwan:index/transportManagementVpnInterfaceEthernetProfileParcel:TransportManagementVpnInterfaceEthernetProfileParcel example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class TransportManagementVpnInterfaceEthernetProfileParcel extends pulumi.CustomResource {
    /**
     * Get an existing TransportManagementVpnInterfaceEthernetProfileParcel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransportManagementVpnInterfaceEthernetProfileParcelState, opts?: pulumi.CustomResourceOptions): TransportManagementVpnInterfaceEthernetProfileParcel {
        return new TransportManagementVpnInterfaceEthernetProfileParcel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/transportManagementVpnInterfaceEthernetProfileParcel:TransportManagementVpnInterfaceEthernetProfileParcel';

    /**
     * Returns true if the given object is an instance of TransportManagementVpnInterfaceEthernetProfileParcel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransportManagementVpnInterfaceEthernetProfileParcel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransportManagementVpnInterfaceEthernetProfileParcel.__pulumiType;
    }

    /**
     * Configure ARP entries
     */
    public readonly arpEntries!: pulumi.Output<outputs.TransportManagementVpnInterfaceEthernetProfileParcelArpEntry[] | undefined>;
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
     */
    public readonly arpTimeout!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly arpTimeoutVariable!: pulumi.Output<string | undefined>;
    /**
     * Link autonegotiation
     */
    public readonly autonegotiate!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly autonegotiateVariable!: pulumi.Output<string | undefined>;
    public readonly basicConfigurationDescription!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly basicConfigurationDescriptionVariable!: pulumi.Output<string | undefined>;
    /**
     * The description of the profile parcel
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Duplex mode - Choices: `full`, `half`, `auto`
     */
    public readonly duplex!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly duplexVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable DHCPv6
     */
    public readonly enableDhcpv6!: pulumi.Output<boolean | undefined>;
    /**
     * Feature Profile ID
     */
    public readonly featureProfileId!: pulumi.Output<string | undefined>;
    /**
     * ICMP/ICMPv6 Redirect Disable - Default value: `true`
     */
    public readonly icmpRedirectDisable!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly icmpRedirectDisableVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface MTU - Range: `1500`-`9216` - Default value: `1500`
     */
    public readonly interfaceMtu!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly interfaceMtuVariable!: pulumi.Output<string | undefined>;
    public readonly interfaceName!: pulumi.Output<string>;
    /**
     * Variable name
     */
    public readonly interfaceNameVariable!: pulumi.Output<string | undefined>;
    /**
     * IP Directed-Broadcast - Default value: `false`
     */
    public readonly ipDirectedBroadcast!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly ipDirectedBroadcastVariable!: pulumi.Output<string | undefined>;
    /**
     * IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
     * <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
     */
    public readonly ipMtu!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly ipMtuVariable!: pulumi.Output<string | undefined>;
    /**
     * IP Address
     */
    public readonly ipv4Address!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipv4AddressVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface auto detect bandwidth - Default value: `false`
     */
    public readonly ipv4AutoDetectBandwidth!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly ipv4AutoDetectBandwidthVariable!: pulumi.Output<string | undefined>;
    /**
     * DHCP Distance - Range: `1`-`65536`
     */
    public readonly ipv4DhcpDistance!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly ipv4DhcpDistanceVariable!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipv4DhcpHelperVariable!: pulumi.Output<string | undefined>;
    /**
     * List of DHCP IPv4 helper addresses (min 1, max 8)
     */
    public readonly ipv4DhcpHelpers!: pulumi.Output<string[] | undefined>;
    /**
     * Iperf server for auto bandwidth detect
     */
    public readonly ipv4IperfServer!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipv4IperfServerVariable!: pulumi.Output<string | undefined>;
    /**
     * Secondary IpV4 Addresses
     */
    public readonly ipv4SecondaryAddresses!: pulumi.Output<outputs.TransportManagementVpnInterfaceEthernetProfileParcelIpv4SecondaryAddress[] | undefined>;
    /**
     * Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    public readonly ipv4SubnetMask!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipv4SubnetMaskVariable!: pulumi.Output<string | undefined>;
    /**
     * IPv6 Address Secondary
     */
    public readonly ipv6Address!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipv6AddressVariable!: pulumi.Output<string | undefined>;
    /**
     * Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
     */
    public readonly loadInterval!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly loadIntervalVariable!: pulumi.Output<string | undefined>;
    /**
     * MAC Address
     */
    public readonly macAddress!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly macAddressVariable!: pulumi.Output<string | undefined>;
    /**
     * Media type - Choices: `auto-select`, `rj45`, `sfp`
     */
    public readonly mediaType!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly mediaTypeVariable!: pulumi.Output<string | undefined>;
    /**
     * The name of the profile parcel
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * - Default value: `true`
     */
    public readonly shutdown!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly shutdownVariable!: pulumi.Output<string | undefined>;
    /**
     * Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
     */
    public readonly speed!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly speedVariable!: pulumi.Output<string | undefined>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    public readonly tcpMss!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tcpMssVariable!: pulumi.Output<string | undefined>;
    /**
     * Transport Management VPN Profile Parcel ID
     */
    public readonly transportManagementVpnProfileParcelId!: pulumi.Output<string | undefined>;
    /**
     * The version of the profile parcel
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a TransportManagementVpnInterfaceEthernetProfileParcel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransportManagementVpnInterfaceEthernetProfileParcelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransportManagementVpnInterfaceEthernetProfileParcelArgs | TransportManagementVpnInterfaceEthernetProfileParcelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransportManagementVpnInterfaceEthernetProfileParcelState | undefined;
            resourceInputs["arpEntries"] = state ? state.arpEntries : undefined;
            resourceInputs["arpTimeout"] = state ? state.arpTimeout : undefined;
            resourceInputs["arpTimeoutVariable"] = state ? state.arpTimeoutVariable : undefined;
            resourceInputs["autonegotiate"] = state ? state.autonegotiate : undefined;
            resourceInputs["autonegotiateVariable"] = state ? state.autonegotiateVariable : undefined;
            resourceInputs["basicConfigurationDescription"] = state ? state.basicConfigurationDescription : undefined;
            resourceInputs["basicConfigurationDescriptionVariable"] = state ? state.basicConfigurationDescriptionVariable : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["duplex"] = state ? state.duplex : undefined;
            resourceInputs["duplexVariable"] = state ? state.duplexVariable : undefined;
            resourceInputs["enableDhcpv6"] = state ? state.enableDhcpv6 : undefined;
            resourceInputs["featureProfileId"] = state ? state.featureProfileId : undefined;
            resourceInputs["icmpRedirectDisable"] = state ? state.icmpRedirectDisable : undefined;
            resourceInputs["icmpRedirectDisableVariable"] = state ? state.icmpRedirectDisableVariable : undefined;
            resourceInputs["interfaceMtu"] = state ? state.interfaceMtu : undefined;
            resourceInputs["interfaceMtuVariable"] = state ? state.interfaceMtuVariable : undefined;
            resourceInputs["interfaceName"] = state ? state.interfaceName : undefined;
            resourceInputs["interfaceNameVariable"] = state ? state.interfaceNameVariable : undefined;
            resourceInputs["ipDirectedBroadcast"] = state ? state.ipDirectedBroadcast : undefined;
            resourceInputs["ipDirectedBroadcastVariable"] = state ? state.ipDirectedBroadcastVariable : undefined;
            resourceInputs["ipMtu"] = state ? state.ipMtu : undefined;
            resourceInputs["ipMtuVariable"] = state ? state.ipMtuVariable : undefined;
            resourceInputs["ipv4Address"] = state ? state.ipv4Address : undefined;
            resourceInputs["ipv4AddressVariable"] = state ? state.ipv4AddressVariable : undefined;
            resourceInputs["ipv4AutoDetectBandwidth"] = state ? state.ipv4AutoDetectBandwidth : undefined;
            resourceInputs["ipv4AutoDetectBandwidthVariable"] = state ? state.ipv4AutoDetectBandwidthVariable : undefined;
            resourceInputs["ipv4DhcpDistance"] = state ? state.ipv4DhcpDistance : undefined;
            resourceInputs["ipv4DhcpDistanceVariable"] = state ? state.ipv4DhcpDistanceVariable : undefined;
            resourceInputs["ipv4DhcpHelperVariable"] = state ? state.ipv4DhcpHelperVariable : undefined;
            resourceInputs["ipv4DhcpHelpers"] = state ? state.ipv4DhcpHelpers : undefined;
            resourceInputs["ipv4IperfServer"] = state ? state.ipv4IperfServer : undefined;
            resourceInputs["ipv4IperfServerVariable"] = state ? state.ipv4IperfServerVariable : undefined;
            resourceInputs["ipv4SecondaryAddresses"] = state ? state.ipv4SecondaryAddresses : undefined;
            resourceInputs["ipv4SubnetMask"] = state ? state.ipv4SubnetMask : undefined;
            resourceInputs["ipv4SubnetMaskVariable"] = state ? state.ipv4SubnetMaskVariable : undefined;
            resourceInputs["ipv6Address"] = state ? state.ipv6Address : undefined;
            resourceInputs["ipv6AddressVariable"] = state ? state.ipv6AddressVariable : undefined;
            resourceInputs["loadInterval"] = state ? state.loadInterval : undefined;
            resourceInputs["loadIntervalVariable"] = state ? state.loadIntervalVariable : undefined;
            resourceInputs["macAddress"] = state ? state.macAddress : undefined;
            resourceInputs["macAddressVariable"] = state ? state.macAddressVariable : undefined;
            resourceInputs["mediaType"] = state ? state.mediaType : undefined;
            resourceInputs["mediaTypeVariable"] = state ? state.mediaTypeVariable : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["shutdown"] = state ? state.shutdown : undefined;
            resourceInputs["shutdownVariable"] = state ? state.shutdownVariable : undefined;
            resourceInputs["speed"] = state ? state.speed : undefined;
            resourceInputs["speedVariable"] = state ? state.speedVariable : undefined;
            resourceInputs["tcpMss"] = state ? state.tcpMss : undefined;
            resourceInputs["tcpMssVariable"] = state ? state.tcpMssVariable : undefined;
            resourceInputs["transportManagementVpnProfileParcelId"] = state ? state.transportManagementVpnProfileParcelId : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as TransportManagementVpnInterfaceEthernetProfileParcelArgs | undefined;
            if ((!args || args.interfaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'interfaceName'");
            }
            resourceInputs["arpEntries"] = args ? args.arpEntries : undefined;
            resourceInputs["arpTimeout"] = args ? args.arpTimeout : undefined;
            resourceInputs["arpTimeoutVariable"] = args ? args.arpTimeoutVariable : undefined;
            resourceInputs["autonegotiate"] = args ? args.autonegotiate : undefined;
            resourceInputs["autonegotiateVariable"] = args ? args.autonegotiateVariable : undefined;
            resourceInputs["basicConfigurationDescription"] = args ? args.basicConfigurationDescription : undefined;
            resourceInputs["basicConfigurationDescriptionVariable"] = args ? args.basicConfigurationDescriptionVariable : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["duplex"] = args ? args.duplex : undefined;
            resourceInputs["duplexVariable"] = args ? args.duplexVariable : undefined;
            resourceInputs["enableDhcpv6"] = args ? args.enableDhcpv6 : undefined;
            resourceInputs["featureProfileId"] = args ? args.featureProfileId : undefined;
            resourceInputs["icmpRedirectDisable"] = args ? args.icmpRedirectDisable : undefined;
            resourceInputs["icmpRedirectDisableVariable"] = args ? args.icmpRedirectDisableVariable : undefined;
            resourceInputs["interfaceMtu"] = args ? args.interfaceMtu : undefined;
            resourceInputs["interfaceMtuVariable"] = args ? args.interfaceMtuVariable : undefined;
            resourceInputs["interfaceName"] = args ? args.interfaceName : undefined;
            resourceInputs["interfaceNameVariable"] = args ? args.interfaceNameVariable : undefined;
            resourceInputs["ipDirectedBroadcast"] = args ? args.ipDirectedBroadcast : undefined;
            resourceInputs["ipDirectedBroadcastVariable"] = args ? args.ipDirectedBroadcastVariable : undefined;
            resourceInputs["ipMtu"] = args ? args.ipMtu : undefined;
            resourceInputs["ipMtuVariable"] = args ? args.ipMtuVariable : undefined;
            resourceInputs["ipv4Address"] = args ? args.ipv4Address : undefined;
            resourceInputs["ipv4AddressVariable"] = args ? args.ipv4AddressVariable : undefined;
            resourceInputs["ipv4AutoDetectBandwidth"] = args ? args.ipv4AutoDetectBandwidth : undefined;
            resourceInputs["ipv4AutoDetectBandwidthVariable"] = args ? args.ipv4AutoDetectBandwidthVariable : undefined;
            resourceInputs["ipv4DhcpDistance"] = args ? args.ipv4DhcpDistance : undefined;
            resourceInputs["ipv4DhcpDistanceVariable"] = args ? args.ipv4DhcpDistanceVariable : undefined;
            resourceInputs["ipv4DhcpHelperVariable"] = args ? args.ipv4DhcpHelperVariable : undefined;
            resourceInputs["ipv4DhcpHelpers"] = args ? args.ipv4DhcpHelpers : undefined;
            resourceInputs["ipv4IperfServer"] = args ? args.ipv4IperfServer : undefined;
            resourceInputs["ipv4IperfServerVariable"] = args ? args.ipv4IperfServerVariable : undefined;
            resourceInputs["ipv4SecondaryAddresses"] = args ? args.ipv4SecondaryAddresses : undefined;
            resourceInputs["ipv4SubnetMask"] = args ? args.ipv4SubnetMask : undefined;
            resourceInputs["ipv4SubnetMaskVariable"] = args ? args.ipv4SubnetMaskVariable : undefined;
            resourceInputs["ipv6Address"] = args ? args.ipv6Address : undefined;
            resourceInputs["ipv6AddressVariable"] = args ? args.ipv6AddressVariable : undefined;
            resourceInputs["loadInterval"] = args ? args.loadInterval : undefined;
            resourceInputs["loadIntervalVariable"] = args ? args.loadIntervalVariable : undefined;
            resourceInputs["macAddress"] = args ? args.macAddress : undefined;
            resourceInputs["macAddressVariable"] = args ? args.macAddressVariable : undefined;
            resourceInputs["mediaType"] = args ? args.mediaType : undefined;
            resourceInputs["mediaTypeVariable"] = args ? args.mediaTypeVariable : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["shutdown"] = args ? args.shutdown : undefined;
            resourceInputs["shutdownVariable"] = args ? args.shutdownVariable : undefined;
            resourceInputs["speed"] = args ? args.speed : undefined;
            resourceInputs["speedVariable"] = args ? args.speedVariable : undefined;
            resourceInputs["tcpMss"] = args ? args.tcpMss : undefined;
            resourceInputs["tcpMssVariable"] = args ? args.tcpMssVariable : undefined;
            resourceInputs["transportManagementVpnProfileParcelId"] = args ? args.transportManagementVpnProfileParcelId : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransportManagementVpnInterfaceEthernetProfileParcel.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TransportManagementVpnInterfaceEthernetProfileParcel resources.
 */
export interface TransportManagementVpnInterfaceEthernetProfileParcelState {
    /**
     * Configure ARP entries
     */
    arpEntries?: pulumi.Input<pulumi.Input<inputs.TransportManagementVpnInterfaceEthernetProfileParcelArpEntry>[]>;
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
     */
    arpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    arpTimeoutVariable?: pulumi.Input<string>;
    /**
     * Link autonegotiation
     */
    autonegotiate?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    autonegotiateVariable?: pulumi.Input<string>;
    basicConfigurationDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    basicConfigurationDescriptionVariable?: pulumi.Input<string>;
    /**
     * The description of the profile parcel
     */
    description?: pulumi.Input<string>;
    /**
     * Duplex mode - Choices: `full`, `half`, `auto`
     */
    duplex?: pulumi.Input<string>;
    /**
     * Variable name
     */
    duplexVariable?: pulumi.Input<string>;
    /**
     * Enable DHCPv6
     */
    enableDhcpv6?: pulumi.Input<boolean>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * ICMP/ICMPv6 Redirect Disable - Default value: `true`
     */
    icmpRedirectDisable?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    icmpRedirectDisableVariable?: pulumi.Input<string>;
    /**
     * Interface MTU - Range: `1500`-`9216` - Default value: `1500`
     */
    interfaceMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    interfaceMtuVariable?: pulumi.Input<string>;
    interfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceNameVariable?: pulumi.Input<string>;
    /**
     * IP Directed-Broadcast - Default value: `false`
     */
    ipDirectedBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipDirectedBroadcastVariable?: pulumi.Input<string>;
    /**
     * IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
     * <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * IP Address
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4AddressVariable?: pulumi.Input<string>;
    /**
     * Interface auto detect bandwidth - Default value: `false`
     */
    ipv4AutoDetectBandwidth?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipv4AutoDetectBandwidthVariable?: pulumi.Input<string>;
    /**
     * DHCP Distance - Range: `1`-`65536`
     */
    ipv4DhcpDistance?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipv4DhcpDistanceVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4DhcpHelperVariable?: pulumi.Input<string>;
    /**
     * List of DHCP IPv4 helper addresses (min 1, max 8)
     */
    ipv4DhcpHelpers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Iperf server for auto bandwidth detect
     */
    ipv4IperfServer?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4IperfServerVariable?: pulumi.Input<string>;
    /**
     * Secondary IpV4 Addresses
     */
    ipv4SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.TransportManagementVpnInterfaceEthernetProfileParcelIpv4SecondaryAddress>[]>;
    /**
     * Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    ipv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * IPv6 Address Secondary
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv6AddressVariable?: pulumi.Input<string>;
    /**
     * Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
     */
    loadInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    loadIntervalVariable?: pulumi.Input<string>;
    /**
     * MAC Address
     */
    macAddress?: pulumi.Input<string>;
    /**
     * Variable name
     */
    macAddressVariable?: pulumi.Input<string>;
    /**
     * Media type - Choices: `auto-select`, `rj45`, `sfp`
     */
    mediaType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    mediaTypeVariable?: pulumi.Input<string>;
    /**
     * The name of the profile parcel
     */
    name?: pulumi.Input<string>;
    /**
     * - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
     */
    speed?: pulumi.Input<string>;
    /**
     * Variable name
     */
    speedVariable?: pulumi.Input<string>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    tcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssVariable?: pulumi.Input<string>;
    /**
     * Transport Management VPN Profile Parcel ID
     */
    transportManagementVpnProfileParcelId?: pulumi.Input<string>;
    /**
     * The version of the profile parcel
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a TransportManagementVpnInterfaceEthernetProfileParcel resource.
 */
export interface TransportManagementVpnInterfaceEthernetProfileParcelArgs {
    /**
     * Configure ARP entries
     */
    arpEntries?: pulumi.Input<pulumi.Input<inputs.TransportManagementVpnInterfaceEthernetProfileParcelArpEntry>[]>;
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
     */
    arpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    arpTimeoutVariable?: pulumi.Input<string>;
    /**
     * Link autonegotiation
     */
    autonegotiate?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    autonegotiateVariable?: pulumi.Input<string>;
    basicConfigurationDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    basicConfigurationDescriptionVariable?: pulumi.Input<string>;
    /**
     * The description of the profile parcel
     */
    description?: pulumi.Input<string>;
    /**
     * Duplex mode - Choices: `full`, `half`, `auto`
     */
    duplex?: pulumi.Input<string>;
    /**
     * Variable name
     */
    duplexVariable?: pulumi.Input<string>;
    /**
     * Enable DHCPv6
     */
    enableDhcpv6?: pulumi.Input<boolean>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * ICMP/ICMPv6 Redirect Disable - Default value: `true`
     */
    icmpRedirectDisable?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    icmpRedirectDisableVariable?: pulumi.Input<string>;
    /**
     * Interface MTU - Range: `1500`-`9216` - Default value: `1500`
     */
    interfaceMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    interfaceMtuVariable?: pulumi.Input<string>;
    interfaceName: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceNameVariable?: pulumi.Input<string>;
    /**
     * IP Directed-Broadcast - Default value: `false`
     */
    ipDirectedBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipDirectedBroadcastVariable?: pulumi.Input<string>;
    /**
     * IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
     * <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * IP Address
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4AddressVariable?: pulumi.Input<string>;
    /**
     * Interface auto detect bandwidth - Default value: `false`
     */
    ipv4AutoDetectBandwidth?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipv4AutoDetectBandwidthVariable?: pulumi.Input<string>;
    /**
     * DHCP Distance - Range: `1`-`65536`
     */
    ipv4DhcpDistance?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipv4DhcpDistanceVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4DhcpHelperVariable?: pulumi.Input<string>;
    /**
     * List of DHCP IPv4 helper addresses (min 1, max 8)
     */
    ipv4DhcpHelpers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Iperf server for auto bandwidth detect
     */
    ipv4IperfServer?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4IperfServerVariable?: pulumi.Input<string>;
    /**
     * Secondary IpV4 Addresses
     */
    ipv4SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.TransportManagementVpnInterfaceEthernetProfileParcelIpv4SecondaryAddress>[]>;
    /**
     * Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    ipv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * IPv6 Address Secondary
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv6AddressVariable?: pulumi.Input<string>;
    /**
     * Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
     */
    loadInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    loadIntervalVariable?: pulumi.Input<string>;
    /**
     * MAC Address
     */
    macAddress?: pulumi.Input<string>;
    /**
     * Variable name
     */
    macAddressVariable?: pulumi.Input<string>;
    /**
     * Media type - Choices: `auto-select`, `rj45`, `sfp`
     */
    mediaType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    mediaTypeVariable?: pulumi.Input<string>;
    /**
     * The name of the profile parcel
     */
    name?: pulumi.Input<string>;
    /**
     * - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
     */
    speed?: pulumi.Input<string>;
    /**
     * Variable name
     */
    speedVariable?: pulumi.Input<string>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    tcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssVariable?: pulumi.Input<string>;
    /**
     * Transport Management VPN Profile Parcel ID
     */
    transportManagementVpnProfileParcelId?: pulumi.Input<string>;
}
