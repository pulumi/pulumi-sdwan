// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Transport Management VPN profile parcel.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import sdwan:index/transportManagementVpnProfileParcel:TransportManagementVpnProfileParcel example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class TransportManagementVpnProfileParcel extends pulumi.CustomResource {
    /**
     * Get an existing TransportManagementVpnProfileParcel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransportManagementVpnProfileParcelState, opts?: pulumi.CustomResourceOptions): TransportManagementVpnProfileParcel {
        return new TransportManagementVpnProfileParcel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/transportManagementVpnProfileParcel:TransportManagementVpnProfileParcel';

    /**
     * Returns true if the given object is an instance of TransportManagementVpnProfileParcel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransportManagementVpnProfileParcel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransportManagementVpnProfileParcel.__pulumiType;
    }

    /**
     * Name
     */
    public readonly basicConfigurationDescription!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly basicConfigurationDescriptionVariable!: pulumi.Output<string | undefined>;
    /**
     * The description of the profile parcel
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Feature Profile ID
     */
    public readonly featureProfileId!: pulumi.Output<string | undefined>;
    /**
     * IPv4 Static Route
     */
    public readonly ipv4StaticRoutes!: pulumi.Output<outputs.TransportManagementVpnProfileParcelIpv4StaticRoute[] | undefined>;
    /**
     * IPv6 Static Route
     */
    public readonly ipv6StaticRoutes!: pulumi.Output<outputs.TransportManagementVpnProfileParcelIpv6StaticRoute[] | undefined>;
    /**
     * The name of the profile parcel
     */
    public readonly name!: pulumi.Output<string>;
    public readonly newHostMappings!: pulumi.Output<outputs.TransportManagementVpnProfileParcelNewHostMapping[] | undefined>;
    /**
     * Primary DNS Address (IPv4)
     */
    public readonly primaryDnsAddressIpv4!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly primaryDnsAddressIpv4Variable!: pulumi.Output<string | undefined>;
    /**
     * Primary DNS Address (IPv6)
     */
    public readonly primaryDnsAddressIpv6!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly primaryDnsAddressIpv6Variable!: pulumi.Output<string | undefined>;
    /**
     * Secondary DNS Address (IPv4)
     */
    public readonly secondaryDnsAddressIpv4!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly secondaryDnsAddressIpv4Variable!: pulumi.Output<string | undefined>;
    /**
     * Secondary DNS Address (IPv6)
     */
    public readonly secondaryDnsAddressIpv6!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly secondaryDnsAddressIpv6Variable!: pulumi.Output<string | undefined>;
    /**
     * The version of the profile parcel
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a TransportManagementVpnProfileParcel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TransportManagementVpnProfileParcelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransportManagementVpnProfileParcelArgs | TransportManagementVpnProfileParcelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransportManagementVpnProfileParcelState | undefined;
            resourceInputs["basicConfigurationDescription"] = state ? state.basicConfigurationDescription : undefined;
            resourceInputs["basicConfigurationDescriptionVariable"] = state ? state.basicConfigurationDescriptionVariable : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["featureProfileId"] = state ? state.featureProfileId : undefined;
            resourceInputs["ipv4StaticRoutes"] = state ? state.ipv4StaticRoutes : undefined;
            resourceInputs["ipv6StaticRoutes"] = state ? state.ipv6StaticRoutes : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["newHostMappings"] = state ? state.newHostMappings : undefined;
            resourceInputs["primaryDnsAddressIpv4"] = state ? state.primaryDnsAddressIpv4 : undefined;
            resourceInputs["primaryDnsAddressIpv4Variable"] = state ? state.primaryDnsAddressIpv4Variable : undefined;
            resourceInputs["primaryDnsAddressIpv6"] = state ? state.primaryDnsAddressIpv6 : undefined;
            resourceInputs["primaryDnsAddressIpv6Variable"] = state ? state.primaryDnsAddressIpv6Variable : undefined;
            resourceInputs["secondaryDnsAddressIpv4"] = state ? state.secondaryDnsAddressIpv4 : undefined;
            resourceInputs["secondaryDnsAddressIpv4Variable"] = state ? state.secondaryDnsAddressIpv4Variable : undefined;
            resourceInputs["secondaryDnsAddressIpv6"] = state ? state.secondaryDnsAddressIpv6 : undefined;
            resourceInputs["secondaryDnsAddressIpv6Variable"] = state ? state.secondaryDnsAddressIpv6Variable : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as TransportManagementVpnProfileParcelArgs | undefined;
            resourceInputs["basicConfigurationDescription"] = args ? args.basicConfigurationDescription : undefined;
            resourceInputs["basicConfigurationDescriptionVariable"] = args ? args.basicConfigurationDescriptionVariable : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["featureProfileId"] = args ? args.featureProfileId : undefined;
            resourceInputs["ipv4StaticRoutes"] = args ? args.ipv4StaticRoutes : undefined;
            resourceInputs["ipv6StaticRoutes"] = args ? args.ipv6StaticRoutes : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["newHostMappings"] = args ? args.newHostMappings : undefined;
            resourceInputs["primaryDnsAddressIpv4"] = args ? args.primaryDnsAddressIpv4 : undefined;
            resourceInputs["primaryDnsAddressIpv4Variable"] = args ? args.primaryDnsAddressIpv4Variable : undefined;
            resourceInputs["primaryDnsAddressIpv6"] = args ? args.primaryDnsAddressIpv6 : undefined;
            resourceInputs["primaryDnsAddressIpv6Variable"] = args ? args.primaryDnsAddressIpv6Variable : undefined;
            resourceInputs["secondaryDnsAddressIpv4"] = args ? args.secondaryDnsAddressIpv4 : undefined;
            resourceInputs["secondaryDnsAddressIpv4Variable"] = args ? args.secondaryDnsAddressIpv4Variable : undefined;
            resourceInputs["secondaryDnsAddressIpv6"] = args ? args.secondaryDnsAddressIpv6 : undefined;
            resourceInputs["secondaryDnsAddressIpv6Variable"] = args ? args.secondaryDnsAddressIpv6Variable : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransportManagementVpnProfileParcel.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TransportManagementVpnProfileParcel resources.
 */
export interface TransportManagementVpnProfileParcelState {
    /**
     * Name
     */
    basicConfigurationDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    basicConfigurationDescriptionVariable?: pulumi.Input<string>;
    /**
     * The description of the profile parcel
     */
    description?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * IPv4 Static Route
     */
    ipv4StaticRoutes?: pulumi.Input<pulumi.Input<inputs.TransportManagementVpnProfileParcelIpv4StaticRoute>[]>;
    /**
     * IPv6 Static Route
     */
    ipv6StaticRoutes?: pulumi.Input<pulumi.Input<inputs.TransportManagementVpnProfileParcelIpv6StaticRoute>[]>;
    /**
     * The name of the profile parcel
     */
    name?: pulumi.Input<string>;
    newHostMappings?: pulumi.Input<pulumi.Input<inputs.TransportManagementVpnProfileParcelNewHostMapping>[]>;
    /**
     * Primary DNS Address (IPv4)
     */
    primaryDnsAddressIpv4?: pulumi.Input<string>;
    /**
     * Variable name
     */
    primaryDnsAddressIpv4Variable?: pulumi.Input<string>;
    /**
     * Primary DNS Address (IPv6)
     */
    primaryDnsAddressIpv6?: pulumi.Input<string>;
    /**
     * Variable name
     */
    primaryDnsAddressIpv6Variable?: pulumi.Input<string>;
    /**
     * Secondary DNS Address (IPv4)
     */
    secondaryDnsAddressIpv4?: pulumi.Input<string>;
    /**
     * Variable name
     */
    secondaryDnsAddressIpv4Variable?: pulumi.Input<string>;
    /**
     * Secondary DNS Address (IPv6)
     */
    secondaryDnsAddressIpv6?: pulumi.Input<string>;
    /**
     * Variable name
     */
    secondaryDnsAddressIpv6Variable?: pulumi.Input<string>;
    /**
     * The version of the profile parcel
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a TransportManagementVpnProfileParcel resource.
 */
export interface TransportManagementVpnProfileParcelArgs {
    /**
     * Name
     */
    basicConfigurationDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    basicConfigurationDescriptionVariable?: pulumi.Input<string>;
    /**
     * The description of the profile parcel
     */
    description?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * IPv4 Static Route
     */
    ipv4StaticRoutes?: pulumi.Input<pulumi.Input<inputs.TransportManagementVpnProfileParcelIpv4StaticRoute>[]>;
    /**
     * IPv6 Static Route
     */
    ipv6StaticRoutes?: pulumi.Input<pulumi.Input<inputs.TransportManagementVpnProfileParcelIpv6StaticRoute>[]>;
    /**
     * The name of the profile parcel
     */
    name?: pulumi.Input<string>;
    newHostMappings?: pulumi.Input<pulumi.Input<inputs.TransportManagementVpnProfileParcelNewHostMapping>[]>;
    /**
     * Primary DNS Address (IPv4)
     */
    primaryDnsAddressIpv4?: pulumi.Input<string>;
    /**
     * Variable name
     */
    primaryDnsAddressIpv4Variable?: pulumi.Input<string>;
    /**
     * Primary DNS Address (IPv6)
     */
    primaryDnsAddressIpv6?: pulumi.Input<string>;
    /**
     * Variable name
     */
    primaryDnsAddressIpv6Variable?: pulumi.Input<string>;
    /**
     * Secondary DNS Address (IPv4)
     */
    secondaryDnsAddressIpv4?: pulumi.Input<string>;
    /**
     * Variable name
     */
    secondaryDnsAddressIpv4Variable?: pulumi.Input<string>;
    /**
     * Secondary DNS Address (IPv6)
     */
    secondaryDnsAddressIpv6?: pulumi.Input<string>;
    /**
     * Variable name
     */
    secondaryDnsAddressIpv6Variable?: pulumi.Input<string>;
}
