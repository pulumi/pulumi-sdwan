// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Cisco BGP feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 *
 * ## Example Usage
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import sdwan:index/ciscoBgpFeatureTemplate:CiscoBgpFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class CiscoBgpFeatureTemplate extends pulumi.CustomResource {
    /**
     * Get an existing CiscoBgpFeatureTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CiscoBgpFeatureTemplateState, opts?: pulumi.CustomResourceOptions): CiscoBgpFeatureTemplate {
        return new CiscoBgpFeatureTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/ciscoBgpFeatureTemplate:CiscoBgpFeatureTemplate';

    /**
     * Returns true if the given object is an instance of CiscoBgpFeatureTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CiscoBgpFeatureTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CiscoBgpFeatureTemplate.__pulumiType;
    }

    /**
     * Set BGP address family
     */
    declare public readonly addressFamilies: pulumi.Output<outputs.CiscoBgpFeatureTemplateAddressFamily[] | undefined>;
    /**
     * Compare MEDs from all ASs when selecting active BGP paths
     *   - Default value: `false`
     */
    declare public readonly alwaysCompareMed: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly alwaysCompareMedVariable: pulumi.Output<string | undefined>;
    /**
     * Set autonomous system number <1..4294967295> or <XX.YY>
     */
    declare public readonly asNumber: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly asNumberVariable: pulumi.Output<string | undefined>;
    /**
     * Compare router IDs when selecting active BGP paths
     *   - Default value: `false`
     */
    declare public readonly compareRouterId: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly compareRouterIdVariable: pulumi.Output<string | undefined>;
    /**
     * The description of the feature template
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * Compare MEDs from all routes from same AS when selecting active BGP paths
     *   - Default value: `false`
     */
    declare public readonly deterministicMed: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly deterministicMedVariable: pulumi.Output<string | undefined>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    declare public readonly deviceTypes: pulumi.Output<string[]>;
    /**
     * Set administrative distance for external BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `20`
     */
    declare public readonly distanceExternal: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly distanceExternalVariable: pulumi.Output<string | undefined>;
    /**
     * Set administrative distance for internal BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `200`
     */
    declare public readonly distanceInternal: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly distanceInternalVariable: pulumi.Output<string | undefined>;
    /**
     * Set administrative distance for local BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `20`
     */
    declare public readonly distanceLocal: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly distanceLocalVariable: pulumi.Output<string | undefined>;
    /**
     * Set the interval when BGP considers a neighbor to be down
     *   - Range: `0`-`65535`
     *   - Default value: `180`
     */
    declare public readonly holdtime: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly holdtimeVariable: pulumi.Output<string | undefined>;
    /**
     * Set BGP neighbors
     */
    declare public readonly ipv4Neighbors: pulumi.Output<outputs.CiscoBgpFeatureTemplateIpv4Neighbor[] | undefined>;
    /**
     * Router Target for IPV4
     */
    declare public readonly ipv4RouteTargets: pulumi.Output<outputs.CiscoBgpFeatureTemplateIpv4RouteTarget[] | undefined>;
    /**
     * Set BGP IPv6 neighbors
     */
    declare public readonly ipv6Neighbors: pulumi.Output<outputs.CiscoBgpFeatureTemplateIpv6Neighbor[] | undefined>;
    /**
     * Router Target for IPV6
     */
    declare public readonly ipv6RouteTargets: pulumi.Output<outputs.CiscoBgpFeatureTemplateIpv6RouteTarget[] | undefined>;
    /**
     * Set how often keepalive messages are sent to BGP peer
     *   - Range: `0`-`65535`
     *   - Default value: `60`
     */
    declare public readonly keepalive: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly keepaliveVariable: pulumi.Output<string | undefined>;
    /**
     * If path has no MED, consider it to be worst path when selecting active BGP paths
     *   - Default value: `false`
     */
    declare public readonly missingMedWorst: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly missingMedWorstVariable: pulumi.Output<string | undefined>;
    /**
     * MPLS BGP Interface
     */
    declare public readonly mplsInterfaces: pulumi.Output<outputs.CiscoBgpFeatureTemplateMplsInterface[] | undefined>;
    /**
     * Ignore AS for multipath selection
     *   - Default value: `false`
     */
    declare public readonly multipathRelax: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly multipathRelaxVariable: pulumi.Output<string | undefined>;
    /**
     * The name of the feature template
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Propagate AS Path 
     *   - Default value: `false`
     */
    declare public readonly propagateAspath: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly propagateAspathVariable: pulumi.Output<string | undefined>;
    /**
     * Propagate Community
     *   - Default value: `false`
     */
    declare public readonly propagateCommunity: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly propagateCommunityVariable: pulumi.Output<string | undefined>;
    /**
     * Configure BGP router identifier
     */
    declare public readonly routerId: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly routerIdVariable: pulumi.Output<string | undefined>;
    /**
     * Enable or disable BGP
     *   - Default value: `false`
     */
    declare public readonly shutdown: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly shutdownVariable: pulumi.Output<string | undefined>;
    /**
     * The template type
     */
    declare public /*out*/ readonly templateType: pulumi.Output<string>;
    /**
     * The version of the feature template
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;

    /**
     * Create a CiscoBgpFeatureTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CiscoBgpFeatureTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CiscoBgpFeatureTemplateArgs | CiscoBgpFeatureTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CiscoBgpFeatureTemplateState | undefined;
            resourceInputs["addressFamilies"] = state?.addressFamilies;
            resourceInputs["alwaysCompareMed"] = state?.alwaysCompareMed;
            resourceInputs["alwaysCompareMedVariable"] = state?.alwaysCompareMedVariable;
            resourceInputs["asNumber"] = state?.asNumber;
            resourceInputs["asNumberVariable"] = state?.asNumberVariable;
            resourceInputs["compareRouterId"] = state?.compareRouterId;
            resourceInputs["compareRouterIdVariable"] = state?.compareRouterIdVariable;
            resourceInputs["description"] = state?.description;
            resourceInputs["deterministicMed"] = state?.deterministicMed;
            resourceInputs["deterministicMedVariable"] = state?.deterministicMedVariable;
            resourceInputs["deviceTypes"] = state?.deviceTypes;
            resourceInputs["distanceExternal"] = state?.distanceExternal;
            resourceInputs["distanceExternalVariable"] = state?.distanceExternalVariable;
            resourceInputs["distanceInternal"] = state?.distanceInternal;
            resourceInputs["distanceInternalVariable"] = state?.distanceInternalVariable;
            resourceInputs["distanceLocal"] = state?.distanceLocal;
            resourceInputs["distanceLocalVariable"] = state?.distanceLocalVariable;
            resourceInputs["holdtime"] = state?.holdtime;
            resourceInputs["holdtimeVariable"] = state?.holdtimeVariable;
            resourceInputs["ipv4Neighbors"] = state?.ipv4Neighbors;
            resourceInputs["ipv4RouteTargets"] = state?.ipv4RouteTargets;
            resourceInputs["ipv6Neighbors"] = state?.ipv6Neighbors;
            resourceInputs["ipv6RouteTargets"] = state?.ipv6RouteTargets;
            resourceInputs["keepalive"] = state?.keepalive;
            resourceInputs["keepaliveVariable"] = state?.keepaliveVariable;
            resourceInputs["missingMedWorst"] = state?.missingMedWorst;
            resourceInputs["missingMedWorstVariable"] = state?.missingMedWorstVariable;
            resourceInputs["mplsInterfaces"] = state?.mplsInterfaces;
            resourceInputs["multipathRelax"] = state?.multipathRelax;
            resourceInputs["multipathRelaxVariable"] = state?.multipathRelaxVariable;
            resourceInputs["name"] = state?.name;
            resourceInputs["propagateAspath"] = state?.propagateAspath;
            resourceInputs["propagateAspathVariable"] = state?.propagateAspathVariable;
            resourceInputs["propagateCommunity"] = state?.propagateCommunity;
            resourceInputs["propagateCommunityVariable"] = state?.propagateCommunityVariable;
            resourceInputs["routerId"] = state?.routerId;
            resourceInputs["routerIdVariable"] = state?.routerIdVariable;
            resourceInputs["shutdown"] = state?.shutdown;
            resourceInputs["shutdownVariable"] = state?.shutdownVariable;
            resourceInputs["templateType"] = state?.templateType;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as CiscoBgpFeatureTemplateArgs | undefined;
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if (args?.deviceTypes === undefined && !opts.urn) {
                throw new Error("Missing required property 'deviceTypes'");
            }
            resourceInputs["addressFamilies"] = args?.addressFamilies;
            resourceInputs["alwaysCompareMed"] = args?.alwaysCompareMed;
            resourceInputs["alwaysCompareMedVariable"] = args?.alwaysCompareMedVariable;
            resourceInputs["asNumber"] = args?.asNumber;
            resourceInputs["asNumberVariable"] = args?.asNumberVariable;
            resourceInputs["compareRouterId"] = args?.compareRouterId;
            resourceInputs["compareRouterIdVariable"] = args?.compareRouterIdVariable;
            resourceInputs["description"] = args?.description;
            resourceInputs["deterministicMed"] = args?.deterministicMed;
            resourceInputs["deterministicMedVariable"] = args?.deterministicMedVariable;
            resourceInputs["deviceTypes"] = args?.deviceTypes;
            resourceInputs["distanceExternal"] = args?.distanceExternal;
            resourceInputs["distanceExternalVariable"] = args?.distanceExternalVariable;
            resourceInputs["distanceInternal"] = args?.distanceInternal;
            resourceInputs["distanceInternalVariable"] = args?.distanceInternalVariable;
            resourceInputs["distanceLocal"] = args?.distanceLocal;
            resourceInputs["distanceLocalVariable"] = args?.distanceLocalVariable;
            resourceInputs["holdtime"] = args?.holdtime;
            resourceInputs["holdtimeVariable"] = args?.holdtimeVariable;
            resourceInputs["ipv4Neighbors"] = args?.ipv4Neighbors;
            resourceInputs["ipv4RouteTargets"] = args?.ipv4RouteTargets;
            resourceInputs["ipv6Neighbors"] = args?.ipv6Neighbors;
            resourceInputs["ipv6RouteTargets"] = args?.ipv6RouteTargets;
            resourceInputs["keepalive"] = args?.keepalive;
            resourceInputs["keepaliveVariable"] = args?.keepaliveVariable;
            resourceInputs["missingMedWorst"] = args?.missingMedWorst;
            resourceInputs["missingMedWorstVariable"] = args?.missingMedWorstVariable;
            resourceInputs["mplsInterfaces"] = args?.mplsInterfaces;
            resourceInputs["multipathRelax"] = args?.multipathRelax;
            resourceInputs["multipathRelaxVariable"] = args?.multipathRelaxVariable;
            resourceInputs["name"] = args?.name;
            resourceInputs["propagateAspath"] = args?.propagateAspath;
            resourceInputs["propagateAspathVariable"] = args?.propagateAspathVariable;
            resourceInputs["propagateCommunity"] = args?.propagateCommunity;
            resourceInputs["propagateCommunityVariable"] = args?.propagateCommunityVariable;
            resourceInputs["routerId"] = args?.routerId;
            resourceInputs["routerIdVariable"] = args?.routerIdVariable;
            resourceInputs["shutdown"] = args?.shutdown;
            resourceInputs["shutdownVariable"] = args?.shutdownVariable;
            resourceInputs["templateType"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CiscoBgpFeatureTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CiscoBgpFeatureTemplate resources.
 */
export interface CiscoBgpFeatureTemplateState {
    /**
     * Set BGP address family
     */
    addressFamilies?: pulumi.Input<pulumi.Input<inputs.CiscoBgpFeatureTemplateAddressFamily>[]>;
    /**
     * Compare MEDs from all ASs when selecting active BGP paths
     *   - Default value: `false`
     */
    alwaysCompareMed?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    alwaysCompareMedVariable?: pulumi.Input<string>;
    /**
     * Set autonomous system number <1..4294967295> or <XX.YY>
     */
    asNumber?: pulumi.Input<string>;
    /**
     * Variable name
     */
    asNumberVariable?: pulumi.Input<string>;
    /**
     * Compare router IDs when selecting active BGP paths
     *   - Default value: `false`
     */
    compareRouterId?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    compareRouterIdVariable?: pulumi.Input<string>;
    /**
     * The description of the feature template
     */
    description?: pulumi.Input<string>;
    /**
     * Compare MEDs from all routes from same AS when selecting active BGP paths
     *   - Default value: `false`
     */
    deterministicMed?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    deterministicMedVariable?: pulumi.Input<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set administrative distance for external BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `20`
     */
    distanceExternal?: pulumi.Input<number>;
    /**
     * Variable name
     */
    distanceExternalVariable?: pulumi.Input<string>;
    /**
     * Set administrative distance for internal BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `200`
     */
    distanceInternal?: pulumi.Input<number>;
    /**
     * Variable name
     */
    distanceInternalVariable?: pulumi.Input<string>;
    /**
     * Set administrative distance for local BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `20`
     */
    distanceLocal?: pulumi.Input<number>;
    /**
     * Variable name
     */
    distanceLocalVariable?: pulumi.Input<string>;
    /**
     * Set the interval when BGP considers a neighbor to be down
     *   - Range: `0`-`65535`
     *   - Default value: `180`
     */
    holdtime?: pulumi.Input<number>;
    /**
     * Variable name
     */
    holdtimeVariable?: pulumi.Input<string>;
    /**
     * Set BGP neighbors
     */
    ipv4Neighbors?: pulumi.Input<pulumi.Input<inputs.CiscoBgpFeatureTemplateIpv4Neighbor>[]>;
    /**
     * Router Target for IPV4
     */
    ipv4RouteTargets?: pulumi.Input<pulumi.Input<inputs.CiscoBgpFeatureTemplateIpv4RouteTarget>[]>;
    /**
     * Set BGP IPv6 neighbors
     */
    ipv6Neighbors?: pulumi.Input<pulumi.Input<inputs.CiscoBgpFeatureTemplateIpv6Neighbor>[]>;
    /**
     * Router Target for IPV6
     */
    ipv6RouteTargets?: pulumi.Input<pulumi.Input<inputs.CiscoBgpFeatureTemplateIpv6RouteTarget>[]>;
    /**
     * Set how often keepalive messages are sent to BGP peer
     *   - Range: `0`-`65535`
     *   - Default value: `60`
     */
    keepalive?: pulumi.Input<number>;
    /**
     * Variable name
     */
    keepaliveVariable?: pulumi.Input<string>;
    /**
     * If path has no MED, consider it to be worst path when selecting active BGP paths
     *   - Default value: `false`
     */
    missingMedWorst?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    missingMedWorstVariable?: pulumi.Input<string>;
    /**
     * MPLS BGP Interface
     */
    mplsInterfaces?: pulumi.Input<pulumi.Input<inputs.CiscoBgpFeatureTemplateMplsInterface>[]>;
    /**
     * Ignore AS for multipath selection
     *   - Default value: `false`
     */
    multipathRelax?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    multipathRelaxVariable?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Propagate AS Path 
     *   - Default value: `false`
     */
    propagateAspath?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    propagateAspathVariable?: pulumi.Input<string>;
    /**
     * Propagate Community
     *   - Default value: `false`
     */
    propagateCommunity?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    propagateCommunityVariable?: pulumi.Input<string>;
    /**
     * Configure BGP router identifier
     */
    routerId?: pulumi.Input<string>;
    /**
     * Variable name
     */
    routerIdVariable?: pulumi.Input<string>;
    /**
     * Enable or disable BGP
     *   - Default value: `false`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * The template type
     */
    templateType?: pulumi.Input<string>;
    /**
     * The version of the feature template
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CiscoBgpFeatureTemplate resource.
 */
export interface CiscoBgpFeatureTemplateArgs {
    /**
     * Set BGP address family
     */
    addressFamilies?: pulumi.Input<pulumi.Input<inputs.CiscoBgpFeatureTemplateAddressFamily>[]>;
    /**
     * Compare MEDs from all ASs when selecting active BGP paths
     *   - Default value: `false`
     */
    alwaysCompareMed?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    alwaysCompareMedVariable?: pulumi.Input<string>;
    /**
     * Set autonomous system number <1..4294967295> or <XX.YY>
     */
    asNumber?: pulumi.Input<string>;
    /**
     * Variable name
     */
    asNumberVariable?: pulumi.Input<string>;
    /**
     * Compare router IDs when selecting active BGP paths
     *   - Default value: `false`
     */
    compareRouterId?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    compareRouterIdVariable?: pulumi.Input<string>;
    /**
     * The description of the feature template
     */
    description: pulumi.Input<string>;
    /**
     * Compare MEDs from all routes from same AS when selecting active BGP paths
     *   - Default value: `false`
     */
    deterministicMed?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    deterministicMedVariable?: pulumi.Input<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set administrative distance for external BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `20`
     */
    distanceExternal?: pulumi.Input<number>;
    /**
     * Variable name
     */
    distanceExternalVariable?: pulumi.Input<string>;
    /**
     * Set administrative distance for internal BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `200`
     */
    distanceInternal?: pulumi.Input<number>;
    /**
     * Variable name
     */
    distanceInternalVariable?: pulumi.Input<string>;
    /**
     * Set administrative distance for local BGP routes
     *   - Range: `1`-`255`
     *   - Default value: `20`
     */
    distanceLocal?: pulumi.Input<number>;
    /**
     * Variable name
     */
    distanceLocalVariable?: pulumi.Input<string>;
    /**
     * Set the interval when BGP considers a neighbor to be down
     *   - Range: `0`-`65535`
     *   - Default value: `180`
     */
    holdtime?: pulumi.Input<number>;
    /**
     * Variable name
     */
    holdtimeVariable?: pulumi.Input<string>;
    /**
     * Set BGP neighbors
     */
    ipv4Neighbors?: pulumi.Input<pulumi.Input<inputs.CiscoBgpFeatureTemplateIpv4Neighbor>[]>;
    /**
     * Router Target for IPV4
     */
    ipv4RouteTargets?: pulumi.Input<pulumi.Input<inputs.CiscoBgpFeatureTemplateIpv4RouteTarget>[]>;
    /**
     * Set BGP IPv6 neighbors
     */
    ipv6Neighbors?: pulumi.Input<pulumi.Input<inputs.CiscoBgpFeatureTemplateIpv6Neighbor>[]>;
    /**
     * Router Target for IPV6
     */
    ipv6RouteTargets?: pulumi.Input<pulumi.Input<inputs.CiscoBgpFeatureTemplateIpv6RouteTarget>[]>;
    /**
     * Set how often keepalive messages are sent to BGP peer
     *   - Range: `0`-`65535`
     *   - Default value: `60`
     */
    keepalive?: pulumi.Input<number>;
    /**
     * Variable name
     */
    keepaliveVariable?: pulumi.Input<string>;
    /**
     * If path has no MED, consider it to be worst path when selecting active BGP paths
     *   - Default value: `false`
     */
    missingMedWorst?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    missingMedWorstVariable?: pulumi.Input<string>;
    /**
     * MPLS BGP Interface
     */
    mplsInterfaces?: pulumi.Input<pulumi.Input<inputs.CiscoBgpFeatureTemplateMplsInterface>[]>;
    /**
     * Ignore AS for multipath selection
     *   - Default value: `false`
     */
    multipathRelax?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    multipathRelaxVariable?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Propagate AS Path 
     *   - Default value: `false`
     */
    propagateAspath?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    propagateAspathVariable?: pulumi.Input<string>;
    /**
     * Propagate Community
     *   - Default value: `false`
     */
    propagateCommunity?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    propagateCommunityVariable?: pulumi.Input<string>;
    /**
     * Configure BGP router identifier
     */
    routerId?: pulumi.Input<string>;
    /**
     * Variable name
     */
    routerIdVariable?: pulumi.Input<string>;
    /**
     * Enable or disable BGP
     *   - Default value: `false`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
}
