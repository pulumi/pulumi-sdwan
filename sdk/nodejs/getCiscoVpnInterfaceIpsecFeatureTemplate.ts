// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read the Cisco VPN Interface IPSec feature template.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getCiscoVpnInterfaceIpsecFeatureTemplate({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getCiscoVpnInterfaceIpsecFeatureTemplate(args?: GetCiscoVpnInterfaceIpsecFeatureTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetCiscoVpnInterfaceIpsecFeatureTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getCiscoVpnInterfaceIpsecFeatureTemplate:getCiscoVpnInterfaceIpsecFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getCiscoVpnInterfaceIpsecFeatureTemplate.
 */
export interface GetCiscoVpnInterfaceIpsecFeatureTemplateArgs {
    /**
     * The id of the feature template
     */
    id?: string;
    /**
     * The name of the feature template
     */
    name?: string;
}

/**
 * A collection of values returned by getCiscoVpnInterfaceIpsecFeatureTemplate.
 */
export interface GetCiscoVpnInterfaceIpsecFeatureTemplateResult {
    /**
     * Enable Application Tunnel Type
     */
    readonly application: string;
    /**
     * Variable name
     */
    readonly applicationVariable: string;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
     */
    readonly clearDontFragment: boolean;
    /**
     * Variable name
     */
    readonly clearDontFragmentVariable: string;
    /**
     * IKE keepalive interval (seconds)
     */
    readonly deadPeerDetectionInterval: number;
    /**
     * Variable name
     */
    readonly deadPeerDetectionIntervalVariable: string;
    /**
     * IKE keepalive retries
     */
    readonly deadPeerDetectionRetries: number;
    /**
     * Variable name
     */
    readonly deadPeerDetectionRetriesVariable: string;
    /**
     * The description of the feature template
     */
    readonly description: string;
    /**
     * List of supported device types
     */
    readonly deviceTypes: string[];
    /**
     * The id of the feature template
     */
    readonly id: string;
    /**
     * IKE identity the IKE preshared secret belongs to
     */
    readonly ikeCiphersuite: string;
    /**
     * Variable name
     */
    readonly ikeCiphersuiteVariable: string;
    /**
     * IKE Diffie Hellman Groups
     */
    readonly ikeGroup: string;
    /**
     * Variable name
     */
    readonly ikeGroupVariable: string;
    /**
     * IKE integrity protocol
     */
    readonly ikeMode: string;
    /**
     * Variable name
     */
    readonly ikeModeVariable: string;
    /**
     * Use preshared key to authenticate IKE peer
     */
    readonly ikePreSharedKey: string;
    /**
     * IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
     */
    readonly ikePreSharedKeyLocalId: string;
    /**
     * Variable name
     */
    readonly ikePreSharedKeyLocalIdVariable: string;
    /**
     * IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
     */
    readonly ikePreSharedKeyRemoteId: string;
    /**
     * Variable name
     */
    readonly ikePreSharedKeyRemoteIdVariable: string;
    /**
     * Variable name
     */
    readonly ikePreSharedKeyVariable: string;
    /**
     * IKE rekey interval \n\n seconds
     */
    readonly ikeRekeyInterval: number;
    /**
     * Variable name
     */
    readonly ikeRekeyIntervalVariable: string;
    /**
     * IKE Version \n\n
     */
    readonly ikeVersion: number;
    /**
     * Interface description
     */
    readonly interfaceDescription: string;
    /**
     * Variable name
     */
    readonly interfaceDescriptionVariable: string;
    /**
     * Interface name: IPsec when present
     */
    readonly interfaceName: string;
    /**
     * Variable name
     */
    readonly interfaceNameVariable: string;
    /**
     * Assign IPv4 address
     */
    readonly ipAddress: string;
    /**
     * Variable name
     */
    readonly ipAddressVariable: string;
    /**
     * IPsec(ESP) encryption and integrity protocol
     */
    readonly ipsecCiphersuite: string;
    /**
     * Variable name
     */
    readonly ipsecCiphersuiteVariable: string;
    /**
     * IPsec perfect forward secrecy settings
     */
    readonly ipsecPerfectForwardSecrecy: string;
    /**
     * Variable name
     */
    readonly ipsecPerfectForwardSecrecyVariable: string;
    /**
     * IPsec rekey interval \n\n seconds
     */
    readonly ipsecRekeyInterval: number;
    /**
     * Variable name
     */
    readonly ipsecRekeyIntervalVariable: string;
    /**
     * Replay window size 32..8192 (must be a power of 2)
     */
    readonly ipsecReplayWindow: number;
    /**
     * Variable name
     */
    readonly ipsecReplayWindowVariable: string;
    /**
     * Interface MTU \n\n, in bytes
     */
    readonly mtu: number;
    /**
     * Variable name
     */
    readonly mtuVariable: string;
    /**
     * The name of the feature template
     */
    readonly name: string;
    /**
     * Administrative state
     */
    readonly shutdown: boolean;
    /**
     * Variable name
     */
    readonly shutdownVariable: string;
    /**
     * TCP MSS on SYN packets, in bytes
     */
    readonly tcpMssAdjust: number;
    /**
     * Variable name
     */
    readonly tcpMssAdjustVariable: string;
    /**
     * The template type
     */
    readonly templateType: string;
    /**
     * Variable name
     */
    readonly trackerVariable: string;
    /**
     * Enable tracker for this interface
     */
    readonly trackers: string[];
    /**
     * Tunnel destination IP address
     */
    readonly tunnelDestination: string;
    /**
     * Variable name
     */
    readonly tunnelDestinationVariable: string;
    /**
     * \n\n Interface name: ge0/\n\n or ge0/\n\n.vlanid
     */
    readonly tunnelRouteVia: string;
    /**
     * Variable name
     */
    readonly tunnelRouteViaVariable: string;
    /**
     * Tunnel source IP Address
     */
    readonly tunnelSource: string;
    /**
     * \n\n Interface name: ge0/\n\n or ge0/\n\n.vlanid
     */
    readonly tunnelSourceInterface: string;
    /**
     * Variable name
     */
    readonly tunnelSourceInterfaceVariable: string;
    /**
     * Variable name
     */
    readonly tunnelSourceVariable: string;
    /**
     * The version of the feature template
     */
    readonly version: number;
}
/**
 * This data source can read the Cisco VPN Interface IPSec feature template.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getCiscoVpnInterfaceIpsecFeatureTemplate({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getCiscoVpnInterfaceIpsecFeatureTemplateOutput(args?: GetCiscoVpnInterfaceIpsecFeatureTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCiscoVpnInterfaceIpsecFeatureTemplateResult> {
    return pulumi.output(args).apply((a: any) => getCiscoVpnInterfaceIpsecFeatureTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getCiscoVpnInterfaceIpsecFeatureTemplate.
 */
export interface GetCiscoVpnInterfaceIpsecFeatureTemplateOutputArgs {
    /**
     * The id of the feature template
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
}
