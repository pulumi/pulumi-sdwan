// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Policy Object TLOC List Policy_object.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = new sdwan.PolicyObjectTlocList("example", {
 *     name: "Example",
 *     description: "My Example",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 *     entries: [{
 *         tloc_ip: "10.0.0.0",
 *         color: "3g",
 *         encapsulation: "gre",
 *         preference: "33",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * Expected import identifier with the format: "policy_object_tloc_list_id,feature_profile_id"
 *
 * ```sh
 * $ pulumi import sdwan:index/policyObjectTlocList:PolicyObjectTlocList example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
 * ```
 */
export class PolicyObjectTlocList extends pulumi.CustomResource {
    /**
     * Get an existing PolicyObjectTlocList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyObjectTlocListState, opts?: pulumi.CustomResourceOptions): PolicyObjectTlocList {
        return new PolicyObjectTlocList(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/policyObjectTlocList:PolicyObjectTlocList';

    /**
     * Returns true if the given object is an instance of PolicyObjectTlocList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyObjectTlocList {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyObjectTlocList.__pulumiType;
    }

    /**
     * The description of the Policy_object
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * TLOC List
     */
    declare public readonly entries: pulumi.Output<outputs.PolicyObjectTlocListEntry[]>;
    /**
     * Feature Profile ID
     */
    declare public readonly featureProfileId: pulumi.Output<string>;
    /**
     * The name of the Policy_object
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The version of the Policy_object
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;

    /**
     * Create a PolicyObjectTlocList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyObjectTlocListArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyObjectTlocListArgs | PolicyObjectTlocListState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyObjectTlocListState | undefined;
            resourceInputs["description"] = state?.description;
            resourceInputs["entries"] = state?.entries;
            resourceInputs["featureProfileId"] = state?.featureProfileId;
            resourceInputs["name"] = state?.name;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as PolicyObjectTlocListArgs | undefined;
            if (args?.entries === undefined && !opts.urn) {
                throw new Error("Missing required property 'entries'");
            }
            if (args?.featureProfileId === undefined && !opts.urn) {
                throw new Error("Missing required property 'featureProfileId'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["entries"] = args?.entries;
            resourceInputs["featureProfileId"] = args?.featureProfileId;
            resourceInputs["name"] = args?.name;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolicyObjectTlocList.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PolicyObjectTlocList resources.
 */
export interface PolicyObjectTlocListState {
    /**
     * The description of the Policy_object
     */
    description?: pulumi.Input<string>;
    /**
     * TLOC List
     */
    entries?: pulumi.Input<pulumi.Input<inputs.PolicyObjectTlocListEntry>[]>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * The name of the Policy_object
     */
    name?: pulumi.Input<string>;
    /**
     * The version of the Policy_object
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a PolicyObjectTlocList resource.
 */
export interface PolicyObjectTlocListArgs {
    /**
     * The description of the Policy_object
     */
    description?: pulumi.Input<string>;
    /**
     * TLOC List
     */
    entries: pulumi.Input<pulumi.Input<inputs.PolicyObjectTlocListEntry>[]>;
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * The name of the Policy_object
     */
    name?: pulumi.Input<string>;
}
