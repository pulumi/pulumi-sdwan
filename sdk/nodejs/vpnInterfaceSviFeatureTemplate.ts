// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a VPN Interface SVI feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 *
 * ## Example Usage
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import sdwan:index/vpnInterfaceSviFeatureTemplate:VpnInterfaceSviFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class VpnInterfaceSviFeatureTemplate extends pulumi.CustomResource {
    /**
     * Get an existing VpnInterfaceSviFeatureTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpnInterfaceSviFeatureTemplateState, opts?: pulumi.CustomResourceOptions): VpnInterfaceSviFeatureTemplate {
        return new VpnInterfaceSviFeatureTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/vpnInterfaceSviFeatureTemplate:VpnInterfaceSviFeatureTemplate';

    /**
     * Returns true if the given object is an instance of VpnInterfaceSviFeatureTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpnInterfaceSviFeatureTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpnInterfaceSviFeatureTemplate.__pulumiType;
    }

    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds
     *   - Range: `0`-`2678400`
     *   - Default value: `1200`
     */
    declare public readonly arpTimeout: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly arpTimeoutVariable: pulumi.Output<string | undefined>;
    /**
     * The description of the feature template
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    declare public readonly deviceTypes: pulumi.Output<string[]>;
    /**
     * Interface name: VLAN 1 - VLAN 4094 when present
     */
    declare public readonly ifName: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ifNameVariable: pulumi.Output<string | undefined>;
    /**
     * Interface description
     */
    declare public readonly interfaceDescription: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly interfaceDescriptionVariable: pulumi.Output<string | undefined>;
    /**
     * IP Directed-Broadcast
     *   - Default value: `false`
     */
    declare public readonly ipDirectedBroadcast: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipDirectedBroadcastVariable: pulumi.Output<string | undefined>;
    /**
     * IP MTU <576..Interface MTU>, in bytes
     *   - Range: `576`-`9216`
     *   - Default value: `1500`
     */
    declare public readonly ipMtu: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipMtuVariable: pulumi.Output<string | undefined>;
    /**
     * Apply ACL
     */
    declare public readonly ipv4AccessLists: pulumi.Output<outputs.VpnInterfaceSviFeatureTemplateIpv4AccessList[] | undefined>;
    /**
     * Assign IPv4 address
     */
    declare public readonly ipv4Address: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipv4AddressVariable: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipv4DhcpHelperVariable: pulumi.Output<string | undefined>;
    /**
     * List of DHCP helper addresses
     */
    declare public readonly ipv4DhcpHelpers: pulumi.Output<string[] | undefined>;
    /**
     * Assign secondary IP addresses
     */
    declare public readonly ipv4SecondaryAddresses: pulumi.Output<outputs.VpnInterfaceSviFeatureTemplateIpv4SecondaryAddress[] | undefined>;
    /**
     * Enable VRRP
     */
    declare public readonly ipv4Vrrps: pulumi.Output<outputs.VpnInterfaceSviFeatureTemplateIpv4Vrrp[] | undefined>;
    /**
     * Apply ACL
     */
    declare public readonly ipv6AccessLists: pulumi.Output<outputs.VpnInterfaceSviFeatureTemplateIpv6AccessList[] | undefined>;
    /**
     * Assign IPv6 address
     */
    declare public readonly ipv6Address: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipv6AddressVariable: pulumi.Output<string | undefined>;
    /**
     * Enable DHCPv6
     *   - Default value: `false`
     */
    declare public readonly ipv6DhcpClient: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipv6DhcpClientVariable: pulumi.Output<string | undefined>;
    /**
     * Set administrative distance for DHCP default route
     *   - Range: `1`-`65536`
     *   - Default value: `1`
     */
    declare public readonly ipv6DhcpDistance: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipv6DhcpDistanceVariable: pulumi.Output<string | undefined>;
    /**
     * DHCPv6 Helper
     */
    declare public readonly ipv6DhcpHelpers: pulumi.Output<outputs.VpnInterfaceSviFeatureTemplateIpv6DhcpHelper[] | undefined>;
    /**
     * Enable DHCPv6 rapid commit
     *   - Default value: `false`
     */
    declare public readonly ipv6DhcpRapidCommit: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipv6DhcpRapidCommitVariable: pulumi.Output<string | undefined>;
    /**
     * Assign secondary IPv6 addresses
     */
    declare public readonly ipv6SecondaryAddresses: pulumi.Output<outputs.VpnInterfaceSviFeatureTemplateIpv6SecondaryAddress[] | undefined>;
    /**
     * Enable VRRP
     */
    declare public readonly ipv6Vrrps: pulumi.Output<outputs.VpnInterfaceSviFeatureTemplateIpv6Vrrp[] | undefined>;
    /**
     * Interface MTU <1500..9216> in bytes
     *   - Range: `1500`-`9216`
     *   - Default value: `1500`
     */
    declare public readonly mtu: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly mtuVariable: pulumi.Output<string | undefined>;
    /**
     * The name of the feature template
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Enable policer
     */
    declare public readonly policers: pulumi.Output<outputs.VpnInterfaceSviFeatureTemplatePolicer[] | undefined>;
    /**
     * Administrative state
     *   - Default value: `true`
     */
    declare public readonly shutdown: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly shutdownVariable: pulumi.Output<string | undefined>;
    /**
     * Configure static ARP entries
     */
    declare public readonly staticArpEntries: pulumi.Output<outputs.VpnInterfaceSviFeatureTemplateStaticArpEntry[] | undefined>;
    /**
     * TCP MSS on SYN packets, in bytes
     *   - Range: `552`-`1960`
     */
    declare public readonly tcpMssAdjust: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly tcpMssAdjustVariable: pulumi.Output<string | undefined>;
    /**
     * The template type
     */
    declare public /*out*/ readonly templateType: pulumi.Output<string>;
    /**
     * The version of the feature template
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;

    /**
     * Create a VpnInterfaceSviFeatureTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpnInterfaceSviFeatureTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpnInterfaceSviFeatureTemplateArgs | VpnInterfaceSviFeatureTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpnInterfaceSviFeatureTemplateState | undefined;
            resourceInputs["arpTimeout"] = state?.arpTimeout;
            resourceInputs["arpTimeoutVariable"] = state?.arpTimeoutVariable;
            resourceInputs["description"] = state?.description;
            resourceInputs["deviceTypes"] = state?.deviceTypes;
            resourceInputs["ifName"] = state?.ifName;
            resourceInputs["ifNameVariable"] = state?.ifNameVariable;
            resourceInputs["interfaceDescription"] = state?.interfaceDescription;
            resourceInputs["interfaceDescriptionVariable"] = state?.interfaceDescriptionVariable;
            resourceInputs["ipDirectedBroadcast"] = state?.ipDirectedBroadcast;
            resourceInputs["ipDirectedBroadcastVariable"] = state?.ipDirectedBroadcastVariable;
            resourceInputs["ipMtu"] = state?.ipMtu;
            resourceInputs["ipMtuVariable"] = state?.ipMtuVariable;
            resourceInputs["ipv4AccessLists"] = state?.ipv4AccessLists;
            resourceInputs["ipv4Address"] = state?.ipv4Address;
            resourceInputs["ipv4AddressVariable"] = state?.ipv4AddressVariable;
            resourceInputs["ipv4DhcpHelperVariable"] = state?.ipv4DhcpHelperVariable;
            resourceInputs["ipv4DhcpHelpers"] = state?.ipv4DhcpHelpers;
            resourceInputs["ipv4SecondaryAddresses"] = state?.ipv4SecondaryAddresses;
            resourceInputs["ipv4Vrrps"] = state?.ipv4Vrrps;
            resourceInputs["ipv6AccessLists"] = state?.ipv6AccessLists;
            resourceInputs["ipv6Address"] = state?.ipv6Address;
            resourceInputs["ipv6AddressVariable"] = state?.ipv6AddressVariable;
            resourceInputs["ipv6DhcpClient"] = state?.ipv6DhcpClient;
            resourceInputs["ipv6DhcpClientVariable"] = state?.ipv6DhcpClientVariable;
            resourceInputs["ipv6DhcpDistance"] = state?.ipv6DhcpDistance;
            resourceInputs["ipv6DhcpDistanceVariable"] = state?.ipv6DhcpDistanceVariable;
            resourceInputs["ipv6DhcpHelpers"] = state?.ipv6DhcpHelpers;
            resourceInputs["ipv6DhcpRapidCommit"] = state?.ipv6DhcpRapidCommit;
            resourceInputs["ipv6DhcpRapidCommitVariable"] = state?.ipv6DhcpRapidCommitVariable;
            resourceInputs["ipv6SecondaryAddresses"] = state?.ipv6SecondaryAddresses;
            resourceInputs["ipv6Vrrps"] = state?.ipv6Vrrps;
            resourceInputs["mtu"] = state?.mtu;
            resourceInputs["mtuVariable"] = state?.mtuVariable;
            resourceInputs["name"] = state?.name;
            resourceInputs["policers"] = state?.policers;
            resourceInputs["shutdown"] = state?.shutdown;
            resourceInputs["shutdownVariable"] = state?.shutdownVariable;
            resourceInputs["staticArpEntries"] = state?.staticArpEntries;
            resourceInputs["tcpMssAdjust"] = state?.tcpMssAdjust;
            resourceInputs["tcpMssAdjustVariable"] = state?.tcpMssAdjustVariable;
            resourceInputs["templateType"] = state?.templateType;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as VpnInterfaceSviFeatureTemplateArgs | undefined;
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if (args?.deviceTypes === undefined && !opts.urn) {
                throw new Error("Missing required property 'deviceTypes'");
            }
            resourceInputs["arpTimeout"] = args?.arpTimeout;
            resourceInputs["arpTimeoutVariable"] = args?.arpTimeoutVariable;
            resourceInputs["description"] = args?.description;
            resourceInputs["deviceTypes"] = args?.deviceTypes;
            resourceInputs["ifName"] = args?.ifName;
            resourceInputs["ifNameVariable"] = args?.ifNameVariable;
            resourceInputs["interfaceDescription"] = args?.interfaceDescription;
            resourceInputs["interfaceDescriptionVariable"] = args?.interfaceDescriptionVariable;
            resourceInputs["ipDirectedBroadcast"] = args?.ipDirectedBroadcast;
            resourceInputs["ipDirectedBroadcastVariable"] = args?.ipDirectedBroadcastVariable;
            resourceInputs["ipMtu"] = args?.ipMtu;
            resourceInputs["ipMtuVariable"] = args?.ipMtuVariable;
            resourceInputs["ipv4AccessLists"] = args?.ipv4AccessLists;
            resourceInputs["ipv4Address"] = args?.ipv4Address;
            resourceInputs["ipv4AddressVariable"] = args?.ipv4AddressVariable;
            resourceInputs["ipv4DhcpHelperVariable"] = args?.ipv4DhcpHelperVariable;
            resourceInputs["ipv4DhcpHelpers"] = args?.ipv4DhcpHelpers;
            resourceInputs["ipv4SecondaryAddresses"] = args?.ipv4SecondaryAddresses;
            resourceInputs["ipv4Vrrps"] = args?.ipv4Vrrps;
            resourceInputs["ipv6AccessLists"] = args?.ipv6AccessLists;
            resourceInputs["ipv6Address"] = args?.ipv6Address;
            resourceInputs["ipv6AddressVariable"] = args?.ipv6AddressVariable;
            resourceInputs["ipv6DhcpClient"] = args?.ipv6DhcpClient;
            resourceInputs["ipv6DhcpClientVariable"] = args?.ipv6DhcpClientVariable;
            resourceInputs["ipv6DhcpDistance"] = args?.ipv6DhcpDistance;
            resourceInputs["ipv6DhcpDistanceVariable"] = args?.ipv6DhcpDistanceVariable;
            resourceInputs["ipv6DhcpHelpers"] = args?.ipv6DhcpHelpers;
            resourceInputs["ipv6DhcpRapidCommit"] = args?.ipv6DhcpRapidCommit;
            resourceInputs["ipv6DhcpRapidCommitVariable"] = args?.ipv6DhcpRapidCommitVariable;
            resourceInputs["ipv6SecondaryAddresses"] = args?.ipv6SecondaryAddresses;
            resourceInputs["ipv6Vrrps"] = args?.ipv6Vrrps;
            resourceInputs["mtu"] = args?.mtu;
            resourceInputs["mtuVariable"] = args?.mtuVariable;
            resourceInputs["name"] = args?.name;
            resourceInputs["policers"] = args?.policers;
            resourceInputs["shutdown"] = args?.shutdown;
            resourceInputs["shutdownVariable"] = args?.shutdownVariable;
            resourceInputs["staticArpEntries"] = args?.staticArpEntries;
            resourceInputs["tcpMssAdjust"] = args?.tcpMssAdjust;
            resourceInputs["tcpMssAdjustVariable"] = args?.tcpMssAdjustVariable;
            resourceInputs["templateType"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpnInterfaceSviFeatureTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpnInterfaceSviFeatureTemplate resources.
 */
export interface VpnInterfaceSviFeatureTemplateState {
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds
     *   - Range: `0`-`2678400`
     *   - Default value: `1200`
     */
    arpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    arpTimeoutVariable?: pulumi.Input<string>;
    /**
     * The description of the feature template
     */
    description?: pulumi.Input<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Interface name: VLAN 1 - VLAN 4094 when present
     */
    ifName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ifNameVariable?: pulumi.Input<string>;
    /**
     * Interface description
     */
    interfaceDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceDescriptionVariable?: pulumi.Input<string>;
    /**
     * IP Directed-Broadcast
     *   - Default value: `false`
     */
    ipDirectedBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipDirectedBroadcastVariable?: pulumi.Input<string>;
    /**
     * IP MTU <576..Interface MTU>, in bytes
     *   - Range: `576`-`9216`
     *   - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * Apply ACL
     */
    ipv4AccessLists?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceSviFeatureTemplateIpv4AccessList>[]>;
    /**
     * Assign IPv4 address
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4AddressVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4DhcpHelperVariable?: pulumi.Input<string>;
    /**
     * List of DHCP helper addresses
     */
    ipv4DhcpHelpers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Assign secondary IP addresses
     */
    ipv4SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceSviFeatureTemplateIpv4SecondaryAddress>[]>;
    /**
     * Enable VRRP
     */
    ipv4Vrrps?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceSviFeatureTemplateIpv4Vrrp>[]>;
    /**
     * Apply ACL
     */
    ipv6AccessLists?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceSviFeatureTemplateIpv6AccessList>[]>;
    /**
     * Assign IPv6 address
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv6AddressVariable?: pulumi.Input<string>;
    /**
     * Enable DHCPv6
     *   - Default value: `false`
     */
    ipv6DhcpClient?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipv6DhcpClientVariable?: pulumi.Input<string>;
    /**
     * Set administrative distance for DHCP default route
     *   - Range: `1`-`65536`
     *   - Default value: `1`
     */
    ipv6DhcpDistance?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipv6DhcpDistanceVariable?: pulumi.Input<string>;
    /**
     * DHCPv6 Helper
     */
    ipv6DhcpHelpers?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceSviFeatureTemplateIpv6DhcpHelper>[]>;
    /**
     * Enable DHCPv6 rapid commit
     *   - Default value: `false`
     */
    ipv6DhcpRapidCommit?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipv6DhcpRapidCommitVariable?: pulumi.Input<string>;
    /**
     * Assign secondary IPv6 addresses
     */
    ipv6SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceSviFeatureTemplateIpv6SecondaryAddress>[]>;
    /**
     * Enable VRRP
     */
    ipv6Vrrps?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceSviFeatureTemplateIpv6Vrrp>[]>;
    /**
     * Interface MTU <1500..9216> in bytes
     *   - Range: `1500`-`9216`
     *   - Default value: `1500`
     */
    mtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    mtuVariable?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Enable policer
     */
    policers?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceSviFeatureTemplatePolicer>[]>;
    /**
     * Administrative state
     *   - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * Configure static ARP entries
     */
    staticArpEntries?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceSviFeatureTemplateStaticArpEntry>[]>;
    /**
     * TCP MSS on SYN packets, in bytes
     *   - Range: `552`-`1960`
     */
    tcpMssAdjust?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssAdjustVariable?: pulumi.Input<string>;
    /**
     * The template type
     */
    templateType?: pulumi.Input<string>;
    /**
     * The version of the feature template
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a VpnInterfaceSviFeatureTemplate resource.
 */
export interface VpnInterfaceSviFeatureTemplateArgs {
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds
     *   - Range: `0`-`2678400`
     *   - Default value: `1200`
     */
    arpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    arpTimeoutVariable?: pulumi.Input<string>;
    /**
     * The description of the feature template
     */
    description: pulumi.Input<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Interface name: VLAN 1 - VLAN 4094 when present
     */
    ifName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ifNameVariable?: pulumi.Input<string>;
    /**
     * Interface description
     */
    interfaceDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceDescriptionVariable?: pulumi.Input<string>;
    /**
     * IP Directed-Broadcast
     *   - Default value: `false`
     */
    ipDirectedBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipDirectedBroadcastVariable?: pulumi.Input<string>;
    /**
     * IP MTU <576..Interface MTU>, in bytes
     *   - Range: `576`-`9216`
     *   - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * Apply ACL
     */
    ipv4AccessLists?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceSviFeatureTemplateIpv4AccessList>[]>;
    /**
     * Assign IPv4 address
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4AddressVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4DhcpHelperVariable?: pulumi.Input<string>;
    /**
     * List of DHCP helper addresses
     */
    ipv4DhcpHelpers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Assign secondary IP addresses
     */
    ipv4SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceSviFeatureTemplateIpv4SecondaryAddress>[]>;
    /**
     * Enable VRRP
     */
    ipv4Vrrps?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceSviFeatureTemplateIpv4Vrrp>[]>;
    /**
     * Apply ACL
     */
    ipv6AccessLists?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceSviFeatureTemplateIpv6AccessList>[]>;
    /**
     * Assign IPv6 address
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv6AddressVariable?: pulumi.Input<string>;
    /**
     * Enable DHCPv6
     *   - Default value: `false`
     */
    ipv6DhcpClient?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipv6DhcpClientVariable?: pulumi.Input<string>;
    /**
     * Set administrative distance for DHCP default route
     *   - Range: `1`-`65536`
     *   - Default value: `1`
     */
    ipv6DhcpDistance?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipv6DhcpDistanceVariable?: pulumi.Input<string>;
    /**
     * DHCPv6 Helper
     */
    ipv6DhcpHelpers?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceSviFeatureTemplateIpv6DhcpHelper>[]>;
    /**
     * Enable DHCPv6 rapid commit
     *   - Default value: `false`
     */
    ipv6DhcpRapidCommit?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipv6DhcpRapidCommitVariable?: pulumi.Input<string>;
    /**
     * Assign secondary IPv6 addresses
     */
    ipv6SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceSviFeatureTemplateIpv6SecondaryAddress>[]>;
    /**
     * Enable VRRP
     */
    ipv6Vrrps?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceSviFeatureTemplateIpv6Vrrp>[]>;
    /**
     * Interface MTU <1500..9216> in bytes
     *   - Range: `1500`-`9216`
     *   - Default value: `1500`
     */
    mtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    mtuVariable?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Enable policer
     */
    policers?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceSviFeatureTemplatePolicer>[]>;
    /**
     * Administrative state
     *   - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * Configure static ARP entries
     */
    staticArpEntries?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceSviFeatureTemplateStaticArpEntry>[]>;
    /**
     * TCP MSS on SYN packets, in bytes
     *   - Range: `552`-`1960`
     */
    tcpMssAdjust?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssAdjustVariable?: pulumi.Input<string>;
}
