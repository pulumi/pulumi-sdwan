// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the TLS SSL Decryption Policy Definition .
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getTlsSslDecryptionPolicyDefinition({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getTlsSslDecryptionPolicyDefinition(args: GetTlsSslDecryptionPolicyDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetTlsSslDecryptionPolicyDefinitionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getTlsSslDecryptionPolicyDefinition:getTlsSslDecryptionPolicyDefinition", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getTlsSslDecryptionPolicyDefinition.
 */
export interface GetTlsSslDecryptionPolicyDefinitionArgs {
    /**
     * The id of the object
     */
    id: string;
}

/**
 * A collection of values returned by getTlsSslDecryptionPolicyDefinition.
 */
export interface GetTlsSslDecryptionPolicyDefinitionResult {
    /**
     * Certificate Lifetime(in Days)
     */
    readonly certificateLifetimeInDays: number;
    /**
     * Certificate revocation status
     */
    readonly certificateRevocationStatus: string;
    /**
     * Default action (applies when `mode` set to `security`)
     */
    readonly defaultAction: string;
    /**
     * The description of the policy definition.
     */
    readonly description: string;
    /**
     * EC Key Type
     */
    readonly ecKeyType: string;
    /**
     * Expired certificate action
     */
    readonly expiredCertificate: string;
    /**
     * Failure mode
     */
    readonly failureMode: string;
    /**
     * The id of the object
     */
    readonly id: string;
    /**
     * Minimal TLS Version
     */
    readonly minimalTlsVersion: string;
    /**
     * The policy mode
     */
    readonly mode: string;
    /**
     * The name of the policy definition.
     */
    readonly name: string;
    /**
     * List of network rules (applies when `mode` set to `security`)
     */
    readonly networkRules: outputs.GetTlsSslDecryptionPolicyDefinitionNetworkRule[];
    /**
     * RSA key pair modules
     */
    readonly rsaKeyPairModulus: string;
    /**
     * SSL decryption enabled
     */
    readonly sslDecryptionEnabled: string;
    /**
     * Unknown revocation status action
     */
    readonly unknownRevocationStatus: string;
    /**
     * Unsupported cipher suites action
     */
    readonly unsupportedCipherSuites: string;
    /**
     * Unsupported protocol versions action
     */
    readonly unsupportedProtocolVersions: string;
    /**
     * Untrusted certificate action
     */
    readonly untrustedCertificate: string;
    /**
     * List of url rules (applies when `mode` set to `security`)
     */
    readonly urlRules: outputs.GetTlsSslDecryptionPolicyDefinitionUrlRule[];
    /**
     * Use default CA certificate bundle
     */
    readonly useDefaultCaCertBundle: boolean;
    /**
     * The version of the object
     */
    readonly version: number;
}
/**
 * This data source can read the TLS SSL Decryption Policy Definition .
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getTlsSslDecryptionPolicyDefinition({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getTlsSslDecryptionPolicyDefinitionOutput(args: GetTlsSslDecryptionPolicyDefinitionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTlsSslDecryptionPolicyDefinitionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sdwan:index/getTlsSslDecryptionPolicyDefinition:getTlsSslDecryptionPolicyDefinition", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getTlsSslDecryptionPolicyDefinition.
 */
export interface GetTlsSslDecryptionPolicyDefinitionOutputArgs {
    /**
     * The id of the object
     */
    id: pulumi.Input<string>;
}
