// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource can manage a Transport Cellular Controller Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = new sdwan.TransportCellularControllerFeature("example", {
 *     name: "Example",
 *     description: "My Example",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 *     cellularId: "0/3/0",
 *     primarySimSlot: 0,
 *     simFailoverRetries: 5,
 *     simFailoverTimeout: 3,
 *     firmwareAutoSim: true,
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * Expected import identifier with the format: "transport_cellular_controller_feature_id,feature_profile_id"
 *
 * ```sh
 * $ pulumi import sdwan:index/transportCellularControllerFeature:TransportCellularControllerFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
 * ```
 */
export class TransportCellularControllerFeature extends pulumi.CustomResource {
    /**
     * Get an existing TransportCellularControllerFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransportCellularControllerFeatureState, opts?: pulumi.CustomResourceOptions): TransportCellularControllerFeature {
        return new TransportCellularControllerFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/transportCellularControllerFeature:TransportCellularControllerFeature';

    /**
     * Returns true if the given object is an instance of TransportCellularControllerFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransportCellularControllerFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransportCellularControllerFeature.__pulumiType;
    }

    /**
     * Cellular ID
     */
    declare public readonly cellularId: pulumi.Output<string>;
    /**
     * Variable name
     */
    declare public readonly cellularIdVariable: pulumi.Output<string | undefined>;
    /**
     * The description of the Feature
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Feature Profile ID
     */
    declare public readonly featureProfileId: pulumi.Output<string>;
    /**
     * Enable/Disable Firmware Auto Sim
     *   - Default value: `true`
     */
    declare public readonly firmwareAutoSim: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly firmwareAutoSimVariable: pulumi.Output<string | undefined>;
    /**
     * The name of the Feature
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Set primary SIM slot
     *   - Range: `0`-`1`
     */
    declare public readonly primarySimSlot: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly primarySimSlotVariable: pulumi.Output<string | undefined>;
    /**
     * Set SIM failover retries
     *   - Range: `0`-`65535`
     */
    declare public readonly simFailoverRetries: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly simFailoverRetriesVariable: pulumi.Output<string | undefined>;
    /**
     * Set SIM failover timeout in minutes
     *   - Range: `3`-`7`
     */
    declare public readonly simFailoverTimeout: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly simFailoverTimeoutVariable: pulumi.Output<string | undefined>;
    /**
     * The version of the Feature
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;

    /**
     * Create a TransportCellularControllerFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransportCellularControllerFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransportCellularControllerFeatureArgs | TransportCellularControllerFeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransportCellularControllerFeatureState | undefined;
            resourceInputs["cellularId"] = state?.cellularId;
            resourceInputs["cellularIdVariable"] = state?.cellularIdVariable;
            resourceInputs["description"] = state?.description;
            resourceInputs["featureProfileId"] = state?.featureProfileId;
            resourceInputs["firmwareAutoSim"] = state?.firmwareAutoSim;
            resourceInputs["firmwareAutoSimVariable"] = state?.firmwareAutoSimVariable;
            resourceInputs["name"] = state?.name;
            resourceInputs["primarySimSlot"] = state?.primarySimSlot;
            resourceInputs["primarySimSlotVariable"] = state?.primarySimSlotVariable;
            resourceInputs["simFailoverRetries"] = state?.simFailoverRetries;
            resourceInputs["simFailoverRetriesVariable"] = state?.simFailoverRetriesVariable;
            resourceInputs["simFailoverTimeout"] = state?.simFailoverTimeout;
            resourceInputs["simFailoverTimeoutVariable"] = state?.simFailoverTimeoutVariable;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as TransportCellularControllerFeatureArgs | undefined;
            if (args?.cellularId === undefined && !opts.urn) {
                throw new Error("Missing required property 'cellularId'");
            }
            if (args?.featureProfileId === undefined && !opts.urn) {
                throw new Error("Missing required property 'featureProfileId'");
            }
            resourceInputs["cellularId"] = args?.cellularId;
            resourceInputs["cellularIdVariable"] = args?.cellularIdVariable;
            resourceInputs["description"] = args?.description;
            resourceInputs["featureProfileId"] = args?.featureProfileId;
            resourceInputs["firmwareAutoSim"] = args?.firmwareAutoSim;
            resourceInputs["firmwareAutoSimVariable"] = args?.firmwareAutoSimVariable;
            resourceInputs["name"] = args?.name;
            resourceInputs["primarySimSlot"] = args?.primarySimSlot;
            resourceInputs["primarySimSlotVariable"] = args?.primarySimSlotVariable;
            resourceInputs["simFailoverRetries"] = args?.simFailoverRetries;
            resourceInputs["simFailoverRetriesVariable"] = args?.simFailoverRetriesVariable;
            resourceInputs["simFailoverTimeout"] = args?.simFailoverTimeout;
            resourceInputs["simFailoverTimeoutVariable"] = args?.simFailoverTimeoutVariable;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransportCellularControllerFeature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TransportCellularControllerFeature resources.
 */
export interface TransportCellularControllerFeatureState {
    /**
     * Cellular ID
     */
    cellularId?: pulumi.Input<string>;
    /**
     * Variable name
     */
    cellularIdVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * Enable/Disable Firmware Auto Sim
     *   - Default value: `true`
     */
    firmwareAutoSim?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    firmwareAutoSimVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * Set primary SIM slot
     *   - Range: `0`-`1`
     */
    primarySimSlot?: pulumi.Input<number>;
    /**
     * Variable name
     */
    primarySimSlotVariable?: pulumi.Input<string>;
    /**
     * Set SIM failover retries
     *   - Range: `0`-`65535`
     */
    simFailoverRetries?: pulumi.Input<number>;
    /**
     * Variable name
     */
    simFailoverRetriesVariable?: pulumi.Input<string>;
    /**
     * Set SIM failover timeout in minutes
     *   - Range: `3`-`7`
     */
    simFailoverTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    simFailoverTimeoutVariable?: pulumi.Input<string>;
    /**
     * The version of the Feature
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a TransportCellularControllerFeature resource.
 */
export interface TransportCellularControllerFeatureArgs {
    /**
     * Cellular ID
     */
    cellularId: pulumi.Input<string>;
    /**
     * Variable name
     */
    cellularIdVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * Enable/Disable Firmware Auto Sim
     *   - Default value: `true`
     */
    firmwareAutoSim?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    firmwareAutoSimVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * Set primary SIM slot
     *   - Range: `0`-`1`
     */
    primarySimSlot?: pulumi.Input<number>;
    /**
     * Variable name
     */
    primarySimSlotVariable?: pulumi.Input<string>;
    /**
     * Set SIM failover retries
     *   - Range: `0`-`65535`
     */
    simFailoverRetries?: pulumi.Input<number>;
    /**
     * Variable name
     */
    simFailoverRetriesVariable?: pulumi.Input<string>;
    /**
     * Set SIM failover timeout in minutes
     *   - Range: `3`-`7`
     */
    simFailoverTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    simFailoverTimeoutVariable?: pulumi.Input<string>;
}
