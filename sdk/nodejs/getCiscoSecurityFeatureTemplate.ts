// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the Cisco Security feature template.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getCiscoSecurityFeatureTemplate({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getCiscoSecurityFeatureTemplate(args?: GetCiscoSecurityFeatureTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetCiscoSecurityFeatureTemplateResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getCiscoSecurityFeatureTemplate:getCiscoSecurityFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getCiscoSecurityFeatureTemplate.
 */
export interface GetCiscoSecurityFeatureTemplateArgs {
    /**
     * The id of the feature template
     */
    id?: string;
    /**
     * The name of the feature template
     */
    name?: string;
}

/**
 * A collection of values returned by getCiscoSecurityFeatureTemplate.
 */
export interface GetCiscoSecurityFeatureTemplateResult {
    /**
     * Variable name
     */
    readonly authenticationTypeVariable: string;
    /**
     * Set the authentication type for DTLS connections
     */
    readonly authenticationTypes: string[];
    /**
     * The description of the feature template
     */
    readonly description: string;
    /**
     * List of supported device types
     */
    readonly deviceTypes: string[];
    /**
     * Extended Anti-Replay Window
     */
    readonly extendedArWindow: number;
    /**
     * Variable name
     */
    readonly extendedArWindowVariable: string;
    /**
     * The id of the feature template
     */
    readonly id: string;
    /**
     * Variable name
     */
    readonly integrityTypeVariable: string;
    /**
     * Set the authentication type for DTLS connections
     */
    readonly integrityTypes: string[];
    /**
     * Configure a Keychain
     */
    readonly keychains: outputs.GetCiscoSecurityFeatureTemplateKeychain[];
    /**
     * Configure a Key
     */
    readonly keys: outputs.GetCiscoSecurityFeatureTemplateKey[];
    /**
     * The name of the feature template
     */
    readonly name: string;
    /**
     * Enable or disable IPsec pairwise-keying
     */
    readonly pairwiseKeying: boolean;
    /**
     * Variable name
     */
    readonly pairwiseKeyingVariable: string;
    /**
     * Set how often to change the AES key for DTLS connections
     */
    readonly rekeyInterval: number;
    /**
     * Variable name
     */
    readonly rekeyIntervalVariable: string;
    /**
     * Set the sliding replay window size
     */
    readonly replayWindow: string;
    /**
     * Variable name
     */
    readonly replayWindowVariable: string;
    /**
     * The template type
     */
    readonly templateType: string;
    /**
     * The version of the feature template
     */
    readonly version: number;
}
/**
 * This data source can read the Cisco Security feature template.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getCiscoSecurityFeatureTemplate({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getCiscoSecurityFeatureTemplateOutput(args?: GetCiscoSecurityFeatureTemplateOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCiscoSecurityFeatureTemplateResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sdwan:index/getCiscoSecurityFeatureTemplate:getCiscoSecurityFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getCiscoSecurityFeatureTemplate.
 */
export interface GetCiscoSecurityFeatureTemplateOutputArgs {
    /**
     * The id of the feature template
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
}
