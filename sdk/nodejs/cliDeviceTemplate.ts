// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource can manage a CLI Device Template .
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = new sdwan.CliDeviceTemplate("example", {
 *     name: "Example",
 *     description: "My description",
 *     deviceType: "vedge-ISR-4331",
 *     cliType: "device",
 *     cliConfiguration: ` system
 *  host-name             R1-ISR4331-1200-1`,
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import sdwan:index/cliDeviceTemplate:CliDeviceTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class CliDeviceTemplate extends pulumi.CustomResource {
    /**
     * Get an existing CliDeviceTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CliDeviceTemplateState, opts?: pulumi.CustomResourceOptions): CliDeviceTemplate {
        return new CliDeviceTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/cliDeviceTemplate:CliDeviceTemplate';

    /**
     * Returns true if the given object is an instance of CliDeviceTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CliDeviceTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CliDeviceTemplate.__pulumiType;
    }

    /**
     * CLI configuration
     */
    public readonly cliConfiguration!: pulumi.Output<string>;
    /**
     * CLI type - Choices: `device`, `intend`
     */
    public readonly cliType!: pulumi.Output<string>;
    /**
     * The description of the device template
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The device type (e.g., `vedge-ISR-4331`)
     */
    public readonly deviceType!: pulumi.Output<string>;
    /**
     * The name of the device template
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The version of the object
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a CliDeviceTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CliDeviceTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CliDeviceTemplateArgs | CliDeviceTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CliDeviceTemplateState | undefined;
            resourceInputs["cliConfiguration"] = state ? state.cliConfiguration : undefined;
            resourceInputs["cliType"] = state ? state.cliType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceType"] = state ? state.deviceType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as CliDeviceTemplateArgs | undefined;
            if ((!args || args.cliConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cliConfiguration'");
            }
            if ((!args || args.cliType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cliType'");
            }
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.deviceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceType'");
            }
            resourceInputs["cliConfiguration"] = args ? args.cliConfiguration : undefined;
            resourceInputs["cliType"] = args ? args.cliType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceType"] = args ? args.deviceType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CliDeviceTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CliDeviceTemplate resources.
 */
export interface CliDeviceTemplateState {
    /**
     * CLI configuration
     */
    cliConfiguration?: pulumi.Input<string>;
    /**
     * CLI type - Choices: `device`, `intend`
     */
    cliType?: pulumi.Input<string>;
    /**
     * The description of the device template
     */
    description?: pulumi.Input<string>;
    /**
     * The device type (e.g., `vedge-ISR-4331`)
     */
    deviceType?: pulumi.Input<string>;
    /**
     * The name of the device template
     */
    name?: pulumi.Input<string>;
    /**
     * The version of the object
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CliDeviceTemplate resource.
 */
export interface CliDeviceTemplateArgs {
    /**
     * CLI configuration
     */
    cliConfiguration: pulumi.Input<string>;
    /**
     * CLI type - Choices: `device`, `intend`
     */
    cliType: pulumi.Input<string>;
    /**
     * The description of the device template
     */
    description: pulumi.Input<string>;
    /**
     * The device type (e.g., `vedge-ISR-4331`)
     */
    deviceType: pulumi.Input<string>;
    /**
     * The name of the device template
     */
    name?: pulumi.Input<string>;
}
