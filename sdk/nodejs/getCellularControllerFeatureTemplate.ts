// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the Cellular Controller feature template.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getCellularControllerFeatureTemplate({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getCellularControllerFeatureTemplate(args?: GetCellularControllerFeatureTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetCellularControllerFeatureTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getCellularControllerFeatureTemplate:getCellularControllerFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getCellularControllerFeatureTemplate.
 */
export interface GetCellularControllerFeatureTemplateArgs {
    /**
     * The id of the feature template
     */
    id?: string;
    /**
     * The name of the feature template
     */
    name?: string;
}

/**
 * A collection of values returned by getCellularControllerFeatureTemplate.
 */
export interface GetCellularControllerFeatureTemplateResult {
    /**
     * Cellular interface name
     */
    readonly cellularInterfaceId: string;
    /**
     * Variable name
     */
    readonly cellularInterfaceIdVariable: string;
    /**
     * Data Profile List
     */
    readonly dataProfiles: outputs.GetCellularControllerFeatureTemplateDataProfile[];
    /**
     * The description of the feature template
     */
    readonly description: string;
    /**
     * List of supported device types
     */
    readonly deviceTypes: string[];
    /**
     * Enable/Disable Firmware Auto Sim
     */
    readonly firmwareAutoSim: boolean;
    /**
     * Variable name
     */
    readonly firmwareAutoSimVariable: string;
    /**
     * The id of the feature template
     */
    readonly id: string;
    /**
     * The name of the feature template
     */
    readonly name: string;
    /**
     * Set primary SIM slot
     */
    readonly primarySimSlot: number;
    /**
     * Variable name
     */
    readonly primarySimSlotVariable: string;
    /**
     * Set SIM failover retries
     */
    readonly simFailoverRetries: number;
    /**
     * Variable name
     */
    readonly simFailoverRetriesVariable: string;
    /**
     * Set SIM failover timeout in minutes
     */
    readonly simFailoverTimeout: number;
    /**
     * Variable name
     */
    readonly simFailoverTimeoutVariable: string;
    /**
     * The template type
     */
    readonly templateType: string;
    /**
     * The version of the feature template
     */
    readonly version: number;
}
/**
 * This data source can read the Cellular Controller feature template.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getCellularControllerFeatureTemplate({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getCellularControllerFeatureTemplateOutput(args?: GetCellularControllerFeatureTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCellularControllerFeatureTemplateResult> {
    return pulumi.output(args).apply((a: any) => getCellularControllerFeatureTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getCellularControllerFeatureTemplate.
 */
export interface GetCellularControllerFeatureTemplateOutputArgs {
    /**
     * The id of the feature template
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
}
