// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Cisco System feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import sdwan:index/ciscoSystemFeatureTemplate:CiscoSystemFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class CiscoSystemFeatureTemplate extends pulumi.CustomResource {
    /**
     * Get an existing CiscoSystemFeatureTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CiscoSystemFeatureTemplateState, opts?: pulumi.CustomResourceOptions): CiscoSystemFeatureTemplate {
        return new CiscoSystemFeatureTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/ciscoSystemFeatureTemplate:CiscoSystemFeatureTemplate';

    /**
     * Returns true if the given object is an instance of CiscoSystemFeatureTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CiscoSystemFeatureTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CiscoSystemFeatureTemplate.__pulumiType;
    }

    /**
     * Collect admin-tech before reboot due to daemon failure
     *   - Default value: `true`
     */
    declare public readonly adminTechOnFailure: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly adminTechOnFailureVariable: pulumi.Output<string | undefined>;
    /**
     * Set the affinity group number for router
     *   - Range: `1`-`255`
     */
    declare public readonly affinityGroupNumber: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly affinityGroupNumberVariable: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly affinityGroupPreferenceVariable: pulumi.Output<string | undefined>;
    /**
     * Set the affinity group preference
     */
    declare public readonly affinityGroupPreferences: pulumi.Output<number[] | undefined>;
    /**
     * Set the console baud rate
     *   - Choices: `1200`, `2400`, `4800`, `9600`, `19200`, `38400`, `57600`, `115200`
     *   - Default value: `9600`
     */
    declare public readonly consoleBaudRate: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly consoleBaudRateVariable: pulumi.Output<string | undefined>;
    /**
     * Set the policer rate for control sessions
     *   - Range: `1`-`65535`
     *   - Default value: `300`
     */
    declare public readonly controlSessionPps: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly controlSessionPpsVariable: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly controllerGroupListVariable: pulumi.Output<string | undefined>;
    /**
     * Configure a list of comma-separated device groups
     */
    declare public readonly controllerGroupLists: pulumi.Output<number[] | undefined>;
    /**
     * The description of the feature template
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * Device groups (Use comma(,) for multiple groups)
     */
    declare public readonly deviceGroups: pulumi.Output<string[] | undefined>;
    /**
     * Variable name
     */
    declare public readonly deviceGroupsVariable: pulumi.Output<string | undefined>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    declare public readonly deviceTypes: pulumi.Output<string[]>;
    /**
     * Enable migration mode to Multi-Region Fabric
     *   - Choices: `enabled`, `enabled-from-bgp-core`
     */
    declare public readonly enableMrfMigration: pulumi.Output<string | undefined>;
    /**
     * Enhanced App Aware Routing
     *   - Choices: `disabled`, `aggressive`, `moderate`, `conservative`
     *   - Default value: `disabled`
     */
    declare public readonly enhancedAppAwareRouting: pulumi.Output<string | undefined>;
    /**
     * Enable Geo fencing
     *   - Default value: `false`
     */
    declare public readonly geoFencing: pulumi.Output<boolean | undefined>;
    /**
     * Set the device’s geo fencing range
     *   - Range: `100`-`10000`
     *   - Default value: `100`
     */
    declare public readonly geoFencingRange: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly geoFencingRangeVariable: pulumi.Output<string | undefined>;
    /**
     * Enable Geo fencing
     *   - Default value: `false`
     */
    declare public readonly geoFencingSms: pulumi.Output<boolean | undefined>;
    /**
     * Set device’s geo fencing SMS phone number
     */
    declare public readonly geoFencingSmsPhoneNumbers: pulumi.Output<outputs.CiscoSystemFeatureTemplateGeoFencingSmsPhoneNumber[] | undefined>;
    /**
     * Set the hostname
     */
    declare public readonly hostname: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly hostnameVariable: pulumi.Output<string | undefined>;
    /**
     * Idle CLI timeout in minutes
     *   - Range: `0`-`300`
     */
    declare public readonly idleTimeout: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly idleTimeoutVariable: pulumi.Output<string | undefined>;
    /**
     * Set the device’s physical latitude
     *   - Range: `-90`-`90`
     */
    declare public readonly latitude: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly latitudeVariable: pulumi.Output<string | undefined>;
    /**
     * Set the location of the device
     */
    declare public readonly location: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly locationVariable: pulumi.Output<string | undefined>;
    /**
     * Set the device’s physical longitude
     *   - Range: `-180`-`180`
     */
    declare public readonly longitude: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly longitudeVariable: pulumi.Output<string | undefined>;
    /**
     * Set the maximum number of OMP sessions <1..100> the device can have
     *   - Range: `1`-`100`
     */
    declare public readonly maxOmpSessions: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly maxOmpSessionsVariable: pulumi.Output<string | undefined>;
    /**
     * Set BGP community during migration from BGP-core based network
     *   - Range: `1`-`4294967295`
     */
    declare public readonly migrationBgpCommunity: pulumi.Output<number | undefined>;
    /**
     * Device is multi-tenant
     *   - Default value: `false`
     */
    declare public readonly multiTenant: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly multiTenantVariable: pulumi.Output<string | undefined>;
    /**
     * The name of the feature template
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Object Track configuration
     */
    declare public readonly objectTrackers: pulumi.Output<outputs.CiscoSystemFeatureTemplateObjectTracker[] | undefined>;
    /**
     * Enable or disable On-demand Tunnel
     *   - Default value: `false`
     */
    declare public readonly onDemandTunnel: pulumi.Output<boolean | undefined>;
    /**
     * Idle CLI timeout in minutes
     *   - Range: `0`-`300`
     */
    declare public readonly onDemandTunnelIdleTimeout: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly onDemandTunnelIdleTimeoutVariable: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly onDemandTunnelVariable: pulumi.Output<string | undefined>;
    /**
     * Set the Overlay ID
     *   - Range: `1`-`4294967295`
     *   - Default value: `1`
     */
    declare public readonly overlayId: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly overlayIdVariable: pulumi.Output<string | undefined>;
    /**
     * Enable port hopping
     *   - Default value: `true`
     */
    declare public readonly portHopping: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly portHoppingVariable: pulumi.Output<string | undefined>;
    /**
     * Set the TLOC port offset when multiple devices are behind a NAT
     *   - Range: `0`-`19`
     *   - Default value: `0`
     */
    declare public readonly portOffset: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly portOffsetVariable: pulumi.Output<string | undefined>;
    /**
     * Set region ID
     *   - Range: `1`-`63`
     */
    declare public readonly regionId: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly regionIdVariable: pulumi.Output<string | undefined>;
    /**
     * Set the role for router
     *   - Choices: `edge-router`, `border-router`
     */
    declare public readonly role: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly roleVariable: pulumi.Output<string | undefined>;
    /**
     * Set secondary region ID
     *   - Range: `1`-`63`
     */
    declare public readonly secondaryRegionId: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly secondaryRegionIdVariable: pulumi.Output<string | undefined>;
    /**
     * Set the site identifier
     *   - Range: `1`-`4294967295`
     */
    declare public readonly siteId: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly siteIdVariable: pulumi.Output<string | undefined>;
    /**
     * Set a text description of the device
     */
    declare public readonly systemDescription: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly systemDescriptionVariable: pulumi.Output<string | undefined>;
    /**
     * Set the system IP address
     */
    declare public readonly systemIp: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly systemIpVariable: pulumi.Output<string | undefined>;
    /**
     * The template type
     */
    declare public /*out*/ readonly templateType: pulumi.Output<string>;
    /**
     * Set the timezone
     *   - Choices: `Europe/Andorra`, `Asia/Dubai`, `Asia/Kabul`, `America/Antigua`, `America/Anguilla`, `Europe/Tirane`, `Asia/Yerevan`, `Africa/Luanda`, `Antarctica/McMurdo`, `Antarctica/Rothera`, `Antarctica/Palmer`, `Antarctica/Mawson`, `Antarctica/Davis`, `Antarctica/Casey`, `Antarctica/Vostok`, `Antarctica/DumontDUrville`, `Antarctica/Syowa`, `America/Argentina/Buenos_Aires`, `America/Argentina/Cordoba`, `America/Argentina/Salta`, `America/Argentina/Jujuy`, `America/Argentina/Tucuman`, `America/Argentina/Catamarca`, `America/Argentina/La_Rioja`, `America/Argentina/San_Juan`, `America/Argentina/Mendoza`, `America/Argentina/San_Luis`, `America/Argentina/Rio_Gallegos`, `America/Argentina/Ushuaia`, `Pacific/Pago_Pago`, `Europe/Vienna`, `Australia/Lord_Howe`, `Antarctica/Macquarie`, `Australia/Hobart`, `Australia/Currie`, `Australia/Melbourne`, `Australia/Sydney`, `Australia/Broken_Hill`, `Australia/Brisbane`, `Australia/Lindeman`, `Australia/Adelaide`, `Australia/Darwin`, `Australia/Perth`, `Australia/Eucla`, `America/Aruba`, `Europe/Mariehamn`, `Asia/Baku`, `Europe/Sarajevo`, `America/Barbados`, `Asia/Dhaka`, `Europe/Brussels`, `Africa/Ouagadougou`, `Europe/Sofia`, `Asia/Bahrain`, `Africa/Bujumbura`, `Africa/Porto-Novo`, `America/St_Barthelemy`, `Atlantic/Bermuda`, `Asia/Brunei`, `America/La_Paz`, `America/Kralendijk`, `America/Noronha`, `America/Belem`, `America/Fortaleza`, `America/Recife`, `America/Araguaina`, `America/Maceio`, `America/Bahia`, `America/Sao_Paulo`, `America/Campo_Grande`, `America/Cuiaba`, `America/Santarem`, `America/Porto_Velho`, `America/Boa_Vista`, `America/Manaus`, `America/Eirunepe`, `America/Rio_Branco`, `America/Nassau`, `Asia/Thimphu`, `Africa/Gaborone`, `Europe/Minsk`, `America/Belize`, `America/St_Johns`, `America/Halifax`, `America/Glace_Bay`, `America/Moncton`, `America/Goose_Bay`, `America/Blanc-Sablon`, `America/Toronto`, `America/Nipigon`, `America/Thunder_Bay`, `America/Iqaluit`, `America/Pangnirtung`, `America/Resolute`, `America/Atikokan`, `America/Rankin_Inlet`, `America/Winnipeg`, `America/Rainy_River`, `America/Regina`, `America/Swift_Current`, `America/Edmonton`, `America/Cambridge_Bay`, `America/Yellowknife`, `America/Inuvik`, `America/Creston`, `America/Dawson_Creek`, `America/Vancouver`, `America/Whitehorse`, `America/Dawson`, `Indian/Cocos`, `Africa/Kinshasa`, `Africa/Lubumbashi`, `Africa/Bangui`, `Africa/Brazzaville`, `Europe/Zurich`, `Africa/Abidjan`, `Pacific/Rarotonga`, `America/Santiago`, `Pacific/Easter`, `Africa/Douala`, `Asia/Shanghai`, `Asia/Harbin`, `Asia/Chongqing`, `Asia/Urumqi`, `Asia/Kashgar`, `America/Bogota`, `America/Costa_Rica`, `America/Havana`, `Atlantic/Cape_Verde`, `America/Curacao`, `Indian/Christmas`, `Asia/Nicosia`, `Europe/Prague`, `Europe/Berlin`, `Europe/Busingen`, `Africa/Djibouti`, `Europe/Copenhagen`, `America/Dominica`, `America/Santo_Domingo`, `Africa/Algiers`, `America/Guayaquil`, `Pacific/Galapagos`, `Europe/Tallinn`, `Africa/Cairo`, `Africa/El_Aaiun`, `Africa/Asmara`, `Europe/Madrid`, `Africa/Ceuta`, `Atlantic/Canary`, `Africa/Addis_Ababa`, `Europe/Helsinki`, `Pacific/Fiji`, `Atlantic/Stanley`, `Pacific/Chuuk`, `Pacific/Pohnpei`, `Pacific/Kosrae`, `Atlantic/Faroe`, `Europe/Paris`, `Africa/Libreville`, `Europe/London`, `America/Grenada`, `Asia/Tbilisi`, `America/Cayenne`, `Europe/Guernsey`, `Africa/Accra`, `Europe/Gibraltar`, `America/Godthab`, `America/Danmarkshavn`, `America/Scoresbysund`, `America/Thule`, `Africa/Banjul`, `Africa/Conakry`, `America/Guadeloupe`, `Africa/Malabo`, `Europe/Athens`, `Atlantic/South_Georgia`, `America/Guatemala`, `Pacific/Guam`, `Africa/Bissau`, `America/Guyana`, `Asia/Hong_Kong`, `America/Tegucigalpa`, `Europe/Zagreb`, `America/Port-au-Prince`, `Europe/Budapest`, `Asia/Jakarta`, `Asia/Pontianak`, `Asia/Makassar`, `Asia/Jayapura`, `Europe/Dublin`, `Asia/Jerusalem`, `Europe/Isle_of_Man`, `Asia/Kolkata`, `Indian/Chagos`, `Asia/Baghdad`, `Asia/Tehran`, `Atlantic/Reykjavik`, `Europe/Rome`, `Europe/Jersey`, `America/Jamaica`, `Asia/Amman`, `Asia/Tokyo`, `Africa/Nairobi`, `Asia/Bishkek`, `Asia/Phnom_Penh`, `Pacific/Tarawa`, `Pacific/Enderbury`, `Pacific/Kiritimati`, `Indian/Comoro`, `America/St_Kitts`, `Asia/Pyongyang`, `Asia/Seoul`, `Asia/Kuwait`, `America/Cayman`, `Asia/Almaty`, `Asia/Qyzylorda`, `Asia/Aqtobe`, `Asia/Aqtau`, `Asia/Oral`, `Asia/Vientiane`, `Asia/Beirut`, `America/St_Lucia`, `Europe/Vaduz`, `Asia/Colombo`, `Africa/Monrovia`, `Africa/Maseru`, `Europe/Vilnius`, `Europe/Luxembourg`, `Europe/Riga`, `Africa/Tripoli`, `Africa/Casablanca`, `Europe/Monaco`, `Europe/Chisinau`, `Europe/Podgorica`, `America/Marigot`, `Indian/Antananarivo`, `Pacific/Majuro`, `Pacific/Kwajalein`, `Europe/Skopje`, `Africa/Bamako`, `Asia/Rangoon`, `Asia/Ulaanbaatar`, `Asia/Hovd`, `Asia/Choibalsan`, `Asia/Macau`, `Pacific/Saipan`, `America/Martinique`, `Africa/Nouakchott`, `America/Montserrat`, `Europe/Malta`, `Indian/Mauritius`, `Indian/Maldives`, `Africa/Blantyre`, `America/Mexico_City`, `America/Cancun`, `America/Merida`, `America/Monterrey`, `America/Matamoros`, `America/Mazatlan`, `America/Chihuahua`, `America/Ojinaga`, `America/Hermosillo`, `America/Tijuana`, `America/Santa_Isabel`, `America/Bahia_Banderas`, `Asia/Kuala_Lumpur`, `Asia/Kuching`, `Africa/Maputo`, `Africa/Windhoek`, `Pacific/Noumea`, `Africa/Niamey`, `Pacific/Norfolk`, `Africa/Lagos`, `America/Managua`, `Europe/Amsterdam`, `Europe/Oslo`, `Asia/Kathmandu`, `Pacific/Nauru`, `Pacific/Niue`, `Pacific/Auckland`, `Pacific/Chatham`, `Asia/Muscat`, `America/Panama`, `America/Lima`, `Pacific/Tahiti`, `Pacific/Marquesas`, `Pacific/Gambier`, `Pacific/Port_Moresby`, `Asia/Manila`, `Asia/Karachi`, `Europe/Warsaw`, `America/Miquelon`, `Pacific/Pitcairn`, `America/Puerto_Rico`, `Asia/Gaza`, `Asia/Hebron`, `Europe/Lisbon`, `Atlantic/Madeira`, `Atlantic/Azores`, `Pacific/Palau`, `America/Asuncion`, `Asia/Qatar`, `Indian/Reunion`, `Europe/Bucharest`, `Europe/Belgrade`, `Europe/Kaliningrad`, `Europe/Moscow`, `Europe/Volgograd`, `Europe/Samara`, `Asia/Yekaterinburg`, `Asia/Omsk`, `Asia/Novosibirsk`, `Asia/Novokuznetsk`, `Asia/Krasnoyarsk`, `Asia/Irkutsk`, `Asia/Yakutsk`, `Asia/Khandyga`, `Asia/Vladivostok`, `Asia/Sakhalin`, `Asia/Ust-Nera`, `Asia/Magadan`, `Asia/Kamchatka`, `Asia/Anadyr`, `Africa/Kigali`, `Asia/Riyadh`, `Pacific/Guadalcanal`, `Indian/Mahe`, `Africa/Khartoum`, `Europe/Stockholm`, `Asia/Singapore`, `Atlantic/St_Helena`, `Europe/Ljubljana`, `Arctic/Longyearbyen`, `Europe/Bratislava`, `Africa/Freetown`, `Europe/San_Marino`, `Africa/Dakar`, `Africa/Mogadishu`, `America/Paramaribo`, `Africa/Juba`, `Africa/Sao_Tome`, `America/El_Salvador`, `America/Lower_Princes`, `Asia/Damascus`, `Africa/Mbabane`, `America/Grand_Turk`, `Africa/Ndjamena`, `Indian/Kerguelen`, `Africa/Lome`, `Asia/Bangkok`, `Asia/Dushanbe`, `Pacific/Fakaofo`, `Asia/Dili`, `Asia/Ashgabat`, `Africa/Tunis`, `Pacific/Tongatapu`, `Europe/Istanbul`, `America/Port_of_Spain`, `Pacific/Funafuti`, `Asia/Taipei`, `Africa/Dar_es_Salaam`, `Europe/Kiev`, `Europe/Uzhgorod`, `Europe/Zaporozhye`, `Europe/Simferopol`, `Africa/Kampala`, `Pacific/Johnston`, `Pacific/Midway`, `Pacific/Wake`, `America/New_York`, `America/Detroit`, `America/Kentucky/Louisville`, `America/Kentucky/Monticello`, `America/Indiana/Indianapolis`, `America/Indiana/Vincennes`, `America/Indiana/Winamac`, `America/Indiana/Marengo`, `America/Indiana/Petersburg`, `America/Indiana/Vevay`, `America/Chicago`, `America/Indiana/Tell_City`, `America/Indiana/Knox`, `America/Menominee`, `America/North_Dakota/Center`, `America/North_Dakota/New_Salem`, `America/North_Dakota/Beulah`, `America/Denver`, `America/Boise`, `America/Phoenix`, `America/Los_Angeles`, `America/Anchorage`, `America/Juneau`, `America/Sitka`, `America/Yakutat`, `America/Nome`, `America/Adak`, `America/Metlakatla`, `Pacific/Honolulu`, `America/Montevideo`, `Asia/Samarkand`, `Asia/Tashkent`, `Europe/Vatican`, `America/St_Vincent`, `America/Caracas`, `America/Tortola`, `America/St_Thomas`, `Asia/Ho_Chi_Minh`, `Pacific/Efate`, `Pacific/Wallis`, `Pacific/Apia`, `Asia/Aden`, `Indian/Mayotte`, `Africa/Johannesburg`, `Africa/Lusaka`, `Africa/Harare`, `UTC`
     *   - Default value: `UTC`
     */
    declare public readonly timezone: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly timezoneVariable: pulumi.Output<string | undefined>;
    /**
     * Enable or disable default gateway tracking
     *   - Default value: `true`
     */
    declare public readonly trackDefaultGateway: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly trackDefaultGatewayVariable: pulumi.Output<string | undefined>;
    /**
     * OMP Tag attached to routes based on interface tracking
     *   - Range: `1`-`4294967295`
     */
    declare public readonly trackInterfaceTag: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly trackInterfaceTagVariable: pulumi.Output<string | undefined>;
    /**
     * Configure tracking of transport
     *   - Default value: `true`
     */
    declare public readonly trackTransport: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly trackTransportVariable: pulumi.Output<string | undefined>;
    /**
     * Tracker configuration
     */
    declare public readonly trackers: pulumi.Output<outputs.CiscoSystemFeatureTemplateTracker[] | undefined>;
    /**
     * Enable transport gateway
     *   - Default value: `false`
     */
    declare public readonly transportGateway: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly transportGatewayVariable: pulumi.Output<string | undefined>;
    /**
     * The version of the feature template
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;

    /**
     * Create a CiscoSystemFeatureTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CiscoSystemFeatureTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CiscoSystemFeatureTemplateArgs | CiscoSystemFeatureTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CiscoSystemFeatureTemplateState | undefined;
            resourceInputs["adminTechOnFailure"] = state?.adminTechOnFailure;
            resourceInputs["adminTechOnFailureVariable"] = state?.adminTechOnFailureVariable;
            resourceInputs["affinityGroupNumber"] = state?.affinityGroupNumber;
            resourceInputs["affinityGroupNumberVariable"] = state?.affinityGroupNumberVariable;
            resourceInputs["affinityGroupPreferenceVariable"] = state?.affinityGroupPreferenceVariable;
            resourceInputs["affinityGroupPreferences"] = state?.affinityGroupPreferences;
            resourceInputs["consoleBaudRate"] = state?.consoleBaudRate;
            resourceInputs["consoleBaudRateVariable"] = state?.consoleBaudRateVariable;
            resourceInputs["controlSessionPps"] = state?.controlSessionPps;
            resourceInputs["controlSessionPpsVariable"] = state?.controlSessionPpsVariable;
            resourceInputs["controllerGroupListVariable"] = state?.controllerGroupListVariable;
            resourceInputs["controllerGroupLists"] = state?.controllerGroupLists;
            resourceInputs["description"] = state?.description;
            resourceInputs["deviceGroups"] = state?.deviceGroups;
            resourceInputs["deviceGroupsVariable"] = state?.deviceGroupsVariable;
            resourceInputs["deviceTypes"] = state?.deviceTypes;
            resourceInputs["enableMrfMigration"] = state?.enableMrfMigration;
            resourceInputs["enhancedAppAwareRouting"] = state?.enhancedAppAwareRouting;
            resourceInputs["geoFencing"] = state?.geoFencing;
            resourceInputs["geoFencingRange"] = state?.geoFencingRange;
            resourceInputs["geoFencingRangeVariable"] = state?.geoFencingRangeVariable;
            resourceInputs["geoFencingSms"] = state?.geoFencingSms;
            resourceInputs["geoFencingSmsPhoneNumbers"] = state?.geoFencingSmsPhoneNumbers;
            resourceInputs["hostname"] = state?.hostname;
            resourceInputs["hostnameVariable"] = state?.hostnameVariable;
            resourceInputs["idleTimeout"] = state?.idleTimeout;
            resourceInputs["idleTimeoutVariable"] = state?.idleTimeoutVariable;
            resourceInputs["latitude"] = state?.latitude;
            resourceInputs["latitudeVariable"] = state?.latitudeVariable;
            resourceInputs["location"] = state?.location;
            resourceInputs["locationVariable"] = state?.locationVariable;
            resourceInputs["longitude"] = state?.longitude;
            resourceInputs["longitudeVariable"] = state?.longitudeVariable;
            resourceInputs["maxOmpSessions"] = state?.maxOmpSessions;
            resourceInputs["maxOmpSessionsVariable"] = state?.maxOmpSessionsVariable;
            resourceInputs["migrationBgpCommunity"] = state?.migrationBgpCommunity;
            resourceInputs["multiTenant"] = state?.multiTenant;
            resourceInputs["multiTenantVariable"] = state?.multiTenantVariable;
            resourceInputs["name"] = state?.name;
            resourceInputs["objectTrackers"] = state?.objectTrackers;
            resourceInputs["onDemandTunnel"] = state?.onDemandTunnel;
            resourceInputs["onDemandTunnelIdleTimeout"] = state?.onDemandTunnelIdleTimeout;
            resourceInputs["onDemandTunnelIdleTimeoutVariable"] = state?.onDemandTunnelIdleTimeoutVariable;
            resourceInputs["onDemandTunnelVariable"] = state?.onDemandTunnelVariable;
            resourceInputs["overlayId"] = state?.overlayId;
            resourceInputs["overlayIdVariable"] = state?.overlayIdVariable;
            resourceInputs["portHopping"] = state?.portHopping;
            resourceInputs["portHoppingVariable"] = state?.portHoppingVariable;
            resourceInputs["portOffset"] = state?.portOffset;
            resourceInputs["portOffsetVariable"] = state?.portOffsetVariable;
            resourceInputs["regionId"] = state?.regionId;
            resourceInputs["regionIdVariable"] = state?.regionIdVariable;
            resourceInputs["role"] = state?.role;
            resourceInputs["roleVariable"] = state?.roleVariable;
            resourceInputs["secondaryRegionId"] = state?.secondaryRegionId;
            resourceInputs["secondaryRegionIdVariable"] = state?.secondaryRegionIdVariable;
            resourceInputs["siteId"] = state?.siteId;
            resourceInputs["siteIdVariable"] = state?.siteIdVariable;
            resourceInputs["systemDescription"] = state?.systemDescription;
            resourceInputs["systemDescriptionVariable"] = state?.systemDescriptionVariable;
            resourceInputs["systemIp"] = state?.systemIp;
            resourceInputs["systemIpVariable"] = state?.systemIpVariable;
            resourceInputs["templateType"] = state?.templateType;
            resourceInputs["timezone"] = state?.timezone;
            resourceInputs["timezoneVariable"] = state?.timezoneVariable;
            resourceInputs["trackDefaultGateway"] = state?.trackDefaultGateway;
            resourceInputs["trackDefaultGatewayVariable"] = state?.trackDefaultGatewayVariable;
            resourceInputs["trackInterfaceTag"] = state?.trackInterfaceTag;
            resourceInputs["trackInterfaceTagVariable"] = state?.trackInterfaceTagVariable;
            resourceInputs["trackTransport"] = state?.trackTransport;
            resourceInputs["trackTransportVariable"] = state?.trackTransportVariable;
            resourceInputs["trackers"] = state?.trackers;
            resourceInputs["transportGateway"] = state?.transportGateway;
            resourceInputs["transportGatewayVariable"] = state?.transportGatewayVariable;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as CiscoSystemFeatureTemplateArgs | undefined;
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if (args?.deviceTypes === undefined && !opts.urn) {
                throw new Error("Missing required property 'deviceTypes'");
            }
            resourceInputs["adminTechOnFailure"] = args?.adminTechOnFailure;
            resourceInputs["adminTechOnFailureVariable"] = args?.adminTechOnFailureVariable;
            resourceInputs["affinityGroupNumber"] = args?.affinityGroupNumber;
            resourceInputs["affinityGroupNumberVariable"] = args?.affinityGroupNumberVariable;
            resourceInputs["affinityGroupPreferenceVariable"] = args?.affinityGroupPreferenceVariable;
            resourceInputs["affinityGroupPreferences"] = args?.affinityGroupPreferences;
            resourceInputs["consoleBaudRate"] = args?.consoleBaudRate;
            resourceInputs["consoleBaudRateVariable"] = args?.consoleBaudRateVariable;
            resourceInputs["controlSessionPps"] = args?.controlSessionPps;
            resourceInputs["controlSessionPpsVariable"] = args?.controlSessionPpsVariable;
            resourceInputs["controllerGroupListVariable"] = args?.controllerGroupListVariable;
            resourceInputs["controllerGroupLists"] = args?.controllerGroupLists;
            resourceInputs["description"] = args?.description;
            resourceInputs["deviceGroups"] = args?.deviceGroups;
            resourceInputs["deviceGroupsVariable"] = args?.deviceGroupsVariable;
            resourceInputs["deviceTypes"] = args?.deviceTypes;
            resourceInputs["enableMrfMigration"] = args?.enableMrfMigration;
            resourceInputs["enhancedAppAwareRouting"] = args?.enhancedAppAwareRouting;
            resourceInputs["geoFencing"] = args?.geoFencing;
            resourceInputs["geoFencingRange"] = args?.geoFencingRange;
            resourceInputs["geoFencingRangeVariable"] = args?.geoFencingRangeVariable;
            resourceInputs["geoFencingSms"] = args?.geoFencingSms;
            resourceInputs["geoFencingSmsPhoneNumbers"] = args?.geoFencingSmsPhoneNumbers;
            resourceInputs["hostname"] = args?.hostname;
            resourceInputs["hostnameVariable"] = args?.hostnameVariable;
            resourceInputs["idleTimeout"] = args?.idleTimeout;
            resourceInputs["idleTimeoutVariable"] = args?.idleTimeoutVariable;
            resourceInputs["latitude"] = args?.latitude;
            resourceInputs["latitudeVariable"] = args?.latitudeVariable;
            resourceInputs["location"] = args?.location;
            resourceInputs["locationVariable"] = args?.locationVariable;
            resourceInputs["longitude"] = args?.longitude;
            resourceInputs["longitudeVariable"] = args?.longitudeVariable;
            resourceInputs["maxOmpSessions"] = args?.maxOmpSessions;
            resourceInputs["maxOmpSessionsVariable"] = args?.maxOmpSessionsVariable;
            resourceInputs["migrationBgpCommunity"] = args?.migrationBgpCommunity;
            resourceInputs["multiTenant"] = args?.multiTenant;
            resourceInputs["multiTenantVariable"] = args?.multiTenantVariable;
            resourceInputs["name"] = args?.name;
            resourceInputs["objectTrackers"] = args?.objectTrackers;
            resourceInputs["onDemandTunnel"] = args?.onDemandTunnel;
            resourceInputs["onDemandTunnelIdleTimeout"] = args?.onDemandTunnelIdleTimeout;
            resourceInputs["onDemandTunnelIdleTimeoutVariable"] = args?.onDemandTunnelIdleTimeoutVariable;
            resourceInputs["onDemandTunnelVariable"] = args?.onDemandTunnelVariable;
            resourceInputs["overlayId"] = args?.overlayId;
            resourceInputs["overlayIdVariable"] = args?.overlayIdVariable;
            resourceInputs["portHopping"] = args?.portHopping;
            resourceInputs["portHoppingVariable"] = args?.portHoppingVariable;
            resourceInputs["portOffset"] = args?.portOffset;
            resourceInputs["portOffsetVariable"] = args?.portOffsetVariable;
            resourceInputs["regionId"] = args?.regionId;
            resourceInputs["regionIdVariable"] = args?.regionIdVariable;
            resourceInputs["role"] = args?.role;
            resourceInputs["roleVariable"] = args?.roleVariable;
            resourceInputs["secondaryRegionId"] = args?.secondaryRegionId;
            resourceInputs["secondaryRegionIdVariable"] = args?.secondaryRegionIdVariable;
            resourceInputs["siteId"] = args?.siteId;
            resourceInputs["siteIdVariable"] = args?.siteIdVariable;
            resourceInputs["systemDescription"] = args?.systemDescription;
            resourceInputs["systemDescriptionVariable"] = args?.systemDescriptionVariable;
            resourceInputs["systemIp"] = args?.systemIp;
            resourceInputs["systemIpVariable"] = args?.systemIpVariable;
            resourceInputs["timezone"] = args?.timezone;
            resourceInputs["timezoneVariable"] = args?.timezoneVariable;
            resourceInputs["trackDefaultGateway"] = args?.trackDefaultGateway;
            resourceInputs["trackDefaultGatewayVariable"] = args?.trackDefaultGatewayVariable;
            resourceInputs["trackInterfaceTag"] = args?.trackInterfaceTag;
            resourceInputs["trackInterfaceTagVariable"] = args?.trackInterfaceTagVariable;
            resourceInputs["trackTransport"] = args?.trackTransport;
            resourceInputs["trackTransportVariable"] = args?.trackTransportVariable;
            resourceInputs["trackers"] = args?.trackers;
            resourceInputs["transportGateway"] = args?.transportGateway;
            resourceInputs["transportGatewayVariable"] = args?.transportGatewayVariable;
            resourceInputs["templateType"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CiscoSystemFeatureTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CiscoSystemFeatureTemplate resources.
 */
export interface CiscoSystemFeatureTemplateState {
    /**
     * Collect admin-tech before reboot due to daemon failure
     *   - Default value: `true`
     */
    adminTechOnFailure?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    adminTechOnFailureVariable?: pulumi.Input<string>;
    /**
     * Set the affinity group number for router
     *   - Range: `1`-`255`
     */
    affinityGroupNumber?: pulumi.Input<number>;
    /**
     * Variable name
     */
    affinityGroupNumberVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    affinityGroupPreferenceVariable?: pulumi.Input<string>;
    /**
     * Set the affinity group preference
     */
    affinityGroupPreferences?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Set the console baud rate
     *   - Choices: `1200`, `2400`, `4800`, `9600`, `19200`, `38400`, `57600`, `115200`
     *   - Default value: `9600`
     */
    consoleBaudRate?: pulumi.Input<string>;
    /**
     * Variable name
     */
    consoleBaudRateVariable?: pulumi.Input<string>;
    /**
     * Set the policer rate for control sessions
     *   - Range: `1`-`65535`
     *   - Default value: `300`
     */
    controlSessionPps?: pulumi.Input<number>;
    /**
     * Variable name
     */
    controlSessionPpsVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    controllerGroupListVariable?: pulumi.Input<string>;
    /**
     * Configure a list of comma-separated device groups
     */
    controllerGroupLists?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The description of the feature template
     */
    description?: pulumi.Input<string>;
    /**
     * Device groups (Use comma(,) for multiple groups)
     */
    deviceGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Variable name
     */
    deviceGroupsVariable?: pulumi.Input<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable migration mode to Multi-Region Fabric
     *   - Choices: `enabled`, `enabled-from-bgp-core`
     */
    enableMrfMigration?: pulumi.Input<string>;
    /**
     * Enhanced App Aware Routing
     *   - Choices: `disabled`, `aggressive`, `moderate`, `conservative`
     *   - Default value: `disabled`
     */
    enhancedAppAwareRouting?: pulumi.Input<string>;
    /**
     * Enable Geo fencing
     *   - Default value: `false`
     */
    geoFencing?: pulumi.Input<boolean>;
    /**
     * Set the device’s geo fencing range
     *   - Range: `100`-`10000`
     *   - Default value: `100`
     */
    geoFencingRange?: pulumi.Input<number>;
    /**
     * Variable name
     */
    geoFencingRangeVariable?: pulumi.Input<string>;
    /**
     * Enable Geo fencing
     *   - Default value: `false`
     */
    geoFencingSms?: pulumi.Input<boolean>;
    /**
     * Set device’s geo fencing SMS phone number
     */
    geoFencingSmsPhoneNumbers?: pulumi.Input<pulumi.Input<inputs.CiscoSystemFeatureTemplateGeoFencingSmsPhoneNumber>[]>;
    /**
     * Set the hostname
     */
    hostname?: pulumi.Input<string>;
    /**
     * Variable name
     */
    hostnameVariable?: pulumi.Input<string>;
    /**
     * Idle CLI timeout in minutes
     *   - Range: `0`-`300`
     */
    idleTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    idleTimeoutVariable?: pulumi.Input<string>;
    /**
     * Set the device’s physical latitude
     *   - Range: `-90`-`90`
     */
    latitude?: pulumi.Input<number>;
    /**
     * Variable name
     */
    latitudeVariable?: pulumi.Input<string>;
    /**
     * Set the location of the device
     */
    location?: pulumi.Input<string>;
    /**
     * Variable name
     */
    locationVariable?: pulumi.Input<string>;
    /**
     * Set the device’s physical longitude
     *   - Range: `-180`-`180`
     */
    longitude?: pulumi.Input<number>;
    /**
     * Variable name
     */
    longitudeVariable?: pulumi.Input<string>;
    /**
     * Set the maximum number of OMP sessions <1..100> the device can have
     *   - Range: `1`-`100`
     */
    maxOmpSessions?: pulumi.Input<number>;
    /**
     * Variable name
     */
    maxOmpSessionsVariable?: pulumi.Input<string>;
    /**
     * Set BGP community during migration from BGP-core based network
     *   - Range: `1`-`4294967295`
     */
    migrationBgpCommunity?: pulumi.Input<number>;
    /**
     * Device is multi-tenant
     *   - Default value: `false`
     */
    multiTenant?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    multiTenantVariable?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Object Track configuration
     */
    objectTrackers?: pulumi.Input<pulumi.Input<inputs.CiscoSystemFeatureTemplateObjectTracker>[]>;
    /**
     * Enable or disable On-demand Tunnel
     *   - Default value: `false`
     */
    onDemandTunnel?: pulumi.Input<boolean>;
    /**
     * Idle CLI timeout in minutes
     *   - Range: `0`-`300`
     */
    onDemandTunnelIdleTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    onDemandTunnelIdleTimeoutVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    onDemandTunnelVariable?: pulumi.Input<string>;
    /**
     * Set the Overlay ID
     *   - Range: `1`-`4294967295`
     *   - Default value: `1`
     */
    overlayId?: pulumi.Input<number>;
    /**
     * Variable name
     */
    overlayIdVariable?: pulumi.Input<string>;
    /**
     * Enable port hopping
     *   - Default value: `true`
     */
    portHopping?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    portHoppingVariable?: pulumi.Input<string>;
    /**
     * Set the TLOC port offset when multiple devices are behind a NAT
     *   - Range: `0`-`19`
     *   - Default value: `0`
     */
    portOffset?: pulumi.Input<number>;
    /**
     * Variable name
     */
    portOffsetVariable?: pulumi.Input<string>;
    /**
     * Set region ID
     *   - Range: `1`-`63`
     */
    regionId?: pulumi.Input<number>;
    /**
     * Variable name
     */
    regionIdVariable?: pulumi.Input<string>;
    /**
     * Set the role for router
     *   - Choices: `edge-router`, `border-router`
     */
    role?: pulumi.Input<string>;
    /**
     * Variable name
     */
    roleVariable?: pulumi.Input<string>;
    /**
     * Set secondary region ID
     *   - Range: `1`-`63`
     */
    secondaryRegionId?: pulumi.Input<number>;
    /**
     * Variable name
     */
    secondaryRegionIdVariable?: pulumi.Input<string>;
    /**
     * Set the site identifier
     *   - Range: `1`-`4294967295`
     */
    siteId?: pulumi.Input<number>;
    /**
     * Variable name
     */
    siteIdVariable?: pulumi.Input<string>;
    /**
     * Set a text description of the device
     */
    systemDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    systemDescriptionVariable?: pulumi.Input<string>;
    /**
     * Set the system IP address
     */
    systemIp?: pulumi.Input<string>;
    /**
     * Variable name
     */
    systemIpVariable?: pulumi.Input<string>;
    /**
     * The template type
     */
    templateType?: pulumi.Input<string>;
    /**
     * Set the timezone
     *   - Choices: `Europe/Andorra`, `Asia/Dubai`, `Asia/Kabul`, `America/Antigua`, `America/Anguilla`, `Europe/Tirane`, `Asia/Yerevan`, `Africa/Luanda`, `Antarctica/McMurdo`, `Antarctica/Rothera`, `Antarctica/Palmer`, `Antarctica/Mawson`, `Antarctica/Davis`, `Antarctica/Casey`, `Antarctica/Vostok`, `Antarctica/DumontDUrville`, `Antarctica/Syowa`, `America/Argentina/Buenos_Aires`, `America/Argentina/Cordoba`, `America/Argentina/Salta`, `America/Argentina/Jujuy`, `America/Argentina/Tucuman`, `America/Argentina/Catamarca`, `America/Argentina/La_Rioja`, `America/Argentina/San_Juan`, `America/Argentina/Mendoza`, `America/Argentina/San_Luis`, `America/Argentina/Rio_Gallegos`, `America/Argentina/Ushuaia`, `Pacific/Pago_Pago`, `Europe/Vienna`, `Australia/Lord_Howe`, `Antarctica/Macquarie`, `Australia/Hobart`, `Australia/Currie`, `Australia/Melbourne`, `Australia/Sydney`, `Australia/Broken_Hill`, `Australia/Brisbane`, `Australia/Lindeman`, `Australia/Adelaide`, `Australia/Darwin`, `Australia/Perth`, `Australia/Eucla`, `America/Aruba`, `Europe/Mariehamn`, `Asia/Baku`, `Europe/Sarajevo`, `America/Barbados`, `Asia/Dhaka`, `Europe/Brussels`, `Africa/Ouagadougou`, `Europe/Sofia`, `Asia/Bahrain`, `Africa/Bujumbura`, `Africa/Porto-Novo`, `America/St_Barthelemy`, `Atlantic/Bermuda`, `Asia/Brunei`, `America/La_Paz`, `America/Kralendijk`, `America/Noronha`, `America/Belem`, `America/Fortaleza`, `America/Recife`, `America/Araguaina`, `America/Maceio`, `America/Bahia`, `America/Sao_Paulo`, `America/Campo_Grande`, `America/Cuiaba`, `America/Santarem`, `America/Porto_Velho`, `America/Boa_Vista`, `America/Manaus`, `America/Eirunepe`, `America/Rio_Branco`, `America/Nassau`, `Asia/Thimphu`, `Africa/Gaborone`, `Europe/Minsk`, `America/Belize`, `America/St_Johns`, `America/Halifax`, `America/Glace_Bay`, `America/Moncton`, `America/Goose_Bay`, `America/Blanc-Sablon`, `America/Toronto`, `America/Nipigon`, `America/Thunder_Bay`, `America/Iqaluit`, `America/Pangnirtung`, `America/Resolute`, `America/Atikokan`, `America/Rankin_Inlet`, `America/Winnipeg`, `America/Rainy_River`, `America/Regina`, `America/Swift_Current`, `America/Edmonton`, `America/Cambridge_Bay`, `America/Yellowknife`, `America/Inuvik`, `America/Creston`, `America/Dawson_Creek`, `America/Vancouver`, `America/Whitehorse`, `America/Dawson`, `Indian/Cocos`, `Africa/Kinshasa`, `Africa/Lubumbashi`, `Africa/Bangui`, `Africa/Brazzaville`, `Europe/Zurich`, `Africa/Abidjan`, `Pacific/Rarotonga`, `America/Santiago`, `Pacific/Easter`, `Africa/Douala`, `Asia/Shanghai`, `Asia/Harbin`, `Asia/Chongqing`, `Asia/Urumqi`, `Asia/Kashgar`, `America/Bogota`, `America/Costa_Rica`, `America/Havana`, `Atlantic/Cape_Verde`, `America/Curacao`, `Indian/Christmas`, `Asia/Nicosia`, `Europe/Prague`, `Europe/Berlin`, `Europe/Busingen`, `Africa/Djibouti`, `Europe/Copenhagen`, `America/Dominica`, `America/Santo_Domingo`, `Africa/Algiers`, `America/Guayaquil`, `Pacific/Galapagos`, `Europe/Tallinn`, `Africa/Cairo`, `Africa/El_Aaiun`, `Africa/Asmara`, `Europe/Madrid`, `Africa/Ceuta`, `Atlantic/Canary`, `Africa/Addis_Ababa`, `Europe/Helsinki`, `Pacific/Fiji`, `Atlantic/Stanley`, `Pacific/Chuuk`, `Pacific/Pohnpei`, `Pacific/Kosrae`, `Atlantic/Faroe`, `Europe/Paris`, `Africa/Libreville`, `Europe/London`, `America/Grenada`, `Asia/Tbilisi`, `America/Cayenne`, `Europe/Guernsey`, `Africa/Accra`, `Europe/Gibraltar`, `America/Godthab`, `America/Danmarkshavn`, `America/Scoresbysund`, `America/Thule`, `Africa/Banjul`, `Africa/Conakry`, `America/Guadeloupe`, `Africa/Malabo`, `Europe/Athens`, `Atlantic/South_Georgia`, `America/Guatemala`, `Pacific/Guam`, `Africa/Bissau`, `America/Guyana`, `Asia/Hong_Kong`, `America/Tegucigalpa`, `Europe/Zagreb`, `America/Port-au-Prince`, `Europe/Budapest`, `Asia/Jakarta`, `Asia/Pontianak`, `Asia/Makassar`, `Asia/Jayapura`, `Europe/Dublin`, `Asia/Jerusalem`, `Europe/Isle_of_Man`, `Asia/Kolkata`, `Indian/Chagos`, `Asia/Baghdad`, `Asia/Tehran`, `Atlantic/Reykjavik`, `Europe/Rome`, `Europe/Jersey`, `America/Jamaica`, `Asia/Amman`, `Asia/Tokyo`, `Africa/Nairobi`, `Asia/Bishkek`, `Asia/Phnom_Penh`, `Pacific/Tarawa`, `Pacific/Enderbury`, `Pacific/Kiritimati`, `Indian/Comoro`, `America/St_Kitts`, `Asia/Pyongyang`, `Asia/Seoul`, `Asia/Kuwait`, `America/Cayman`, `Asia/Almaty`, `Asia/Qyzylorda`, `Asia/Aqtobe`, `Asia/Aqtau`, `Asia/Oral`, `Asia/Vientiane`, `Asia/Beirut`, `America/St_Lucia`, `Europe/Vaduz`, `Asia/Colombo`, `Africa/Monrovia`, `Africa/Maseru`, `Europe/Vilnius`, `Europe/Luxembourg`, `Europe/Riga`, `Africa/Tripoli`, `Africa/Casablanca`, `Europe/Monaco`, `Europe/Chisinau`, `Europe/Podgorica`, `America/Marigot`, `Indian/Antananarivo`, `Pacific/Majuro`, `Pacific/Kwajalein`, `Europe/Skopje`, `Africa/Bamako`, `Asia/Rangoon`, `Asia/Ulaanbaatar`, `Asia/Hovd`, `Asia/Choibalsan`, `Asia/Macau`, `Pacific/Saipan`, `America/Martinique`, `Africa/Nouakchott`, `America/Montserrat`, `Europe/Malta`, `Indian/Mauritius`, `Indian/Maldives`, `Africa/Blantyre`, `America/Mexico_City`, `America/Cancun`, `America/Merida`, `America/Monterrey`, `America/Matamoros`, `America/Mazatlan`, `America/Chihuahua`, `America/Ojinaga`, `America/Hermosillo`, `America/Tijuana`, `America/Santa_Isabel`, `America/Bahia_Banderas`, `Asia/Kuala_Lumpur`, `Asia/Kuching`, `Africa/Maputo`, `Africa/Windhoek`, `Pacific/Noumea`, `Africa/Niamey`, `Pacific/Norfolk`, `Africa/Lagos`, `America/Managua`, `Europe/Amsterdam`, `Europe/Oslo`, `Asia/Kathmandu`, `Pacific/Nauru`, `Pacific/Niue`, `Pacific/Auckland`, `Pacific/Chatham`, `Asia/Muscat`, `America/Panama`, `America/Lima`, `Pacific/Tahiti`, `Pacific/Marquesas`, `Pacific/Gambier`, `Pacific/Port_Moresby`, `Asia/Manila`, `Asia/Karachi`, `Europe/Warsaw`, `America/Miquelon`, `Pacific/Pitcairn`, `America/Puerto_Rico`, `Asia/Gaza`, `Asia/Hebron`, `Europe/Lisbon`, `Atlantic/Madeira`, `Atlantic/Azores`, `Pacific/Palau`, `America/Asuncion`, `Asia/Qatar`, `Indian/Reunion`, `Europe/Bucharest`, `Europe/Belgrade`, `Europe/Kaliningrad`, `Europe/Moscow`, `Europe/Volgograd`, `Europe/Samara`, `Asia/Yekaterinburg`, `Asia/Omsk`, `Asia/Novosibirsk`, `Asia/Novokuznetsk`, `Asia/Krasnoyarsk`, `Asia/Irkutsk`, `Asia/Yakutsk`, `Asia/Khandyga`, `Asia/Vladivostok`, `Asia/Sakhalin`, `Asia/Ust-Nera`, `Asia/Magadan`, `Asia/Kamchatka`, `Asia/Anadyr`, `Africa/Kigali`, `Asia/Riyadh`, `Pacific/Guadalcanal`, `Indian/Mahe`, `Africa/Khartoum`, `Europe/Stockholm`, `Asia/Singapore`, `Atlantic/St_Helena`, `Europe/Ljubljana`, `Arctic/Longyearbyen`, `Europe/Bratislava`, `Africa/Freetown`, `Europe/San_Marino`, `Africa/Dakar`, `Africa/Mogadishu`, `America/Paramaribo`, `Africa/Juba`, `Africa/Sao_Tome`, `America/El_Salvador`, `America/Lower_Princes`, `Asia/Damascus`, `Africa/Mbabane`, `America/Grand_Turk`, `Africa/Ndjamena`, `Indian/Kerguelen`, `Africa/Lome`, `Asia/Bangkok`, `Asia/Dushanbe`, `Pacific/Fakaofo`, `Asia/Dili`, `Asia/Ashgabat`, `Africa/Tunis`, `Pacific/Tongatapu`, `Europe/Istanbul`, `America/Port_of_Spain`, `Pacific/Funafuti`, `Asia/Taipei`, `Africa/Dar_es_Salaam`, `Europe/Kiev`, `Europe/Uzhgorod`, `Europe/Zaporozhye`, `Europe/Simferopol`, `Africa/Kampala`, `Pacific/Johnston`, `Pacific/Midway`, `Pacific/Wake`, `America/New_York`, `America/Detroit`, `America/Kentucky/Louisville`, `America/Kentucky/Monticello`, `America/Indiana/Indianapolis`, `America/Indiana/Vincennes`, `America/Indiana/Winamac`, `America/Indiana/Marengo`, `America/Indiana/Petersburg`, `America/Indiana/Vevay`, `America/Chicago`, `America/Indiana/Tell_City`, `America/Indiana/Knox`, `America/Menominee`, `America/North_Dakota/Center`, `America/North_Dakota/New_Salem`, `America/North_Dakota/Beulah`, `America/Denver`, `America/Boise`, `America/Phoenix`, `America/Los_Angeles`, `America/Anchorage`, `America/Juneau`, `America/Sitka`, `America/Yakutat`, `America/Nome`, `America/Adak`, `America/Metlakatla`, `Pacific/Honolulu`, `America/Montevideo`, `Asia/Samarkand`, `Asia/Tashkent`, `Europe/Vatican`, `America/St_Vincent`, `America/Caracas`, `America/Tortola`, `America/St_Thomas`, `Asia/Ho_Chi_Minh`, `Pacific/Efate`, `Pacific/Wallis`, `Pacific/Apia`, `Asia/Aden`, `Indian/Mayotte`, `Africa/Johannesburg`, `Africa/Lusaka`, `Africa/Harare`, `UTC`
     *   - Default value: `UTC`
     */
    timezone?: pulumi.Input<string>;
    /**
     * Variable name
     */
    timezoneVariable?: pulumi.Input<string>;
    /**
     * Enable or disable default gateway tracking
     *   - Default value: `true`
     */
    trackDefaultGateway?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    trackDefaultGatewayVariable?: pulumi.Input<string>;
    /**
     * OMP Tag attached to routes based on interface tracking
     *   - Range: `1`-`4294967295`
     */
    trackInterfaceTag?: pulumi.Input<number>;
    /**
     * Variable name
     */
    trackInterfaceTagVariable?: pulumi.Input<string>;
    /**
     * Configure tracking of transport
     *   - Default value: `true`
     */
    trackTransport?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    trackTransportVariable?: pulumi.Input<string>;
    /**
     * Tracker configuration
     */
    trackers?: pulumi.Input<pulumi.Input<inputs.CiscoSystemFeatureTemplateTracker>[]>;
    /**
     * Enable transport gateway
     *   - Default value: `false`
     */
    transportGateway?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    transportGatewayVariable?: pulumi.Input<string>;
    /**
     * The version of the feature template
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CiscoSystemFeatureTemplate resource.
 */
export interface CiscoSystemFeatureTemplateArgs {
    /**
     * Collect admin-tech before reboot due to daemon failure
     *   - Default value: `true`
     */
    adminTechOnFailure?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    adminTechOnFailureVariable?: pulumi.Input<string>;
    /**
     * Set the affinity group number for router
     *   - Range: `1`-`255`
     */
    affinityGroupNumber?: pulumi.Input<number>;
    /**
     * Variable name
     */
    affinityGroupNumberVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    affinityGroupPreferenceVariable?: pulumi.Input<string>;
    /**
     * Set the affinity group preference
     */
    affinityGroupPreferences?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Set the console baud rate
     *   - Choices: `1200`, `2400`, `4800`, `9600`, `19200`, `38400`, `57600`, `115200`
     *   - Default value: `9600`
     */
    consoleBaudRate?: pulumi.Input<string>;
    /**
     * Variable name
     */
    consoleBaudRateVariable?: pulumi.Input<string>;
    /**
     * Set the policer rate for control sessions
     *   - Range: `1`-`65535`
     *   - Default value: `300`
     */
    controlSessionPps?: pulumi.Input<number>;
    /**
     * Variable name
     */
    controlSessionPpsVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    controllerGroupListVariable?: pulumi.Input<string>;
    /**
     * Configure a list of comma-separated device groups
     */
    controllerGroupLists?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The description of the feature template
     */
    description: pulumi.Input<string>;
    /**
     * Device groups (Use comma(,) for multiple groups)
     */
    deviceGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Variable name
     */
    deviceGroupsVariable?: pulumi.Input<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable migration mode to Multi-Region Fabric
     *   - Choices: `enabled`, `enabled-from-bgp-core`
     */
    enableMrfMigration?: pulumi.Input<string>;
    /**
     * Enhanced App Aware Routing
     *   - Choices: `disabled`, `aggressive`, `moderate`, `conservative`
     *   - Default value: `disabled`
     */
    enhancedAppAwareRouting?: pulumi.Input<string>;
    /**
     * Enable Geo fencing
     *   - Default value: `false`
     */
    geoFencing?: pulumi.Input<boolean>;
    /**
     * Set the device’s geo fencing range
     *   - Range: `100`-`10000`
     *   - Default value: `100`
     */
    geoFencingRange?: pulumi.Input<number>;
    /**
     * Variable name
     */
    geoFencingRangeVariable?: pulumi.Input<string>;
    /**
     * Enable Geo fencing
     *   - Default value: `false`
     */
    geoFencingSms?: pulumi.Input<boolean>;
    /**
     * Set device’s geo fencing SMS phone number
     */
    geoFencingSmsPhoneNumbers?: pulumi.Input<pulumi.Input<inputs.CiscoSystemFeatureTemplateGeoFencingSmsPhoneNumber>[]>;
    /**
     * Set the hostname
     */
    hostname?: pulumi.Input<string>;
    /**
     * Variable name
     */
    hostnameVariable?: pulumi.Input<string>;
    /**
     * Idle CLI timeout in minutes
     *   - Range: `0`-`300`
     */
    idleTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    idleTimeoutVariable?: pulumi.Input<string>;
    /**
     * Set the device’s physical latitude
     *   - Range: `-90`-`90`
     */
    latitude?: pulumi.Input<number>;
    /**
     * Variable name
     */
    latitudeVariable?: pulumi.Input<string>;
    /**
     * Set the location of the device
     */
    location?: pulumi.Input<string>;
    /**
     * Variable name
     */
    locationVariable?: pulumi.Input<string>;
    /**
     * Set the device’s physical longitude
     *   - Range: `-180`-`180`
     */
    longitude?: pulumi.Input<number>;
    /**
     * Variable name
     */
    longitudeVariable?: pulumi.Input<string>;
    /**
     * Set the maximum number of OMP sessions <1..100> the device can have
     *   - Range: `1`-`100`
     */
    maxOmpSessions?: pulumi.Input<number>;
    /**
     * Variable name
     */
    maxOmpSessionsVariable?: pulumi.Input<string>;
    /**
     * Set BGP community during migration from BGP-core based network
     *   - Range: `1`-`4294967295`
     */
    migrationBgpCommunity?: pulumi.Input<number>;
    /**
     * Device is multi-tenant
     *   - Default value: `false`
     */
    multiTenant?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    multiTenantVariable?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Object Track configuration
     */
    objectTrackers?: pulumi.Input<pulumi.Input<inputs.CiscoSystemFeatureTemplateObjectTracker>[]>;
    /**
     * Enable or disable On-demand Tunnel
     *   - Default value: `false`
     */
    onDemandTunnel?: pulumi.Input<boolean>;
    /**
     * Idle CLI timeout in minutes
     *   - Range: `0`-`300`
     */
    onDemandTunnelIdleTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    onDemandTunnelIdleTimeoutVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    onDemandTunnelVariable?: pulumi.Input<string>;
    /**
     * Set the Overlay ID
     *   - Range: `1`-`4294967295`
     *   - Default value: `1`
     */
    overlayId?: pulumi.Input<number>;
    /**
     * Variable name
     */
    overlayIdVariable?: pulumi.Input<string>;
    /**
     * Enable port hopping
     *   - Default value: `true`
     */
    portHopping?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    portHoppingVariable?: pulumi.Input<string>;
    /**
     * Set the TLOC port offset when multiple devices are behind a NAT
     *   - Range: `0`-`19`
     *   - Default value: `0`
     */
    portOffset?: pulumi.Input<number>;
    /**
     * Variable name
     */
    portOffsetVariable?: pulumi.Input<string>;
    /**
     * Set region ID
     *   - Range: `1`-`63`
     */
    regionId?: pulumi.Input<number>;
    /**
     * Variable name
     */
    regionIdVariable?: pulumi.Input<string>;
    /**
     * Set the role for router
     *   - Choices: `edge-router`, `border-router`
     */
    role?: pulumi.Input<string>;
    /**
     * Variable name
     */
    roleVariable?: pulumi.Input<string>;
    /**
     * Set secondary region ID
     *   - Range: `1`-`63`
     */
    secondaryRegionId?: pulumi.Input<number>;
    /**
     * Variable name
     */
    secondaryRegionIdVariable?: pulumi.Input<string>;
    /**
     * Set the site identifier
     *   - Range: `1`-`4294967295`
     */
    siteId?: pulumi.Input<number>;
    /**
     * Variable name
     */
    siteIdVariable?: pulumi.Input<string>;
    /**
     * Set a text description of the device
     */
    systemDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    systemDescriptionVariable?: pulumi.Input<string>;
    /**
     * Set the system IP address
     */
    systemIp?: pulumi.Input<string>;
    /**
     * Variable name
     */
    systemIpVariable?: pulumi.Input<string>;
    /**
     * Set the timezone
     *   - Choices: `Europe/Andorra`, `Asia/Dubai`, `Asia/Kabul`, `America/Antigua`, `America/Anguilla`, `Europe/Tirane`, `Asia/Yerevan`, `Africa/Luanda`, `Antarctica/McMurdo`, `Antarctica/Rothera`, `Antarctica/Palmer`, `Antarctica/Mawson`, `Antarctica/Davis`, `Antarctica/Casey`, `Antarctica/Vostok`, `Antarctica/DumontDUrville`, `Antarctica/Syowa`, `America/Argentina/Buenos_Aires`, `America/Argentina/Cordoba`, `America/Argentina/Salta`, `America/Argentina/Jujuy`, `America/Argentina/Tucuman`, `America/Argentina/Catamarca`, `America/Argentina/La_Rioja`, `America/Argentina/San_Juan`, `America/Argentina/Mendoza`, `America/Argentina/San_Luis`, `America/Argentina/Rio_Gallegos`, `America/Argentina/Ushuaia`, `Pacific/Pago_Pago`, `Europe/Vienna`, `Australia/Lord_Howe`, `Antarctica/Macquarie`, `Australia/Hobart`, `Australia/Currie`, `Australia/Melbourne`, `Australia/Sydney`, `Australia/Broken_Hill`, `Australia/Brisbane`, `Australia/Lindeman`, `Australia/Adelaide`, `Australia/Darwin`, `Australia/Perth`, `Australia/Eucla`, `America/Aruba`, `Europe/Mariehamn`, `Asia/Baku`, `Europe/Sarajevo`, `America/Barbados`, `Asia/Dhaka`, `Europe/Brussels`, `Africa/Ouagadougou`, `Europe/Sofia`, `Asia/Bahrain`, `Africa/Bujumbura`, `Africa/Porto-Novo`, `America/St_Barthelemy`, `Atlantic/Bermuda`, `Asia/Brunei`, `America/La_Paz`, `America/Kralendijk`, `America/Noronha`, `America/Belem`, `America/Fortaleza`, `America/Recife`, `America/Araguaina`, `America/Maceio`, `America/Bahia`, `America/Sao_Paulo`, `America/Campo_Grande`, `America/Cuiaba`, `America/Santarem`, `America/Porto_Velho`, `America/Boa_Vista`, `America/Manaus`, `America/Eirunepe`, `America/Rio_Branco`, `America/Nassau`, `Asia/Thimphu`, `Africa/Gaborone`, `Europe/Minsk`, `America/Belize`, `America/St_Johns`, `America/Halifax`, `America/Glace_Bay`, `America/Moncton`, `America/Goose_Bay`, `America/Blanc-Sablon`, `America/Toronto`, `America/Nipigon`, `America/Thunder_Bay`, `America/Iqaluit`, `America/Pangnirtung`, `America/Resolute`, `America/Atikokan`, `America/Rankin_Inlet`, `America/Winnipeg`, `America/Rainy_River`, `America/Regina`, `America/Swift_Current`, `America/Edmonton`, `America/Cambridge_Bay`, `America/Yellowknife`, `America/Inuvik`, `America/Creston`, `America/Dawson_Creek`, `America/Vancouver`, `America/Whitehorse`, `America/Dawson`, `Indian/Cocos`, `Africa/Kinshasa`, `Africa/Lubumbashi`, `Africa/Bangui`, `Africa/Brazzaville`, `Europe/Zurich`, `Africa/Abidjan`, `Pacific/Rarotonga`, `America/Santiago`, `Pacific/Easter`, `Africa/Douala`, `Asia/Shanghai`, `Asia/Harbin`, `Asia/Chongqing`, `Asia/Urumqi`, `Asia/Kashgar`, `America/Bogota`, `America/Costa_Rica`, `America/Havana`, `Atlantic/Cape_Verde`, `America/Curacao`, `Indian/Christmas`, `Asia/Nicosia`, `Europe/Prague`, `Europe/Berlin`, `Europe/Busingen`, `Africa/Djibouti`, `Europe/Copenhagen`, `America/Dominica`, `America/Santo_Domingo`, `Africa/Algiers`, `America/Guayaquil`, `Pacific/Galapagos`, `Europe/Tallinn`, `Africa/Cairo`, `Africa/El_Aaiun`, `Africa/Asmara`, `Europe/Madrid`, `Africa/Ceuta`, `Atlantic/Canary`, `Africa/Addis_Ababa`, `Europe/Helsinki`, `Pacific/Fiji`, `Atlantic/Stanley`, `Pacific/Chuuk`, `Pacific/Pohnpei`, `Pacific/Kosrae`, `Atlantic/Faroe`, `Europe/Paris`, `Africa/Libreville`, `Europe/London`, `America/Grenada`, `Asia/Tbilisi`, `America/Cayenne`, `Europe/Guernsey`, `Africa/Accra`, `Europe/Gibraltar`, `America/Godthab`, `America/Danmarkshavn`, `America/Scoresbysund`, `America/Thule`, `Africa/Banjul`, `Africa/Conakry`, `America/Guadeloupe`, `Africa/Malabo`, `Europe/Athens`, `Atlantic/South_Georgia`, `America/Guatemala`, `Pacific/Guam`, `Africa/Bissau`, `America/Guyana`, `Asia/Hong_Kong`, `America/Tegucigalpa`, `Europe/Zagreb`, `America/Port-au-Prince`, `Europe/Budapest`, `Asia/Jakarta`, `Asia/Pontianak`, `Asia/Makassar`, `Asia/Jayapura`, `Europe/Dublin`, `Asia/Jerusalem`, `Europe/Isle_of_Man`, `Asia/Kolkata`, `Indian/Chagos`, `Asia/Baghdad`, `Asia/Tehran`, `Atlantic/Reykjavik`, `Europe/Rome`, `Europe/Jersey`, `America/Jamaica`, `Asia/Amman`, `Asia/Tokyo`, `Africa/Nairobi`, `Asia/Bishkek`, `Asia/Phnom_Penh`, `Pacific/Tarawa`, `Pacific/Enderbury`, `Pacific/Kiritimati`, `Indian/Comoro`, `America/St_Kitts`, `Asia/Pyongyang`, `Asia/Seoul`, `Asia/Kuwait`, `America/Cayman`, `Asia/Almaty`, `Asia/Qyzylorda`, `Asia/Aqtobe`, `Asia/Aqtau`, `Asia/Oral`, `Asia/Vientiane`, `Asia/Beirut`, `America/St_Lucia`, `Europe/Vaduz`, `Asia/Colombo`, `Africa/Monrovia`, `Africa/Maseru`, `Europe/Vilnius`, `Europe/Luxembourg`, `Europe/Riga`, `Africa/Tripoli`, `Africa/Casablanca`, `Europe/Monaco`, `Europe/Chisinau`, `Europe/Podgorica`, `America/Marigot`, `Indian/Antananarivo`, `Pacific/Majuro`, `Pacific/Kwajalein`, `Europe/Skopje`, `Africa/Bamako`, `Asia/Rangoon`, `Asia/Ulaanbaatar`, `Asia/Hovd`, `Asia/Choibalsan`, `Asia/Macau`, `Pacific/Saipan`, `America/Martinique`, `Africa/Nouakchott`, `America/Montserrat`, `Europe/Malta`, `Indian/Mauritius`, `Indian/Maldives`, `Africa/Blantyre`, `America/Mexico_City`, `America/Cancun`, `America/Merida`, `America/Monterrey`, `America/Matamoros`, `America/Mazatlan`, `America/Chihuahua`, `America/Ojinaga`, `America/Hermosillo`, `America/Tijuana`, `America/Santa_Isabel`, `America/Bahia_Banderas`, `Asia/Kuala_Lumpur`, `Asia/Kuching`, `Africa/Maputo`, `Africa/Windhoek`, `Pacific/Noumea`, `Africa/Niamey`, `Pacific/Norfolk`, `Africa/Lagos`, `America/Managua`, `Europe/Amsterdam`, `Europe/Oslo`, `Asia/Kathmandu`, `Pacific/Nauru`, `Pacific/Niue`, `Pacific/Auckland`, `Pacific/Chatham`, `Asia/Muscat`, `America/Panama`, `America/Lima`, `Pacific/Tahiti`, `Pacific/Marquesas`, `Pacific/Gambier`, `Pacific/Port_Moresby`, `Asia/Manila`, `Asia/Karachi`, `Europe/Warsaw`, `America/Miquelon`, `Pacific/Pitcairn`, `America/Puerto_Rico`, `Asia/Gaza`, `Asia/Hebron`, `Europe/Lisbon`, `Atlantic/Madeira`, `Atlantic/Azores`, `Pacific/Palau`, `America/Asuncion`, `Asia/Qatar`, `Indian/Reunion`, `Europe/Bucharest`, `Europe/Belgrade`, `Europe/Kaliningrad`, `Europe/Moscow`, `Europe/Volgograd`, `Europe/Samara`, `Asia/Yekaterinburg`, `Asia/Omsk`, `Asia/Novosibirsk`, `Asia/Novokuznetsk`, `Asia/Krasnoyarsk`, `Asia/Irkutsk`, `Asia/Yakutsk`, `Asia/Khandyga`, `Asia/Vladivostok`, `Asia/Sakhalin`, `Asia/Ust-Nera`, `Asia/Magadan`, `Asia/Kamchatka`, `Asia/Anadyr`, `Africa/Kigali`, `Asia/Riyadh`, `Pacific/Guadalcanal`, `Indian/Mahe`, `Africa/Khartoum`, `Europe/Stockholm`, `Asia/Singapore`, `Atlantic/St_Helena`, `Europe/Ljubljana`, `Arctic/Longyearbyen`, `Europe/Bratislava`, `Africa/Freetown`, `Europe/San_Marino`, `Africa/Dakar`, `Africa/Mogadishu`, `America/Paramaribo`, `Africa/Juba`, `Africa/Sao_Tome`, `America/El_Salvador`, `America/Lower_Princes`, `Asia/Damascus`, `Africa/Mbabane`, `America/Grand_Turk`, `Africa/Ndjamena`, `Indian/Kerguelen`, `Africa/Lome`, `Asia/Bangkok`, `Asia/Dushanbe`, `Pacific/Fakaofo`, `Asia/Dili`, `Asia/Ashgabat`, `Africa/Tunis`, `Pacific/Tongatapu`, `Europe/Istanbul`, `America/Port_of_Spain`, `Pacific/Funafuti`, `Asia/Taipei`, `Africa/Dar_es_Salaam`, `Europe/Kiev`, `Europe/Uzhgorod`, `Europe/Zaporozhye`, `Europe/Simferopol`, `Africa/Kampala`, `Pacific/Johnston`, `Pacific/Midway`, `Pacific/Wake`, `America/New_York`, `America/Detroit`, `America/Kentucky/Louisville`, `America/Kentucky/Monticello`, `America/Indiana/Indianapolis`, `America/Indiana/Vincennes`, `America/Indiana/Winamac`, `America/Indiana/Marengo`, `America/Indiana/Petersburg`, `America/Indiana/Vevay`, `America/Chicago`, `America/Indiana/Tell_City`, `America/Indiana/Knox`, `America/Menominee`, `America/North_Dakota/Center`, `America/North_Dakota/New_Salem`, `America/North_Dakota/Beulah`, `America/Denver`, `America/Boise`, `America/Phoenix`, `America/Los_Angeles`, `America/Anchorage`, `America/Juneau`, `America/Sitka`, `America/Yakutat`, `America/Nome`, `America/Adak`, `America/Metlakatla`, `Pacific/Honolulu`, `America/Montevideo`, `Asia/Samarkand`, `Asia/Tashkent`, `Europe/Vatican`, `America/St_Vincent`, `America/Caracas`, `America/Tortola`, `America/St_Thomas`, `Asia/Ho_Chi_Minh`, `Pacific/Efate`, `Pacific/Wallis`, `Pacific/Apia`, `Asia/Aden`, `Indian/Mayotte`, `Africa/Johannesburg`, `Africa/Lusaka`, `Africa/Harare`, `UTC`
     *   - Default value: `UTC`
     */
    timezone?: pulumi.Input<string>;
    /**
     * Variable name
     */
    timezoneVariable?: pulumi.Input<string>;
    /**
     * Enable or disable default gateway tracking
     *   - Default value: `true`
     */
    trackDefaultGateway?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    trackDefaultGatewayVariable?: pulumi.Input<string>;
    /**
     * OMP Tag attached to routes based on interface tracking
     *   - Range: `1`-`4294967295`
     */
    trackInterfaceTag?: pulumi.Input<number>;
    /**
     * Variable name
     */
    trackInterfaceTagVariable?: pulumi.Input<string>;
    /**
     * Configure tracking of transport
     *   - Default value: `true`
     */
    trackTransport?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    trackTransportVariable?: pulumi.Input<string>;
    /**
     * Tracker configuration
     */
    trackers?: pulumi.Input<pulumi.Input<inputs.CiscoSystemFeatureTemplateTracker>[]>;
    /**
     * Enable transport gateway
     *   - Default value: `false`
     */
    transportGateway?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    transportGatewayVariable?: pulumi.Input<string>;
}
