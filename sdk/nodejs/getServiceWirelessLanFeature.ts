// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the Service Wireless LAN Feature.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getServiceWirelessLanFeature({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 * });
 * ```
 */
export function getServiceWirelessLanFeature(args: GetServiceWirelessLanFeatureArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceWirelessLanFeatureResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getServiceWirelessLanFeature:getServiceWirelessLanFeature", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceWirelessLanFeature.
 */
export interface GetServiceWirelessLanFeatureArgs {
    /**
     * Feature Profile ID
     */
    featureProfileId: string;
    /**
     * The id of the Feature
     */
    id: string;
}

/**
 * A collection of values returned by getServiceWirelessLanFeature.
 */
export interface GetServiceWirelessLanFeatureResult {
    /**
     * Select country
     */
    readonly country: string;
    /**
     * Variable name
     */
    readonly countryVariable: string;
    /**
     * The description of the Feature
     */
    readonly description: string;
    /**
     * 2.4GHz Enabled
     */
    readonly enable24g: boolean;
    /**
     * Variable name
     */
    readonly enable24gVariable: string;
    /**
     * 5GHz Enabled
     */
    readonly enable5g: boolean;
    /**
     * Variable name
     */
    readonly enable5gVariable: string;
    /**
     * Feature Profile ID
     */
    readonly featureProfileId: string;
    /**
     * The id of the Feature
     */
    readonly id: string;
    /**
     * Set mobile express default gateway
     */
    readonly meDefaultGateway: string;
    /**
     * Variable name
     */
    readonly meDefaultGatewayVariable: string;
    /**
     * ME management IP dynamic allocated by DHCP
     */
    readonly meDynamicIpEnabled: boolean;
    /**
     * Set mobile express controller address
     */
    readonly meIpv4Address: string;
    /**
     * Variable name
     */
    readonly meIpv4AddressVariable: string;
    /**
     * Set mobile express controller subnet mask
     */
    readonly meSubnetMask: string;
    /**
     * Variable name
     */
    readonly meSubnetMaskVariable: string;
    /**
     * The name of the Feature
     */
    readonly name: string;
    /**
     * Set management password,the password must contains characters from all of the following classes,lowercase letters,uppercase letters,digits,and special characters. No character in the password can be repeated more than three times consecutively. The password must not be the same as the associated username or the username reversed. The password must not be cisco,ocsic,or any variant obtained by changing the capitalization of the letters in word cisco. In addition,you can't substitute 1,l,or ! for i,0 for o,$ for s.
     */
    readonly password: string;
    /**
     * Variable name
     */
    readonly passwordVariable: string;
    /**
     * Configure Wi-Fi SSID profile
     */
    readonly ssids: outputs.GetServiceWirelessLanFeatureSsid[];
    /**
     * Set management username
     */
    readonly username: string;
    /**
     * Variable name
     */
    readonly usernameVariable: string;
    /**
     * The version of the Feature
     */
    readonly version: number;
}
/**
 * This data source can read the Service Wireless LAN Feature.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getServiceWirelessLanFeature({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 * });
 * ```
 */
export function getServiceWirelessLanFeatureOutput(args: GetServiceWirelessLanFeatureOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetServiceWirelessLanFeatureResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sdwan:index/getServiceWirelessLanFeature:getServiceWirelessLanFeature", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceWirelessLanFeature.
 */
export interface GetServiceWirelessLanFeatureOutputArgs {
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * The id of the Feature
     */
    id: pulumi.Input<string>;
}
