// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource can manage a Cellular cEdge Profile feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = new sdwan.CellularCedgeProfileFeatureTemplate("example", {
 *     name: "Example",
 *     description: "My Example",
 *     deviceTypes: ["vedge-C8000V"],
 *     profileId: 1,
 *     accessPointName: "APN1",
 *     authenticationType: "chap",
 *     packetDataNetworkType: "ipv4",
 *     profileUsername: "MyUsername",
 *     profilePassword: "MyPassword",
 *     noOverwrite: false,
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import sdwan:index/cellularCedgeProfileFeatureTemplate:CellularCedgeProfileFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class CellularCedgeProfileFeatureTemplate extends pulumi.CustomResource {
    /**
     * Get an existing CellularCedgeProfileFeatureTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CellularCedgeProfileFeatureTemplateState, opts?: pulumi.CustomResourceOptions): CellularCedgeProfileFeatureTemplate {
        return new CellularCedgeProfileFeatureTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/cellularCedgeProfileFeatureTemplate:CellularCedgeProfileFeatureTemplate';

    /**
     * Returns true if the given object is an instance of CellularCedgeProfileFeatureTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CellularCedgeProfileFeatureTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CellularCedgeProfileFeatureTemplate.__pulumiType;
    }

    /**
     * Set access point name
     */
    declare public readonly accessPointName: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly accessPointNameVariable: pulumi.Output<string | undefined>;
    /**
     * Set authentication type
     *   - Choices: `none`, `pap`, `chap`, `papChap`
     *   - Default value: `none`
     */
    declare public readonly authenticationType: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly authenticationTypeVariable: pulumi.Output<string | undefined>;
    /**
     * The description of the feature template
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    declare public readonly deviceTypes: pulumi.Output<string[]>;
    /**
     * The name of the feature template
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * No Overwrite
     */
    declare public readonly noOverwrite: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly noOverwriteVariable: pulumi.Output<string | undefined>;
    /**
     * Set packet data network type
     *   - Choices: `ipv4`, `ipv4v6`, `ipv6`
     *   - Default value: `ipv4`
     */
    declare public readonly packetDataNetworkType: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly packetDataNetworkTypeVariable: pulumi.Output<string | undefined>;
    /**
     * Set Profile ID
     *   - Range: `1`-`16`
     */
    declare public readonly profileId: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly profileIdVariable: pulumi.Output<string | undefined>;
    /**
     * Set the profile password
     */
    declare public readonly profilePassword: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly profilePasswordVariable: pulumi.Output<string | undefined>;
    /**
     * Set the profile username
     */
    declare public readonly profileUsername: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly profileUsernameVariable: pulumi.Output<string | undefined>;
    /**
     * The template type
     */
    declare public /*out*/ readonly templateType: pulumi.Output<string>;
    /**
     * The version of the feature template
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;

    /**
     * Create a CellularCedgeProfileFeatureTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CellularCedgeProfileFeatureTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CellularCedgeProfileFeatureTemplateArgs | CellularCedgeProfileFeatureTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CellularCedgeProfileFeatureTemplateState | undefined;
            resourceInputs["accessPointName"] = state?.accessPointName;
            resourceInputs["accessPointNameVariable"] = state?.accessPointNameVariable;
            resourceInputs["authenticationType"] = state?.authenticationType;
            resourceInputs["authenticationTypeVariable"] = state?.authenticationTypeVariable;
            resourceInputs["description"] = state?.description;
            resourceInputs["deviceTypes"] = state?.deviceTypes;
            resourceInputs["name"] = state?.name;
            resourceInputs["noOverwrite"] = state?.noOverwrite;
            resourceInputs["noOverwriteVariable"] = state?.noOverwriteVariable;
            resourceInputs["packetDataNetworkType"] = state?.packetDataNetworkType;
            resourceInputs["packetDataNetworkTypeVariable"] = state?.packetDataNetworkTypeVariable;
            resourceInputs["profileId"] = state?.profileId;
            resourceInputs["profileIdVariable"] = state?.profileIdVariable;
            resourceInputs["profilePassword"] = state?.profilePassword;
            resourceInputs["profilePasswordVariable"] = state?.profilePasswordVariable;
            resourceInputs["profileUsername"] = state?.profileUsername;
            resourceInputs["profileUsernameVariable"] = state?.profileUsernameVariable;
            resourceInputs["templateType"] = state?.templateType;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as CellularCedgeProfileFeatureTemplateArgs | undefined;
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if (args?.deviceTypes === undefined && !opts.urn) {
                throw new Error("Missing required property 'deviceTypes'");
            }
            resourceInputs["accessPointName"] = args?.accessPointName;
            resourceInputs["accessPointNameVariable"] = args?.accessPointNameVariable;
            resourceInputs["authenticationType"] = args?.authenticationType;
            resourceInputs["authenticationTypeVariable"] = args?.authenticationTypeVariable;
            resourceInputs["description"] = args?.description;
            resourceInputs["deviceTypes"] = args?.deviceTypes;
            resourceInputs["name"] = args?.name;
            resourceInputs["noOverwrite"] = args?.noOverwrite;
            resourceInputs["noOverwriteVariable"] = args?.noOverwriteVariable;
            resourceInputs["packetDataNetworkType"] = args?.packetDataNetworkType;
            resourceInputs["packetDataNetworkTypeVariable"] = args?.packetDataNetworkTypeVariable;
            resourceInputs["profileId"] = args?.profileId;
            resourceInputs["profileIdVariable"] = args?.profileIdVariable;
            resourceInputs["profilePassword"] = args?.profilePassword;
            resourceInputs["profilePasswordVariable"] = args?.profilePasswordVariable;
            resourceInputs["profileUsername"] = args?.profileUsername;
            resourceInputs["profileUsernameVariable"] = args?.profileUsernameVariable;
            resourceInputs["templateType"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CellularCedgeProfileFeatureTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CellularCedgeProfileFeatureTemplate resources.
 */
export interface CellularCedgeProfileFeatureTemplateState {
    /**
     * Set access point name
     */
    accessPointName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    accessPointNameVariable?: pulumi.Input<string>;
    /**
     * Set authentication type
     *   - Choices: `none`, `pap`, `chap`, `papChap`
     *   - Default value: `none`
     */
    authenticationType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    authenticationTypeVariable?: pulumi.Input<string>;
    /**
     * The description of the feature template
     */
    description?: pulumi.Input<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * No Overwrite
     */
    noOverwrite?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    noOverwriteVariable?: pulumi.Input<string>;
    /**
     * Set packet data network type
     *   - Choices: `ipv4`, `ipv4v6`, `ipv6`
     *   - Default value: `ipv4`
     */
    packetDataNetworkType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    packetDataNetworkTypeVariable?: pulumi.Input<string>;
    /**
     * Set Profile ID
     *   - Range: `1`-`16`
     */
    profileId?: pulumi.Input<number>;
    /**
     * Variable name
     */
    profileIdVariable?: pulumi.Input<string>;
    /**
     * Set the profile password
     */
    profilePassword?: pulumi.Input<string>;
    /**
     * Variable name
     */
    profilePasswordVariable?: pulumi.Input<string>;
    /**
     * Set the profile username
     */
    profileUsername?: pulumi.Input<string>;
    /**
     * Variable name
     */
    profileUsernameVariable?: pulumi.Input<string>;
    /**
     * The template type
     */
    templateType?: pulumi.Input<string>;
    /**
     * The version of the feature template
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CellularCedgeProfileFeatureTemplate resource.
 */
export interface CellularCedgeProfileFeatureTemplateArgs {
    /**
     * Set access point name
     */
    accessPointName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    accessPointNameVariable?: pulumi.Input<string>;
    /**
     * Set authentication type
     *   - Choices: `none`, `pap`, `chap`, `papChap`
     *   - Default value: `none`
     */
    authenticationType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    authenticationTypeVariable?: pulumi.Input<string>;
    /**
     * The description of the feature template
     */
    description: pulumi.Input<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * No Overwrite
     */
    noOverwrite?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    noOverwriteVariable?: pulumi.Input<string>;
    /**
     * Set packet data network type
     *   - Choices: `ipv4`, `ipv4v6`, `ipv6`
     *   - Default value: `ipv4`
     */
    packetDataNetworkType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    packetDataNetworkTypeVariable?: pulumi.Input<string>;
    /**
     * Set Profile ID
     *   - Range: `1`-`16`
     */
    profileId?: pulumi.Input<number>;
    /**
     * Variable name
     */
    profileIdVariable?: pulumi.Input<string>;
    /**
     * Set the profile password
     */
    profilePassword?: pulumi.Input<string>;
    /**
     * Variable name
     */
    profilePasswordVariable?: pulumi.Input<string>;
    /**
     * Set the profile username
     */
    profileUsername?: pulumi.Input<string>;
    /**
     * Variable name
     */
    profileUsernameVariable?: pulumi.Input<string>;
}
