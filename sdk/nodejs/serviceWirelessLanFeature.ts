// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Service Wireless LAN Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Import
 *
 * Expected import identifier with the format: "service_wireless_lan_feature_id,feature_profile_id"
 *
 * ```sh
 * $ pulumi import sdwan:index/serviceWirelessLanFeature:ServiceWirelessLanFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
 * ```
 */
export class ServiceWirelessLanFeature extends pulumi.CustomResource {
    /**
     * Get an existing ServiceWirelessLanFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceWirelessLanFeatureState, opts?: pulumi.CustomResourceOptions): ServiceWirelessLanFeature {
        return new ServiceWirelessLanFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/serviceWirelessLanFeature:ServiceWirelessLanFeature';

    /**
     * Returns true if the given object is an instance of ServiceWirelessLanFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceWirelessLanFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceWirelessLanFeature.__pulumiType;
    }

    /**
     * Select country - Choices: `AE`, `AR`, `AT`, `AU`, `BA`, `BB`, `BE`, `BG`, `BH`, `BN`, `BO`, `BR`, `BY`, `CA`, `CA2`,
     * `CH`, `CL`, `CM`, `CN`, `CO`, `CR`, `CY`, `CZ`, `DE`, `DK`, `DO`, `DZ`, `EC`, `EE`, `EG`, `ES`, `FI`, `FJ`, `FR`, `GB`,
     * `GH`, `GI`, `GR`, `HK`, `HR`, `HU`, `ID`, `IE`, `IL`, `IO`, `IN`, `IQ`, `IS`, `IT`, `J2`, `J4`, `JM`, `JO`, `KE`, `KN`,
     * `KW`, `KZ`, `LB`, `LI`, `LK`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `ME`, `MK`, `MN`, `MO`, `MT`, `MX`, `MY`, `NL`, `NO`,
     * `NZ`, `OM`, `PA`, `PE`, `PH`, `PH2`, `PK`, `PL`, `PR`, `PT`, `PY`, `QA`, `RO`, `RS`, `RU`, `SA`, `SE`, `SG`, `SI`, `SK`,
     * `TH`, `TN`, `TR`, `TW`, `UA`, `US`, `UY`, `VE`, `VN`, `ZA`
     */
    public readonly country!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly countryVariable!: pulumi.Output<string | undefined>;
    /**
     * The description of the Feature
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * 2.4GHz Enabled - Default value: `true`
     */
    public readonly enable24g!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly enable24gVariable!: pulumi.Output<string | undefined>;
    /**
     * 5GHz Enabled - Default value: `true`
     */
    public readonly enable5g!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly enable5gVariable!: pulumi.Output<string | undefined>;
    /**
     * Feature Profile ID
     */
    public readonly featureProfileId!: pulumi.Output<string>;
    /**
     * Set mobile express default gateway
     */
    public readonly meDefaultGateway!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly meDefaultGatewayVariable!: pulumi.Output<string | undefined>;
    /**
     * ME management IP dynamic allocated by DHCP
     */
    public readonly meDynamicIpEnabled!: pulumi.Output<boolean>;
    /**
     * Set mobile express controller address
     */
    public readonly meIpv4Address!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly meIpv4AddressVariable!: pulumi.Output<string | undefined>;
    /**
     * Set mobile express controller subnet mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`,
     * `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`,
     * `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`,
     * `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`,
     * `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    public readonly meSubnetMask!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly meSubnetMaskVariable!: pulumi.Output<string | undefined>;
    /**
     * The name of the Feature
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Set management password,the password must contains characters from all of the following classes,lowercase
     * letters,uppercase letters,digits,and special characters. No character in the password can be repeated more than three
     * times consecutively. The password must not be the same as the associated username or the username reversed. The password
     * must not be cisco,ocsic,or any variant obtained by changing the capitalization of the letters in word cisco. In
     * addition,you can't substitute 1,l,or ! for i,0 for o,$ for s.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly passwordVariable!: pulumi.Output<string | undefined>;
    /**
     * Configure Wi-Fi SSID profile
     */
    public readonly ssids!: pulumi.Output<outputs.ServiceWirelessLanFeatureSsid[]>;
    /**
     * Set management username
     */
    public readonly username!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly usernameVariable!: pulumi.Output<string | undefined>;
    /**
     * The version of the Feature
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a ServiceWirelessLanFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceWirelessLanFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceWirelessLanFeatureArgs | ServiceWirelessLanFeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceWirelessLanFeatureState | undefined;
            resourceInputs["country"] = state ? state.country : undefined;
            resourceInputs["countryVariable"] = state ? state.countryVariable : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enable24g"] = state ? state.enable24g : undefined;
            resourceInputs["enable24gVariable"] = state ? state.enable24gVariable : undefined;
            resourceInputs["enable5g"] = state ? state.enable5g : undefined;
            resourceInputs["enable5gVariable"] = state ? state.enable5gVariable : undefined;
            resourceInputs["featureProfileId"] = state ? state.featureProfileId : undefined;
            resourceInputs["meDefaultGateway"] = state ? state.meDefaultGateway : undefined;
            resourceInputs["meDefaultGatewayVariable"] = state ? state.meDefaultGatewayVariable : undefined;
            resourceInputs["meDynamicIpEnabled"] = state ? state.meDynamicIpEnabled : undefined;
            resourceInputs["meIpv4Address"] = state ? state.meIpv4Address : undefined;
            resourceInputs["meIpv4AddressVariable"] = state ? state.meIpv4AddressVariable : undefined;
            resourceInputs["meSubnetMask"] = state ? state.meSubnetMask : undefined;
            resourceInputs["meSubnetMaskVariable"] = state ? state.meSubnetMaskVariable : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["passwordVariable"] = state ? state.passwordVariable : undefined;
            resourceInputs["ssids"] = state ? state.ssids : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["usernameVariable"] = state ? state.usernameVariable : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ServiceWirelessLanFeatureArgs | undefined;
            if ((!args || args.featureProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'featureProfileId'");
            }
            if ((!args || args.meDynamicIpEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'meDynamicIpEnabled'");
            }
            if ((!args || args.ssids === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ssids'");
            }
            resourceInputs["country"] = args ? args.country : undefined;
            resourceInputs["countryVariable"] = args ? args.countryVariable : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enable24g"] = args ? args.enable24g : undefined;
            resourceInputs["enable24gVariable"] = args ? args.enable24gVariable : undefined;
            resourceInputs["enable5g"] = args ? args.enable5g : undefined;
            resourceInputs["enable5gVariable"] = args ? args.enable5gVariable : undefined;
            resourceInputs["featureProfileId"] = args ? args.featureProfileId : undefined;
            resourceInputs["meDefaultGateway"] = args ? args.meDefaultGateway : undefined;
            resourceInputs["meDefaultGatewayVariable"] = args ? args.meDefaultGatewayVariable : undefined;
            resourceInputs["meDynamicIpEnabled"] = args ? args.meDynamicIpEnabled : undefined;
            resourceInputs["meIpv4Address"] = args ? args.meIpv4Address : undefined;
            resourceInputs["meIpv4AddressVariable"] = args ? args.meIpv4AddressVariable : undefined;
            resourceInputs["meSubnetMask"] = args ? args.meSubnetMask : undefined;
            resourceInputs["meSubnetMaskVariable"] = args ? args.meSubnetMaskVariable : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["passwordVariable"] = args ? args.passwordVariable : undefined;
            resourceInputs["ssids"] = args ? args.ssids : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["usernameVariable"] = args ? args.usernameVariable : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceWirelessLanFeature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceWirelessLanFeature resources.
 */
export interface ServiceWirelessLanFeatureState {
    /**
     * Select country - Choices: `AE`, `AR`, `AT`, `AU`, `BA`, `BB`, `BE`, `BG`, `BH`, `BN`, `BO`, `BR`, `BY`, `CA`, `CA2`,
     * `CH`, `CL`, `CM`, `CN`, `CO`, `CR`, `CY`, `CZ`, `DE`, `DK`, `DO`, `DZ`, `EC`, `EE`, `EG`, `ES`, `FI`, `FJ`, `FR`, `GB`,
     * `GH`, `GI`, `GR`, `HK`, `HR`, `HU`, `ID`, `IE`, `IL`, `IO`, `IN`, `IQ`, `IS`, `IT`, `J2`, `J4`, `JM`, `JO`, `KE`, `KN`,
     * `KW`, `KZ`, `LB`, `LI`, `LK`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `ME`, `MK`, `MN`, `MO`, `MT`, `MX`, `MY`, `NL`, `NO`,
     * `NZ`, `OM`, `PA`, `PE`, `PH`, `PH2`, `PK`, `PL`, `PR`, `PT`, `PY`, `QA`, `RO`, `RS`, `RU`, `SA`, `SE`, `SG`, `SI`, `SK`,
     * `TH`, `TN`, `TR`, `TW`, `UA`, `US`, `UY`, `VE`, `VN`, `ZA`
     */
    country?: pulumi.Input<string>;
    /**
     * Variable name
     */
    countryVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * 2.4GHz Enabled - Default value: `true`
     */
    enable24g?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    enable24gVariable?: pulumi.Input<string>;
    /**
     * 5GHz Enabled - Default value: `true`
     */
    enable5g?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    enable5gVariable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * Set mobile express default gateway
     */
    meDefaultGateway?: pulumi.Input<string>;
    /**
     * Variable name
     */
    meDefaultGatewayVariable?: pulumi.Input<string>;
    /**
     * ME management IP dynamic allocated by DHCP
     */
    meDynamicIpEnabled?: pulumi.Input<boolean>;
    /**
     * Set mobile express controller address
     */
    meIpv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    meIpv4AddressVariable?: pulumi.Input<string>;
    /**
     * Set mobile express controller subnet mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`,
     * `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`,
     * `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`,
     * `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`,
     * `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    meSubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    meSubnetMaskVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * Set management password,the password must contains characters from all of the following classes,lowercase
     * letters,uppercase letters,digits,and special characters. No character in the password can be repeated more than three
     * times consecutively. The password must not be the same as the associated username or the username reversed. The password
     * must not be cisco,ocsic,or any variant obtained by changing the capitalization of the letters in word cisco. In
     * addition,you can't substitute 1,l,or ! for i,0 for o,$ for s.
     */
    password?: pulumi.Input<string>;
    /**
     * Variable name
     */
    passwordVariable?: pulumi.Input<string>;
    /**
     * Configure Wi-Fi SSID profile
     */
    ssids?: pulumi.Input<pulumi.Input<inputs.ServiceWirelessLanFeatureSsid>[]>;
    /**
     * Set management username
     */
    username?: pulumi.Input<string>;
    /**
     * Variable name
     */
    usernameVariable?: pulumi.Input<string>;
    /**
     * The version of the Feature
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ServiceWirelessLanFeature resource.
 */
export interface ServiceWirelessLanFeatureArgs {
    /**
     * Select country - Choices: `AE`, `AR`, `AT`, `AU`, `BA`, `BB`, `BE`, `BG`, `BH`, `BN`, `BO`, `BR`, `BY`, `CA`, `CA2`,
     * `CH`, `CL`, `CM`, `CN`, `CO`, `CR`, `CY`, `CZ`, `DE`, `DK`, `DO`, `DZ`, `EC`, `EE`, `EG`, `ES`, `FI`, `FJ`, `FR`, `GB`,
     * `GH`, `GI`, `GR`, `HK`, `HR`, `HU`, `ID`, `IE`, `IL`, `IO`, `IN`, `IQ`, `IS`, `IT`, `J2`, `J4`, `JM`, `JO`, `KE`, `KN`,
     * `KW`, `KZ`, `LB`, `LI`, `LK`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `ME`, `MK`, `MN`, `MO`, `MT`, `MX`, `MY`, `NL`, `NO`,
     * `NZ`, `OM`, `PA`, `PE`, `PH`, `PH2`, `PK`, `PL`, `PR`, `PT`, `PY`, `QA`, `RO`, `RS`, `RU`, `SA`, `SE`, `SG`, `SI`, `SK`,
     * `TH`, `TN`, `TR`, `TW`, `UA`, `US`, `UY`, `VE`, `VN`, `ZA`
     */
    country?: pulumi.Input<string>;
    /**
     * Variable name
     */
    countryVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * 2.4GHz Enabled - Default value: `true`
     */
    enable24g?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    enable24gVariable?: pulumi.Input<string>;
    /**
     * 5GHz Enabled - Default value: `true`
     */
    enable5g?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    enable5gVariable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * Set mobile express default gateway
     */
    meDefaultGateway?: pulumi.Input<string>;
    /**
     * Variable name
     */
    meDefaultGatewayVariable?: pulumi.Input<string>;
    /**
     * ME management IP dynamic allocated by DHCP
     */
    meDynamicIpEnabled: pulumi.Input<boolean>;
    /**
     * Set mobile express controller address
     */
    meIpv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    meIpv4AddressVariable?: pulumi.Input<string>;
    /**
     * Set mobile express controller subnet mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`,
     * `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`,
     * `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`,
     * `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`,
     * `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    meSubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    meSubnetMaskVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * Set management password,the password must contains characters from all of the following classes,lowercase
     * letters,uppercase letters,digits,and special characters. No character in the password can be repeated more than three
     * times consecutively. The password must not be the same as the associated username or the username reversed. The password
     * must not be cisco,ocsic,or any variant obtained by changing the capitalization of the letters in word cisco. In
     * addition,you can't substitute 1,l,or ! for i,0 for o,$ for s.
     */
    password?: pulumi.Input<string>;
    /**
     * Variable name
     */
    passwordVariable?: pulumi.Input<string>;
    /**
     * Configure Wi-Fi SSID profile
     */
    ssids: pulumi.Input<pulumi.Input<inputs.ServiceWirelessLanFeatureSsid>[]>;
    /**
     * Set management username
     */
    username?: pulumi.Input<string>;
    /**
     * Variable name
     */
    usernameVariable?: pulumi.Input<string>;
}
