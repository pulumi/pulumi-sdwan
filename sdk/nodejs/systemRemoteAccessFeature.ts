// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource can manage a System Remote Access Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = new sdwan.SystemRemoteAccessFeature("example", {
 *     name: "Example",
 *     description: "My Example",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 *     connectionTypeSsl: false,
 *     anyConnectEapAuthenticationType: "user",
 *     ipv4PoolSize: 50,
 *     ipv6PoolSize: 1024,
 *     enableCertificateListCheck: false,
 *     pskAuthenticationType: "aaa",
 *     radiusGroupName: "radius-1",
 *     aaaDeriveNameFromPeerIdentity: "MyPassword",
 *     aaaEnableAccounting: false,
 *     ikev2LocalIkeIdentityType: "EMAIL",
 *     ikev2LocalIkeIdentityValue: "abc@xyz.com",
 *     ikev2SecurityAssociationLifetime: 86400,
 *     ikev2AntiDosThreshold: 99,
 *     ipsecEnableAntiReplay: false,
 *     ipsecSecurityAssociationLifetime: 3600,
 *     ipsecEnablePerfectFowardSecrecy: false,
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * Expected import identifier with the format: "system_remote_access_feature_id,feature_profile_id"
 *
 * ```sh
 * $ pulumi import sdwan:index/systemRemoteAccessFeature:SystemRemoteAccessFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
 * ```
 */
export class SystemRemoteAccessFeature extends pulumi.CustomResource {
    /**
     * Get an existing SystemRemoteAccessFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemRemoteAccessFeatureState, opts?: pulumi.CustomResourceOptions): SystemRemoteAccessFeature {
        return new SystemRemoteAccessFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/systemRemoteAccessFeature:SystemRemoteAccessFeature';

    /**
     * Returns true if the given object is an instance of SystemRemoteAccessFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemRemoteAccessFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemRemoteAccessFeature.__pulumiType;
    }

    /**
     * , Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    declare public readonly aaaDeriveNameFromPeerDomain: pulumi.Output<string | undefined>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    declare public readonly aaaDeriveNameFromPeerDomainVariable: pulumi.Output<string | undefined>;
    /**
     * , Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    declare public readonly aaaDeriveNameFromPeerIdentity: pulumi.Output<string | undefined>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    declare public readonly aaaDeriveNameFromPeerIdentityVariable: pulumi.Output<string | undefined>;
    /**
     * Enable Accounting
     *   - Default value: `true`
     */
    declare public readonly aaaEnableAccounting: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly aaaEnableAccountingVariable: pulumi.Output<string | undefined>;
    declare public readonly aaaSpecifyNamePolicyName: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly aaaSpecifyNamePolicyNameVariable: pulumi.Output<string | undefined>;
    declare public readonly aaaSpecifyNamePolicyPassword: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly aaaSpecifyNamePolicyPasswordVariable: pulumi.Output<string | undefined>;
    /**
     * , Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Choices: `user`, `device`
     */
    declare public readonly anyConnectEapAuthenticationType: pulumi.Output<string | undefined>;
    /**
     * Enabled SSL VPN
     *   - Default value: `false`
     */
    declare public readonly connectionTypeSsl: pulumi.Output<boolean | undefined>;
    /**
     * The description of the Feature
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * - Default value: `false`
     */
    declare public readonly enableCertificateListCheck: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly enableCertificateListCheckVariable: pulumi.Output<string | undefined>;
    /**
     * Feature Profile ID
     */
    declare public readonly featureProfileId: pulumi.Output<string>;
    /**
     * Anti-DOS Threshold, Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Range: `10`-`1000`
     *   - Default value: `100`
     */
    declare public readonly ikev2AntiDosThreshold: pulumi.Output<number | undefined>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    declare public readonly ikev2AntiDosThresholdVariable: pulumi.Output<string | undefined>;
    /**
     * , Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Choices: `EMAIL`, `FQDN`, `KEYID`, `IPv4 ADDRESS`, `IPv6 ADDRESS`
     */
    declare public readonly ikev2LocalIkeIdentityType: pulumi.Output<string | undefined>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    declare public readonly ikev2LocalIkeIdentityTypeVariable: pulumi.Output<string | undefined>;
    /**
     * , Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    declare public readonly ikev2LocalIkeIdentityValue: pulumi.Output<string | undefined>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    declare public readonly ikev2LocalIkeIdentityValueVariable: pulumi.Output<string | undefined>;
    /**
     * Security Association Lifetime in Seconds, Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Range: `3600`-`86400`
     *   - Default value: `86400`
     */
    declare public readonly ikev2SecurityAssociationLifetime: pulumi.Output<number | undefined>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    declare public readonly ikev2SecurityAssociationLifetimeVariable: pulumi.Output<string | undefined>;
    /**
     * security Association Lifetime, Attribute conditional on `ipsecEnableAntiReplay` being equal to `true`
     *   - Default value: `64`
     */
    declare public readonly ipsecAntiReplayWindowSize: pulumi.Output<number | undefined>;
    /**
     * Variable name, Attribute conditional on `ipsecEnableAntiReplay` being equal to `true`
     */
    declare public readonly ipsecAntiReplayWindowSizeVariable: pulumi.Output<string | undefined>;
    /**
     * Enable Anti-Replay, Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Default value: `true`
     */
    declare public readonly ipsecEnableAntiReplay: pulumi.Output<boolean | undefined>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    declare public readonly ipsecEnableAntiReplayVariable: pulumi.Output<string | undefined>;
    /**
     * security Association Lifetime, Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Default value: `false`
     */
    declare public readonly ipsecEnablePerfectFowardSecrecy: pulumi.Output<boolean | undefined>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    declare public readonly ipsecEnablePerfectFowardSecrecyVariable: pulumi.Output<string | undefined>;
    /**
     * Security Association Lifetime in Seconds, Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Range: `3600`-`86400`
     *   - Default value: `3600`
     */
    declare public readonly ipsecSecurityAssociationLifetime: pulumi.Output<number | undefined>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    declare public readonly ipsecSecurityAssociationLifetimeVariable: pulumi.Output<string | undefined>;
    /**
     * IPv4 Pool Size
     *   - Default value: `1000`
     */
    declare public readonly ipv4PoolSize: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipv4PoolSizeVariable: pulumi.Output<string | undefined>;
    /**
     * IPv6 Pool Size
     *   - Default value: `1024`
     */
    declare public readonly ipv6PoolSize: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipv6PoolSizeVariable: pulumi.Output<string | undefined>;
    /**
     * The name of the Feature
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * PSK Pre Shared Key, Attribute conditional on `pskAuthenticationType` being equal to `group`
     */
    declare public readonly pskAuthenticationPreSharedKey: pulumi.Output<string | undefined>;
    /**
     * Variable name, Attribute conditional on `pskAuthenticationType` being equal to `group`
     */
    declare public readonly pskAuthenticationPreSharedKeyVariable: pulumi.Output<string | undefined>;
    /**
     * PSK Selection, Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Choices: `aaa`, `group`
     */
    declare public readonly pskAuthenticationType: pulumi.Output<string | undefined>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    declare public readonly pskAuthenticationTypeVariable: pulumi.Output<string | undefined>;
    declare public readonly radiusGroupName: pulumi.Output<string>;
    /**
     * Variable name
     */
    declare public readonly radiusGroupNameVariable: pulumi.Output<string | undefined>;
    /**
     * The version of the Feature
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;

    /**
     * Create a SystemRemoteAccessFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemRemoteAccessFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemRemoteAccessFeatureArgs | SystemRemoteAccessFeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemRemoteAccessFeatureState | undefined;
            resourceInputs["aaaDeriveNameFromPeerDomain"] = state?.aaaDeriveNameFromPeerDomain;
            resourceInputs["aaaDeriveNameFromPeerDomainVariable"] = state?.aaaDeriveNameFromPeerDomainVariable;
            resourceInputs["aaaDeriveNameFromPeerIdentity"] = state?.aaaDeriveNameFromPeerIdentity;
            resourceInputs["aaaDeriveNameFromPeerIdentityVariable"] = state?.aaaDeriveNameFromPeerIdentityVariable;
            resourceInputs["aaaEnableAccounting"] = state?.aaaEnableAccounting;
            resourceInputs["aaaEnableAccountingVariable"] = state?.aaaEnableAccountingVariable;
            resourceInputs["aaaSpecifyNamePolicyName"] = state?.aaaSpecifyNamePolicyName;
            resourceInputs["aaaSpecifyNamePolicyNameVariable"] = state?.aaaSpecifyNamePolicyNameVariable;
            resourceInputs["aaaSpecifyNamePolicyPassword"] = state?.aaaSpecifyNamePolicyPassword;
            resourceInputs["aaaSpecifyNamePolicyPasswordVariable"] = state?.aaaSpecifyNamePolicyPasswordVariable;
            resourceInputs["anyConnectEapAuthenticationType"] = state?.anyConnectEapAuthenticationType;
            resourceInputs["connectionTypeSsl"] = state?.connectionTypeSsl;
            resourceInputs["description"] = state?.description;
            resourceInputs["enableCertificateListCheck"] = state?.enableCertificateListCheck;
            resourceInputs["enableCertificateListCheckVariable"] = state?.enableCertificateListCheckVariable;
            resourceInputs["featureProfileId"] = state?.featureProfileId;
            resourceInputs["ikev2AntiDosThreshold"] = state?.ikev2AntiDosThreshold;
            resourceInputs["ikev2AntiDosThresholdVariable"] = state?.ikev2AntiDosThresholdVariable;
            resourceInputs["ikev2LocalIkeIdentityType"] = state?.ikev2LocalIkeIdentityType;
            resourceInputs["ikev2LocalIkeIdentityTypeVariable"] = state?.ikev2LocalIkeIdentityTypeVariable;
            resourceInputs["ikev2LocalIkeIdentityValue"] = state?.ikev2LocalIkeIdentityValue;
            resourceInputs["ikev2LocalIkeIdentityValueVariable"] = state?.ikev2LocalIkeIdentityValueVariable;
            resourceInputs["ikev2SecurityAssociationLifetime"] = state?.ikev2SecurityAssociationLifetime;
            resourceInputs["ikev2SecurityAssociationLifetimeVariable"] = state?.ikev2SecurityAssociationLifetimeVariable;
            resourceInputs["ipsecAntiReplayWindowSize"] = state?.ipsecAntiReplayWindowSize;
            resourceInputs["ipsecAntiReplayWindowSizeVariable"] = state?.ipsecAntiReplayWindowSizeVariable;
            resourceInputs["ipsecEnableAntiReplay"] = state?.ipsecEnableAntiReplay;
            resourceInputs["ipsecEnableAntiReplayVariable"] = state?.ipsecEnableAntiReplayVariable;
            resourceInputs["ipsecEnablePerfectFowardSecrecy"] = state?.ipsecEnablePerfectFowardSecrecy;
            resourceInputs["ipsecEnablePerfectFowardSecrecyVariable"] = state?.ipsecEnablePerfectFowardSecrecyVariable;
            resourceInputs["ipsecSecurityAssociationLifetime"] = state?.ipsecSecurityAssociationLifetime;
            resourceInputs["ipsecSecurityAssociationLifetimeVariable"] = state?.ipsecSecurityAssociationLifetimeVariable;
            resourceInputs["ipv4PoolSize"] = state?.ipv4PoolSize;
            resourceInputs["ipv4PoolSizeVariable"] = state?.ipv4PoolSizeVariable;
            resourceInputs["ipv6PoolSize"] = state?.ipv6PoolSize;
            resourceInputs["ipv6PoolSizeVariable"] = state?.ipv6PoolSizeVariable;
            resourceInputs["name"] = state?.name;
            resourceInputs["pskAuthenticationPreSharedKey"] = state?.pskAuthenticationPreSharedKey;
            resourceInputs["pskAuthenticationPreSharedKeyVariable"] = state?.pskAuthenticationPreSharedKeyVariable;
            resourceInputs["pskAuthenticationType"] = state?.pskAuthenticationType;
            resourceInputs["pskAuthenticationTypeVariable"] = state?.pskAuthenticationTypeVariable;
            resourceInputs["radiusGroupName"] = state?.radiusGroupName;
            resourceInputs["radiusGroupNameVariable"] = state?.radiusGroupNameVariable;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as SystemRemoteAccessFeatureArgs | undefined;
            if (args?.featureProfileId === undefined && !opts.urn) {
                throw new Error("Missing required property 'featureProfileId'");
            }
            if (args?.radiusGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'radiusGroupName'");
            }
            resourceInputs["aaaDeriveNameFromPeerDomain"] = args?.aaaDeriveNameFromPeerDomain;
            resourceInputs["aaaDeriveNameFromPeerDomainVariable"] = args?.aaaDeriveNameFromPeerDomainVariable;
            resourceInputs["aaaDeriveNameFromPeerIdentity"] = args?.aaaDeriveNameFromPeerIdentity;
            resourceInputs["aaaDeriveNameFromPeerIdentityVariable"] = args?.aaaDeriveNameFromPeerIdentityVariable;
            resourceInputs["aaaEnableAccounting"] = args?.aaaEnableAccounting;
            resourceInputs["aaaEnableAccountingVariable"] = args?.aaaEnableAccountingVariable;
            resourceInputs["aaaSpecifyNamePolicyName"] = args?.aaaSpecifyNamePolicyName;
            resourceInputs["aaaSpecifyNamePolicyNameVariable"] = args?.aaaSpecifyNamePolicyNameVariable;
            resourceInputs["aaaSpecifyNamePolicyPassword"] = args?.aaaSpecifyNamePolicyPassword;
            resourceInputs["aaaSpecifyNamePolicyPasswordVariable"] = args?.aaaSpecifyNamePolicyPasswordVariable;
            resourceInputs["anyConnectEapAuthenticationType"] = args?.anyConnectEapAuthenticationType;
            resourceInputs["connectionTypeSsl"] = args?.connectionTypeSsl;
            resourceInputs["description"] = args?.description;
            resourceInputs["enableCertificateListCheck"] = args?.enableCertificateListCheck;
            resourceInputs["enableCertificateListCheckVariable"] = args?.enableCertificateListCheckVariable;
            resourceInputs["featureProfileId"] = args?.featureProfileId;
            resourceInputs["ikev2AntiDosThreshold"] = args?.ikev2AntiDosThreshold;
            resourceInputs["ikev2AntiDosThresholdVariable"] = args?.ikev2AntiDosThresholdVariable;
            resourceInputs["ikev2LocalIkeIdentityType"] = args?.ikev2LocalIkeIdentityType;
            resourceInputs["ikev2LocalIkeIdentityTypeVariable"] = args?.ikev2LocalIkeIdentityTypeVariable;
            resourceInputs["ikev2LocalIkeIdentityValue"] = args?.ikev2LocalIkeIdentityValue;
            resourceInputs["ikev2LocalIkeIdentityValueVariable"] = args?.ikev2LocalIkeIdentityValueVariable;
            resourceInputs["ikev2SecurityAssociationLifetime"] = args?.ikev2SecurityAssociationLifetime;
            resourceInputs["ikev2SecurityAssociationLifetimeVariable"] = args?.ikev2SecurityAssociationLifetimeVariable;
            resourceInputs["ipsecAntiReplayWindowSize"] = args?.ipsecAntiReplayWindowSize;
            resourceInputs["ipsecAntiReplayWindowSizeVariable"] = args?.ipsecAntiReplayWindowSizeVariable;
            resourceInputs["ipsecEnableAntiReplay"] = args?.ipsecEnableAntiReplay;
            resourceInputs["ipsecEnableAntiReplayVariable"] = args?.ipsecEnableAntiReplayVariable;
            resourceInputs["ipsecEnablePerfectFowardSecrecy"] = args?.ipsecEnablePerfectFowardSecrecy;
            resourceInputs["ipsecEnablePerfectFowardSecrecyVariable"] = args?.ipsecEnablePerfectFowardSecrecyVariable;
            resourceInputs["ipsecSecurityAssociationLifetime"] = args?.ipsecSecurityAssociationLifetime;
            resourceInputs["ipsecSecurityAssociationLifetimeVariable"] = args?.ipsecSecurityAssociationLifetimeVariable;
            resourceInputs["ipv4PoolSize"] = args?.ipv4PoolSize;
            resourceInputs["ipv4PoolSizeVariable"] = args?.ipv4PoolSizeVariable;
            resourceInputs["ipv6PoolSize"] = args?.ipv6PoolSize;
            resourceInputs["ipv6PoolSizeVariable"] = args?.ipv6PoolSizeVariable;
            resourceInputs["name"] = args?.name;
            resourceInputs["pskAuthenticationPreSharedKey"] = args?.pskAuthenticationPreSharedKey;
            resourceInputs["pskAuthenticationPreSharedKeyVariable"] = args?.pskAuthenticationPreSharedKeyVariable;
            resourceInputs["pskAuthenticationType"] = args?.pskAuthenticationType;
            resourceInputs["pskAuthenticationTypeVariable"] = args?.pskAuthenticationTypeVariable;
            resourceInputs["radiusGroupName"] = args?.radiusGroupName;
            resourceInputs["radiusGroupNameVariable"] = args?.radiusGroupNameVariable;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemRemoteAccessFeature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemRemoteAccessFeature resources.
 */
export interface SystemRemoteAccessFeatureState {
    /**
     * , Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    aaaDeriveNameFromPeerDomain?: pulumi.Input<string>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    aaaDeriveNameFromPeerDomainVariable?: pulumi.Input<string>;
    /**
     * , Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    aaaDeriveNameFromPeerIdentity?: pulumi.Input<string>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    aaaDeriveNameFromPeerIdentityVariable?: pulumi.Input<string>;
    /**
     * Enable Accounting
     *   - Default value: `true`
     */
    aaaEnableAccounting?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    aaaEnableAccountingVariable?: pulumi.Input<string>;
    aaaSpecifyNamePolicyName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    aaaSpecifyNamePolicyNameVariable?: pulumi.Input<string>;
    aaaSpecifyNamePolicyPassword?: pulumi.Input<string>;
    /**
     * Variable name
     */
    aaaSpecifyNamePolicyPasswordVariable?: pulumi.Input<string>;
    /**
     * , Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Choices: `user`, `device`
     */
    anyConnectEapAuthenticationType?: pulumi.Input<string>;
    /**
     * Enabled SSL VPN
     *   - Default value: `false`
     */
    connectionTypeSsl?: pulumi.Input<boolean>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * - Default value: `false`
     */
    enableCertificateListCheck?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    enableCertificateListCheckVariable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * Anti-DOS Threshold, Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Range: `10`-`1000`
     *   - Default value: `100`
     */
    ikev2AntiDosThreshold?: pulumi.Input<number>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    ikev2AntiDosThresholdVariable?: pulumi.Input<string>;
    /**
     * , Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Choices: `EMAIL`, `FQDN`, `KEYID`, `IPv4 ADDRESS`, `IPv6 ADDRESS`
     */
    ikev2LocalIkeIdentityType?: pulumi.Input<string>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    ikev2LocalIkeIdentityTypeVariable?: pulumi.Input<string>;
    /**
     * , Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    ikev2LocalIkeIdentityValue?: pulumi.Input<string>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    ikev2LocalIkeIdentityValueVariable?: pulumi.Input<string>;
    /**
     * Security Association Lifetime in Seconds, Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Range: `3600`-`86400`
     *   - Default value: `86400`
     */
    ikev2SecurityAssociationLifetime?: pulumi.Input<number>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    ikev2SecurityAssociationLifetimeVariable?: pulumi.Input<string>;
    /**
     * security Association Lifetime, Attribute conditional on `ipsecEnableAntiReplay` being equal to `true`
     *   - Default value: `64`
     */
    ipsecAntiReplayWindowSize?: pulumi.Input<number>;
    /**
     * Variable name, Attribute conditional on `ipsecEnableAntiReplay` being equal to `true`
     */
    ipsecAntiReplayWindowSizeVariable?: pulumi.Input<string>;
    /**
     * Enable Anti-Replay, Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Default value: `true`
     */
    ipsecEnableAntiReplay?: pulumi.Input<boolean>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    ipsecEnableAntiReplayVariable?: pulumi.Input<string>;
    /**
     * security Association Lifetime, Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Default value: `false`
     */
    ipsecEnablePerfectFowardSecrecy?: pulumi.Input<boolean>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    ipsecEnablePerfectFowardSecrecyVariable?: pulumi.Input<string>;
    /**
     * Security Association Lifetime in Seconds, Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Range: `3600`-`86400`
     *   - Default value: `3600`
     */
    ipsecSecurityAssociationLifetime?: pulumi.Input<number>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    ipsecSecurityAssociationLifetimeVariable?: pulumi.Input<string>;
    /**
     * IPv4 Pool Size
     *   - Default value: `1000`
     */
    ipv4PoolSize?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipv4PoolSizeVariable?: pulumi.Input<string>;
    /**
     * IPv6 Pool Size
     *   - Default value: `1024`
     */
    ipv6PoolSize?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipv6PoolSizeVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * PSK Pre Shared Key, Attribute conditional on `pskAuthenticationType` being equal to `group`
     */
    pskAuthenticationPreSharedKey?: pulumi.Input<string>;
    /**
     * Variable name, Attribute conditional on `pskAuthenticationType` being equal to `group`
     */
    pskAuthenticationPreSharedKeyVariable?: pulumi.Input<string>;
    /**
     * PSK Selection, Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Choices: `aaa`, `group`
     */
    pskAuthenticationType?: pulumi.Input<string>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    pskAuthenticationTypeVariable?: pulumi.Input<string>;
    radiusGroupName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    radiusGroupNameVariable?: pulumi.Input<string>;
    /**
     * The version of the Feature
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SystemRemoteAccessFeature resource.
 */
export interface SystemRemoteAccessFeatureArgs {
    /**
     * , Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    aaaDeriveNameFromPeerDomain?: pulumi.Input<string>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    aaaDeriveNameFromPeerDomainVariable?: pulumi.Input<string>;
    /**
     * , Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    aaaDeriveNameFromPeerIdentity?: pulumi.Input<string>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    aaaDeriveNameFromPeerIdentityVariable?: pulumi.Input<string>;
    /**
     * Enable Accounting
     *   - Default value: `true`
     */
    aaaEnableAccounting?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    aaaEnableAccountingVariable?: pulumi.Input<string>;
    aaaSpecifyNamePolicyName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    aaaSpecifyNamePolicyNameVariable?: pulumi.Input<string>;
    aaaSpecifyNamePolicyPassword?: pulumi.Input<string>;
    /**
     * Variable name
     */
    aaaSpecifyNamePolicyPasswordVariable?: pulumi.Input<string>;
    /**
     * , Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Choices: `user`, `device`
     */
    anyConnectEapAuthenticationType?: pulumi.Input<string>;
    /**
     * Enabled SSL VPN
     *   - Default value: `false`
     */
    connectionTypeSsl?: pulumi.Input<boolean>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * - Default value: `false`
     */
    enableCertificateListCheck?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    enableCertificateListCheckVariable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * Anti-DOS Threshold, Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Range: `10`-`1000`
     *   - Default value: `100`
     */
    ikev2AntiDosThreshold?: pulumi.Input<number>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    ikev2AntiDosThresholdVariable?: pulumi.Input<string>;
    /**
     * , Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Choices: `EMAIL`, `FQDN`, `KEYID`, `IPv4 ADDRESS`, `IPv6 ADDRESS`
     */
    ikev2LocalIkeIdentityType?: pulumi.Input<string>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    ikev2LocalIkeIdentityTypeVariable?: pulumi.Input<string>;
    /**
     * , Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    ikev2LocalIkeIdentityValue?: pulumi.Input<string>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    ikev2LocalIkeIdentityValueVariable?: pulumi.Input<string>;
    /**
     * Security Association Lifetime in Seconds, Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Range: `3600`-`86400`
     *   - Default value: `86400`
     */
    ikev2SecurityAssociationLifetime?: pulumi.Input<number>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    ikev2SecurityAssociationLifetimeVariable?: pulumi.Input<string>;
    /**
     * security Association Lifetime, Attribute conditional on `ipsecEnableAntiReplay` being equal to `true`
     *   - Default value: `64`
     */
    ipsecAntiReplayWindowSize?: pulumi.Input<number>;
    /**
     * Variable name, Attribute conditional on `ipsecEnableAntiReplay` being equal to `true`
     */
    ipsecAntiReplayWindowSizeVariable?: pulumi.Input<string>;
    /**
     * Enable Anti-Replay, Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Default value: `true`
     */
    ipsecEnableAntiReplay?: pulumi.Input<boolean>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    ipsecEnableAntiReplayVariable?: pulumi.Input<string>;
    /**
     * security Association Lifetime, Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Default value: `false`
     */
    ipsecEnablePerfectFowardSecrecy?: pulumi.Input<boolean>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    ipsecEnablePerfectFowardSecrecyVariable?: pulumi.Input<string>;
    /**
     * Security Association Lifetime in Seconds, Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Range: `3600`-`86400`
     *   - Default value: `3600`
     */
    ipsecSecurityAssociationLifetime?: pulumi.Input<number>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    ipsecSecurityAssociationLifetimeVariable?: pulumi.Input<string>;
    /**
     * IPv4 Pool Size
     *   - Default value: `1000`
     */
    ipv4PoolSize?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipv4PoolSizeVariable?: pulumi.Input<string>;
    /**
     * IPv6 Pool Size
     *   - Default value: `1024`
     */
    ipv6PoolSize?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipv6PoolSizeVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * PSK Pre Shared Key, Attribute conditional on `pskAuthenticationType` being equal to `group`
     */
    pskAuthenticationPreSharedKey?: pulumi.Input<string>;
    /**
     * Variable name, Attribute conditional on `pskAuthenticationType` being equal to `group`
     */
    pskAuthenticationPreSharedKeyVariable?: pulumi.Input<string>;
    /**
     * PSK Selection, Attribute conditional on `connectionTypeSsl` being equal to `false`
     *   - Choices: `aaa`, `group`
     */
    pskAuthenticationType?: pulumi.Input<string>;
    /**
     * Variable name, Attribute conditional on `connectionTypeSsl` being equal to `false`
     */
    pskAuthenticationTypeVariable?: pulumi.Input<string>;
    radiusGroupName: pulumi.Input<string>;
    /**
     * Variable name
     */
    radiusGroupNameVariable?: pulumi.Input<string>;
}
