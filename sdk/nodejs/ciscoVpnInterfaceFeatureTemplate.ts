// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Cisco VPN Interface feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import sdwan:index/ciscoVpnInterfaceFeatureTemplate:CiscoVpnInterfaceFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class CiscoVpnInterfaceFeatureTemplate extends pulumi.CustomResource {
    /**
     * Get an existing CiscoVpnInterfaceFeatureTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CiscoVpnInterfaceFeatureTemplateState, opts?: pulumi.CustomResourceOptions): CiscoVpnInterfaceFeatureTemplate {
        return new CiscoVpnInterfaceFeatureTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/ciscoVpnInterfaceFeatureTemplate:CiscoVpnInterfaceFeatureTemplate';

    /**
     * Returns true if the given object is an instance of CiscoVpnInterfaceFeatureTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CiscoVpnInterfaceFeatureTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CiscoVpnInterfaceFeatureTemplate.__pulumiType;
    }

    /**
     * Apply ACL
     */
    public readonly accessLists!: pulumi.Output<outputs.CiscoVpnInterfaceFeatureTemplateAccessList[] | undefined>;
    /**
     * Assign IPv4 address
     */
    public readonly address!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly addressVariable!: pulumi.Output<string | undefined>;
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
     */
    public readonly arpTimeout!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly arpTimeoutVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface auto detect bandwidth - Default value: `false`
     */
    public readonly autoBandwidthDetect!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly autoBandwidthDetectVariable!: pulumi.Output<string | undefined>;
    /**
     * Link autonegotiation
     */
    public readonly autonegotiate!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly autonegotiateVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     */
    public readonly bandwidthDownstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly bandwidthDownstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     */
    public readonly bandwidthUpstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly bandwidthUpstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Block packets originating from IP address that is not from this source - Default value: `false`
     */
    public readonly blockNonSourceIp!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly blockNonSourceIpVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable core region - Choices: `core`, `core-shared` - Default value: `core`
     */
    public readonly coreRegion!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly coreRegionVariable!: pulumi.Output<string | undefined>;
    /**
     * The description of the feature template
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    public readonly deviceTypes!: pulumi.Output<string[]>;
    /**
     * Enable DHCP - Default value: `false`
     */
    public readonly dhcp!: pulumi.Output<boolean | undefined>;
    /**
     * Set administrative distance for DHCP default route - Range: `1`-`65536` - Default value: `1`
     */
    public readonly dhcpDistance!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly dhcpDistanceVariable!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly dhcpVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable DHCPv6 - Default value: `false`
     */
    public readonly dhcpv6!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly dhcpv6Variable!: pulumi.Output<string | undefined>;
    /**
     * Duplex mode - Choices: `full`, `half`, `auto`
     */
    public readonly duplex!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly duplexVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable core region - Default value: `false`
     */
    public readonly enableCoreRegion!: pulumi.Output<boolean | undefined>;
    /**
     * Enables the interface for CTS SGT authorization and forwarding. - Default value: `false`
     */
    public readonly enableSgt!: pulumi.Output<boolean | undefined>;
    /**
     * Extend remote TLOC over a GRE tunnel to a local WAN interface
     */
    public readonly greTunnelSourceIp!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly greTunnelSourceIpVariable!: pulumi.Output<string | undefined>;
    /**
     * Extend remote TLOC over a GRE tunnel to a local WAN interface
     */
    public readonly greTunnelXconnect!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly greTunnelXconnectVariable!: pulumi.Output<string | undefined>;
    /**
     * Set this option to disable the icmp/icmpv6 redirect packets - Default value: `true`
     */
    public readonly icmpRedirectDisable!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly icmpRedirectDisableVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface description
     */
    public readonly interfaceDescription!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly interfaceDescriptionVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
     * Default value: `1500`
     */
    public readonly interfaceMtu!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly interfaceMtuVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface name: ge0/<0-..> or ge0/<0-..>.vlanid or irb<bridgeid:1-63> or loopback<string> or natpool-<1..31> when
     * present
     */
    public readonly interfaceName!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly interfaceNameVariable!: pulumi.Output<string | undefined>;
    /**
     * IP Directed-Broadcast - Default value: `false`
     */
    public readonly ipDirectedBroadcast!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly ipDirectedBroadcastVariable!: pulumi.Output<string | undefined>;
    /**
     * IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
     * <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
     */
    public readonly ipMtu!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly ipMtuVariable!: pulumi.Output<string | undefined>;
    /**
     * Iperf server for auto bandwidth detect
     */
    public readonly iperfServer!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly iperfServerVariable!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipv4DhcpHelperVariable!: pulumi.Output<string | undefined>;
    /**
     * List of DHCP IPv4 helper addresses
     */
    public readonly ipv4DhcpHelpers!: pulumi.Output<string[] | undefined>;
    /**
     * Assign secondary IP addresses
     */
    public readonly ipv4SecondaryAddresses!: pulumi.Output<outputs.CiscoVpnInterfaceFeatureTemplateIpv4SecondaryAddress[] | undefined>;
    /**
     * Enable VRRP
     */
    public readonly ipv4Vrrps!: pulumi.Output<outputs.CiscoVpnInterfaceFeatureTemplateIpv4Vrrp[] | undefined>;
    /**
     * Apply IPv6 access list
     */
    public readonly ipv6AccessLists!: pulumi.Output<outputs.CiscoVpnInterfaceFeatureTemplateIpv6AccessList[] | undefined>;
    /**
     * Assign IPv6 address
     */
    public readonly ipv6Address!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipv6AddressVariable!: pulumi.Output<string | undefined>;
    /**
     * DHCPv6 Helper
     */
    public readonly ipv6DhcpHelpers!: pulumi.Output<outputs.CiscoVpnInterfaceFeatureTemplateIpv6DhcpHelper[] | undefined>;
    /**
     * NAT64 on this interface - Default value: `false`
     */
    public readonly ipv6Nat!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly ipv6NatVariable!: pulumi.Output<string | undefined>;
    /**
     * Assign secondary IPv6 addresses
     */
    public readonly ipv6SecondaryAddresses!: pulumi.Output<outputs.CiscoVpnInterfaceFeatureTemplateIpv6SecondaryAddress[] | undefined>;
    /**
     * Enable VRRP
     */
    public readonly ipv6Vrrps!: pulumi.Output<outputs.CiscoVpnInterfaceFeatureTemplateIpv6Vrrp[] | undefined>;
    /**
     * Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
     */
    public readonly loadInterval!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly loadIntervalVariable!: pulumi.Output<string | undefined>;
    /**
     * Set MAC-layer address
     */
    public readonly macAddress!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly macAddressVariable!: pulumi.Output<string | undefined>;
    /**
     * Media type - Choices: `auto-select`, `rj45`, `sfp`
     */
    public readonly mediaType!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly mediaTypeVariable!: pulumi.Output<string | undefined>;
    /**
     * The name of the feature template
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Network Address Translation on this interface - Default value: `false`
     */
    public readonly nat!: pulumi.Output<boolean | undefined>;
    /**
     * NAT64 on this interface - Default value: `false`
     */
    public readonly nat64Interface!: pulumi.Output<boolean | undefined>;
    /**
     * NAT66 on this interface - Default value: `false`
     */
    public readonly nat66Interface!: pulumi.Output<boolean | undefined>;
    /**
     * Configure NAT Inside Loopback Interface
     */
    public readonly natInsideSourceLoopbackInterface!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly natInsideSourceLoopbackInterfaceVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable port translation(PAT) - Default value: `true`
     */
    public readonly natOverload!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly natOverloadVariable!: pulumi.Output<string | undefined>;
    /**
     * Ending IP address of NAT Pool Prefix Length
     */
    public readonly natPoolPrefixLength!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly natPoolPrefixLengthVariable!: pulumi.Output<string | undefined>;
    /**
     * Ending IP address of NAT pool range
     */
    public readonly natPoolRangeEnd!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly natPoolRangeEndVariable!: pulumi.Output<string | undefined>;
    /**
     * Starting IP address of NAT pool range
     */
    public readonly natPoolRangeStart!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly natPoolRangeStartVariable!: pulumi.Output<string | undefined>;
    /**
     * NAT type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
     */
    public readonly natType!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly natTypeVariable!: pulumi.Output<string | undefined>;
    /**
     * Configure interface as Power-over-Ethernet source - Default value: `false`
     */
    public readonly poe!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly poeVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable/Disable CTS SGT propagation on an interface. - Default value: `true`
     */
    public readonly propagateSgt!: pulumi.Output<boolean | undefined>;
    /**
     * Adaptive QoS default downstream bandwidth - Range: `8`-`100000000`
     */
    public readonly qosAdaptiveBandwidthDownstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptiveBandwidthDownstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Adaptive QoS default upstream bandwidth - Range: `8`-`100000000`
     */
    public readonly qosAdaptiveBandwidthUpstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptiveBandwidthUpstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Downstream max bandwidth limit - Range: `8`-`100000000`
     */
    public readonly qosAdaptiveMaxDownstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptiveMaxDownstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Upstream max bandwidth limit - Range: `8`-`100000000`
     */
    public readonly qosAdaptiveMaxUpstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptiveMaxUpstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Downstream min bandwidth limit - Range: `8`-`100000000`
     */
    public readonly qosAdaptiveMinDownstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptiveMinDownstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Upstream min bandwidth limit - Range: `8`-`100000000`
     */
    public readonly qosAdaptiveMinUpstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptiveMinUpstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Periodic timer for adaptive QoS in minutes - Range: `1`-`720` - Default value: `15`
     */
    public readonly qosAdaptivePeriod!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptivePeriodVariable!: pulumi.Output<string | undefined>;
    /**
     * Name of QoS map
     */
    public readonly qosMap!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly qosMapVariable!: pulumi.Output<string | undefined>;
    /**
     * Name of VPN QoS map
     */
    public readonly qosMapVpn!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly qosMapVpnVariable!: pulumi.Output<string | undefined>;
    /**
     * Name of rewrite rule
     */
    public readonly rewriteRuleName!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly rewriteRuleNameVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable secondary region - Choices: `off`, `secondary-only`, `secondary-shared` - Default value: `off`
     */
    public readonly secondaryRegion!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly secondaryRegionVariable!: pulumi.Output<string | undefined>;
    /**
     * Enables the interface for CTS SGT authorization and forwarding. - Default value: `false`
     */
    public readonly sgtEnforcement!: pulumi.Output<boolean | undefined>;
    /**
     * SGT value between 2 and 65519. - Range: `2`-`65519`
     */
    public readonly sgtEnforcementSgt!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly sgtEnforcementSgtVariable!: pulumi.Output<string | undefined>;
    /**
     * 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
     */
    public readonly shapingRate!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly shapingRateVariable!: pulumi.Output<string | undefined>;
    /**
     * Administrative state - Default value: `true`
     */
    public readonly shutdown!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly shutdownVariable!: pulumi.Output<string | undefined>;
    /**
     * Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
     */
    public readonly speed!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly speedVariable!: pulumi.Output<string | undefined>;
    /**
     * Configure static ARP entries
     */
    public readonly staticArps!: pulumi.Output<outputs.CiscoVpnInterfaceFeatureTemplateStaticArp[] | undefined>;
    /**
     * static NAT
     */
    public readonly staticNat66Entries!: pulumi.Output<outputs.CiscoVpnInterfaceFeatureTemplateStaticNat66Entry[] | undefined>;
    /**
     * Configure static NAT entries
     */
    public readonly staticNatEntries!: pulumi.Output<outputs.CiscoVpnInterfaceFeatureTemplateStaticNatEntry[] | undefined>;
    /**
     * Configure Port Forward entries
     */
    public readonly staticPortForwardEntries!: pulumi.Output<outputs.CiscoVpnInterfaceFeatureTemplateStaticPortForwardEntry[] | undefined>;
    /**
     * SGT value between 2 and 65519. - Range: `2`-`65519`
     */
    public readonly staticSgt!: pulumi.Output<number | undefined>;
    /**
     * Indicates that the interface is trustworthy for CTS. - Default value: `false`
     */
    public readonly staticSgtTrusted!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly staticSgtVariable!: pulumi.Output<string | undefined>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    public readonly tcpMssAdjust!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tcpMssAdjustVariable!: pulumi.Output<string | undefined>;
    /**
     * Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
     */
    public readonly tcpTimeout!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tcpTimeoutVariable!: pulumi.Output<string | undefined>;
    /**
     * The template type
     */
    public /*out*/ readonly templateType!: pulumi.Output<string>;
    /**
     * Extends a local TLOC to a remote node only for vpn 0
     */
    public readonly tlocExtension!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tlocExtensionVariable!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly trackerVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable tracker for this interface
     */
    public readonly trackers!: pulumi.Output<string[] | undefined>;
    /**
     * Tunnels Bandwidth Percent - Range: `1`-`99` - Default value: `50`
     */
    public readonly tunnelBandwidth!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelBandwidthVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
     */
    public readonly tunnelInterfaceAllowAll!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowAllVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/deny BGP - Default value: `false`
     */
    public readonly tunnelInterfaceAllowBgp!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowBgpVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny DHCP - Default value: `true`
     */
    public readonly tunnelInterfaceAllowDhcp!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowDhcpVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny DNS - Default value: `true`
     */
    public readonly tunnelInterfaceAllowDns!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowDnsVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny Https - Default value: `true`
     */
    public readonly tunnelInterfaceAllowHttps!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowHttpsVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny ICMP - Default value: `true`
     */
    public readonly tunnelInterfaceAllowIcmp!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowIcmpVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny NETCONF - Default value: `false`
     */
    public readonly tunnelInterfaceAllowNetconf!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowNetconfVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny NTP - Default value: `false`
     */
    public readonly tunnelInterfaceAllowNtp!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowNtpVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny OSPF - Default value: `false`
     */
    public readonly tunnelInterfaceAllowOspf!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowOspfVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny SNMP - Default value: `false`
     */
    public readonly tunnelInterfaceAllowSnmp!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowSnmpVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny SSH - Default value: `false`
     */
    public readonly tunnelInterfaceAllowSsh!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowSshVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny STUN - Default value: `false`
     */
    public readonly tunnelInterfaceAllowStun!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowStunVariable!: pulumi.Output<string | undefined>;
    /**
     * Bind loopback tunnel interface to a physical interface
     */
    public readonly tunnelInterfaceBindLoopbackTunnel!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceBindLoopbackTunnelVariable!: pulumi.Output<string | undefined>;
    /**
     * Set TLOC as border TLOC - Default value: `false`
     */
    public readonly tunnelInterfaceBorder!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceBorderVariable!: pulumi.Output<string | undefined>;
    /**
     * Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
     * `carrier7`, `carrier8` - Default value: `default`
     */
    public readonly tunnelInterfaceCarrier!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceCarrierVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     */
    public readonly tunnelInterfaceClearDontFragment!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceClearDontFragmentVariable!: pulumi.Output<string | undefined>;
    /**
     * Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
     * `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
     * `private4`, `private5`, `private6` - Default value: `default`
     */
    public readonly tunnelInterfaceColor!: pulumi.Output<string | undefined>;
    /**
     * Restrict this TLOC behavior - Default value: `false`
     */
    public readonly tunnelInterfaceColorRestrict!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceColorRestrictVariable!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceColorVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow Control Connection - Default value: `true`
     */
    public readonly tunnelInterfaceControlConnections!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceControlConnectionsVariable!: pulumi.Output<string | undefined>;
    /**
     * Encapsulation for TLOC
     */
    public readonly tunnelInterfaceEncapsulations!: pulumi.Output<outputs.CiscoVpnInterfaceFeatureTemplateTunnelInterfaceEncapsulation[] | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceExcludeControllerGroupListVariable!: pulumi.Output<string | undefined>;
    /**
     * Exclude the following controller groups defined in this list
     */
    public readonly tunnelInterfaceExcludeControllerGroupLists!: pulumi.Output<number[] | undefined>;
    /**
     * Extend the TLOC to a remote node over GRE tunnel
     */
    public readonly tunnelInterfaceGreTunnelDestinationIp!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceGreTunnelDestinationIpVariable!: pulumi.Output<string | undefined>;
    /**
     * List of groups
     */
    public readonly tunnelInterfaceGroups!: pulumi.Output<number[] | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceGroupsVariable!: pulumi.Output<string | undefined>;
    /**
     * Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
     */
    public readonly tunnelInterfaceHelloInterval!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceHelloIntervalVariable!: pulumi.Output<string | undefined>;
    /**
     * Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
     */
    public readonly tunnelInterfaceHelloTolerance!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceHelloToleranceVariable!: pulumi.Output<string | undefined>;
    /**
     * Set TLOC as last resort - Default value: `false`
     */
    public readonly tunnelInterfaceLastResortCircuit!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceLastResortCircuitVariable!: pulumi.Output<string | undefined>;
    /**
     * Set the interface as a low-bandwidth circuit - Default value: `false`
     */
    public readonly tunnelInterfaceLowBandwidthLink!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceLowBandwidthLinkVariable!: pulumi.Output<string | undefined>;
    /**
     * Set the maximum number of control connections for this TLOC - Range: `0`-`100`
     */
    public readonly tunnelInterfaceMaxControlConnections!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceMaxControlConnectionsVariable!: pulumi.Output<string | undefined>;
    /**
     * Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
     */
    public readonly tunnelInterfaceNatRefreshInterval!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceNatRefreshIntervalVariable!: pulumi.Output<string | undefined>;
    /**
     * Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
     */
    public readonly tunnelInterfaceNetworkBroadcast!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceNetworkBroadcastVariable!: pulumi.Output<string | undefined>;
    /**
     * Disallow port hopping on the tunnel interface - Default value: `true`
     */
    public readonly tunnelInterfacePortHop!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfacePortHopVariable!: pulumi.Output<string | undefined>;
    /**
     * CTS SGT Propagation configuration - Default value: `false`
     */
    public readonly tunnelInterfacePropagateSgt!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfacePropagateSgtVariable!: pulumi.Output<string | undefined>;
    /**
     * Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    public readonly tunnelInterfaceTunnelTcpMss!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceTunnelTcpMssVariable!: pulumi.Output<string | undefined>;
    /**
     * Put this wan interface in STUN mode only - Default value: `false`
     */
    public readonly tunnelInterfaceVbondAsStunServer!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceVbondAsStunServerVariable!: pulumi.Output<string | undefined>;
    /**
     * Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
     */
    public readonly tunnelInterfaceVmanageConnectionPreference!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceVmanageConnectionPreferenceVariable!: pulumi.Output<string | undefined>;
    /**
     * Set tunnel QoS mode - Choices: `hub`, `spoke`
     */
    public readonly tunnelQosMode!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelQosModeVariable!: pulumi.Output<string | undefined>;
    /**
     * Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
     */
    public readonly udpTimeout!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly udpTimeoutVariable!: pulumi.Output<string | undefined>;
    /**
     * The version of the feature template
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a CiscoVpnInterfaceFeatureTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CiscoVpnInterfaceFeatureTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CiscoVpnInterfaceFeatureTemplateArgs | CiscoVpnInterfaceFeatureTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CiscoVpnInterfaceFeatureTemplateState | undefined;
            resourceInputs["accessLists"] = state ? state.accessLists : undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["addressVariable"] = state ? state.addressVariable : undefined;
            resourceInputs["arpTimeout"] = state ? state.arpTimeout : undefined;
            resourceInputs["arpTimeoutVariable"] = state ? state.arpTimeoutVariable : undefined;
            resourceInputs["autoBandwidthDetect"] = state ? state.autoBandwidthDetect : undefined;
            resourceInputs["autoBandwidthDetectVariable"] = state ? state.autoBandwidthDetectVariable : undefined;
            resourceInputs["autonegotiate"] = state ? state.autonegotiate : undefined;
            resourceInputs["autonegotiateVariable"] = state ? state.autonegotiateVariable : undefined;
            resourceInputs["bandwidthDownstream"] = state ? state.bandwidthDownstream : undefined;
            resourceInputs["bandwidthDownstreamVariable"] = state ? state.bandwidthDownstreamVariable : undefined;
            resourceInputs["bandwidthUpstream"] = state ? state.bandwidthUpstream : undefined;
            resourceInputs["bandwidthUpstreamVariable"] = state ? state.bandwidthUpstreamVariable : undefined;
            resourceInputs["blockNonSourceIp"] = state ? state.blockNonSourceIp : undefined;
            resourceInputs["blockNonSourceIpVariable"] = state ? state.blockNonSourceIpVariable : undefined;
            resourceInputs["coreRegion"] = state ? state.coreRegion : undefined;
            resourceInputs["coreRegionVariable"] = state ? state.coreRegionVariable : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceTypes"] = state ? state.deviceTypes : undefined;
            resourceInputs["dhcp"] = state ? state.dhcp : undefined;
            resourceInputs["dhcpDistance"] = state ? state.dhcpDistance : undefined;
            resourceInputs["dhcpDistanceVariable"] = state ? state.dhcpDistanceVariable : undefined;
            resourceInputs["dhcpVariable"] = state ? state.dhcpVariable : undefined;
            resourceInputs["dhcpv6"] = state ? state.dhcpv6 : undefined;
            resourceInputs["dhcpv6Variable"] = state ? state.dhcpv6Variable : undefined;
            resourceInputs["duplex"] = state ? state.duplex : undefined;
            resourceInputs["duplexVariable"] = state ? state.duplexVariable : undefined;
            resourceInputs["enableCoreRegion"] = state ? state.enableCoreRegion : undefined;
            resourceInputs["enableSgt"] = state ? state.enableSgt : undefined;
            resourceInputs["greTunnelSourceIp"] = state ? state.greTunnelSourceIp : undefined;
            resourceInputs["greTunnelSourceIpVariable"] = state ? state.greTunnelSourceIpVariable : undefined;
            resourceInputs["greTunnelXconnect"] = state ? state.greTunnelXconnect : undefined;
            resourceInputs["greTunnelXconnectVariable"] = state ? state.greTunnelXconnectVariable : undefined;
            resourceInputs["icmpRedirectDisable"] = state ? state.icmpRedirectDisable : undefined;
            resourceInputs["icmpRedirectDisableVariable"] = state ? state.icmpRedirectDisableVariable : undefined;
            resourceInputs["interfaceDescription"] = state ? state.interfaceDescription : undefined;
            resourceInputs["interfaceDescriptionVariable"] = state ? state.interfaceDescriptionVariable : undefined;
            resourceInputs["interfaceMtu"] = state ? state.interfaceMtu : undefined;
            resourceInputs["interfaceMtuVariable"] = state ? state.interfaceMtuVariable : undefined;
            resourceInputs["interfaceName"] = state ? state.interfaceName : undefined;
            resourceInputs["interfaceNameVariable"] = state ? state.interfaceNameVariable : undefined;
            resourceInputs["ipDirectedBroadcast"] = state ? state.ipDirectedBroadcast : undefined;
            resourceInputs["ipDirectedBroadcastVariable"] = state ? state.ipDirectedBroadcastVariable : undefined;
            resourceInputs["ipMtu"] = state ? state.ipMtu : undefined;
            resourceInputs["ipMtuVariable"] = state ? state.ipMtuVariable : undefined;
            resourceInputs["iperfServer"] = state ? state.iperfServer : undefined;
            resourceInputs["iperfServerVariable"] = state ? state.iperfServerVariable : undefined;
            resourceInputs["ipv4DhcpHelperVariable"] = state ? state.ipv4DhcpHelperVariable : undefined;
            resourceInputs["ipv4DhcpHelpers"] = state ? state.ipv4DhcpHelpers : undefined;
            resourceInputs["ipv4SecondaryAddresses"] = state ? state.ipv4SecondaryAddresses : undefined;
            resourceInputs["ipv4Vrrps"] = state ? state.ipv4Vrrps : undefined;
            resourceInputs["ipv6AccessLists"] = state ? state.ipv6AccessLists : undefined;
            resourceInputs["ipv6Address"] = state ? state.ipv6Address : undefined;
            resourceInputs["ipv6AddressVariable"] = state ? state.ipv6AddressVariable : undefined;
            resourceInputs["ipv6DhcpHelpers"] = state ? state.ipv6DhcpHelpers : undefined;
            resourceInputs["ipv6Nat"] = state ? state.ipv6Nat : undefined;
            resourceInputs["ipv6NatVariable"] = state ? state.ipv6NatVariable : undefined;
            resourceInputs["ipv6SecondaryAddresses"] = state ? state.ipv6SecondaryAddresses : undefined;
            resourceInputs["ipv6Vrrps"] = state ? state.ipv6Vrrps : undefined;
            resourceInputs["loadInterval"] = state ? state.loadInterval : undefined;
            resourceInputs["loadIntervalVariable"] = state ? state.loadIntervalVariable : undefined;
            resourceInputs["macAddress"] = state ? state.macAddress : undefined;
            resourceInputs["macAddressVariable"] = state ? state.macAddressVariable : undefined;
            resourceInputs["mediaType"] = state ? state.mediaType : undefined;
            resourceInputs["mediaTypeVariable"] = state ? state.mediaTypeVariable : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nat"] = state ? state.nat : undefined;
            resourceInputs["nat64Interface"] = state ? state.nat64Interface : undefined;
            resourceInputs["nat66Interface"] = state ? state.nat66Interface : undefined;
            resourceInputs["natInsideSourceLoopbackInterface"] = state ? state.natInsideSourceLoopbackInterface : undefined;
            resourceInputs["natInsideSourceLoopbackInterfaceVariable"] = state ? state.natInsideSourceLoopbackInterfaceVariable : undefined;
            resourceInputs["natOverload"] = state ? state.natOverload : undefined;
            resourceInputs["natOverloadVariable"] = state ? state.natOverloadVariable : undefined;
            resourceInputs["natPoolPrefixLength"] = state ? state.natPoolPrefixLength : undefined;
            resourceInputs["natPoolPrefixLengthVariable"] = state ? state.natPoolPrefixLengthVariable : undefined;
            resourceInputs["natPoolRangeEnd"] = state ? state.natPoolRangeEnd : undefined;
            resourceInputs["natPoolRangeEndVariable"] = state ? state.natPoolRangeEndVariable : undefined;
            resourceInputs["natPoolRangeStart"] = state ? state.natPoolRangeStart : undefined;
            resourceInputs["natPoolRangeStartVariable"] = state ? state.natPoolRangeStartVariable : undefined;
            resourceInputs["natType"] = state ? state.natType : undefined;
            resourceInputs["natTypeVariable"] = state ? state.natTypeVariable : undefined;
            resourceInputs["poe"] = state ? state.poe : undefined;
            resourceInputs["poeVariable"] = state ? state.poeVariable : undefined;
            resourceInputs["propagateSgt"] = state ? state.propagateSgt : undefined;
            resourceInputs["qosAdaptiveBandwidthDownstream"] = state ? state.qosAdaptiveBandwidthDownstream : undefined;
            resourceInputs["qosAdaptiveBandwidthDownstreamVariable"] = state ? state.qosAdaptiveBandwidthDownstreamVariable : undefined;
            resourceInputs["qosAdaptiveBandwidthUpstream"] = state ? state.qosAdaptiveBandwidthUpstream : undefined;
            resourceInputs["qosAdaptiveBandwidthUpstreamVariable"] = state ? state.qosAdaptiveBandwidthUpstreamVariable : undefined;
            resourceInputs["qosAdaptiveMaxDownstream"] = state ? state.qosAdaptiveMaxDownstream : undefined;
            resourceInputs["qosAdaptiveMaxDownstreamVariable"] = state ? state.qosAdaptiveMaxDownstreamVariable : undefined;
            resourceInputs["qosAdaptiveMaxUpstream"] = state ? state.qosAdaptiveMaxUpstream : undefined;
            resourceInputs["qosAdaptiveMaxUpstreamVariable"] = state ? state.qosAdaptiveMaxUpstreamVariable : undefined;
            resourceInputs["qosAdaptiveMinDownstream"] = state ? state.qosAdaptiveMinDownstream : undefined;
            resourceInputs["qosAdaptiveMinDownstreamVariable"] = state ? state.qosAdaptiveMinDownstreamVariable : undefined;
            resourceInputs["qosAdaptiveMinUpstream"] = state ? state.qosAdaptiveMinUpstream : undefined;
            resourceInputs["qosAdaptiveMinUpstreamVariable"] = state ? state.qosAdaptiveMinUpstreamVariable : undefined;
            resourceInputs["qosAdaptivePeriod"] = state ? state.qosAdaptivePeriod : undefined;
            resourceInputs["qosAdaptivePeriodVariable"] = state ? state.qosAdaptivePeriodVariable : undefined;
            resourceInputs["qosMap"] = state ? state.qosMap : undefined;
            resourceInputs["qosMapVariable"] = state ? state.qosMapVariable : undefined;
            resourceInputs["qosMapVpn"] = state ? state.qosMapVpn : undefined;
            resourceInputs["qosMapVpnVariable"] = state ? state.qosMapVpnVariable : undefined;
            resourceInputs["rewriteRuleName"] = state ? state.rewriteRuleName : undefined;
            resourceInputs["rewriteRuleNameVariable"] = state ? state.rewriteRuleNameVariable : undefined;
            resourceInputs["secondaryRegion"] = state ? state.secondaryRegion : undefined;
            resourceInputs["secondaryRegionVariable"] = state ? state.secondaryRegionVariable : undefined;
            resourceInputs["sgtEnforcement"] = state ? state.sgtEnforcement : undefined;
            resourceInputs["sgtEnforcementSgt"] = state ? state.sgtEnforcementSgt : undefined;
            resourceInputs["sgtEnforcementSgtVariable"] = state ? state.sgtEnforcementSgtVariable : undefined;
            resourceInputs["shapingRate"] = state ? state.shapingRate : undefined;
            resourceInputs["shapingRateVariable"] = state ? state.shapingRateVariable : undefined;
            resourceInputs["shutdown"] = state ? state.shutdown : undefined;
            resourceInputs["shutdownVariable"] = state ? state.shutdownVariable : undefined;
            resourceInputs["speed"] = state ? state.speed : undefined;
            resourceInputs["speedVariable"] = state ? state.speedVariable : undefined;
            resourceInputs["staticArps"] = state ? state.staticArps : undefined;
            resourceInputs["staticNat66Entries"] = state ? state.staticNat66Entries : undefined;
            resourceInputs["staticNatEntries"] = state ? state.staticNatEntries : undefined;
            resourceInputs["staticPortForwardEntries"] = state ? state.staticPortForwardEntries : undefined;
            resourceInputs["staticSgt"] = state ? state.staticSgt : undefined;
            resourceInputs["staticSgtTrusted"] = state ? state.staticSgtTrusted : undefined;
            resourceInputs["staticSgtVariable"] = state ? state.staticSgtVariable : undefined;
            resourceInputs["tcpMssAdjust"] = state ? state.tcpMssAdjust : undefined;
            resourceInputs["tcpMssAdjustVariable"] = state ? state.tcpMssAdjustVariable : undefined;
            resourceInputs["tcpTimeout"] = state ? state.tcpTimeout : undefined;
            resourceInputs["tcpTimeoutVariable"] = state ? state.tcpTimeoutVariable : undefined;
            resourceInputs["templateType"] = state ? state.templateType : undefined;
            resourceInputs["tlocExtension"] = state ? state.tlocExtension : undefined;
            resourceInputs["tlocExtensionVariable"] = state ? state.tlocExtensionVariable : undefined;
            resourceInputs["trackerVariable"] = state ? state.trackerVariable : undefined;
            resourceInputs["trackers"] = state ? state.trackers : undefined;
            resourceInputs["tunnelBandwidth"] = state ? state.tunnelBandwidth : undefined;
            resourceInputs["tunnelBandwidthVariable"] = state ? state.tunnelBandwidthVariable : undefined;
            resourceInputs["tunnelInterfaceAllowAll"] = state ? state.tunnelInterfaceAllowAll : undefined;
            resourceInputs["tunnelInterfaceAllowAllVariable"] = state ? state.tunnelInterfaceAllowAllVariable : undefined;
            resourceInputs["tunnelInterfaceAllowBgp"] = state ? state.tunnelInterfaceAllowBgp : undefined;
            resourceInputs["tunnelInterfaceAllowBgpVariable"] = state ? state.tunnelInterfaceAllowBgpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowDhcp"] = state ? state.tunnelInterfaceAllowDhcp : undefined;
            resourceInputs["tunnelInterfaceAllowDhcpVariable"] = state ? state.tunnelInterfaceAllowDhcpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowDns"] = state ? state.tunnelInterfaceAllowDns : undefined;
            resourceInputs["tunnelInterfaceAllowDnsVariable"] = state ? state.tunnelInterfaceAllowDnsVariable : undefined;
            resourceInputs["tunnelInterfaceAllowHttps"] = state ? state.tunnelInterfaceAllowHttps : undefined;
            resourceInputs["tunnelInterfaceAllowHttpsVariable"] = state ? state.tunnelInterfaceAllowHttpsVariable : undefined;
            resourceInputs["tunnelInterfaceAllowIcmp"] = state ? state.tunnelInterfaceAllowIcmp : undefined;
            resourceInputs["tunnelInterfaceAllowIcmpVariable"] = state ? state.tunnelInterfaceAllowIcmpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowNetconf"] = state ? state.tunnelInterfaceAllowNetconf : undefined;
            resourceInputs["tunnelInterfaceAllowNetconfVariable"] = state ? state.tunnelInterfaceAllowNetconfVariable : undefined;
            resourceInputs["tunnelInterfaceAllowNtp"] = state ? state.tunnelInterfaceAllowNtp : undefined;
            resourceInputs["tunnelInterfaceAllowNtpVariable"] = state ? state.tunnelInterfaceAllowNtpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowOspf"] = state ? state.tunnelInterfaceAllowOspf : undefined;
            resourceInputs["tunnelInterfaceAllowOspfVariable"] = state ? state.tunnelInterfaceAllowOspfVariable : undefined;
            resourceInputs["tunnelInterfaceAllowSnmp"] = state ? state.tunnelInterfaceAllowSnmp : undefined;
            resourceInputs["tunnelInterfaceAllowSnmpVariable"] = state ? state.tunnelInterfaceAllowSnmpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowSsh"] = state ? state.tunnelInterfaceAllowSsh : undefined;
            resourceInputs["tunnelInterfaceAllowSshVariable"] = state ? state.tunnelInterfaceAllowSshVariable : undefined;
            resourceInputs["tunnelInterfaceAllowStun"] = state ? state.tunnelInterfaceAllowStun : undefined;
            resourceInputs["tunnelInterfaceAllowStunVariable"] = state ? state.tunnelInterfaceAllowStunVariable : undefined;
            resourceInputs["tunnelInterfaceBindLoopbackTunnel"] = state ? state.tunnelInterfaceBindLoopbackTunnel : undefined;
            resourceInputs["tunnelInterfaceBindLoopbackTunnelVariable"] = state ? state.tunnelInterfaceBindLoopbackTunnelVariable : undefined;
            resourceInputs["tunnelInterfaceBorder"] = state ? state.tunnelInterfaceBorder : undefined;
            resourceInputs["tunnelInterfaceBorderVariable"] = state ? state.tunnelInterfaceBorderVariable : undefined;
            resourceInputs["tunnelInterfaceCarrier"] = state ? state.tunnelInterfaceCarrier : undefined;
            resourceInputs["tunnelInterfaceCarrierVariable"] = state ? state.tunnelInterfaceCarrierVariable : undefined;
            resourceInputs["tunnelInterfaceClearDontFragment"] = state ? state.tunnelInterfaceClearDontFragment : undefined;
            resourceInputs["tunnelInterfaceClearDontFragmentVariable"] = state ? state.tunnelInterfaceClearDontFragmentVariable : undefined;
            resourceInputs["tunnelInterfaceColor"] = state ? state.tunnelInterfaceColor : undefined;
            resourceInputs["tunnelInterfaceColorRestrict"] = state ? state.tunnelInterfaceColorRestrict : undefined;
            resourceInputs["tunnelInterfaceColorRestrictVariable"] = state ? state.tunnelInterfaceColorRestrictVariable : undefined;
            resourceInputs["tunnelInterfaceColorVariable"] = state ? state.tunnelInterfaceColorVariable : undefined;
            resourceInputs["tunnelInterfaceControlConnections"] = state ? state.tunnelInterfaceControlConnections : undefined;
            resourceInputs["tunnelInterfaceControlConnectionsVariable"] = state ? state.tunnelInterfaceControlConnectionsVariable : undefined;
            resourceInputs["tunnelInterfaceEncapsulations"] = state ? state.tunnelInterfaceEncapsulations : undefined;
            resourceInputs["tunnelInterfaceExcludeControllerGroupListVariable"] = state ? state.tunnelInterfaceExcludeControllerGroupListVariable : undefined;
            resourceInputs["tunnelInterfaceExcludeControllerGroupLists"] = state ? state.tunnelInterfaceExcludeControllerGroupLists : undefined;
            resourceInputs["tunnelInterfaceGreTunnelDestinationIp"] = state ? state.tunnelInterfaceGreTunnelDestinationIp : undefined;
            resourceInputs["tunnelInterfaceGreTunnelDestinationIpVariable"] = state ? state.tunnelInterfaceGreTunnelDestinationIpVariable : undefined;
            resourceInputs["tunnelInterfaceGroups"] = state ? state.tunnelInterfaceGroups : undefined;
            resourceInputs["tunnelInterfaceGroupsVariable"] = state ? state.tunnelInterfaceGroupsVariable : undefined;
            resourceInputs["tunnelInterfaceHelloInterval"] = state ? state.tunnelInterfaceHelloInterval : undefined;
            resourceInputs["tunnelInterfaceHelloIntervalVariable"] = state ? state.tunnelInterfaceHelloIntervalVariable : undefined;
            resourceInputs["tunnelInterfaceHelloTolerance"] = state ? state.tunnelInterfaceHelloTolerance : undefined;
            resourceInputs["tunnelInterfaceHelloToleranceVariable"] = state ? state.tunnelInterfaceHelloToleranceVariable : undefined;
            resourceInputs["tunnelInterfaceLastResortCircuit"] = state ? state.tunnelInterfaceLastResortCircuit : undefined;
            resourceInputs["tunnelInterfaceLastResortCircuitVariable"] = state ? state.tunnelInterfaceLastResortCircuitVariable : undefined;
            resourceInputs["tunnelInterfaceLowBandwidthLink"] = state ? state.tunnelInterfaceLowBandwidthLink : undefined;
            resourceInputs["tunnelInterfaceLowBandwidthLinkVariable"] = state ? state.tunnelInterfaceLowBandwidthLinkVariable : undefined;
            resourceInputs["tunnelInterfaceMaxControlConnections"] = state ? state.tunnelInterfaceMaxControlConnections : undefined;
            resourceInputs["tunnelInterfaceMaxControlConnectionsVariable"] = state ? state.tunnelInterfaceMaxControlConnectionsVariable : undefined;
            resourceInputs["tunnelInterfaceNatRefreshInterval"] = state ? state.tunnelInterfaceNatRefreshInterval : undefined;
            resourceInputs["tunnelInterfaceNatRefreshIntervalVariable"] = state ? state.tunnelInterfaceNatRefreshIntervalVariable : undefined;
            resourceInputs["tunnelInterfaceNetworkBroadcast"] = state ? state.tunnelInterfaceNetworkBroadcast : undefined;
            resourceInputs["tunnelInterfaceNetworkBroadcastVariable"] = state ? state.tunnelInterfaceNetworkBroadcastVariable : undefined;
            resourceInputs["tunnelInterfacePortHop"] = state ? state.tunnelInterfacePortHop : undefined;
            resourceInputs["tunnelInterfacePortHopVariable"] = state ? state.tunnelInterfacePortHopVariable : undefined;
            resourceInputs["tunnelInterfacePropagateSgt"] = state ? state.tunnelInterfacePropagateSgt : undefined;
            resourceInputs["tunnelInterfacePropagateSgtVariable"] = state ? state.tunnelInterfacePropagateSgtVariable : undefined;
            resourceInputs["tunnelInterfaceTunnelTcpMss"] = state ? state.tunnelInterfaceTunnelTcpMss : undefined;
            resourceInputs["tunnelInterfaceTunnelTcpMssVariable"] = state ? state.tunnelInterfaceTunnelTcpMssVariable : undefined;
            resourceInputs["tunnelInterfaceVbondAsStunServer"] = state ? state.tunnelInterfaceVbondAsStunServer : undefined;
            resourceInputs["tunnelInterfaceVbondAsStunServerVariable"] = state ? state.tunnelInterfaceVbondAsStunServerVariable : undefined;
            resourceInputs["tunnelInterfaceVmanageConnectionPreference"] = state ? state.tunnelInterfaceVmanageConnectionPreference : undefined;
            resourceInputs["tunnelInterfaceVmanageConnectionPreferenceVariable"] = state ? state.tunnelInterfaceVmanageConnectionPreferenceVariable : undefined;
            resourceInputs["tunnelQosMode"] = state ? state.tunnelQosMode : undefined;
            resourceInputs["tunnelQosModeVariable"] = state ? state.tunnelQosModeVariable : undefined;
            resourceInputs["udpTimeout"] = state ? state.udpTimeout : undefined;
            resourceInputs["udpTimeoutVariable"] = state ? state.udpTimeoutVariable : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as CiscoVpnInterfaceFeatureTemplateArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.deviceTypes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceTypes'");
            }
            resourceInputs["accessLists"] = args ? args.accessLists : undefined;
            resourceInputs["address"] = args ? args.address : undefined;
            resourceInputs["addressVariable"] = args ? args.addressVariable : undefined;
            resourceInputs["arpTimeout"] = args ? args.arpTimeout : undefined;
            resourceInputs["arpTimeoutVariable"] = args ? args.arpTimeoutVariable : undefined;
            resourceInputs["autoBandwidthDetect"] = args ? args.autoBandwidthDetect : undefined;
            resourceInputs["autoBandwidthDetectVariable"] = args ? args.autoBandwidthDetectVariable : undefined;
            resourceInputs["autonegotiate"] = args ? args.autonegotiate : undefined;
            resourceInputs["autonegotiateVariable"] = args ? args.autonegotiateVariable : undefined;
            resourceInputs["bandwidthDownstream"] = args ? args.bandwidthDownstream : undefined;
            resourceInputs["bandwidthDownstreamVariable"] = args ? args.bandwidthDownstreamVariable : undefined;
            resourceInputs["bandwidthUpstream"] = args ? args.bandwidthUpstream : undefined;
            resourceInputs["bandwidthUpstreamVariable"] = args ? args.bandwidthUpstreamVariable : undefined;
            resourceInputs["blockNonSourceIp"] = args ? args.blockNonSourceIp : undefined;
            resourceInputs["blockNonSourceIpVariable"] = args ? args.blockNonSourceIpVariable : undefined;
            resourceInputs["coreRegion"] = args ? args.coreRegion : undefined;
            resourceInputs["coreRegionVariable"] = args ? args.coreRegionVariable : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceTypes"] = args ? args.deviceTypes : undefined;
            resourceInputs["dhcp"] = args ? args.dhcp : undefined;
            resourceInputs["dhcpDistance"] = args ? args.dhcpDistance : undefined;
            resourceInputs["dhcpDistanceVariable"] = args ? args.dhcpDistanceVariable : undefined;
            resourceInputs["dhcpVariable"] = args ? args.dhcpVariable : undefined;
            resourceInputs["dhcpv6"] = args ? args.dhcpv6 : undefined;
            resourceInputs["dhcpv6Variable"] = args ? args.dhcpv6Variable : undefined;
            resourceInputs["duplex"] = args ? args.duplex : undefined;
            resourceInputs["duplexVariable"] = args ? args.duplexVariable : undefined;
            resourceInputs["enableCoreRegion"] = args ? args.enableCoreRegion : undefined;
            resourceInputs["enableSgt"] = args ? args.enableSgt : undefined;
            resourceInputs["greTunnelSourceIp"] = args ? args.greTunnelSourceIp : undefined;
            resourceInputs["greTunnelSourceIpVariable"] = args ? args.greTunnelSourceIpVariable : undefined;
            resourceInputs["greTunnelXconnect"] = args ? args.greTunnelXconnect : undefined;
            resourceInputs["greTunnelXconnectVariable"] = args ? args.greTunnelXconnectVariable : undefined;
            resourceInputs["icmpRedirectDisable"] = args ? args.icmpRedirectDisable : undefined;
            resourceInputs["icmpRedirectDisableVariable"] = args ? args.icmpRedirectDisableVariable : undefined;
            resourceInputs["interfaceDescription"] = args ? args.interfaceDescription : undefined;
            resourceInputs["interfaceDescriptionVariable"] = args ? args.interfaceDescriptionVariable : undefined;
            resourceInputs["interfaceMtu"] = args ? args.interfaceMtu : undefined;
            resourceInputs["interfaceMtuVariable"] = args ? args.interfaceMtuVariable : undefined;
            resourceInputs["interfaceName"] = args ? args.interfaceName : undefined;
            resourceInputs["interfaceNameVariable"] = args ? args.interfaceNameVariable : undefined;
            resourceInputs["ipDirectedBroadcast"] = args ? args.ipDirectedBroadcast : undefined;
            resourceInputs["ipDirectedBroadcastVariable"] = args ? args.ipDirectedBroadcastVariable : undefined;
            resourceInputs["ipMtu"] = args ? args.ipMtu : undefined;
            resourceInputs["ipMtuVariable"] = args ? args.ipMtuVariable : undefined;
            resourceInputs["iperfServer"] = args ? args.iperfServer : undefined;
            resourceInputs["iperfServerVariable"] = args ? args.iperfServerVariable : undefined;
            resourceInputs["ipv4DhcpHelperVariable"] = args ? args.ipv4DhcpHelperVariable : undefined;
            resourceInputs["ipv4DhcpHelpers"] = args ? args.ipv4DhcpHelpers : undefined;
            resourceInputs["ipv4SecondaryAddresses"] = args ? args.ipv4SecondaryAddresses : undefined;
            resourceInputs["ipv4Vrrps"] = args ? args.ipv4Vrrps : undefined;
            resourceInputs["ipv6AccessLists"] = args ? args.ipv6AccessLists : undefined;
            resourceInputs["ipv6Address"] = args ? args.ipv6Address : undefined;
            resourceInputs["ipv6AddressVariable"] = args ? args.ipv6AddressVariable : undefined;
            resourceInputs["ipv6DhcpHelpers"] = args ? args.ipv6DhcpHelpers : undefined;
            resourceInputs["ipv6Nat"] = args ? args.ipv6Nat : undefined;
            resourceInputs["ipv6NatVariable"] = args ? args.ipv6NatVariable : undefined;
            resourceInputs["ipv6SecondaryAddresses"] = args ? args.ipv6SecondaryAddresses : undefined;
            resourceInputs["ipv6Vrrps"] = args ? args.ipv6Vrrps : undefined;
            resourceInputs["loadInterval"] = args ? args.loadInterval : undefined;
            resourceInputs["loadIntervalVariable"] = args ? args.loadIntervalVariable : undefined;
            resourceInputs["macAddress"] = args ? args.macAddress : undefined;
            resourceInputs["macAddressVariable"] = args ? args.macAddressVariable : undefined;
            resourceInputs["mediaType"] = args ? args.mediaType : undefined;
            resourceInputs["mediaTypeVariable"] = args ? args.mediaTypeVariable : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nat"] = args ? args.nat : undefined;
            resourceInputs["nat64Interface"] = args ? args.nat64Interface : undefined;
            resourceInputs["nat66Interface"] = args ? args.nat66Interface : undefined;
            resourceInputs["natInsideSourceLoopbackInterface"] = args ? args.natInsideSourceLoopbackInterface : undefined;
            resourceInputs["natInsideSourceLoopbackInterfaceVariable"] = args ? args.natInsideSourceLoopbackInterfaceVariable : undefined;
            resourceInputs["natOverload"] = args ? args.natOverload : undefined;
            resourceInputs["natOverloadVariable"] = args ? args.natOverloadVariable : undefined;
            resourceInputs["natPoolPrefixLength"] = args ? args.natPoolPrefixLength : undefined;
            resourceInputs["natPoolPrefixLengthVariable"] = args ? args.natPoolPrefixLengthVariable : undefined;
            resourceInputs["natPoolRangeEnd"] = args ? args.natPoolRangeEnd : undefined;
            resourceInputs["natPoolRangeEndVariable"] = args ? args.natPoolRangeEndVariable : undefined;
            resourceInputs["natPoolRangeStart"] = args ? args.natPoolRangeStart : undefined;
            resourceInputs["natPoolRangeStartVariable"] = args ? args.natPoolRangeStartVariable : undefined;
            resourceInputs["natType"] = args ? args.natType : undefined;
            resourceInputs["natTypeVariable"] = args ? args.natTypeVariable : undefined;
            resourceInputs["poe"] = args ? args.poe : undefined;
            resourceInputs["poeVariable"] = args ? args.poeVariable : undefined;
            resourceInputs["propagateSgt"] = args ? args.propagateSgt : undefined;
            resourceInputs["qosAdaptiveBandwidthDownstream"] = args ? args.qosAdaptiveBandwidthDownstream : undefined;
            resourceInputs["qosAdaptiveBandwidthDownstreamVariable"] = args ? args.qosAdaptiveBandwidthDownstreamVariable : undefined;
            resourceInputs["qosAdaptiveBandwidthUpstream"] = args ? args.qosAdaptiveBandwidthUpstream : undefined;
            resourceInputs["qosAdaptiveBandwidthUpstreamVariable"] = args ? args.qosAdaptiveBandwidthUpstreamVariable : undefined;
            resourceInputs["qosAdaptiveMaxDownstream"] = args ? args.qosAdaptiveMaxDownstream : undefined;
            resourceInputs["qosAdaptiveMaxDownstreamVariable"] = args ? args.qosAdaptiveMaxDownstreamVariable : undefined;
            resourceInputs["qosAdaptiveMaxUpstream"] = args ? args.qosAdaptiveMaxUpstream : undefined;
            resourceInputs["qosAdaptiveMaxUpstreamVariable"] = args ? args.qosAdaptiveMaxUpstreamVariable : undefined;
            resourceInputs["qosAdaptiveMinDownstream"] = args ? args.qosAdaptiveMinDownstream : undefined;
            resourceInputs["qosAdaptiveMinDownstreamVariable"] = args ? args.qosAdaptiveMinDownstreamVariable : undefined;
            resourceInputs["qosAdaptiveMinUpstream"] = args ? args.qosAdaptiveMinUpstream : undefined;
            resourceInputs["qosAdaptiveMinUpstreamVariable"] = args ? args.qosAdaptiveMinUpstreamVariable : undefined;
            resourceInputs["qosAdaptivePeriod"] = args ? args.qosAdaptivePeriod : undefined;
            resourceInputs["qosAdaptivePeriodVariable"] = args ? args.qosAdaptivePeriodVariable : undefined;
            resourceInputs["qosMap"] = args ? args.qosMap : undefined;
            resourceInputs["qosMapVariable"] = args ? args.qosMapVariable : undefined;
            resourceInputs["qosMapVpn"] = args ? args.qosMapVpn : undefined;
            resourceInputs["qosMapVpnVariable"] = args ? args.qosMapVpnVariable : undefined;
            resourceInputs["rewriteRuleName"] = args ? args.rewriteRuleName : undefined;
            resourceInputs["rewriteRuleNameVariable"] = args ? args.rewriteRuleNameVariable : undefined;
            resourceInputs["secondaryRegion"] = args ? args.secondaryRegion : undefined;
            resourceInputs["secondaryRegionVariable"] = args ? args.secondaryRegionVariable : undefined;
            resourceInputs["sgtEnforcement"] = args ? args.sgtEnforcement : undefined;
            resourceInputs["sgtEnforcementSgt"] = args ? args.sgtEnforcementSgt : undefined;
            resourceInputs["sgtEnforcementSgtVariable"] = args ? args.sgtEnforcementSgtVariable : undefined;
            resourceInputs["shapingRate"] = args ? args.shapingRate : undefined;
            resourceInputs["shapingRateVariable"] = args ? args.shapingRateVariable : undefined;
            resourceInputs["shutdown"] = args ? args.shutdown : undefined;
            resourceInputs["shutdownVariable"] = args ? args.shutdownVariable : undefined;
            resourceInputs["speed"] = args ? args.speed : undefined;
            resourceInputs["speedVariable"] = args ? args.speedVariable : undefined;
            resourceInputs["staticArps"] = args ? args.staticArps : undefined;
            resourceInputs["staticNat66Entries"] = args ? args.staticNat66Entries : undefined;
            resourceInputs["staticNatEntries"] = args ? args.staticNatEntries : undefined;
            resourceInputs["staticPortForwardEntries"] = args ? args.staticPortForwardEntries : undefined;
            resourceInputs["staticSgt"] = args ? args.staticSgt : undefined;
            resourceInputs["staticSgtTrusted"] = args ? args.staticSgtTrusted : undefined;
            resourceInputs["staticSgtVariable"] = args ? args.staticSgtVariable : undefined;
            resourceInputs["tcpMssAdjust"] = args ? args.tcpMssAdjust : undefined;
            resourceInputs["tcpMssAdjustVariable"] = args ? args.tcpMssAdjustVariable : undefined;
            resourceInputs["tcpTimeout"] = args ? args.tcpTimeout : undefined;
            resourceInputs["tcpTimeoutVariable"] = args ? args.tcpTimeoutVariable : undefined;
            resourceInputs["tlocExtension"] = args ? args.tlocExtension : undefined;
            resourceInputs["tlocExtensionVariable"] = args ? args.tlocExtensionVariable : undefined;
            resourceInputs["trackerVariable"] = args ? args.trackerVariable : undefined;
            resourceInputs["trackers"] = args ? args.trackers : undefined;
            resourceInputs["tunnelBandwidth"] = args ? args.tunnelBandwidth : undefined;
            resourceInputs["tunnelBandwidthVariable"] = args ? args.tunnelBandwidthVariable : undefined;
            resourceInputs["tunnelInterfaceAllowAll"] = args ? args.tunnelInterfaceAllowAll : undefined;
            resourceInputs["tunnelInterfaceAllowAllVariable"] = args ? args.tunnelInterfaceAllowAllVariable : undefined;
            resourceInputs["tunnelInterfaceAllowBgp"] = args ? args.tunnelInterfaceAllowBgp : undefined;
            resourceInputs["tunnelInterfaceAllowBgpVariable"] = args ? args.tunnelInterfaceAllowBgpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowDhcp"] = args ? args.tunnelInterfaceAllowDhcp : undefined;
            resourceInputs["tunnelInterfaceAllowDhcpVariable"] = args ? args.tunnelInterfaceAllowDhcpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowDns"] = args ? args.tunnelInterfaceAllowDns : undefined;
            resourceInputs["tunnelInterfaceAllowDnsVariable"] = args ? args.tunnelInterfaceAllowDnsVariable : undefined;
            resourceInputs["tunnelInterfaceAllowHttps"] = args ? args.tunnelInterfaceAllowHttps : undefined;
            resourceInputs["tunnelInterfaceAllowHttpsVariable"] = args ? args.tunnelInterfaceAllowHttpsVariable : undefined;
            resourceInputs["tunnelInterfaceAllowIcmp"] = args ? args.tunnelInterfaceAllowIcmp : undefined;
            resourceInputs["tunnelInterfaceAllowIcmpVariable"] = args ? args.tunnelInterfaceAllowIcmpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowNetconf"] = args ? args.tunnelInterfaceAllowNetconf : undefined;
            resourceInputs["tunnelInterfaceAllowNetconfVariable"] = args ? args.tunnelInterfaceAllowNetconfVariable : undefined;
            resourceInputs["tunnelInterfaceAllowNtp"] = args ? args.tunnelInterfaceAllowNtp : undefined;
            resourceInputs["tunnelInterfaceAllowNtpVariable"] = args ? args.tunnelInterfaceAllowNtpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowOspf"] = args ? args.tunnelInterfaceAllowOspf : undefined;
            resourceInputs["tunnelInterfaceAllowOspfVariable"] = args ? args.tunnelInterfaceAllowOspfVariable : undefined;
            resourceInputs["tunnelInterfaceAllowSnmp"] = args ? args.tunnelInterfaceAllowSnmp : undefined;
            resourceInputs["tunnelInterfaceAllowSnmpVariable"] = args ? args.tunnelInterfaceAllowSnmpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowSsh"] = args ? args.tunnelInterfaceAllowSsh : undefined;
            resourceInputs["tunnelInterfaceAllowSshVariable"] = args ? args.tunnelInterfaceAllowSshVariable : undefined;
            resourceInputs["tunnelInterfaceAllowStun"] = args ? args.tunnelInterfaceAllowStun : undefined;
            resourceInputs["tunnelInterfaceAllowStunVariable"] = args ? args.tunnelInterfaceAllowStunVariable : undefined;
            resourceInputs["tunnelInterfaceBindLoopbackTunnel"] = args ? args.tunnelInterfaceBindLoopbackTunnel : undefined;
            resourceInputs["tunnelInterfaceBindLoopbackTunnelVariable"] = args ? args.tunnelInterfaceBindLoopbackTunnelVariable : undefined;
            resourceInputs["tunnelInterfaceBorder"] = args ? args.tunnelInterfaceBorder : undefined;
            resourceInputs["tunnelInterfaceBorderVariable"] = args ? args.tunnelInterfaceBorderVariable : undefined;
            resourceInputs["tunnelInterfaceCarrier"] = args ? args.tunnelInterfaceCarrier : undefined;
            resourceInputs["tunnelInterfaceCarrierVariable"] = args ? args.tunnelInterfaceCarrierVariable : undefined;
            resourceInputs["tunnelInterfaceClearDontFragment"] = args ? args.tunnelInterfaceClearDontFragment : undefined;
            resourceInputs["tunnelInterfaceClearDontFragmentVariable"] = args ? args.tunnelInterfaceClearDontFragmentVariable : undefined;
            resourceInputs["tunnelInterfaceColor"] = args ? args.tunnelInterfaceColor : undefined;
            resourceInputs["tunnelInterfaceColorRestrict"] = args ? args.tunnelInterfaceColorRestrict : undefined;
            resourceInputs["tunnelInterfaceColorRestrictVariable"] = args ? args.tunnelInterfaceColorRestrictVariable : undefined;
            resourceInputs["tunnelInterfaceColorVariable"] = args ? args.tunnelInterfaceColorVariable : undefined;
            resourceInputs["tunnelInterfaceControlConnections"] = args ? args.tunnelInterfaceControlConnections : undefined;
            resourceInputs["tunnelInterfaceControlConnectionsVariable"] = args ? args.tunnelInterfaceControlConnectionsVariable : undefined;
            resourceInputs["tunnelInterfaceEncapsulations"] = args ? args.tunnelInterfaceEncapsulations : undefined;
            resourceInputs["tunnelInterfaceExcludeControllerGroupListVariable"] = args ? args.tunnelInterfaceExcludeControllerGroupListVariable : undefined;
            resourceInputs["tunnelInterfaceExcludeControllerGroupLists"] = args ? args.tunnelInterfaceExcludeControllerGroupLists : undefined;
            resourceInputs["tunnelInterfaceGreTunnelDestinationIp"] = args ? args.tunnelInterfaceGreTunnelDestinationIp : undefined;
            resourceInputs["tunnelInterfaceGreTunnelDestinationIpVariable"] = args ? args.tunnelInterfaceGreTunnelDestinationIpVariable : undefined;
            resourceInputs["tunnelInterfaceGroups"] = args ? args.tunnelInterfaceGroups : undefined;
            resourceInputs["tunnelInterfaceGroupsVariable"] = args ? args.tunnelInterfaceGroupsVariable : undefined;
            resourceInputs["tunnelInterfaceHelloInterval"] = args ? args.tunnelInterfaceHelloInterval : undefined;
            resourceInputs["tunnelInterfaceHelloIntervalVariable"] = args ? args.tunnelInterfaceHelloIntervalVariable : undefined;
            resourceInputs["tunnelInterfaceHelloTolerance"] = args ? args.tunnelInterfaceHelloTolerance : undefined;
            resourceInputs["tunnelInterfaceHelloToleranceVariable"] = args ? args.tunnelInterfaceHelloToleranceVariable : undefined;
            resourceInputs["tunnelInterfaceLastResortCircuit"] = args ? args.tunnelInterfaceLastResortCircuit : undefined;
            resourceInputs["tunnelInterfaceLastResortCircuitVariable"] = args ? args.tunnelInterfaceLastResortCircuitVariable : undefined;
            resourceInputs["tunnelInterfaceLowBandwidthLink"] = args ? args.tunnelInterfaceLowBandwidthLink : undefined;
            resourceInputs["tunnelInterfaceLowBandwidthLinkVariable"] = args ? args.tunnelInterfaceLowBandwidthLinkVariable : undefined;
            resourceInputs["tunnelInterfaceMaxControlConnections"] = args ? args.tunnelInterfaceMaxControlConnections : undefined;
            resourceInputs["tunnelInterfaceMaxControlConnectionsVariable"] = args ? args.tunnelInterfaceMaxControlConnectionsVariable : undefined;
            resourceInputs["tunnelInterfaceNatRefreshInterval"] = args ? args.tunnelInterfaceNatRefreshInterval : undefined;
            resourceInputs["tunnelInterfaceNatRefreshIntervalVariable"] = args ? args.tunnelInterfaceNatRefreshIntervalVariable : undefined;
            resourceInputs["tunnelInterfaceNetworkBroadcast"] = args ? args.tunnelInterfaceNetworkBroadcast : undefined;
            resourceInputs["tunnelInterfaceNetworkBroadcastVariable"] = args ? args.tunnelInterfaceNetworkBroadcastVariable : undefined;
            resourceInputs["tunnelInterfacePortHop"] = args ? args.tunnelInterfacePortHop : undefined;
            resourceInputs["tunnelInterfacePortHopVariable"] = args ? args.tunnelInterfacePortHopVariable : undefined;
            resourceInputs["tunnelInterfacePropagateSgt"] = args ? args.tunnelInterfacePropagateSgt : undefined;
            resourceInputs["tunnelInterfacePropagateSgtVariable"] = args ? args.tunnelInterfacePropagateSgtVariable : undefined;
            resourceInputs["tunnelInterfaceTunnelTcpMss"] = args ? args.tunnelInterfaceTunnelTcpMss : undefined;
            resourceInputs["tunnelInterfaceTunnelTcpMssVariable"] = args ? args.tunnelInterfaceTunnelTcpMssVariable : undefined;
            resourceInputs["tunnelInterfaceVbondAsStunServer"] = args ? args.tunnelInterfaceVbondAsStunServer : undefined;
            resourceInputs["tunnelInterfaceVbondAsStunServerVariable"] = args ? args.tunnelInterfaceVbondAsStunServerVariable : undefined;
            resourceInputs["tunnelInterfaceVmanageConnectionPreference"] = args ? args.tunnelInterfaceVmanageConnectionPreference : undefined;
            resourceInputs["tunnelInterfaceVmanageConnectionPreferenceVariable"] = args ? args.tunnelInterfaceVmanageConnectionPreferenceVariable : undefined;
            resourceInputs["tunnelQosMode"] = args ? args.tunnelQosMode : undefined;
            resourceInputs["tunnelQosModeVariable"] = args ? args.tunnelQosModeVariable : undefined;
            resourceInputs["udpTimeout"] = args ? args.udpTimeout : undefined;
            resourceInputs["udpTimeoutVariable"] = args ? args.udpTimeoutVariable : undefined;
            resourceInputs["templateType"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CiscoVpnInterfaceFeatureTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CiscoVpnInterfaceFeatureTemplate resources.
 */
export interface CiscoVpnInterfaceFeatureTemplateState {
    /**
     * Apply ACL
     */
    accessLists?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateAccessList>[]>;
    /**
     * Assign IPv4 address
     */
    address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    addressVariable?: pulumi.Input<string>;
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
     */
    arpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    arpTimeoutVariable?: pulumi.Input<string>;
    /**
     * Interface auto detect bandwidth - Default value: `false`
     */
    autoBandwidthDetect?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    autoBandwidthDetectVariable?: pulumi.Input<string>;
    /**
     * Link autonegotiation
     */
    autonegotiate?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    autonegotiateVariable?: pulumi.Input<string>;
    /**
     * Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     */
    bandwidthDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    bandwidthDownstreamVariable?: pulumi.Input<string>;
    /**
     * Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     */
    bandwidthUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    bandwidthUpstreamVariable?: pulumi.Input<string>;
    /**
     * Block packets originating from IP address that is not from this source - Default value: `false`
     */
    blockNonSourceIp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    blockNonSourceIpVariable?: pulumi.Input<string>;
    /**
     * Enable core region - Choices: `core`, `core-shared` - Default value: `core`
     */
    coreRegion?: pulumi.Input<string>;
    /**
     * Variable name
     */
    coreRegionVariable?: pulumi.Input<string>;
    /**
     * The description of the feature template
     */
    description?: pulumi.Input<string>;
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable DHCP - Default value: `false`
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * Set administrative distance for DHCP default route - Range: `1`-`65536` - Default value: `1`
     */
    dhcpDistance?: pulumi.Input<number>;
    /**
     * Variable name
     */
    dhcpDistanceVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    dhcpVariable?: pulumi.Input<string>;
    /**
     * Enable DHCPv6 - Default value: `false`
     */
    dhcpv6?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    dhcpv6Variable?: pulumi.Input<string>;
    /**
     * Duplex mode - Choices: `full`, `half`, `auto`
     */
    duplex?: pulumi.Input<string>;
    /**
     * Variable name
     */
    duplexVariable?: pulumi.Input<string>;
    /**
     * Enable core region - Default value: `false`
     */
    enableCoreRegion?: pulumi.Input<boolean>;
    /**
     * Enables the interface for CTS SGT authorization and forwarding. - Default value: `false`
     */
    enableSgt?: pulumi.Input<boolean>;
    /**
     * Extend remote TLOC over a GRE tunnel to a local WAN interface
     */
    greTunnelSourceIp?: pulumi.Input<string>;
    /**
     * Variable name
     */
    greTunnelSourceIpVariable?: pulumi.Input<string>;
    /**
     * Extend remote TLOC over a GRE tunnel to a local WAN interface
     */
    greTunnelXconnect?: pulumi.Input<string>;
    /**
     * Variable name
     */
    greTunnelXconnectVariable?: pulumi.Input<string>;
    /**
     * Set this option to disable the icmp/icmpv6 redirect packets - Default value: `true`
     */
    icmpRedirectDisable?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    icmpRedirectDisableVariable?: pulumi.Input<string>;
    /**
     * Interface description
     */
    interfaceDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceDescriptionVariable?: pulumi.Input<string>;
    /**
     * Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
     * Default value: `1500`
     */
    interfaceMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    interfaceMtuVariable?: pulumi.Input<string>;
    /**
     * Interface name: ge0/<0-..> or ge0/<0-..>.vlanid or irb<bridgeid:1-63> or loopback<string> or natpool-<1..31> when
     * present
     */
    interfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceNameVariable?: pulumi.Input<string>;
    /**
     * IP Directed-Broadcast - Default value: `false`
     */
    ipDirectedBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipDirectedBroadcastVariable?: pulumi.Input<string>;
    /**
     * IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
     * <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * Iperf server for auto bandwidth detect
     */
    iperfServer?: pulumi.Input<string>;
    /**
     * Variable name
     */
    iperfServerVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4DhcpHelperVariable?: pulumi.Input<string>;
    /**
     * List of DHCP IPv4 helper addresses
     */
    ipv4DhcpHelpers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Assign secondary IP addresses
     */
    ipv4SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateIpv4SecondaryAddress>[]>;
    /**
     * Enable VRRP
     */
    ipv4Vrrps?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateIpv4Vrrp>[]>;
    /**
     * Apply IPv6 access list
     */
    ipv6AccessLists?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateIpv6AccessList>[]>;
    /**
     * Assign IPv6 address
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv6AddressVariable?: pulumi.Input<string>;
    /**
     * DHCPv6 Helper
     */
    ipv6DhcpHelpers?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateIpv6DhcpHelper>[]>;
    /**
     * NAT64 on this interface - Default value: `false`
     */
    ipv6Nat?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipv6NatVariable?: pulumi.Input<string>;
    /**
     * Assign secondary IPv6 addresses
     */
    ipv6SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateIpv6SecondaryAddress>[]>;
    /**
     * Enable VRRP
     */
    ipv6Vrrps?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateIpv6Vrrp>[]>;
    /**
     * Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
     */
    loadInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    loadIntervalVariable?: pulumi.Input<string>;
    /**
     * Set MAC-layer address
     */
    macAddress?: pulumi.Input<string>;
    /**
     * Variable name
     */
    macAddressVariable?: pulumi.Input<string>;
    /**
     * Media type - Choices: `auto-select`, `rj45`, `sfp`
     */
    mediaType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    mediaTypeVariable?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Network Address Translation on this interface - Default value: `false`
     */
    nat?: pulumi.Input<boolean>;
    /**
     * NAT64 on this interface - Default value: `false`
     */
    nat64Interface?: pulumi.Input<boolean>;
    /**
     * NAT66 on this interface - Default value: `false`
     */
    nat66Interface?: pulumi.Input<boolean>;
    /**
     * Configure NAT Inside Loopback Interface
     */
    natInsideSourceLoopbackInterface?: pulumi.Input<string>;
    /**
     * Variable name
     */
    natInsideSourceLoopbackInterfaceVariable?: pulumi.Input<string>;
    /**
     * Enable port translation(PAT) - Default value: `true`
     */
    natOverload?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    natOverloadVariable?: pulumi.Input<string>;
    /**
     * Ending IP address of NAT Pool Prefix Length
     */
    natPoolPrefixLength?: pulumi.Input<number>;
    /**
     * Variable name
     */
    natPoolPrefixLengthVariable?: pulumi.Input<string>;
    /**
     * Ending IP address of NAT pool range
     */
    natPoolRangeEnd?: pulumi.Input<string>;
    /**
     * Variable name
     */
    natPoolRangeEndVariable?: pulumi.Input<string>;
    /**
     * Starting IP address of NAT pool range
     */
    natPoolRangeStart?: pulumi.Input<string>;
    /**
     * Variable name
     */
    natPoolRangeStartVariable?: pulumi.Input<string>;
    /**
     * NAT type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
     */
    natType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    natTypeVariable?: pulumi.Input<string>;
    /**
     * Configure interface as Power-over-Ethernet source - Default value: `false`
     */
    poe?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    poeVariable?: pulumi.Input<string>;
    /**
     * Enable/Disable CTS SGT propagation on an interface. - Default value: `true`
     */
    propagateSgt?: pulumi.Input<boolean>;
    /**
     * Adaptive QoS default downstream bandwidth - Range: `8`-`100000000`
     */
    qosAdaptiveBandwidthDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveBandwidthDownstreamVariable?: pulumi.Input<string>;
    /**
     * Adaptive QoS default upstream bandwidth - Range: `8`-`100000000`
     */
    qosAdaptiveBandwidthUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveBandwidthUpstreamVariable?: pulumi.Input<string>;
    /**
     * Downstream max bandwidth limit - Range: `8`-`100000000`
     */
    qosAdaptiveMaxDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMaxDownstreamVariable?: pulumi.Input<string>;
    /**
     * Upstream max bandwidth limit - Range: `8`-`100000000`
     */
    qosAdaptiveMaxUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMaxUpstreamVariable?: pulumi.Input<string>;
    /**
     * Downstream min bandwidth limit - Range: `8`-`100000000`
     */
    qosAdaptiveMinDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMinDownstreamVariable?: pulumi.Input<string>;
    /**
     * Upstream min bandwidth limit - Range: `8`-`100000000`
     */
    qosAdaptiveMinUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMinUpstreamVariable?: pulumi.Input<string>;
    /**
     * Periodic timer for adaptive QoS in minutes - Range: `1`-`720` - Default value: `15`
     */
    qosAdaptivePeriod?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptivePeriodVariable?: pulumi.Input<string>;
    /**
     * Name of QoS map
     */
    qosMap?: pulumi.Input<string>;
    /**
     * Variable name
     */
    qosMapVariable?: pulumi.Input<string>;
    /**
     * Name of VPN QoS map
     */
    qosMapVpn?: pulumi.Input<string>;
    /**
     * Variable name
     */
    qosMapVpnVariable?: pulumi.Input<string>;
    /**
     * Name of rewrite rule
     */
    rewriteRuleName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    rewriteRuleNameVariable?: pulumi.Input<string>;
    /**
     * Enable secondary region - Choices: `off`, `secondary-only`, `secondary-shared` - Default value: `off`
     */
    secondaryRegion?: pulumi.Input<string>;
    /**
     * Variable name
     */
    secondaryRegionVariable?: pulumi.Input<string>;
    /**
     * Enables the interface for CTS SGT authorization and forwarding. - Default value: `false`
     */
    sgtEnforcement?: pulumi.Input<boolean>;
    /**
     * SGT value between 2 and 65519. - Range: `2`-`65519`
     */
    sgtEnforcementSgt?: pulumi.Input<number>;
    /**
     * Variable name
     */
    sgtEnforcementSgtVariable?: pulumi.Input<string>;
    /**
     * 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
     */
    shapingRate?: pulumi.Input<number>;
    /**
     * Variable name
     */
    shapingRateVariable?: pulumi.Input<string>;
    /**
     * Administrative state - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
     */
    speed?: pulumi.Input<string>;
    /**
     * Variable name
     */
    speedVariable?: pulumi.Input<string>;
    /**
     * Configure static ARP entries
     */
    staticArps?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateStaticArp>[]>;
    /**
     * static NAT
     */
    staticNat66Entries?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateStaticNat66Entry>[]>;
    /**
     * Configure static NAT entries
     */
    staticNatEntries?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateStaticNatEntry>[]>;
    /**
     * Configure Port Forward entries
     */
    staticPortForwardEntries?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateStaticPortForwardEntry>[]>;
    /**
     * SGT value between 2 and 65519. - Range: `2`-`65519`
     */
    staticSgt?: pulumi.Input<number>;
    /**
     * Indicates that the interface is trustworthy for CTS. - Default value: `false`
     */
    staticSgtTrusted?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    staticSgtVariable?: pulumi.Input<string>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    tcpMssAdjust?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssAdjustVariable?: pulumi.Input<string>;
    /**
     * Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
     */
    tcpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpTimeoutVariable?: pulumi.Input<string>;
    /**
     * The template type
     */
    templateType?: pulumi.Input<string>;
    /**
     * Extends a local TLOC to a remote node only for vpn 0
     */
    tlocExtension?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tlocExtensionVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    trackerVariable?: pulumi.Input<string>;
    /**
     * Enable tracker for this interface
     */
    trackers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tunnels Bandwidth Percent - Range: `1`-`99` - Default value: `50`
     */
    tunnelBandwidth?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelBandwidthVariable?: pulumi.Input<string>;
    /**
     * Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
     */
    tunnelInterfaceAllowAll?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowAllVariable?: pulumi.Input<string>;
    /**
     * Allow/deny BGP - Default value: `false`
     */
    tunnelInterfaceAllowBgp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowBgpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny DHCP - Default value: `true`
     */
    tunnelInterfaceAllowDhcp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowDhcpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny DNS - Default value: `true`
     */
    tunnelInterfaceAllowDns?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowDnsVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny Https - Default value: `true`
     */
    tunnelInterfaceAllowHttps?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowHttpsVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny ICMP - Default value: `true`
     */
    tunnelInterfaceAllowIcmp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowIcmpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny NETCONF - Default value: `false`
     */
    tunnelInterfaceAllowNetconf?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowNetconfVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny NTP - Default value: `false`
     */
    tunnelInterfaceAllowNtp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowNtpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny OSPF - Default value: `false`
     */
    tunnelInterfaceAllowOspf?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowOspfVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny SNMP - Default value: `false`
     */
    tunnelInterfaceAllowSnmp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowSnmpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny SSH - Default value: `false`
     */
    tunnelInterfaceAllowSsh?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowSshVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny STUN - Default value: `false`
     */
    tunnelInterfaceAllowStun?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowStunVariable?: pulumi.Input<string>;
    /**
     * Bind loopback tunnel interface to a physical interface
     */
    tunnelInterfaceBindLoopbackTunnel?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceBindLoopbackTunnelVariable?: pulumi.Input<string>;
    /**
     * Set TLOC as border TLOC - Default value: `false`
     */
    tunnelInterfaceBorder?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceBorderVariable?: pulumi.Input<string>;
    /**
     * Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
     * `carrier7`, `carrier8` - Default value: `default`
     */
    tunnelInterfaceCarrier?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceCarrierVariable?: pulumi.Input<string>;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     */
    tunnelInterfaceClearDontFragment?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceClearDontFragmentVariable?: pulumi.Input<string>;
    /**
     * Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
     * `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
     * `private4`, `private5`, `private6` - Default value: `default`
     */
    tunnelInterfaceColor?: pulumi.Input<string>;
    /**
     * Restrict this TLOC behavior - Default value: `false`
     */
    tunnelInterfaceColorRestrict?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceColorRestrictVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceColorVariable?: pulumi.Input<string>;
    /**
     * Allow Control Connection - Default value: `true`
     */
    tunnelInterfaceControlConnections?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceControlConnectionsVariable?: pulumi.Input<string>;
    /**
     * Encapsulation for TLOC
     */
    tunnelInterfaceEncapsulations?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateTunnelInterfaceEncapsulation>[]>;
    /**
     * Variable name
     */
    tunnelInterfaceExcludeControllerGroupListVariable?: pulumi.Input<string>;
    /**
     * Exclude the following controller groups defined in this list
     */
    tunnelInterfaceExcludeControllerGroupLists?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Extend the TLOC to a remote node over GRE tunnel
     */
    tunnelInterfaceGreTunnelDestinationIp?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceGreTunnelDestinationIpVariable?: pulumi.Input<string>;
    /**
     * List of groups
     */
    tunnelInterfaceGroups?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Variable name
     */
    tunnelInterfaceGroupsVariable?: pulumi.Input<string>;
    /**
     * Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
     */
    tunnelInterfaceHelloInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceHelloIntervalVariable?: pulumi.Input<string>;
    /**
     * Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
     */
    tunnelInterfaceHelloTolerance?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceHelloToleranceVariable?: pulumi.Input<string>;
    /**
     * Set TLOC as last resort - Default value: `false`
     */
    tunnelInterfaceLastResortCircuit?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceLastResortCircuitVariable?: pulumi.Input<string>;
    /**
     * Set the interface as a low-bandwidth circuit - Default value: `false`
     */
    tunnelInterfaceLowBandwidthLink?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceLowBandwidthLinkVariable?: pulumi.Input<string>;
    /**
     * Set the maximum number of control connections for this TLOC - Range: `0`-`100`
     */
    tunnelInterfaceMaxControlConnections?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceMaxControlConnectionsVariable?: pulumi.Input<string>;
    /**
     * Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
     */
    tunnelInterfaceNatRefreshInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceNatRefreshIntervalVariable?: pulumi.Input<string>;
    /**
     * Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
     */
    tunnelInterfaceNetworkBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceNetworkBroadcastVariable?: pulumi.Input<string>;
    /**
     * Disallow port hopping on the tunnel interface - Default value: `true`
     */
    tunnelInterfacePortHop?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfacePortHopVariable?: pulumi.Input<string>;
    /**
     * CTS SGT Propagation configuration - Default value: `false`
     */
    tunnelInterfacePropagateSgt?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfacePropagateSgtVariable?: pulumi.Input<string>;
    /**
     * Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    tunnelInterfaceTunnelTcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceTunnelTcpMssVariable?: pulumi.Input<string>;
    /**
     * Put this wan interface in STUN mode only - Default value: `false`
     */
    tunnelInterfaceVbondAsStunServer?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceVbondAsStunServerVariable?: pulumi.Input<string>;
    /**
     * Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
     */
    tunnelInterfaceVmanageConnectionPreference?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceVmanageConnectionPreferenceVariable?: pulumi.Input<string>;
    /**
     * Set tunnel QoS mode - Choices: `hub`, `spoke`
     */
    tunnelQosMode?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelQosModeVariable?: pulumi.Input<string>;
    /**
     * Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
     */
    udpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    udpTimeoutVariable?: pulumi.Input<string>;
    /**
     * The version of the feature template
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CiscoVpnInterfaceFeatureTemplate resource.
 */
export interface CiscoVpnInterfaceFeatureTemplateArgs {
    /**
     * Apply ACL
     */
    accessLists?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateAccessList>[]>;
    /**
     * Assign IPv4 address
     */
    address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    addressVariable?: pulumi.Input<string>;
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
     */
    arpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    arpTimeoutVariable?: pulumi.Input<string>;
    /**
     * Interface auto detect bandwidth - Default value: `false`
     */
    autoBandwidthDetect?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    autoBandwidthDetectVariable?: pulumi.Input<string>;
    /**
     * Link autonegotiation
     */
    autonegotiate?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    autonegotiateVariable?: pulumi.Input<string>;
    /**
     * Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     */
    bandwidthDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    bandwidthDownstreamVariable?: pulumi.Input<string>;
    /**
     * Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     */
    bandwidthUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    bandwidthUpstreamVariable?: pulumi.Input<string>;
    /**
     * Block packets originating from IP address that is not from this source - Default value: `false`
     */
    blockNonSourceIp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    blockNonSourceIpVariable?: pulumi.Input<string>;
    /**
     * Enable core region - Choices: `core`, `core-shared` - Default value: `core`
     */
    coreRegion?: pulumi.Input<string>;
    /**
     * Variable name
     */
    coreRegionVariable?: pulumi.Input<string>;
    /**
     * The description of the feature template
     */
    description: pulumi.Input<string>;
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable DHCP - Default value: `false`
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * Set administrative distance for DHCP default route - Range: `1`-`65536` - Default value: `1`
     */
    dhcpDistance?: pulumi.Input<number>;
    /**
     * Variable name
     */
    dhcpDistanceVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    dhcpVariable?: pulumi.Input<string>;
    /**
     * Enable DHCPv6 - Default value: `false`
     */
    dhcpv6?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    dhcpv6Variable?: pulumi.Input<string>;
    /**
     * Duplex mode - Choices: `full`, `half`, `auto`
     */
    duplex?: pulumi.Input<string>;
    /**
     * Variable name
     */
    duplexVariable?: pulumi.Input<string>;
    /**
     * Enable core region - Default value: `false`
     */
    enableCoreRegion?: pulumi.Input<boolean>;
    /**
     * Enables the interface for CTS SGT authorization and forwarding. - Default value: `false`
     */
    enableSgt?: pulumi.Input<boolean>;
    /**
     * Extend remote TLOC over a GRE tunnel to a local WAN interface
     */
    greTunnelSourceIp?: pulumi.Input<string>;
    /**
     * Variable name
     */
    greTunnelSourceIpVariable?: pulumi.Input<string>;
    /**
     * Extend remote TLOC over a GRE tunnel to a local WAN interface
     */
    greTunnelXconnect?: pulumi.Input<string>;
    /**
     * Variable name
     */
    greTunnelXconnectVariable?: pulumi.Input<string>;
    /**
     * Set this option to disable the icmp/icmpv6 redirect packets - Default value: `true`
     */
    icmpRedirectDisable?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    icmpRedirectDisableVariable?: pulumi.Input<string>;
    /**
     * Interface description
     */
    interfaceDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceDescriptionVariable?: pulumi.Input<string>;
    /**
     * Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
     * Default value: `1500`
     */
    interfaceMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    interfaceMtuVariable?: pulumi.Input<string>;
    /**
     * Interface name: ge0/<0-..> or ge0/<0-..>.vlanid or irb<bridgeid:1-63> or loopback<string> or natpool-<1..31> when
     * present
     */
    interfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceNameVariable?: pulumi.Input<string>;
    /**
     * IP Directed-Broadcast - Default value: `false`
     */
    ipDirectedBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipDirectedBroadcastVariable?: pulumi.Input<string>;
    /**
     * IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
     * <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * Iperf server for auto bandwidth detect
     */
    iperfServer?: pulumi.Input<string>;
    /**
     * Variable name
     */
    iperfServerVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4DhcpHelperVariable?: pulumi.Input<string>;
    /**
     * List of DHCP IPv4 helper addresses
     */
    ipv4DhcpHelpers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Assign secondary IP addresses
     */
    ipv4SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateIpv4SecondaryAddress>[]>;
    /**
     * Enable VRRP
     */
    ipv4Vrrps?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateIpv4Vrrp>[]>;
    /**
     * Apply IPv6 access list
     */
    ipv6AccessLists?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateIpv6AccessList>[]>;
    /**
     * Assign IPv6 address
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv6AddressVariable?: pulumi.Input<string>;
    /**
     * DHCPv6 Helper
     */
    ipv6DhcpHelpers?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateIpv6DhcpHelper>[]>;
    /**
     * NAT64 on this interface - Default value: `false`
     */
    ipv6Nat?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipv6NatVariable?: pulumi.Input<string>;
    /**
     * Assign secondary IPv6 addresses
     */
    ipv6SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateIpv6SecondaryAddress>[]>;
    /**
     * Enable VRRP
     */
    ipv6Vrrps?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateIpv6Vrrp>[]>;
    /**
     * Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
     */
    loadInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    loadIntervalVariable?: pulumi.Input<string>;
    /**
     * Set MAC-layer address
     */
    macAddress?: pulumi.Input<string>;
    /**
     * Variable name
     */
    macAddressVariable?: pulumi.Input<string>;
    /**
     * Media type - Choices: `auto-select`, `rj45`, `sfp`
     */
    mediaType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    mediaTypeVariable?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Network Address Translation on this interface - Default value: `false`
     */
    nat?: pulumi.Input<boolean>;
    /**
     * NAT64 on this interface - Default value: `false`
     */
    nat64Interface?: pulumi.Input<boolean>;
    /**
     * NAT66 on this interface - Default value: `false`
     */
    nat66Interface?: pulumi.Input<boolean>;
    /**
     * Configure NAT Inside Loopback Interface
     */
    natInsideSourceLoopbackInterface?: pulumi.Input<string>;
    /**
     * Variable name
     */
    natInsideSourceLoopbackInterfaceVariable?: pulumi.Input<string>;
    /**
     * Enable port translation(PAT) - Default value: `true`
     */
    natOverload?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    natOverloadVariable?: pulumi.Input<string>;
    /**
     * Ending IP address of NAT Pool Prefix Length
     */
    natPoolPrefixLength?: pulumi.Input<number>;
    /**
     * Variable name
     */
    natPoolPrefixLengthVariable?: pulumi.Input<string>;
    /**
     * Ending IP address of NAT pool range
     */
    natPoolRangeEnd?: pulumi.Input<string>;
    /**
     * Variable name
     */
    natPoolRangeEndVariable?: pulumi.Input<string>;
    /**
     * Starting IP address of NAT pool range
     */
    natPoolRangeStart?: pulumi.Input<string>;
    /**
     * Variable name
     */
    natPoolRangeStartVariable?: pulumi.Input<string>;
    /**
     * NAT type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
     */
    natType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    natTypeVariable?: pulumi.Input<string>;
    /**
     * Configure interface as Power-over-Ethernet source - Default value: `false`
     */
    poe?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    poeVariable?: pulumi.Input<string>;
    /**
     * Enable/Disable CTS SGT propagation on an interface. - Default value: `true`
     */
    propagateSgt?: pulumi.Input<boolean>;
    /**
     * Adaptive QoS default downstream bandwidth - Range: `8`-`100000000`
     */
    qosAdaptiveBandwidthDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveBandwidthDownstreamVariable?: pulumi.Input<string>;
    /**
     * Adaptive QoS default upstream bandwidth - Range: `8`-`100000000`
     */
    qosAdaptiveBandwidthUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveBandwidthUpstreamVariable?: pulumi.Input<string>;
    /**
     * Downstream max bandwidth limit - Range: `8`-`100000000`
     */
    qosAdaptiveMaxDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMaxDownstreamVariable?: pulumi.Input<string>;
    /**
     * Upstream max bandwidth limit - Range: `8`-`100000000`
     */
    qosAdaptiveMaxUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMaxUpstreamVariable?: pulumi.Input<string>;
    /**
     * Downstream min bandwidth limit - Range: `8`-`100000000`
     */
    qosAdaptiveMinDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMinDownstreamVariable?: pulumi.Input<string>;
    /**
     * Upstream min bandwidth limit - Range: `8`-`100000000`
     */
    qosAdaptiveMinUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMinUpstreamVariable?: pulumi.Input<string>;
    /**
     * Periodic timer for adaptive QoS in minutes - Range: `1`-`720` - Default value: `15`
     */
    qosAdaptivePeriod?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptivePeriodVariable?: pulumi.Input<string>;
    /**
     * Name of QoS map
     */
    qosMap?: pulumi.Input<string>;
    /**
     * Variable name
     */
    qosMapVariable?: pulumi.Input<string>;
    /**
     * Name of VPN QoS map
     */
    qosMapVpn?: pulumi.Input<string>;
    /**
     * Variable name
     */
    qosMapVpnVariable?: pulumi.Input<string>;
    /**
     * Name of rewrite rule
     */
    rewriteRuleName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    rewriteRuleNameVariable?: pulumi.Input<string>;
    /**
     * Enable secondary region - Choices: `off`, `secondary-only`, `secondary-shared` - Default value: `off`
     */
    secondaryRegion?: pulumi.Input<string>;
    /**
     * Variable name
     */
    secondaryRegionVariable?: pulumi.Input<string>;
    /**
     * Enables the interface for CTS SGT authorization and forwarding. - Default value: `false`
     */
    sgtEnforcement?: pulumi.Input<boolean>;
    /**
     * SGT value between 2 and 65519. - Range: `2`-`65519`
     */
    sgtEnforcementSgt?: pulumi.Input<number>;
    /**
     * Variable name
     */
    sgtEnforcementSgtVariable?: pulumi.Input<string>;
    /**
     * 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
     */
    shapingRate?: pulumi.Input<number>;
    /**
     * Variable name
     */
    shapingRateVariable?: pulumi.Input<string>;
    /**
     * Administrative state - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
     */
    speed?: pulumi.Input<string>;
    /**
     * Variable name
     */
    speedVariable?: pulumi.Input<string>;
    /**
     * Configure static ARP entries
     */
    staticArps?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateStaticArp>[]>;
    /**
     * static NAT
     */
    staticNat66Entries?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateStaticNat66Entry>[]>;
    /**
     * Configure static NAT entries
     */
    staticNatEntries?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateStaticNatEntry>[]>;
    /**
     * Configure Port Forward entries
     */
    staticPortForwardEntries?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateStaticPortForwardEntry>[]>;
    /**
     * SGT value between 2 and 65519. - Range: `2`-`65519`
     */
    staticSgt?: pulumi.Input<number>;
    /**
     * Indicates that the interface is trustworthy for CTS. - Default value: `false`
     */
    staticSgtTrusted?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    staticSgtVariable?: pulumi.Input<string>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    tcpMssAdjust?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssAdjustVariable?: pulumi.Input<string>;
    /**
     * Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
     */
    tcpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpTimeoutVariable?: pulumi.Input<string>;
    /**
     * Extends a local TLOC to a remote node only for vpn 0
     */
    tlocExtension?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tlocExtensionVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    trackerVariable?: pulumi.Input<string>;
    /**
     * Enable tracker for this interface
     */
    trackers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tunnels Bandwidth Percent - Range: `1`-`99` - Default value: `50`
     */
    tunnelBandwidth?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelBandwidthVariable?: pulumi.Input<string>;
    /**
     * Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
     */
    tunnelInterfaceAllowAll?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowAllVariable?: pulumi.Input<string>;
    /**
     * Allow/deny BGP - Default value: `false`
     */
    tunnelInterfaceAllowBgp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowBgpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny DHCP - Default value: `true`
     */
    tunnelInterfaceAllowDhcp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowDhcpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny DNS - Default value: `true`
     */
    tunnelInterfaceAllowDns?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowDnsVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny Https - Default value: `true`
     */
    tunnelInterfaceAllowHttps?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowHttpsVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny ICMP - Default value: `true`
     */
    tunnelInterfaceAllowIcmp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowIcmpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny NETCONF - Default value: `false`
     */
    tunnelInterfaceAllowNetconf?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowNetconfVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny NTP - Default value: `false`
     */
    tunnelInterfaceAllowNtp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowNtpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny OSPF - Default value: `false`
     */
    tunnelInterfaceAllowOspf?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowOspfVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny SNMP - Default value: `false`
     */
    tunnelInterfaceAllowSnmp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowSnmpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny SSH - Default value: `false`
     */
    tunnelInterfaceAllowSsh?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowSshVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny STUN - Default value: `false`
     */
    tunnelInterfaceAllowStun?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowStunVariable?: pulumi.Input<string>;
    /**
     * Bind loopback tunnel interface to a physical interface
     */
    tunnelInterfaceBindLoopbackTunnel?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceBindLoopbackTunnelVariable?: pulumi.Input<string>;
    /**
     * Set TLOC as border TLOC - Default value: `false`
     */
    tunnelInterfaceBorder?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceBorderVariable?: pulumi.Input<string>;
    /**
     * Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
     * `carrier7`, `carrier8` - Default value: `default`
     */
    tunnelInterfaceCarrier?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceCarrierVariable?: pulumi.Input<string>;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     */
    tunnelInterfaceClearDontFragment?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceClearDontFragmentVariable?: pulumi.Input<string>;
    /**
     * Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
     * `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
     * `private4`, `private5`, `private6` - Default value: `default`
     */
    tunnelInterfaceColor?: pulumi.Input<string>;
    /**
     * Restrict this TLOC behavior - Default value: `false`
     */
    tunnelInterfaceColorRestrict?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceColorRestrictVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceColorVariable?: pulumi.Input<string>;
    /**
     * Allow Control Connection - Default value: `true`
     */
    tunnelInterfaceControlConnections?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceControlConnectionsVariable?: pulumi.Input<string>;
    /**
     * Encapsulation for TLOC
     */
    tunnelInterfaceEncapsulations?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceFeatureTemplateTunnelInterfaceEncapsulation>[]>;
    /**
     * Variable name
     */
    tunnelInterfaceExcludeControllerGroupListVariable?: pulumi.Input<string>;
    /**
     * Exclude the following controller groups defined in this list
     */
    tunnelInterfaceExcludeControllerGroupLists?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Extend the TLOC to a remote node over GRE tunnel
     */
    tunnelInterfaceGreTunnelDestinationIp?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceGreTunnelDestinationIpVariable?: pulumi.Input<string>;
    /**
     * List of groups
     */
    tunnelInterfaceGroups?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Variable name
     */
    tunnelInterfaceGroupsVariable?: pulumi.Input<string>;
    /**
     * Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
     */
    tunnelInterfaceHelloInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceHelloIntervalVariable?: pulumi.Input<string>;
    /**
     * Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
     */
    tunnelInterfaceHelloTolerance?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceHelloToleranceVariable?: pulumi.Input<string>;
    /**
     * Set TLOC as last resort - Default value: `false`
     */
    tunnelInterfaceLastResortCircuit?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceLastResortCircuitVariable?: pulumi.Input<string>;
    /**
     * Set the interface as a low-bandwidth circuit - Default value: `false`
     */
    tunnelInterfaceLowBandwidthLink?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceLowBandwidthLinkVariable?: pulumi.Input<string>;
    /**
     * Set the maximum number of control connections for this TLOC - Range: `0`-`100`
     */
    tunnelInterfaceMaxControlConnections?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceMaxControlConnectionsVariable?: pulumi.Input<string>;
    /**
     * Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
     */
    tunnelInterfaceNatRefreshInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceNatRefreshIntervalVariable?: pulumi.Input<string>;
    /**
     * Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
     */
    tunnelInterfaceNetworkBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceNetworkBroadcastVariable?: pulumi.Input<string>;
    /**
     * Disallow port hopping on the tunnel interface - Default value: `true`
     */
    tunnelInterfacePortHop?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfacePortHopVariable?: pulumi.Input<string>;
    /**
     * CTS SGT Propagation configuration - Default value: `false`
     */
    tunnelInterfacePropagateSgt?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfacePropagateSgtVariable?: pulumi.Input<string>;
    /**
     * Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    tunnelInterfaceTunnelTcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceTunnelTcpMssVariable?: pulumi.Input<string>;
    /**
     * Put this wan interface in STUN mode only - Default value: `false`
     */
    tunnelInterfaceVbondAsStunServer?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceVbondAsStunServerVariable?: pulumi.Input<string>;
    /**
     * Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
     */
    tunnelInterfaceVmanageConnectionPreference?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceVmanageConnectionPreferenceVariable?: pulumi.Input<string>;
    /**
     * Set tunnel QoS mode - Choices: `hub`, `spoke`
     */
    tunnelQosMode?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelQosModeVariable?: pulumi.Input<string>;
    /**
     * Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
     */
    udpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    udpTimeoutVariable?: pulumi.Input<string>;
}
