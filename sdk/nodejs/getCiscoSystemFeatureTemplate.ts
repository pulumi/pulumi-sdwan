// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the Cisco System feature template.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getCiscoSystemFeatureTemplate({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getCiscoSystemFeatureTemplate(args?: GetCiscoSystemFeatureTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetCiscoSystemFeatureTemplateResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getCiscoSystemFeatureTemplate:getCiscoSystemFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getCiscoSystemFeatureTemplate.
 */
export interface GetCiscoSystemFeatureTemplateArgs {
    /**
     * The id of the feature template
     */
    id?: string;
    /**
     * The name of the feature template
     */
    name?: string;
}

/**
 * A collection of values returned by getCiscoSystemFeatureTemplate.
 */
export interface GetCiscoSystemFeatureTemplateResult {
    /**
     * Collect admin-tech before reboot due to daemon failure
     */
    readonly adminTechOnFailure: boolean;
    /**
     * Variable name
     */
    readonly adminTechOnFailureVariable: string;
    /**
     * Set the affinity group number for router
     */
    readonly affinityGroupNumber: number;
    /**
     * Variable name
     */
    readonly affinityGroupNumberVariable: string;
    /**
     * Variable name
     */
    readonly affinityGroupPreferenceVariable: string;
    /**
     * Set the affinity group preference
     */
    readonly affinityGroupPreferences: number[];
    /**
     * Set the console baud rate
     */
    readonly consoleBaudRate: string;
    /**
     * Variable name
     */
    readonly consoleBaudRateVariable: string;
    /**
     * Set the policer rate for control sessions
     */
    readonly controlSessionPps: number;
    /**
     * Variable name
     */
    readonly controlSessionPpsVariable: string;
    /**
     * Variable name
     */
    readonly controllerGroupListVariable: string;
    /**
     * Configure a list of comma-separated device groups
     */
    readonly controllerGroupLists: number[];
    /**
     * The description of the feature template
     */
    readonly description: string;
    /**
     * Device groups (Use comma(,) for multiple groups)
     */
    readonly deviceGroups: string[];
    /**
     * Variable name
     */
    readonly deviceGroupsVariable: string;
    /**
     * List of supported device types
     */
    readonly deviceTypes: string[];
    /**
     * Enable migration mode to Multi-Region Fabric
     */
    readonly enableMrfMigration: string;
    /**
     * Enhanced App Aware Routing
     */
    readonly enhancedAppAwareRouting: string;
    /**
     * Enable Geo fencing
     */
    readonly geoFencing: boolean;
    /**
     * Set the device’s geo fencing range
     */
    readonly geoFencingRange: number;
    /**
     * Variable name
     */
    readonly geoFencingRangeVariable: string;
    /**
     * Enable Geo fencing
     */
    readonly geoFencingSms: boolean;
    /**
     * Set device’s geo fencing SMS phone number
     */
    readonly geoFencingSmsPhoneNumbers: outputs.GetCiscoSystemFeatureTemplateGeoFencingSmsPhoneNumber[];
    /**
     * Set the hostname
     */
    readonly hostname: string;
    /**
     * Variable name
     */
    readonly hostnameVariable: string;
    /**
     * The id of the feature template
     */
    readonly id: string;
    /**
     * Idle CLI timeout in minutes
     */
    readonly idleTimeout: number;
    /**
     * Variable name
     */
    readonly idleTimeoutVariable: string;
    /**
     * Set the device’s physical latitude
     */
    readonly latitude: number;
    /**
     * Variable name
     */
    readonly latitudeVariable: string;
    /**
     * Set the location of the device
     */
    readonly location: string;
    /**
     * Variable name
     */
    readonly locationVariable: string;
    /**
     * Set the device’s physical longitude
     */
    readonly longitude: number;
    /**
     * Variable name
     */
    readonly longitudeVariable: string;
    /**
     * Set the maximum number of OMP sessions \n\n the device can have
     */
    readonly maxOmpSessions: number;
    /**
     * Variable name
     */
    readonly maxOmpSessionsVariable: string;
    /**
     * Set BGP community during migration from BGP-core based network
     */
    readonly migrationBgpCommunity: number;
    /**
     * Device is multi-tenant
     */
    readonly multiTenant: boolean;
    /**
     * Variable name
     */
    readonly multiTenantVariable: string;
    /**
     * The name of the feature template
     */
    readonly name: string;
    /**
     * Object Track configuration
     */
    readonly objectTrackers: outputs.GetCiscoSystemFeatureTemplateObjectTracker[];
    /**
     * Enable or disable On-demand Tunnel
     */
    readonly onDemandTunnel: boolean;
    /**
     * Idle CLI timeout in minutes
     */
    readonly onDemandTunnelIdleTimeout: number;
    /**
     * Variable name
     */
    readonly onDemandTunnelIdleTimeoutVariable: string;
    /**
     * Variable name
     */
    readonly onDemandTunnelVariable: string;
    /**
     * Set the Overlay ID
     */
    readonly overlayId: number;
    /**
     * Variable name
     */
    readonly overlayIdVariable: string;
    /**
     * Enable port hopping
     */
    readonly portHopping: boolean;
    /**
     * Variable name
     */
    readonly portHoppingVariable: string;
    /**
     * Set the TLOC port offset when multiple devices are behind a NAT
     */
    readonly portOffset: number;
    /**
     * Variable name
     */
    readonly portOffsetVariable: string;
    /**
     * Set region ID
     */
    readonly regionId: number;
    /**
     * Variable name
     */
    readonly regionIdVariable: string;
    /**
     * Set the role for router
     */
    readonly role: string;
    /**
     * Variable name
     */
    readonly roleVariable: string;
    /**
     * Set secondary region ID
     */
    readonly secondaryRegionId: number;
    /**
     * Variable name
     */
    readonly secondaryRegionIdVariable: string;
    /**
     * Set the site identifier
     */
    readonly siteId: number;
    /**
     * Variable name
     */
    readonly siteIdVariable: string;
    /**
     * Set a text description of the device
     */
    readonly systemDescription: string;
    /**
     * Variable name
     */
    readonly systemDescriptionVariable: string;
    /**
     * Set the system IP address
     */
    readonly systemIp: string;
    /**
     * Variable name
     */
    readonly systemIpVariable: string;
    /**
     * The template type
     */
    readonly templateType: string;
    /**
     * Set the timezone
     */
    readonly timezone: string;
    /**
     * Variable name
     */
    readonly timezoneVariable: string;
    /**
     * Enable or disable default gateway tracking
     */
    readonly trackDefaultGateway: boolean;
    /**
     * Variable name
     */
    readonly trackDefaultGatewayVariable: string;
    /**
     * OMP Tag attached to routes based on interface tracking
     */
    readonly trackInterfaceTag: number;
    /**
     * Variable name
     */
    readonly trackInterfaceTagVariable: string;
    /**
     * Configure tracking of transport
     */
    readonly trackTransport: boolean;
    /**
     * Variable name
     */
    readonly trackTransportVariable: string;
    /**
     * Tracker configuration
     */
    readonly trackers: outputs.GetCiscoSystemFeatureTemplateTracker[];
    /**
     * Enable transport gateway
     */
    readonly transportGateway: boolean;
    /**
     * Variable name
     */
    readonly transportGatewayVariable: string;
    /**
     * The version of the feature template
     */
    readonly version: number;
}
/**
 * This data source can read the Cisco System feature template.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getCiscoSystemFeatureTemplate({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getCiscoSystemFeatureTemplateOutput(args?: GetCiscoSystemFeatureTemplateOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCiscoSystemFeatureTemplateResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sdwan:index/getCiscoSystemFeatureTemplate:getCiscoSystemFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getCiscoSystemFeatureTemplate.
 */
export interface GetCiscoSystemFeatureTemplateOutputArgs {
    /**
     * The id of the feature template
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
}
