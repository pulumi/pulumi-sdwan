// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Configuration Group Deploy .
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = new sdwan.ConfigurationGroupDeploy("example", {
 *     configurationGroupId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 *     devices: [{
 *         id: "C8K-15411CCC-D476-0B3B-21F2-5D6AC387EE7B",
 *     }],
 * });
 * ```
 */
export class ConfigurationGroupDeploy extends pulumi.CustomResource {
    /**
     * Get an existing ConfigurationGroupDeploy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConfigurationGroupDeployState, opts?: pulumi.CustomResourceOptions): ConfigurationGroupDeploy {
        return new ConfigurationGroupDeploy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/configurationGroupDeploy:ConfigurationGroupDeploy';

    /**
     * Returns true if the given object is an instance of ConfigurationGroupDeploy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConfigurationGroupDeploy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConfigurationGroupDeploy.__pulumiType;
    }

    /**
     * Configuration Group ID
     */
    public readonly configurationGroupId!: pulumi.Output<string>;
    /**
     * List of devices
     */
    public readonly devices!: pulumi.Output<outputs.ConfigurationGroupDeployDevice[]>;

    /**
     * Create a ConfigurationGroupDeploy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConfigurationGroupDeployArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConfigurationGroupDeployArgs | ConfigurationGroupDeployState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConfigurationGroupDeployState | undefined;
            resourceInputs["configurationGroupId"] = state ? state.configurationGroupId : undefined;
            resourceInputs["devices"] = state ? state.devices : undefined;
        } else {
            const args = argsOrState as ConfigurationGroupDeployArgs | undefined;
            if ((!args || args.configurationGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configurationGroupId'");
            }
            if ((!args || args.devices === undefined) && !opts.urn) {
                throw new Error("Missing required property 'devices'");
            }
            resourceInputs["configurationGroupId"] = args ? args.configurationGroupId : undefined;
            resourceInputs["devices"] = args ? args.devices : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConfigurationGroupDeploy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ConfigurationGroupDeploy resources.
 */
export interface ConfigurationGroupDeployState {
    /**
     * Configuration Group ID
     */
    configurationGroupId?: pulumi.Input<string>;
    /**
     * List of devices
     */
    devices?: pulumi.Input<pulumi.Input<inputs.ConfigurationGroupDeployDevice>[]>;
}

/**
 * The set of arguments for constructing a ConfigurationGroupDeploy resource.
 */
export interface ConfigurationGroupDeployArgs {
    /**
     * Configuration Group ID
     */
    configurationGroupId: pulumi.Input<string>;
    /**
     * List of devices
     */
    devices: pulumi.Input<pulumi.Input<inputs.ConfigurationGroupDeployDevice>[]>;
}
