// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the Cisco VPN Interface GRE feature template.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getCiscoVpnInterfaceGreFeatureTemplate({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getCiscoVpnInterfaceGreFeatureTemplate(args?: GetCiscoVpnInterfaceGreFeatureTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetCiscoVpnInterfaceGreFeatureTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getCiscoVpnInterfaceGreFeatureTemplate:getCiscoVpnInterfaceGreFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getCiscoVpnInterfaceGreFeatureTemplate.
 */
export interface GetCiscoVpnInterfaceGreFeatureTemplateArgs {
    /**
     * The id of the feature template
     */
    id?: string;
    /**
     * The name of the feature template
     */
    name?: string;
}

/**
 * A collection of values returned by getCiscoVpnInterfaceGreFeatureTemplate.
 */
export interface GetCiscoVpnInterfaceGreFeatureTemplateResult {
    /**
     * Apply ACL
     */
    readonly accessLists: outputs.GetCiscoVpnInterfaceGreFeatureTemplateAccessList[];
    /**
     * Enable Application Tunnel Type
     */
    readonly application: string;
    /**
     * Variable name
     */
    readonly applicationVariable: string;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
     */
    readonly clearDontFragment: boolean;
    /**
     * Variable name
     */
    readonly clearDontFragmentVariable: string;
    /**
     * The description of the feature template
     */
    readonly description: string;
    /**
     * List of supported device types
     */
    readonly deviceTypes: string[];
    /**
     * The id of the feature template
     */
    readonly id: string;
    /**
     * Interface description
     */
    readonly interfaceDescription: string;
    /**
     * Variable name
     */
    readonly interfaceDescriptionVariable: string;
    /**
     * Interface name: ge0/\n\n or ge0/\n\n.vlanid or irbbridgeid:1-63 or loopback\n\n or natpool-\n\n when present
     */
    readonly interfaceName: string;
    /**
     * Variable name
     */
    readonly interfaceNameVariable: string;
    /**
     * Assign IPv4 address
     */
    readonly ipAddress: string;
    /**
     * Variable name
     */
    readonly ipAddressVariable: string;
    /**
     * Interface MTU \n\n, in bytes
     */
    readonly ipMtu: number;
    /**
     * Variable name
     */
    readonly ipMtuVariable: string;
    /**
     * The name of the feature template
     */
    readonly name: string;
    /**
     * Name of rewrite rule
     */
    readonly rewriteRule: string;
    /**
     * Variable name
     */
    readonly rewriteRuleVariable: string;
    /**
     * Administrative state
     */
    readonly shutdown: boolean;
    /**
     * Variable name
     */
    readonly shutdownVariable: string;
    /**
     * TCP MSS on SYN packets, in bytes
     */
    readonly tcpMssAdjust: number;
    /**
     * Variable name
     */
    readonly tcpMssAdjustVariable: string;
    /**
     * The template type
     */
    readonly templateType: string;
    /**
     * Variable name
     */
    readonly trackerVariable: string;
    /**
     * Enable tracker for this interface
     */
    readonly trackers: string[];
    /**
     * Tunnel destination IP Address
     */
    readonly tunnelDestination: string;
    /**
     * Variable name
     */
    readonly tunnelDestinationVariable: string;
    /**
     * \n\n Interface name: ge0/\n\n or ge0/\n\n.vlanid
     */
    readonly tunnelRouteVia: string;
    /**
     * Variable name
     */
    readonly tunnelRouteViaVariable: string;
    /**
     * Tunnel source IP Address
     */
    readonly tunnelSource: string;
    /**
     * \n\n Interface name: ge0/\n\n or ge0/\n\n.vlanid
     */
    readonly tunnelSourceInterface: string;
    /**
     * Variable name
     */
    readonly tunnelSourceInterfaceVariable: string;
    /**
     * Variable name
     */
    readonly tunnelSourceVariable: string;
    /**
     * The version of the feature template
     */
    readonly version: number;
}
/**
 * This data source can read the Cisco VPN Interface GRE feature template.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getCiscoVpnInterfaceGreFeatureTemplate({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getCiscoVpnInterfaceGreFeatureTemplateOutput(args?: GetCiscoVpnInterfaceGreFeatureTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCiscoVpnInterfaceGreFeatureTemplateResult> {
    return pulumi.output(args).apply((a: any) => getCiscoVpnInterfaceGreFeatureTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getCiscoVpnInterfaceGreFeatureTemplate.
 */
export interface GetCiscoVpnInterfaceGreFeatureTemplateOutputArgs {
    /**
     * The id of the feature template
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
}
