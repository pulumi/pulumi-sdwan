// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Transport WAN VPN Interface Ethernet Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Import
 *
 * Expected import identifier with the format: "transport_wan_vpn_interface_ethernet_feature_id,feature_profile_id,transport_wan_vpn_feature_id"
 *
 * ```sh
 * $ pulumi import sdwan:index/transportWanVpnInterfaceEthernetFeature:TransportWanVpnInterfaceEthernetFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037"
 * ```
 */
export class TransportWanVpnInterfaceEthernetFeature extends pulumi.CustomResource {
    /**
     * Get an existing TransportWanVpnInterfaceEthernetFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransportWanVpnInterfaceEthernetFeatureState, opts?: pulumi.CustomResourceOptions): TransportWanVpnInterfaceEthernetFeature {
        return new TransportWanVpnInterfaceEthernetFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/transportWanVpnInterfaceEthernetFeature:TransportWanVpnInterfaceEthernetFeature';

    /**
     * Returns true if the given object is an instance of TransportWanVpnInterfaceEthernetFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransportWanVpnInterfaceEthernetFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransportWanVpnInterfaceEthernetFeature.__pulumiType;
    }

    public readonly aclIpv4EgressFeatureId!: pulumi.Output<string | undefined>;
    public readonly aclIpv4IngressFeatureId!: pulumi.Output<string | undefined>;
    public readonly aclIpv6EgressFeatureId!: pulumi.Output<string | undefined>;
    public readonly aclIpv6IngressFeatureId!: pulumi.Output<string | undefined>;
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
     */
    public readonly arpTimeout!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly arpTimeoutVariable!: pulumi.Output<string | undefined>;
    /**
     * Configure ARP entries
     */
    public readonly arps!: pulumi.Output<outputs.TransportWanVpnInterfaceEthernetFeatureArp[] | undefined>;
    /**
     * Interface auto detect bandwidth - Default value: `false`
     */
    public readonly autoDetectBandwidth!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly autoDetectBandwidthVariable!: pulumi.Output<string | undefined>;
    /**
     * Link autonegotiation
     */
    public readonly autonegotiate!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly autonegotiateVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     */
    public readonly bandwidthDownstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly bandwidthDownstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     */
    public readonly bandwidthUpstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly bandwidthUpstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Block packets originating from IP address that is not from this source - Default value: `false`
     */
    public readonly blockNonSourceIp!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly blockNonSourceIpVariable!: pulumi.Output<string | undefined>;
    /**
     * The description of the Feature
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Duplex mode - Choices: `full`, `half`, `auto`
     */
    public readonly duplex!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly duplexVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable DHCPv6, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
     */
    public readonly enableDhcpv6!: pulumi.Output<boolean | undefined>;
    /**
     * Feature Profile ID
     */
    public readonly featureProfileId!: pulumi.Output<string>;
    /**
     * GRE tunnel source IP
     */
    public readonly greTunnelSourceIp!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly greTunnelSourceIpVariable!: pulumi.Output<string | undefined>;
    /**
     * ICMP/ICMPv6 Redirect Disable - Default value: `true`
     */
    public readonly icmpRedirectDisable!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly icmpRedirectDisableVariable!: pulumi.Output<string | undefined>;
    public readonly interfaceDescription!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly interfaceDescriptionVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
     * Default value: `1500`
     */
    public readonly interfaceMtu!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly interfaceMtuVariable!: pulumi.Output<string | undefined>;
    public readonly interfaceName!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly interfaceNameVariable!: pulumi.Output<string | undefined>;
    /**
     * IP Directed-Broadcast - Default value: `false`
     */
    public readonly ipDirectedBroadcast!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly ipDirectedBroadcastVariable!: pulumi.Output<string | undefined>;
    /**
     * IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
     * <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
     */
    public readonly ipMtu!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly ipMtuVariable!: pulumi.Output<string | undefined>;
    /**
     * Iperf server for auto bandwidth detect
     */
    public readonly iperfServer!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly iperfServerVariable!: pulumi.Output<string | undefined>;
    /**
     * IP Address, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     */
    public readonly ipv4Address!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipv4AddressVariable!: pulumi.Output<string | undefined>;
    /**
     * IPv4 Configuration Type - Choices: `dynamic`, `static` - Default value: `dynamic`
     */
    public readonly ipv4ConfigurationType!: pulumi.Output<string | undefined>;
    /**
     * DHCP Distance, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic` - Range: `1`-`65536` - Default
     * value: `1`
     */
    public readonly ipv4DhcpDistance!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly ipv4DhcpDistanceVariable!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipv4DhcpHelperVariable!: pulumi.Output<string | undefined>;
    /**
     * List of DHCP IPv4 helper addresses (min 1, max 8)
     */
    public readonly ipv4DhcpHelpers!: pulumi.Output<string[] | undefined>;
    /**
     * Secondary IpV4 Addresses, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     */
    public readonly ipv4SecondaryAddresses!: pulumi.Output<outputs.TransportWanVpnInterfaceEthernetFeatureIpv4SecondaryAddress[] | undefined>;
    /**
     * Subnet Mask, Attribute conditional on `ipv4ConfigurationType` being equal to `static` - Choices: `255.255.255.255`,
     * `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`,
     * `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`,
     * `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`,
     * `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`,
     * `128.0.0.0`, `0.0.0.0`
     */
    public readonly ipv4SubnetMask!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipv4SubnetMaskVariable!: pulumi.Output<string | undefined>;
    /**
     * IPv6 Address Secondary, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
     */
    public readonly ipv6Address!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipv6AddressVariable!: pulumi.Output<string | undefined>;
    /**
     * IPv6 Configuration Type - Choices: `dynamic`, `static`, `none` - Default value: `none`
     */
    public readonly ipv6ConfigurationType!: pulumi.Output<string | undefined>;
    /**
     * secondary IPv6 addresses, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
     */
    public readonly ipv6DhcpSecondaryAddresses!: pulumi.Output<outputs.TransportWanVpnInterfaceEthernetFeatureIpv6DhcpSecondaryAddress[] | undefined>;
    /**
     * Static secondary IPv6 addresses, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
     */
    public readonly ipv6SecondaryAddresses!: pulumi.Output<outputs.TransportWanVpnInterfaceEthernetFeatureIpv6SecondaryAddress[] | undefined>;
    /**
     * Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
     */
    public readonly loadInterval!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly loadIntervalVariable!: pulumi.Output<string | undefined>;
    /**
     * MAC Address
     */
    public readonly macAddress!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly macAddressVariable!: pulumi.Output<string | undefined>;
    /**
     * Media type - Choices: `auto-select`, `rj45`, `sfp`
     */
    public readonly mediaType!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly mediaTypeVariable!: pulumi.Output<string | undefined>;
    /**
     * The name of the Feature
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * NAT64 on this interface - Default value: `false`
     */
    public readonly nat64!: pulumi.Output<boolean | undefined>;
    /**
     * NAT66 on this interface - Default value: `false`
     */
    public readonly nat66!: pulumi.Output<boolean | undefined>;
    /**
     * enable Network Address Translation on this interface - Default value: `false`
     */
    public readonly natIpv4!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly natIpv4Variable!: pulumi.Output<string | undefined>;
    /**
     * enable Network Address Translation ipv6 on this interface - Default value: `false`
     */
    public readonly natIpv6!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly natIpv6Variable!: pulumi.Output<string | undefined>;
    /**
     * NAT Inside Source Loopback Interface
     */
    public readonly natLoopback!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly natLoopbackVariable!: pulumi.Output<string | undefined>;
    /**
     * NAT Overload - Default value: `true`
     */
    public readonly natOverload!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly natOverloadVariable!: pulumi.Output<string | undefined>;
    /**
     * NAT Pool Prefix Length - Range: `1`-`32`
     */
    public readonly natPrefixLength!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly natPrefixLengthVariable!: pulumi.Output<string | undefined>;
    /**
     * NAT Pool Range End
     */
    public readonly natRangeEnd!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly natRangeEndVariable!: pulumi.Output<string | undefined>;
    /**
     * NAT Pool Range Start
     */
    public readonly natRangeStart!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly natRangeStartVariable!: pulumi.Output<string | undefined>;
    /**
     * Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
     */
    public readonly natTcpTimeout!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly natTcpTimeoutVariable!: pulumi.Output<string | undefined>;
    /**
     * NAT Type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
     */
    public readonly natType!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly natTypeVariable!: pulumi.Output<string | undefined>;
    /**
     * Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
     */
    public readonly natUdpTimeout!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly natUdpTimeoutVariable!: pulumi.Output<string | undefined>;
    /**
     * static NAT
     */
    public readonly newStaticNats!: pulumi.Output<outputs.TransportWanVpnInterfaceEthernetFeatureNewStaticNat[] | undefined>;
    /**
     * Per-tunnel Qos - Default value: `false`
     */
    public readonly perTunnelQos!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly perTunnelQosVariable!: pulumi.Output<string | undefined>;
    /**
     * Adaptive QoS - Default value: `false`
     */
    public readonly qosAdaptive!: pulumi.Output<boolean | undefined>;
    /**
     * Shaping Rate Downstream - Default value: `false`
     */
    public readonly qosAdaptiveBandwidthDownstream!: pulumi.Output<boolean | undefined>;
    /**
     * Shaping Rate Upstream - Default value: `false`
     */
    public readonly qosAdaptiveBandwidthUpstream!: pulumi.Output<boolean | undefined>;
    /**
     * Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
     */
    public readonly qosAdaptiveDefaultDownstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptiveDefaultDownstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
     */
    public readonly qosAdaptiveDefaultUpstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptiveDefaultUpstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
     */
    public readonly qosAdaptiveMaxDownstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptiveMaxDownstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
     */
    public readonly qosAdaptiveMaxUpstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptiveMaxUpstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
     */
    public readonly qosAdaptiveMinDownstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptiveMinDownstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
     */
    public readonly qosAdaptiveMinUpstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptiveMinUpstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
     */
    public readonly qosAdaptivePeriod!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptivePeriodVariable!: pulumi.Output<string | undefined>;
    /**
     * Shaping Rate (Kbps) - Range: `8`-`100000000`
     */
    public readonly qosShapingRate!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosShapingRateVariable!: pulumi.Output<string | undefined>;
    /**
     * Service Provider Name
     */
    public readonly serviceProvider!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly serviceProviderVariable!: pulumi.Output<string | undefined>;
    /**
     * - Default value: `true`
     */
    public readonly shutdown!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly shutdownVariable!: pulumi.Output<string | undefined>;
    /**
     * Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
     */
    public readonly speed!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly speedVariable!: pulumi.Output<string | undefined>;
    /**
     * static NAT66
     */
    public readonly staticNat66s!: pulumi.Output<outputs.TransportWanVpnInterfaceEthernetFeatureStaticNat66[] | undefined>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    public readonly tcpMss!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tcpMssVariable!: pulumi.Output<string | undefined>;
    /**
     * Extends a local TLOC to a remote node only for vpn 0
     */
    public readonly tlocExtension!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tlocExtensionVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable tracker for this interface
     */
    public readonly tracker!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly trackerVariable!: pulumi.Output<string | undefined>;
    /**
     * Transport WAN VPN Feature ID
     */
    public readonly transportWanVpnFeatureId!: pulumi.Output<string | undefined>;
    /**
     * Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
     */
    public readonly tunnelBandwidthPercent!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelBandwidthPercentVariable!: pulumi.Output<string | undefined>;
    /**
     * Tunnel Interface on/off - Default value: `false`
     */
    public readonly tunnelInterface!: pulumi.Output<boolean | undefined>;
    /**
     * Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
     */
    public readonly tunnelInterfaceAllowAll!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowAllVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny BFD - Default value: `false`
     */
    public readonly tunnelInterfaceAllowBfd!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowBfdVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/deny BGP - Default value: `false`
     */
    public readonly tunnelInterfaceAllowBgp!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowBgpVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny DHCP - Default value: `true`
     */
    public readonly tunnelInterfaceAllowDhcp!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowDhcpVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny DNS - Default value: `true`
     */
    public readonly tunnelInterfaceAllowDns!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowDnsVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny HTTPS - Default value: `true`
     */
    public readonly tunnelInterfaceAllowHttps!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowHttpsVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny ICMP - Default value: `true`
     */
    public readonly tunnelInterfaceAllowIcmp!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowIcmpVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny NETCONF - Default value: `false`
     */
    public readonly tunnelInterfaceAllowNetconf!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowNetconfVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny NTP - Default value: `true`
     */
    public readonly tunnelInterfaceAllowNtp!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowNtpVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny OSPF - Default value: `false`
     */
    public readonly tunnelInterfaceAllowOspf!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowOspfVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny SNMP - Default value: `false`
     */
    public readonly tunnelInterfaceAllowSnmp!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowSnmpVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny SSH - Default value: `true`
     */
    public readonly tunnelInterfaceAllowSsh!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowSshVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny STUN - Default value: `false`
     */
    public readonly tunnelInterfaceAllowStun!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowStunVariable!: pulumi.Output<string | undefined>;
    /**
     * Bind loopback tunnel interface to a physical interface
     */
    public readonly tunnelInterfaceBindLoopbackTunnel!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceBindLoopbackTunnelVariable!: pulumi.Output<string | undefined>;
    /**
     * Set TLOC as border TLOC - Default value: `false`
     */
    public readonly tunnelInterfaceBorder!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceBorderVariable!: pulumi.Output<string | undefined>;
    /**
     * Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
     * `carrier7`, `carrier8` - Default value: `default`
     */
    public readonly tunnelInterfaceCarrier!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceCarrierVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     */
    public readonly tunnelInterfaceClearDontFragment!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceClearDontFragmentVariable!: pulumi.Output<string | undefined>;
    /**
     * Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
     * `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
     * `private4`, `private5`, `private6` - Default value: `mpls`
     */
    public readonly tunnelInterfaceColor!: pulumi.Output<string | undefined>;
    /**
     * Restrict this TLOC behavior - Default value: `false`
     */
    public readonly tunnelInterfaceColorRestrict!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceColorRestrictVariable!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceColorVariable!: pulumi.Output<string | undefined>;
    /**
     * CTS SGT Propagation configuration - Default value: `false`
     */
    public readonly tunnelInterfaceCtsSgtPropagation!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceCtsSgtPropagationVariable!: pulumi.Output<string | undefined>;
    /**
     * Encapsulation for TLOC
     */
    public readonly tunnelInterfaceEncapsulations!: pulumi.Output<outputs.TransportWanVpnInterfaceEthernetFeatureTunnelInterfaceEncapsulation[] | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceExcludeControllerGroupListVariable!: pulumi.Output<string | undefined>;
    /**
     * Exclude the following controller groups defined in this list.
     */
    public readonly tunnelInterfaceExcludeControllerGroupLists!: pulumi.Output<number[] | undefined>;
    /**
     * GRE tunnel destination IP
     */
    public readonly tunnelInterfaceGreTunnelDestinationIp!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceGreTunnelDestinationIpVariable!: pulumi.Output<string | undefined>;
    /**
     * List of groups - Range: `1`-`4294967295`
     */
    public readonly tunnelInterfaceGroups!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceGroupsVariable!: pulumi.Output<string | undefined>;
    /**
     * Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
     */
    public readonly tunnelInterfaceHelloInterval!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceHelloIntervalVariable!: pulumi.Output<string | undefined>;
    /**
     * Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
     */
    public readonly tunnelInterfaceHelloTolerance!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceHelloToleranceVariable!: pulumi.Output<string | undefined>;
    /**
     * Set TLOC as last resort - Default value: `false`
     */
    public readonly tunnelInterfaceLastResortCircuit!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceLastResortCircuitVariable!: pulumi.Output<string | undefined>;
    /**
     * Set the interface as a low-bandwidth circuit - Default value: `false`
     */
    public readonly tunnelInterfaceLowBandwidthLink!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceLowBandwidthLinkVariable!: pulumi.Output<string | undefined>;
    /**
     * Maximum Control Connections - Range: `0`-`100`
     */
    public readonly tunnelInterfaceMaxControlConnections!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceMaxControlConnectionsVariable!: pulumi.Output<string | undefined>;
    /**
     * Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
     */
    public readonly tunnelInterfaceNatRefreshInterval!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceNatRefreshIntervalVariable!: pulumi.Output<string | undefined>;
    /**
     * Accept and respond to network-prefix-directed broadcasts - Default value: `false`
     */
    public readonly tunnelInterfaceNetworkBroadcast!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceNetworkBroadcastVariable!: pulumi.Output<string | undefined>;
    /**
     * Disallow port hopping on the tunnel interface - Default value: `true`
     */
    public readonly tunnelInterfacePortHop!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfacePortHopVariable!: pulumi.Output<string | undefined>;
    /**
     * Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    public readonly tunnelInterfaceTunnelTcpMss!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceTunnelTcpMssVariable!: pulumi.Output<string | undefined>;
    /**
     * Put this wan interface in STUN mode only - Default value: `false`
     */
    public readonly tunnelInterfaceVbondAsStunServer!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceVbondAsStunServerVariable!: pulumi.Output<string | undefined>;
    /**
     * Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
     */
    public readonly tunnelInterfaceVmanageConnectionPreference!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceVmanageConnectionPreferenceVariable!: pulumi.Output<string | undefined>;
    /**
     * Set tunnel QoS mode - Choices: `hub`, `spoke`
     */
    public readonly tunnelQosMode!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelQosModeVariable!: pulumi.Output<string | undefined>;
    /**
     * The version of the Feature
     */
    public /*out*/ readonly version!: pulumi.Output<number>;
    /**
     * Extend remote TLOC over a GRE tunnel to a local WAN interface
     */
    public readonly xconnect!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly xconnectVariable!: pulumi.Output<string | undefined>;

    /**
     * Create a TransportWanVpnInterfaceEthernetFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransportWanVpnInterfaceEthernetFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransportWanVpnInterfaceEthernetFeatureArgs | TransportWanVpnInterfaceEthernetFeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransportWanVpnInterfaceEthernetFeatureState | undefined;
            resourceInputs["aclIpv4EgressFeatureId"] = state ? state.aclIpv4EgressFeatureId : undefined;
            resourceInputs["aclIpv4IngressFeatureId"] = state ? state.aclIpv4IngressFeatureId : undefined;
            resourceInputs["aclIpv6EgressFeatureId"] = state ? state.aclIpv6EgressFeatureId : undefined;
            resourceInputs["aclIpv6IngressFeatureId"] = state ? state.aclIpv6IngressFeatureId : undefined;
            resourceInputs["arpTimeout"] = state ? state.arpTimeout : undefined;
            resourceInputs["arpTimeoutVariable"] = state ? state.arpTimeoutVariable : undefined;
            resourceInputs["arps"] = state ? state.arps : undefined;
            resourceInputs["autoDetectBandwidth"] = state ? state.autoDetectBandwidth : undefined;
            resourceInputs["autoDetectBandwidthVariable"] = state ? state.autoDetectBandwidthVariable : undefined;
            resourceInputs["autonegotiate"] = state ? state.autonegotiate : undefined;
            resourceInputs["autonegotiateVariable"] = state ? state.autonegotiateVariable : undefined;
            resourceInputs["bandwidthDownstream"] = state ? state.bandwidthDownstream : undefined;
            resourceInputs["bandwidthDownstreamVariable"] = state ? state.bandwidthDownstreamVariable : undefined;
            resourceInputs["bandwidthUpstream"] = state ? state.bandwidthUpstream : undefined;
            resourceInputs["bandwidthUpstreamVariable"] = state ? state.bandwidthUpstreamVariable : undefined;
            resourceInputs["blockNonSourceIp"] = state ? state.blockNonSourceIp : undefined;
            resourceInputs["blockNonSourceIpVariable"] = state ? state.blockNonSourceIpVariable : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["duplex"] = state ? state.duplex : undefined;
            resourceInputs["duplexVariable"] = state ? state.duplexVariable : undefined;
            resourceInputs["enableDhcpv6"] = state ? state.enableDhcpv6 : undefined;
            resourceInputs["featureProfileId"] = state ? state.featureProfileId : undefined;
            resourceInputs["greTunnelSourceIp"] = state ? state.greTunnelSourceIp : undefined;
            resourceInputs["greTunnelSourceIpVariable"] = state ? state.greTunnelSourceIpVariable : undefined;
            resourceInputs["icmpRedirectDisable"] = state ? state.icmpRedirectDisable : undefined;
            resourceInputs["icmpRedirectDisableVariable"] = state ? state.icmpRedirectDisableVariable : undefined;
            resourceInputs["interfaceDescription"] = state ? state.interfaceDescription : undefined;
            resourceInputs["interfaceDescriptionVariable"] = state ? state.interfaceDescriptionVariable : undefined;
            resourceInputs["interfaceMtu"] = state ? state.interfaceMtu : undefined;
            resourceInputs["interfaceMtuVariable"] = state ? state.interfaceMtuVariable : undefined;
            resourceInputs["interfaceName"] = state ? state.interfaceName : undefined;
            resourceInputs["interfaceNameVariable"] = state ? state.interfaceNameVariable : undefined;
            resourceInputs["ipDirectedBroadcast"] = state ? state.ipDirectedBroadcast : undefined;
            resourceInputs["ipDirectedBroadcastVariable"] = state ? state.ipDirectedBroadcastVariable : undefined;
            resourceInputs["ipMtu"] = state ? state.ipMtu : undefined;
            resourceInputs["ipMtuVariable"] = state ? state.ipMtuVariable : undefined;
            resourceInputs["iperfServer"] = state ? state.iperfServer : undefined;
            resourceInputs["iperfServerVariable"] = state ? state.iperfServerVariable : undefined;
            resourceInputs["ipv4Address"] = state ? state.ipv4Address : undefined;
            resourceInputs["ipv4AddressVariable"] = state ? state.ipv4AddressVariable : undefined;
            resourceInputs["ipv4ConfigurationType"] = state ? state.ipv4ConfigurationType : undefined;
            resourceInputs["ipv4DhcpDistance"] = state ? state.ipv4DhcpDistance : undefined;
            resourceInputs["ipv4DhcpDistanceVariable"] = state ? state.ipv4DhcpDistanceVariable : undefined;
            resourceInputs["ipv4DhcpHelperVariable"] = state ? state.ipv4DhcpHelperVariable : undefined;
            resourceInputs["ipv4DhcpHelpers"] = state ? state.ipv4DhcpHelpers : undefined;
            resourceInputs["ipv4SecondaryAddresses"] = state ? state.ipv4SecondaryAddresses : undefined;
            resourceInputs["ipv4SubnetMask"] = state ? state.ipv4SubnetMask : undefined;
            resourceInputs["ipv4SubnetMaskVariable"] = state ? state.ipv4SubnetMaskVariable : undefined;
            resourceInputs["ipv6Address"] = state ? state.ipv6Address : undefined;
            resourceInputs["ipv6AddressVariable"] = state ? state.ipv6AddressVariable : undefined;
            resourceInputs["ipv6ConfigurationType"] = state ? state.ipv6ConfigurationType : undefined;
            resourceInputs["ipv6DhcpSecondaryAddresses"] = state ? state.ipv6DhcpSecondaryAddresses : undefined;
            resourceInputs["ipv6SecondaryAddresses"] = state ? state.ipv6SecondaryAddresses : undefined;
            resourceInputs["loadInterval"] = state ? state.loadInterval : undefined;
            resourceInputs["loadIntervalVariable"] = state ? state.loadIntervalVariable : undefined;
            resourceInputs["macAddress"] = state ? state.macAddress : undefined;
            resourceInputs["macAddressVariable"] = state ? state.macAddressVariable : undefined;
            resourceInputs["mediaType"] = state ? state.mediaType : undefined;
            resourceInputs["mediaTypeVariable"] = state ? state.mediaTypeVariable : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nat64"] = state ? state.nat64 : undefined;
            resourceInputs["nat66"] = state ? state.nat66 : undefined;
            resourceInputs["natIpv4"] = state ? state.natIpv4 : undefined;
            resourceInputs["natIpv4Variable"] = state ? state.natIpv4Variable : undefined;
            resourceInputs["natIpv6"] = state ? state.natIpv6 : undefined;
            resourceInputs["natIpv6Variable"] = state ? state.natIpv6Variable : undefined;
            resourceInputs["natLoopback"] = state ? state.natLoopback : undefined;
            resourceInputs["natLoopbackVariable"] = state ? state.natLoopbackVariable : undefined;
            resourceInputs["natOverload"] = state ? state.natOverload : undefined;
            resourceInputs["natOverloadVariable"] = state ? state.natOverloadVariable : undefined;
            resourceInputs["natPrefixLength"] = state ? state.natPrefixLength : undefined;
            resourceInputs["natPrefixLengthVariable"] = state ? state.natPrefixLengthVariable : undefined;
            resourceInputs["natRangeEnd"] = state ? state.natRangeEnd : undefined;
            resourceInputs["natRangeEndVariable"] = state ? state.natRangeEndVariable : undefined;
            resourceInputs["natRangeStart"] = state ? state.natRangeStart : undefined;
            resourceInputs["natRangeStartVariable"] = state ? state.natRangeStartVariable : undefined;
            resourceInputs["natTcpTimeout"] = state ? state.natTcpTimeout : undefined;
            resourceInputs["natTcpTimeoutVariable"] = state ? state.natTcpTimeoutVariable : undefined;
            resourceInputs["natType"] = state ? state.natType : undefined;
            resourceInputs["natTypeVariable"] = state ? state.natTypeVariable : undefined;
            resourceInputs["natUdpTimeout"] = state ? state.natUdpTimeout : undefined;
            resourceInputs["natUdpTimeoutVariable"] = state ? state.natUdpTimeoutVariable : undefined;
            resourceInputs["newStaticNats"] = state ? state.newStaticNats : undefined;
            resourceInputs["perTunnelQos"] = state ? state.perTunnelQos : undefined;
            resourceInputs["perTunnelQosVariable"] = state ? state.perTunnelQosVariable : undefined;
            resourceInputs["qosAdaptive"] = state ? state.qosAdaptive : undefined;
            resourceInputs["qosAdaptiveBandwidthDownstream"] = state ? state.qosAdaptiveBandwidthDownstream : undefined;
            resourceInputs["qosAdaptiveBandwidthUpstream"] = state ? state.qosAdaptiveBandwidthUpstream : undefined;
            resourceInputs["qosAdaptiveDefaultDownstream"] = state ? state.qosAdaptiveDefaultDownstream : undefined;
            resourceInputs["qosAdaptiveDefaultDownstreamVariable"] = state ? state.qosAdaptiveDefaultDownstreamVariable : undefined;
            resourceInputs["qosAdaptiveDefaultUpstream"] = state ? state.qosAdaptiveDefaultUpstream : undefined;
            resourceInputs["qosAdaptiveDefaultUpstreamVariable"] = state ? state.qosAdaptiveDefaultUpstreamVariable : undefined;
            resourceInputs["qosAdaptiveMaxDownstream"] = state ? state.qosAdaptiveMaxDownstream : undefined;
            resourceInputs["qosAdaptiveMaxDownstreamVariable"] = state ? state.qosAdaptiveMaxDownstreamVariable : undefined;
            resourceInputs["qosAdaptiveMaxUpstream"] = state ? state.qosAdaptiveMaxUpstream : undefined;
            resourceInputs["qosAdaptiveMaxUpstreamVariable"] = state ? state.qosAdaptiveMaxUpstreamVariable : undefined;
            resourceInputs["qosAdaptiveMinDownstream"] = state ? state.qosAdaptiveMinDownstream : undefined;
            resourceInputs["qosAdaptiveMinDownstreamVariable"] = state ? state.qosAdaptiveMinDownstreamVariable : undefined;
            resourceInputs["qosAdaptiveMinUpstream"] = state ? state.qosAdaptiveMinUpstream : undefined;
            resourceInputs["qosAdaptiveMinUpstreamVariable"] = state ? state.qosAdaptiveMinUpstreamVariable : undefined;
            resourceInputs["qosAdaptivePeriod"] = state ? state.qosAdaptivePeriod : undefined;
            resourceInputs["qosAdaptivePeriodVariable"] = state ? state.qosAdaptivePeriodVariable : undefined;
            resourceInputs["qosShapingRate"] = state ? state.qosShapingRate : undefined;
            resourceInputs["qosShapingRateVariable"] = state ? state.qosShapingRateVariable : undefined;
            resourceInputs["serviceProvider"] = state ? state.serviceProvider : undefined;
            resourceInputs["serviceProviderVariable"] = state ? state.serviceProviderVariable : undefined;
            resourceInputs["shutdown"] = state ? state.shutdown : undefined;
            resourceInputs["shutdownVariable"] = state ? state.shutdownVariable : undefined;
            resourceInputs["speed"] = state ? state.speed : undefined;
            resourceInputs["speedVariable"] = state ? state.speedVariable : undefined;
            resourceInputs["staticNat66s"] = state ? state.staticNat66s : undefined;
            resourceInputs["tcpMss"] = state ? state.tcpMss : undefined;
            resourceInputs["tcpMssVariable"] = state ? state.tcpMssVariable : undefined;
            resourceInputs["tlocExtension"] = state ? state.tlocExtension : undefined;
            resourceInputs["tlocExtensionVariable"] = state ? state.tlocExtensionVariable : undefined;
            resourceInputs["tracker"] = state ? state.tracker : undefined;
            resourceInputs["trackerVariable"] = state ? state.trackerVariable : undefined;
            resourceInputs["transportWanVpnFeatureId"] = state ? state.transportWanVpnFeatureId : undefined;
            resourceInputs["tunnelBandwidthPercent"] = state ? state.tunnelBandwidthPercent : undefined;
            resourceInputs["tunnelBandwidthPercentVariable"] = state ? state.tunnelBandwidthPercentVariable : undefined;
            resourceInputs["tunnelInterface"] = state ? state.tunnelInterface : undefined;
            resourceInputs["tunnelInterfaceAllowAll"] = state ? state.tunnelInterfaceAllowAll : undefined;
            resourceInputs["tunnelInterfaceAllowAllVariable"] = state ? state.tunnelInterfaceAllowAllVariable : undefined;
            resourceInputs["tunnelInterfaceAllowBfd"] = state ? state.tunnelInterfaceAllowBfd : undefined;
            resourceInputs["tunnelInterfaceAllowBfdVariable"] = state ? state.tunnelInterfaceAllowBfdVariable : undefined;
            resourceInputs["tunnelInterfaceAllowBgp"] = state ? state.tunnelInterfaceAllowBgp : undefined;
            resourceInputs["tunnelInterfaceAllowBgpVariable"] = state ? state.tunnelInterfaceAllowBgpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowDhcp"] = state ? state.tunnelInterfaceAllowDhcp : undefined;
            resourceInputs["tunnelInterfaceAllowDhcpVariable"] = state ? state.tunnelInterfaceAllowDhcpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowDns"] = state ? state.tunnelInterfaceAllowDns : undefined;
            resourceInputs["tunnelInterfaceAllowDnsVariable"] = state ? state.tunnelInterfaceAllowDnsVariable : undefined;
            resourceInputs["tunnelInterfaceAllowHttps"] = state ? state.tunnelInterfaceAllowHttps : undefined;
            resourceInputs["tunnelInterfaceAllowHttpsVariable"] = state ? state.tunnelInterfaceAllowHttpsVariable : undefined;
            resourceInputs["tunnelInterfaceAllowIcmp"] = state ? state.tunnelInterfaceAllowIcmp : undefined;
            resourceInputs["tunnelInterfaceAllowIcmpVariable"] = state ? state.tunnelInterfaceAllowIcmpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowNetconf"] = state ? state.tunnelInterfaceAllowNetconf : undefined;
            resourceInputs["tunnelInterfaceAllowNetconfVariable"] = state ? state.tunnelInterfaceAllowNetconfVariable : undefined;
            resourceInputs["tunnelInterfaceAllowNtp"] = state ? state.tunnelInterfaceAllowNtp : undefined;
            resourceInputs["tunnelInterfaceAllowNtpVariable"] = state ? state.tunnelInterfaceAllowNtpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowOspf"] = state ? state.tunnelInterfaceAllowOspf : undefined;
            resourceInputs["tunnelInterfaceAllowOspfVariable"] = state ? state.tunnelInterfaceAllowOspfVariable : undefined;
            resourceInputs["tunnelInterfaceAllowSnmp"] = state ? state.tunnelInterfaceAllowSnmp : undefined;
            resourceInputs["tunnelInterfaceAllowSnmpVariable"] = state ? state.tunnelInterfaceAllowSnmpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowSsh"] = state ? state.tunnelInterfaceAllowSsh : undefined;
            resourceInputs["tunnelInterfaceAllowSshVariable"] = state ? state.tunnelInterfaceAllowSshVariable : undefined;
            resourceInputs["tunnelInterfaceAllowStun"] = state ? state.tunnelInterfaceAllowStun : undefined;
            resourceInputs["tunnelInterfaceAllowStunVariable"] = state ? state.tunnelInterfaceAllowStunVariable : undefined;
            resourceInputs["tunnelInterfaceBindLoopbackTunnel"] = state ? state.tunnelInterfaceBindLoopbackTunnel : undefined;
            resourceInputs["tunnelInterfaceBindLoopbackTunnelVariable"] = state ? state.tunnelInterfaceBindLoopbackTunnelVariable : undefined;
            resourceInputs["tunnelInterfaceBorder"] = state ? state.tunnelInterfaceBorder : undefined;
            resourceInputs["tunnelInterfaceBorderVariable"] = state ? state.tunnelInterfaceBorderVariable : undefined;
            resourceInputs["tunnelInterfaceCarrier"] = state ? state.tunnelInterfaceCarrier : undefined;
            resourceInputs["tunnelInterfaceCarrierVariable"] = state ? state.tunnelInterfaceCarrierVariable : undefined;
            resourceInputs["tunnelInterfaceClearDontFragment"] = state ? state.tunnelInterfaceClearDontFragment : undefined;
            resourceInputs["tunnelInterfaceClearDontFragmentVariable"] = state ? state.tunnelInterfaceClearDontFragmentVariable : undefined;
            resourceInputs["tunnelInterfaceColor"] = state ? state.tunnelInterfaceColor : undefined;
            resourceInputs["tunnelInterfaceColorRestrict"] = state ? state.tunnelInterfaceColorRestrict : undefined;
            resourceInputs["tunnelInterfaceColorRestrictVariable"] = state ? state.tunnelInterfaceColorRestrictVariable : undefined;
            resourceInputs["tunnelInterfaceColorVariable"] = state ? state.tunnelInterfaceColorVariable : undefined;
            resourceInputs["tunnelInterfaceCtsSgtPropagation"] = state ? state.tunnelInterfaceCtsSgtPropagation : undefined;
            resourceInputs["tunnelInterfaceCtsSgtPropagationVariable"] = state ? state.tunnelInterfaceCtsSgtPropagationVariable : undefined;
            resourceInputs["tunnelInterfaceEncapsulations"] = state ? state.tunnelInterfaceEncapsulations : undefined;
            resourceInputs["tunnelInterfaceExcludeControllerGroupListVariable"] = state ? state.tunnelInterfaceExcludeControllerGroupListVariable : undefined;
            resourceInputs["tunnelInterfaceExcludeControllerGroupLists"] = state ? state.tunnelInterfaceExcludeControllerGroupLists : undefined;
            resourceInputs["tunnelInterfaceGreTunnelDestinationIp"] = state ? state.tunnelInterfaceGreTunnelDestinationIp : undefined;
            resourceInputs["tunnelInterfaceGreTunnelDestinationIpVariable"] = state ? state.tunnelInterfaceGreTunnelDestinationIpVariable : undefined;
            resourceInputs["tunnelInterfaceGroups"] = state ? state.tunnelInterfaceGroups : undefined;
            resourceInputs["tunnelInterfaceGroupsVariable"] = state ? state.tunnelInterfaceGroupsVariable : undefined;
            resourceInputs["tunnelInterfaceHelloInterval"] = state ? state.tunnelInterfaceHelloInterval : undefined;
            resourceInputs["tunnelInterfaceHelloIntervalVariable"] = state ? state.tunnelInterfaceHelloIntervalVariable : undefined;
            resourceInputs["tunnelInterfaceHelloTolerance"] = state ? state.tunnelInterfaceHelloTolerance : undefined;
            resourceInputs["tunnelInterfaceHelloToleranceVariable"] = state ? state.tunnelInterfaceHelloToleranceVariable : undefined;
            resourceInputs["tunnelInterfaceLastResortCircuit"] = state ? state.tunnelInterfaceLastResortCircuit : undefined;
            resourceInputs["tunnelInterfaceLastResortCircuitVariable"] = state ? state.tunnelInterfaceLastResortCircuitVariable : undefined;
            resourceInputs["tunnelInterfaceLowBandwidthLink"] = state ? state.tunnelInterfaceLowBandwidthLink : undefined;
            resourceInputs["tunnelInterfaceLowBandwidthLinkVariable"] = state ? state.tunnelInterfaceLowBandwidthLinkVariable : undefined;
            resourceInputs["tunnelInterfaceMaxControlConnections"] = state ? state.tunnelInterfaceMaxControlConnections : undefined;
            resourceInputs["tunnelInterfaceMaxControlConnectionsVariable"] = state ? state.tunnelInterfaceMaxControlConnectionsVariable : undefined;
            resourceInputs["tunnelInterfaceNatRefreshInterval"] = state ? state.tunnelInterfaceNatRefreshInterval : undefined;
            resourceInputs["tunnelInterfaceNatRefreshIntervalVariable"] = state ? state.tunnelInterfaceNatRefreshIntervalVariable : undefined;
            resourceInputs["tunnelInterfaceNetworkBroadcast"] = state ? state.tunnelInterfaceNetworkBroadcast : undefined;
            resourceInputs["tunnelInterfaceNetworkBroadcastVariable"] = state ? state.tunnelInterfaceNetworkBroadcastVariable : undefined;
            resourceInputs["tunnelInterfacePortHop"] = state ? state.tunnelInterfacePortHop : undefined;
            resourceInputs["tunnelInterfacePortHopVariable"] = state ? state.tunnelInterfacePortHopVariable : undefined;
            resourceInputs["tunnelInterfaceTunnelTcpMss"] = state ? state.tunnelInterfaceTunnelTcpMss : undefined;
            resourceInputs["tunnelInterfaceTunnelTcpMssVariable"] = state ? state.tunnelInterfaceTunnelTcpMssVariable : undefined;
            resourceInputs["tunnelInterfaceVbondAsStunServer"] = state ? state.tunnelInterfaceVbondAsStunServer : undefined;
            resourceInputs["tunnelInterfaceVbondAsStunServerVariable"] = state ? state.tunnelInterfaceVbondAsStunServerVariable : undefined;
            resourceInputs["tunnelInterfaceVmanageConnectionPreference"] = state ? state.tunnelInterfaceVmanageConnectionPreference : undefined;
            resourceInputs["tunnelInterfaceVmanageConnectionPreferenceVariable"] = state ? state.tunnelInterfaceVmanageConnectionPreferenceVariable : undefined;
            resourceInputs["tunnelQosMode"] = state ? state.tunnelQosMode : undefined;
            resourceInputs["tunnelQosModeVariable"] = state ? state.tunnelQosModeVariable : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["xconnect"] = state ? state.xconnect : undefined;
            resourceInputs["xconnectVariable"] = state ? state.xconnectVariable : undefined;
        } else {
            const args = argsOrState as TransportWanVpnInterfaceEthernetFeatureArgs | undefined;
            if ((!args || args.featureProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'featureProfileId'");
            }
            resourceInputs["aclIpv4EgressFeatureId"] = args ? args.aclIpv4EgressFeatureId : undefined;
            resourceInputs["aclIpv4IngressFeatureId"] = args ? args.aclIpv4IngressFeatureId : undefined;
            resourceInputs["aclIpv6EgressFeatureId"] = args ? args.aclIpv6EgressFeatureId : undefined;
            resourceInputs["aclIpv6IngressFeatureId"] = args ? args.aclIpv6IngressFeatureId : undefined;
            resourceInputs["arpTimeout"] = args ? args.arpTimeout : undefined;
            resourceInputs["arpTimeoutVariable"] = args ? args.arpTimeoutVariable : undefined;
            resourceInputs["arps"] = args ? args.arps : undefined;
            resourceInputs["autoDetectBandwidth"] = args ? args.autoDetectBandwidth : undefined;
            resourceInputs["autoDetectBandwidthVariable"] = args ? args.autoDetectBandwidthVariable : undefined;
            resourceInputs["autonegotiate"] = args ? args.autonegotiate : undefined;
            resourceInputs["autonegotiateVariable"] = args ? args.autonegotiateVariable : undefined;
            resourceInputs["bandwidthDownstream"] = args ? args.bandwidthDownstream : undefined;
            resourceInputs["bandwidthDownstreamVariable"] = args ? args.bandwidthDownstreamVariable : undefined;
            resourceInputs["bandwidthUpstream"] = args ? args.bandwidthUpstream : undefined;
            resourceInputs["bandwidthUpstreamVariable"] = args ? args.bandwidthUpstreamVariable : undefined;
            resourceInputs["blockNonSourceIp"] = args ? args.blockNonSourceIp : undefined;
            resourceInputs["blockNonSourceIpVariable"] = args ? args.blockNonSourceIpVariable : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["duplex"] = args ? args.duplex : undefined;
            resourceInputs["duplexVariable"] = args ? args.duplexVariable : undefined;
            resourceInputs["enableDhcpv6"] = args ? args.enableDhcpv6 : undefined;
            resourceInputs["featureProfileId"] = args ? args.featureProfileId : undefined;
            resourceInputs["greTunnelSourceIp"] = args ? args.greTunnelSourceIp : undefined;
            resourceInputs["greTunnelSourceIpVariable"] = args ? args.greTunnelSourceIpVariable : undefined;
            resourceInputs["icmpRedirectDisable"] = args ? args.icmpRedirectDisable : undefined;
            resourceInputs["icmpRedirectDisableVariable"] = args ? args.icmpRedirectDisableVariable : undefined;
            resourceInputs["interfaceDescription"] = args ? args.interfaceDescription : undefined;
            resourceInputs["interfaceDescriptionVariable"] = args ? args.interfaceDescriptionVariable : undefined;
            resourceInputs["interfaceMtu"] = args ? args.interfaceMtu : undefined;
            resourceInputs["interfaceMtuVariable"] = args ? args.interfaceMtuVariable : undefined;
            resourceInputs["interfaceName"] = args ? args.interfaceName : undefined;
            resourceInputs["interfaceNameVariable"] = args ? args.interfaceNameVariable : undefined;
            resourceInputs["ipDirectedBroadcast"] = args ? args.ipDirectedBroadcast : undefined;
            resourceInputs["ipDirectedBroadcastVariable"] = args ? args.ipDirectedBroadcastVariable : undefined;
            resourceInputs["ipMtu"] = args ? args.ipMtu : undefined;
            resourceInputs["ipMtuVariable"] = args ? args.ipMtuVariable : undefined;
            resourceInputs["iperfServer"] = args ? args.iperfServer : undefined;
            resourceInputs["iperfServerVariable"] = args ? args.iperfServerVariable : undefined;
            resourceInputs["ipv4Address"] = args ? args.ipv4Address : undefined;
            resourceInputs["ipv4AddressVariable"] = args ? args.ipv4AddressVariable : undefined;
            resourceInputs["ipv4ConfigurationType"] = args ? args.ipv4ConfigurationType : undefined;
            resourceInputs["ipv4DhcpDistance"] = args ? args.ipv4DhcpDistance : undefined;
            resourceInputs["ipv4DhcpDistanceVariable"] = args ? args.ipv4DhcpDistanceVariable : undefined;
            resourceInputs["ipv4DhcpHelperVariable"] = args ? args.ipv4DhcpHelperVariable : undefined;
            resourceInputs["ipv4DhcpHelpers"] = args ? args.ipv4DhcpHelpers : undefined;
            resourceInputs["ipv4SecondaryAddresses"] = args ? args.ipv4SecondaryAddresses : undefined;
            resourceInputs["ipv4SubnetMask"] = args ? args.ipv4SubnetMask : undefined;
            resourceInputs["ipv4SubnetMaskVariable"] = args ? args.ipv4SubnetMaskVariable : undefined;
            resourceInputs["ipv6Address"] = args ? args.ipv6Address : undefined;
            resourceInputs["ipv6AddressVariable"] = args ? args.ipv6AddressVariable : undefined;
            resourceInputs["ipv6ConfigurationType"] = args ? args.ipv6ConfigurationType : undefined;
            resourceInputs["ipv6DhcpSecondaryAddresses"] = args ? args.ipv6DhcpSecondaryAddresses : undefined;
            resourceInputs["ipv6SecondaryAddresses"] = args ? args.ipv6SecondaryAddresses : undefined;
            resourceInputs["loadInterval"] = args ? args.loadInterval : undefined;
            resourceInputs["loadIntervalVariable"] = args ? args.loadIntervalVariable : undefined;
            resourceInputs["macAddress"] = args ? args.macAddress : undefined;
            resourceInputs["macAddressVariable"] = args ? args.macAddressVariable : undefined;
            resourceInputs["mediaType"] = args ? args.mediaType : undefined;
            resourceInputs["mediaTypeVariable"] = args ? args.mediaTypeVariable : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nat64"] = args ? args.nat64 : undefined;
            resourceInputs["nat66"] = args ? args.nat66 : undefined;
            resourceInputs["natIpv4"] = args ? args.natIpv4 : undefined;
            resourceInputs["natIpv4Variable"] = args ? args.natIpv4Variable : undefined;
            resourceInputs["natIpv6"] = args ? args.natIpv6 : undefined;
            resourceInputs["natIpv6Variable"] = args ? args.natIpv6Variable : undefined;
            resourceInputs["natLoopback"] = args ? args.natLoopback : undefined;
            resourceInputs["natLoopbackVariable"] = args ? args.natLoopbackVariable : undefined;
            resourceInputs["natOverload"] = args ? args.natOverload : undefined;
            resourceInputs["natOverloadVariable"] = args ? args.natOverloadVariable : undefined;
            resourceInputs["natPrefixLength"] = args ? args.natPrefixLength : undefined;
            resourceInputs["natPrefixLengthVariable"] = args ? args.natPrefixLengthVariable : undefined;
            resourceInputs["natRangeEnd"] = args ? args.natRangeEnd : undefined;
            resourceInputs["natRangeEndVariable"] = args ? args.natRangeEndVariable : undefined;
            resourceInputs["natRangeStart"] = args ? args.natRangeStart : undefined;
            resourceInputs["natRangeStartVariable"] = args ? args.natRangeStartVariable : undefined;
            resourceInputs["natTcpTimeout"] = args ? args.natTcpTimeout : undefined;
            resourceInputs["natTcpTimeoutVariable"] = args ? args.natTcpTimeoutVariable : undefined;
            resourceInputs["natType"] = args ? args.natType : undefined;
            resourceInputs["natTypeVariable"] = args ? args.natTypeVariable : undefined;
            resourceInputs["natUdpTimeout"] = args ? args.natUdpTimeout : undefined;
            resourceInputs["natUdpTimeoutVariable"] = args ? args.natUdpTimeoutVariable : undefined;
            resourceInputs["newStaticNats"] = args ? args.newStaticNats : undefined;
            resourceInputs["perTunnelQos"] = args ? args.perTunnelQos : undefined;
            resourceInputs["perTunnelQosVariable"] = args ? args.perTunnelQosVariable : undefined;
            resourceInputs["qosAdaptive"] = args ? args.qosAdaptive : undefined;
            resourceInputs["qosAdaptiveBandwidthDownstream"] = args ? args.qosAdaptiveBandwidthDownstream : undefined;
            resourceInputs["qosAdaptiveBandwidthUpstream"] = args ? args.qosAdaptiveBandwidthUpstream : undefined;
            resourceInputs["qosAdaptiveDefaultDownstream"] = args ? args.qosAdaptiveDefaultDownstream : undefined;
            resourceInputs["qosAdaptiveDefaultDownstreamVariable"] = args ? args.qosAdaptiveDefaultDownstreamVariable : undefined;
            resourceInputs["qosAdaptiveDefaultUpstream"] = args ? args.qosAdaptiveDefaultUpstream : undefined;
            resourceInputs["qosAdaptiveDefaultUpstreamVariable"] = args ? args.qosAdaptiveDefaultUpstreamVariable : undefined;
            resourceInputs["qosAdaptiveMaxDownstream"] = args ? args.qosAdaptiveMaxDownstream : undefined;
            resourceInputs["qosAdaptiveMaxDownstreamVariable"] = args ? args.qosAdaptiveMaxDownstreamVariable : undefined;
            resourceInputs["qosAdaptiveMaxUpstream"] = args ? args.qosAdaptiveMaxUpstream : undefined;
            resourceInputs["qosAdaptiveMaxUpstreamVariable"] = args ? args.qosAdaptiveMaxUpstreamVariable : undefined;
            resourceInputs["qosAdaptiveMinDownstream"] = args ? args.qosAdaptiveMinDownstream : undefined;
            resourceInputs["qosAdaptiveMinDownstreamVariable"] = args ? args.qosAdaptiveMinDownstreamVariable : undefined;
            resourceInputs["qosAdaptiveMinUpstream"] = args ? args.qosAdaptiveMinUpstream : undefined;
            resourceInputs["qosAdaptiveMinUpstreamVariable"] = args ? args.qosAdaptiveMinUpstreamVariable : undefined;
            resourceInputs["qosAdaptivePeriod"] = args ? args.qosAdaptivePeriod : undefined;
            resourceInputs["qosAdaptivePeriodVariable"] = args ? args.qosAdaptivePeriodVariable : undefined;
            resourceInputs["qosShapingRate"] = args ? args.qosShapingRate : undefined;
            resourceInputs["qosShapingRateVariable"] = args ? args.qosShapingRateVariable : undefined;
            resourceInputs["serviceProvider"] = args ? args.serviceProvider : undefined;
            resourceInputs["serviceProviderVariable"] = args ? args.serviceProviderVariable : undefined;
            resourceInputs["shutdown"] = args ? args.shutdown : undefined;
            resourceInputs["shutdownVariable"] = args ? args.shutdownVariable : undefined;
            resourceInputs["speed"] = args ? args.speed : undefined;
            resourceInputs["speedVariable"] = args ? args.speedVariable : undefined;
            resourceInputs["staticNat66s"] = args ? args.staticNat66s : undefined;
            resourceInputs["tcpMss"] = args ? args.tcpMss : undefined;
            resourceInputs["tcpMssVariable"] = args ? args.tcpMssVariable : undefined;
            resourceInputs["tlocExtension"] = args ? args.tlocExtension : undefined;
            resourceInputs["tlocExtensionVariable"] = args ? args.tlocExtensionVariable : undefined;
            resourceInputs["tracker"] = args ? args.tracker : undefined;
            resourceInputs["trackerVariable"] = args ? args.trackerVariable : undefined;
            resourceInputs["transportWanVpnFeatureId"] = args ? args.transportWanVpnFeatureId : undefined;
            resourceInputs["tunnelBandwidthPercent"] = args ? args.tunnelBandwidthPercent : undefined;
            resourceInputs["tunnelBandwidthPercentVariable"] = args ? args.tunnelBandwidthPercentVariable : undefined;
            resourceInputs["tunnelInterface"] = args ? args.tunnelInterface : undefined;
            resourceInputs["tunnelInterfaceAllowAll"] = args ? args.tunnelInterfaceAllowAll : undefined;
            resourceInputs["tunnelInterfaceAllowAllVariable"] = args ? args.tunnelInterfaceAllowAllVariable : undefined;
            resourceInputs["tunnelInterfaceAllowBfd"] = args ? args.tunnelInterfaceAllowBfd : undefined;
            resourceInputs["tunnelInterfaceAllowBfdVariable"] = args ? args.tunnelInterfaceAllowBfdVariable : undefined;
            resourceInputs["tunnelInterfaceAllowBgp"] = args ? args.tunnelInterfaceAllowBgp : undefined;
            resourceInputs["tunnelInterfaceAllowBgpVariable"] = args ? args.tunnelInterfaceAllowBgpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowDhcp"] = args ? args.tunnelInterfaceAllowDhcp : undefined;
            resourceInputs["tunnelInterfaceAllowDhcpVariable"] = args ? args.tunnelInterfaceAllowDhcpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowDns"] = args ? args.tunnelInterfaceAllowDns : undefined;
            resourceInputs["tunnelInterfaceAllowDnsVariable"] = args ? args.tunnelInterfaceAllowDnsVariable : undefined;
            resourceInputs["tunnelInterfaceAllowHttps"] = args ? args.tunnelInterfaceAllowHttps : undefined;
            resourceInputs["tunnelInterfaceAllowHttpsVariable"] = args ? args.tunnelInterfaceAllowHttpsVariable : undefined;
            resourceInputs["tunnelInterfaceAllowIcmp"] = args ? args.tunnelInterfaceAllowIcmp : undefined;
            resourceInputs["tunnelInterfaceAllowIcmpVariable"] = args ? args.tunnelInterfaceAllowIcmpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowNetconf"] = args ? args.tunnelInterfaceAllowNetconf : undefined;
            resourceInputs["tunnelInterfaceAllowNetconfVariable"] = args ? args.tunnelInterfaceAllowNetconfVariable : undefined;
            resourceInputs["tunnelInterfaceAllowNtp"] = args ? args.tunnelInterfaceAllowNtp : undefined;
            resourceInputs["tunnelInterfaceAllowNtpVariable"] = args ? args.tunnelInterfaceAllowNtpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowOspf"] = args ? args.tunnelInterfaceAllowOspf : undefined;
            resourceInputs["tunnelInterfaceAllowOspfVariable"] = args ? args.tunnelInterfaceAllowOspfVariable : undefined;
            resourceInputs["tunnelInterfaceAllowSnmp"] = args ? args.tunnelInterfaceAllowSnmp : undefined;
            resourceInputs["tunnelInterfaceAllowSnmpVariable"] = args ? args.tunnelInterfaceAllowSnmpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowSsh"] = args ? args.tunnelInterfaceAllowSsh : undefined;
            resourceInputs["tunnelInterfaceAllowSshVariable"] = args ? args.tunnelInterfaceAllowSshVariable : undefined;
            resourceInputs["tunnelInterfaceAllowStun"] = args ? args.tunnelInterfaceAllowStun : undefined;
            resourceInputs["tunnelInterfaceAllowStunVariable"] = args ? args.tunnelInterfaceAllowStunVariable : undefined;
            resourceInputs["tunnelInterfaceBindLoopbackTunnel"] = args ? args.tunnelInterfaceBindLoopbackTunnel : undefined;
            resourceInputs["tunnelInterfaceBindLoopbackTunnelVariable"] = args ? args.tunnelInterfaceBindLoopbackTunnelVariable : undefined;
            resourceInputs["tunnelInterfaceBorder"] = args ? args.tunnelInterfaceBorder : undefined;
            resourceInputs["tunnelInterfaceBorderVariable"] = args ? args.tunnelInterfaceBorderVariable : undefined;
            resourceInputs["tunnelInterfaceCarrier"] = args ? args.tunnelInterfaceCarrier : undefined;
            resourceInputs["tunnelInterfaceCarrierVariable"] = args ? args.tunnelInterfaceCarrierVariable : undefined;
            resourceInputs["tunnelInterfaceClearDontFragment"] = args ? args.tunnelInterfaceClearDontFragment : undefined;
            resourceInputs["tunnelInterfaceClearDontFragmentVariable"] = args ? args.tunnelInterfaceClearDontFragmentVariable : undefined;
            resourceInputs["tunnelInterfaceColor"] = args ? args.tunnelInterfaceColor : undefined;
            resourceInputs["tunnelInterfaceColorRestrict"] = args ? args.tunnelInterfaceColorRestrict : undefined;
            resourceInputs["tunnelInterfaceColorRestrictVariable"] = args ? args.tunnelInterfaceColorRestrictVariable : undefined;
            resourceInputs["tunnelInterfaceColorVariable"] = args ? args.tunnelInterfaceColorVariable : undefined;
            resourceInputs["tunnelInterfaceCtsSgtPropagation"] = args ? args.tunnelInterfaceCtsSgtPropagation : undefined;
            resourceInputs["tunnelInterfaceCtsSgtPropagationVariable"] = args ? args.tunnelInterfaceCtsSgtPropagationVariable : undefined;
            resourceInputs["tunnelInterfaceEncapsulations"] = args ? args.tunnelInterfaceEncapsulations : undefined;
            resourceInputs["tunnelInterfaceExcludeControllerGroupListVariable"] = args ? args.tunnelInterfaceExcludeControllerGroupListVariable : undefined;
            resourceInputs["tunnelInterfaceExcludeControllerGroupLists"] = args ? args.tunnelInterfaceExcludeControllerGroupLists : undefined;
            resourceInputs["tunnelInterfaceGreTunnelDestinationIp"] = args ? args.tunnelInterfaceGreTunnelDestinationIp : undefined;
            resourceInputs["tunnelInterfaceGreTunnelDestinationIpVariable"] = args ? args.tunnelInterfaceGreTunnelDestinationIpVariable : undefined;
            resourceInputs["tunnelInterfaceGroups"] = args ? args.tunnelInterfaceGroups : undefined;
            resourceInputs["tunnelInterfaceGroupsVariable"] = args ? args.tunnelInterfaceGroupsVariable : undefined;
            resourceInputs["tunnelInterfaceHelloInterval"] = args ? args.tunnelInterfaceHelloInterval : undefined;
            resourceInputs["tunnelInterfaceHelloIntervalVariable"] = args ? args.tunnelInterfaceHelloIntervalVariable : undefined;
            resourceInputs["tunnelInterfaceHelloTolerance"] = args ? args.tunnelInterfaceHelloTolerance : undefined;
            resourceInputs["tunnelInterfaceHelloToleranceVariable"] = args ? args.tunnelInterfaceHelloToleranceVariable : undefined;
            resourceInputs["tunnelInterfaceLastResortCircuit"] = args ? args.tunnelInterfaceLastResortCircuit : undefined;
            resourceInputs["tunnelInterfaceLastResortCircuitVariable"] = args ? args.tunnelInterfaceLastResortCircuitVariable : undefined;
            resourceInputs["tunnelInterfaceLowBandwidthLink"] = args ? args.tunnelInterfaceLowBandwidthLink : undefined;
            resourceInputs["tunnelInterfaceLowBandwidthLinkVariable"] = args ? args.tunnelInterfaceLowBandwidthLinkVariable : undefined;
            resourceInputs["tunnelInterfaceMaxControlConnections"] = args ? args.tunnelInterfaceMaxControlConnections : undefined;
            resourceInputs["tunnelInterfaceMaxControlConnectionsVariable"] = args ? args.tunnelInterfaceMaxControlConnectionsVariable : undefined;
            resourceInputs["tunnelInterfaceNatRefreshInterval"] = args ? args.tunnelInterfaceNatRefreshInterval : undefined;
            resourceInputs["tunnelInterfaceNatRefreshIntervalVariable"] = args ? args.tunnelInterfaceNatRefreshIntervalVariable : undefined;
            resourceInputs["tunnelInterfaceNetworkBroadcast"] = args ? args.tunnelInterfaceNetworkBroadcast : undefined;
            resourceInputs["tunnelInterfaceNetworkBroadcastVariable"] = args ? args.tunnelInterfaceNetworkBroadcastVariable : undefined;
            resourceInputs["tunnelInterfacePortHop"] = args ? args.tunnelInterfacePortHop : undefined;
            resourceInputs["tunnelInterfacePortHopVariable"] = args ? args.tunnelInterfacePortHopVariable : undefined;
            resourceInputs["tunnelInterfaceTunnelTcpMss"] = args ? args.tunnelInterfaceTunnelTcpMss : undefined;
            resourceInputs["tunnelInterfaceTunnelTcpMssVariable"] = args ? args.tunnelInterfaceTunnelTcpMssVariable : undefined;
            resourceInputs["tunnelInterfaceVbondAsStunServer"] = args ? args.tunnelInterfaceVbondAsStunServer : undefined;
            resourceInputs["tunnelInterfaceVbondAsStunServerVariable"] = args ? args.tunnelInterfaceVbondAsStunServerVariable : undefined;
            resourceInputs["tunnelInterfaceVmanageConnectionPreference"] = args ? args.tunnelInterfaceVmanageConnectionPreference : undefined;
            resourceInputs["tunnelInterfaceVmanageConnectionPreferenceVariable"] = args ? args.tunnelInterfaceVmanageConnectionPreferenceVariable : undefined;
            resourceInputs["tunnelQosMode"] = args ? args.tunnelQosMode : undefined;
            resourceInputs["tunnelQosModeVariable"] = args ? args.tunnelQosModeVariable : undefined;
            resourceInputs["xconnect"] = args ? args.xconnect : undefined;
            resourceInputs["xconnectVariable"] = args ? args.xconnectVariable : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransportWanVpnInterfaceEthernetFeature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TransportWanVpnInterfaceEthernetFeature resources.
 */
export interface TransportWanVpnInterfaceEthernetFeatureState {
    aclIpv4EgressFeatureId?: pulumi.Input<string>;
    aclIpv4IngressFeatureId?: pulumi.Input<string>;
    aclIpv6EgressFeatureId?: pulumi.Input<string>;
    aclIpv6IngressFeatureId?: pulumi.Input<string>;
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
     */
    arpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    arpTimeoutVariable?: pulumi.Input<string>;
    /**
     * Configure ARP entries
     */
    arps?: pulumi.Input<pulumi.Input<inputs.TransportWanVpnInterfaceEthernetFeatureArp>[]>;
    /**
     * Interface auto detect bandwidth - Default value: `false`
     */
    autoDetectBandwidth?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    autoDetectBandwidthVariable?: pulumi.Input<string>;
    /**
     * Link autonegotiation
     */
    autonegotiate?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    autonegotiateVariable?: pulumi.Input<string>;
    /**
     * Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     */
    bandwidthDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    bandwidthDownstreamVariable?: pulumi.Input<string>;
    /**
     * Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     */
    bandwidthUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    bandwidthUpstreamVariable?: pulumi.Input<string>;
    /**
     * Block packets originating from IP address that is not from this source - Default value: `false`
     */
    blockNonSourceIp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    blockNonSourceIpVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Duplex mode - Choices: `full`, `half`, `auto`
     */
    duplex?: pulumi.Input<string>;
    /**
     * Variable name
     */
    duplexVariable?: pulumi.Input<string>;
    /**
     * Enable DHCPv6, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
     */
    enableDhcpv6?: pulumi.Input<boolean>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * GRE tunnel source IP
     */
    greTunnelSourceIp?: pulumi.Input<string>;
    /**
     * Variable name
     */
    greTunnelSourceIpVariable?: pulumi.Input<string>;
    /**
     * ICMP/ICMPv6 Redirect Disable - Default value: `true`
     */
    icmpRedirectDisable?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    icmpRedirectDisableVariable?: pulumi.Input<string>;
    interfaceDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceDescriptionVariable?: pulumi.Input<string>;
    /**
     * Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
     * Default value: `1500`
     */
    interfaceMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    interfaceMtuVariable?: pulumi.Input<string>;
    interfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceNameVariable?: pulumi.Input<string>;
    /**
     * IP Directed-Broadcast - Default value: `false`
     */
    ipDirectedBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipDirectedBroadcastVariable?: pulumi.Input<string>;
    /**
     * IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
     * <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * Iperf server for auto bandwidth detect
     */
    iperfServer?: pulumi.Input<string>;
    /**
     * Variable name
     */
    iperfServerVariable?: pulumi.Input<string>;
    /**
     * IP Address, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4AddressVariable?: pulumi.Input<string>;
    /**
     * IPv4 Configuration Type - Choices: `dynamic`, `static` - Default value: `dynamic`
     */
    ipv4ConfigurationType?: pulumi.Input<string>;
    /**
     * DHCP Distance, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic` - Range: `1`-`65536` - Default
     * value: `1`
     */
    ipv4DhcpDistance?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipv4DhcpDistanceVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4DhcpHelperVariable?: pulumi.Input<string>;
    /**
     * List of DHCP IPv4 helper addresses (min 1, max 8)
     */
    ipv4DhcpHelpers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Secondary IpV4 Addresses, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     */
    ipv4SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.TransportWanVpnInterfaceEthernetFeatureIpv4SecondaryAddress>[]>;
    /**
     * Subnet Mask, Attribute conditional on `ipv4ConfigurationType` being equal to `static` - Choices: `255.255.255.255`,
     * `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`,
     * `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`,
     * `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`,
     * `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`,
     * `128.0.0.0`, `0.0.0.0`
     */
    ipv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * IPv6 Address Secondary, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv6AddressVariable?: pulumi.Input<string>;
    /**
     * IPv6 Configuration Type - Choices: `dynamic`, `static`, `none` - Default value: `none`
     */
    ipv6ConfigurationType?: pulumi.Input<string>;
    /**
     * secondary IPv6 addresses, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
     */
    ipv6DhcpSecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.TransportWanVpnInterfaceEthernetFeatureIpv6DhcpSecondaryAddress>[]>;
    /**
     * Static secondary IPv6 addresses, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
     */
    ipv6SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.TransportWanVpnInterfaceEthernetFeatureIpv6SecondaryAddress>[]>;
    /**
     * Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
     */
    loadInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    loadIntervalVariable?: pulumi.Input<string>;
    /**
     * MAC Address
     */
    macAddress?: pulumi.Input<string>;
    /**
     * Variable name
     */
    macAddressVariable?: pulumi.Input<string>;
    /**
     * Media type - Choices: `auto-select`, `rj45`, `sfp`
     */
    mediaType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    mediaTypeVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * NAT64 on this interface - Default value: `false`
     */
    nat64?: pulumi.Input<boolean>;
    /**
     * NAT66 on this interface - Default value: `false`
     */
    nat66?: pulumi.Input<boolean>;
    /**
     * enable Network Address Translation on this interface - Default value: `false`
     */
    natIpv4?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    natIpv4Variable?: pulumi.Input<string>;
    /**
     * enable Network Address Translation ipv6 on this interface - Default value: `false`
     */
    natIpv6?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    natIpv6Variable?: pulumi.Input<string>;
    /**
     * NAT Inside Source Loopback Interface
     */
    natLoopback?: pulumi.Input<string>;
    /**
     * Variable name
     */
    natLoopbackVariable?: pulumi.Input<string>;
    /**
     * NAT Overload - Default value: `true`
     */
    natOverload?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    natOverloadVariable?: pulumi.Input<string>;
    /**
     * NAT Pool Prefix Length - Range: `1`-`32`
     */
    natPrefixLength?: pulumi.Input<number>;
    /**
     * Variable name
     */
    natPrefixLengthVariable?: pulumi.Input<string>;
    /**
     * NAT Pool Range End
     */
    natRangeEnd?: pulumi.Input<string>;
    /**
     * Variable name
     */
    natRangeEndVariable?: pulumi.Input<string>;
    /**
     * NAT Pool Range Start
     */
    natRangeStart?: pulumi.Input<string>;
    /**
     * Variable name
     */
    natRangeStartVariable?: pulumi.Input<string>;
    /**
     * Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
     */
    natTcpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    natTcpTimeoutVariable?: pulumi.Input<string>;
    /**
     * NAT Type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
     */
    natType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    natTypeVariable?: pulumi.Input<string>;
    /**
     * Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
     */
    natUdpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    natUdpTimeoutVariable?: pulumi.Input<string>;
    /**
     * static NAT
     */
    newStaticNats?: pulumi.Input<pulumi.Input<inputs.TransportWanVpnInterfaceEthernetFeatureNewStaticNat>[]>;
    /**
     * Per-tunnel Qos - Default value: `false`
     */
    perTunnelQos?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    perTunnelQosVariable?: pulumi.Input<string>;
    /**
     * Adaptive QoS - Default value: `false`
     */
    qosAdaptive?: pulumi.Input<boolean>;
    /**
     * Shaping Rate Downstream - Default value: `false`
     */
    qosAdaptiveBandwidthDownstream?: pulumi.Input<boolean>;
    /**
     * Shaping Rate Upstream - Default value: `false`
     */
    qosAdaptiveBandwidthUpstream?: pulumi.Input<boolean>;
    /**
     * Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
     */
    qosAdaptiveDefaultDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveDefaultDownstreamVariable?: pulumi.Input<string>;
    /**
     * Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
     */
    qosAdaptiveDefaultUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveDefaultUpstreamVariable?: pulumi.Input<string>;
    /**
     * Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
     */
    qosAdaptiveMaxDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMaxDownstreamVariable?: pulumi.Input<string>;
    /**
     * Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
     */
    qosAdaptiveMaxUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMaxUpstreamVariable?: pulumi.Input<string>;
    /**
     * Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
     */
    qosAdaptiveMinDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMinDownstreamVariable?: pulumi.Input<string>;
    /**
     * Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
     */
    qosAdaptiveMinUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMinUpstreamVariable?: pulumi.Input<string>;
    /**
     * Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
     */
    qosAdaptivePeriod?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptivePeriodVariable?: pulumi.Input<string>;
    /**
     * Shaping Rate (Kbps) - Range: `8`-`100000000`
     */
    qosShapingRate?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosShapingRateVariable?: pulumi.Input<string>;
    /**
     * Service Provider Name
     */
    serviceProvider?: pulumi.Input<string>;
    /**
     * Variable name
     */
    serviceProviderVariable?: pulumi.Input<string>;
    /**
     * - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
     */
    speed?: pulumi.Input<string>;
    /**
     * Variable name
     */
    speedVariable?: pulumi.Input<string>;
    /**
     * static NAT66
     */
    staticNat66s?: pulumi.Input<pulumi.Input<inputs.TransportWanVpnInterfaceEthernetFeatureStaticNat66>[]>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    tcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssVariable?: pulumi.Input<string>;
    /**
     * Extends a local TLOC to a remote node only for vpn 0
     */
    tlocExtension?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tlocExtensionVariable?: pulumi.Input<string>;
    /**
     * Enable tracker for this interface
     */
    tracker?: pulumi.Input<string>;
    /**
     * Variable name
     */
    trackerVariable?: pulumi.Input<string>;
    /**
     * Transport WAN VPN Feature ID
     */
    transportWanVpnFeatureId?: pulumi.Input<string>;
    /**
     * Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
     */
    tunnelBandwidthPercent?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelBandwidthPercentVariable?: pulumi.Input<string>;
    /**
     * Tunnel Interface on/off - Default value: `false`
     */
    tunnelInterface?: pulumi.Input<boolean>;
    /**
     * Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
     */
    tunnelInterfaceAllowAll?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowAllVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny BFD - Default value: `false`
     */
    tunnelInterfaceAllowBfd?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowBfdVariable?: pulumi.Input<string>;
    /**
     * Allow/deny BGP - Default value: `false`
     */
    tunnelInterfaceAllowBgp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowBgpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny DHCP - Default value: `true`
     */
    tunnelInterfaceAllowDhcp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowDhcpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny DNS - Default value: `true`
     */
    tunnelInterfaceAllowDns?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowDnsVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny HTTPS - Default value: `true`
     */
    tunnelInterfaceAllowHttps?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowHttpsVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny ICMP - Default value: `true`
     */
    tunnelInterfaceAllowIcmp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowIcmpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny NETCONF - Default value: `false`
     */
    tunnelInterfaceAllowNetconf?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowNetconfVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny NTP - Default value: `true`
     */
    tunnelInterfaceAllowNtp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowNtpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny OSPF - Default value: `false`
     */
    tunnelInterfaceAllowOspf?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowOspfVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny SNMP - Default value: `false`
     */
    tunnelInterfaceAllowSnmp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowSnmpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny SSH - Default value: `true`
     */
    tunnelInterfaceAllowSsh?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowSshVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny STUN - Default value: `false`
     */
    tunnelInterfaceAllowStun?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowStunVariable?: pulumi.Input<string>;
    /**
     * Bind loopback tunnel interface to a physical interface
     */
    tunnelInterfaceBindLoopbackTunnel?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceBindLoopbackTunnelVariable?: pulumi.Input<string>;
    /**
     * Set TLOC as border TLOC - Default value: `false`
     */
    tunnelInterfaceBorder?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceBorderVariable?: pulumi.Input<string>;
    /**
     * Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
     * `carrier7`, `carrier8` - Default value: `default`
     */
    tunnelInterfaceCarrier?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceCarrierVariable?: pulumi.Input<string>;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     */
    tunnelInterfaceClearDontFragment?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceClearDontFragmentVariable?: pulumi.Input<string>;
    /**
     * Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
     * `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
     * `private4`, `private5`, `private6` - Default value: `mpls`
     */
    tunnelInterfaceColor?: pulumi.Input<string>;
    /**
     * Restrict this TLOC behavior - Default value: `false`
     */
    tunnelInterfaceColorRestrict?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceColorRestrictVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceColorVariable?: pulumi.Input<string>;
    /**
     * CTS SGT Propagation configuration - Default value: `false`
     */
    tunnelInterfaceCtsSgtPropagation?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceCtsSgtPropagationVariable?: pulumi.Input<string>;
    /**
     * Encapsulation for TLOC
     */
    tunnelInterfaceEncapsulations?: pulumi.Input<pulumi.Input<inputs.TransportWanVpnInterfaceEthernetFeatureTunnelInterfaceEncapsulation>[]>;
    /**
     * Variable name
     */
    tunnelInterfaceExcludeControllerGroupListVariable?: pulumi.Input<string>;
    /**
     * Exclude the following controller groups defined in this list.
     */
    tunnelInterfaceExcludeControllerGroupLists?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * GRE tunnel destination IP
     */
    tunnelInterfaceGreTunnelDestinationIp?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceGreTunnelDestinationIpVariable?: pulumi.Input<string>;
    /**
     * List of groups - Range: `1`-`4294967295`
     */
    tunnelInterfaceGroups?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceGroupsVariable?: pulumi.Input<string>;
    /**
     * Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
     */
    tunnelInterfaceHelloInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceHelloIntervalVariable?: pulumi.Input<string>;
    /**
     * Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
     */
    tunnelInterfaceHelloTolerance?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceHelloToleranceVariable?: pulumi.Input<string>;
    /**
     * Set TLOC as last resort - Default value: `false`
     */
    tunnelInterfaceLastResortCircuit?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceLastResortCircuitVariable?: pulumi.Input<string>;
    /**
     * Set the interface as a low-bandwidth circuit - Default value: `false`
     */
    tunnelInterfaceLowBandwidthLink?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceLowBandwidthLinkVariable?: pulumi.Input<string>;
    /**
     * Maximum Control Connections - Range: `0`-`100`
     */
    tunnelInterfaceMaxControlConnections?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceMaxControlConnectionsVariable?: pulumi.Input<string>;
    /**
     * Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
     */
    tunnelInterfaceNatRefreshInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceNatRefreshIntervalVariable?: pulumi.Input<string>;
    /**
     * Accept and respond to network-prefix-directed broadcasts - Default value: `false`
     */
    tunnelInterfaceNetworkBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceNetworkBroadcastVariable?: pulumi.Input<string>;
    /**
     * Disallow port hopping on the tunnel interface - Default value: `true`
     */
    tunnelInterfacePortHop?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfacePortHopVariable?: pulumi.Input<string>;
    /**
     * Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    tunnelInterfaceTunnelTcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceTunnelTcpMssVariable?: pulumi.Input<string>;
    /**
     * Put this wan interface in STUN mode only - Default value: `false`
     */
    tunnelInterfaceVbondAsStunServer?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceVbondAsStunServerVariable?: pulumi.Input<string>;
    /**
     * Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
     */
    tunnelInterfaceVmanageConnectionPreference?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceVmanageConnectionPreferenceVariable?: pulumi.Input<string>;
    /**
     * Set tunnel QoS mode - Choices: `hub`, `spoke`
     */
    tunnelQosMode?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelQosModeVariable?: pulumi.Input<string>;
    /**
     * The version of the Feature
     */
    version?: pulumi.Input<number>;
    /**
     * Extend remote TLOC over a GRE tunnel to a local WAN interface
     */
    xconnect?: pulumi.Input<string>;
    /**
     * Variable name
     */
    xconnectVariable?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TransportWanVpnInterfaceEthernetFeature resource.
 */
export interface TransportWanVpnInterfaceEthernetFeatureArgs {
    aclIpv4EgressFeatureId?: pulumi.Input<string>;
    aclIpv4IngressFeatureId?: pulumi.Input<string>;
    aclIpv6EgressFeatureId?: pulumi.Input<string>;
    aclIpv6IngressFeatureId?: pulumi.Input<string>;
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2147483` - Default value: `1200`
     */
    arpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    arpTimeoutVariable?: pulumi.Input<string>;
    /**
     * Configure ARP entries
     */
    arps?: pulumi.Input<pulumi.Input<inputs.TransportWanVpnInterfaceEthernetFeatureArp>[]>;
    /**
     * Interface auto detect bandwidth - Default value: `false`
     */
    autoDetectBandwidth?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    autoDetectBandwidthVariable?: pulumi.Input<string>;
    /**
     * Link autonegotiation
     */
    autonegotiate?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    autonegotiateVariable?: pulumi.Input<string>;
    /**
     * Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     */
    bandwidthDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    bandwidthDownstreamVariable?: pulumi.Input<string>;
    /**
     * Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     */
    bandwidthUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    bandwidthUpstreamVariable?: pulumi.Input<string>;
    /**
     * Block packets originating from IP address that is not from this source - Default value: `false`
     */
    blockNonSourceIp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    blockNonSourceIpVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Duplex mode - Choices: `full`, `half`, `auto`
     */
    duplex?: pulumi.Input<string>;
    /**
     * Variable name
     */
    duplexVariable?: pulumi.Input<string>;
    /**
     * Enable DHCPv6, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
     */
    enableDhcpv6?: pulumi.Input<boolean>;
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * GRE tunnel source IP
     */
    greTunnelSourceIp?: pulumi.Input<string>;
    /**
     * Variable name
     */
    greTunnelSourceIpVariable?: pulumi.Input<string>;
    /**
     * ICMP/ICMPv6 Redirect Disable - Default value: `true`
     */
    icmpRedirectDisable?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    icmpRedirectDisableVariable?: pulumi.Input<string>;
    interfaceDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceDescriptionVariable?: pulumi.Input<string>;
    /**
     * Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
     * Default value: `1500`
     */
    interfaceMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    interfaceMtuVariable?: pulumi.Input<string>;
    interfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceNameVariable?: pulumi.Input<string>;
    /**
     * IP Directed-Broadcast - Default value: `false`
     */
    ipDirectedBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipDirectedBroadcastVariable?: pulumi.Input<string>;
    /**
     * IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
     * <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * Iperf server for auto bandwidth detect
     */
    iperfServer?: pulumi.Input<string>;
    /**
     * Variable name
     */
    iperfServerVariable?: pulumi.Input<string>;
    /**
     * IP Address, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4AddressVariable?: pulumi.Input<string>;
    /**
     * IPv4 Configuration Type - Choices: `dynamic`, `static` - Default value: `dynamic`
     */
    ipv4ConfigurationType?: pulumi.Input<string>;
    /**
     * DHCP Distance, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic` - Range: `1`-`65536` - Default
     * value: `1`
     */
    ipv4DhcpDistance?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipv4DhcpDistanceVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4DhcpHelperVariable?: pulumi.Input<string>;
    /**
     * List of DHCP IPv4 helper addresses (min 1, max 8)
     */
    ipv4DhcpHelpers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Secondary IpV4 Addresses, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     */
    ipv4SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.TransportWanVpnInterfaceEthernetFeatureIpv4SecondaryAddress>[]>;
    /**
     * Subnet Mask, Attribute conditional on `ipv4ConfigurationType` being equal to `static` - Choices: `255.255.255.255`,
     * `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`,
     * `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`,
     * `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`,
     * `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`,
     * `128.0.0.0`, `0.0.0.0`
     */
    ipv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * IPv6 Address Secondary, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv6AddressVariable?: pulumi.Input<string>;
    /**
     * IPv6 Configuration Type - Choices: `dynamic`, `static`, `none` - Default value: `none`
     */
    ipv6ConfigurationType?: pulumi.Input<string>;
    /**
     * secondary IPv6 addresses, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
     */
    ipv6DhcpSecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.TransportWanVpnInterfaceEthernetFeatureIpv6DhcpSecondaryAddress>[]>;
    /**
     * Static secondary IPv6 addresses, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
     */
    ipv6SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.TransportWanVpnInterfaceEthernetFeatureIpv6SecondaryAddress>[]>;
    /**
     * Interval for interface load calculation - Range: `30`-`600` - Default value: `30`
     */
    loadInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    loadIntervalVariable?: pulumi.Input<string>;
    /**
     * MAC Address
     */
    macAddress?: pulumi.Input<string>;
    /**
     * Variable name
     */
    macAddressVariable?: pulumi.Input<string>;
    /**
     * Media type - Choices: `auto-select`, `rj45`, `sfp`
     */
    mediaType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    mediaTypeVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * NAT64 on this interface - Default value: `false`
     */
    nat64?: pulumi.Input<boolean>;
    /**
     * NAT66 on this interface - Default value: `false`
     */
    nat66?: pulumi.Input<boolean>;
    /**
     * enable Network Address Translation on this interface - Default value: `false`
     */
    natIpv4?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    natIpv4Variable?: pulumi.Input<string>;
    /**
     * enable Network Address Translation ipv6 on this interface - Default value: `false`
     */
    natIpv6?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    natIpv6Variable?: pulumi.Input<string>;
    /**
     * NAT Inside Source Loopback Interface
     */
    natLoopback?: pulumi.Input<string>;
    /**
     * Variable name
     */
    natLoopbackVariable?: pulumi.Input<string>;
    /**
     * NAT Overload - Default value: `true`
     */
    natOverload?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    natOverloadVariable?: pulumi.Input<string>;
    /**
     * NAT Pool Prefix Length - Range: `1`-`32`
     */
    natPrefixLength?: pulumi.Input<number>;
    /**
     * Variable name
     */
    natPrefixLengthVariable?: pulumi.Input<string>;
    /**
     * NAT Pool Range End
     */
    natRangeEnd?: pulumi.Input<string>;
    /**
     * Variable name
     */
    natRangeEndVariable?: pulumi.Input<string>;
    /**
     * NAT Pool Range Start
     */
    natRangeStart?: pulumi.Input<string>;
    /**
     * Variable name
     */
    natRangeStartVariable?: pulumi.Input<string>;
    /**
     * Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
     */
    natTcpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    natTcpTimeoutVariable?: pulumi.Input<string>;
    /**
     * NAT Type - Choices: `interface`, `pool`, `loopback` - Default value: `interface`
     */
    natType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    natTypeVariable?: pulumi.Input<string>;
    /**
     * Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
     */
    natUdpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    natUdpTimeoutVariable?: pulumi.Input<string>;
    /**
     * static NAT
     */
    newStaticNats?: pulumi.Input<pulumi.Input<inputs.TransportWanVpnInterfaceEthernetFeatureNewStaticNat>[]>;
    /**
     * Per-tunnel Qos - Default value: `false`
     */
    perTunnelQos?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    perTunnelQosVariable?: pulumi.Input<string>;
    /**
     * Adaptive QoS - Default value: `false`
     */
    qosAdaptive?: pulumi.Input<boolean>;
    /**
     * Shaping Rate Downstream - Default value: `false`
     */
    qosAdaptiveBandwidthDownstream?: pulumi.Input<boolean>;
    /**
     * Shaping Rate Upstream - Default value: `false`
     */
    qosAdaptiveBandwidthUpstream?: pulumi.Input<boolean>;
    /**
     * Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
     */
    qosAdaptiveDefaultDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveDefaultDownstreamVariable?: pulumi.Input<string>;
    /**
     * Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
     */
    qosAdaptiveDefaultUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveDefaultUpstreamVariable?: pulumi.Input<string>;
    /**
     * Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
     */
    qosAdaptiveMaxDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMaxDownstreamVariable?: pulumi.Input<string>;
    /**
     * Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
     */
    qosAdaptiveMaxUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMaxUpstreamVariable?: pulumi.Input<string>;
    /**
     * Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
     */
    qosAdaptiveMinDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMinDownstreamVariable?: pulumi.Input<string>;
    /**
     * Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
     */
    qosAdaptiveMinUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMinUpstreamVariable?: pulumi.Input<string>;
    /**
     * Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
     */
    qosAdaptivePeriod?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptivePeriodVariable?: pulumi.Input<string>;
    /**
     * Shaping Rate (Kbps) - Range: `8`-`100000000`
     */
    qosShapingRate?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosShapingRateVariable?: pulumi.Input<string>;
    /**
     * Service Provider Name
     */
    serviceProvider?: pulumi.Input<string>;
    /**
     * Variable name
     */
    serviceProviderVariable?: pulumi.Input<string>;
    /**
     * - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * Set interface speed - Choices: `10`, `100`, `1000`, `2500`, `10000`
     */
    speed?: pulumi.Input<string>;
    /**
     * Variable name
     */
    speedVariable?: pulumi.Input<string>;
    /**
     * static NAT66
     */
    staticNat66s?: pulumi.Input<pulumi.Input<inputs.TransportWanVpnInterfaceEthernetFeatureStaticNat66>[]>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    tcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssVariable?: pulumi.Input<string>;
    /**
     * Extends a local TLOC to a remote node only for vpn 0
     */
    tlocExtension?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tlocExtensionVariable?: pulumi.Input<string>;
    /**
     * Enable tracker for this interface
     */
    tracker?: pulumi.Input<string>;
    /**
     * Variable name
     */
    trackerVariable?: pulumi.Input<string>;
    /**
     * Transport WAN VPN Feature ID
     */
    transportWanVpnFeatureId?: pulumi.Input<string>;
    /**
     * Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
     */
    tunnelBandwidthPercent?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelBandwidthPercentVariable?: pulumi.Input<string>;
    /**
     * Tunnel Interface on/off - Default value: `false`
     */
    tunnelInterface?: pulumi.Input<boolean>;
    /**
     * Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
     */
    tunnelInterfaceAllowAll?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowAllVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny BFD - Default value: `false`
     */
    tunnelInterfaceAllowBfd?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowBfdVariable?: pulumi.Input<string>;
    /**
     * Allow/deny BGP - Default value: `false`
     */
    tunnelInterfaceAllowBgp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowBgpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny DHCP - Default value: `true`
     */
    tunnelInterfaceAllowDhcp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowDhcpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny DNS - Default value: `true`
     */
    tunnelInterfaceAllowDns?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowDnsVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny HTTPS - Default value: `true`
     */
    tunnelInterfaceAllowHttps?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowHttpsVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny ICMP - Default value: `true`
     */
    tunnelInterfaceAllowIcmp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowIcmpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny NETCONF - Default value: `false`
     */
    tunnelInterfaceAllowNetconf?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowNetconfVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny NTP - Default value: `true`
     */
    tunnelInterfaceAllowNtp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowNtpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny OSPF - Default value: `false`
     */
    tunnelInterfaceAllowOspf?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowOspfVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny SNMP - Default value: `false`
     */
    tunnelInterfaceAllowSnmp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowSnmpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny SSH - Default value: `true`
     */
    tunnelInterfaceAllowSsh?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowSshVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny STUN - Default value: `false`
     */
    tunnelInterfaceAllowStun?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowStunVariable?: pulumi.Input<string>;
    /**
     * Bind loopback tunnel interface to a physical interface
     */
    tunnelInterfaceBindLoopbackTunnel?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceBindLoopbackTunnelVariable?: pulumi.Input<string>;
    /**
     * Set TLOC as border TLOC - Default value: `false`
     */
    tunnelInterfaceBorder?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceBorderVariable?: pulumi.Input<string>;
    /**
     * Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
     * `carrier7`, `carrier8` - Default value: `default`
     */
    tunnelInterfaceCarrier?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceCarrierVariable?: pulumi.Input<string>;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     */
    tunnelInterfaceClearDontFragment?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceClearDontFragmentVariable?: pulumi.Input<string>;
    /**
     * Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
     * `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
     * `private4`, `private5`, `private6` - Default value: `mpls`
     */
    tunnelInterfaceColor?: pulumi.Input<string>;
    /**
     * Restrict this TLOC behavior - Default value: `false`
     */
    tunnelInterfaceColorRestrict?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceColorRestrictVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceColorVariable?: pulumi.Input<string>;
    /**
     * CTS SGT Propagation configuration - Default value: `false`
     */
    tunnelInterfaceCtsSgtPropagation?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceCtsSgtPropagationVariable?: pulumi.Input<string>;
    /**
     * Encapsulation for TLOC
     */
    tunnelInterfaceEncapsulations?: pulumi.Input<pulumi.Input<inputs.TransportWanVpnInterfaceEthernetFeatureTunnelInterfaceEncapsulation>[]>;
    /**
     * Variable name
     */
    tunnelInterfaceExcludeControllerGroupListVariable?: pulumi.Input<string>;
    /**
     * Exclude the following controller groups defined in this list.
     */
    tunnelInterfaceExcludeControllerGroupLists?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * GRE tunnel destination IP
     */
    tunnelInterfaceGreTunnelDestinationIp?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceGreTunnelDestinationIpVariable?: pulumi.Input<string>;
    /**
     * List of groups - Range: `1`-`4294967295`
     */
    tunnelInterfaceGroups?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceGroupsVariable?: pulumi.Input<string>;
    /**
     * Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
     */
    tunnelInterfaceHelloInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceHelloIntervalVariable?: pulumi.Input<string>;
    /**
     * Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
     */
    tunnelInterfaceHelloTolerance?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceHelloToleranceVariable?: pulumi.Input<string>;
    /**
     * Set TLOC as last resort - Default value: `false`
     */
    tunnelInterfaceLastResortCircuit?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceLastResortCircuitVariable?: pulumi.Input<string>;
    /**
     * Set the interface as a low-bandwidth circuit - Default value: `false`
     */
    tunnelInterfaceLowBandwidthLink?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceLowBandwidthLinkVariable?: pulumi.Input<string>;
    /**
     * Maximum Control Connections - Range: `0`-`100`
     */
    tunnelInterfaceMaxControlConnections?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceMaxControlConnectionsVariable?: pulumi.Input<string>;
    /**
     * Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
     */
    tunnelInterfaceNatRefreshInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceNatRefreshIntervalVariable?: pulumi.Input<string>;
    /**
     * Accept and respond to network-prefix-directed broadcasts - Default value: `false`
     */
    tunnelInterfaceNetworkBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceNetworkBroadcastVariable?: pulumi.Input<string>;
    /**
     * Disallow port hopping on the tunnel interface - Default value: `true`
     */
    tunnelInterfacePortHop?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfacePortHopVariable?: pulumi.Input<string>;
    /**
     * Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    tunnelInterfaceTunnelTcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceTunnelTcpMssVariable?: pulumi.Input<string>;
    /**
     * Put this wan interface in STUN mode only - Default value: `false`
     */
    tunnelInterfaceVbondAsStunServer?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceVbondAsStunServerVariable?: pulumi.Input<string>;
    /**
     * Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
     */
    tunnelInterfaceVmanageConnectionPreference?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceVmanageConnectionPreferenceVariable?: pulumi.Input<string>;
    /**
     * Set tunnel QoS mode - Choices: `hub`, `spoke`
     */
    tunnelQosMode?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelQosModeVariable?: pulumi.Input<string>;
    /**
     * Extend remote TLOC over a GRE tunnel to a local WAN interface
     */
    xconnect?: pulumi.Input<string>;
    /**
     * Variable name
     */
    xconnectVariable?: pulumi.Input<string>;
}
