// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Service LAN VPN Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Example Usage
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * Expected import identifier with the format: "service_lan_vpn_feature_id,feature_profile_id"
 *
 * ```sh
 * $ pulumi import sdwan:index/serviceLanVpnFeature:ServiceLanVpnFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
 * ```
 */
export class ServiceLanVpnFeature extends pulumi.CustomResource {
    /**
     * Get an existing ServiceLanVpnFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceLanVpnFeatureState, opts?: pulumi.CustomResourceOptions): ServiceLanVpnFeature {
        return new ServiceLanVpnFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/serviceLanVpnFeature:ServiceLanVpnFeature';

    /**
     * Returns true if the given object is an instance of ServiceLanVpnFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceLanVpnFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceLanVpnFeature.__pulumiType;
    }

    /**
     * OMP Advertise IPv4
     */
    declare public readonly advertiseOmpIpv4s: pulumi.Output<outputs.ServiceLanVpnFeatureAdvertiseOmpIpv4[] | undefined>;
    /**
     * OMP Advertise IPv6
     */
    declare public readonly advertiseOmpIpv6s: pulumi.Output<outputs.ServiceLanVpnFeatureAdvertiseOmpIpv6[] | undefined>;
    /**
     * Name
     */
    declare public readonly configDescription: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly configDescriptionVariable: pulumi.Output<string | undefined>;
    /**
     * The description of the Feature
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Enable SDWAN Remote Access
     *   - Default value: `false`
     */
    declare public readonly enableSdwanRemoteAccess: pulumi.Output<boolean | undefined>;
    /**
     * Feature Profile ID
     */
    declare public readonly featureProfileId: pulumi.Output<string>;
    /**
     * IPv4 Static GRE Route
     */
    declare public readonly greRoutes: pulumi.Output<outputs.ServiceLanVpnFeatureGreRoute[] | undefined>;
    declare public readonly hostMappings: pulumi.Output<outputs.ServiceLanVpnFeatureHostMapping[] | undefined>;
    /**
     * IPv4 Static IPSEC Route
     */
    declare public readonly ipsecRoutes: pulumi.Output<outputs.ServiceLanVpnFeatureIpsecRoute[] | undefined>;
    declare public readonly ipv4ExportRouteTargets: pulumi.Output<outputs.ServiceLanVpnFeatureIpv4ExportRouteTarget[] | undefined>;
    declare public readonly ipv4ImportRouteTargets: pulumi.Output<outputs.ServiceLanVpnFeatureIpv4ImportRouteTarget[] | undefined>;
    /**
     * IPv4 Static Route
     */
    declare public readonly ipv4StaticRoutes: pulumi.Output<outputs.ServiceLanVpnFeatureIpv4StaticRoute[] | undefined>;
    declare public readonly ipv6ExportRouteTargets: pulumi.Output<outputs.ServiceLanVpnFeatureIpv6ExportRouteTarget[] | undefined>;
    declare public readonly ipv6ImportRouteTargets: pulumi.Output<outputs.ServiceLanVpnFeatureIpv6ImportRouteTarget[] | undefined>;
    /**
     * IPv6 Static Route
     */
    declare public readonly ipv6StaticRoutes: pulumi.Output<outputs.ServiceLanVpnFeatureIpv6StaticRoute[] | undefined>;
    /**
     * The name of the Feature
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * NAT64 V4 Pool
     */
    declare public readonly nat64V4Pools: pulumi.Output<outputs.ServiceLanVpnFeatureNat64V4Pool[] | undefined>;
    /**
     * NAT Pool
     */
    declare public readonly natPools: pulumi.Output<outputs.ServiceLanVpnFeatureNatPool[] | undefined>;
    /**
     * NAT Port Forward
     */
    declare public readonly natPortForwards: pulumi.Output<outputs.ServiceLanVpnFeatureNatPortForward[] | undefined>;
    /**
     * OMP Admin Distance IPv4
     *   - Range: `1`-`255`
     */
    declare public readonly ompAdminDistanceIpv4: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly ompAdminDistanceIpv4Variable: pulumi.Output<string | undefined>;
    /**
     * OMP Admin Distance IPv6
     *   - Range: `1`-`255`
     */
    declare public readonly ompAdminDistanceIpv6: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly ompAdminDistanceIpv6Variable: pulumi.Output<string | undefined>;
    /**
     * Primary DNS Address (IPv4)
     */
    declare public readonly primaryDnsAddressIpv4: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly primaryDnsAddressIpv4Variable: pulumi.Output<string | undefined>;
    /**
     * Primary DNS Address (IPv6)
     */
    declare public readonly primaryDnsAddressIpv6: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly primaryDnsAddressIpv6Variable: pulumi.Output<string | undefined>;
    /**
     * Enable route leaking from Global to Service VPN
     */
    declare public readonly routeLeakFromGlobalVpns: pulumi.Output<outputs.ServiceLanVpnFeatureRouteLeakFromGlobalVpn[] | undefined>;
    /**
     * Enable route leak from another Service VPN to current Service VPN
     */
    declare public readonly routeLeakFromOtherServices: pulumi.Output<outputs.ServiceLanVpnFeatureRouteLeakFromOtherService[] | undefined>;
    /**
     * Enable route leaking from Service to Global VPN
     */
    declare public readonly routeLeakToGlobalVpns: pulumi.Output<outputs.ServiceLanVpnFeatureRouteLeakToGlobalVpn[] | undefined>;
    /**
     * Secondary DNS Address (IPv4)
     */
    declare public readonly secondaryDnsAddressIpv4: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly secondaryDnsAddressIpv4Variable: pulumi.Output<string | undefined>;
    /**
     * Secondary DNS Address (IPv6)
     */
    declare public readonly secondaryDnsAddressIpv6: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly secondaryDnsAddressIpv6Variable: pulumi.Output<string | undefined>;
    /**
     * Service
     */
    declare public readonly serviceRoutes: pulumi.Output<outputs.ServiceLanVpnFeatureServiceRoute[] | undefined>;
    /**
     * Service
     */
    declare public readonly services: pulumi.Output<outputs.ServiceLanVpnFeatureService[] | undefined>;
    /**
     * Static NAT Rules
     */
    declare public readonly staticNats: pulumi.Output<outputs.ServiceLanVpnFeatureStaticNat[] | undefined>;
    /**
     * The version of the Feature
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;
    /**
     * VPN
     *   - Range: `1`-`65527`
     *   - Default value: `0`
     */
    declare public readonly vpn: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly vpnVariable: pulumi.Output<string | undefined>;

    /**
     * Create a ServiceLanVpnFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceLanVpnFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceLanVpnFeatureArgs | ServiceLanVpnFeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceLanVpnFeatureState | undefined;
            resourceInputs["advertiseOmpIpv4s"] = state?.advertiseOmpIpv4s;
            resourceInputs["advertiseOmpIpv6s"] = state?.advertiseOmpIpv6s;
            resourceInputs["configDescription"] = state?.configDescription;
            resourceInputs["configDescriptionVariable"] = state?.configDescriptionVariable;
            resourceInputs["description"] = state?.description;
            resourceInputs["enableSdwanRemoteAccess"] = state?.enableSdwanRemoteAccess;
            resourceInputs["featureProfileId"] = state?.featureProfileId;
            resourceInputs["greRoutes"] = state?.greRoutes;
            resourceInputs["hostMappings"] = state?.hostMappings;
            resourceInputs["ipsecRoutes"] = state?.ipsecRoutes;
            resourceInputs["ipv4ExportRouteTargets"] = state?.ipv4ExportRouteTargets;
            resourceInputs["ipv4ImportRouteTargets"] = state?.ipv4ImportRouteTargets;
            resourceInputs["ipv4StaticRoutes"] = state?.ipv4StaticRoutes;
            resourceInputs["ipv6ExportRouteTargets"] = state?.ipv6ExportRouteTargets;
            resourceInputs["ipv6ImportRouteTargets"] = state?.ipv6ImportRouteTargets;
            resourceInputs["ipv6StaticRoutes"] = state?.ipv6StaticRoutes;
            resourceInputs["name"] = state?.name;
            resourceInputs["nat64V4Pools"] = state?.nat64V4Pools;
            resourceInputs["natPools"] = state?.natPools;
            resourceInputs["natPortForwards"] = state?.natPortForwards;
            resourceInputs["ompAdminDistanceIpv4"] = state?.ompAdminDistanceIpv4;
            resourceInputs["ompAdminDistanceIpv4Variable"] = state?.ompAdminDistanceIpv4Variable;
            resourceInputs["ompAdminDistanceIpv6"] = state?.ompAdminDistanceIpv6;
            resourceInputs["ompAdminDistanceIpv6Variable"] = state?.ompAdminDistanceIpv6Variable;
            resourceInputs["primaryDnsAddressIpv4"] = state?.primaryDnsAddressIpv4;
            resourceInputs["primaryDnsAddressIpv4Variable"] = state?.primaryDnsAddressIpv4Variable;
            resourceInputs["primaryDnsAddressIpv6"] = state?.primaryDnsAddressIpv6;
            resourceInputs["primaryDnsAddressIpv6Variable"] = state?.primaryDnsAddressIpv6Variable;
            resourceInputs["routeLeakFromGlobalVpns"] = state?.routeLeakFromGlobalVpns;
            resourceInputs["routeLeakFromOtherServices"] = state?.routeLeakFromOtherServices;
            resourceInputs["routeLeakToGlobalVpns"] = state?.routeLeakToGlobalVpns;
            resourceInputs["secondaryDnsAddressIpv4"] = state?.secondaryDnsAddressIpv4;
            resourceInputs["secondaryDnsAddressIpv4Variable"] = state?.secondaryDnsAddressIpv4Variable;
            resourceInputs["secondaryDnsAddressIpv6"] = state?.secondaryDnsAddressIpv6;
            resourceInputs["secondaryDnsAddressIpv6Variable"] = state?.secondaryDnsAddressIpv6Variable;
            resourceInputs["serviceRoutes"] = state?.serviceRoutes;
            resourceInputs["services"] = state?.services;
            resourceInputs["staticNats"] = state?.staticNats;
            resourceInputs["version"] = state?.version;
            resourceInputs["vpn"] = state?.vpn;
            resourceInputs["vpnVariable"] = state?.vpnVariable;
        } else {
            const args = argsOrState as ServiceLanVpnFeatureArgs | undefined;
            if (args?.featureProfileId === undefined && !opts.urn) {
                throw new Error("Missing required property 'featureProfileId'");
            }
            resourceInputs["advertiseOmpIpv4s"] = args?.advertiseOmpIpv4s;
            resourceInputs["advertiseOmpIpv6s"] = args?.advertiseOmpIpv6s;
            resourceInputs["configDescription"] = args?.configDescription;
            resourceInputs["configDescriptionVariable"] = args?.configDescriptionVariable;
            resourceInputs["description"] = args?.description;
            resourceInputs["enableSdwanRemoteAccess"] = args?.enableSdwanRemoteAccess;
            resourceInputs["featureProfileId"] = args?.featureProfileId;
            resourceInputs["greRoutes"] = args?.greRoutes;
            resourceInputs["hostMappings"] = args?.hostMappings;
            resourceInputs["ipsecRoutes"] = args?.ipsecRoutes;
            resourceInputs["ipv4ExportRouteTargets"] = args?.ipv4ExportRouteTargets;
            resourceInputs["ipv4ImportRouteTargets"] = args?.ipv4ImportRouteTargets;
            resourceInputs["ipv4StaticRoutes"] = args?.ipv4StaticRoutes;
            resourceInputs["ipv6ExportRouteTargets"] = args?.ipv6ExportRouteTargets;
            resourceInputs["ipv6ImportRouteTargets"] = args?.ipv6ImportRouteTargets;
            resourceInputs["ipv6StaticRoutes"] = args?.ipv6StaticRoutes;
            resourceInputs["name"] = args?.name;
            resourceInputs["nat64V4Pools"] = args?.nat64V4Pools;
            resourceInputs["natPools"] = args?.natPools;
            resourceInputs["natPortForwards"] = args?.natPortForwards;
            resourceInputs["ompAdminDistanceIpv4"] = args?.ompAdminDistanceIpv4;
            resourceInputs["ompAdminDistanceIpv4Variable"] = args?.ompAdminDistanceIpv4Variable;
            resourceInputs["ompAdminDistanceIpv6"] = args?.ompAdminDistanceIpv6;
            resourceInputs["ompAdminDistanceIpv6Variable"] = args?.ompAdminDistanceIpv6Variable;
            resourceInputs["primaryDnsAddressIpv4"] = args?.primaryDnsAddressIpv4;
            resourceInputs["primaryDnsAddressIpv4Variable"] = args?.primaryDnsAddressIpv4Variable;
            resourceInputs["primaryDnsAddressIpv6"] = args?.primaryDnsAddressIpv6;
            resourceInputs["primaryDnsAddressIpv6Variable"] = args?.primaryDnsAddressIpv6Variable;
            resourceInputs["routeLeakFromGlobalVpns"] = args?.routeLeakFromGlobalVpns;
            resourceInputs["routeLeakFromOtherServices"] = args?.routeLeakFromOtherServices;
            resourceInputs["routeLeakToGlobalVpns"] = args?.routeLeakToGlobalVpns;
            resourceInputs["secondaryDnsAddressIpv4"] = args?.secondaryDnsAddressIpv4;
            resourceInputs["secondaryDnsAddressIpv4Variable"] = args?.secondaryDnsAddressIpv4Variable;
            resourceInputs["secondaryDnsAddressIpv6"] = args?.secondaryDnsAddressIpv6;
            resourceInputs["secondaryDnsAddressIpv6Variable"] = args?.secondaryDnsAddressIpv6Variable;
            resourceInputs["serviceRoutes"] = args?.serviceRoutes;
            resourceInputs["services"] = args?.services;
            resourceInputs["staticNats"] = args?.staticNats;
            resourceInputs["vpn"] = args?.vpn;
            resourceInputs["vpnVariable"] = args?.vpnVariable;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceLanVpnFeature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceLanVpnFeature resources.
 */
export interface ServiceLanVpnFeatureState {
    /**
     * OMP Advertise IPv4
     */
    advertiseOmpIpv4s?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureAdvertiseOmpIpv4>[]>;
    /**
     * OMP Advertise IPv6
     */
    advertiseOmpIpv6s?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureAdvertiseOmpIpv6>[]>;
    /**
     * Name
     */
    configDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    configDescriptionVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Enable SDWAN Remote Access
     *   - Default value: `false`
     */
    enableSdwanRemoteAccess?: pulumi.Input<boolean>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * IPv4 Static GRE Route
     */
    greRoutes?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureGreRoute>[]>;
    hostMappings?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureHostMapping>[]>;
    /**
     * IPv4 Static IPSEC Route
     */
    ipsecRoutes?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureIpsecRoute>[]>;
    ipv4ExportRouteTargets?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureIpv4ExportRouteTarget>[]>;
    ipv4ImportRouteTargets?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureIpv4ImportRouteTarget>[]>;
    /**
     * IPv4 Static Route
     */
    ipv4StaticRoutes?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureIpv4StaticRoute>[]>;
    ipv6ExportRouteTargets?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureIpv6ExportRouteTarget>[]>;
    ipv6ImportRouteTargets?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureIpv6ImportRouteTarget>[]>;
    /**
     * IPv6 Static Route
     */
    ipv6StaticRoutes?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureIpv6StaticRoute>[]>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * NAT64 V4 Pool
     */
    nat64V4Pools?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureNat64V4Pool>[]>;
    /**
     * NAT Pool
     */
    natPools?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureNatPool>[]>;
    /**
     * NAT Port Forward
     */
    natPortForwards?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureNatPortForward>[]>;
    /**
     * OMP Admin Distance IPv4
     *   - Range: `1`-`255`
     */
    ompAdminDistanceIpv4?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ompAdminDistanceIpv4Variable?: pulumi.Input<string>;
    /**
     * OMP Admin Distance IPv6
     *   - Range: `1`-`255`
     */
    ompAdminDistanceIpv6?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ompAdminDistanceIpv6Variable?: pulumi.Input<string>;
    /**
     * Primary DNS Address (IPv4)
     */
    primaryDnsAddressIpv4?: pulumi.Input<string>;
    /**
     * Variable name
     */
    primaryDnsAddressIpv4Variable?: pulumi.Input<string>;
    /**
     * Primary DNS Address (IPv6)
     */
    primaryDnsAddressIpv6?: pulumi.Input<string>;
    /**
     * Variable name
     */
    primaryDnsAddressIpv6Variable?: pulumi.Input<string>;
    /**
     * Enable route leaking from Global to Service VPN
     */
    routeLeakFromGlobalVpns?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureRouteLeakFromGlobalVpn>[]>;
    /**
     * Enable route leak from another Service VPN to current Service VPN
     */
    routeLeakFromOtherServices?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureRouteLeakFromOtherService>[]>;
    /**
     * Enable route leaking from Service to Global VPN
     */
    routeLeakToGlobalVpns?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureRouteLeakToGlobalVpn>[]>;
    /**
     * Secondary DNS Address (IPv4)
     */
    secondaryDnsAddressIpv4?: pulumi.Input<string>;
    /**
     * Variable name
     */
    secondaryDnsAddressIpv4Variable?: pulumi.Input<string>;
    /**
     * Secondary DNS Address (IPv6)
     */
    secondaryDnsAddressIpv6?: pulumi.Input<string>;
    /**
     * Variable name
     */
    secondaryDnsAddressIpv6Variable?: pulumi.Input<string>;
    /**
     * Service
     */
    serviceRoutes?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureServiceRoute>[]>;
    /**
     * Service
     */
    services?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureService>[]>;
    /**
     * Static NAT Rules
     */
    staticNats?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureStaticNat>[]>;
    /**
     * The version of the Feature
     */
    version?: pulumi.Input<number>;
    /**
     * VPN
     *   - Range: `1`-`65527`
     *   - Default value: `0`
     */
    vpn?: pulumi.Input<number>;
    /**
     * Variable name
     */
    vpnVariable?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServiceLanVpnFeature resource.
 */
export interface ServiceLanVpnFeatureArgs {
    /**
     * OMP Advertise IPv4
     */
    advertiseOmpIpv4s?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureAdvertiseOmpIpv4>[]>;
    /**
     * OMP Advertise IPv6
     */
    advertiseOmpIpv6s?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureAdvertiseOmpIpv6>[]>;
    /**
     * Name
     */
    configDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    configDescriptionVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Enable SDWAN Remote Access
     *   - Default value: `false`
     */
    enableSdwanRemoteAccess?: pulumi.Input<boolean>;
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * IPv4 Static GRE Route
     */
    greRoutes?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureGreRoute>[]>;
    hostMappings?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureHostMapping>[]>;
    /**
     * IPv4 Static IPSEC Route
     */
    ipsecRoutes?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureIpsecRoute>[]>;
    ipv4ExportRouteTargets?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureIpv4ExportRouteTarget>[]>;
    ipv4ImportRouteTargets?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureIpv4ImportRouteTarget>[]>;
    /**
     * IPv4 Static Route
     */
    ipv4StaticRoutes?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureIpv4StaticRoute>[]>;
    ipv6ExportRouteTargets?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureIpv6ExportRouteTarget>[]>;
    ipv6ImportRouteTargets?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureIpv6ImportRouteTarget>[]>;
    /**
     * IPv6 Static Route
     */
    ipv6StaticRoutes?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureIpv6StaticRoute>[]>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * NAT64 V4 Pool
     */
    nat64V4Pools?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureNat64V4Pool>[]>;
    /**
     * NAT Pool
     */
    natPools?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureNatPool>[]>;
    /**
     * NAT Port Forward
     */
    natPortForwards?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureNatPortForward>[]>;
    /**
     * OMP Admin Distance IPv4
     *   - Range: `1`-`255`
     */
    ompAdminDistanceIpv4?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ompAdminDistanceIpv4Variable?: pulumi.Input<string>;
    /**
     * OMP Admin Distance IPv6
     *   - Range: `1`-`255`
     */
    ompAdminDistanceIpv6?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ompAdminDistanceIpv6Variable?: pulumi.Input<string>;
    /**
     * Primary DNS Address (IPv4)
     */
    primaryDnsAddressIpv4?: pulumi.Input<string>;
    /**
     * Variable name
     */
    primaryDnsAddressIpv4Variable?: pulumi.Input<string>;
    /**
     * Primary DNS Address (IPv6)
     */
    primaryDnsAddressIpv6?: pulumi.Input<string>;
    /**
     * Variable name
     */
    primaryDnsAddressIpv6Variable?: pulumi.Input<string>;
    /**
     * Enable route leaking from Global to Service VPN
     */
    routeLeakFromGlobalVpns?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureRouteLeakFromGlobalVpn>[]>;
    /**
     * Enable route leak from another Service VPN to current Service VPN
     */
    routeLeakFromOtherServices?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureRouteLeakFromOtherService>[]>;
    /**
     * Enable route leaking from Service to Global VPN
     */
    routeLeakToGlobalVpns?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureRouteLeakToGlobalVpn>[]>;
    /**
     * Secondary DNS Address (IPv4)
     */
    secondaryDnsAddressIpv4?: pulumi.Input<string>;
    /**
     * Variable name
     */
    secondaryDnsAddressIpv4Variable?: pulumi.Input<string>;
    /**
     * Secondary DNS Address (IPv6)
     */
    secondaryDnsAddressIpv6?: pulumi.Input<string>;
    /**
     * Variable name
     */
    secondaryDnsAddressIpv6Variable?: pulumi.Input<string>;
    /**
     * Service
     */
    serviceRoutes?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureServiceRoute>[]>;
    /**
     * Service
     */
    services?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureService>[]>;
    /**
     * Static NAT Rules
     */
    staticNats?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnFeatureStaticNat>[]>;
    /**
     * VPN
     *   - Range: `1`-`65527`
     *   - Default value: `0`
     */
    vpn?: pulumi.Input<number>;
    /**
     * Variable name
     */
    vpnVariable?: pulumi.Input<string>;
}
