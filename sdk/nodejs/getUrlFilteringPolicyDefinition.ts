// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the URL Filtering Policy Definition .
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getUrlFilteringPolicyDefinition({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getUrlFilteringPolicyDefinition(args: GetUrlFilteringPolicyDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetUrlFilteringPolicyDefinitionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getUrlFilteringPolicyDefinition:getUrlFilteringPolicyDefinition", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getUrlFilteringPolicyDefinition.
 */
export interface GetUrlFilteringPolicyDefinitionArgs {
    /**
     * The id of the object
     */
    id: string;
}

/**
 * A collection of values returned by getUrlFilteringPolicyDefinition.
 */
export interface GetUrlFilteringPolicyDefinitionResult {
    /**
     * List of alerts options that will be exported as syslog messages
     */
    readonly alerts: string[];
    /**
     * Allow URL list ID
     */
    readonly allowUrlListId: string;
    /**
     * Allow URL list version
     */
    readonly allowUrlListVersion: number;
    /**
     * Redirect to a URL or display a message when a blocked page is accessed.
     */
    readonly blockPageAction: string;
    /**
     * The message displayed or URL redirected to when a blocked page is accessed.
     */
    readonly blockPageContents: string;
    /**
     * Block URL list ID
     */
    readonly blockUrlListId: string;
    /**
     * Block URL list version
     */
    readonly blockUrlListVersion: number;
    /**
     * The description of the policy definition.
     */
    readonly description: string;
    /**
     * The id of the object
     */
    readonly id: string;
    readonly loggings: outputs.GetUrlFilteringPolicyDefinitionLogging[];
    /**
     * The policy mode
     */
    readonly mode: string;
    /**
     * The name of the policy definition.
     */
    readonly name: string;
    /**
     * List of VPN IDs
     */
    readonly targetVpns: string[];
    /**
     * The version of the object
     */
    readonly version: number;
    /**
     * List of categories to block or allow
     */
    readonly webCategories: string[];
    /**
     * whether the selected web categories should be blocked or allowed.
     */
    readonly webCategoriesAction: string;
    /**
     * The web reputation of the policy definition
     */
    readonly webReputation: string;
}
/**
 * This data source can read the URL Filtering Policy Definition .
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getUrlFilteringPolicyDefinition({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getUrlFilteringPolicyDefinitionOutput(args: GetUrlFilteringPolicyDefinitionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUrlFilteringPolicyDefinitionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sdwan:index/getUrlFilteringPolicyDefinition:getUrlFilteringPolicyDefinition", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getUrlFilteringPolicyDefinition.
 */
export interface GetUrlFilteringPolicyDefinitionOutputArgs {
    /**
     * The id of the object
     */
    id: pulumi.Input<string>;
}
