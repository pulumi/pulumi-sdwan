// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Transport Management VPN Interface Ethernet Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = new sdwan.TransportManagementVpnInterfaceEthernetFeature("example", {
 *     name: "Example",
 *     description: "My Example",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 *     transportManagementVpnFeatureId: "140331f6-5418-4755-a059-13c77eb96037",
 *     shutdown: true,
 *     interfaceName: "GigabitEthernet1",
 *     interfaceDescription: "Transport Management VPN Interface Ethernet",
 *     ipv4ConfigurationType: "static",
 *     ipv4Address: "1.2.3.4",
 *     ipv4SubnetMask: "0.0.0.0",
 *     ipv4SecondaryAddresses: [{
 *         address: "1.2.3.4",
 *         subnet_mask: "0.0.0.0",
 *     }],
 *     ipv4DhcpHelpers: ["1.2.3.4"],
 *     ipv4IperfServer: "example",
 *     ipv4AutoDetectBandwidth: false,
 *     ipv6ConfigurationType: "static",
 *     ipv6Address: "2001:0:0:1::/64",
 *     arpEntries: [{
 *         ip_address: "1.2.3.4",
 *         mac_address: "00-B0-D0-63-C2-26",
 *     }],
 *     duplex: "full",
 *     macAddress: "00-B0-D0-63-C2-26",
 *     ipMtu: 1500,
 *     interfaceMtu: 1500,
 *     tcpMss: 505,
 *     speed: "2500",
 *     arpTimeout: 1200,
 *     autonegotiate: false,
 *     mediaType: "rj45",
 *     loadInterval: 30,
 *     icmpRedirectDisable: true,
 *     ipDirectedBroadcast: false,
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * Expected import identifier with the format: "transport_management_vpn_interface_ethernet_feature_id,feature_profile_id,transport_management_vpn_feature_id"
 *
 * ```sh
 * $ pulumi import sdwan:index/transportManagementVpnInterfaceEthernetFeature:TransportManagementVpnInterfaceEthernetFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037"
 * ```
 */
export class TransportManagementVpnInterfaceEthernetFeature extends pulumi.CustomResource {
    /**
     * Get an existing TransportManagementVpnInterfaceEthernetFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransportManagementVpnInterfaceEthernetFeatureState, opts?: pulumi.CustomResourceOptions): TransportManagementVpnInterfaceEthernetFeature {
        return new TransportManagementVpnInterfaceEthernetFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/transportManagementVpnInterfaceEthernetFeature:TransportManagementVpnInterfaceEthernetFeature';

    /**
     * Returns true if the given object is an instance of TransportManagementVpnInterfaceEthernetFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransportManagementVpnInterfaceEthernetFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransportManagementVpnInterfaceEthernetFeature.__pulumiType;
    }

    /**
     * Configure ARP entries
     */
    declare public readonly arpEntries: pulumi.Output<outputs.TransportManagementVpnInterfaceEthernetFeatureArpEntry[] | undefined>;
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds
     *   - Range: `0`-`2147483`
     *   - Default value: `1200`
     */
    declare public readonly arpTimeout: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly arpTimeoutVariable: pulumi.Output<string | undefined>;
    /**
     * Link autonegotiation
     */
    declare public readonly autonegotiate: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly autonegotiateVariable: pulumi.Output<string | undefined>;
    /**
     * The description of the Feature
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Duplex mode
     *   - Choices: `full`, `half`, `auto`
     */
    declare public readonly duplex: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly duplexVariable: pulumi.Output<string | undefined>;
    /**
     * Enable DHCPv6, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
     */
    declare public readonly enableDhcpv6: pulumi.Output<boolean | undefined>;
    /**
     * Feature Profile ID
     */
    declare public readonly featureProfileId: pulumi.Output<string>;
    /**
     * ICMP/ICMPv6 Redirect Disable
     *   - Default value: `true`
     */
    declare public readonly icmpRedirectDisable: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly icmpRedirectDisableVariable: pulumi.Output<string | undefined>;
    declare public readonly interfaceDescription: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly interfaceDescriptionVariable: pulumi.Output<string | undefined>;
    /**
     * Interface MTU
     *   - Range: `1500`-`9216`
     *   - Default value: `1500`
     */
    declare public readonly interfaceMtu: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly interfaceMtuVariable: pulumi.Output<string | undefined>;
    declare public readonly interfaceName: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly interfaceNameVariable: pulumi.Output<string | undefined>;
    /**
     * IP Directed-Broadcast
     *   - Default value: `false`
     */
    declare public readonly ipDirectedBroadcast: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipDirectedBroadcastVariable: pulumi.Output<string | undefined>;
    /**
     * IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces <576..2000> in bytes
     *   - Range: `576`-`9216`
     *   - Default value: `1500`
     */
    declare public readonly ipMtu: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipMtuVariable: pulumi.Output<string | undefined>;
    /**
     * IP Address, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     */
    declare public readonly ipv4Address: pulumi.Output<string | undefined>;
    /**
     * Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     */
    declare public readonly ipv4AddressVariable: pulumi.Output<string | undefined>;
    /**
     * Interface auto detect bandwidth
     *   - Default value: `false`
     */
    declare public readonly ipv4AutoDetectBandwidth: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipv4AutoDetectBandwidthVariable: pulumi.Output<string | undefined>;
    /**
     * IPv4 Configuration Type
     *   - Choices: `dynamic`, `static`
     *   - Default value: `dynamic`
     */
    declare public readonly ipv4ConfigurationType: pulumi.Output<string | undefined>;
    /**
     * DHCP Distance, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic`
     *   - Range: `1`-`65536`
     *   - Default value: `1`
     */
    declare public readonly ipv4DhcpDistance: pulumi.Output<number | undefined>;
    /**
     * Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic`
     */
    declare public readonly ipv4DhcpDistanceVariable: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipv4DhcpHelperVariable: pulumi.Output<string | undefined>;
    /**
     * List of DHCP IPv4 helper addresses (min 1, max 8)
     */
    declare public readonly ipv4DhcpHelpers: pulumi.Output<string[] | undefined>;
    /**
     * Iperf server for auto bandwidth detect
     */
    declare public readonly ipv4IperfServer: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipv4IperfServerVariable: pulumi.Output<string | undefined>;
    /**
     * Secondary IpV4 Addresses, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     */
    declare public readonly ipv4SecondaryAddresses: pulumi.Output<outputs.TransportManagementVpnInterfaceEthernetFeatureIpv4SecondaryAddress[] | undefined>;
    /**
     * Subnet Mask, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    declare public readonly ipv4SubnetMask: pulumi.Output<string | undefined>;
    /**
     * Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     */
    declare public readonly ipv4SubnetMaskVariable: pulumi.Output<string | undefined>;
    /**
     * IPv6 Address Secondary, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
     */
    declare public readonly ipv6Address: pulumi.Output<string | undefined>;
    /**
     * Variable name, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
     */
    declare public readonly ipv6AddressVariable: pulumi.Output<string | undefined>;
    /**
     * IPv6 Configuration Type
     *   - Choices: `dynamic`, `static`, `none`
     *   - Default value: `none`
     */
    declare public readonly ipv6ConfigurationType: pulumi.Output<string | undefined>;
    /**
     * Interval for interface load calculation
     *   - Range: `30`-`600`
     *   - Default value: `30`
     */
    declare public readonly loadInterval: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly loadIntervalVariable: pulumi.Output<string | undefined>;
    /**
     * MAC Address
     */
    declare public readonly macAddress: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly macAddressVariable: pulumi.Output<string | undefined>;
    /**
     * Media type
     *   - Choices: `auto-select`, `rj45`, `sfp`
     */
    declare public readonly mediaType: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly mediaTypeVariable: pulumi.Output<string | undefined>;
    /**
     * The name of the Feature
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * - Default value: `true`
     */
    declare public readonly shutdown: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly shutdownVariable: pulumi.Output<string | undefined>;
    /**
     * Set interface speed
     *   - Choices: `10`, `100`, `1000`, `2500`, `10000`
     */
    declare public readonly speed: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly speedVariable: pulumi.Output<string | undefined>;
    /**
     * TCP MSS on SYN packets, in bytes
     *   - Range: `500`-`1460`
     */
    declare public readonly tcpMss: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly tcpMssVariable: pulumi.Output<string | undefined>;
    /**
     * Transport Management VPN Feature ID
     */
    declare public readonly transportManagementVpnFeatureId: pulumi.Output<string>;
    /**
     * The version of the Feature
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;

    /**
     * Create a TransportManagementVpnInterfaceEthernetFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransportManagementVpnInterfaceEthernetFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransportManagementVpnInterfaceEthernetFeatureArgs | TransportManagementVpnInterfaceEthernetFeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransportManagementVpnInterfaceEthernetFeatureState | undefined;
            resourceInputs["arpEntries"] = state?.arpEntries;
            resourceInputs["arpTimeout"] = state?.arpTimeout;
            resourceInputs["arpTimeoutVariable"] = state?.arpTimeoutVariable;
            resourceInputs["autonegotiate"] = state?.autonegotiate;
            resourceInputs["autonegotiateVariable"] = state?.autonegotiateVariable;
            resourceInputs["description"] = state?.description;
            resourceInputs["duplex"] = state?.duplex;
            resourceInputs["duplexVariable"] = state?.duplexVariable;
            resourceInputs["enableDhcpv6"] = state?.enableDhcpv6;
            resourceInputs["featureProfileId"] = state?.featureProfileId;
            resourceInputs["icmpRedirectDisable"] = state?.icmpRedirectDisable;
            resourceInputs["icmpRedirectDisableVariable"] = state?.icmpRedirectDisableVariable;
            resourceInputs["interfaceDescription"] = state?.interfaceDescription;
            resourceInputs["interfaceDescriptionVariable"] = state?.interfaceDescriptionVariable;
            resourceInputs["interfaceMtu"] = state?.interfaceMtu;
            resourceInputs["interfaceMtuVariable"] = state?.interfaceMtuVariable;
            resourceInputs["interfaceName"] = state?.interfaceName;
            resourceInputs["interfaceNameVariable"] = state?.interfaceNameVariable;
            resourceInputs["ipDirectedBroadcast"] = state?.ipDirectedBroadcast;
            resourceInputs["ipDirectedBroadcastVariable"] = state?.ipDirectedBroadcastVariable;
            resourceInputs["ipMtu"] = state?.ipMtu;
            resourceInputs["ipMtuVariable"] = state?.ipMtuVariable;
            resourceInputs["ipv4Address"] = state?.ipv4Address;
            resourceInputs["ipv4AddressVariable"] = state?.ipv4AddressVariable;
            resourceInputs["ipv4AutoDetectBandwidth"] = state?.ipv4AutoDetectBandwidth;
            resourceInputs["ipv4AutoDetectBandwidthVariable"] = state?.ipv4AutoDetectBandwidthVariable;
            resourceInputs["ipv4ConfigurationType"] = state?.ipv4ConfigurationType;
            resourceInputs["ipv4DhcpDistance"] = state?.ipv4DhcpDistance;
            resourceInputs["ipv4DhcpDistanceVariable"] = state?.ipv4DhcpDistanceVariable;
            resourceInputs["ipv4DhcpHelperVariable"] = state?.ipv4DhcpHelperVariable;
            resourceInputs["ipv4DhcpHelpers"] = state?.ipv4DhcpHelpers;
            resourceInputs["ipv4IperfServer"] = state?.ipv4IperfServer;
            resourceInputs["ipv4IperfServerVariable"] = state?.ipv4IperfServerVariable;
            resourceInputs["ipv4SecondaryAddresses"] = state?.ipv4SecondaryAddresses;
            resourceInputs["ipv4SubnetMask"] = state?.ipv4SubnetMask;
            resourceInputs["ipv4SubnetMaskVariable"] = state?.ipv4SubnetMaskVariable;
            resourceInputs["ipv6Address"] = state?.ipv6Address;
            resourceInputs["ipv6AddressVariable"] = state?.ipv6AddressVariable;
            resourceInputs["ipv6ConfigurationType"] = state?.ipv6ConfigurationType;
            resourceInputs["loadInterval"] = state?.loadInterval;
            resourceInputs["loadIntervalVariable"] = state?.loadIntervalVariable;
            resourceInputs["macAddress"] = state?.macAddress;
            resourceInputs["macAddressVariable"] = state?.macAddressVariable;
            resourceInputs["mediaType"] = state?.mediaType;
            resourceInputs["mediaTypeVariable"] = state?.mediaTypeVariable;
            resourceInputs["name"] = state?.name;
            resourceInputs["shutdown"] = state?.shutdown;
            resourceInputs["shutdownVariable"] = state?.shutdownVariable;
            resourceInputs["speed"] = state?.speed;
            resourceInputs["speedVariable"] = state?.speedVariable;
            resourceInputs["tcpMss"] = state?.tcpMss;
            resourceInputs["tcpMssVariable"] = state?.tcpMssVariable;
            resourceInputs["transportManagementVpnFeatureId"] = state?.transportManagementVpnFeatureId;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as TransportManagementVpnInterfaceEthernetFeatureArgs | undefined;
            if (args?.featureProfileId === undefined && !opts.urn) {
                throw new Error("Missing required property 'featureProfileId'");
            }
            if (args?.transportManagementVpnFeatureId === undefined && !opts.urn) {
                throw new Error("Missing required property 'transportManagementVpnFeatureId'");
            }
            resourceInputs["arpEntries"] = args?.arpEntries;
            resourceInputs["arpTimeout"] = args?.arpTimeout;
            resourceInputs["arpTimeoutVariable"] = args?.arpTimeoutVariable;
            resourceInputs["autonegotiate"] = args?.autonegotiate;
            resourceInputs["autonegotiateVariable"] = args?.autonegotiateVariable;
            resourceInputs["description"] = args?.description;
            resourceInputs["duplex"] = args?.duplex;
            resourceInputs["duplexVariable"] = args?.duplexVariable;
            resourceInputs["enableDhcpv6"] = args?.enableDhcpv6;
            resourceInputs["featureProfileId"] = args?.featureProfileId;
            resourceInputs["icmpRedirectDisable"] = args?.icmpRedirectDisable;
            resourceInputs["icmpRedirectDisableVariable"] = args?.icmpRedirectDisableVariable;
            resourceInputs["interfaceDescription"] = args?.interfaceDescription;
            resourceInputs["interfaceDescriptionVariable"] = args?.interfaceDescriptionVariable;
            resourceInputs["interfaceMtu"] = args?.interfaceMtu;
            resourceInputs["interfaceMtuVariable"] = args?.interfaceMtuVariable;
            resourceInputs["interfaceName"] = args?.interfaceName;
            resourceInputs["interfaceNameVariable"] = args?.interfaceNameVariable;
            resourceInputs["ipDirectedBroadcast"] = args?.ipDirectedBroadcast;
            resourceInputs["ipDirectedBroadcastVariable"] = args?.ipDirectedBroadcastVariable;
            resourceInputs["ipMtu"] = args?.ipMtu;
            resourceInputs["ipMtuVariable"] = args?.ipMtuVariable;
            resourceInputs["ipv4Address"] = args?.ipv4Address;
            resourceInputs["ipv4AddressVariable"] = args?.ipv4AddressVariable;
            resourceInputs["ipv4AutoDetectBandwidth"] = args?.ipv4AutoDetectBandwidth;
            resourceInputs["ipv4AutoDetectBandwidthVariable"] = args?.ipv4AutoDetectBandwidthVariable;
            resourceInputs["ipv4ConfigurationType"] = args?.ipv4ConfigurationType;
            resourceInputs["ipv4DhcpDistance"] = args?.ipv4DhcpDistance;
            resourceInputs["ipv4DhcpDistanceVariable"] = args?.ipv4DhcpDistanceVariable;
            resourceInputs["ipv4DhcpHelperVariable"] = args?.ipv4DhcpHelperVariable;
            resourceInputs["ipv4DhcpHelpers"] = args?.ipv4DhcpHelpers;
            resourceInputs["ipv4IperfServer"] = args?.ipv4IperfServer;
            resourceInputs["ipv4IperfServerVariable"] = args?.ipv4IperfServerVariable;
            resourceInputs["ipv4SecondaryAddresses"] = args?.ipv4SecondaryAddresses;
            resourceInputs["ipv4SubnetMask"] = args?.ipv4SubnetMask;
            resourceInputs["ipv4SubnetMaskVariable"] = args?.ipv4SubnetMaskVariable;
            resourceInputs["ipv6Address"] = args?.ipv6Address;
            resourceInputs["ipv6AddressVariable"] = args?.ipv6AddressVariable;
            resourceInputs["ipv6ConfigurationType"] = args?.ipv6ConfigurationType;
            resourceInputs["loadInterval"] = args?.loadInterval;
            resourceInputs["loadIntervalVariable"] = args?.loadIntervalVariable;
            resourceInputs["macAddress"] = args?.macAddress;
            resourceInputs["macAddressVariable"] = args?.macAddressVariable;
            resourceInputs["mediaType"] = args?.mediaType;
            resourceInputs["mediaTypeVariable"] = args?.mediaTypeVariable;
            resourceInputs["name"] = args?.name;
            resourceInputs["shutdown"] = args?.shutdown;
            resourceInputs["shutdownVariable"] = args?.shutdownVariable;
            resourceInputs["speed"] = args?.speed;
            resourceInputs["speedVariable"] = args?.speedVariable;
            resourceInputs["tcpMss"] = args?.tcpMss;
            resourceInputs["tcpMssVariable"] = args?.tcpMssVariable;
            resourceInputs["transportManagementVpnFeatureId"] = args?.transportManagementVpnFeatureId;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransportManagementVpnInterfaceEthernetFeature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TransportManagementVpnInterfaceEthernetFeature resources.
 */
export interface TransportManagementVpnInterfaceEthernetFeatureState {
    /**
     * Configure ARP entries
     */
    arpEntries?: pulumi.Input<pulumi.Input<inputs.TransportManagementVpnInterfaceEthernetFeatureArpEntry>[]>;
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds
     *   - Range: `0`-`2147483`
     *   - Default value: `1200`
     */
    arpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    arpTimeoutVariable?: pulumi.Input<string>;
    /**
     * Link autonegotiation
     */
    autonegotiate?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    autonegotiateVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Duplex mode
     *   - Choices: `full`, `half`, `auto`
     */
    duplex?: pulumi.Input<string>;
    /**
     * Variable name
     */
    duplexVariable?: pulumi.Input<string>;
    /**
     * Enable DHCPv6, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
     */
    enableDhcpv6?: pulumi.Input<boolean>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * ICMP/ICMPv6 Redirect Disable
     *   - Default value: `true`
     */
    icmpRedirectDisable?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    icmpRedirectDisableVariable?: pulumi.Input<string>;
    interfaceDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceDescriptionVariable?: pulumi.Input<string>;
    /**
     * Interface MTU
     *   - Range: `1500`-`9216`
     *   - Default value: `1500`
     */
    interfaceMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    interfaceMtuVariable?: pulumi.Input<string>;
    interfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceNameVariable?: pulumi.Input<string>;
    /**
     * IP Directed-Broadcast
     *   - Default value: `false`
     */
    ipDirectedBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipDirectedBroadcastVariable?: pulumi.Input<string>;
    /**
     * IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces <576..2000> in bytes
     *   - Range: `576`-`9216`
     *   - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * IP Address, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     */
    ipv4AddressVariable?: pulumi.Input<string>;
    /**
     * Interface auto detect bandwidth
     *   - Default value: `false`
     */
    ipv4AutoDetectBandwidth?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipv4AutoDetectBandwidthVariable?: pulumi.Input<string>;
    /**
     * IPv4 Configuration Type
     *   - Choices: `dynamic`, `static`
     *   - Default value: `dynamic`
     */
    ipv4ConfigurationType?: pulumi.Input<string>;
    /**
     * DHCP Distance, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic`
     *   - Range: `1`-`65536`
     *   - Default value: `1`
     */
    ipv4DhcpDistance?: pulumi.Input<number>;
    /**
     * Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic`
     */
    ipv4DhcpDistanceVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4DhcpHelperVariable?: pulumi.Input<string>;
    /**
     * List of DHCP IPv4 helper addresses (min 1, max 8)
     */
    ipv4DhcpHelpers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Iperf server for auto bandwidth detect
     */
    ipv4IperfServer?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4IperfServerVariable?: pulumi.Input<string>;
    /**
     * Secondary IpV4 Addresses, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     */
    ipv4SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.TransportManagementVpnInterfaceEthernetFeatureIpv4SecondaryAddress>[]>;
    /**
     * Subnet Mask, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    ipv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     */
    ipv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * IPv6 Address Secondary, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Variable name, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
     */
    ipv6AddressVariable?: pulumi.Input<string>;
    /**
     * IPv6 Configuration Type
     *   - Choices: `dynamic`, `static`, `none`
     *   - Default value: `none`
     */
    ipv6ConfigurationType?: pulumi.Input<string>;
    /**
     * Interval for interface load calculation
     *   - Range: `30`-`600`
     *   - Default value: `30`
     */
    loadInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    loadIntervalVariable?: pulumi.Input<string>;
    /**
     * MAC Address
     */
    macAddress?: pulumi.Input<string>;
    /**
     * Variable name
     */
    macAddressVariable?: pulumi.Input<string>;
    /**
     * Media type
     *   - Choices: `auto-select`, `rj45`, `sfp`
     */
    mediaType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    mediaTypeVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * Set interface speed
     *   - Choices: `10`, `100`, `1000`, `2500`, `10000`
     */
    speed?: pulumi.Input<string>;
    /**
     * Variable name
     */
    speedVariable?: pulumi.Input<string>;
    /**
     * TCP MSS on SYN packets, in bytes
     *   - Range: `500`-`1460`
     */
    tcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssVariable?: pulumi.Input<string>;
    /**
     * Transport Management VPN Feature ID
     */
    transportManagementVpnFeatureId?: pulumi.Input<string>;
    /**
     * The version of the Feature
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a TransportManagementVpnInterfaceEthernetFeature resource.
 */
export interface TransportManagementVpnInterfaceEthernetFeatureArgs {
    /**
     * Configure ARP entries
     */
    arpEntries?: pulumi.Input<pulumi.Input<inputs.TransportManagementVpnInterfaceEthernetFeatureArpEntry>[]>;
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds
     *   - Range: `0`-`2147483`
     *   - Default value: `1200`
     */
    arpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    arpTimeoutVariable?: pulumi.Input<string>;
    /**
     * Link autonegotiation
     */
    autonegotiate?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    autonegotiateVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Duplex mode
     *   - Choices: `full`, `half`, `auto`
     */
    duplex?: pulumi.Input<string>;
    /**
     * Variable name
     */
    duplexVariable?: pulumi.Input<string>;
    /**
     * Enable DHCPv6, Attribute conditional on `ipv6ConfigurationType` being equal to `dynamic`
     */
    enableDhcpv6?: pulumi.Input<boolean>;
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * ICMP/ICMPv6 Redirect Disable
     *   - Default value: `true`
     */
    icmpRedirectDisable?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    icmpRedirectDisableVariable?: pulumi.Input<string>;
    interfaceDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceDescriptionVariable?: pulumi.Input<string>;
    /**
     * Interface MTU
     *   - Range: `1500`-`9216`
     *   - Default value: `1500`
     */
    interfaceMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    interfaceMtuVariable?: pulumi.Input<string>;
    interfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceNameVariable?: pulumi.Input<string>;
    /**
     * IP Directed-Broadcast
     *   - Default value: `false`
     */
    ipDirectedBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipDirectedBroadcastVariable?: pulumi.Input<string>;
    /**
     * IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces <576..2000> in bytes
     *   - Range: `576`-`9216`
     *   - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * IP Address, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     */
    ipv4AddressVariable?: pulumi.Input<string>;
    /**
     * Interface auto detect bandwidth
     *   - Default value: `false`
     */
    ipv4AutoDetectBandwidth?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipv4AutoDetectBandwidthVariable?: pulumi.Input<string>;
    /**
     * IPv4 Configuration Type
     *   - Choices: `dynamic`, `static`
     *   - Default value: `dynamic`
     */
    ipv4ConfigurationType?: pulumi.Input<string>;
    /**
     * DHCP Distance, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic`
     *   - Range: `1`-`65536`
     *   - Default value: `1`
     */
    ipv4DhcpDistance?: pulumi.Input<number>;
    /**
     * Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `dynamic`
     */
    ipv4DhcpDistanceVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4DhcpHelperVariable?: pulumi.Input<string>;
    /**
     * List of DHCP IPv4 helper addresses (min 1, max 8)
     */
    ipv4DhcpHelpers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Iperf server for auto bandwidth detect
     */
    ipv4IperfServer?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4IperfServerVariable?: pulumi.Input<string>;
    /**
     * Secondary IpV4 Addresses, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     */
    ipv4SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.TransportManagementVpnInterfaceEthernetFeatureIpv4SecondaryAddress>[]>;
    /**
     * Subnet Mask, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    ipv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name, Attribute conditional on `ipv4ConfigurationType` being equal to `static`
     */
    ipv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * IPv6 Address Secondary, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Variable name, Attribute conditional on `ipv6ConfigurationType` being equal to `static`
     */
    ipv6AddressVariable?: pulumi.Input<string>;
    /**
     * IPv6 Configuration Type
     *   - Choices: `dynamic`, `static`, `none`
     *   - Default value: `none`
     */
    ipv6ConfigurationType?: pulumi.Input<string>;
    /**
     * Interval for interface load calculation
     *   - Range: `30`-`600`
     *   - Default value: `30`
     */
    loadInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    loadIntervalVariable?: pulumi.Input<string>;
    /**
     * MAC Address
     */
    macAddress?: pulumi.Input<string>;
    /**
     * Variable name
     */
    macAddressVariable?: pulumi.Input<string>;
    /**
     * Media type
     *   - Choices: `auto-select`, `rj45`, `sfp`
     */
    mediaType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    mediaTypeVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * Set interface speed
     *   - Choices: `10`, `100`, `1000`, `2500`, `10000`
     */
    speed?: pulumi.Input<string>;
    /**
     * Variable name
     */
    speedVariable?: pulumi.Input<string>;
    /**
     * TCP MSS on SYN packets, in bytes
     *   - Range: `500`-`1460`
     */
    tcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssVariable?: pulumi.Input<string>;
    /**
     * Transport Management VPN Feature ID
     */
    transportManagementVpnFeatureId: pulumi.Input<string>;
}
