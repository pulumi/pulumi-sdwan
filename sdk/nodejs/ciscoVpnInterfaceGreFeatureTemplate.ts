// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Cisco VPN Interface GRE feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import sdwan:index/ciscoVpnInterfaceGreFeatureTemplate:CiscoVpnInterfaceGreFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class CiscoVpnInterfaceGreFeatureTemplate extends pulumi.CustomResource {
    /**
     * Get an existing CiscoVpnInterfaceGreFeatureTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CiscoVpnInterfaceGreFeatureTemplateState, opts?: pulumi.CustomResourceOptions): CiscoVpnInterfaceGreFeatureTemplate {
        return new CiscoVpnInterfaceGreFeatureTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/ciscoVpnInterfaceGreFeatureTemplate:CiscoVpnInterfaceGreFeatureTemplate';

    /**
     * Returns true if the given object is an instance of CiscoVpnInterfaceGreFeatureTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CiscoVpnInterfaceGreFeatureTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CiscoVpnInterfaceGreFeatureTemplate.__pulumiType;
    }

    /**
     * Apply ACL
     */
    public readonly accessLists!: pulumi.Output<outputs.CiscoVpnInterfaceGreFeatureTemplateAccessList[] | undefined>;
    /**
     * Enable Application Tunnel Type - Choices: `none`, `sig` - Default value: `none`
     */
    public readonly application!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly applicationVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     */
    public readonly clearDontFragment!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly clearDontFragmentVariable!: pulumi.Output<string | undefined>;
    /**
     * The description of the feature template
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    public readonly deviceTypes!: pulumi.Output<string[]>;
    /**
     * Interface description
     */
    public readonly interfaceDescription!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly interfaceDescriptionVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface name: ge0/<0-..> or ge0/<0-..>.vlanid or irb<bridgeid:1-63> or loopback<string> or natpool-<1..31> when
     * present
     */
    public readonly interfaceName!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly interfaceNameVariable!: pulumi.Output<string | undefined>;
    /**
     * Assign IPv4 address
     */
    public readonly ipAddress!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipAddressVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface MTU <576..2000>, in bytes - Range: `64`-`18000` - Default value: `1500`
     */
    public readonly ipMtu!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly ipMtuVariable!: pulumi.Output<string | undefined>;
    /**
     * The name of the feature template
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Name of rewrite rule
     */
    public readonly rewriteRule!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly rewriteRuleVariable!: pulumi.Output<string | undefined>;
    /**
     * Administrative state - Default value: `true`
     */
    public readonly shutdown!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly shutdownVariable!: pulumi.Output<string | undefined>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    public readonly tcpMssAdjust!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tcpMssAdjustVariable!: pulumi.Output<string | undefined>;
    /**
     * The template type
     */
    public /*out*/ readonly templateType!: pulumi.Output<string>;
    /**
     * Variable name
     */
    public readonly trackerVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable tracker for this interface
     */
    public readonly trackers!: pulumi.Output<string[] | undefined>;
    /**
     * Tunnel destination IP Address
     */
    public readonly tunnelDestination!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelDestinationVariable!: pulumi.Output<string | undefined>;
    /**
     * <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
     */
    public readonly tunnelRouteVia!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelRouteViaVariable!: pulumi.Output<string | undefined>;
    /**
     * Tunnel source IP Address
     */
    public readonly tunnelSource!: pulumi.Output<string | undefined>;
    /**
     * <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
     */
    public readonly tunnelSourceInterface!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelSourceInterfaceVariable!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelSourceVariable!: pulumi.Output<string | undefined>;
    /**
     * The version of the feature template
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a CiscoVpnInterfaceGreFeatureTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CiscoVpnInterfaceGreFeatureTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CiscoVpnInterfaceGreFeatureTemplateArgs | CiscoVpnInterfaceGreFeatureTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CiscoVpnInterfaceGreFeatureTemplateState | undefined;
            resourceInputs["accessLists"] = state ? state.accessLists : undefined;
            resourceInputs["application"] = state ? state.application : undefined;
            resourceInputs["applicationVariable"] = state ? state.applicationVariable : undefined;
            resourceInputs["clearDontFragment"] = state ? state.clearDontFragment : undefined;
            resourceInputs["clearDontFragmentVariable"] = state ? state.clearDontFragmentVariable : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceTypes"] = state ? state.deviceTypes : undefined;
            resourceInputs["interfaceDescription"] = state ? state.interfaceDescription : undefined;
            resourceInputs["interfaceDescriptionVariable"] = state ? state.interfaceDescriptionVariable : undefined;
            resourceInputs["interfaceName"] = state ? state.interfaceName : undefined;
            resourceInputs["interfaceNameVariable"] = state ? state.interfaceNameVariable : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["ipAddressVariable"] = state ? state.ipAddressVariable : undefined;
            resourceInputs["ipMtu"] = state ? state.ipMtu : undefined;
            resourceInputs["ipMtuVariable"] = state ? state.ipMtuVariable : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["rewriteRule"] = state ? state.rewriteRule : undefined;
            resourceInputs["rewriteRuleVariable"] = state ? state.rewriteRuleVariable : undefined;
            resourceInputs["shutdown"] = state ? state.shutdown : undefined;
            resourceInputs["shutdownVariable"] = state ? state.shutdownVariable : undefined;
            resourceInputs["tcpMssAdjust"] = state ? state.tcpMssAdjust : undefined;
            resourceInputs["tcpMssAdjustVariable"] = state ? state.tcpMssAdjustVariable : undefined;
            resourceInputs["templateType"] = state ? state.templateType : undefined;
            resourceInputs["trackerVariable"] = state ? state.trackerVariable : undefined;
            resourceInputs["trackers"] = state ? state.trackers : undefined;
            resourceInputs["tunnelDestination"] = state ? state.tunnelDestination : undefined;
            resourceInputs["tunnelDestinationVariable"] = state ? state.tunnelDestinationVariable : undefined;
            resourceInputs["tunnelRouteVia"] = state ? state.tunnelRouteVia : undefined;
            resourceInputs["tunnelRouteViaVariable"] = state ? state.tunnelRouteViaVariable : undefined;
            resourceInputs["tunnelSource"] = state ? state.tunnelSource : undefined;
            resourceInputs["tunnelSourceInterface"] = state ? state.tunnelSourceInterface : undefined;
            resourceInputs["tunnelSourceInterfaceVariable"] = state ? state.tunnelSourceInterfaceVariable : undefined;
            resourceInputs["tunnelSourceVariable"] = state ? state.tunnelSourceVariable : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as CiscoVpnInterfaceGreFeatureTemplateArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.deviceTypes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceTypes'");
            }
            resourceInputs["accessLists"] = args ? args.accessLists : undefined;
            resourceInputs["application"] = args ? args.application : undefined;
            resourceInputs["applicationVariable"] = args ? args.applicationVariable : undefined;
            resourceInputs["clearDontFragment"] = args ? args.clearDontFragment : undefined;
            resourceInputs["clearDontFragmentVariable"] = args ? args.clearDontFragmentVariable : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceTypes"] = args ? args.deviceTypes : undefined;
            resourceInputs["interfaceDescription"] = args ? args.interfaceDescription : undefined;
            resourceInputs["interfaceDescriptionVariable"] = args ? args.interfaceDescriptionVariable : undefined;
            resourceInputs["interfaceName"] = args ? args.interfaceName : undefined;
            resourceInputs["interfaceNameVariable"] = args ? args.interfaceNameVariable : undefined;
            resourceInputs["ipAddress"] = args ? args.ipAddress : undefined;
            resourceInputs["ipAddressVariable"] = args ? args.ipAddressVariable : undefined;
            resourceInputs["ipMtu"] = args ? args.ipMtu : undefined;
            resourceInputs["ipMtuVariable"] = args ? args.ipMtuVariable : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["rewriteRule"] = args ? args.rewriteRule : undefined;
            resourceInputs["rewriteRuleVariable"] = args ? args.rewriteRuleVariable : undefined;
            resourceInputs["shutdown"] = args ? args.shutdown : undefined;
            resourceInputs["shutdownVariable"] = args ? args.shutdownVariable : undefined;
            resourceInputs["tcpMssAdjust"] = args ? args.tcpMssAdjust : undefined;
            resourceInputs["tcpMssAdjustVariable"] = args ? args.tcpMssAdjustVariable : undefined;
            resourceInputs["trackerVariable"] = args ? args.trackerVariable : undefined;
            resourceInputs["trackers"] = args ? args.trackers : undefined;
            resourceInputs["tunnelDestination"] = args ? args.tunnelDestination : undefined;
            resourceInputs["tunnelDestinationVariable"] = args ? args.tunnelDestinationVariable : undefined;
            resourceInputs["tunnelRouteVia"] = args ? args.tunnelRouteVia : undefined;
            resourceInputs["tunnelRouteViaVariable"] = args ? args.tunnelRouteViaVariable : undefined;
            resourceInputs["tunnelSource"] = args ? args.tunnelSource : undefined;
            resourceInputs["tunnelSourceInterface"] = args ? args.tunnelSourceInterface : undefined;
            resourceInputs["tunnelSourceInterfaceVariable"] = args ? args.tunnelSourceInterfaceVariable : undefined;
            resourceInputs["tunnelSourceVariable"] = args ? args.tunnelSourceVariable : undefined;
            resourceInputs["templateType"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CiscoVpnInterfaceGreFeatureTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CiscoVpnInterfaceGreFeatureTemplate resources.
 */
export interface CiscoVpnInterfaceGreFeatureTemplateState {
    /**
     * Apply ACL
     */
    accessLists?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceGreFeatureTemplateAccessList>[]>;
    /**
     * Enable Application Tunnel Type - Choices: `none`, `sig` - Default value: `none`
     */
    application?: pulumi.Input<string>;
    /**
     * Variable name
     */
    applicationVariable?: pulumi.Input<string>;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     */
    clearDontFragment?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    clearDontFragmentVariable?: pulumi.Input<string>;
    /**
     * The description of the feature template
     */
    description?: pulumi.Input<string>;
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Interface description
     */
    interfaceDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceDescriptionVariable?: pulumi.Input<string>;
    /**
     * Interface name: ge0/<0-..> or ge0/<0-..>.vlanid or irb<bridgeid:1-63> or loopback<string> or natpool-<1..31> when
     * present
     */
    interfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceNameVariable?: pulumi.Input<string>;
    /**
     * Assign IPv4 address
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipAddressVariable?: pulumi.Input<string>;
    /**
     * Interface MTU <576..2000>, in bytes - Range: `64`-`18000` - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Name of rewrite rule
     */
    rewriteRule?: pulumi.Input<string>;
    /**
     * Variable name
     */
    rewriteRuleVariable?: pulumi.Input<string>;
    /**
     * Administrative state - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    tcpMssAdjust?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssAdjustVariable?: pulumi.Input<string>;
    /**
     * The template type
     */
    templateType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    trackerVariable?: pulumi.Input<string>;
    /**
     * Enable tracker for this interface
     */
    trackers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tunnel destination IP Address
     */
    tunnelDestination?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelDestinationVariable?: pulumi.Input<string>;
    /**
     * <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
     */
    tunnelRouteVia?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelRouteViaVariable?: pulumi.Input<string>;
    /**
     * Tunnel source IP Address
     */
    tunnelSource?: pulumi.Input<string>;
    /**
     * <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
     */
    tunnelSourceInterface?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelSourceInterfaceVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelSourceVariable?: pulumi.Input<string>;
    /**
     * The version of the feature template
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CiscoVpnInterfaceGreFeatureTemplate resource.
 */
export interface CiscoVpnInterfaceGreFeatureTemplateArgs {
    /**
     * Apply ACL
     */
    accessLists?: pulumi.Input<pulumi.Input<inputs.CiscoVpnInterfaceGreFeatureTemplateAccessList>[]>;
    /**
     * Enable Application Tunnel Type - Choices: `none`, `sig` - Default value: `none`
     */
    application?: pulumi.Input<string>;
    /**
     * Variable name
     */
    applicationVariable?: pulumi.Input<string>;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     */
    clearDontFragment?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    clearDontFragmentVariable?: pulumi.Input<string>;
    /**
     * The description of the feature template
     */
    description: pulumi.Input<string>;
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Interface description
     */
    interfaceDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceDescriptionVariable?: pulumi.Input<string>;
    /**
     * Interface name: ge0/<0-..> or ge0/<0-..>.vlanid or irb<bridgeid:1-63> or loopback<string> or natpool-<1..31> when
     * present
     */
    interfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceNameVariable?: pulumi.Input<string>;
    /**
     * Assign IPv4 address
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipAddressVariable?: pulumi.Input<string>;
    /**
     * Interface MTU <576..2000>, in bytes - Range: `64`-`18000` - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Name of rewrite rule
     */
    rewriteRule?: pulumi.Input<string>;
    /**
     * Variable name
     */
    rewriteRuleVariable?: pulumi.Input<string>;
    /**
     * Administrative state - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    tcpMssAdjust?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssAdjustVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    trackerVariable?: pulumi.Input<string>;
    /**
     * Enable tracker for this interface
     */
    trackers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tunnel destination IP Address
     */
    tunnelDestination?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelDestinationVariable?: pulumi.Input<string>;
    /**
     * <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
     */
    tunnelRouteVia?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelRouteViaVariable?: pulumi.Input<string>;
    /**
     * Tunnel source IP Address
     */
    tunnelSource?: pulumi.Input<string>;
    /**
     * <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
     */
    tunnelSourceInterface?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelSourceInterfaceVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelSourceVariable?: pulumi.Input<string>;
}
