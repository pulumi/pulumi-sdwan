// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource can manage a SLA Class Policy Object .
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = new sdwan.SlaClassPolicyObject("example", {
 *     name: "Example",
 *     jitter: 100,
 *     latency: 10,
 *     loss: 1,
 *     fallbackBestTunnelCriteria: "jitter-loss-latency",
 *     fallbackBestTunnelJitter: 100,
 *     fallbackBestTunnelLatency: 10,
 *     fallbackBestTunnelLoss: 1,
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import sdwan:index/slaClassPolicyObject:SlaClassPolicyObject example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class SlaClassPolicyObject extends pulumi.CustomResource {
    /**
     * Get an existing SlaClassPolicyObject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SlaClassPolicyObjectState, opts?: pulumi.CustomResourceOptions): SlaClassPolicyObject {
        return new SlaClassPolicyObject(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/slaClassPolicyObject:SlaClassPolicyObject';

    /**
     * Returns true if the given object is an instance of SlaClassPolicyObject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SlaClassPolicyObject {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SlaClassPolicyObject.__pulumiType;
    }

    /**
     * App Probe Class Policy Object ID
     */
    declare public readonly appProbeClassId: pulumi.Output<string | undefined>;
    /**
     * App Probe Class Policy Object version
     */
    declare public readonly appProbeClassVersion: pulumi.Output<number | undefined>;
    /**
     * - Choices: `loss`, `latency`, `jitter`, `loss-latency`, `loss-jitter`, `latency-loss`, `latency-jitter`, `jitter-latency`, `jitter-loss`, `loss-latency-jitter`, `loss-jitter-latency`, `latency-loss-jitter`, `latency-jitter-loss`, `jitter-latency-loss`, `jitter-loss-latency`
     */
    declare public readonly fallbackBestTunnelCriteria: pulumi.Output<string | undefined>;
    /**
     * Jitter variance in ms
     *   - Range: `1`-`1000`
     */
    declare public readonly fallbackBestTunnelJitter: pulumi.Output<number | undefined>;
    /**
     * Latency variance in ms
     *   - Range: `1`-`1000`
     */
    declare public readonly fallbackBestTunnelLatency: pulumi.Output<number | undefined>;
    /**
     * Loss variance in percent
     *   - Range: `1`-`100`
     */
    declare public readonly fallbackBestTunnelLoss: pulumi.Output<number | undefined>;
    /**
     * Jitter in ms
     *   - Range: `1`-`1000`
     */
    declare public readonly jitter: pulumi.Output<number | undefined>;
    /**
     * Latency in ms
     *   - Range: `1`-`1000`
     */
    declare public readonly latency: pulumi.Output<number | undefined>;
    /**
     * Loss in percent
     *   - Range: `1`-`100`
     */
    declare public readonly loss: pulumi.Output<number | undefined>;
    /**
     * The name of the policy object
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The version of the object
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;

    /**
     * Create a SlaClassPolicyObject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SlaClassPolicyObjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SlaClassPolicyObjectArgs | SlaClassPolicyObjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SlaClassPolicyObjectState | undefined;
            resourceInputs["appProbeClassId"] = state?.appProbeClassId;
            resourceInputs["appProbeClassVersion"] = state?.appProbeClassVersion;
            resourceInputs["fallbackBestTunnelCriteria"] = state?.fallbackBestTunnelCriteria;
            resourceInputs["fallbackBestTunnelJitter"] = state?.fallbackBestTunnelJitter;
            resourceInputs["fallbackBestTunnelLatency"] = state?.fallbackBestTunnelLatency;
            resourceInputs["fallbackBestTunnelLoss"] = state?.fallbackBestTunnelLoss;
            resourceInputs["jitter"] = state?.jitter;
            resourceInputs["latency"] = state?.latency;
            resourceInputs["loss"] = state?.loss;
            resourceInputs["name"] = state?.name;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as SlaClassPolicyObjectArgs | undefined;
            resourceInputs["appProbeClassId"] = args?.appProbeClassId;
            resourceInputs["appProbeClassVersion"] = args?.appProbeClassVersion;
            resourceInputs["fallbackBestTunnelCriteria"] = args?.fallbackBestTunnelCriteria;
            resourceInputs["fallbackBestTunnelJitter"] = args?.fallbackBestTunnelJitter;
            resourceInputs["fallbackBestTunnelLatency"] = args?.fallbackBestTunnelLatency;
            resourceInputs["fallbackBestTunnelLoss"] = args?.fallbackBestTunnelLoss;
            resourceInputs["jitter"] = args?.jitter;
            resourceInputs["latency"] = args?.latency;
            resourceInputs["loss"] = args?.loss;
            resourceInputs["name"] = args?.name;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SlaClassPolicyObject.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SlaClassPolicyObject resources.
 */
export interface SlaClassPolicyObjectState {
    /**
     * App Probe Class Policy Object ID
     */
    appProbeClassId?: pulumi.Input<string>;
    /**
     * App Probe Class Policy Object version
     */
    appProbeClassVersion?: pulumi.Input<number>;
    /**
     * - Choices: `loss`, `latency`, `jitter`, `loss-latency`, `loss-jitter`, `latency-loss`, `latency-jitter`, `jitter-latency`, `jitter-loss`, `loss-latency-jitter`, `loss-jitter-latency`, `latency-loss-jitter`, `latency-jitter-loss`, `jitter-latency-loss`, `jitter-loss-latency`
     */
    fallbackBestTunnelCriteria?: pulumi.Input<string>;
    /**
     * Jitter variance in ms
     *   - Range: `1`-`1000`
     */
    fallbackBestTunnelJitter?: pulumi.Input<number>;
    /**
     * Latency variance in ms
     *   - Range: `1`-`1000`
     */
    fallbackBestTunnelLatency?: pulumi.Input<number>;
    /**
     * Loss variance in percent
     *   - Range: `1`-`100`
     */
    fallbackBestTunnelLoss?: pulumi.Input<number>;
    /**
     * Jitter in ms
     *   - Range: `1`-`1000`
     */
    jitter?: pulumi.Input<number>;
    /**
     * Latency in ms
     *   - Range: `1`-`1000`
     */
    latency?: pulumi.Input<number>;
    /**
     * Loss in percent
     *   - Range: `1`-`100`
     */
    loss?: pulumi.Input<number>;
    /**
     * The name of the policy object
     */
    name?: pulumi.Input<string>;
    /**
     * The version of the object
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SlaClassPolicyObject resource.
 */
export interface SlaClassPolicyObjectArgs {
    /**
     * App Probe Class Policy Object ID
     */
    appProbeClassId?: pulumi.Input<string>;
    /**
     * App Probe Class Policy Object version
     */
    appProbeClassVersion?: pulumi.Input<number>;
    /**
     * - Choices: `loss`, `latency`, `jitter`, `loss-latency`, `loss-jitter`, `latency-loss`, `latency-jitter`, `jitter-latency`, `jitter-loss`, `loss-latency-jitter`, `loss-jitter-latency`, `latency-loss-jitter`, `latency-jitter-loss`, `jitter-latency-loss`, `jitter-loss-latency`
     */
    fallbackBestTunnelCriteria?: pulumi.Input<string>;
    /**
     * Jitter variance in ms
     *   - Range: `1`-`1000`
     */
    fallbackBestTunnelJitter?: pulumi.Input<number>;
    /**
     * Latency variance in ms
     *   - Range: `1`-`1000`
     */
    fallbackBestTunnelLatency?: pulumi.Input<number>;
    /**
     * Loss variance in percent
     *   - Range: `1`-`100`
     */
    fallbackBestTunnelLoss?: pulumi.Input<number>;
    /**
     * Jitter in ms
     *   - Range: `1`-`1000`
     */
    jitter?: pulumi.Input<number>;
    /**
     * Latency in ms
     *   - Range: `1`-`1000`
     */
    latency?: pulumi.Input<number>;
    /**
     * Loss in percent
     *   - Range: `1`-`100`
     */
    loss?: pulumi.Input<number>;
    /**
     * The name of the policy object
     */
    name?: pulumi.Input<string>;
}
