// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a System Security Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * Expected import identifier with the format: "system_security_feature_id,feature_profile_id"
 *
 * ```sh
 * $ pulumi import sdwan:index/systemSecurityFeature:SystemSecurityFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
 * ```
 */
export class SystemSecurityFeature extends pulumi.CustomResource {
    /**
     * Get an existing SystemSecurityFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemSecurityFeatureState, opts?: pulumi.CustomResourceOptions): SystemSecurityFeature {
        return new SystemSecurityFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/systemSecurityFeature:SystemSecurityFeature';

    /**
     * Returns true if the given object is an instance of SystemSecurityFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemSecurityFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemSecurityFeature.__pulumiType;
    }

    /**
     * Set the sliding replay window size
     *   - Choices: `64`, `128`, `256`, `512`, `1024`, `2048`, `4096`, `8192`
     *   - Default value: `512`
     */
    declare public readonly antiReplayWindow: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly antiReplayWindowVariable: pulumi.Output<string | undefined>;
    /**
     * The description of the Feature
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Extended Anti-Replay Window
     *   - Range: `10`-`2048`
     *   - Default value: `256`
     */
    declare public readonly extendedAntiReplayWindow: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly extendedAntiReplayWindowVariable: pulumi.Output<string | undefined>;
    /**
     * Feature Profile ID
     */
    declare public readonly featureProfileId: pulumi.Output<string>;
    /**
     * Variable name
     */
    declare public readonly integrityTypeVariable: pulumi.Output<string | undefined>;
    /**
     * Set the authentication type for DTLS connections
     */
    declare public readonly integrityTypes: pulumi.Output<string[] | undefined>;
    /**
     * Enable or disable IPsec pairwise-keying
     *   - Default value: `false`
     */
    declare public readonly ipsecPairwiseKeying: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipsecPairwiseKeyingVariable: pulumi.Output<string | undefined>;
    /**
     * Configure a Keychain
     */
    declare public readonly keychains: pulumi.Output<outputs.SystemSecurityFeatureKeychain[] | undefined>;
    /**
     * Configure a Key
     */
    declare public readonly keys: pulumi.Output<outputs.SystemSecurityFeatureKey[] | undefined>;
    /**
     * The name of the Feature
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Set how often to change the AES key for DTLS connections
     *   - Range: `10`-`1209600`
     *   - Default value: `86400`
     */
    declare public readonly rekey: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly rekeyVariable: pulumi.Output<string | undefined>;
    /**
     * The version of the Feature
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;

    /**
     * Create a SystemSecurityFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemSecurityFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemSecurityFeatureArgs | SystemSecurityFeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemSecurityFeatureState | undefined;
            resourceInputs["antiReplayWindow"] = state?.antiReplayWindow;
            resourceInputs["antiReplayWindowVariable"] = state?.antiReplayWindowVariable;
            resourceInputs["description"] = state?.description;
            resourceInputs["extendedAntiReplayWindow"] = state?.extendedAntiReplayWindow;
            resourceInputs["extendedAntiReplayWindowVariable"] = state?.extendedAntiReplayWindowVariable;
            resourceInputs["featureProfileId"] = state?.featureProfileId;
            resourceInputs["integrityTypeVariable"] = state?.integrityTypeVariable;
            resourceInputs["integrityTypes"] = state?.integrityTypes;
            resourceInputs["ipsecPairwiseKeying"] = state?.ipsecPairwiseKeying;
            resourceInputs["ipsecPairwiseKeyingVariable"] = state?.ipsecPairwiseKeyingVariable;
            resourceInputs["keychains"] = state?.keychains;
            resourceInputs["keys"] = state?.keys;
            resourceInputs["name"] = state?.name;
            resourceInputs["rekey"] = state?.rekey;
            resourceInputs["rekeyVariable"] = state?.rekeyVariable;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as SystemSecurityFeatureArgs | undefined;
            if (args?.featureProfileId === undefined && !opts.urn) {
                throw new Error("Missing required property 'featureProfileId'");
            }
            resourceInputs["antiReplayWindow"] = args?.antiReplayWindow;
            resourceInputs["antiReplayWindowVariable"] = args?.antiReplayWindowVariable;
            resourceInputs["description"] = args?.description;
            resourceInputs["extendedAntiReplayWindow"] = args?.extendedAntiReplayWindow;
            resourceInputs["extendedAntiReplayWindowVariable"] = args?.extendedAntiReplayWindowVariable;
            resourceInputs["featureProfileId"] = args?.featureProfileId;
            resourceInputs["integrityTypeVariable"] = args?.integrityTypeVariable;
            resourceInputs["integrityTypes"] = args?.integrityTypes;
            resourceInputs["ipsecPairwiseKeying"] = args?.ipsecPairwiseKeying;
            resourceInputs["ipsecPairwiseKeyingVariable"] = args?.ipsecPairwiseKeyingVariable;
            resourceInputs["keychains"] = args?.keychains;
            resourceInputs["keys"] = args?.keys;
            resourceInputs["name"] = args?.name;
            resourceInputs["rekey"] = args?.rekey;
            resourceInputs["rekeyVariable"] = args?.rekeyVariable;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemSecurityFeature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemSecurityFeature resources.
 */
export interface SystemSecurityFeatureState {
    /**
     * Set the sliding replay window size
     *   - Choices: `64`, `128`, `256`, `512`, `1024`, `2048`, `4096`, `8192`
     *   - Default value: `512`
     */
    antiReplayWindow?: pulumi.Input<string>;
    /**
     * Variable name
     */
    antiReplayWindowVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Extended Anti-Replay Window
     *   - Range: `10`-`2048`
     *   - Default value: `256`
     */
    extendedAntiReplayWindow?: pulumi.Input<number>;
    /**
     * Variable name
     */
    extendedAntiReplayWindowVariable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * Variable name
     */
    integrityTypeVariable?: pulumi.Input<string>;
    /**
     * Set the authentication type for DTLS connections
     */
    integrityTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable or disable IPsec pairwise-keying
     *   - Default value: `false`
     */
    ipsecPairwiseKeying?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipsecPairwiseKeyingVariable?: pulumi.Input<string>;
    /**
     * Configure a Keychain
     */
    keychains?: pulumi.Input<pulumi.Input<inputs.SystemSecurityFeatureKeychain>[]>;
    /**
     * Configure a Key
     */
    keys?: pulumi.Input<pulumi.Input<inputs.SystemSecurityFeatureKey>[]>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * Set how often to change the AES key for DTLS connections
     *   - Range: `10`-`1209600`
     *   - Default value: `86400`
     */
    rekey?: pulumi.Input<number>;
    /**
     * Variable name
     */
    rekeyVariable?: pulumi.Input<string>;
    /**
     * The version of the Feature
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SystemSecurityFeature resource.
 */
export interface SystemSecurityFeatureArgs {
    /**
     * Set the sliding replay window size
     *   - Choices: `64`, `128`, `256`, `512`, `1024`, `2048`, `4096`, `8192`
     *   - Default value: `512`
     */
    antiReplayWindow?: pulumi.Input<string>;
    /**
     * Variable name
     */
    antiReplayWindowVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Extended Anti-Replay Window
     *   - Range: `10`-`2048`
     *   - Default value: `256`
     */
    extendedAntiReplayWindow?: pulumi.Input<number>;
    /**
     * Variable name
     */
    extendedAntiReplayWindowVariable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * Variable name
     */
    integrityTypeVariable?: pulumi.Input<string>;
    /**
     * Set the authentication type for DTLS connections
     */
    integrityTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable or disable IPsec pairwise-keying
     *   - Default value: `false`
     */
    ipsecPairwiseKeying?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipsecPairwiseKeyingVariable?: pulumi.Input<string>;
    /**
     * Configure a Keychain
     */
    keychains?: pulumi.Input<pulumi.Input<inputs.SystemSecurityFeatureKeychain>[]>;
    /**
     * Configure a Key
     */
    keys?: pulumi.Input<pulumi.Input<inputs.SystemSecurityFeatureKey>[]>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * Set how often to change the AES key for DTLS connections
     *   - Range: `10`-`1209600`
     *   - Default value: `86400`
     */
    rekey?: pulumi.Input<number>;
    /**
     * Variable name
     */
    rekeyVariable?: pulumi.Input<string>;
}
