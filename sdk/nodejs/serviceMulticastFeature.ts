// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Service Multicast Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * Expected import identifier with the format: "service_multicast_feature_id,feature_profile_id"
 *
 * ```sh
 * $ pulumi import sdwan:index/serviceMulticastFeature:ServiceMulticastFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
 * ```
 */
export class ServiceMulticastFeature extends pulumi.CustomResource {
    /**
     * Get an existing ServiceMulticastFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceMulticastFeatureState, opts?: pulumi.CustomResourceOptions): ServiceMulticastFeature {
        return new ServiceMulticastFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/serviceMulticastFeature:ServiceMulticastFeature';

    /**
     * Returns true if the given object is an instance of ServiceMulticastFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceMulticastFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceMulticastFeature.__pulumiType;
    }

    /**
     * Enable or disable RP Announce
     */
    declare public readonly autoRpAnnounces: pulumi.Output<outputs.ServiceMulticastFeatureAutoRpAnnounce[] | undefined>;
    /**
     * Enable or disable RP Discovery
     */
    declare public readonly autoRpDiscoveries: pulumi.Output<outputs.ServiceMulticastFeatureAutoRpDiscovery[] | undefined>;
    /**
     * The description of the Feature
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Enable or disable auto-RP
     *   - Default value: `false`
     */
    declare public readonly enableAutoRp: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly enableAutoRpVariable: pulumi.Output<string | undefined>;
    /**
     * Feature Profile ID
     */
    declare public readonly featureProfileId: pulumi.Output<string>;
    /**
     * Set IGMP interface parameters
     */
    declare public readonly igmpInterfaces: pulumi.Output<outputs.ServiceMulticastFeatureIgmpInterface[] | undefined>;
    /**
     * Replicator is local to this device
     *   - Default value: `false`
     */
    declare public readonly localReplicator: pulumi.Output<boolean | undefined>;
    /**
     * Set number of joins per group the router supports
     *   - Range: `0`-`131072`
     */
    declare public readonly localReplicatorThreshold: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly localReplicatorThresholdVariable: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly localReplicatorVariable: pulumi.Output<string | undefined>;
    /**
     * Set MSDP refresh timer
     *   - Range: `1`-`60`
     */
    declare public readonly msdpConnectionRetryInterval: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly msdpConnectionRetryIntervalVariable: pulumi.Output<string | undefined>;
    /**
     * multicast MSDP peer
     */
    declare public readonly msdpGroups: pulumi.Output<outputs.ServiceMulticastFeatureMsdpGroup[] | undefined>;
    /**
     * Set MSDP originator ID
     */
    declare public readonly msdpOriginatorId: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly msdpOriginatorIdVariable: pulumi.Output<string | undefined>;
    /**
     * The name of the Feature
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * bsr candidate Attributes
     */
    declare public readonly pimBsrCandidates: pulumi.Output<outputs.ServiceMulticastFeaturePimBsrCandidate[] | undefined>;
    /**
     * Set RP Discovery Scope
     */
    declare public readonly pimBsrRpCandidates: pulumi.Output<outputs.ServiceMulticastFeaturePimBsrRpCandidate[] | undefined>;
    /**
     * Set PIM interface parameters
     */
    declare public readonly pimInterfaces: pulumi.Output<outputs.ServiceMulticastFeaturePimInterface[] | undefined>;
    /**
     * Set Access List for PIM SSM
     */
    declare public readonly pimSourceSpecificMulticastAccessList: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly pimSourceSpecificMulticastAccessListVariable: pulumi.Output<string | undefined>;
    /**
     * turn SSM on/off
     */
    declare public readonly pimSourceSpecificMulticastEnable: pulumi.Output<boolean>;
    /**
     * Set when PIM router joins the SPT (kbps)
     *   - Choices: `0`, `infinity`
     *   - Default value: `0`
     */
    declare public readonly pimSptThreshold: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly pimSptThresholdVariable: pulumi.Output<string | undefined>;
    /**
     * Shortest Path Tree (SPT) Only Mode
     *   - Default value: `false`
     */
    declare public readonly sptOnly: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly sptOnlyVariable: pulumi.Output<string | undefined>;
    /**
     * Set Static RP Address(es)
     */
    declare public readonly staticRpAddresses: pulumi.Output<outputs.ServiceMulticastFeatureStaticRpAddress[] | undefined>;
    /**
     * The version of the Feature
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;

    /**
     * Create a ServiceMulticastFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceMulticastFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceMulticastFeatureArgs | ServiceMulticastFeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceMulticastFeatureState | undefined;
            resourceInputs["autoRpAnnounces"] = state?.autoRpAnnounces;
            resourceInputs["autoRpDiscoveries"] = state?.autoRpDiscoveries;
            resourceInputs["description"] = state?.description;
            resourceInputs["enableAutoRp"] = state?.enableAutoRp;
            resourceInputs["enableAutoRpVariable"] = state?.enableAutoRpVariable;
            resourceInputs["featureProfileId"] = state?.featureProfileId;
            resourceInputs["igmpInterfaces"] = state?.igmpInterfaces;
            resourceInputs["localReplicator"] = state?.localReplicator;
            resourceInputs["localReplicatorThreshold"] = state?.localReplicatorThreshold;
            resourceInputs["localReplicatorThresholdVariable"] = state?.localReplicatorThresholdVariable;
            resourceInputs["localReplicatorVariable"] = state?.localReplicatorVariable;
            resourceInputs["msdpConnectionRetryInterval"] = state?.msdpConnectionRetryInterval;
            resourceInputs["msdpConnectionRetryIntervalVariable"] = state?.msdpConnectionRetryIntervalVariable;
            resourceInputs["msdpGroups"] = state?.msdpGroups;
            resourceInputs["msdpOriginatorId"] = state?.msdpOriginatorId;
            resourceInputs["msdpOriginatorIdVariable"] = state?.msdpOriginatorIdVariable;
            resourceInputs["name"] = state?.name;
            resourceInputs["pimBsrCandidates"] = state?.pimBsrCandidates;
            resourceInputs["pimBsrRpCandidates"] = state?.pimBsrRpCandidates;
            resourceInputs["pimInterfaces"] = state?.pimInterfaces;
            resourceInputs["pimSourceSpecificMulticastAccessList"] = state?.pimSourceSpecificMulticastAccessList;
            resourceInputs["pimSourceSpecificMulticastAccessListVariable"] = state?.pimSourceSpecificMulticastAccessListVariable;
            resourceInputs["pimSourceSpecificMulticastEnable"] = state?.pimSourceSpecificMulticastEnable;
            resourceInputs["pimSptThreshold"] = state?.pimSptThreshold;
            resourceInputs["pimSptThresholdVariable"] = state?.pimSptThresholdVariable;
            resourceInputs["sptOnly"] = state?.sptOnly;
            resourceInputs["sptOnlyVariable"] = state?.sptOnlyVariable;
            resourceInputs["staticRpAddresses"] = state?.staticRpAddresses;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as ServiceMulticastFeatureArgs | undefined;
            if (args?.featureProfileId === undefined && !opts.urn) {
                throw new Error("Missing required property 'featureProfileId'");
            }
            if (args?.pimSourceSpecificMulticastEnable === undefined && !opts.urn) {
                throw new Error("Missing required property 'pimSourceSpecificMulticastEnable'");
            }
            resourceInputs["autoRpAnnounces"] = args?.autoRpAnnounces;
            resourceInputs["autoRpDiscoveries"] = args?.autoRpDiscoveries;
            resourceInputs["description"] = args?.description;
            resourceInputs["enableAutoRp"] = args?.enableAutoRp;
            resourceInputs["enableAutoRpVariable"] = args?.enableAutoRpVariable;
            resourceInputs["featureProfileId"] = args?.featureProfileId;
            resourceInputs["igmpInterfaces"] = args?.igmpInterfaces;
            resourceInputs["localReplicator"] = args?.localReplicator;
            resourceInputs["localReplicatorThreshold"] = args?.localReplicatorThreshold;
            resourceInputs["localReplicatorThresholdVariable"] = args?.localReplicatorThresholdVariable;
            resourceInputs["localReplicatorVariable"] = args?.localReplicatorVariable;
            resourceInputs["msdpConnectionRetryInterval"] = args?.msdpConnectionRetryInterval;
            resourceInputs["msdpConnectionRetryIntervalVariable"] = args?.msdpConnectionRetryIntervalVariable;
            resourceInputs["msdpGroups"] = args?.msdpGroups;
            resourceInputs["msdpOriginatorId"] = args?.msdpOriginatorId;
            resourceInputs["msdpOriginatorIdVariable"] = args?.msdpOriginatorIdVariable;
            resourceInputs["name"] = args?.name;
            resourceInputs["pimBsrCandidates"] = args?.pimBsrCandidates;
            resourceInputs["pimBsrRpCandidates"] = args?.pimBsrRpCandidates;
            resourceInputs["pimInterfaces"] = args?.pimInterfaces;
            resourceInputs["pimSourceSpecificMulticastAccessList"] = args?.pimSourceSpecificMulticastAccessList;
            resourceInputs["pimSourceSpecificMulticastAccessListVariable"] = args?.pimSourceSpecificMulticastAccessListVariable;
            resourceInputs["pimSourceSpecificMulticastEnable"] = args?.pimSourceSpecificMulticastEnable;
            resourceInputs["pimSptThreshold"] = args?.pimSptThreshold;
            resourceInputs["pimSptThresholdVariable"] = args?.pimSptThresholdVariable;
            resourceInputs["sptOnly"] = args?.sptOnly;
            resourceInputs["sptOnlyVariable"] = args?.sptOnlyVariable;
            resourceInputs["staticRpAddresses"] = args?.staticRpAddresses;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceMulticastFeature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceMulticastFeature resources.
 */
export interface ServiceMulticastFeatureState {
    /**
     * Enable or disable RP Announce
     */
    autoRpAnnounces?: pulumi.Input<pulumi.Input<inputs.ServiceMulticastFeatureAutoRpAnnounce>[]>;
    /**
     * Enable or disable RP Discovery
     */
    autoRpDiscoveries?: pulumi.Input<pulumi.Input<inputs.ServiceMulticastFeatureAutoRpDiscovery>[]>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Enable or disable auto-RP
     *   - Default value: `false`
     */
    enableAutoRp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    enableAutoRpVariable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * Set IGMP interface parameters
     */
    igmpInterfaces?: pulumi.Input<pulumi.Input<inputs.ServiceMulticastFeatureIgmpInterface>[]>;
    /**
     * Replicator is local to this device
     *   - Default value: `false`
     */
    localReplicator?: pulumi.Input<boolean>;
    /**
     * Set number of joins per group the router supports
     *   - Range: `0`-`131072`
     */
    localReplicatorThreshold?: pulumi.Input<number>;
    /**
     * Variable name
     */
    localReplicatorThresholdVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    localReplicatorVariable?: pulumi.Input<string>;
    /**
     * Set MSDP refresh timer
     *   - Range: `1`-`60`
     */
    msdpConnectionRetryInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    msdpConnectionRetryIntervalVariable?: pulumi.Input<string>;
    /**
     * multicast MSDP peer
     */
    msdpGroups?: pulumi.Input<pulumi.Input<inputs.ServiceMulticastFeatureMsdpGroup>[]>;
    /**
     * Set MSDP originator ID
     */
    msdpOriginatorId?: pulumi.Input<string>;
    /**
     * Variable name
     */
    msdpOriginatorIdVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * bsr candidate Attributes
     */
    pimBsrCandidates?: pulumi.Input<pulumi.Input<inputs.ServiceMulticastFeaturePimBsrCandidate>[]>;
    /**
     * Set RP Discovery Scope
     */
    pimBsrRpCandidates?: pulumi.Input<pulumi.Input<inputs.ServiceMulticastFeaturePimBsrRpCandidate>[]>;
    /**
     * Set PIM interface parameters
     */
    pimInterfaces?: pulumi.Input<pulumi.Input<inputs.ServiceMulticastFeaturePimInterface>[]>;
    /**
     * Set Access List for PIM SSM
     */
    pimSourceSpecificMulticastAccessList?: pulumi.Input<string>;
    /**
     * Variable name
     */
    pimSourceSpecificMulticastAccessListVariable?: pulumi.Input<string>;
    /**
     * turn SSM on/off
     */
    pimSourceSpecificMulticastEnable?: pulumi.Input<boolean>;
    /**
     * Set when PIM router joins the SPT (kbps)
     *   - Choices: `0`, `infinity`
     *   - Default value: `0`
     */
    pimSptThreshold?: pulumi.Input<string>;
    /**
     * Variable name
     */
    pimSptThresholdVariable?: pulumi.Input<string>;
    /**
     * Shortest Path Tree (SPT) Only Mode
     *   - Default value: `false`
     */
    sptOnly?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    sptOnlyVariable?: pulumi.Input<string>;
    /**
     * Set Static RP Address(es)
     */
    staticRpAddresses?: pulumi.Input<pulumi.Input<inputs.ServiceMulticastFeatureStaticRpAddress>[]>;
    /**
     * The version of the Feature
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ServiceMulticastFeature resource.
 */
export interface ServiceMulticastFeatureArgs {
    /**
     * Enable or disable RP Announce
     */
    autoRpAnnounces?: pulumi.Input<pulumi.Input<inputs.ServiceMulticastFeatureAutoRpAnnounce>[]>;
    /**
     * Enable or disable RP Discovery
     */
    autoRpDiscoveries?: pulumi.Input<pulumi.Input<inputs.ServiceMulticastFeatureAutoRpDiscovery>[]>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Enable or disable auto-RP
     *   - Default value: `false`
     */
    enableAutoRp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    enableAutoRpVariable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * Set IGMP interface parameters
     */
    igmpInterfaces?: pulumi.Input<pulumi.Input<inputs.ServiceMulticastFeatureIgmpInterface>[]>;
    /**
     * Replicator is local to this device
     *   - Default value: `false`
     */
    localReplicator?: pulumi.Input<boolean>;
    /**
     * Set number of joins per group the router supports
     *   - Range: `0`-`131072`
     */
    localReplicatorThreshold?: pulumi.Input<number>;
    /**
     * Variable name
     */
    localReplicatorThresholdVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    localReplicatorVariable?: pulumi.Input<string>;
    /**
     * Set MSDP refresh timer
     *   - Range: `1`-`60`
     */
    msdpConnectionRetryInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    msdpConnectionRetryIntervalVariable?: pulumi.Input<string>;
    /**
     * multicast MSDP peer
     */
    msdpGroups?: pulumi.Input<pulumi.Input<inputs.ServiceMulticastFeatureMsdpGroup>[]>;
    /**
     * Set MSDP originator ID
     */
    msdpOriginatorId?: pulumi.Input<string>;
    /**
     * Variable name
     */
    msdpOriginatorIdVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * bsr candidate Attributes
     */
    pimBsrCandidates?: pulumi.Input<pulumi.Input<inputs.ServiceMulticastFeaturePimBsrCandidate>[]>;
    /**
     * Set RP Discovery Scope
     */
    pimBsrRpCandidates?: pulumi.Input<pulumi.Input<inputs.ServiceMulticastFeaturePimBsrRpCandidate>[]>;
    /**
     * Set PIM interface parameters
     */
    pimInterfaces?: pulumi.Input<pulumi.Input<inputs.ServiceMulticastFeaturePimInterface>[]>;
    /**
     * Set Access List for PIM SSM
     */
    pimSourceSpecificMulticastAccessList?: pulumi.Input<string>;
    /**
     * Variable name
     */
    pimSourceSpecificMulticastAccessListVariable?: pulumi.Input<string>;
    /**
     * turn SSM on/off
     */
    pimSourceSpecificMulticastEnable: pulumi.Input<boolean>;
    /**
     * Set when PIM router joins the SPT (kbps)
     *   - Choices: `0`, `infinity`
     *   - Default value: `0`
     */
    pimSptThreshold?: pulumi.Input<string>;
    /**
     * Variable name
     */
    pimSptThresholdVariable?: pulumi.Input<string>;
    /**
     * Shortest Path Tree (SPT) Only Mode
     *   - Default value: `false`
     */
    sptOnly?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    sptOnlyVariable?: pulumi.Input<string>;
    /**
     * Set Static RP Address(es)
     */
    staticRpAddresses?: pulumi.Input<pulumi.Input<inputs.ServiceMulticastFeatureStaticRpAddress>[]>;
}
