// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource can manage a Transport WAN VPN Interface IPSEC Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = new sdwan.TransportWanVpnInterfaceIpsecFeature("example", {
 *     name: "Example",
 *     description: "My Example",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 *     transportWanVpnFeatureId: "140331f6-5418-4755-a059-13c77eb96037",
 *     interfaceName: "ipsec987",
 *     shutdown: true,
 *     interfaceDescription: "ipsec987",
 *     ipv4Address: "9.7.5.4",
 *     ipv4SubnetMask: "255.255.255.0",
 *     tunnelSourceIpv4Address: "1.3.5.88",
 *     tunnelSourceIpv4SubnetMask: "255.255.255.0",
 *     tunnelSourceInterface: "GigabitEthernet8",
 *     tunnelDestinationIpv4Address: "2.55.67.99",
 *     tunnelDestinationIpv4SubnetMask: "255.255.255.0",
 *     applicationTunnelType: "none",
 *     tcpMss: 1460,
 *     clearDontFragment: false,
 *     ipMtu: 1500,
 *     dpdInterval: 10,
 *     dpdRetries: 3,
 *     ikePresharedKey: "123",
 *     ikeVersion: 1,
 *     ikeIntegrityProtocol: "main",
 *     ikeRekeyInterval: 14400,
 *     ikeCiphersuite: "aes256-cbc-sha1",
 *     ikeDiffieHellmanGroup: "16",
 *     ikeIdLocalEndPoint: "xxx",
 *     ikeIdRemoteEndPoint: "xxx",
 *     ipsecRekeyInterval: 3600,
 *     ipsecReplayWindow: 512,
 *     ipsecCiphersuite: "aes256-gcm",
 *     perfectForwardSecrecy: "group-16",
 *     tunnelRouteVia: "2222",
 * });
 * ```
 *
 * ## Import
 *
 * Expected import identifier with the format: "transport_wan_vpn_interface_ipsec_feature_id,feature_profile_id,transport_wan_vpn_feature_id"
 *
 * ```sh
 * $ pulumi import sdwan:index/transportWanVpnInterfaceIpsecFeature:TransportWanVpnInterfaceIpsecFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037"
 * ```
 */
export class TransportWanVpnInterfaceIpsecFeature extends pulumi.CustomResource {
    /**
     * Get an existing TransportWanVpnInterfaceIpsecFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransportWanVpnInterfaceIpsecFeatureState, opts?: pulumi.CustomResourceOptions): TransportWanVpnInterfaceIpsecFeature {
        return new TransportWanVpnInterfaceIpsecFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/transportWanVpnInterfaceIpsecFeature:TransportWanVpnInterfaceIpsecFeature';

    /**
     * Returns true if the given object is an instance of TransportWanVpnInterfaceIpsecFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransportWanVpnInterfaceIpsecFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransportWanVpnInterfaceIpsecFeature.__pulumiType;
    }

    /**
     * Enable Application Tunnel Type - Choices: `none`, `sig`
     */
    public readonly applicationTunnelType!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly applicationTunnelTypeVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     */
    public readonly clearDontFragment!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly clearDontFragmentVariable!: pulumi.Output<string | undefined>;
    /**
     * The description of the Feature
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * IKE keepalive interval (seconds) - Range: `10`-`3600` - Default value: `10`
     */
    public readonly dpdInterval!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly dpdIntervalVariable!: pulumi.Output<string | undefined>;
    /**
     * IKE keepalive retries - Range: `2`-`60` - Default value: `3`
     */
    public readonly dpdRetries!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly dpdRetriesVariable!: pulumi.Output<string | undefined>;
    /**
     * Feature Profile ID
     */
    public readonly featureProfileId!: pulumi.Output<string>;
    /**
     * IKE identity the IKE preshared secret belongs to - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`,
     * `aes128-cbc-sha2` - Default value: `aes256-cbc-sha1`
     */
    public readonly ikeCiphersuite!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ikeCiphersuiteVariable!: pulumi.Output<string | undefined>;
    /**
     * IKE Diffie Hellman Groups - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24` - Default value: `16`
     */
    public readonly ikeDiffieHellmanGroup!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ikeDiffieHellmanGroupVariable!: pulumi.Output<string | undefined>;
    /**
     * IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
     */
    public readonly ikeIdLocalEndPoint!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ikeIdLocalEndPointVariable!: pulumi.Output<string | undefined>;
    /**
     * IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
     */
    public readonly ikeIdRemoteEndPoint!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ikeIdRemoteEndPointVariable!: pulumi.Output<string | undefined>;
    /**
     * IKE integrity protocol - Choices: `main`, `aggressive` - Default value: `main`
     */
    public readonly ikeIntegrityProtocol!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ikeIntegrityProtocolVariable!: pulumi.Output<string | undefined>;
    /**
     * Use preshared key to authenticate IKE peer
     */
    public readonly ikePresharedKey!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ikePresharedKeyVariable!: pulumi.Output<string | undefined>;
    /**
     * IKE rekey interval <60..86400> seconds - Range: `60`-`86400` - Default value: `14400`
     */
    public readonly ikeRekeyInterval!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly ikeRekeyIntervalVariable!: pulumi.Output<string | undefined>;
    /**
     * IKE Version <1..2> - Range: `1`-`2` - Default value: `1`
     */
    public readonly ikeVersion!: pulumi.Output<number | undefined>;
    /**
     * Interface description
     */
    public readonly interfaceDescription!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly interfaceDescriptionVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface name: IPsec when present
     */
    public readonly interfaceName!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly interfaceNameVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface MTU <68..9216>, in bytes - Range: `68`-`9216` - Default value: `1500`
     */
    public readonly ipMtu!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly ipMtuVariable!: pulumi.Output<string | undefined>;
    /**
     * IPsec(ESP) encryption and integrity protocol - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`,
     * `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512` - Default value:
     * `aes256-gcm`
     */
    public readonly ipsecCiphersuite!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipsecCiphersuiteVariable!: pulumi.Output<string | undefined>;
    /**
     * IPsec rekey interval <300..1209600> seconds - Range: `120`-`2592000` - Default value: `3600`
     */
    public readonly ipsecRekeyInterval!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly ipsecRekeyIntervalVariable!: pulumi.Output<string | undefined>;
    /**
     * Replay window size 32..8192 (must be a power of 2) - Range: `64`-`4096` - Default value: `512`
     */
    public readonly ipsecReplayWindow!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly ipsecReplayWindowVariable!: pulumi.Output<string | undefined>;
    public readonly ipv4Address!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipv4AddressVariable!: pulumi.Output<string | undefined>;
    /**
     * - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    public readonly ipv4SubnetMask!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipv4SubnetMaskVariable!: pulumi.Output<string | undefined>;
    /**
     * The name of the Feature
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * IPsec perfect forward secrecy settings - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`,
     * `group-19`, `group-20`, `group-21`, `group-24`, `none` - Default value: `group-16`
     */
    public readonly perfectForwardSecrecy!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly perfectForwardSecrecyVariable!: pulumi.Output<string | undefined>;
    /**
     * Administrative state - Default value: `true`
     */
    public readonly shutdown!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly shutdownVariable!: pulumi.Output<string | undefined>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    public readonly tcpMss!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tcpMssVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable tracker for this interface
     */
    public readonly trackerId!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly trackerIdVariable!: pulumi.Output<string | undefined>;
    /**
     * Transport WAN VPN Feature ID
     */
    public readonly transportWanVpnFeatureId!: pulumi.Output<string | undefined>;
    public readonly tunnelDestinationIpv4Address!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelDestinationIpv4AddressVariable!: pulumi.Output<string | undefined>;
    /**
     * - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    public readonly tunnelDestinationIpv4SubnetMask!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelDestinationIpv4SubnetMaskVariable!: pulumi.Output<string | undefined>;
    /**
     * <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
     */
    public readonly tunnelRouteVia!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelRouteViaVariable!: pulumi.Output<string | undefined>;
    /**
     * <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
     */
    public readonly tunnelSourceInterface!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelSourceInterfaceVariable!: pulumi.Output<string | undefined>;
    public readonly tunnelSourceIpv4Address!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelSourceIpv4AddressVariable!: pulumi.Output<string | undefined>;
    /**
     * - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    public readonly tunnelSourceIpv4SubnetMask!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelSourceIpv4SubnetMaskVariable!: pulumi.Output<string | undefined>;
    /**
     * The version of the Feature
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a TransportWanVpnInterfaceIpsecFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransportWanVpnInterfaceIpsecFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransportWanVpnInterfaceIpsecFeatureArgs | TransportWanVpnInterfaceIpsecFeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransportWanVpnInterfaceIpsecFeatureState | undefined;
            resourceInputs["applicationTunnelType"] = state ? state.applicationTunnelType : undefined;
            resourceInputs["applicationTunnelTypeVariable"] = state ? state.applicationTunnelTypeVariable : undefined;
            resourceInputs["clearDontFragment"] = state ? state.clearDontFragment : undefined;
            resourceInputs["clearDontFragmentVariable"] = state ? state.clearDontFragmentVariable : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dpdInterval"] = state ? state.dpdInterval : undefined;
            resourceInputs["dpdIntervalVariable"] = state ? state.dpdIntervalVariable : undefined;
            resourceInputs["dpdRetries"] = state ? state.dpdRetries : undefined;
            resourceInputs["dpdRetriesVariable"] = state ? state.dpdRetriesVariable : undefined;
            resourceInputs["featureProfileId"] = state ? state.featureProfileId : undefined;
            resourceInputs["ikeCiphersuite"] = state ? state.ikeCiphersuite : undefined;
            resourceInputs["ikeCiphersuiteVariable"] = state ? state.ikeCiphersuiteVariable : undefined;
            resourceInputs["ikeDiffieHellmanGroup"] = state ? state.ikeDiffieHellmanGroup : undefined;
            resourceInputs["ikeDiffieHellmanGroupVariable"] = state ? state.ikeDiffieHellmanGroupVariable : undefined;
            resourceInputs["ikeIdLocalEndPoint"] = state ? state.ikeIdLocalEndPoint : undefined;
            resourceInputs["ikeIdLocalEndPointVariable"] = state ? state.ikeIdLocalEndPointVariable : undefined;
            resourceInputs["ikeIdRemoteEndPoint"] = state ? state.ikeIdRemoteEndPoint : undefined;
            resourceInputs["ikeIdRemoteEndPointVariable"] = state ? state.ikeIdRemoteEndPointVariable : undefined;
            resourceInputs["ikeIntegrityProtocol"] = state ? state.ikeIntegrityProtocol : undefined;
            resourceInputs["ikeIntegrityProtocolVariable"] = state ? state.ikeIntegrityProtocolVariable : undefined;
            resourceInputs["ikePresharedKey"] = state ? state.ikePresharedKey : undefined;
            resourceInputs["ikePresharedKeyVariable"] = state ? state.ikePresharedKeyVariable : undefined;
            resourceInputs["ikeRekeyInterval"] = state ? state.ikeRekeyInterval : undefined;
            resourceInputs["ikeRekeyIntervalVariable"] = state ? state.ikeRekeyIntervalVariable : undefined;
            resourceInputs["ikeVersion"] = state ? state.ikeVersion : undefined;
            resourceInputs["interfaceDescription"] = state ? state.interfaceDescription : undefined;
            resourceInputs["interfaceDescriptionVariable"] = state ? state.interfaceDescriptionVariable : undefined;
            resourceInputs["interfaceName"] = state ? state.interfaceName : undefined;
            resourceInputs["interfaceNameVariable"] = state ? state.interfaceNameVariable : undefined;
            resourceInputs["ipMtu"] = state ? state.ipMtu : undefined;
            resourceInputs["ipMtuVariable"] = state ? state.ipMtuVariable : undefined;
            resourceInputs["ipsecCiphersuite"] = state ? state.ipsecCiphersuite : undefined;
            resourceInputs["ipsecCiphersuiteVariable"] = state ? state.ipsecCiphersuiteVariable : undefined;
            resourceInputs["ipsecRekeyInterval"] = state ? state.ipsecRekeyInterval : undefined;
            resourceInputs["ipsecRekeyIntervalVariable"] = state ? state.ipsecRekeyIntervalVariable : undefined;
            resourceInputs["ipsecReplayWindow"] = state ? state.ipsecReplayWindow : undefined;
            resourceInputs["ipsecReplayWindowVariable"] = state ? state.ipsecReplayWindowVariable : undefined;
            resourceInputs["ipv4Address"] = state ? state.ipv4Address : undefined;
            resourceInputs["ipv4AddressVariable"] = state ? state.ipv4AddressVariable : undefined;
            resourceInputs["ipv4SubnetMask"] = state ? state.ipv4SubnetMask : undefined;
            resourceInputs["ipv4SubnetMaskVariable"] = state ? state.ipv4SubnetMaskVariable : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["perfectForwardSecrecy"] = state ? state.perfectForwardSecrecy : undefined;
            resourceInputs["perfectForwardSecrecyVariable"] = state ? state.perfectForwardSecrecyVariable : undefined;
            resourceInputs["shutdown"] = state ? state.shutdown : undefined;
            resourceInputs["shutdownVariable"] = state ? state.shutdownVariable : undefined;
            resourceInputs["tcpMss"] = state ? state.tcpMss : undefined;
            resourceInputs["tcpMssVariable"] = state ? state.tcpMssVariable : undefined;
            resourceInputs["trackerId"] = state ? state.trackerId : undefined;
            resourceInputs["trackerIdVariable"] = state ? state.trackerIdVariable : undefined;
            resourceInputs["transportWanVpnFeatureId"] = state ? state.transportWanVpnFeatureId : undefined;
            resourceInputs["tunnelDestinationIpv4Address"] = state ? state.tunnelDestinationIpv4Address : undefined;
            resourceInputs["tunnelDestinationIpv4AddressVariable"] = state ? state.tunnelDestinationIpv4AddressVariable : undefined;
            resourceInputs["tunnelDestinationIpv4SubnetMask"] = state ? state.tunnelDestinationIpv4SubnetMask : undefined;
            resourceInputs["tunnelDestinationIpv4SubnetMaskVariable"] = state ? state.tunnelDestinationIpv4SubnetMaskVariable : undefined;
            resourceInputs["tunnelRouteVia"] = state ? state.tunnelRouteVia : undefined;
            resourceInputs["tunnelRouteViaVariable"] = state ? state.tunnelRouteViaVariable : undefined;
            resourceInputs["tunnelSourceInterface"] = state ? state.tunnelSourceInterface : undefined;
            resourceInputs["tunnelSourceInterfaceVariable"] = state ? state.tunnelSourceInterfaceVariable : undefined;
            resourceInputs["tunnelSourceIpv4Address"] = state ? state.tunnelSourceIpv4Address : undefined;
            resourceInputs["tunnelSourceIpv4AddressVariable"] = state ? state.tunnelSourceIpv4AddressVariable : undefined;
            resourceInputs["tunnelSourceIpv4SubnetMask"] = state ? state.tunnelSourceIpv4SubnetMask : undefined;
            resourceInputs["tunnelSourceIpv4SubnetMaskVariable"] = state ? state.tunnelSourceIpv4SubnetMaskVariable : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as TransportWanVpnInterfaceIpsecFeatureArgs | undefined;
            if ((!args || args.featureProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'featureProfileId'");
            }
            resourceInputs["applicationTunnelType"] = args ? args.applicationTunnelType : undefined;
            resourceInputs["applicationTunnelTypeVariable"] = args ? args.applicationTunnelTypeVariable : undefined;
            resourceInputs["clearDontFragment"] = args ? args.clearDontFragment : undefined;
            resourceInputs["clearDontFragmentVariable"] = args ? args.clearDontFragmentVariable : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dpdInterval"] = args ? args.dpdInterval : undefined;
            resourceInputs["dpdIntervalVariable"] = args ? args.dpdIntervalVariable : undefined;
            resourceInputs["dpdRetries"] = args ? args.dpdRetries : undefined;
            resourceInputs["dpdRetriesVariable"] = args ? args.dpdRetriesVariable : undefined;
            resourceInputs["featureProfileId"] = args ? args.featureProfileId : undefined;
            resourceInputs["ikeCiphersuite"] = args ? args.ikeCiphersuite : undefined;
            resourceInputs["ikeCiphersuiteVariable"] = args ? args.ikeCiphersuiteVariable : undefined;
            resourceInputs["ikeDiffieHellmanGroup"] = args ? args.ikeDiffieHellmanGroup : undefined;
            resourceInputs["ikeDiffieHellmanGroupVariable"] = args ? args.ikeDiffieHellmanGroupVariable : undefined;
            resourceInputs["ikeIdLocalEndPoint"] = args ? args.ikeIdLocalEndPoint : undefined;
            resourceInputs["ikeIdLocalEndPointVariable"] = args ? args.ikeIdLocalEndPointVariable : undefined;
            resourceInputs["ikeIdRemoteEndPoint"] = args ? args.ikeIdRemoteEndPoint : undefined;
            resourceInputs["ikeIdRemoteEndPointVariable"] = args ? args.ikeIdRemoteEndPointVariable : undefined;
            resourceInputs["ikeIntegrityProtocol"] = args ? args.ikeIntegrityProtocol : undefined;
            resourceInputs["ikeIntegrityProtocolVariable"] = args ? args.ikeIntegrityProtocolVariable : undefined;
            resourceInputs["ikePresharedKey"] = args ? args.ikePresharedKey : undefined;
            resourceInputs["ikePresharedKeyVariable"] = args ? args.ikePresharedKeyVariable : undefined;
            resourceInputs["ikeRekeyInterval"] = args ? args.ikeRekeyInterval : undefined;
            resourceInputs["ikeRekeyIntervalVariable"] = args ? args.ikeRekeyIntervalVariable : undefined;
            resourceInputs["ikeVersion"] = args ? args.ikeVersion : undefined;
            resourceInputs["interfaceDescription"] = args ? args.interfaceDescription : undefined;
            resourceInputs["interfaceDescriptionVariable"] = args ? args.interfaceDescriptionVariable : undefined;
            resourceInputs["interfaceName"] = args ? args.interfaceName : undefined;
            resourceInputs["interfaceNameVariable"] = args ? args.interfaceNameVariable : undefined;
            resourceInputs["ipMtu"] = args ? args.ipMtu : undefined;
            resourceInputs["ipMtuVariable"] = args ? args.ipMtuVariable : undefined;
            resourceInputs["ipsecCiphersuite"] = args ? args.ipsecCiphersuite : undefined;
            resourceInputs["ipsecCiphersuiteVariable"] = args ? args.ipsecCiphersuiteVariable : undefined;
            resourceInputs["ipsecRekeyInterval"] = args ? args.ipsecRekeyInterval : undefined;
            resourceInputs["ipsecRekeyIntervalVariable"] = args ? args.ipsecRekeyIntervalVariable : undefined;
            resourceInputs["ipsecReplayWindow"] = args ? args.ipsecReplayWindow : undefined;
            resourceInputs["ipsecReplayWindowVariable"] = args ? args.ipsecReplayWindowVariable : undefined;
            resourceInputs["ipv4Address"] = args ? args.ipv4Address : undefined;
            resourceInputs["ipv4AddressVariable"] = args ? args.ipv4AddressVariable : undefined;
            resourceInputs["ipv4SubnetMask"] = args ? args.ipv4SubnetMask : undefined;
            resourceInputs["ipv4SubnetMaskVariable"] = args ? args.ipv4SubnetMaskVariable : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["perfectForwardSecrecy"] = args ? args.perfectForwardSecrecy : undefined;
            resourceInputs["perfectForwardSecrecyVariable"] = args ? args.perfectForwardSecrecyVariable : undefined;
            resourceInputs["shutdown"] = args ? args.shutdown : undefined;
            resourceInputs["shutdownVariable"] = args ? args.shutdownVariable : undefined;
            resourceInputs["tcpMss"] = args ? args.tcpMss : undefined;
            resourceInputs["tcpMssVariable"] = args ? args.tcpMssVariable : undefined;
            resourceInputs["trackerId"] = args ? args.trackerId : undefined;
            resourceInputs["trackerIdVariable"] = args ? args.trackerIdVariable : undefined;
            resourceInputs["transportWanVpnFeatureId"] = args ? args.transportWanVpnFeatureId : undefined;
            resourceInputs["tunnelDestinationIpv4Address"] = args ? args.tunnelDestinationIpv4Address : undefined;
            resourceInputs["tunnelDestinationIpv4AddressVariable"] = args ? args.tunnelDestinationIpv4AddressVariable : undefined;
            resourceInputs["tunnelDestinationIpv4SubnetMask"] = args ? args.tunnelDestinationIpv4SubnetMask : undefined;
            resourceInputs["tunnelDestinationIpv4SubnetMaskVariable"] = args ? args.tunnelDestinationIpv4SubnetMaskVariable : undefined;
            resourceInputs["tunnelRouteVia"] = args ? args.tunnelRouteVia : undefined;
            resourceInputs["tunnelRouteViaVariable"] = args ? args.tunnelRouteViaVariable : undefined;
            resourceInputs["tunnelSourceInterface"] = args ? args.tunnelSourceInterface : undefined;
            resourceInputs["tunnelSourceInterfaceVariable"] = args ? args.tunnelSourceInterfaceVariable : undefined;
            resourceInputs["tunnelSourceIpv4Address"] = args ? args.tunnelSourceIpv4Address : undefined;
            resourceInputs["tunnelSourceIpv4AddressVariable"] = args ? args.tunnelSourceIpv4AddressVariable : undefined;
            resourceInputs["tunnelSourceIpv4SubnetMask"] = args ? args.tunnelSourceIpv4SubnetMask : undefined;
            resourceInputs["tunnelSourceIpv4SubnetMaskVariable"] = args ? args.tunnelSourceIpv4SubnetMaskVariable : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransportWanVpnInterfaceIpsecFeature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TransportWanVpnInterfaceIpsecFeature resources.
 */
export interface TransportWanVpnInterfaceIpsecFeatureState {
    /**
     * Enable Application Tunnel Type - Choices: `none`, `sig`
     */
    applicationTunnelType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    applicationTunnelTypeVariable?: pulumi.Input<string>;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     */
    clearDontFragment?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    clearDontFragmentVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * IKE keepalive interval (seconds) - Range: `10`-`3600` - Default value: `10`
     */
    dpdInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    dpdIntervalVariable?: pulumi.Input<string>;
    /**
     * IKE keepalive retries - Range: `2`-`60` - Default value: `3`
     */
    dpdRetries?: pulumi.Input<number>;
    /**
     * Variable name
     */
    dpdRetriesVariable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * IKE identity the IKE preshared secret belongs to - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`,
     * `aes128-cbc-sha2` - Default value: `aes256-cbc-sha1`
     */
    ikeCiphersuite?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeCiphersuiteVariable?: pulumi.Input<string>;
    /**
     * IKE Diffie Hellman Groups - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24` - Default value: `16`
     */
    ikeDiffieHellmanGroup?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeDiffieHellmanGroupVariable?: pulumi.Input<string>;
    /**
     * IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
     */
    ikeIdLocalEndPoint?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeIdLocalEndPointVariable?: pulumi.Input<string>;
    /**
     * IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
     */
    ikeIdRemoteEndPoint?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeIdRemoteEndPointVariable?: pulumi.Input<string>;
    /**
     * IKE integrity protocol - Choices: `main`, `aggressive` - Default value: `main`
     */
    ikeIntegrityProtocol?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeIntegrityProtocolVariable?: pulumi.Input<string>;
    /**
     * Use preshared key to authenticate IKE peer
     */
    ikePresharedKey?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikePresharedKeyVariable?: pulumi.Input<string>;
    /**
     * IKE rekey interval <60..86400> seconds - Range: `60`-`86400` - Default value: `14400`
     */
    ikeRekeyInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ikeRekeyIntervalVariable?: pulumi.Input<string>;
    /**
     * IKE Version <1..2> - Range: `1`-`2` - Default value: `1`
     */
    ikeVersion?: pulumi.Input<number>;
    /**
     * Interface description
     */
    interfaceDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceDescriptionVariable?: pulumi.Input<string>;
    /**
     * Interface name: IPsec when present
     */
    interfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceNameVariable?: pulumi.Input<string>;
    /**
     * Interface MTU <68..9216>, in bytes - Range: `68`-`9216` - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * IPsec(ESP) encryption and integrity protocol - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`,
     * `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512` - Default value:
     * `aes256-gcm`
     */
    ipsecCiphersuite?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipsecCiphersuiteVariable?: pulumi.Input<string>;
    /**
     * IPsec rekey interval <300..1209600> seconds - Range: `120`-`2592000` - Default value: `3600`
     */
    ipsecRekeyInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipsecRekeyIntervalVariable?: pulumi.Input<string>;
    /**
     * Replay window size 32..8192 (must be a power of 2) - Range: `64`-`4096` - Default value: `512`
     */
    ipsecReplayWindow?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipsecReplayWindowVariable?: pulumi.Input<string>;
    ipv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4AddressVariable?: pulumi.Input<string>;
    /**
     * - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    ipv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * IPsec perfect forward secrecy settings - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`,
     * `group-19`, `group-20`, `group-21`, `group-24`, `none` - Default value: `group-16`
     */
    perfectForwardSecrecy?: pulumi.Input<string>;
    /**
     * Variable name
     */
    perfectForwardSecrecyVariable?: pulumi.Input<string>;
    /**
     * Administrative state - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    tcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssVariable?: pulumi.Input<string>;
    /**
     * Enable tracker for this interface
     */
    trackerId?: pulumi.Input<string>;
    /**
     * Variable name
     */
    trackerIdVariable?: pulumi.Input<string>;
    /**
     * Transport WAN VPN Feature ID
     */
    transportWanVpnFeatureId?: pulumi.Input<string>;
    tunnelDestinationIpv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelDestinationIpv4AddressVariable?: pulumi.Input<string>;
    /**
     * - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    tunnelDestinationIpv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelDestinationIpv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
     */
    tunnelRouteVia?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelRouteViaVariable?: pulumi.Input<string>;
    /**
     * <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
     */
    tunnelSourceInterface?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelSourceInterfaceVariable?: pulumi.Input<string>;
    tunnelSourceIpv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelSourceIpv4AddressVariable?: pulumi.Input<string>;
    /**
     * - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    tunnelSourceIpv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelSourceIpv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * The version of the Feature
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a TransportWanVpnInterfaceIpsecFeature resource.
 */
export interface TransportWanVpnInterfaceIpsecFeatureArgs {
    /**
     * Enable Application Tunnel Type - Choices: `none`, `sig`
     */
    applicationTunnelType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    applicationTunnelTypeVariable?: pulumi.Input<string>;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     */
    clearDontFragment?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    clearDontFragmentVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * IKE keepalive interval (seconds) - Range: `10`-`3600` - Default value: `10`
     */
    dpdInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    dpdIntervalVariable?: pulumi.Input<string>;
    /**
     * IKE keepalive retries - Range: `2`-`60` - Default value: `3`
     */
    dpdRetries?: pulumi.Input<number>;
    /**
     * Variable name
     */
    dpdRetriesVariable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * IKE identity the IKE preshared secret belongs to - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`,
     * `aes128-cbc-sha2` - Default value: `aes256-cbc-sha1`
     */
    ikeCiphersuite?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeCiphersuiteVariable?: pulumi.Input<string>;
    /**
     * IKE Diffie Hellman Groups - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24` - Default value: `16`
     */
    ikeDiffieHellmanGroup?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeDiffieHellmanGroupVariable?: pulumi.Input<string>;
    /**
     * IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
     */
    ikeIdLocalEndPoint?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeIdLocalEndPointVariable?: pulumi.Input<string>;
    /**
     * IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
     */
    ikeIdRemoteEndPoint?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeIdRemoteEndPointVariable?: pulumi.Input<string>;
    /**
     * IKE integrity protocol - Choices: `main`, `aggressive` - Default value: `main`
     */
    ikeIntegrityProtocol?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikeIntegrityProtocolVariable?: pulumi.Input<string>;
    /**
     * Use preshared key to authenticate IKE peer
     */
    ikePresharedKey?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ikePresharedKeyVariable?: pulumi.Input<string>;
    /**
     * IKE rekey interval <60..86400> seconds - Range: `60`-`86400` - Default value: `14400`
     */
    ikeRekeyInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ikeRekeyIntervalVariable?: pulumi.Input<string>;
    /**
     * IKE Version <1..2> - Range: `1`-`2` - Default value: `1`
     */
    ikeVersion?: pulumi.Input<number>;
    /**
     * Interface description
     */
    interfaceDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceDescriptionVariable?: pulumi.Input<string>;
    /**
     * Interface name: IPsec when present
     */
    interfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceNameVariable?: pulumi.Input<string>;
    /**
     * Interface MTU <68..9216>, in bytes - Range: `68`-`9216` - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * IPsec(ESP) encryption and integrity protocol - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`,
     * `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512` - Default value:
     * `aes256-gcm`
     */
    ipsecCiphersuite?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipsecCiphersuiteVariable?: pulumi.Input<string>;
    /**
     * IPsec rekey interval <300..1209600> seconds - Range: `120`-`2592000` - Default value: `3600`
     */
    ipsecRekeyInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipsecRekeyIntervalVariable?: pulumi.Input<string>;
    /**
     * Replay window size 32..8192 (must be a power of 2) - Range: `64`-`4096` - Default value: `512`
     */
    ipsecReplayWindow?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipsecReplayWindowVariable?: pulumi.Input<string>;
    ipv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4AddressVariable?: pulumi.Input<string>;
    /**
     * - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    ipv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * IPsec perfect forward secrecy settings - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`,
     * `group-19`, `group-20`, `group-21`, `group-24`, `none` - Default value: `group-16`
     */
    perfectForwardSecrecy?: pulumi.Input<string>;
    /**
     * Variable name
     */
    perfectForwardSecrecyVariable?: pulumi.Input<string>;
    /**
     * Administrative state - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    tcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssVariable?: pulumi.Input<string>;
    /**
     * Enable tracker for this interface
     */
    trackerId?: pulumi.Input<string>;
    /**
     * Variable name
     */
    trackerIdVariable?: pulumi.Input<string>;
    /**
     * Transport WAN VPN Feature ID
     */
    transportWanVpnFeatureId?: pulumi.Input<string>;
    tunnelDestinationIpv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelDestinationIpv4AddressVariable?: pulumi.Input<string>;
    /**
     * - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    tunnelDestinationIpv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelDestinationIpv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
     */
    tunnelRouteVia?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelRouteViaVariable?: pulumi.Input<string>;
    /**
     * <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
     */
    tunnelSourceInterface?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelSourceInterfaceVariable?: pulumi.Input<string>;
    tunnelSourceIpv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelSourceIpv4AddressVariable?: pulumi.Input<string>;
    /**
     * - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    tunnelSourceIpv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelSourceIpv4SubnetMaskVariable?: pulumi.Input<string>;
}
