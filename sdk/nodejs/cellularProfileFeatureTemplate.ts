// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource can manage a Cellular Profile feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = new sdwan.CellularProfileFeatureTemplate("example", {
 *     name: "Example",
 *     description: "My Example",
 *     deviceTypes: ["vedge-C8000V"],
 *     ifName: "Ethernet1",
 *     profileId: 1,
 *     accessPointName: "APN1",
 *     authenticationType: "CHAP",
 *     ipAddress: "1.2.3.4",
 *     profileName: "PROFILE1",
 *     packetDataNetworkType: "ipv4",
 *     profileUsername: "MyUsername",
 *     profilePassword: "MyPassword",
 *     primaryDnsAddress: "1.2.3.4",
 *     secondaryDnsAddress: "1.2.3.5",
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import sdwan:index/cellularProfileFeatureTemplate:CellularProfileFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class CellularProfileFeatureTemplate extends pulumi.CustomResource {
    /**
     * Get an existing CellularProfileFeatureTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CellularProfileFeatureTemplateState, opts?: pulumi.CustomResourceOptions): CellularProfileFeatureTemplate {
        return new CellularProfileFeatureTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/cellularProfileFeatureTemplate:CellularProfileFeatureTemplate';

    /**
     * Returns true if the given object is an instance of CellularProfileFeatureTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CellularProfileFeatureTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CellularProfileFeatureTemplate.__pulumiType;
    }

    /**
     * Set access point name
     */
    declare public readonly accessPointName: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly accessPointNameVariable: pulumi.Output<string | undefined>;
    /**
     * Set authentication type
     *   - Choices: `None`, `PAP`, `CHAP`, `PAP/CHAP`
     *   - Default value: `None`
     */
    declare public readonly authenticationType: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly authenticationTypeVariable: pulumi.Output<string | undefined>;
    /**
     * The description of the feature template
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    declare public readonly deviceTypes: pulumi.Output<string[]>;
    /**
     * Set interface name
     */
    declare public readonly ifName: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ifNameVariable: pulumi.Output<string | undefined>;
    /**
     * Set IP address
     */
    declare public readonly ipAddress: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipAddressVariable: pulumi.Output<string | undefined>;
    /**
     * The name of the feature template
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Set packet data network type
     *   - Choices: `ipv4`, `ipv6`, `ipv46`
     */
    declare public readonly packetDataNetworkType: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly packetDataNetworkTypeVariable: pulumi.Output<string | undefined>;
    /**
     * Set the address of the primary DNS server
     */
    declare public readonly primaryDnsAddress: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly primaryDnsAddressVariable: pulumi.Output<string | undefined>;
    /**
     * Set Profile ID
     *   - Range: `1`-`16`
     */
    declare public readonly profileId: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly profileIdVariable: pulumi.Output<string | undefined>;
    /**
     * Set profile name
     */
    declare public readonly profileName: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly profileNameVariable: pulumi.Output<string | undefined>;
    /**
     * Set the profile password
     */
    declare public readonly profilePassword: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly profilePasswordVariable: pulumi.Output<string | undefined>;
    /**
     * Set the profile username
     */
    declare public readonly profileUsername: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly profileUsernameVariable: pulumi.Output<string | undefined>;
    /**
     * Set the address of the secondary DNS server
     */
    declare public readonly secondaryDnsAddress: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly secondaryDnsAddressVariable: pulumi.Output<string | undefined>;
    /**
     * The template type
     */
    declare public /*out*/ readonly templateType: pulumi.Output<string>;
    /**
     * The version of the feature template
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;

    /**
     * Create a CellularProfileFeatureTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CellularProfileFeatureTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CellularProfileFeatureTemplateArgs | CellularProfileFeatureTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CellularProfileFeatureTemplateState | undefined;
            resourceInputs["accessPointName"] = state?.accessPointName;
            resourceInputs["accessPointNameVariable"] = state?.accessPointNameVariable;
            resourceInputs["authenticationType"] = state?.authenticationType;
            resourceInputs["authenticationTypeVariable"] = state?.authenticationTypeVariable;
            resourceInputs["description"] = state?.description;
            resourceInputs["deviceTypes"] = state?.deviceTypes;
            resourceInputs["ifName"] = state?.ifName;
            resourceInputs["ifNameVariable"] = state?.ifNameVariable;
            resourceInputs["ipAddress"] = state?.ipAddress;
            resourceInputs["ipAddressVariable"] = state?.ipAddressVariable;
            resourceInputs["name"] = state?.name;
            resourceInputs["packetDataNetworkType"] = state?.packetDataNetworkType;
            resourceInputs["packetDataNetworkTypeVariable"] = state?.packetDataNetworkTypeVariable;
            resourceInputs["primaryDnsAddress"] = state?.primaryDnsAddress;
            resourceInputs["primaryDnsAddressVariable"] = state?.primaryDnsAddressVariable;
            resourceInputs["profileId"] = state?.profileId;
            resourceInputs["profileIdVariable"] = state?.profileIdVariable;
            resourceInputs["profileName"] = state?.profileName;
            resourceInputs["profileNameVariable"] = state?.profileNameVariable;
            resourceInputs["profilePassword"] = state?.profilePassword;
            resourceInputs["profilePasswordVariable"] = state?.profilePasswordVariable;
            resourceInputs["profileUsername"] = state?.profileUsername;
            resourceInputs["profileUsernameVariable"] = state?.profileUsernameVariable;
            resourceInputs["secondaryDnsAddress"] = state?.secondaryDnsAddress;
            resourceInputs["secondaryDnsAddressVariable"] = state?.secondaryDnsAddressVariable;
            resourceInputs["templateType"] = state?.templateType;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as CellularProfileFeatureTemplateArgs | undefined;
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if (args?.deviceTypes === undefined && !opts.urn) {
                throw new Error("Missing required property 'deviceTypes'");
            }
            resourceInputs["accessPointName"] = args?.accessPointName;
            resourceInputs["accessPointNameVariable"] = args?.accessPointNameVariable;
            resourceInputs["authenticationType"] = args?.authenticationType;
            resourceInputs["authenticationTypeVariable"] = args?.authenticationTypeVariable;
            resourceInputs["description"] = args?.description;
            resourceInputs["deviceTypes"] = args?.deviceTypes;
            resourceInputs["ifName"] = args?.ifName;
            resourceInputs["ifNameVariable"] = args?.ifNameVariable;
            resourceInputs["ipAddress"] = args?.ipAddress;
            resourceInputs["ipAddressVariable"] = args?.ipAddressVariable;
            resourceInputs["name"] = args?.name;
            resourceInputs["packetDataNetworkType"] = args?.packetDataNetworkType;
            resourceInputs["packetDataNetworkTypeVariable"] = args?.packetDataNetworkTypeVariable;
            resourceInputs["primaryDnsAddress"] = args?.primaryDnsAddress;
            resourceInputs["primaryDnsAddressVariable"] = args?.primaryDnsAddressVariable;
            resourceInputs["profileId"] = args?.profileId;
            resourceInputs["profileIdVariable"] = args?.profileIdVariable;
            resourceInputs["profileName"] = args?.profileName;
            resourceInputs["profileNameVariable"] = args?.profileNameVariable;
            resourceInputs["profilePassword"] = args?.profilePassword;
            resourceInputs["profilePasswordVariable"] = args?.profilePasswordVariable;
            resourceInputs["profileUsername"] = args?.profileUsername;
            resourceInputs["profileUsernameVariable"] = args?.profileUsernameVariable;
            resourceInputs["secondaryDnsAddress"] = args?.secondaryDnsAddress;
            resourceInputs["secondaryDnsAddressVariable"] = args?.secondaryDnsAddressVariable;
            resourceInputs["templateType"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CellularProfileFeatureTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CellularProfileFeatureTemplate resources.
 */
export interface CellularProfileFeatureTemplateState {
    /**
     * Set access point name
     */
    accessPointName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    accessPointNameVariable?: pulumi.Input<string>;
    /**
     * Set authentication type
     *   - Choices: `None`, `PAP`, `CHAP`, `PAP/CHAP`
     *   - Default value: `None`
     */
    authenticationType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    authenticationTypeVariable?: pulumi.Input<string>;
    /**
     * The description of the feature template
     */
    description?: pulumi.Input<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set interface name
     */
    ifName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ifNameVariable?: pulumi.Input<string>;
    /**
     * Set IP address
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipAddressVariable?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Set packet data network type
     *   - Choices: `ipv4`, `ipv6`, `ipv46`
     */
    packetDataNetworkType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    packetDataNetworkTypeVariable?: pulumi.Input<string>;
    /**
     * Set the address of the primary DNS server
     */
    primaryDnsAddress?: pulumi.Input<string>;
    /**
     * Variable name
     */
    primaryDnsAddressVariable?: pulumi.Input<string>;
    /**
     * Set Profile ID
     *   - Range: `1`-`16`
     */
    profileId?: pulumi.Input<number>;
    /**
     * Variable name
     */
    profileIdVariable?: pulumi.Input<string>;
    /**
     * Set profile name
     */
    profileName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    profileNameVariable?: pulumi.Input<string>;
    /**
     * Set the profile password
     */
    profilePassword?: pulumi.Input<string>;
    /**
     * Variable name
     */
    profilePasswordVariable?: pulumi.Input<string>;
    /**
     * Set the profile username
     */
    profileUsername?: pulumi.Input<string>;
    /**
     * Variable name
     */
    profileUsernameVariable?: pulumi.Input<string>;
    /**
     * Set the address of the secondary DNS server
     */
    secondaryDnsAddress?: pulumi.Input<string>;
    /**
     * Variable name
     */
    secondaryDnsAddressVariable?: pulumi.Input<string>;
    /**
     * The template type
     */
    templateType?: pulumi.Input<string>;
    /**
     * The version of the feature template
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CellularProfileFeatureTemplate resource.
 */
export interface CellularProfileFeatureTemplateArgs {
    /**
     * Set access point name
     */
    accessPointName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    accessPointNameVariable?: pulumi.Input<string>;
    /**
     * Set authentication type
     *   - Choices: `None`, `PAP`, `CHAP`, `PAP/CHAP`
     *   - Default value: `None`
     */
    authenticationType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    authenticationTypeVariable?: pulumi.Input<string>;
    /**
     * The description of the feature template
     */
    description: pulumi.Input<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set interface name
     */
    ifName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ifNameVariable?: pulumi.Input<string>;
    /**
     * Set IP address
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipAddressVariable?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Set packet data network type
     *   - Choices: `ipv4`, `ipv6`, `ipv46`
     */
    packetDataNetworkType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    packetDataNetworkTypeVariable?: pulumi.Input<string>;
    /**
     * Set the address of the primary DNS server
     */
    primaryDnsAddress?: pulumi.Input<string>;
    /**
     * Variable name
     */
    primaryDnsAddressVariable?: pulumi.Input<string>;
    /**
     * Set Profile ID
     *   - Range: `1`-`16`
     */
    profileId?: pulumi.Input<number>;
    /**
     * Variable name
     */
    profileIdVariable?: pulumi.Input<string>;
    /**
     * Set profile name
     */
    profileName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    profileNameVariable?: pulumi.Input<string>;
    /**
     * Set the profile password
     */
    profilePassword?: pulumi.Input<string>;
    /**
     * Variable name
     */
    profilePasswordVariable?: pulumi.Input<string>;
    /**
     * Set the profile username
     */
    profileUsername?: pulumi.Input<string>;
    /**
     * Variable name
     */
    profileUsernameVariable?: pulumi.Input<string>;
    /**
     * Set the address of the secondary DNS server
     */
    secondaryDnsAddress?: pulumi.Input<string>;
    /**
     * Variable name
     */
    secondaryDnsAddressVariable?: pulumi.Input<string>;
}
