// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource can manage a Advanced Inspection Profile Policy Definition .
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = new sdwan.AdvancedInspectionProfilePolicyDefinition("example", {
 *     name: "Example",
 *     description: "My description",
 *     tlsAction: "decrypt",
 *     urlFilteringId: "914670a3-9726-4a51-847f-b3db70819dc2",
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import sdwan:index/advancedInspectionProfilePolicyDefinition:AdvancedInspectionProfilePolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class AdvancedInspectionProfilePolicyDefinition extends pulumi.CustomResource {
    /**
     * Get an existing AdvancedInspectionProfilePolicyDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AdvancedInspectionProfilePolicyDefinitionState, opts?: pulumi.CustomResourceOptions): AdvancedInspectionProfilePolicyDefinition {
        return new AdvancedInspectionProfilePolicyDefinition(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/advancedInspectionProfilePolicyDefinition:AdvancedInspectionProfilePolicyDefinition';

    /**
     * Returns true if the given object is an instance of AdvancedInspectionProfilePolicyDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AdvancedInspectionProfilePolicyDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AdvancedInspectionProfilePolicyDefinition.__pulumiType;
    }

    /**
     * Advanced malware protection ID
     */
    public readonly advancedMalwareProtectionId!: pulumi.Output<string | undefined>;
    /**
     * Advanced malware protection version
     */
    public readonly advancedMalwareProtectionVersion!: pulumi.Output<number | undefined>;
    /**
     * The description of the policy definition.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Intrusion prevention ID (unified mode)
     */
    public readonly intrusionPreventionId!: pulumi.Output<string | undefined>;
    /**
     * Intrusion prevention version
     */
    public readonly intrusionPreventionVersion!: pulumi.Output<number | undefined>;
    /**
     * The name of the policy definition.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * TLS Action - Choices: `decrypt`, `skipDecrypt`, `doNotDecrypt`
     */
    public readonly tlsAction!: pulumi.Output<string | undefined>;
    /**
     * TLS/SSL decryption ID
     */
    public readonly tlsSslDecryptionId!: pulumi.Output<string | undefined>;
    /**
     * TLS/SSL decryption version
     */
    public readonly tlsSslDecryptionVersion!: pulumi.Output<number | undefined>;
    /**
     * URL filtering ID (unified mode)
     */
    public readonly urlFilteringId!: pulumi.Output<string | undefined>;
    /**
     * URL filtering version
     */
    public readonly urlFilteringVersion!: pulumi.Output<number | undefined>;
    /**
     * The version of the object
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a AdvancedInspectionProfilePolicyDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AdvancedInspectionProfilePolicyDefinitionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AdvancedInspectionProfilePolicyDefinitionArgs | AdvancedInspectionProfilePolicyDefinitionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AdvancedInspectionProfilePolicyDefinitionState | undefined;
            resourceInputs["advancedMalwareProtectionId"] = state ? state.advancedMalwareProtectionId : undefined;
            resourceInputs["advancedMalwareProtectionVersion"] = state ? state.advancedMalwareProtectionVersion : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["intrusionPreventionId"] = state ? state.intrusionPreventionId : undefined;
            resourceInputs["intrusionPreventionVersion"] = state ? state.intrusionPreventionVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tlsAction"] = state ? state.tlsAction : undefined;
            resourceInputs["tlsSslDecryptionId"] = state ? state.tlsSslDecryptionId : undefined;
            resourceInputs["tlsSslDecryptionVersion"] = state ? state.tlsSslDecryptionVersion : undefined;
            resourceInputs["urlFilteringId"] = state ? state.urlFilteringId : undefined;
            resourceInputs["urlFilteringVersion"] = state ? state.urlFilteringVersion : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as AdvancedInspectionProfilePolicyDefinitionArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            resourceInputs["advancedMalwareProtectionId"] = args ? args.advancedMalwareProtectionId : undefined;
            resourceInputs["advancedMalwareProtectionVersion"] = args ? args.advancedMalwareProtectionVersion : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["intrusionPreventionId"] = args ? args.intrusionPreventionId : undefined;
            resourceInputs["intrusionPreventionVersion"] = args ? args.intrusionPreventionVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tlsAction"] = args ? args.tlsAction : undefined;
            resourceInputs["tlsSslDecryptionId"] = args ? args.tlsSslDecryptionId : undefined;
            resourceInputs["tlsSslDecryptionVersion"] = args ? args.tlsSslDecryptionVersion : undefined;
            resourceInputs["urlFilteringId"] = args ? args.urlFilteringId : undefined;
            resourceInputs["urlFilteringVersion"] = args ? args.urlFilteringVersion : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AdvancedInspectionProfilePolicyDefinition.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AdvancedInspectionProfilePolicyDefinition resources.
 */
export interface AdvancedInspectionProfilePolicyDefinitionState {
    /**
     * Advanced malware protection ID
     */
    advancedMalwareProtectionId?: pulumi.Input<string>;
    /**
     * Advanced malware protection version
     */
    advancedMalwareProtectionVersion?: pulumi.Input<number>;
    /**
     * The description of the policy definition.
     */
    description?: pulumi.Input<string>;
    /**
     * Intrusion prevention ID (unified mode)
     */
    intrusionPreventionId?: pulumi.Input<string>;
    /**
     * Intrusion prevention version
     */
    intrusionPreventionVersion?: pulumi.Input<number>;
    /**
     * The name of the policy definition.
     */
    name?: pulumi.Input<string>;
    /**
     * TLS Action - Choices: `decrypt`, `skipDecrypt`, `doNotDecrypt`
     */
    tlsAction?: pulumi.Input<string>;
    /**
     * TLS/SSL decryption ID
     */
    tlsSslDecryptionId?: pulumi.Input<string>;
    /**
     * TLS/SSL decryption version
     */
    tlsSslDecryptionVersion?: pulumi.Input<number>;
    /**
     * URL filtering ID (unified mode)
     */
    urlFilteringId?: pulumi.Input<string>;
    /**
     * URL filtering version
     */
    urlFilteringVersion?: pulumi.Input<number>;
    /**
     * The version of the object
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AdvancedInspectionProfilePolicyDefinition resource.
 */
export interface AdvancedInspectionProfilePolicyDefinitionArgs {
    /**
     * Advanced malware protection ID
     */
    advancedMalwareProtectionId?: pulumi.Input<string>;
    /**
     * Advanced malware protection version
     */
    advancedMalwareProtectionVersion?: pulumi.Input<number>;
    /**
     * The description of the policy definition.
     */
    description: pulumi.Input<string>;
    /**
     * Intrusion prevention ID (unified mode)
     */
    intrusionPreventionId?: pulumi.Input<string>;
    /**
     * Intrusion prevention version
     */
    intrusionPreventionVersion?: pulumi.Input<number>;
    /**
     * The name of the policy definition.
     */
    name?: pulumi.Input<string>;
    /**
     * TLS Action - Choices: `decrypt`, `skipDecrypt`, `doNotDecrypt`
     */
    tlsAction?: pulumi.Input<string>;
    /**
     * TLS/SSL decryption ID
     */
    tlsSslDecryptionId?: pulumi.Input<string>;
    /**
     * TLS/SSL decryption version
     */
    tlsSslDecryptionVersion?: pulumi.Input<number>;
    /**
     * URL filtering ID (unified mode)
     */
    urlFilteringId?: pulumi.Input<string>;
    /**
     * URL filtering version
     */
    urlFilteringVersion?: pulumi.Input<number>;
}
