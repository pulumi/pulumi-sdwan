// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a System Basic Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Import
 *
 * Expected import identifier with the format: "system_basic_feature_id,feature_profile_id"
 *
 * ```sh
 * $ pulumi import sdwan:index/systemBasicFeature:SystemBasicFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
 * ```
 */
export class SystemBasicFeature extends pulumi.CustomResource {
    /**
     * Get an existing SystemBasicFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemBasicFeatureState, opts?: pulumi.CustomResourceOptions): SystemBasicFeature {
        return new SystemBasicFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/systemBasicFeature:SystemBasicFeature';

    /**
     * Returns true if the given object is an instance of SystemBasicFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemBasicFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemBasicFeature.__pulumiType;
    }

    /**
     * Collect admin-tech before reboot due to daemon failure - Default value: `true`
     */
    public readonly adminTechOnFailure!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly adminTechOnFailureVariable!: pulumi.Output<string | undefined>;
    /**
     * Affinity Group Number - Range: `1`-`63`
     */
    public readonly affinityGroupNumber!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly affinityGroupNumberVariable!: pulumi.Output<string | undefined>;
    /**
     * Affinity Group Preference
     */
    public readonly affinityGroupPreferences!: pulumi.Output<number[] | undefined>;
    /**
     * Variable name
     */
    public readonly affinityGroupPreferencesVariable!: pulumi.Output<string | undefined>;
    /**
     * Affinity Group Number for VRFs
     */
    public readonly affinityPerVrfs!: pulumi.Output<outputs.SystemBasicFeatureAffinityPerVrf[] | undefined>;
    /**
     * Affinity Group Preference Auto - Default value: `false`
     */
    public readonly affinityPreferenceAuto!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly affinityPreferenceAutoVariable!: pulumi.Output<string | undefined>;
    /**
     * Set a text description of the device
     */
    public readonly configDescription!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly configDescriptionVariable!: pulumi.Output<string | undefined>;
    /**
     * Set the console baud rate - Choices: `1200`, `2400`, `4800`, `9600`, `19200`, `38400`, `57600`, `115200` - Default
     * value: `9600`
     */
    public readonly consoleBaudRate!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly consoleBaudRateVariable!: pulumi.Output<string | undefined>;
    /**
     * Set the policer rate for control sessions - Range: `1`-`65535` - Default value: `300`
     */
    public readonly controlSessionPps!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly controlSessionPpsVariable!: pulumi.Output<string | undefined>;
    /**
     * Configure a list of comma-separated controller groups
     */
    public readonly controllerGroups!: pulumi.Output<number[] | undefined>;
    /**
     * Variable name
     */
    public readonly controllerGroupsVariable!: pulumi.Output<string | undefined>;
    /**
     * The description of the Feature
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Device groups
     */
    public readonly deviceGroups!: pulumi.Output<string[] | undefined>;
    /**
     * Variable name
     */
    public readonly deviceGroupsVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable SLA Dampening and Enhanced App Routing. - Choices: `disabled`, `aggressive`, `moderate`, `conservative` - Default
     * value: `disabled`
     */
    public readonly enhancedAppAwareRouting!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly enhancedAppAwareRoutingVariable!: pulumi.Output<string | undefined>;
    /**
     * Feature Profile ID
     */
    public readonly featureProfileId!: pulumi.Output<string | undefined>;
    /**
     * Enable Geo fencing - Default value: `false`
     */
    public readonly gpsGeoFencingEnable!: pulumi.Output<boolean | undefined>;
    /**
     * Set the device’s geo fencing range - Range: `100`-`10000` - Default value: `100`
     */
    public readonly gpsGeoFencingRange!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly gpsGeoFencingRangeVariable!: pulumi.Output<string | undefined>;
    /**
     * Set the device physical latitude - Range: `-90`-`90`
     */
    public readonly gpsLatitude!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly gpsLatitudeVariable!: pulumi.Output<string | undefined>;
    /**
     * Set the device physical longitude - Range: `-180`-`180`
     */
    public readonly gpsLongitude!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly gpsLongitudeVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable device’s geo fencing SMS - Default value: `false`
     */
    public readonly gpsSmsEnable!: pulumi.Output<boolean | undefined>;
    /**
     * Set device’s geo fencing SMS phone number
     */
    public readonly gpsSmsMobileNumbers!: pulumi.Output<outputs.SystemBasicFeatureGpsSmsMobileNumber[] | undefined>;
    /**
     * Idle CLI timeout in minutes - Range: `0`-`300`
     */
    public readonly idleTimeout!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly idleTimeoutVariable!: pulumi.Output<string | undefined>;
    /**
     * Set the location of the device
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly locationVariable!: pulumi.Output<string | undefined>;
    /**
     * Set the maximum number of OMP sessions <1..100> the device can have - Range: `1`-`100`
     */
    public readonly maxOmpSessions!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly maxOmpSessionsVariable!: pulumi.Output<string | undefined>;
    /**
     * Device is multi-tenant - Default value: `false`
     */
    public readonly multiTenant!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly multiTenantVariable!: pulumi.Output<string | undefined>;
    /**
     * The name of the Feature
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable or disable On-demand Tunnel - Default value: `false`
     */
    public readonly onDemandEnable!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly onDemandEnableVariable!: pulumi.Output<string | undefined>;
    /**
     * Set the idle timeout for on-demand tunnels - Range: `1`-`65535` - Default value: `10`
     */
    public readonly onDemandIdleTimeout!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly onDemandIdleTimeoutVariable!: pulumi.Output<string | undefined>;
    /**
     * Set the Overlay ID - Range: `1`-`4294967295` - Default value: `1`
     */
    public readonly overlayId!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly overlayIdVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable port hopping - Default value: `true`
     */
    public readonly portHopping!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly portHoppingVariable!: pulumi.Output<string | undefined>;
    /**
     * Set the TLOC port offset when multiple devices are behind a NAT - Range: `0`-`19` - Default value: `0`
     */
    public readonly portOffset!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly portOffsetVariable!: pulumi.Output<string | undefined>;
    /**
     * Site Type
     */
    public readonly siteTypes!: pulumi.Output<string[] | undefined>;
    /**
     * Variable name
     */
    public readonly siteTypesVariable!: pulumi.Output<string | undefined>;
    /**
     * Set the timezone - Choices: `Europe/Andorra`, `Asia/Dubai`, `Asia/Kabul`, `America/Antigua`, `America/Anguilla`,
     * `Europe/Tirane`, `Asia/Yerevan`, `Africa/Luanda`, `Antarctica/McMurdo`, `Antarctica/Rothera`, `Antarctica/Palmer`,
     * `Antarctica/Mawson`, `Antarctica/Davis`, `Antarctica/Casey`, `Antarctica/Vostok`, `Antarctica/DumontDUrville`,
     * `Antarctica/Syowa`, `America/Argentina/Buenos_Aires`, `America/Argentina/Cordoba`, `America/Argentina/Salta`,
     * `America/Argentina/Jujuy`, `America/Argentina/Tucuman`, `America/Argentina/Catamarca`, `America/Argentina/La_Rioja`,
     * `America/Argentina/San_Juan`, `America/Argentina/Mendoza`, `America/Argentina/San_Luis`,
     * `America/Argentina/Rio_Gallegos`, `America/Argentina/Ushuaia`, `Pacific/Pago_Pago`, `Europe/Vienna`,
     * `Australia/Lord_Howe`, `Antarctica/Macquarie`, `Australia/Hobart`, `Australia/Currie`, `Australia/Melbourne`,
     * `Australia/Sydney`, `Australia/Broken_Hill`, `Australia/Brisbane`, `Australia/Lindeman`, `Australia/Adelaide`,
     * `Australia/Darwin`, `Australia/Perth`, `Australia/Eucla`, `America/Aruba`, `Europe/Mariehamn`, `Asia/Baku`,
     * `Europe/Sarajevo`, `America/Barbados`, `Asia/Dhaka`, `Europe/Brussels`, `Africa/Ouagadougou`, `Europe/Sofia`,
     * `Asia/Bahrain`, `Africa/Bujumbura`, `Africa/Porto-Novo`, `America/St_Barthelemy`, `Atlantic/Bermuda`, `Asia/Brunei`,
     * `America/La_Paz`, `America/Kralendijk`, `America/Noronha`, `America/Belem`, `America/Fortaleza`, `America/Recife`,
     * `America/Araguaina`, `America/Maceio`, `America/Bahia`, `America/Sao_Paulo`, `America/Campo_Grande`, `America/Cuiaba`,
     * `America/Santarem`, `America/Porto_Velho`, `America/Boa_Vista`, `America/Manaus`, `America/Eirunepe`,
     * `America/Rio_Branco`, `America/Nassau`, `Asia/Thimphu`, `Africa/Gaborone`, `Europe/Minsk`, `America/Belize`,
     * `America/St_Johns`, `America/Halifax`, `America/Glace_Bay`, `America/Moncton`, `America/Goose_Bay`,
     * `America/Blanc-Sablon`, `America/Toronto`, `America/Nipigon`, `America/Thunder_Bay`, `America/Iqaluit`,
     * `America/Pangnirtung`, `America/Resolute`, `America/Atikokan`, `America/Rankin_Inlet`, `America/Winnipeg`,
     * `America/Rainy_River`, `America/Regina`, `America/Swift_Current`, `America/Edmonton`, `America/Cambridge_Bay`,
     * `America/Yellowknife`, `America/Inuvik`, `America/Creston`, `America/Dawson_Creek`, `America/Vancouver`,
     * `America/Whitehorse`, `America/Dawson`, `Indian/Cocos`, `Africa/Kinshasa`, `Africa/Lubumbashi`, `Africa/Bangui`,
     * `Africa/Brazzaville`, `Europe/Zurich`, `Africa/Abidjan`, `Pacific/Rarotonga`, `America/Santiago`, `Pacific/Easter`,
     * `Africa/Douala`, `Asia/Shanghai`, `Asia/Harbin`, `Asia/Chongqing`, `Asia/Urumqi`, `Asia/Kashgar`, `America/Bogota`,
     * `America/Costa_Rica`, `America/Havana`, `Atlantic/Cape_Verde`, `America/Curacao`, `Indian/Christmas`, `Asia/Nicosia`,
     * `Europe/Prague`, `Europe/Berlin`, `Europe/Busingen`, `Africa/Djibouti`, `Europe/Copenhagen`, `America/Dominica`,
     * `America/Santo_Domingo`, `Africa/Algiers`, `America/Guayaquil`, `Pacific/Galapagos`, `Europe/Tallinn`, `Africa/Cairo`,
     * `Africa/El_Aaiun`, `Africa/Asmara`, `Europe/Madrid`, `Africa/Ceuta`, `Atlantic/Canary`, `Africa/Addis_Ababa`,
     * `Europe/Helsinki`, `Pacific/Fiji`, `Atlantic/Stanley`, `Pacific/Chuuk`, `Pacific/Pohnpei`, `Pacific/Kosrae`,
     * `Atlantic/Faroe`, `Europe/Paris`, `Africa/Libreville`, `Europe/London`, `America/Grenada`, `Asia/Tbilisi`,
     * `America/Cayenne`, `Europe/Guernsey`, `Africa/Accra`, `Europe/Gibraltar`, `America/Godthab`, `America/Danmarkshavn`,
     * `America/Scoresbysund`, `America/Thule`, `Africa/Banjul`, `Africa/Conakry`, `America/Guadeloupe`, `Africa/Malabo`,
     * `Europe/Athens`, `Atlantic/South_Georgia`, `America/Guatemala`, `Pacific/Guam`, `Africa/Bissau`, `America/Guyana`,
     * `Asia/Hong_Kong`, `America/Tegucigalpa`, `Europe/Zagreb`, `America/Port-au-Prince`, `Europe/Budapest`, `Asia/Jakarta`,
     * `Asia/Pontianak`, `Asia/Makassar`, `Asia/Jayapura`, `Europe/Dublin`, `Asia/Jerusalem`, `Europe/Isle_of_Man`,
     * `Asia/Kolkata`, `Indian/Chagos`, `Asia/Baghdad`, `Asia/Tehran`, `Atlantic/Reykjavik`, `Europe/Rome`, `Europe/Jersey`,
     * `America/Jamaica`, `Asia/Amman`, `Asia/Tokyo`, `Africa/Nairobi`, `Asia/Bishkek`, `Asia/Phnom_Penh`, `Pacific/Tarawa`,
     * `Pacific/Enderbury`, `Pacific/Kiritimati`, `Indian/Comoro`, `America/St_Kitts`, `Asia/Pyongyang`, `Asia/Seoul`,
     * `Asia/Kuwait`, `America/Cayman`, `Asia/Almaty`, `Asia/Qyzylorda`, `Asia/Aqtobe`, `Asia/Aqtau`, `Asia/Oral`,
     * `Asia/Vientiane`, `Asia/Beirut`, `America/St_Lucia`, `Europe/Vaduz`, `Asia/Colombo`, `Africa/Monrovia`, `Africa/Maseru`,
     * `Europe/Vilnius`, `Europe/Luxembourg`, `Europe/Riga`, `Africa/Tripoli`, `Africa/Casablanca`, `Europe/Monaco`,
     * `Europe/Chisinau`, `Europe/Podgorica`, `America/Marigot`, `Indian/Antananarivo`, `Pacific/Majuro`, `Pacific/Kwajalein`,
     * `Europe/Skopje`, `Africa/Bamako`, `Asia/Rangoon`, `Asia/Ulaanbaatar`, `Asia/Hovd`, `Asia/Choibalsan`, `Asia/Macau`,
     * `Pacific/Saipan`, `America/Martinique`, `Africa/Nouakchott`, `America/Montserrat`, `Europe/Malta`, `Indian/Mauritius`,
     * `Indian/Maldives`, `Africa/Blantyre`, `America/Mexico_City`, `America/Cancun`, `America/Merida`, `America/Monterrey`,
     * `America/Matamoros`, `America/Mazatlan`, `America/Chihuahua`, `America/Ojinaga`, `America/Hermosillo`,
     * `America/Tijuana`, `America/Santa_Isabel`, `America/Bahia_Banderas`, `Asia/Kuala_Lumpur`, `Asia/Kuching`,
     * `Africa/Maputo`, `Africa/Windhoek`, `Pacific/Noumea`, `Africa/Niamey`, `Pacific/Norfolk`, `Africa/Lagos`,
     * `America/Managua`, `Europe/Amsterdam`, `Europe/Oslo`, `Asia/Kathmandu`, `Pacific/Nauru`, `Pacific/Niue`,
     * `Pacific/Auckland`, `Pacific/Chatham`, `Asia/Muscat`, `America/Panama`, `America/Lima`, `Pacific/Tahiti`,
     * `Pacific/Marquesas`, `Pacific/Gambier`, `Pacific/Port_Moresby`, `Asia/Manila`, `Asia/Karachi`, `Europe/Warsaw`,
     * `America/Miquelon`, `Pacific/Pitcairn`, `America/Puerto_Rico`, `Asia/Gaza`, `Asia/Hebron`, `Europe/Lisbon`,
     * `Atlantic/Madeira`, `Atlantic/Azores`, `Pacific/Palau`, `America/Asuncion`, `Asia/Qatar`, `Indian/Reunion`,
     * `Europe/Bucharest`, `Europe/Belgrade`, `Europe/Kaliningrad`, `Europe/Moscow`, `Europe/Volgograd`, `Europe/Samara`,
     * `Asia/Yekaterinburg`, `Asia/Omsk`, `Asia/Novosibirsk`, `Asia/Novokuznetsk`, `Asia/Krasnoyarsk`, `Asia/Irkutsk`,
     * `Asia/Yakutsk`, `Asia/Khandyga`, `Asia/Vladivostok`, `Asia/Sakhalin`, `Asia/Ust-Nera`, `Asia/Magadan`, `Asia/Kamchatka`,
     * `Asia/Anadyr`, `Africa/Kigali`, `Asia/Riyadh`, `Pacific/Guadalcanal`, `Indian/Mahe`, `Africa/Khartoum`,
     * `Europe/Stockholm`, `Asia/Singapore`, `Atlantic/St_Helena`, `Europe/Ljubljana`, `Arctic/Longyearbyen`,
     * `Europe/Bratislava`, `Africa/Freetown`, `Europe/San_Marino`, `Africa/Dakar`, `Africa/Mogadishu`, `America/Paramaribo`,
     * `Africa/Juba`, `Africa/Sao_Tome`, `America/El_Salvador`, `America/Lower_Princes`, `Asia/Damascus`, `Africa/Mbabane`,
     * `America/Grand_Turk`, `Africa/Ndjamena`, `Indian/Kerguelen`, `Africa/Lome`, `Asia/Bangkok`, `Asia/Dushanbe`,
     * `Pacific/Fakaofo`, `Asia/Dili`, `Asia/Ashgabat`, `Africa/Tunis`, `Pacific/Tongatapu`, `Europe/Istanbul`,
     * `America/Port_of_Spain`, `Pacific/Funafuti`, `Asia/Taipei`, `Africa/Dar_es_Salaam`, `Europe/Kiev`, `Europe/Uzhgorod`,
     * `Europe/Zaporozhye`, `Europe/Simferopol`, `Africa/Kampala`, `Pacific/Johnston`, `Pacific/Midway`, `Pacific/Wake`,
     * `America/New_York`, `America/Detroit`, `America/Kentucky/Louisville`, `America/Kentucky/Monticello`,
     * `America/Indiana/Indianapolis`, `America/Indiana/Vincennes`, `America/Indiana/Winamac`, `America/Indiana/Marengo`,
     * `America/Indiana/Petersburg`, `America/Indiana/Vevay`, `America/Chicago`, `America/Indiana/Tell_City`,
     * `America/Indiana/Knox`, `America/Menominee`, `America/North_Dakota/Center`, `America/North_Dakota/New_Salem`,
     * `America/North_Dakota/Beulah`, `America/Denver`, `America/Boise`, `America/Phoenix`, `America/Los_Angeles`,
     * `America/Anchorage`, `America/Juneau`, `America/Sitka`, `America/Yakutat`, `America/Nome`, `America/Adak`,
     * `America/Metlakatla`, `Pacific/Honolulu`, `America/Montevideo`, `Asia/Samarkand`, `Asia/Tashkent`, `Europe/Vatican`,
     * `America/St_Vincent`, `America/Caracas`, `America/Tortola`, `America/St_Thomas`, `Asia/Ho_Chi_Minh`, `Pacific/Efate`,
     * `Pacific/Wallis`, `Pacific/Apia`, `Asia/Aden`, `Indian/Mayotte`, `Africa/Johannesburg`, `Africa/Lusaka`,
     * `Africa/Harare`, `UTC` - Default value: `UTC`
     */
    public readonly timezone!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly timezoneVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable or disable default gateway tracking - Default value: `true`
     */
    public readonly trackDefaultGateway!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly trackDefaultGatewayVariable!: pulumi.Output<string | undefined>;
    /**
     * OMP Tag attached to routes based on interface tracking - Range: `1`-`4294967295`
     */
    public readonly trackInterfaceTag!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly trackInterfaceTagVariable!: pulumi.Output<string | undefined>;
    /**
     * Configure tracking of transport - Default value: `true`
     */
    public readonly trackTransport!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly trackTransportVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable transport gateway - Default value: `false`
     */
    public readonly transportGateway!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly transportGatewayVariable!: pulumi.Output<string | undefined>;
    /**
     * The version of the Feature
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a SystemBasicFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemBasicFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemBasicFeatureArgs | SystemBasicFeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemBasicFeatureState | undefined;
            resourceInputs["adminTechOnFailure"] = state ? state.adminTechOnFailure : undefined;
            resourceInputs["adminTechOnFailureVariable"] = state ? state.adminTechOnFailureVariable : undefined;
            resourceInputs["affinityGroupNumber"] = state ? state.affinityGroupNumber : undefined;
            resourceInputs["affinityGroupNumberVariable"] = state ? state.affinityGroupNumberVariable : undefined;
            resourceInputs["affinityGroupPreferences"] = state ? state.affinityGroupPreferences : undefined;
            resourceInputs["affinityGroupPreferencesVariable"] = state ? state.affinityGroupPreferencesVariable : undefined;
            resourceInputs["affinityPerVrfs"] = state ? state.affinityPerVrfs : undefined;
            resourceInputs["affinityPreferenceAuto"] = state ? state.affinityPreferenceAuto : undefined;
            resourceInputs["affinityPreferenceAutoVariable"] = state ? state.affinityPreferenceAutoVariable : undefined;
            resourceInputs["configDescription"] = state ? state.configDescription : undefined;
            resourceInputs["configDescriptionVariable"] = state ? state.configDescriptionVariable : undefined;
            resourceInputs["consoleBaudRate"] = state ? state.consoleBaudRate : undefined;
            resourceInputs["consoleBaudRateVariable"] = state ? state.consoleBaudRateVariable : undefined;
            resourceInputs["controlSessionPps"] = state ? state.controlSessionPps : undefined;
            resourceInputs["controlSessionPpsVariable"] = state ? state.controlSessionPpsVariable : undefined;
            resourceInputs["controllerGroups"] = state ? state.controllerGroups : undefined;
            resourceInputs["controllerGroupsVariable"] = state ? state.controllerGroupsVariable : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceGroups"] = state ? state.deviceGroups : undefined;
            resourceInputs["deviceGroupsVariable"] = state ? state.deviceGroupsVariable : undefined;
            resourceInputs["enhancedAppAwareRouting"] = state ? state.enhancedAppAwareRouting : undefined;
            resourceInputs["enhancedAppAwareRoutingVariable"] = state ? state.enhancedAppAwareRoutingVariable : undefined;
            resourceInputs["featureProfileId"] = state ? state.featureProfileId : undefined;
            resourceInputs["gpsGeoFencingEnable"] = state ? state.gpsGeoFencingEnable : undefined;
            resourceInputs["gpsGeoFencingRange"] = state ? state.gpsGeoFencingRange : undefined;
            resourceInputs["gpsGeoFencingRangeVariable"] = state ? state.gpsGeoFencingRangeVariable : undefined;
            resourceInputs["gpsLatitude"] = state ? state.gpsLatitude : undefined;
            resourceInputs["gpsLatitudeVariable"] = state ? state.gpsLatitudeVariable : undefined;
            resourceInputs["gpsLongitude"] = state ? state.gpsLongitude : undefined;
            resourceInputs["gpsLongitudeVariable"] = state ? state.gpsLongitudeVariable : undefined;
            resourceInputs["gpsSmsEnable"] = state ? state.gpsSmsEnable : undefined;
            resourceInputs["gpsSmsMobileNumbers"] = state ? state.gpsSmsMobileNumbers : undefined;
            resourceInputs["idleTimeout"] = state ? state.idleTimeout : undefined;
            resourceInputs["idleTimeoutVariable"] = state ? state.idleTimeoutVariable : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["locationVariable"] = state ? state.locationVariable : undefined;
            resourceInputs["maxOmpSessions"] = state ? state.maxOmpSessions : undefined;
            resourceInputs["maxOmpSessionsVariable"] = state ? state.maxOmpSessionsVariable : undefined;
            resourceInputs["multiTenant"] = state ? state.multiTenant : undefined;
            resourceInputs["multiTenantVariable"] = state ? state.multiTenantVariable : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["onDemandEnable"] = state ? state.onDemandEnable : undefined;
            resourceInputs["onDemandEnableVariable"] = state ? state.onDemandEnableVariable : undefined;
            resourceInputs["onDemandIdleTimeout"] = state ? state.onDemandIdleTimeout : undefined;
            resourceInputs["onDemandIdleTimeoutVariable"] = state ? state.onDemandIdleTimeoutVariable : undefined;
            resourceInputs["overlayId"] = state ? state.overlayId : undefined;
            resourceInputs["overlayIdVariable"] = state ? state.overlayIdVariable : undefined;
            resourceInputs["portHopping"] = state ? state.portHopping : undefined;
            resourceInputs["portHoppingVariable"] = state ? state.portHoppingVariable : undefined;
            resourceInputs["portOffset"] = state ? state.portOffset : undefined;
            resourceInputs["portOffsetVariable"] = state ? state.portOffsetVariable : undefined;
            resourceInputs["siteTypes"] = state ? state.siteTypes : undefined;
            resourceInputs["siteTypesVariable"] = state ? state.siteTypesVariable : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
            resourceInputs["timezoneVariable"] = state ? state.timezoneVariable : undefined;
            resourceInputs["trackDefaultGateway"] = state ? state.trackDefaultGateway : undefined;
            resourceInputs["trackDefaultGatewayVariable"] = state ? state.trackDefaultGatewayVariable : undefined;
            resourceInputs["trackInterfaceTag"] = state ? state.trackInterfaceTag : undefined;
            resourceInputs["trackInterfaceTagVariable"] = state ? state.trackInterfaceTagVariable : undefined;
            resourceInputs["trackTransport"] = state ? state.trackTransport : undefined;
            resourceInputs["trackTransportVariable"] = state ? state.trackTransportVariable : undefined;
            resourceInputs["transportGateway"] = state ? state.transportGateway : undefined;
            resourceInputs["transportGatewayVariable"] = state ? state.transportGatewayVariable : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as SystemBasicFeatureArgs | undefined;
            resourceInputs["adminTechOnFailure"] = args ? args.adminTechOnFailure : undefined;
            resourceInputs["adminTechOnFailureVariable"] = args ? args.adminTechOnFailureVariable : undefined;
            resourceInputs["affinityGroupNumber"] = args ? args.affinityGroupNumber : undefined;
            resourceInputs["affinityGroupNumberVariable"] = args ? args.affinityGroupNumberVariable : undefined;
            resourceInputs["affinityGroupPreferences"] = args ? args.affinityGroupPreferences : undefined;
            resourceInputs["affinityGroupPreferencesVariable"] = args ? args.affinityGroupPreferencesVariable : undefined;
            resourceInputs["affinityPerVrfs"] = args ? args.affinityPerVrfs : undefined;
            resourceInputs["affinityPreferenceAuto"] = args ? args.affinityPreferenceAuto : undefined;
            resourceInputs["affinityPreferenceAutoVariable"] = args ? args.affinityPreferenceAutoVariable : undefined;
            resourceInputs["configDescription"] = args ? args.configDescription : undefined;
            resourceInputs["configDescriptionVariable"] = args ? args.configDescriptionVariable : undefined;
            resourceInputs["consoleBaudRate"] = args ? args.consoleBaudRate : undefined;
            resourceInputs["consoleBaudRateVariable"] = args ? args.consoleBaudRateVariable : undefined;
            resourceInputs["controlSessionPps"] = args ? args.controlSessionPps : undefined;
            resourceInputs["controlSessionPpsVariable"] = args ? args.controlSessionPpsVariable : undefined;
            resourceInputs["controllerGroups"] = args ? args.controllerGroups : undefined;
            resourceInputs["controllerGroupsVariable"] = args ? args.controllerGroupsVariable : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceGroups"] = args ? args.deviceGroups : undefined;
            resourceInputs["deviceGroupsVariable"] = args ? args.deviceGroupsVariable : undefined;
            resourceInputs["enhancedAppAwareRouting"] = args ? args.enhancedAppAwareRouting : undefined;
            resourceInputs["enhancedAppAwareRoutingVariable"] = args ? args.enhancedAppAwareRoutingVariable : undefined;
            resourceInputs["featureProfileId"] = args ? args.featureProfileId : undefined;
            resourceInputs["gpsGeoFencingEnable"] = args ? args.gpsGeoFencingEnable : undefined;
            resourceInputs["gpsGeoFencingRange"] = args ? args.gpsGeoFencingRange : undefined;
            resourceInputs["gpsGeoFencingRangeVariable"] = args ? args.gpsGeoFencingRangeVariable : undefined;
            resourceInputs["gpsLatitude"] = args ? args.gpsLatitude : undefined;
            resourceInputs["gpsLatitudeVariable"] = args ? args.gpsLatitudeVariable : undefined;
            resourceInputs["gpsLongitude"] = args ? args.gpsLongitude : undefined;
            resourceInputs["gpsLongitudeVariable"] = args ? args.gpsLongitudeVariable : undefined;
            resourceInputs["gpsSmsEnable"] = args ? args.gpsSmsEnable : undefined;
            resourceInputs["gpsSmsMobileNumbers"] = args ? args.gpsSmsMobileNumbers : undefined;
            resourceInputs["idleTimeout"] = args ? args.idleTimeout : undefined;
            resourceInputs["idleTimeoutVariable"] = args ? args.idleTimeoutVariable : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["locationVariable"] = args ? args.locationVariable : undefined;
            resourceInputs["maxOmpSessions"] = args ? args.maxOmpSessions : undefined;
            resourceInputs["maxOmpSessionsVariable"] = args ? args.maxOmpSessionsVariable : undefined;
            resourceInputs["multiTenant"] = args ? args.multiTenant : undefined;
            resourceInputs["multiTenantVariable"] = args ? args.multiTenantVariable : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["onDemandEnable"] = args ? args.onDemandEnable : undefined;
            resourceInputs["onDemandEnableVariable"] = args ? args.onDemandEnableVariable : undefined;
            resourceInputs["onDemandIdleTimeout"] = args ? args.onDemandIdleTimeout : undefined;
            resourceInputs["onDemandIdleTimeoutVariable"] = args ? args.onDemandIdleTimeoutVariable : undefined;
            resourceInputs["overlayId"] = args ? args.overlayId : undefined;
            resourceInputs["overlayIdVariable"] = args ? args.overlayIdVariable : undefined;
            resourceInputs["portHopping"] = args ? args.portHopping : undefined;
            resourceInputs["portHoppingVariable"] = args ? args.portHoppingVariable : undefined;
            resourceInputs["portOffset"] = args ? args.portOffset : undefined;
            resourceInputs["portOffsetVariable"] = args ? args.portOffsetVariable : undefined;
            resourceInputs["siteTypes"] = args ? args.siteTypes : undefined;
            resourceInputs["siteTypesVariable"] = args ? args.siteTypesVariable : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["timezoneVariable"] = args ? args.timezoneVariable : undefined;
            resourceInputs["trackDefaultGateway"] = args ? args.trackDefaultGateway : undefined;
            resourceInputs["trackDefaultGatewayVariable"] = args ? args.trackDefaultGatewayVariable : undefined;
            resourceInputs["trackInterfaceTag"] = args ? args.trackInterfaceTag : undefined;
            resourceInputs["trackInterfaceTagVariable"] = args ? args.trackInterfaceTagVariable : undefined;
            resourceInputs["trackTransport"] = args ? args.trackTransport : undefined;
            resourceInputs["trackTransportVariable"] = args ? args.trackTransportVariable : undefined;
            resourceInputs["transportGateway"] = args ? args.transportGateway : undefined;
            resourceInputs["transportGatewayVariable"] = args ? args.transportGatewayVariable : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemBasicFeature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemBasicFeature resources.
 */
export interface SystemBasicFeatureState {
    /**
     * Collect admin-tech before reboot due to daemon failure - Default value: `true`
     */
    adminTechOnFailure?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    adminTechOnFailureVariable?: pulumi.Input<string>;
    /**
     * Affinity Group Number - Range: `1`-`63`
     */
    affinityGroupNumber?: pulumi.Input<number>;
    /**
     * Variable name
     */
    affinityGroupNumberVariable?: pulumi.Input<string>;
    /**
     * Affinity Group Preference
     */
    affinityGroupPreferences?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Variable name
     */
    affinityGroupPreferencesVariable?: pulumi.Input<string>;
    /**
     * Affinity Group Number for VRFs
     */
    affinityPerVrfs?: pulumi.Input<pulumi.Input<inputs.SystemBasicFeatureAffinityPerVrf>[]>;
    /**
     * Affinity Group Preference Auto - Default value: `false`
     */
    affinityPreferenceAuto?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    affinityPreferenceAutoVariable?: pulumi.Input<string>;
    /**
     * Set a text description of the device
     */
    configDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    configDescriptionVariable?: pulumi.Input<string>;
    /**
     * Set the console baud rate - Choices: `1200`, `2400`, `4800`, `9600`, `19200`, `38400`, `57600`, `115200` - Default
     * value: `9600`
     */
    consoleBaudRate?: pulumi.Input<string>;
    /**
     * Variable name
     */
    consoleBaudRateVariable?: pulumi.Input<string>;
    /**
     * Set the policer rate for control sessions - Range: `1`-`65535` - Default value: `300`
     */
    controlSessionPps?: pulumi.Input<number>;
    /**
     * Variable name
     */
    controlSessionPpsVariable?: pulumi.Input<string>;
    /**
     * Configure a list of comma-separated controller groups
     */
    controllerGroups?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Variable name
     */
    controllerGroupsVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Device groups
     */
    deviceGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Variable name
     */
    deviceGroupsVariable?: pulumi.Input<string>;
    /**
     * Enable SLA Dampening and Enhanced App Routing. - Choices: `disabled`, `aggressive`, `moderate`, `conservative` - Default
     * value: `disabled`
     */
    enhancedAppAwareRouting?: pulumi.Input<string>;
    /**
     * Variable name
     */
    enhancedAppAwareRoutingVariable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * Enable Geo fencing - Default value: `false`
     */
    gpsGeoFencingEnable?: pulumi.Input<boolean>;
    /**
     * Set the device’s geo fencing range - Range: `100`-`10000` - Default value: `100`
     */
    gpsGeoFencingRange?: pulumi.Input<number>;
    /**
     * Variable name
     */
    gpsGeoFencingRangeVariable?: pulumi.Input<string>;
    /**
     * Set the device physical latitude - Range: `-90`-`90`
     */
    gpsLatitude?: pulumi.Input<number>;
    /**
     * Variable name
     */
    gpsLatitudeVariable?: pulumi.Input<string>;
    /**
     * Set the device physical longitude - Range: `-180`-`180`
     */
    gpsLongitude?: pulumi.Input<number>;
    /**
     * Variable name
     */
    gpsLongitudeVariable?: pulumi.Input<string>;
    /**
     * Enable device’s geo fencing SMS - Default value: `false`
     */
    gpsSmsEnable?: pulumi.Input<boolean>;
    /**
     * Set device’s geo fencing SMS phone number
     */
    gpsSmsMobileNumbers?: pulumi.Input<pulumi.Input<inputs.SystemBasicFeatureGpsSmsMobileNumber>[]>;
    /**
     * Idle CLI timeout in minutes - Range: `0`-`300`
     */
    idleTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    idleTimeoutVariable?: pulumi.Input<string>;
    /**
     * Set the location of the device
     */
    location?: pulumi.Input<string>;
    /**
     * Variable name
     */
    locationVariable?: pulumi.Input<string>;
    /**
     * Set the maximum number of OMP sessions <1..100> the device can have - Range: `1`-`100`
     */
    maxOmpSessions?: pulumi.Input<number>;
    /**
     * Variable name
     */
    maxOmpSessionsVariable?: pulumi.Input<string>;
    /**
     * Device is multi-tenant - Default value: `false`
     */
    multiTenant?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    multiTenantVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * Enable or disable On-demand Tunnel - Default value: `false`
     */
    onDemandEnable?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    onDemandEnableVariable?: pulumi.Input<string>;
    /**
     * Set the idle timeout for on-demand tunnels - Range: `1`-`65535` - Default value: `10`
     */
    onDemandIdleTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    onDemandIdleTimeoutVariable?: pulumi.Input<string>;
    /**
     * Set the Overlay ID - Range: `1`-`4294967295` - Default value: `1`
     */
    overlayId?: pulumi.Input<number>;
    /**
     * Variable name
     */
    overlayIdVariable?: pulumi.Input<string>;
    /**
     * Enable port hopping - Default value: `true`
     */
    portHopping?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    portHoppingVariable?: pulumi.Input<string>;
    /**
     * Set the TLOC port offset when multiple devices are behind a NAT - Range: `0`-`19` - Default value: `0`
     */
    portOffset?: pulumi.Input<number>;
    /**
     * Variable name
     */
    portOffsetVariable?: pulumi.Input<string>;
    /**
     * Site Type
     */
    siteTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Variable name
     */
    siteTypesVariable?: pulumi.Input<string>;
    /**
     * Set the timezone - Choices: `Europe/Andorra`, `Asia/Dubai`, `Asia/Kabul`, `America/Antigua`, `America/Anguilla`,
     * `Europe/Tirane`, `Asia/Yerevan`, `Africa/Luanda`, `Antarctica/McMurdo`, `Antarctica/Rothera`, `Antarctica/Palmer`,
     * `Antarctica/Mawson`, `Antarctica/Davis`, `Antarctica/Casey`, `Antarctica/Vostok`, `Antarctica/DumontDUrville`,
     * `Antarctica/Syowa`, `America/Argentina/Buenos_Aires`, `America/Argentina/Cordoba`, `America/Argentina/Salta`,
     * `America/Argentina/Jujuy`, `America/Argentina/Tucuman`, `America/Argentina/Catamarca`, `America/Argentina/La_Rioja`,
     * `America/Argentina/San_Juan`, `America/Argentina/Mendoza`, `America/Argentina/San_Luis`,
     * `America/Argentina/Rio_Gallegos`, `America/Argentina/Ushuaia`, `Pacific/Pago_Pago`, `Europe/Vienna`,
     * `Australia/Lord_Howe`, `Antarctica/Macquarie`, `Australia/Hobart`, `Australia/Currie`, `Australia/Melbourne`,
     * `Australia/Sydney`, `Australia/Broken_Hill`, `Australia/Brisbane`, `Australia/Lindeman`, `Australia/Adelaide`,
     * `Australia/Darwin`, `Australia/Perth`, `Australia/Eucla`, `America/Aruba`, `Europe/Mariehamn`, `Asia/Baku`,
     * `Europe/Sarajevo`, `America/Barbados`, `Asia/Dhaka`, `Europe/Brussels`, `Africa/Ouagadougou`, `Europe/Sofia`,
     * `Asia/Bahrain`, `Africa/Bujumbura`, `Africa/Porto-Novo`, `America/St_Barthelemy`, `Atlantic/Bermuda`, `Asia/Brunei`,
     * `America/La_Paz`, `America/Kralendijk`, `America/Noronha`, `America/Belem`, `America/Fortaleza`, `America/Recife`,
     * `America/Araguaina`, `America/Maceio`, `America/Bahia`, `America/Sao_Paulo`, `America/Campo_Grande`, `America/Cuiaba`,
     * `America/Santarem`, `America/Porto_Velho`, `America/Boa_Vista`, `America/Manaus`, `America/Eirunepe`,
     * `America/Rio_Branco`, `America/Nassau`, `Asia/Thimphu`, `Africa/Gaborone`, `Europe/Minsk`, `America/Belize`,
     * `America/St_Johns`, `America/Halifax`, `America/Glace_Bay`, `America/Moncton`, `America/Goose_Bay`,
     * `America/Blanc-Sablon`, `America/Toronto`, `America/Nipigon`, `America/Thunder_Bay`, `America/Iqaluit`,
     * `America/Pangnirtung`, `America/Resolute`, `America/Atikokan`, `America/Rankin_Inlet`, `America/Winnipeg`,
     * `America/Rainy_River`, `America/Regina`, `America/Swift_Current`, `America/Edmonton`, `America/Cambridge_Bay`,
     * `America/Yellowknife`, `America/Inuvik`, `America/Creston`, `America/Dawson_Creek`, `America/Vancouver`,
     * `America/Whitehorse`, `America/Dawson`, `Indian/Cocos`, `Africa/Kinshasa`, `Africa/Lubumbashi`, `Africa/Bangui`,
     * `Africa/Brazzaville`, `Europe/Zurich`, `Africa/Abidjan`, `Pacific/Rarotonga`, `America/Santiago`, `Pacific/Easter`,
     * `Africa/Douala`, `Asia/Shanghai`, `Asia/Harbin`, `Asia/Chongqing`, `Asia/Urumqi`, `Asia/Kashgar`, `America/Bogota`,
     * `America/Costa_Rica`, `America/Havana`, `Atlantic/Cape_Verde`, `America/Curacao`, `Indian/Christmas`, `Asia/Nicosia`,
     * `Europe/Prague`, `Europe/Berlin`, `Europe/Busingen`, `Africa/Djibouti`, `Europe/Copenhagen`, `America/Dominica`,
     * `America/Santo_Domingo`, `Africa/Algiers`, `America/Guayaquil`, `Pacific/Galapagos`, `Europe/Tallinn`, `Africa/Cairo`,
     * `Africa/El_Aaiun`, `Africa/Asmara`, `Europe/Madrid`, `Africa/Ceuta`, `Atlantic/Canary`, `Africa/Addis_Ababa`,
     * `Europe/Helsinki`, `Pacific/Fiji`, `Atlantic/Stanley`, `Pacific/Chuuk`, `Pacific/Pohnpei`, `Pacific/Kosrae`,
     * `Atlantic/Faroe`, `Europe/Paris`, `Africa/Libreville`, `Europe/London`, `America/Grenada`, `Asia/Tbilisi`,
     * `America/Cayenne`, `Europe/Guernsey`, `Africa/Accra`, `Europe/Gibraltar`, `America/Godthab`, `America/Danmarkshavn`,
     * `America/Scoresbysund`, `America/Thule`, `Africa/Banjul`, `Africa/Conakry`, `America/Guadeloupe`, `Africa/Malabo`,
     * `Europe/Athens`, `Atlantic/South_Georgia`, `America/Guatemala`, `Pacific/Guam`, `Africa/Bissau`, `America/Guyana`,
     * `Asia/Hong_Kong`, `America/Tegucigalpa`, `Europe/Zagreb`, `America/Port-au-Prince`, `Europe/Budapest`, `Asia/Jakarta`,
     * `Asia/Pontianak`, `Asia/Makassar`, `Asia/Jayapura`, `Europe/Dublin`, `Asia/Jerusalem`, `Europe/Isle_of_Man`,
     * `Asia/Kolkata`, `Indian/Chagos`, `Asia/Baghdad`, `Asia/Tehran`, `Atlantic/Reykjavik`, `Europe/Rome`, `Europe/Jersey`,
     * `America/Jamaica`, `Asia/Amman`, `Asia/Tokyo`, `Africa/Nairobi`, `Asia/Bishkek`, `Asia/Phnom_Penh`, `Pacific/Tarawa`,
     * `Pacific/Enderbury`, `Pacific/Kiritimati`, `Indian/Comoro`, `America/St_Kitts`, `Asia/Pyongyang`, `Asia/Seoul`,
     * `Asia/Kuwait`, `America/Cayman`, `Asia/Almaty`, `Asia/Qyzylorda`, `Asia/Aqtobe`, `Asia/Aqtau`, `Asia/Oral`,
     * `Asia/Vientiane`, `Asia/Beirut`, `America/St_Lucia`, `Europe/Vaduz`, `Asia/Colombo`, `Africa/Monrovia`, `Africa/Maseru`,
     * `Europe/Vilnius`, `Europe/Luxembourg`, `Europe/Riga`, `Africa/Tripoli`, `Africa/Casablanca`, `Europe/Monaco`,
     * `Europe/Chisinau`, `Europe/Podgorica`, `America/Marigot`, `Indian/Antananarivo`, `Pacific/Majuro`, `Pacific/Kwajalein`,
     * `Europe/Skopje`, `Africa/Bamako`, `Asia/Rangoon`, `Asia/Ulaanbaatar`, `Asia/Hovd`, `Asia/Choibalsan`, `Asia/Macau`,
     * `Pacific/Saipan`, `America/Martinique`, `Africa/Nouakchott`, `America/Montserrat`, `Europe/Malta`, `Indian/Mauritius`,
     * `Indian/Maldives`, `Africa/Blantyre`, `America/Mexico_City`, `America/Cancun`, `America/Merida`, `America/Monterrey`,
     * `America/Matamoros`, `America/Mazatlan`, `America/Chihuahua`, `America/Ojinaga`, `America/Hermosillo`,
     * `America/Tijuana`, `America/Santa_Isabel`, `America/Bahia_Banderas`, `Asia/Kuala_Lumpur`, `Asia/Kuching`,
     * `Africa/Maputo`, `Africa/Windhoek`, `Pacific/Noumea`, `Africa/Niamey`, `Pacific/Norfolk`, `Africa/Lagos`,
     * `America/Managua`, `Europe/Amsterdam`, `Europe/Oslo`, `Asia/Kathmandu`, `Pacific/Nauru`, `Pacific/Niue`,
     * `Pacific/Auckland`, `Pacific/Chatham`, `Asia/Muscat`, `America/Panama`, `America/Lima`, `Pacific/Tahiti`,
     * `Pacific/Marquesas`, `Pacific/Gambier`, `Pacific/Port_Moresby`, `Asia/Manila`, `Asia/Karachi`, `Europe/Warsaw`,
     * `America/Miquelon`, `Pacific/Pitcairn`, `America/Puerto_Rico`, `Asia/Gaza`, `Asia/Hebron`, `Europe/Lisbon`,
     * `Atlantic/Madeira`, `Atlantic/Azores`, `Pacific/Palau`, `America/Asuncion`, `Asia/Qatar`, `Indian/Reunion`,
     * `Europe/Bucharest`, `Europe/Belgrade`, `Europe/Kaliningrad`, `Europe/Moscow`, `Europe/Volgograd`, `Europe/Samara`,
     * `Asia/Yekaterinburg`, `Asia/Omsk`, `Asia/Novosibirsk`, `Asia/Novokuznetsk`, `Asia/Krasnoyarsk`, `Asia/Irkutsk`,
     * `Asia/Yakutsk`, `Asia/Khandyga`, `Asia/Vladivostok`, `Asia/Sakhalin`, `Asia/Ust-Nera`, `Asia/Magadan`, `Asia/Kamchatka`,
     * `Asia/Anadyr`, `Africa/Kigali`, `Asia/Riyadh`, `Pacific/Guadalcanal`, `Indian/Mahe`, `Africa/Khartoum`,
     * `Europe/Stockholm`, `Asia/Singapore`, `Atlantic/St_Helena`, `Europe/Ljubljana`, `Arctic/Longyearbyen`,
     * `Europe/Bratislava`, `Africa/Freetown`, `Europe/San_Marino`, `Africa/Dakar`, `Africa/Mogadishu`, `America/Paramaribo`,
     * `Africa/Juba`, `Africa/Sao_Tome`, `America/El_Salvador`, `America/Lower_Princes`, `Asia/Damascus`, `Africa/Mbabane`,
     * `America/Grand_Turk`, `Africa/Ndjamena`, `Indian/Kerguelen`, `Africa/Lome`, `Asia/Bangkok`, `Asia/Dushanbe`,
     * `Pacific/Fakaofo`, `Asia/Dili`, `Asia/Ashgabat`, `Africa/Tunis`, `Pacific/Tongatapu`, `Europe/Istanbul`,
     * `America/Port_of_Spain`, `Pacific/Funafuti`, `Asia/Taipei`, `Africa/Dar_es_Salaam`, `Europe/Kiev`, `Europe/Uzhgorod`,
     * `Europe/Zaporozhye`, `Europe/Simferopol`, `Africa/Kampala`, `Pacific/Johnston`, `Pacific/Midway`, `Pacific/Wake`,
     * `America/New_York`, `America/Detroit`, `America/Kentucky/Louisville`, `America/Kentucky/Monticello`,
     * `America/Indiana/Indianapolis`, `America/Indiana/Vincennes`, `America/Indiana/Winamac`, `America/Indiana/Marengo`,
     * `America/Indiana/Petersburg`, `America/Indiana/Vevay`, `America/Chicago`, `America/Indiana/Tell_City`,
     * `America/Indiana/Knox`, `America/Menominee`, `America/North_Dakota/Center`, `America/North_Dakota/New_Salem`,
     * `America/North_Dakota/Beulah`, `America/Denver`, `America/Boise`, `America/Phoenix`, `America/Los_Angeles`,
     * `America/Anchorage`, `America/Juneau`, `America/Sitka`, `America/Yakutat`, `America/Nome`, `America/Adak`,
     * `America/Metlakatla`, `Pacific/Honolulu`, `America/Montevideo`, `Asia/Samarkand`, `Asia/Tashkent`, `Europe/Vatican`,
     * `America/St_Vincent`, `America/Caracas`, `America/Tortola`, `America/St_Thomas`, `Asia/Ho_Chi_Minh`, `Pacific/Efate`,
     * `Pacific/Wallis`, `Pacific/Apia`, `Asia/Aden`, `Indian/Mayotte`, `Africa/Johannesburg`, `Africa/Lusaka`,
     * `Africa/Harare`, `UTC` - Default value: `UTC`
     */
    timezone?: pulumi.Input<string>;
    /**
     * Variable name
     */
    timezoneVariable?: pulumi.Input<string>;
    /**
     * Enable or disable default gateway tracking - Default value: `true`
     */
    trackDefaultGateway?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    trackDefaultGatewayVariable?: pulumi.Input<string>;
    /**
     * OMP Tag attached to routes based on interface tracking - Range: `1`-`4294967295`
     */
    trackInterfaceTag?: pulumi.Input<number>;
    /**
     * Variable name
     */
    trackInterfaceTagVariable?: pulumi.Input<string>;
    /**
     * Configure tracking of transport - Default value: `true`
     */
    trackTransport?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    trackTransportVariable?: pulumi.Input<string>;
    /**
     * Enable transport gateway - Default value: `false`
     */
    transportGateway?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    transportGatewayVariable?: pulumi.Input<string>;
    /**
     * The version of the Feature
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SystemBasicFeature resource.
 */
export interface SystemBasicFeatureArgs {
    /**
     * Collect admin-tech before reboot due to daemon failure - Default value: `true`
     */
    adminTechOnFailure?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    adminTechOnFailureVariable?: pulumi.Input<string>;
    /**
     * Affinity Group Number - Range: `1`-`63`
     */
    affinityGroupNumber?: pulumi.Input<number>;
    /**
     * Variable name
     */
    affinityGroupNumberVariable?: pulumi.Input<string>;
    /**
     * Affinity Group Preference
     */
    affinityGroupPreferences?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Variable name
     */
    affinityGroupPreferencesVariable?: pulumi.Input<string>;
    /**
     * Affinity Group Number for VRFs
     */
    affinityPerVrfs?: pulumi.Input<pulumi.Input<inputs.SystemBasicFeatureAffinityPerVrf>[]>;
    /**
     * Affinity Group Preference Auto - Default value: `false`
     */
    affinityPreferenceAuto?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    affinityPreferenceAutoVariable?: pulumi.Input<string>;
    /**
     * Set a text description of the device
     */
    configDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    configDescriptionVariable?: pulumi.Input<string>;
    /**
     * Set the console baud rate - Choices: `1200`, `2400`, `4800`, `9600`, `19200`, `38400`, `57600`, `115200` - Default
     * value: `9600`
     */
    consoleBaudRate?: pulumi.Input<string>;
    /**
     * Variable name
     */
    consoleBaudRateVariable?: pulumi.Input<string>;
    /**
     * Set the policer rate for control sessions - Range: `1`-`65535` - Default value: `300`
     */
    controlSessionPps?: pulumi.Input<number>;
    /**
     * Variable name
     */
    controlSessionPpsVariable?: pulumi.Input<string>;
    /**
     * Configure a list of comma-separated controller groups
     */
    controllerGroups?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Variable name
     */
    controllerGroupsVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Device groups
     */
    deviceGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Variable name
     */
    deviceGroupsVariable?: pulumi.Input<string>;
    /**
     * Enable SLA Dampening and Enhanced App Routing. - Choices: `disabled`, `aggressive`, `moderate`, `conservative` - Default
     * value: `disabled`
     */
    enhancedAppAwareRouting?: pulumi.Input<string>;
    /**
     * Variable name
     */
    enhancedAppAwareRoutingVariable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * Enable Geo fencing - Default value: `false`
     */
    gpsGeoFencingEnable?: pulumi.Input<boolean>;
    /**
     * Set the device’s geo fencing range - Range: `100`-`10000` - Default value: `100`
     */
    gpsGeoFencingRange?: pulumi.Input<number>;
    /**
     * Variable name
     */
    gpsGeoFencingRangeVariable?: pulumi.Input<string>;
    /**
     * Set the device physical latitude - Range: `-90`-`90`
     */
    gpsLatitude?: pulumi.Input<number>;
    /**
     * Variable name
     */
    gpsLatitudeVariable?: pulumi.Input<string>;
    /**
     * Set the device physical longitude - Range: `-180`-`180`
     */
    gpsLongitude?: pulumi.Input<number>;
    /**
     * Variable name
     */
    gpsLongitudeVariable?: pulumi.Input<string>;
    /**
     * Enable device’s geo fencing SMS - Default value: `false`
     */
    gpsSmsEnable?: pulumi.Input<boolean>;
    /**
     * Set device’s geo fencing SMS phone number
     */
    gpsSmsMobileNumbers?: pulumi.Input<pulumi.Input<inputs.SystemBasicFeatureGpsSmsMobileNumber>[]>;
    /**
     * Idle CLI timeout in minutes - Range: `0`-`300`
     */
    idleTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    idleTimeoutVariable?: pulumi.Input<string>;
    /**
     * Set the location of the device
     */
    location?: pulumi.Input<string>;
    /**
     * Variable name
     */
    locationVariable?: pulumi.Input<string>;
    /**
     * Set the maximum number of OMP sessions <1..100> the device can have - Range: `1`-`100`
     */
    maxOmpSessions?: pulumi.Input<number>;
    /**
     * Variable name
     */
    maxOmpSessionsVariable?: pulumi.Input<string>;
    /**
     * Device is multi-tenant - Default value: `false`
     */
    multiTenant?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    multiTenantVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * Enable or disable On-demand Tunnel - Default value: `false`
     */
    onDemandEnable?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    onDemandEnableVariable?: pulumi.Input<string>;
    /**
     * Set the idle timeout for on-demand tunnels - Range: `1`-`65535` - Default value: `10`
     */
    onDemandIdleTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    onDemandIdleTimeoutVariable?: pulumi.Input<string>;
    /**
     * Set the Overlay ID - Range: `1`-`4294967295` - Default value: `1`
     */
    overlayId?: pulumi.Input<number>;
    /**
     * Variable name
     */
    overlayIdVariable?: pulumi.Input<string>;
    /**
     * Enable port hopping - Default value: `true`
     */
    portHopping?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    portHoppingVariable?: pulumi.Input<string>;
    /**
     * Set the TLOC port offset when multiple devices are behind a NAT - Range: `0`-`19` - Default value: `0`
     */
    portOffset?: pulumi.Input<number>;
    /**
     * Variable name
     */
    portOffsetVariable?: pulumi.Input<string>;
    /**
     * Site Type
     */
    siteTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Variable name
     */
    siteTypesVariable?: pulumi.Input<string>;
    /**
     * Set the timezone - Choices: `Europe/Andorra`, `Asia/Dubai`, `Asia/Kabul`, `America/Antigua`, `America/Anguilla`,
     * `Europe/Tirane`, `Asia/Yerevan`, `Africa/Luanda`, `Antarctica/McMurdo`, `Antarctica/Rothera`, `Antarctica/Palmer`,
     * `Antarctica/Mawson`, `Antarctica/Davis`, `Antarctica/Casey`, `Antarctica/Vostok`, `Antarctica/DumontDUrville`,
     * `Antarctica/Syowa`, `America/Argentina/Buenos_Aires`, `America/Argentina/Cordoba`, `America/Argentina/Salta`,
     * `America/Argentina/Jujuy`, `America/Argentina/Tucuman`, `America/Argentina/Catamarca`, `America/Argentina/La_Rioja`,
     * `America/Argentina/San_Juan`, `America/Argentina/Mendoza`, `America/Argentina/San_Luis`,
     * `America/Argentina/Rio_Gallegos`, `America/Argentina/Ushuaia`, `Pacific/Pago_Pago`, `Europe/Vienna`,
     * `Australia/Lord_Howe`, `Antarctica/Macquarie`, `Australia/Hobart`, `Australia/Currie`, `Australia/Melbourne`,
     * `Australia/Sydney`, `Australia/Broken_Hill`, `Australia/Brisbane`, `Australia/Lindeman`, `Australia/Adelaide`,
     * `Australia/Darwin`, `Australia/Perth`, `Australia/Eucla`, `America/Aruba`, `Europe/Mariehamn`, `Asia/Baku`,
     * `Europe/Sarajevo`, `America/Barbados`, `Asia/Dhaka`, `Europe/Brussels`, `Africa/Ouagadougou`, `Europe/Sofia`,
     * `Asia/Bahrain`, `Africa/Bujumbura`, `Africa/Porto-Novo`, `America/St_Barthelemy`, `Atlantic/Bermuda`, `Asia/Brunei`,
     * `America/La_Paz`, `America/Kralendijk`, `America/Noronha`, `America/Belem`, `America/Fortaleza`, `America/Recife`,
     * `America/Araguaina`, `America/Maceio`, `America/Bahia`, `America/Sao_Paulo`, `America/Campo_Grande`, `America/Cuiaba`,
     * `America/Santarem`, `America/Porto_Velho`, `America/Boa_Vista`, `America/Manaus`, `America/Eirunepe`,
     * `America/Rio_Branco`, `America/Nassau`, `Asia/Thimphu`, `Africa/Gaborone`, `Europe/Minsk`, `America/Belize`,
     * `America/St_Johns`, `America/Halifax`, `America/Glace_Bay`, `America/Moncton`, `America/Goose_Bay`,
     * `America/Blanc-Sablon`, `America/Toronto`, `America/Nipigon`, `America/Thunder_Bay`, `America/Iqaluit`,
     * `America/Pangnirtung`, `America/Resolute`, `America/Atikokan`, `America/Rankin_Inlet`, `America/Winnipeg`,
     * `America/Rainy_River`, `America/Regina`, `America/Swift_Current`, `America/Edmonton`, `America/Cambridge_Bay`,
     * `America/Yellowknife`, `America/Inuvik`, `America/Creston`, `America/Dawson_Creek`, `America/Vancouver`,
     * `America/Whitehorse`, `America/Dawson`, `Indian/Cocos`, `Africa/Kinshasa`, `Africa/Lubumbashi`, `Africa/Bangui`,
     * `Africa/Brazzaville`, `Europe/Zurich`, `Africa/Abidjan`, `Pacific/Rarotonga`, `America/Santiago`, `Pacific/Easter`,
     * `Africa/Douala`, `Asia/Shanghai`, `Asia/Harbin`, `Asia/Chongqing`, `Asia/Urumqi`, `Asia/Kashgar`, `America/Bogota`,
     * `America/Costa_Rica`, `America/Havana`, `Atlantic/Cape_Verde`, `America/Curacao`, `Indian/Christmas`, `Asia/Nicosia`,
     * `Europe/Prague`, `Europe/Berlin`, `Europe/Busingen`, `Africa/Djibouti`, `Europe/Copenhagen`, `America/Dominica`,
     * `America/Santo_Domingo`, `Africa/Algiers`, `America/Guayaquil`, `Pacific/Galapagos`, `Europe/Tallinn`, `Africa/Cairo`,
     * `Africa/El_Aaiun`, `Africa/Asmara`, `Europe/Madrid`, `Africa/Ceuta`, `Atlantic/Canary`, `Africa/Addis_Ababa`,
     * `Europe/Helsinki`, `Pacific/Fiji`, `Atlantic/Stanley`, `Pacific/Chuuk`, `Pacific/Pohnpei`, `Pacific/Kosrae`,
     * `Atlantic/Faroe`, `Europe/Paris`, `Africa/Libreville`, `Europe/London`, `America/Grenada`, `Asia/Tbilisi`,
     * `America/Cayenne`, `Europe/Guernsey`, `Africa/Accra`, `Europe/Gibraltar`, `America/Godthab`, `America/Danmarkshavn`,
     * `America/Scoresbysund`, `America/Thule`, `Africa/Banjul`, `Africa/Conakry`, `America/Guadeloupe`, `Africa/Malabo`,
     * `Europe/Athens`, `Atlantic/South_Georgia`, `America/Guatemala`, `Pacific/Guam`, `Africa/Bissau`, `America/Guyana`,
     * `Asia/Hong_Kong`, `America/Tegucigalpa`, `Europe/Zagreb`, `America/Port-au-Prince`, `Europe/Budapest`, `Asia/Jakarta`,
     * `Asia/Pontianak`, `Asia/Makassar`, `Asia/Jayapura`, `Europe/Dublin`, `Asia/Jerusalem`, `Europe/Isle_of_Man`,
     * `Asia/Kolkata`, `Indian/Chagos`, `Asia/Baghdad`, `Asia/Tehran`, `Atlantic/Reykjavik`, `Europe/Rome`, `Europe/Jersey`,
     * `America/Jamaica`, `Asia/Amman`, `Asia/Tokyo`, `Africa/Nairobi`, `Asia/Bishkek`, `Asia/Phnom_Penh`, `Pacific/Tarawa`,
     * `Pacific/Enderbury`, `Pacific/Kiritimati`, `Indian/Comoro`, `America/St_Kitts`, `Asia/Pyongyang`, `Asia/Seoul`,
     * `Asia/Kuwait`, `America/Cayman`, `Asia/Almaty`, `Asia/Qyzylorda`, `Asia/Aqtobe`, `Asia/Aqtau`, `Asia/Oral`,
     * `Asia/Vientiane`, `Asia/Beirut`, `America/St_Lucia`, `Europe/Vaduz`, `Asia/Colombo`, `Africa/Monrovia`, `Africa/Maseru`,
     * `Europe/Vilnius`, `Europe/Luxembourg`, `Europe/Riga`, `Africa/Tripoli`, `Africa/Casablanca`, `Europe/Monaco`,
     * `Europe/Chisinau`, `Europe/Podgorica`, `America/Marigot`, `Indian/Antananarivo`, `Pacific/Majuro`, `Pacific/Kwajalein`,
     * `Europe/Skopje`, `Africa/Bamako`, `Asia/Rangoon`, `Asia/Ulaanbaatar`, `Asia/Hovd`, `Asia/Choibalsan`, `Asia/Macau`,
     * `Pacific/Saipan`, `America/Martinique`, `Africa/Nouakchott`, `America/Montserrat`, `Europe/Malta`, `Indian/Mauritius`,
     * `Indian/Maldives`, `Africa/Blantyre`, `America/Mexico_City`, `America/Cancun`, `America/Merida`, `America/Monterrey`,
     * `America/Matamoros`, `America/Mazatlan`, `America/Chihuahua`, `America/Ojinaga`, `America/Hermosillo`,
     * `America/Tijuana`, `America/Santa_Isabel`, `America/Bahia_Banderas`, `Asia/Kuala_Lumpur`, `Asia/Kuching`,
     * `Africa/Maputo`, `Africa/Windhoek`, `Pacific/Noumea`, `Africa/Niamey`, `Pacific/Norfolk`, `Africa/Lagos`,
     * `America/Managua`, `Europe/Amsterdam`, `Europe/Oslo`, `Asia/Kathmandu`, `Pacific/Nauru`, `Pacific/Niue`,
     * `Pacific/Auckland`, `Pacific/Chatham`, `Asia/Muscat`, `America/Panama`, `America/Lima`, `Pacific/Tahiti`,
     * `Pacific/Marquesas`, `Pacific/Gambier`, `Pacific/Port_Moresby`, `Asia/Manila`, `Asia/Karachi`, `Europe/Warsaw`,
     * `America/Miquelon`, `Pacific/Pitcairn`, `America/Puerto_Rico`, `Asia/Gaza`, `Asia/Hebron`, `Europe/Lisbon`,
     * `Atlantic/Madeira`, `Atlantic/Azores`, `Pacific/Palau`, `America/Asuncion`, `Asia/Qatar`, `Indian/Reunion`,
     * `Europe/Bucharest`, `Europe/Belgrade`, `Europe/Kaliningrad`, `Europe/Moscow`, `Europe/Volgograd`, `Europe/Samara`,
     * `Asia/Yekaterinburg`, `Asia/Omsk`, `Asia/Novosibirsk`, `Asia/Novokuznetsk`, `Asia/Krasnoyarsk`, `Asia/Irkutsk`,
     * `Asia/Yakutsk`, `Asia/Khandyga`, `Asia/Vladivostok`, `Asia/Sakhalin`, `Asia/Ust-Nera`, `Asia/Magadan`, `Asia/Kamchatka`,
     * `Asia/Anadyr`, `Africa/Kigali`, `Asia/Riyadh`, `Pacific/Guadalcanal`, `Indian/Mahe`, `Africa/Khartoum`,
     * `Europe/Stockholm`, `Asia/Singapore`, `Atlantic/St_Helena`, `Europe/Ljubljana`, `Arctic/Longyearbyen`,
     * `Europe/Bratislava`, `Africa/Freetown`, `Europe/San_Marino`, `Africa/Dakar`, `Africa/Mogadishu`, `America/Paramaribo`,
     * `Africa/Juba`, `Africa/Sao_Tome`, `America/El_Salvador`, `America/Lower_Princes`, `Asia/Damascus`, `Africa/Mbabane`,
     * `America/Grand_Turk`, `Africa/Ndjamena`, `Indian/Kerguelen`, `Africa/Lome`, `Asia/Bangkok`, `Asia/Dushanbe`,
     * `Pacific/Fakaofo`, `Asia/Dili`, `Asia/Ashgabat`, `Africa/Tunis`, `Pacific/Tongatapu`, `Europe/Istanbul`,
     * `America/Port_of_Spain`, `Pacific/Funafuti`, `Asia/Taipei`, `Africa/Dar_es_Salaam`, `Europe/Kiev`, `Europe/Uzhgorod`,
     * `Europe/Zaporozhye`, `Europe/Simferopol`, `Africa/Kampala`, `Pacific/Johnston`, `Pacific/Midway`, `Pacific/Wake`,
     * `America/New_York`, `America/Detroit`, `America/Kentucky/Louisville`, `America/Kentucky/Monticello`,
     * `America/Indiana/Indianapolis`, `America/Indiana/Vincennes`, `America/Indiana/Winamac`, `America/Indiana/Marengo`,
     * `America/Indiana/Petersburg`, `America/Indiana/Vevay`, `America/Chicago`, `America/Indiana/Tell_City`,
     * `America/Indiana/Knox`, `America/Menominee`, `America/North_Dakota/Center`, `America/North_Dakota/New_Salem`,
     * `America/North_Dakota/Beulah`, `America/Denver`, `America/Boise`, `America/Phoenix`, `America/Los_Angeles`,
     * `America/Anchorage`, `America/Juneau`, `America/Sitka`, `America/Yakutat`, `America/Nome`, `America/Adak`,
     * `America/Metlakatla`, `Pacific/Honolulu`, `America/Montevideo`, `Asia/Samarkand`, `Asia/Tashkent`, `Europe/Vatican`,
     * `America/St_Vincent`, `America/Caracas`, `America/Tortola`, `America/St_Thomas`, `Asia/Ho_Chi_Minh`, `Pacific/Efate`,
     * `Pacific/Wallis`, `Pacific/Apia`, `Asia/Aden`, `Indian/Mayotte`, `Africa/Johannesburg`, `Africa/Lusaka`,
     * `Africa/Harare`, `UTC` - Default value: `UTC`
     */
    timezone?: pulumi.Input<string>;
    /**
     * Variable name
     */
    timezoneVariable?: pulumi.Input<string>;
    /**
     * Enable or disable default gateway tracking - Default value: `true`
     */
    trackDefaultGateway?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    trackDefaultGatewayVariable?: pulumi.Input<string>;
    /**
     * OMP Tag attached to routes based on interface tracking - Range: `1`-`4294967295`
     */
    trackInterfaceTag?: pulumi.Input<number>;
    /**
     * Variable name
     */
    trackInterfaceTagVariable?: pulumi.Input<string>;
    /**
     * Configure tracking of transport - Default value: `true`
     */
    trackTransport?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    trackTransportVariable?: pulumi.Input<string>;
    /**
     * Enable transport gateway - Default value: `false`
     */
    transportGateway?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    transportGatewayVariable?: pulumi.Input<string>;
}
