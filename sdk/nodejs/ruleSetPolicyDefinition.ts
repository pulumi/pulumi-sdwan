// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Rule Set Policy Definition .
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import sdwan:index/ruleSetPolicyDefinition:RuleSetPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class RuleSetPolicyDefinition extends pulumi.CustomResource {
    /**
     * Get an existing RuleSetPolicyDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RuleSetPolicyDefinitionState, opts?: pulumi.CustomResourceOptions): RuleSetPolicyDefinition {
        return new RuleSetPolicyDefinition(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/ruleSetPolicyDefinition:RuleSetPolicyDefinition';

    /**
     * Returns true if the given object is an instance of RuleSetPolicyDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RuleSetPolicyDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RuleSetPolicyDefinition.__pulumiType;
    }

    /**
     * The description of the policy definition
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The name of the policy definition
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * List of rules
     */
    public readonly rules!: pulumi.Output<outputs.RuleSetPolicyDefinitionRule[]>;
    /**
     * The version of the object
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a RuleSetPolicyDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RuleSetPolicyDefinitionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RuleSetPolicyDefinitionArgs | RuleSetPolicyDefinitionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RuleSetPolicyDefinitionState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as RuleSetPolicyDefinitionArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.rules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rules'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RuleSetPolicyDefinition.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RuleSetPolicyDefinition resources.
 */
export interface RuleSetPolicyDefinitionState {
    /**
     * The description of the policy definition
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the policy definition
     */
    name?: pulumi.Input<string>;
    /**
     * List of rules
     */
    rules?: pulumi.Input<pulumi.Input<inputs.RuleSetPolicyDefinitionRule>[]>;
    /**
     * The version of the object
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a RuleSetPolicyDefinition resource.
 */
export interface RuleSetPolicyDefinitionArgs {
    /**
     * The description of the policy definition
     */
    description: pulumi.Input<string>;
    /**
     * The name of the policy definition
     */
    name?: pulumi.Input<string>;
    /**
     * List of rules
     */
    rules: pulumi.Input<pulumi.Input<inputs.RuleSetPolicyDefinitionRule>[]>;
}
