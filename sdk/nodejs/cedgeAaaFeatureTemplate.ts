// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a cEdge AAA feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import sdwan:index/cedgeAaaFeatureTemplate:CedgeAaaFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class CedgeAaaFeatureTemplate extends pulumi.CustomResource {
    /**
     * Get an existing CedgeAaaFeatureTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CedgeAaaFeatureTemplateState, opts?: pulumi.CustomResourceOptions): CedgeAaaFeatureTemplate {
        return new CedgeAaaFeatureTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/cedgeAaaFeatureTemplate:CedgeAaaFeatureTemplate';

    /**
     * Returns true if the given object is an instance of CedgeAaaFeatureTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CedgeAaaFeatureTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CedgeAaaFeatureTemplate.__pulumiType;
    }

    /**
     * Configure the accounting rules
     */
    public readonly accountingRules!: pulumi.Output<outputs.CedgeAaaFeatureTemplateAccountingRule[] | undefined>;
    /**
     * For configuration mode commands. - Default value: `false`
     */
    public readonly authorizationConfigCommands!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly authorizationConfigCommandsVariable!: pulumi.Output<string | undefined>;
    /**
     * For enabling console authorization - Default value: `false`
     */
    public readonly authorizationConsole!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly authorizationConsoleVariable!: pulumi.Output<string | undefined>;
    /**
     * Configure the Authorization Rules
     */
    public readonly authorizationRules!: pulumi.Output<outputs.CedgeAaaFeatureTemplateAuthorizationRule[] | undefined>;
    /**
     * The description of the feature template
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    public readonly deviceTypes!: pulumi.Output<string[]>;
    /**
     * Accounting configurations parameters - Default value: `false`
     */
    public readonly dot1xAccounting!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly dot1xAccountingVariable!: pulumi.Output<string | undefined>;
    /**
     * Authentication configurations parameters - Default value: `false`
     */
    public readonly dot1xAuthentication!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly dot1xAuthenticationVariable!: pulumi.Output<string | undefined>;
    /**
     * The name of the feature template
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specify a RADIUS client
     */
    public readonly radiusClients!: pulumi.Output<outputs.CedgeAaaFeatureTemplateRadiusClient[] | undefined>;
    /**
     * Authentication Type - Choices: `any`, `all`, `session-key` - Default value: `any`
     */
    public readonly radiusDynamicAuthorAuthenticationType!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly radiusDynamicAuthorAuthenticationTypeVariable!: pulumi.Output<string | undefined>;
    /**
     * Domain Stripping - Choices: `yes`, `no`, `right-to-left` - Default value: `no`
     */
    public readonly radiusDynamicAuthorDomainStripping!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly radiusDynamicAuthorDomainStrippingVariable!: pulumi.Output<string | undefined>;
    /**
     * Specify Radius Dynamic Author Port - Range: `0`-`65535` - Default value: `1700`
     */
    public readonly radiusDynamicAuthorPort!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly radiusDynamicAuthorPortVariable!: pulumi.Output<string | undefined>;
    /**
     * Specify a radius dynamic author server-key
     */
    public readonly radiusDynamicAuthorServerKey!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly radiusDynamicAuthorServerKeyVariable!: pulumi.Output<string | undefined>;
    /**
     * Configure the Radius serverGroup
     */
    public readonly radiusServerGroups!: pulumi.Output<outputs.CedgeAaaFeatureTemplateRadiusServerGroup[] | undefined>;
    /**
     * CTS Authorization List
     */
    public readonly radiusTrustsecCtsAuthorizationList!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly radiusTrustsecCtsAuthorizationListVariable!: pulumi.Output<string | undefined>;
    /**
     * RADIUS trustsec group
     */
    public readonly radiusTrustsecGroup!: pulumi.Output<string | undefined>;
    /**
     * ServerGroups priority order - Default value: `local`
     */
    public readonly serverGroupsPriorityOrder!: pulumi.Output<string | undefined>;
    /**
     * Configure the TACACS serverGroup
     */
    public readonly tacacsServerGroups!: pulumi.Output<outputs.CedgeAaaFeatureTemplateTacacsServerGroup[] | undefined>;
    /**
     * The template type
     */
    public /*out*/ readonly templateType!: pulumi.Output<string>;
    /**
     * Create local login account
     */
    public readonly users!: pulumi.Output<outputs.CedgeAaaFeatureTemplateUser[] | undefined>;
    /**
     * The version of the feature template
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a CedgeAaaFeatureTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CedgeAaaFeatureTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CedgeAaaFeatureTemplateArgs | CedgeAaaFeatureTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CedgeAaaFeatureTemplateState | undefined;
            resourceInputs["accountingRules"] = state ? state.accountingRules : undefined;
            resourceInputs["authorizationConfigCommands"] = state ? state.authorizationConfigCommands : undefined;
            resourceInputs["authorizationConfigCommandsVariable"] = state ? state.authorizationConfigCommandsVariable : undefined;
            resourceInputs["authorizationConsole"] = state ? state.authorizationConsole : undefined;
            resourceInputs["authorizationConsoleVariable"] = state ? state.authorizationConsoleVariable : undefined;
            resourceInputs["authorizationRules"] = state ? state.authorizationRules : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceTypes"] = state ? state.deviceTypes : undefined;
            resourceInputs["dot1xAccounting"] = state ? state.dot1xAccounting : undefined;
            resourceInputs["dot1xAccountingVariable"] = state ? state.dot1xAccountingVariable : undefined;
            resourceInputs["dot1xAuthentication"] = state ? state.dot1xAuthentication : undefined;
            resourceInputs["dot1xAuthenticationVariable"] = state ? state.dot1xAuthenticationVariable : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["radiusClients"] = state ? state.radiusClients : undefined;
            resourceInputs["radiusDynamicAuthorAuthenticationType"] = state ? state.radiusDynamicAuthorAuthenticationType : undefined;
            resourceInputs["radiusDynamicAuthorAuthenticationTypeVariable"] = state ? state.radiusDynamicAuthorAuthenticationTypeVariable : undefined;
            resourceInputs["radiusDynamicAuthorDomainStripping"] = state ? state.radiusDynamicAuthorDomainStripping : undefined;
            resourceInputs["radiusDynamicAuthorDomainStrippingVariable"] = state ? state.radiusDynamicAuthorDomainStrippingVariable : undefined;
            resourceInputs["radiusDynamicAuthorPort"] = state ? state.radiusDynamicAuthorPort : undefined;
            resourceInputs["radiusDynamicAuthorPortVariable"] = state ? state.radiusDynamicAuthorPortVariable : undefined;
            resourceInputs["radiusDynamicAuthorServerKey"] = state ? state.radiusDynamicAuthorServerKey : undefined;
            resourceInputs["radiusDynamicAuthorServerKeyVariable"] = state ? state.radiusDynamicAuthorServerKeyVariable : undefined;
            resourceInputs["radiusServerGroups"] = state ? state.radiusServerGroups : undefined;
            resourceInputs["radiusTrustsecCtsAuthorizationList"] = state ? state.radiusTrustsecCtsAuthorizationList : undefined;
            resourceInputs["radiusTrustsecCtsAuthorizationListVariable"] = state ? state.radiusTrustsecCtsAuthorizationListVariable : undefined;
            resourceInputs["radiusTrustsecGroup"] = state ? state.radiusTrustsecGroup : undefined;
            resourceInputs["serverGroupsPriorityOrder"] = state ? state.serverGroupsPriorityOrder : undefined;
            resourceInputs["tacacsServerGroups"] = state ? state.tacacsServerGroups : undefined;
            resourceInputs["templateType"] = state ? state.templateType : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as CedgeAaaFeatureTemplateArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.deviceTypes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceTypes'");
            }
            resourceInputs["accountingRules"] = args ? args.accountingRules : undefined;
            resourceInputs["authorizationConfigCommands"] = args ? args.authorizationConfigCommands : undefined;
            resourceInputs["authorizationConfigCommandsVariable"] = args ? args.authorizationConfigCommandsVariable : undefined;
            resourceInputs["authorizationConsole"] = args ? args.authorizationConsole : undefined;
            resourceInputs["authorizationConsoleVariable"] = args ? args.authorizationConsoleVariable : undefined;
            resourceInputs["authorizationRules"] = args ? args.authorizationRules : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceTypes"] = args ? args.deviceTypes : undefined;
            resourceInputs["dot1xAccounting"] = args ? args.dot1xAccounting : undefined;
            resourceInputs["dot1xAccountingVariable"] = args ? args.dot1xAccountingVariable : undefined;
            resourceInputs["dot1xAuthentication"] = args ? args.dot1xAuthentication : undefined;
            resourceInputs["dot1xAuthenticationVariable"] = args ? args.dot1xAuthenticationVariable : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["radiusClients"] = args ? args.radiusClients : undefined;
            resourceInputs["radiusDynamicAuthorAuthenticationType"] = args ? args.radiusDynamicAuthorAuthenticationType : undefined;
            resourceInputs["radiusDynamicAuthorAuthenticationTypeVariable"] = args ? args.radiusDynamicAuthorAuthenticationTypeVariable : undefined;
            resourceInputs["radiusDynamicAuthorDomainStripping"] = args ? args.radiusDynamicAuthorDomainStripping : undefined;
            resourceInputs["radiusDynamicAuthorDomainStrippingVariable"] = args ? args.radiusDynamicAuthorDomainStrippingVariable : undefined;
            resourceInputs["radiusDynamicAuthorPort"] = args ? args.radiusDynamicAuthorPort : undefined;
            resourceInputs["radiusDynamicAuthorPortVariable"] = args ? args.radiusDynamicAuthorPortVariable : undefined;
            resourceInputs["radiusDynamicAuthorServerKey"] = args ? args.radiusDynamicAuthorServerKey : undefined;
            resourceInputs["radiusDynamicAuthorServerKeyVariable"] = args ? args.radiusDynamicAuthorServerKeyVariable : undefined;
            resourceInputs["radiusServerGroups"] = args ? args.radiusServerGroups : undefined;
            resourceInputs["radiusTrustsecCtsAuthorizationList"] = args ? args.radiusTrustsecCtsAuthorizationList : undefined;
            resourceInputs["radiusTrustsecCtsAuthorizationListVariable"] = args ? args.radiusTrustsecCtsAuthorizationListVariable : undefined;
            resourceInputs["radiusTrustsecGroup"] = args ? args.radiusTrustsecGroup : undefined;
            resourceInputs["serverGroupsPriorityOrder"] = args ? args.serverGroupsPriorityOrder : undefined;
            resourceInputs["tacacsServerGroups"] = args ? args.tacacsServerGroups : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
            resourceInputs["templateType"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CedgeAaaFeatureTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CedgeAaaFeatureTemplate resources.
 */
export interface CedgeAaaFeatureTemplateState {
    /**
     * Configure the accounting rules
     */
    accountingRules?: pulumi.Input<pulumi.Input<inputs.CedgeAaaFeatureTemplateAccountingRule>[]>;
    /**
     * For configuration mode commands. - Default value: `false`
     */
    authorizationConfigCommands?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    authorizationConfigCommandsVariable?: pulumi.Input<string>;
    /**
     * For enabling console authorization - Default value: `false`
     */
    authorizationConsole?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    authorizationConsoleVariable?: pulumi.Input<string>;
    /**
     * Configure the Authorization Rules
     */
    authorizationRules?: pulumi.Input<pulumi.Input<inputs.CedgeAaaFeatureTemplateAuthorizationRule>[]>;
    /**
     * The description of the feature template
     */
    description?: pulumi.Input<string>;
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Accounting configurations parameters - Default value: `false`
     */
    dot1xAccounting?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    dot1xAccountingVariable?: pulumi.Input<string>;
    /**
     * Authentication configurations parameters - Default value: `false`
     */
    dot1xAuthentication?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    dot1xAuthenticationVariable?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Specify a RADIUS client
     */
    radiusClients?: pulumi.Input<pulumi.Input<inputs.CedgeAaaFeatureTemplateRadiusClient>[]>;
    /**
     * Authentication Type - Choices: `any`, `all`, `session-key` - Default value: `any`
     */
    radiusDynamicAuthorAuthenticationType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    radiusDynamicAuthorAuthenticationTypeVariable?: pulumi.Input<string>;
    /**
     * Domain Stripping - Choices: `yes`, `no`, `right-to-left` - Default value: `no`
     */
    radiusDynamicAuthorDomainStripping?: pulumi.Input<string>;
    /**
     * Variable name
     */
    radiusDynamicAuthorDomainStrippingVariable?: pulumi.Input<string>;
    /**
     * Specify Radius Dynamic Author Port - Range: `0`-`65535` - Default value: `1700`
     */
    radiusDynamicAuthorPort?: pulumi.Input<number>;
    /**
     * Variable name
     */
    radiusDynamicAuthorPortVariable?: pulumi.Input<string>;
    /**
     * Specify a radius dynamic author server-key
     */
    radiusDynamicAuthorServerKey?: pulumi.Input<string>;
    /**
     * Variable name
     */
    radiusDynamicAuthorServerKeyVariable?: pulumi.Input<string>;
    /**
     * Configure the Radius serverGroup
     */
    radiusServerGroups?: pulumi.Input<pulumi.Input<inputs.CedgeAaaFeatureTemplateRadiusServerGroup>[]>;
    /**
     * CTS Authorization List
     */
    radiusTrustsecCtsAuthorizationList?: pulumi.Input<string>;
    /**
     * Variable name
     */
    radiusTrustsecCtsAuthorizationListVariable?: pulumi.Input<string>;
    /**
     * RADIUS trustsec group
     */
    radiusTrustsecGroup?: pulumi.Input<string>;
    /**
     * ServerGroups priority order - Default value: `local`
     */
    serverGroupsPriorityOrder?: pulumi.Input<string>;
    /**
     * Configure the TACACS serverGroup
     */
    tacacsServerGroups?: pulumi.Input<pulumi.Input<inputs.CedgeAaaFeatureTemplateTacacsServerGroup>[]>;
    /**
     * The template type
     */
    templateType?: pulumi.Input<string>;
    /**
     * Create local login account
     */
    users?: pulumi.Input<pulumi.Input<inputs.CedgeAaaFeatureTemplateUser>[]>;
    /**
     * The version of the feature template
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CedgeAaaFeatureTemplate resource.
 */
export interface CedgeAaaFeatureTemplateArgs {
    /**
     * Configure the accounting rules
     */
    accountingRules?: pulumi.Input<pulumi.Input<inputs.CedgeAaaFeatureTemplateAccountingRule>[]>;
    /**
     * For configuration mode commands. - Default value: `false`
     */
    authorizationConfigCommands?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    authorizationConfigCommandsVariable?: pulumi.Input<string>;
    /**
     * For enabling console authorization - Default value: `false`
     */
    authorizationConsole?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    authorizationConsoleVariable?: pulumi.Input<string>;
    /**
     * Configure the Authorization Rules
     */
    authorizationRules?: pulumi.Input<pulumi.Input<inputs.CedgeAaaFeatureTemplateAuthorizationRule>[]>;
    /**
     * The description of the feature template
     */
    description: pulumi.Input<string>;
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Accounting configurations parameters - Default value: `false`
     */
    dot1xAccounting?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    dot1xAccountingVariable?: pulumi.Input<string>;
    /**
     * Authentication configurations parameters - Default value: `false`
     */
    dot1xAuthentication?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    dot1xAuthenticationVariable?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Specify a RADIUS client
     */
    radiusClients?: pulumi.Input<pulumi.Input<inputs.CedgeAaaFeatureTemplateRadiusClient>[]>;
    /**
     * Authentication Type - Choices: `any`, `all`, `session-key` - Default value: `any`
     */
    radiusDynamicAuthorAuthenticationType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    radiusDynamicAuthorAuthenticationTypeVariable?: pulumi.Input<string>;
    /**
     * Domain Stripping - Choices: `yes`, `no`, `right-to-left` - Default value: `no`
     */
    radiusDynamicAuthorDomainStripping?: pulumi.Input<string>;
    /**
     * Variable name
     */
    radiusDynamicAuthorDomainStrippingVariable?: pulumi.Input<string>;
    /**
     * Specify Radius Dynamic Author Port - Range: `0`-`65535` - Default value: `1700`
     */
    radiusDynamicAuthorPort?: pulumi.Input<number>;
    /**
     * Variable name
     */
    radiusDynamicAuthorPortVariable?: pulumi.Input<string>;
    /**
     * Specify a radius dynamic author server-key
     */
    radiusDynamicAuthorServerKey?: pulumi.Input<string>;
    /**
     * Variable name
     */
    radiusDynamicAuthorServerKeyVariable?: pulumi.Input<string>;
    /**
     * Configure the Radius serverGroup
     */
    radiusServerGroups?: pulumi.Input<pulumi.Input<inputs.CedgeAaaFeatureTemplateRadiusServerGroup>[]>;
    /**
     * CTS Authorization List
     */
    radiusTrustsecCtsAuthorizationList?: pulumi.Input<string>;
    /**
     * Variable name
     */
    radiusTrustsecCtsAuthorizationListVariable?: pulumi.Input<string>;
    /**
     * RADIUS trustsec group
     */
    radiusTrustsecGroup?: pulumi.Input<string>;
    /**
     * ServerGroups priority order - Default value: `local`
     */
    serverGroupsPriorityOrder?: pulumi.Input<string>;
    /**
     * Configure the TACACS serverGroup
     */
    tacacsServerGroups?: pulumi.Input<pulumi.Input<inputs.CedgeAaaFeatureTemplateTacacsServerGroup>[]>;
    /**
     * Create local login account
     */
    users?: pulumi.Input<pulumi.Input<inputs.CedgeAaaFeatureTemplateUser>[]>;
}
