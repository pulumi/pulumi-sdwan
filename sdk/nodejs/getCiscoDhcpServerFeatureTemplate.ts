// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the Cisco DHCP Server feature template.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getCiscoDhcpServerFeatureTemplate({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getCiscoDhcpServerFeatureTemplate(args?: GetCiscoDhcpServerFeatureTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetCiscoDhcpServerFeatureTemplateResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getCiscoDhcpServerFeatureTemplate:getCiscoDhcpServerFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getCiscoDhcpServerFeatureTemplate.
 */
export interface GetCiscoDhcpServerFeatureTemplateArgs {
    /**
     * The id of the feature template
     */
    id?: string;
    /**
     * The name of the feature template
     */
    name?: string;
}

/**
 * A collection of values returned by getCiscoDhcpServerFeatureTemplate.
 */
export interface GetCiscoDhcpServerFeatureTemplateResult {
    /**
     * Configure IPv4 prefix range of the DHCP address pool
     */
    readonly addressPool: string;
    /**
     * Variable name
     */
    readonly addressPoolVariable: string;
    /**
     * Set IP address of default gateway
     */
    readonly defaultGateway: string;
    /**
     * Variable name
     */
    readonly defaultGatewayVariable: string;
    /**
     * The description of the feature template
     */
    readonly description: string;
    /**
     * List of supported device types
     */
    readonly deviceTypes: string[];
    /**
     * Configure one or more DNS server IP addresses
     */
    readonly dnsServers: string[];
    /**
     * Variable name
     */
    readonly dnsServersVariable: string;
    /**
     * Set domain name client uses to resolve hostnames
     */
    readonly domainName: string;
    /**
     * Variable name
     */
    readonly domainNameVariable: string;
    /**
     * Configure IPv4 address to exclude from DHCP address pool
     */
    readonly excludeAddresses: string[];
    /**
     * Variable name
     */
    readonly excludeAddressesVariable: string;
    /**
     * The id of the feature template
     */
    readonly id: string;
    /**
     * Set MTU on interface to DHCP client
     */
    readonly interfaceMtu: number;
    /**
     * Variable name
     */
    readonly interfaceMtuVariable: string;
    /**
     * Configure how long a DHCP-assigned IP address is valid
     */
    readonly leaseTime: number;
    /**
     * Variable name
     */
    readonly leaseTimeVariable: string;
    /**
     * The name of the feature template
     */
    readonly name: string;
    /**
     * Configure Options Code
     */
    readonly options: outputs.GetCiscoDhcpServerFeatureTemplateOption[];
    /**
     * Configure static IP addresses
     */
    readonly staticLeases: outputs.GetCiscoDhcpServerFeatureTemplateStaticLease[];
    /**
     * The template type
     */
    readonly templateType: string;
    /**
     * Configure TFTP server IP addresses
     */
    readonly tftpServers: string[];
    /**
     * Variable name
     */
    readonly tftpServersVariable: string;
    /**
     * The version of the feature template
     */
    readonly version: number;
}
/**
 * This data source can read the Cisco DHCP Server feature template.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getCiscoDhcpServerFeatureTemplate({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getCiscoDhcpServerFeatureTemplateOutput(args?: GetCiscoDhcpServerFeatureTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCiscoDhcpServerFeatureTemplateResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sdwan:index/getCiscoDhcpServerFeatureTemplate:getCiscoDhcpServerFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getCiscoDhcpServerFeatureTemplate.
 */
export interface GetCiscoDhcpServerFeatureTemplateOutputArgs {
    /**
     * The id of the feature template
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
}
