// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Other UCSE Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Import
 *
 * Expected import identifier with the format: "other_ucse_feature_id,feature_profile_id"
 *
 * ```sh
 * $ pulumi import sdwan:index/otherUcseFeature:OtherUcseFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
 * ```
 */
export class OtherUcseFeature extends pulumi.CustomResource {
    /**
     * Get an existing OtherUcseFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OtherUcseFeatureState, opts?: pulumi.CustomResourceOptions): OtherUcseFeature {
        return new OtherUcseFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/otherUcseFeature:OtherUcseFeature';

    /**
     * Returns true if the given object is an instance of OtherUcseFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OtherUcseFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OtherUcseFeature.__pulumiType;
    }

    /**
     * Dedicated - Default value: `true`
     */
    public readonly accessPortDedicated!: pulumi.Output<boolean | undefined>;
    /**
     * , Attribute conditional on `accessPortDedicated` being equal to `false` - Choices: `ge2`, `te2`
     */
    public readonly accessPortSharedFailoverType!: pulumi.Output<string | undefined>;
    /**
     * , Attribute conditional on `accessPortDedicated` being equal to `false` - Choices: `ge1`, `ge2`, `ge3`, `te2`, `te3`,
     * `console`, `failover`
     */
    public readonly accessPortSharedType!: pulumi.Output<string | undefined>;
    /**
     * Assign priority - Range: `0`-`7`
     */
    public readonly assignPriority!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly assignPriorityVariable!: pulumi.Output<string | undefined>;
    /**
     * Bay - Range: `0`-`2`
     */
    public readonly bay!: pulumi.Output<number>;
    /**
     * Assign default gateway
     */
    public readonly defaultGateway!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly defaultGatewayVariable!: pulumi.Output<string | undefined>;
    /**
     * The description of the Feature
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Feature Profile ID
     */
    public readonly featureProfileId!: pulumi.Output<string>;
    /**
     * Interface name: GigabitEthernet0/<>/<> when present
     */
    public readonly interfaces!: pulumi.Output<outputs.OtherUcseFeatureInterface[] | undefined>;
    /**
     * Assign IPv4 address
     */
    public readonly ipv4Address!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipv4AddressVariable!: pulumi.Output<string | undefined>;
    /**
     * The name of the Feature
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Slot - Range: `0`-`3`
     */
    public readonly slot!: pulumi.Output<number>;
    /**
     * The version of the Feature
     */
    public /*out*/ readonly version!: pulumi.Output<number>;
    /**
     * Assign Vlan Id - Range: `2`-`4095`
     */
    public readonly vlanId!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly vlanIdVariable!: pulumi.Output<string | undefined>;

    /**
     * Create a OtherUcseFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OtherUcseFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OtherUcseFeatureArgs | OtherUcseFeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OtherUcseFeatureState | undefined;
            resourceInputs["accessPortDedicated"] = state ? state.accessPortDedicated : undefined;
            resourceInputs["accessPortSharedFailoverType"] = state ? state.accessPortSharedFailoverType : undefined;
            resourceInputs["accessPortSharedType"] = state ? state.accessPortSharedType : undefined;
            resourceInputs["assignPriority"] = state ? state.assignPriority : undefined;
            resourceInputs["assignPriorityVariable"] = state ? state.assignPriorityVariable : undefined;
            resourceInputs["bay"] = state ? state.bay : undefined;
            resourceInputs["defaultGateway"] = state ? state.defaultGateway : undefined;
            resourceInputs["defaultGatewayVariable"] = state ? state.defaultGatewayVariable : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["featureProfileId"] = state ? state.featureProfileId : undefined;
            resourceInputs["interfaces"] = state ? state.interfaces : undefined;
            resourceInputs["ipv4Address"] = state ? state.ipv4Address : undefined;
            resourceInputs["ipv4AddressVariable"] = state ? state.ipv4AddressVariable : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["slot"] = state ? state.slot : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["vlanId"] = state ? state.vlanId : undefined;
            resourceInputs["vlanIdVariable"] = state ? state.vlanIdVariable : undefined;
        } else {
            const args = argsOrState as OtherUcseFeatureArgs | undefined;
            if ((!args || args.bay === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bay'");
            }
            if ((!args || args.featureProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'featureProfileId'");
            }
            if ((!args || args.slot === undefined) && !opts.urn) {
                throw new Error("Missing required property 'slot'");
            }
            resourceInputs["accessPortDedicated"] = args ? args.accessPortDedicated : undefined;
            resourceInputs["accessPortSharedFailoverType"] = args ? args.accessPortSharedFailoverType : undefined;
            resourceInputs["accessPortSharedType"] = args ? args.accessPortSharedType : undefined;
            resourceInputs["assignPriority"] = args ? args.assignPriority : undefined;
            resourceInputs["assignPriorityVariable"] = args ? args.assignPriorityVariable : undefined;
            resourceInputs["bay"] = args ? args.bay : undefined;
            resourceInputs["defaultGateway"] = args ? args.defaultGateway : undefined;
            resourceInputs["defaultGatewayVariable"] = args ? args.defaultGatewayVariable : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["featureProfileId"] = args ? args.featureProfileId : undefined;
            resourceInputs["interfaces"] = args ? args.interfaces : undefined;
            resourceInputs["ipv4Address"] = args ? args.ipv4Address : undefined;
            resourceInputs["ipv4AddressVariable"] = args ? args.ipv4AddressVariable : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["slot"] = args ? args.slot : undefined;
            resourceInputs["vlanId"] = args ? args.vlanId : undefined;
            resourceInputs["vlanIdVariable"] = args ? args.vlanIdVariable : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OtherUcseFeature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OtherUcseFeature resources.
 */
export interface OtherUcseFeatureState {
    /**
     * Dedicated - Default value: `true`
     */
    accessPortDedicated?: pulumi.Input<boolean>;
    /**
     * , Attribute conditional on `accessPortDedicated` being equal to `false` - Choices: `ge2`, `te2`
     */
    accessPortSharedFailoverType?: pulumi.Input<string>;
    /**
     * , Attribute conditional on `accessPortDedicated` being equal to `false` - Choices: `ge1`, `ge2`, `ge3`, `te2`, `te3`,
     * `console`, `failover`
     */
    accessPortSharedType?: pulumi.Input<string>;
    /**
     * Assign priority - Range: `0`-`7`
     */
    assignPriority?: pulumi.Input<number>;
    /**
     * Variable name
     */
    assignPriorityVariable?: pulumi.Input<string>;
    /**
     * Bay - Range: `0`-`2`
     */
    bay?: pulumi.Input<number>;
    /**
     * Assign default gateway
     */
    defaultGateway?: pulumi.Input<string>;
    /**
     * Variable name
     */
    defaultGatewayVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * Interface name: GigabitEthernet0/<>/<> when present
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.OtherUcseFeatureInterface>[]>;
    /**
     * Assign IPv4 address
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4AddressVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * Slot - Range: `0`-`3`
     */
    slot?: pulumi.Input<number>;
    /**
     * The version of the Feature
     */
    version?: pulumi.Input<number>;
    /**
     * Assign Vlan Id - Range: `2`-`4095`
     */
    vlanId?: pulumi.Input<number>;
    /**
     * Variable name
     */
    vlanIdVariable?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OtherUcseFeature resource.
 */
export interface OtherUcseFeatureArgs {
    /**
     * Dedicated - Default value: `true`
     */
    accessPortDedicated?: pulumi.Input<boolean>;
    /**
     * , Attribute conditional on `accessPortDedicated` being equal to `false` - Choices: `ge2`, `te2`
     */
    accessPortSharedFailoverType?: pulumi.Input<string>;
    /**
     * , Attribute conditional on `accessPortDedicated` being equal to `false` - Choices: `ge1`, `ge2`, `ge3`, `te2`, `te3`,
     * `console`, `failover`
     */
    accessPortSharedType?: pulumi.Input<string>;
    /**
     * Assign priority - Range: `0`-`7`
     */
    assignPriority?: pulumi.Input<number>;
    /**
     * Variable name
     */
    assignPriorityVariable?: pulumi.Input<string>;
    /**
     * Bay - Range: `0`-`2`
     */
    bay: pulumi.Input<number>;
    /**
     * Assign default gateway
     */
    defaultGateway?: pulumi.Input<string>;
    /**
     * Variable name
     */
    defaultGatewayVariable?: pulumi.Input<string>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * Interface name: GigabitEthernet0/<>/<> when present
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.OtherUcseFeatureInterface>[]>;
    /**
     * Assign IPv4 address
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4AddressVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * Slot - Range: `0`-`3`
     */
    slot: pulumi.Input<number>;
    /**
     * Assign Vlan Id - Range: `2`-`4095`
     */
    vlanId?: pulumi.Input<number>;
    /**
     * Variable name
     */
    vlanIdVariable?: pulumi.Input<string>;
}
