// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the DNS Security Policy Definition .
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getDnsSecurityPolicyDefinition({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getDnsSecurityPolicyDefinition(args: GetDnsSecurityPolicyDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsSecurityPolicyDefinitionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getDnsSecurityPolicyDefinition:getDnsSecurityPolicyDefinition", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getDnsSecurityPolicyDefinition.
 */
export interface GetDnsSecurityPolicyDefinitionArgs {
    /**
     * The id of the object
     */
    id: string;
}

/**
 * A collection of values returned by getDnsSecurityPolicyDefinition.
 */
export interface GetDnsSecurityPolicyDefinitionResult {
    /**
     * Credentials feature template ID
     */
    readonly ciscoSigCredentialsFeatureTemplateId: string;
    /**
     * Credentials feature template version
     */
    readonly ciscoSigCredentialsFeatureTemplateVersion: number;
    /**
     * Only relevant when `umbrellaDnsDefault` is `false`
     */
    readonly customDnsServerIp: string;
    /**
     * The description of the policy definition.
     */
    readonly description: string;
    /**
     * Should DNSCrypt be enabled
     */
    readonly dnscrypt: boolean;
    /**
     * Local domain bypass list ID
     */
    readonly domainListId: string;
    /**
     * Local domain bypass list version
     */
    readonly domainListVersion: number;
    /**
     * The id of the object
     */
    readonly id: string;
    /**
     * Should the local domain bypass list be enabled
     */
    readonly localDomainBypassEnabled: boolean;
    /**
     * Should use match all VPN
     */
    readonly matchAllVpn: boolean;
    /**
     * The name of the policy definition.
     */
    readonly name: string;
    /**
     * Only relevant when `matchAllVpn` is `false`
     */
    readonly targetVpns: outputs.GetDnsSecurityPolicyDefinitionTargetVpn[];
    /**
     * Should use umbrella as DNS Server
     */
    readonly umbrellaDnsDefault: boolean;
    /**
     * The version of the object
     */
    readonly version: number;
}
/**
 * This data source can read the DNS Security Policy Definition .
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getDnsSecurityPolicyDefinition({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getDnsSecurityPolicyDefinitionOutput(args: GetDnsSecurityPolicyDefinitionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDnsSecurityPolicyDefinitionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sdwan:index/getDnsSecurityPolicyDefinition:getDnsSecurityPolicyDefinition", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getDnsSecurityPolicyDefinition.
 */
export interface GetDnsSecurityPolicyDefinitionOutputArgs {
    /**
     * The id of the object
     */
    id: pulumi.Input<string>;
}
