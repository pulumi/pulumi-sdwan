// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the Service DHCP Server Feature.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getServiceDhcpServerFeature({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 * });
 * ```
 */
export function getServiceDhcpServerFeature(args: GetServiceDhcpServerFeatureArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceDhcpServerFeatureResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getServiceDhcpServerFeature:getServiceDhcpServerFeature", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceDhcpServerFeature.
 */
export interface GetServiceDhcpServerFeatureArgs {
    /**
     * Feature Profile ID
     */
    featureProfileId: string;
    /**
     * The id of the Feature
     */
    id: string;
}

/**
 * A collection of values returned by getServiceDhcpServerFeature.
 */
export interface GetServiceDhcpServerFeatureResult {
    /**
     * Set IP address of default gateway
     */
    readonly defaultGateway: string;
    /**
     * Variable name
     */
    readonly defaultGatewayVariable: string;
    /**
     * The description of the Feature
     */
    readonly description: string;
    /**
     * Configure one or more DNS server IP addresses
     */
    readonly dnsServers: string[];
    /**
     * Variable name
     */
    readonly dnsServersVariable: string;
    /**
     * Set domain name client uses to resolve hostnames
     */
    readonly domainName: string;
    /**
     * Variable name
     */
    readonly domainNameVariable: string;
    /**
     * Variable name
     */
    readonly excludeVariable: string;
    /**
     * Configure IPv4 address to exclude from DHCP address pool
     */
    readonly excludes: string[];
    /**
     * Feature Profile ID
     */
    readonly featureProfileId: string;
    /**
     * The id of the Feature
     */
    readonly id: string;
    /**
     * Set MTU on interface to DHCP client
     */
    readonly interfaceMtu: number;
    /**
     * Variable name
     */
    readonly interfaceMtuVariable: string;
    /**
     * Configure how long a DHCP-assigned IP address is valid
     */
    readonly leaseTime: number;
    /**
     * Variable name
     */
    readonly leaseTimeVariable: string;
    /**
     * The name of the Feature
     */
    readonly name: string;
    /**
     * Network Address
     */
    readonly networkAddress: string;
    /**
     * Variable name
     */
    readonly networkAddressVariable: string;
    /**
     * Configure Options Code
     */
    readonly optionCodes: outputs.GetServiceDhcpServerFeatureOptionCode[];
    /**
     * Configure static IP addresses
     */
    readonly staticLeases: outputs.GetServiceDhcpServerFeatureStaticLease[];
    /**
     * Subnet Mask
     */
    readonly subnetMask: string;
    /**
     * Variable name
     */
    readonly subnetMaskVariable: string;
    /**
     * Configure TFTP server IP addresses
     */
    readonly tftpServers: string[];
    /**
     * Variable name
     */
    readonly tftpServersVariable: string;
    /**
     * The version of the Feature
     */
    readonly version: number;
}
/**
 * This data source can read the Service DHCP Server Feature.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getServiceDhcpServerFeature({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 * });
 * ```
 */
export function getServiceDhcpServerFeatureOutput(args: GetServiceDhcpServerFeatureOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetServiceDhcpServerFeatureResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sdwan:index/getServiceDhcpServerFeature:getServiceDhcpServerFeature", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceDhcpServerFeature.
 */
export interface GetServiceDhcpServerFeatureOutputArgs {
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * The id of the Feature
     */
    id: pulumi.Input<string>;
}
