// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a System SNMP profile parcel.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import sdwan:index/systemSnmpProfileParcel:SystemSnmpProfileParcel example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class SystemSnmpProfileParcel extends pulumi.CustomResource {
    /**
     * Get an existing SystemSnmpProfileParcel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemSnmpProfileParcelState, opts?: pulumi.CustomResourceOptions): SystemSnmpProfileParcel {
        return new SystemSnmpProfileParcel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/systemSnmpProfileParcel:SystemSnmpProfileParcel';

    /**
     * Returns true if the given object is an instance of SystemSnmpProfileParcel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemSnmpProfileParcel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemSnmpProfileParcel.__pulumiType;
    }

    /**
     * Configure SNMP community
     */
    public readonly communities!: pulumi.Output<outputs.SystemSnmpProfileParcelCommunity[] | undefined>;
    /**
     * Set the contact for this managed node
     */
    public readonly contactPerson!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly contactPersonVariable!: pulumi.Output<string | undefined>;
    /**
     * The description of the profile parcel
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Feature Profile ID
     */
    public readonly featureProfileId!: pulumi.Output<string | undefined>;
    /**
     * Configure an SNMP group
     */
    public readonly groups!: pulumi.Output<outputs.SystemSnmpProfileParcelGroup[] | undefined>;
    /**
     * Set the physical location of this managed node
     */
    public readonly locationOfDevice!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly locationOfDeviceVariable!: pulumi.Output<string | undefined>;
    /**
     * The name of the profile parcel
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable or disable SNMP - Default value: `false`
     */
    public readonly shutdown!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly shutdownVariable!: pulumi.Output<string | undefined>;
    /**
     * Configure SNMP server to receive SNMP traps
     */
    public readonly trapTargetServers!: pulumi.Output<outputs.SystemSnmpProfileParcelTrapTargetServer[] | undefined>;
    /**
     * Configure an SNMP user
     */
    public readonly users!: pulumi.Output<outputs.SystemSnmpProfileParcelUser[] | undefined>;
    /**
     * The version of the profile parcel
     */
    public /*out*/ readonly version!: pulumi.Output<number>;
    /**
     * Configure a view record
     */
    public readonly views!: pulumi.Output<outputs.SystemSnmpProfileParcelView[] | undefined>;

    /**
     * Create a SystemSnmpProfileParcel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemSnmpProfileParcelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemSnmpProfileParcelArgs | SystemSnmpProfileParcelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemSnmpProfileParcelState | undefined;
            resourceInputs["communities"] = state ? state.communities : undefined;
            resourceInputs["contactPerson"] = state ? state.contactPerson : undefined;
            resourceInputs["contactPersonVariable"] = state ? state.contactPersonVariable : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["featureProfileId"] = state ? state.featureProfileId : undefined;
            resourceInputs["groups"] = state ? state.groups : undefined;
            resourceInputs["locationOfDevice"] = state ? state.locationOfDevice : undefined;
            resourceInputs["locationOfDeviceVariable"] = state ? state.locationOfDeviceVariable : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["shutdown"] = state ? state.shutdown : undefined;
            resourceInputs["shutdownVariable"] = state ? state.shutdownVariable : undefined;
            resourceInputs["trapTargetServers"] = state ? state.trapTargetServers : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["views"] = state ? state.views : undefined;
        } else {
            const args = argsOrState as SystemSnmpProfileParcelArgs | undefined;
            resourceInputs["communities"] = args ? args.communities : undefined;
            resourceInputs["contactPerson"] = args ? args.contactPerson : undefined;
            resourceInputs["contactPersonVariable"] = args ? args.contactPersonVariable : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["featureProfileId"] = args ? args.featureProfileId : undefined;
            resourceInputs["groups"] = args ? args.groups : undefined;
            resourceInputs["locationOfDevice"] = args ? args.locationOfDevice : undefined;
            resourceInputs["locationOfDeviceVariable"] = args ? args.locationOfDeviceVariable : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["shutdown"] = args ? args.shutdown : undefined;
            resourceInputs["shutdownVariable"] = args ? args.shutdownVariable : undefined;
            resourceInputs["trapTargetServers"] = args ? args.trapTargetServers : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
            resourceInputs["views"] = args ? args.views : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemSnmpProfileParcel.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemSnmpProfileParcel resources.
 */
export interface SystemSnmpProfileParcelState {
    /**
     * Configure SNMP community
     */
    communities?: pulumi.Input<pulumi.Input<inputs.SystemSnmpProfileParcelCommunity>[]>;
    /**
     * Set the contact for this managed node
     */
    contactPerson?: pulumi.Input<string>;
    /**
     * Variable name
     */
    contactPersonVariable?: pulumi.Input<string>;
    /**
     * The description of the profile parcel
     */
    description?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * Configure an SNMP group
     */
    groups?: pulumi.Input<pulumi.Input<inputs.SystemSnmpProfileParcelGroup>[]>;
    /**
     * Set the physical location of this managed node
     */
    locationOfDevice?: pulumi.Input<string>;
    /**
     * Variable name
     */
    locationOfDeviceVariable?: pulumi.Input<string>;
    /**
     * The name of the profile parcel
     */
    name?: pulumi.Input<string>;
    /**
     * Enable or disable SNMP - Default value: `false`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * Configure SNMP server to receive SNMP traps
     */
    trapTargetServers?: pulumi.Input<pulumi.Input<inputs.SystemSnmpProfileParcelTrapTargetServer>[]>;
    /**
     * Configure an SNMP user
     */
    users?: pulumi.Input<pulumi.Input<inputs.SystemSnmpProfileParcelUser>[]>;
    /**
     * The version of the profile parcel
     */
    version?: pulumi.Input<number>;
    /**
     * Configure a view record
     */
    views?: pulumi.Input<pulumi.Input<inputs.SystemSnmpProfileParcelView>[]>;
}

/**
 * The set of arguments for constructing a SystemSnmpProfileParcel resource.
 */
export interface SystemSnmpProfileParcelArgs {
    /**
     * Configure SNMP community
     */
    communities?: pulumi.Input<pulumi.Input<inputs.SystemSnmpProfileParcelCommunity>[]>;
    /**
     * Set the contact for this managed node
     */
    contactPerson?: pulumi.Input<string>;
    /**
     * Variable name
     */
    contactPersonVariable?: pulumi.Input<string>;
    /**
     * The description of the profile parcel
     */
    description?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * Configure an SNMP group
     */
    groups?: pulumi.Input<pulumi.Input<inputs.SystemSnmpProfileParcelGroup>[]>;
    /**
     * Set the physical location of this managed node
     */
    locationOfDevice?: pulumi.Input<string>;
    /**
     * Variable name
     */
    locationOfDeviceVariable?: pulumi.Input<string>;
    /**
     * The name of the profile parcel
     */
    name?: pulumi.Input<string>;
    /**
     * Enable or disable SNMP - Default value: `false`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * Configure SNMP server to receive SNMP traps
     */
    trapTargetServers?: pulumi.Input<pulumi.Input<inputs.SystemSnmpProfileParcelTrapTargetServer>[]>;
    /**
     * Configure an SNMP user
     */
    users?: pulumi.Input<pulumi.Input<inputs.SystemSnmpProfileParcelUser>[]>;
    /**
     * Configure a view record
     */
    views?: pulumi.Input<pulumi.Input<inputs.SystemSnmpProfileParcelView>[]>;
}
