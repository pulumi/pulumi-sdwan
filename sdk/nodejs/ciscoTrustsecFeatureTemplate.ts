// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Cisco TrustSec feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import sdwan:index/ciscoTrustsecFeatureTemplate:CiscoTrustsecFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class CiscoTrustsecFeatureTemplate extends pulumi.CustomResource {
    /**
     * Get an existing CiscoTrustsecFeatureTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CiscoTrustsecFeatureTemplateState, opts?: pulumi.CustomResourceOptions): CiscoTrustsecFeatureTemplate {
        return new CiscoTrustsecFeatureTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/ciscoTrustsecFeatureTemplate:CiscoTrustsecFeatureTemplate';

    /**
     * Returns true if the given object is an instance of CiscoTrustsecFeatureTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CiscoTrustsecFeatureTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CiscoTrustsecFeatureTemplate.__pulumiType;
    }

    /**
     * Specify the TrustSec Network Access Device ID, should be same as mentioned in the Identity Services Engine (upto 32
     * char)
     */
    public readonly credentialsId!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly credentialsIdVariable!: pulumi.Output<string | undefined>;
    /**
     * Set the password for the device
     */
    public readonly credentialsPassword!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly credentialsPasswordVariable!: pulumi.Output<string | undefined>;
    /**
     * The description of the feature template
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Configure Local device security group <2..65519> - Range: `2`-`65519`
     */
    public readonly deviceSgt!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly deviceSgtVariable!: pulumi.Output<string | undefined>;
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    public readonly deviceTypes!: pulumi.Output<string[]>;
    /**
     * Enable Role-based Access Control enforcement - Default value: `false`
     */
    public readonly enableEnforcement!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly enableEnforcementVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable CTS SXP support - Default value: `false`
     */
    public readonly enableSxp!: pulumi.Output<boolean | undefined>;
    /**
     * Configure Maximum allowed hold-time for listener in seconds <1..65534> - Range: `1`-`65534` - Default value: `180`
     */
    public readonly maximumListenerHoldTime!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly maximumListenerHoldTimeVariable!: pulumi.Output<string | undefined>;
    /**
     * Configure Minimum allowed hold-time for listener in seconds <1..65534> - Range: `1`-`65534` - Default value: `90`
     */
    public readonly minimumListenerHoldTime!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly minimumListenerHoldTimeVariable!: pulumi.Output<string | undefined>;
    /**
     * The name of the feature template
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Configure Speaker hold-time in seconds <1..65534> - Range: `1`-`65534` - Default value: `120`
     */
    public readonly speakerHoldTime!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly speakerHoldTimeVariable!: pulumi.Output<string | undefined>;
    /**
     * Configure SXP Connections
     */
    public readonly sxpConnections!: pulumi.Output<outputs.CiscoTrustsecFeatureTemplateSxpConnection[] | undefined>;
    /**
     * Configure SXP default password
     */
    public readonly sxpDefaultPassword!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly sxpDefaultPasswordVariable!: pulumi.Output<string | undefined>;
    /**
     * Configure SXP key-chain
     */
    public readonly sxpKeyChain!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly sxpKeyChainVariable!: pulumi.Output<string | undefined>;
    /**
     * Enables logging for IP-to-SGT binding changes - Default value: `false`
     */
    public readonly sxpLogBindingChanges!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly sxpLogBindingChangesVariable!: pulumi.Output<string | undefined>;
    /**
     * Configure SXP Node ID <IP, 8 char string or interface name>
     */
    public readonly sxpNodeId!: pulumi.Output<string | undefined>;
    /**
     * Define SXP Node ID type <IP, 8 char string or interface name> - Choices: `ip`, `interface-name`, `8-char-hex-string` -
     * Default value: `ip`
     */
    public readonly sxpNodeIdType!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly sxpNodeIdVariable!: pulumi.Output<string | undefined>;
    /**
     * Configure the SXP reconciliation period in seconds <0..64000> - Range: `0`-`64000` - Default value: `120`
     */
    public readonly sxpReconciliationPeriod!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly sxpReconciliationPeriodVariable!: pulumi.Output<string | undefined>;
    /**
     * Configure Retry period for SXP connection in seconds <0..64000> - Range: `0`-`64000` - Default value: `120`
     */
    public readonly sxpRetryPeriod!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly sxpRetryPeriodVariable!: pulumi.Output<string | undefined>;
    /**
     * SXP Source IP
     */
    public readonly sxpSourceIp!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly sxpSourceIpVariable!: pulumi.Output<string | undefined>;
    /**
     * The template type
     */
    public /*out*/ readonly templateType!: pulumi.Output<string>;
    /**
     * The version of the feature template
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a CiscoTrustsecFeatureTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CiscoTrustsecFeatureTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CiscoTrustsecFeatureTemplateArgs | CiscoTrustsecFeatureTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CiscoTrustsecFeatureTemplateState | undefined;
            resourceInputs["credentialsId"] = state ? state.credentialsId : undefined;
            resourceInputs["credentialsIdVariable"] = state ? state.credentialsIdVariable : undefined;
            resourceInputs["credentialsPassword"] = state ? state.credentialsPassword : undefined;
            resourceInputs["credentialsPasswordVariable"] = state ? state.credentialsPasswordVariable : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceSgt"] = state ? state.deviceSgt : undefined;
            resourceInputs["deviceSgtVariable"] = state ? state.deviceSgtVariable : undefined;
            resourceInputs["deviceTypes"] = state ? state.deviceTypes : undefined;
            resourceInputs["enableEnforcement"] = state ? state.enableEnforcement : undefined;
            resourceInputs["enableEnforcementVariable"] = state ? state.enableEnforcementVariable : undefined;
            resourceInputs["enableSxp"] = state ? state.enableSxp : undefined;
            resourceInputs["maximumListenerHoldTime"] = state ? state.maximumListenerHoldTime : undefined;
            resourceInputs["maximumListenerHoldTimeVariable"] = state ? state.maximumListenerHoldTimeVariable : undefined;
            resourceInputs["minimumListenerHoldTime"] = state ? state.minimumListenerHoldTime : undefined;
            resourceInputs["minimumListenerHoldTimeVariable"] = state ? state.minimumListenerHoldTimeVariable : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["speakerHoldTime"] = state ? state.speakerHoldTime : undefined;
            resourceInputs["speakerHoldTimeVariable"] = state ? state.speakerHoldTimeVariable : undefined;
            resourceInputs["sxpConnections"] = state ? state.sxpConnections : undefined;
            resourceInputs["sxpDefaultPassword"] = state ? state.sxpDefaultPassword : undefined;
            resourceInputs["sxpDefaultPasswordVariable"] = state ? state.sxpDefaultPasswordVariable : undefined;
            resourceInputs["sxpKeyChain"] = state ? state.sxpKeyChain : undefined;
            resourceInputs["sxpKeyChainVariable"] = state ? state.sxpKeyChainVariable : undefined;
            resourceInputs["sxpLogBindingChanges"] = state ? state.sxpLogBindingChanges : undefined;
            resourceInputs["sxpLogBindingChangesVariable"] = state ? state.sxpLogBindingChangesVariable : undefined;
            resourceInputs["sxpNodeId"] = state ? state.sxpNodeId : undefined;
            resourceInputs["sxpNodeIdType"] = state ? state.sxpNodeIdType : undefined;
            resourceInputs["sxpNodeIdVariable"] = state ? state.sxpNodeIdVariable : undefined;
            resourceInputs["sxpReconciliationPeriod"] = state ? state.sxpReconciliationPeriod : undefined;
            resourceInputs["sxpReconciliationPeriodVariable"] = state ? state.sxpReconciliationPeriodVariable : undefined;
            resourceInputs["sxpRetryPeriod"] = state ? state.sxpRetryPeriod : undefined;
            resourceInputs["sxpRetryPeriodVariable"] = state ? state.sxpRetryPeriodVariable : undefined;
            resourceInputs["sxpSourceIp"] = state ? state.sxpSourceIp : undefined;
            resourceInputs["sxpSourceIpVariable"] = state ? state.sxpSourceIpVariable : undefined;
            resourceInputs["templateType"] = state ? state.templateType : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as CiscoTrustsecFeatureTemplateArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.deviceTypes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceTypes'");
            }
            resourceInputs["credentialsId"] = args ? args.credentialsId : undefined;
            resourceInputs["credentialsIdVariable"] = args ? args.credentialsIdVariable : undefined;
            resourceInputs["credentialsPassword"] = args ? args.credentialsPassword : undefined;
            resourceInputs["credentialsPasswordVariable"] = args ? args.credentialsPasswordVariable : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceSgt"] = args ? args.deviceSgt : undefined;
            resourceInputs["deviceSgtVariable"] = args ? args.deviceSgtVariable : undefined;
            resourceInputs["deviceTypes"] = args ? args.deviceTypes : undefined;
            resourceInputs["enableEnforcement"] = args ? args.enableEnforcement : undefined;
            resourceInputs["enableEnforcementVariable"] = args ? args.enableEnforcementVariable : undefined;
            resourceInputs["enableSxp"] = args ? args.enableSxp : undefined;
            resourceInputs["maximumListenerHoldTime"] = args ? args.maximumListenerHoldTime : undefined;
            resourceInputs["maximumListenerHoldTimeVariable"] = args ? args.maximumListenerHoldTimeVariable : undefined;
            resourceInputs["minimumListenerHoldTime"] = args ? args.minimumListenerHoldTime : undefined;
            resourceInputs["minimumListenerHoldTimeVariable"] = args ? args.minimumListenerHoldTimeVariable : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["speakerHoldTime"] = args ? args.speakerHoldTime : undefined;
            resourceInputs["speakerHoldTimeVariable"] = args ? args.speakerHoldTimeVariable : undefined;
            resourceInputs["sxpConnections"] = args ? args.sxpConnections : undefined;
            resourceInputs["sxpDefaultPassword"] = args ? args.sxpDefaultPassword : undefined;
            resourceInputs["sxpDefaultPasswordVariable"] = args ? args.sxpDefaultPasswordVariable : undefined;
            resourceInputs["sxpKeyChain"] = args ? args.sxpKeyChain : undefined;
            resourceInputs["sxpKeyChainVariable"] = args ? args.sxpKeyChainVariable : undefined;
            resourceInputs["sxpLogBindingChanges"] = args ? args.sxpLogBindingChanges : undefined;
            resourceInputs["sxpLogBindingChangesVariable"] = args ? args.sxpLogBindingChangesVariable : undefined;
            resourceInputs["sxpNodeId"] = args ? args.sxpNodeId : undefined;
            resourceInputs["sxpNodeIdType"] = args ? args.sxpNodeIdType : undefined;
            resourceInputs["sxpNodeIdVariable"] = args ? args.sxpNodeIdVariable : undefined;
            resourceInputs["sxpReconciliationPeriod"] = args ? args.sxpReconciliationPeriod : undefined;
            resourceInputs["sxpReconciliationPeriodVariable"] = args ? args.sxpReconciliationPeriodVariable : undefined;
            resourceInputs["sxpRetryPeriod"] = args ? args.sxpRetryPeriod : undefined;
            resourceInputs["sxpRetryPeriodVariable"] = args ? args.sxpRetryPeriodVariable : undefined;
            resourceInputs["sxpSourceIp"] = args ? args.sxpSourceIp : undefined;
            resourceInputs["sxpSourceIpVariable"] = args ? args.sxpSourceIpVariable : undefined;
            resourceInputs["templateType"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CiscoTrustsecFeatureTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CiscoTrustsecFeatureTemplate resources.
 */
export interface CiscoTrustsecFeatureTemplateState {
    /**
     * Specify the TrustSec Network Access Device ID, should be same as mentioned in the Identity Services Engine (upto 32
     * char)
     */
    credentialsId?: pulumi.Input<string>;
    /**
     * Variable name
     */
    credentialsIdVariable?: pulumi.Input<string>;
    /**
     * Set the password for the device
     */
    credentialsPassword?: pulumi.Input<string>;
    /**
     * Variable name
     */
    credentialsPasswordVariable?: pulumi.Input<string>;
    /**
     * The description of the feature template
     */
    description?: pulumi.Input<string>;
    /**
     * Configure Local device security group <2..65519> - Range: `2`-`65519`
     */
    deviceSgt?: pulumi.Input<number>;
    /**
     * Variable name
     */
    deviceSgtVariable?: pulumi.Input<string>;
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable Role-based Access Control enforcement - Default value: `false`
     */
    enableEnforcement?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    enableEnforcementVariable?: pulumi.Input<string>;
    /**
     * Enable CTS SXP support - Default value: `false`
     */
    enableSxp?: pulumi.Input<boolean>;
    /**
     * Configure Maximum allowed hold-time for listener in seconds <1..65534> - Range: `1`-`65534` - Default value: `180`
     */
    maximumListenerHoldTime?: pulumi.Input<number>;
    /**
     * Variable name
     */
    maximumListenerHoldTimeVariable?: pulumi.Input<string>;
    /**
     * Configure Minimum allowed hold-time for listener in seconds <1..65534> - Range: `1`-`65534` - Default value: `90`
     */
    minimumListenerHoldTime?: pulumi.Input<number>;
    /**
     * Variable name
     */
    minimumListenerHoldTimeVariable?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Configure Speaker hold-time in seconds <1..65534> - Range: `1`-`65534` - Default value: `120`
     */
    speakerHoldTime?: pulumi.Input<number>;
    /**
     * Variable name
     */
    speakerHoldTimeVariable?: pulumi.Input<string>;
    /**
     * Configure SXP Connections
     */
    sxpConnections?: pulumi.Input<pulumi.Input<inputs.CiscoTrustsecFeatureTemplateSxpConnection>[]>;
    /**
     * Configure SXP default password
     */
    sxpDefaultPassword?: pulumi.Input<string>;
    /**
     * Variable name
     */
    sxpDefaultPasswordVariable?: pulumi.Input<string>;
    /**
     * Configure SXP key-chain
     */
    sxpKeyChain?: pulumi.Input<string>;
    /**
     * Variable name
     */
    sxpKeyChainVariable?: pulumi.Input<string>;
    /**
     * Enables logging for IP-to-SGT binding changes - Default value: `false`
     */
    sxpLogBindingChanges?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    sxpLogBindingChangesVariable?: pulumi.Input<string>;
    /**
     * Configure SXP Node ID <IP, 8 char string or interface name>
     */
    sxpNodeId?: pulumi.Input<string>;
    /**
     * Define SXP Node ID type <IP, 8 char string or interface name> - Choices: `ip`, `interface-name`, `8-char-hex-string` -
     * Default value: `ip`
     */
    sxpNodeIdType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    sxpNodeIdVariable?: pulumi.Input<string>;
    /**
     * Configure the SXP reconciliation period in seconds <0..64000> - Range: `0`-`64000` - Default value: `120`
     */
    sxpReconciliationPeriod?: pulumi.Input<number>;
    /**
     * Variable name
     */
    sxpReconciliationPeriodVariable?: pulumi.Input<string>;
    /**
     * Configure Retry period for SXP connection in seconds <0..64000> - Range: `0`-`64000` - Default value: `120`
     */
    sxpRetryPeriod?: pulumi.Input<number>;
    /**
     * Variable name
     */
    sxpRetryPeriodVariable?: pulumi.Input<string>;
    /**
     * SXP Source IP
     */
    sxpSourceIp?: pulumi.Input<string>;
    /**
     * Variable name
     */
    sxpSourceIpVariable?: pulumi.Input<string>;
    /**
     * The template type
     */
    templateType?: pulumi.Input<string>;
    /**
     * The version of the feature template
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CiscoTrustsecFeatureTemplate resource.
 */
export interface CiscoTrustsecFeatureTemplateArgs {
    /**
     * Specify the TrustSec Network Access Device ID, should be same as mentioned in the Identity Services Engine (upto 32
     * char)
     */
    credentialsId?: pulumi.Input<string>;
    /**
     * Variable name
     */
    credentialsIdVariable?: pulumi.Input<string>;
    /**
     * Set the password for the device
     */
    credentialsPassword?: pulumi.Input<string>;
    /**
     * Variable name
     */
    credentialsPasswordVariable?: pulumi.Input<string>;
    /**
     * The description of the feature template
     */
    description: pulumi.Input<string>;
    /**
     * Configure Local device security group <2..65519> - Range: `2`-`65519`
     */
    deviceSgt?: pulumi.Input<number>;
    /**
     * Variable name
     */
    deviceSgtVariable?: pulumi.Input<string>;
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable Role-based Access Control enforcement - Default value: `false`
     */
    enableEnforcement?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    enableEnforcementVariable?: pulumi.Input<string>;
    /**
     * Enable CTS SXP support - Default value: `false`
     */
    enableSxp?: pulumi.Input<boolean>;
    /**
     * Configure Maximum allowed hold-time for listener in seconds <1..65534> - Range: `1`-`65534` - Default value: `180`
     */
    maximumListenerHoldTime?: pulumi.Input<number>;
    /**
     * Variable name
     */
    maximumListenerHoldTimeVariable?: pulumi.Input<string>;
    /**
     * Configure Minimum allowed hold-time for listener in seconds <1..65534> - Range: `1`-`65534` - Default value: `90`
     */
    minimumListenerHoldTime?: pulumi.Input<number>;
    /**
     * Variable name
     */
    minimumListenerHoldTimeVariable?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Configure Speaker hold-time in seconds <1..65534> - Range: `1`-`65534` - Default value: `120`
     */
    speakerHoldTime?: pulumi.Input<number>;
    /**
     * Variable name
     */
    speakerHoldTimeVariable?: pulumi.Input<string>;
    /**
     * Configure SXP Connections
     */
    sxpConnections?: pulumi.Input<pulumi.Input<inputs.CiscoTrustsecFeatureTemplateSxpConnection>[]>;
    /**
     * Configure SXP default password
     */
    sxpDefaultPassword?: pulumi.Input<string>;
    /**
     * Variable name
     */
    sxpDefaultPasswordVariable?: pulumi.Input<string>;
    /**
     * Configure SXP key-chain
     */
    sxpKeyChain?: pulumi.Input<string>;
    /**
     * Variable name
     */
    sxpKeyChainVariable?: pulumi.Input<string>;
    /**
     * Enables logging for IP-to-SGT binding changes - Default value: `false`
     */
    sxpLogBindingChanges?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    sxpLogBindingChangesVariable?: pulumi.Input<string>;
    /**
     * Configure SXP Node ID <IP, 8 char string or interface name>
     */
    sxpNodeId?: pulumi.Input<string>;
    /**
     * Define SXP Node ID type <IP, 8 char string or interface name> - Choices: `ip`, `interface-name`, `8-char-hex-string` -
     * Default value: `ip`
     */
    sxpNodeIdType?: pulumi.Input<string>;
    /**
     * Variable name
     */
    sxpNodeIdVariable?: pulumi.Input<string>;
    /**
     * Configure the SXP reconciliation period in seconds <0..64000> - Range: `0`-`64000` - Default value: `120`
     */
    sxpReconciliationPeriod?: pulumi.Input<number>;
    /**
     * Variable name
     */
    sxpReconciliationPeriodVariable?: pulumi.Input<string>;
    /**
     * Configure Retry period for SXP connection in seconds <0..64000> - Range: `0`-`64000` - Default value: `120`
     */
    sxpRetryPeriod?: pulumi.Input<number>;
    /**
     * Variable name
     */
    sxpRetryPeriodVariable?: pulumi.Input<string>;
    /**
     * SXP Source IP
     */
    sxpSourceIp?: pulumi.Input<string>;
    /**
     * Variable name
     */
    sxpSourceIpVariable?: pulumi.Input<string>;
}
