// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the Service Routing OSPFv3 IPv6 Feature.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getServiceRoutingOspfv3Ipv6Feature({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 * });
 * ```
 */
export function getServiceRoutingOspfv3Ipv6Feature(args: GetServiceRoutingOspfv3Ipv6FeatureArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceRoutingOspfv3Ipv6FeatureResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getServiceRoutingOspfv3Ipv6Feature:getServiceRoutingOspfv3Ipv6Feature", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceRoutingOspfv3Ipv6Feature.
 */
export interface GetServiceRoutingOspfv3Ipv6FeatureArgs {
    /**
     * Feature Profile ID
     */
    featureProfileId: string;
    /**
     * The id of the Feature
     */
    id: string;
}

/**
 * A collection of values returned by getServiceRoutingOspfv3Ipv6Feature.
 */
export interface GetServiceRoutingOspfv3Ipv6FeatureResult {
    /**
     * Configure OSPFv3 IPv6 area
     */
    readonly areas: outputs.GetServiceRoutingOspfv3Ipv6FeatureArea[];
    /**
     * Distribute default external route into OSPF disabled
     */
    readonly defaultInformationOriginate: boolean;
    /**
     * Always advertise default route
     */
    readonly defaultInformationOriginateAlways: boolean;
    /**
     * Variable name
     */
    readonly defaultInformationOriginateAlwaysVariable: string;
    /**
     * Set metric used to generate default route \n\n
     */
    readonly defaultInformationOriginateMetric: number;
    /**
     * Set default route metric type
     */
    readonly defaultInformationOriginateMetricType: string;
    /**
     * Variable name
     */
    readonly defaultInformationOriginateMetricTypeVariable: string;
    /**
     * Variable name
     */
    readonly defaultInformationOriginateMetricVariable: string;
    /**
     * The description of the Feature
     */
    readonly description: string;
    /**
     * Distance
     */
    readonly distance: number;
    /**
     * Set distance for external routes
     */
    readonly distanceExternal: number;
    /**
     * Variable name
     */
    readonly distanceExternalVariable: string;
    /**
     * Set distance for inter-area routes
     */
    readonly distanceInterArea: number;
    /**
     * Variable name
     */
    readonly distanceInterAreaVariable: string;
    /**
     * Set distance for intra-area routes
     */
    readonly distanceIntraArea: number;
    /**
     * Variable name
     */
    readonly distanceIntraAreaVariable: string;
    /**
     * Variable name
     */
    readonly distanceVariable: string;
    /**
     * Feature Profile ID
     */
    readonly featureProfileId: string;
    /**
     * Table map filtered or not
     */
    readonly filter: boolean;
    /**
     * Variable name
     */
    readonly filterVariable: string;
    /**
     * The id of the Feature
     */
    readonly id: string;
    /**
     * The name of the Feature
     */
    readonly name: string;
    /**
     * Redistribute routes
     */
    readonly redistributes: outputs.GetServiceRoutingOspfv3Ipv6FeatureRedistribute[];
    /**
     * Set reference bandwidth method to assign OSPF cost
     */
    readonly referenceBandwidth: number;
    /**
     * Variable name
     */
    readonly referenceBandwidthVariable: string;
    /**
     * Calculate summary route cost based on RFC 1583
     */
    readonly rfc1583Compatible: boolean;
    /**
     * Variable name
     */
    readonly rfc1583CompatibleVariable: string;
    readonly routePolicyId: string;
    /**
     * Set OSPF router ID to override system IP address
     */
    readonly routerId: string;
    /**
     * Variable name
     */
    readonly routerIdVariable: string;
    /**
     * Not advertise maximum metric Router LSA policy by default
     */
    readonly routerLsaAction: string;
    /**
     * Set how long to advertise maximum metric after router boot up
     */
    readonly routerLsaOnStartupTime: number;
    /**
     * Variable name
     */
    readonly routerLsaOnStartupTimeVariable: string;
    /**
     * Set delay from first change received until performing SPF calculation
     */
    readonly spfCalculationDelay: number;
    /**
     * Variable name
     */
    readonly spfCalculationDelayVariable: string;
    /**
     * Set initial hold time between consecutive SPF calculations
     */
    readonly spfInitialHoldTime: number;
    /**
     * Variable name
     */
    readonly spfInitialHoldTimeVariable: string;
    /**
     * Set maximum hold time between consecutive SPF calculations
     */
    readonly spfMaximumHoldTime: number;
    /**
     * Variable name
     */
    readonly spfMaximumHoldTimeVariable: string;
    /**
     * The version of the Feature
     */
    readonly version: number;
}
/**
 * This data source can read the Service Routing OSPFv3 IPv6 Feature.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getServiceRoutingOspfv3Ipv6Feature({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 * });
 * ```
 */
export function getServiceRoutingOspfv3Ipv6FeatureOutput(args: GetServiceRoutingOspfv3Ipv6FeatureOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceRoutingOspfv3Ipv6FeatureResult> {
    return pulumi.output(args).apply((a: any) => getServiceRoutingOspfv3Ipv6Feature(a, opts))
}

/**
 * A collection of arguments for invoking getServiceRoutingOspfv3Ipv6Feature.
 */
export interface GetServiceRoutingOspfv3Ipv6FeatureOutputArgs {
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * The id of the Feature
     */
    id: pulumi.Input<string>;
}
