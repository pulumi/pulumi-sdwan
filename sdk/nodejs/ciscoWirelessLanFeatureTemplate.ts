// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Cisco Wireless LAN feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import sdwan:index/ciscoWirelessLanFeatureTemplate:CiscoWirelessLanFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class CiscoWirelessLanFeatureTemplate extends pulumi.CustomResource {
    /**
     * Get an existing CiscoWirelessLanFeatureTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CiscoWirelessLanFeatureTemplateState, opts?: pulumi.CustomResourceOptions): CiscoWirelessLanFeatureTemplate {
        return new CiscoWirelessLanFeatureTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/ciscoWirelessLanFeatureTemplate:CiscoWirelessLanFeatureTemplate';

    /**
     * Returns true if the given object is an instance of CiscoWirelessLanFeatureTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CiscoWirelessLanFeatureTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CiscoWirelessLanFeatureTemplate.__pulumiType;
    }

    /**
     * Set mobile express default gateway
     *   - Default value: `0.0.0.0`
     */
    declare public readonly controllerDefaultGateway: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly controllerDefaultGatewayVariable: pulumi.Output<string | undefined>;
    /**
     * Set mobile express controller address
     *   - Default value: `0.0.0.0`
     */
    declare public readonly controllerIpAddress: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly controllerIpAddressVariable: pulumi.Output<string | undefined>;
    /**
     * Set mobile express controller subnet mask
     *   - Default value: `0.0.0.0`
     */
    declare public readonly controllerSubnetMask: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly controllerSubnetMaskVariable: pulumi.Output<string | undefined>;
    /**
     * Select country
     *   - Choices: `AE`, `AR`, `AT`, `AU`, `BA`, `BB`, `BE`, `BG`, `BH`, `BN`, `BO`, `BR`, `BY`, `CA`, `CA2`, `CH`, `CL`, `CM`, `CN`, `CO`, `CR`, `CY`, `CZ`, `DE`, `DK`, `DO`, `DZ`, `EC`, `EE`, `EG`, `ES`, `FI`, `FJ`, `FR`, `GB`, `GH`, `GI`, `GR`, `HK`, `HR`, `HU`, `ID`, `IE`, `IL`, `IO`, `IN`, `IQ`, `IS`, `IT`, `J2`, `J4`, `JM`, `JO`, `KE`, `KN`, `KW`, `KZ`, `LB`, `LI`, `LK`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `ME`, `MK`, `MN`, `MO`, `MT`, `MX`, `MY`, `NL`, `NO`, `NZ`, `OM`, `PA`, `PE`, `PH`, `PH2`, `PK`, `PL`, `PR`, `PT`, `PY`, `QA`, `RO`, `RS`, `RU`, `SA`, `SE`, `SG`, `SI`, `SK`, `TH`, `TN`, `TR`, `TW`, `UA`, `US`, `UY`, `VE`, `VN`, `ZA`
     */
    declare public readonly country: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly countryVariable: pulumi.Output<string | undefined>;
    /**
     * The description of the feature template
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    declare public readonly deviceTypes: pulumi.Output<string[]>;
    /**
     * The name of the feature template
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Set management password
     */
    declare public readonly password: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly passwordVariable: pulumi.Output<string | undefined>;
    /**
     * 2.4GHz Shutdown
     *   - Default value: `false`
     */
    declare public readonly shutdown24ghz: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly shutdown24ghzVariable: pulumi.Output<string | undefined>;
    /**
     * 5GHz Shutdown
     *   - Default value: `false`
     */
    declare public readonly shutdown5ghz: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly shutdown5ghzVariable: pulumi.Output<string | undefined>;
    /**
     * Configure Wi-Fi SSID
     */
    declare public readonly ssids: pulumi.Output<outputs.CiscoWirelessLanFeatureTemplateSsid[] | undefined>;
    /**
     * The template type
     */
    declare public /*out*/ readonly templateType: pulumi.Output<string>;
    /**
     * Set management username
     */
    declare public readonly username: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly usernameVariable: pulumi.Output<string | undefined>;
    /**
     * The version of the feature template
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;

    /**
     * Create a CiscoWirelessLanFeatureTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CiscoWirelessLanFeatureTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CiscoWirelessLanFeatureTemplateArgs | CiscoWirelessLanFeatureTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CiscoWirelessLanFeatureTemplateState | undefined;
            resourceInputs["controllerDefaultGateway"] = state?.controllerDefaultGateway;
            resourceInputs["controllerDefaultGatewayVariable"] = state?.controllerDefaultGatewayVariable;
            resourceInputs["controllerIpAddress"] = state?.controllerIpAddress;
            resourceInputs["controllerIpAddressVariable"] = state?.controllerIpAddressVariable;
            resourceInputs["controllerSubnetMask"] = state?.controllerSubnetMask;
            resourceInputs["controllerSubnetMaskVariable"] = state?.controllerSubnetMaskVariable;
            resourceInputs["country"] = state?.country;
            resourceInputs["countryVariable"] = state?.countryVariable;
            resourceInputs["description"] = state?.description;
            resourceInputs["deviceTypes"] = state?.deviceTypes;
            resourceInputs["name"] = state?.name;
            resourceInputs["password"] = state?.password;
            resourceInputs["passwordVariable"] = state?.passwordVariable;
            resourceInputs["shutdown24ghz"] = state?.shutdown24ghz;
            resourceInputs["shutdown24ghzVariable"] = state?.shutdown24ghzVariable;
            resourceInputs["shutdown5ghz"] = state?.shutdown5ghz;
            resourceInputs["shutdown5ghzVariable"] = state?.shutdown5ghzVariable;
            resourceInputs["ssids"] = state?.ssids;
            resourceInputs["templateType"] = state?.templateType;
            resourceInputs["username"] = state?.username;
            resourceInputs["usernameVariable"] = state?.usernameVariable;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as CiscoWirelessLanFeatureTemplateArgs | undefined;
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if (args?.deviceTypes === undefined && !opts.urn) {
                throw new Error("Missing required property 'deviceTypes'");
            }
            resourceInputs["controllerDefaultGateway"] = args?.controllerDefaultGateway;
            resourceInputs["controllerDefaultGatewayVariable"] = args?.controllerDefaultGatewayVariable;
            resourceInputs["controllerIpAddress"] = args?.controllerIpAddress;
            resourceInputs["controllerIpAddressVariable"] = args?.controllerIpAddressVariable;
            resourceInputs["controllerSubnetMask"] = args?.controllerSubnetMask;
            resourceInputs["controllerSubnetMaskVariable"] = args?.controllerSubnetMaskVariable;
            resourceInputs["country"] = args?.country;
            resourceInputs["countryVariable"] = args?.countryVariable;
            resourceInputs["description"] = args?.description;
            resourceInputs["deviceTypes"] = args?.deviceTypes;
            resourceInputs["name"] = args?.name;
            resourceInputs["password"] = args?.password;
            resourceInputs["passwordVariable"] = args?.passwordVariable;
            resourceInputs["shutdown24ghz"] = args?.shutdown24ghz;
            resourceInputs["shutdown24ghzVariable"] = args?.shutdown24ghzVariable;
            resourceInputs["shutdown5ghz"] = args?.shutdown5ghz;
            resourceInputs["shutdown5ghzVariable"] = args?.shutdown5ghzVariable;
            resourceInputs["ssids"] = args?.ssids;
            resourceInputs["username"] = args?.username;
            resourceInputs["usernameVariable"] = args?.usernameVariable;
            resourceInputs["templateType"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CiscoWirelessLanFeatureTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CiscoWirelessLanFeatureTemplate resources.
 */
export interface CiscoWirelessLanFeatureTemplateState {
    /**
     * Set mobile express default gateway
     *   - Default value: `0.0.0.0`
     */
    controllerDefaultGateway?: pulumi.Input<string>;
    /**
     * Variable name
     */
    controllerDefaultGatewayVariable?: pulumi.Input<string>;
    /**
     * Set mobile express controller address
     *   - Default value: `0.0.0.0`
     */
    controllerIpAddress?: pulumi.Input<string>;
    /**
     * Variable name
     */
    controllerIpAddressVariable?: pulumi.Input<string>;
    /**
     * Set mobile express controller subnet mask
     *   - Default value: `0.0.0.0`
     */
    controllerSubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    controllerSubnetMaskVariable?: pulumi.Input<string>;
    /**
     * Select country
     *   - Choices: `AE`, `AR`, `AT`, `AU`, `BA`, `BB`, `BE`, `BG`, `BH`, `BN`, `BO`, `BR`, `BY`, `CA`, `CA2`, `CH`, `CL`, `CM`, `CN`, `CO`, `CR`, `CY`, `CZ`, `DE`, `DK`, `DO`, `DZ`, `EC`, `EE`, `EG`, `ES`, `FI`, `FJ`, `FR`, `GB`, `GH`, `GI`, `GR`, `HK`, `HR`, `HU`, `ID`, `IE`, `IL`, `IO`, `IN`, `IQ`, `IS`, `IT`, `J2`, `J4`, `JM`, `JO`, `KE`, `KN`, `KW`, `KZ`, `LB`, `LI`, `LK`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `ME`, `MK`, `MN`, `MO`, `MT`, `MX`, `MY`, `NL`, `NO`, `NZ`, `OM`, `PA`, `PE`, `PH`, `PH2`, `PK`, `PL`, `PR`, `PT`, `PY`, `QA`, `RO`, `RS`, `RU`, `SA`, `SE`, `SG`, `SI`, `SK`, `TH`, `TN`, `TR`, `TW`, `UA`, `US`, `UY`, `VE`, `VN`, `ZA`
     */
    country?: pulumi.Input<string>;
    /**
     * Variable name
     */
    countryVariable?: pulumi.Input<string>;
    /**
     * The description of the feature template
     */
    description?: pulumi.Input<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Set management password
     */
    password?: pulumi.Input<string>;
    /**
     * Variable name
     */
    passwordVariable?: pulumi.Input<string>;
    /**
     * 2.4GHz Shutdown
     *   - Default value: `false`
     */
    shutdown24ghz?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdown24ghzVariable?: pulumi.Input<string>;
    /**
     * 5GHz Shutdown
     *   - Default value: `false`
     */
    shutdown5ghz?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdown5ghzVariable?: pulumi.Input<string>;
    /**
     * Configure Wi-Fi SSID
     */
    ssids?: pulumi.Input<pulumi.Input<inputs.CiscoWirelessLanFeatureTemplateSsid>[]>;
    /**
     * The template type
     */
    templateType?: pulumi.Input<string>;
    /**
     * Set management username
     */
    username?: pulumi.Input<string>;
    /**
     * Variable name
     */
    usernameVariable?: pulumi.Input<string>;
    /**
     * The version of the feature template
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CiscoWirelessLanFeatureTemplate resource.
 */
export interface CiscoWirelessLanFeatureTemplateArgs {
    /**
     * Set mobile express default gateway
     *   - Default value: `0.0.0.0`
     */
    controllerDefaultGateway?: pulumi.Input<string>;
    /**
     * Variable name
     */
    controllerDefaultGatewayVariable?: pulumi.Input<string>;
    /**
     * Set mobile express controller address
     *   - Default value: `0.0.0.0`
     */
    controllerIpAddress?: pulumi.Input<string>;
    /**
     * Variable name
     */
    controllerIpAddressVariable?: pulumi.Input<string>;
    /**
     * Set mobile express controller subnet mask
     *   - Default value: `0.0.0.0`
     */
    controllerSubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    controllerSubnetMaskVariable?: pulumi.Input<string>;
    /**
     * Select country
     *   - Choices: `AE`, `AR`, `AT`, `AU`, `BA`, `BB`, `BE`, `BG`, `BH`, `BN`, `BO`, `BR`, `BY`, `CA`, `CA2`, `CH`, `CL`, `CM`, `CN`, `CO`, `CR`, `CY`, `CZ`, `DE`, `DK`, `DO`, `DZ`, `EC`, `EE`, `EG`, `ES`, `FI`, `FJ`, `FR`, `GB`, `GH`, `GI`, `GR`, `HK`, `HR`, `HU`, `ID`, `IE`, `IL`, `IO`, `IN`, `IQ`, `IS`, `IT`, `J2`, `J4`, `JM`, `JO`, `KE`, `KN`, `KW`, `KZ`, `LB`, `LI`, `LK`, `LT`, `LU`, `LV`, `LY`, `MA`, `MC`, `ME`, `MK`, `MN`, `MO`, `MT`, `MX`, `MY`, `NL`, `NO`, `NZ`, `OM`, `PA`, `PE`, `PH`, `PH2`, `PK`, `PL`, `PR`, `PT`, `PY`, `QA`, `RO`, `RS`, `RU`, `SA`, `SE`, `SG`, `SI`, `SK`, `TH`, `TN`, `TR`, `TW`, `UA`, `US`, `UY`, `VE`, `VN`, `ZA`
     */
    country?: pulumi.Input<string>;
    /**
     * Variable name
     */
    countryVariable?: pulumi.Input<string>;
    /**
     * The description of the feature template
     */
    description: pulumi.Input<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Set management password
     */
    password?: pulumi.Input<string>;
    /**
     * Variable name
     */
    passwordVariable?: pulumi.Input<string>;
    /**
     * 2.4GHz Shutdown
     *   - Default value: `false`
     */
    shutdown24ghz?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdown24ghzVariable?: pulumi.Input<string>;
    /**
     * 5GHz Shutdown
     *   - Default value: `false`
     */
    shutdown5ghz?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdown5ghzVariable?: pulumi.Input<string>;
    /**
     * Configure Wi-Fi SSID
     */
    ssids?: pulumi.Input<pulumi.Input<inputs.CiscoWirelessLanFeatureTemplateSsid>[]>;
    /**
     * Set management username
     */
    username?: pulumi.Input<string>;
    /**
     * Variable name
     */
    usernameVariable?: pulumi.Input<string>;
}
