// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource can manage a Intrusion Prevention Policy Definition .
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = new sdwan.IntrusionPreventionPolicyDefinition("example", {
 *     name: "Example",
 *     description: "My description",
 *     mode: "security",
 *     inspectionMode: "protection",
 *     logLevel: "alert",
 *     signatureSet: "connectivity",
 *     targetVpns: ["1"],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import sdwan:index/intrusionPreventionPolicyDefinition:IntrusionPreventionPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class IntrusionPreventionPolicyDefinition extends pulumi.CustomResource {
    /**
     * Get an existing IntrusionPreventionPolicyDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntrusionPreventionPolicyDefinitionState, opts?: pulumi.CustomResourceOptions): IntrusionPreventionPolicyDefinition {
        return new IntrusionPreventionPolicyDefinition(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/intrusionPreventionPolicyDefinition:IntrusionPreventionPolicyDefinition';

    /**
     * Returns true if the given object is an instance of IntrusionPreventionPolicyDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IntrusionPreventionPolicyDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IntrusionPreventionPolicyDefinition.__pulumiType;
    }

    /**
     * The description of the policy definition
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The inspection mode - Choices: `protection`, `detection`
     */
    public readonly inspectionMode!: pulumi.Output<string | undefined>;
    /**
     * IPS signature list ID
     */
    public readonly ipsSignatureListId!: pulumi.Output<string | undefined>;
    /**
     * IPS signature list version
     */
    public readonly ipsSignatureListVersion!: pulumi.Output<number | undefined>;
    /**
     * Log level - Choices: `emergency`, `alert`, `critical`, `error`, `warning`, `notice`, `info`, `debug`
     */
    public readonly logLevel!: pulumi.Output<string | undefined>;
    /**
     * The policy mode - Choices: `security`, `unified`
     */
    public readonly mode!: pulumi.Output<string | undefined>;
    /**
     * The name of the policy definition
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Signature set - Choices: `balanced`, `connectivity`, `security`
     */
    public readonly signatureSet!: pulumi.Output<string | undefined>;
    /**
     * List of VPN IDs
     */
    public readonly targetVpns!: pulumi.Output<string[] | undefined>;
    /**
     * The version of the object
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a IntrusionPreventionPolicyDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntrusionPreventionPolicyDefinitionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntrusionPreventionPolicyDefinitionArgs | IntrusionPreventionPolicyDefinitionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntrusionPreventionPolicyDefinitionState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["inspectionMode"] = state ? state.inspectionMode : undefined;
            resourceInputs["ipsSignatureListId"] = state ? state.ipsSignatureListId : undefined;
            resourceInputs["ipsSignatureListVersion"] = state ? state.ipsSignatureListVersion : undefined;
            resourceInputs["logLevel"] = state ? state.logLevel : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["signatureSet"] = state ? state.signatureSet : undefined;
            resourceInputs["targetVpns"] = state ? state.targetVpns : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as IntrusionPreventionPolicyDefinitionArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["inspectionMode"] = args ? args.inspectionMode : undefined;
            resourceInputs["ipsSignatureListId"] = args ? args.ipsSignatureListId : undefined;
            resourceInputs["ipsSignatureListVersion"] = args ? args.ipsSignatureListVersion : undefined;
            resourceInputs["logLevel"] = args ? args.logLevel : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["signatureSet"] = args ? args.signatureSet : undefined;
            resourceInputs["targetVpns"] = args ? args.targetVpns : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IntrusionPreventionPolicyDefinition.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IntrusionPreventionPolicyDefinition resources.
 */
export interface IntrusionPreventionPolicyDefinitionState {
    /**
     * The description of the policy definition
     */
    description?: pulumi.Input<string>;
    /**
     * The inspection mode - Choices: `protection`, `detection`
     */
    inspectionMode?: pulumi.Input<string>;
    /**
     * IPS signature list ID
     */
    ipsSignatureListId?: pulumi.Input<string>;
    /**
     * IPS signature list version
     */
    ipsSignatureListVersion?: pulumi.Input<number>;
    /**
     * Log level - Choices: `emergency`, `alert`, `critical`, `error`, `warning`, `notice`, `info`, `debug`
     */
    logLevel?: pulumi.Input<string>;
    /**
     * The policy mode - Choices: `security`, `unified`
     */
    mode?: pulumi.Input<string>;
    /**
     * The name of the policy definition
     */
    name?: pulumi.Input<string>;
    /**
     * Signature set - Choices: `balanced`, `connectivity`, `security`
     */
    signatureSet?: pulumi.Input<string>;
    /**
     * List of VPN IDs
     */
    targetVpns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The version of the object
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a IntrusionPreventionPolicyDefinition resource.
 */
export interface IntrusionPreventionPolicyDefinitionArgs {
    /**
     * The description of the policy definition
     */
    description: pulumi.Input<string>;
    /**
     * The inspection mode - Choices: `protection`, `detection`
     */
    inspectionMode?: pulumi.Input<string>;
    /**
     * IPS signature list ID
     */
    ipsSignatureListId?: pulumi.Input<string>;
    /**
     * IPS signature list version
     */
    ipsSignatureListVersion?: pulumi.Input<number>;
    /**
     * Log level - Choices: `emergency`, `alert`, `critical`, `error`, `warning`, `notice`, `info`, `debug`
     */
    logLevel?: pulumi.Input<string>;
    /**
     * The policy mode - Choices: `security`, `unified`
     */
    mode?: pulumi.Input<string>;
    /**
     * The name of the policy definition
     */
    name?: pulumi.Input<string>;
    /**
     * Signature set - Choices: `balanced`, `connectivity`, `security`
     */
    signatureSet?: pulumi.Input<string>;
    /**
     * List of VPN IDs
     */
    targetVpns?: pulumi.Input<pulumi.Input<string>[]>;
}
