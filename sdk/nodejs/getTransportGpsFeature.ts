// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read the Transport GPS Feature.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getTransportGpsFeature({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 * });
 * ```
 */
export function getTransportGpsFeature(args: GetTransportGpsFeatureArgs, opts?: pulumi.InvokeOptions): Promise<GetTransportGpsFeatureResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getTransportGpsFeature:getTransportGpsFeature", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getTransportGpsFeature.
 */
export interface GetTransportGpsFeatureArgs {
    /**
     * Feature Profile ID
     */
    featureProfileId: string;
    /**
     * The id of the Feature
     */
    id: string;
}

/**
 * A collection of values returned by getTransportGpsFeature.
 */
export interface GetTransportGpsFeatureResult {
    /**
     * The description of the Feature
     */
    readonly description: string;
    /**
     * Feature Profile ID
     */
    readonly featureProfileId: string;
    /**
     * Enable/disable GPS
     */
    readonly gpsEnable: boolean;
    /**
     * Variable name
     */
    readonly gpsEnableVariable: string;
    /**
     * Select GPS mode
     */
    readonly gpsMode: string;
    /**
     * Variable name
     */
    readonly gpsModeVariable: string;
    /**
     * The id of the Feature
     */
    readonly id: string;
    /**
     * The name of the Feature
     */
    readonly name: string;
    /**
     * Destination address
     */
    readonly nmeaDestinationAddress: string;
    /**
     * Variable name
     */
    readonly nmeaDestinationAddressVariable: string;
    /**
     * Destination port
     */
    readonly nmeaDestinationPort: number;
    /**
     * Variable name
     */
    readonly nmeaDestinationPortVariable: string;
    /**
     * Enable/disable NMEA data
     */
    readonly nmeaEnable: boolean;
    /**
     * Variable name
     */
    readonly nmeaEnableVariable: string;
    /**
     * Source address
     */
    readonly nmeaSourceAddress: string;
    /**
     * Variable name
     */
    readonly nmeaSourceAddressVariable: string;
    /**
     * The version of the Feature
     */
    readonly version: number;
}
/**
 * This data source can read the Transport GPS Feature.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getTransportGpsFeature({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 * });
 * ```
 */
export function getTransportGpsFeatureOutput(args: GetTransportGpsFeatureOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTransportGpsFeatureResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sdwan:index/getTransportGpsFeature:getTransportGpsFeature", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getTransportGpsFeature.
 */
export interface GetTransportGpsFeatureOutputArgs {
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * The id of the Feature
     */
    id: pulumi.Input<string>;
}
