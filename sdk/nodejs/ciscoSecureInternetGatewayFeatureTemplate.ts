// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Cisco Secure Internet Gateway feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = new sdwan.CiscoSecureInternetGatewayFeatureTemplate("example", {
 *     name: "Example",
 *     description: "My Example",
 *     deviceTypes: ["vedge-C8000V"],
 *     vpnId: 1,
 *     interfaces: [{
 *         name: "ipsec1",
 *         auto_tunnel_mode: true,
 *         shutdown: true,
 *         description: "My Description",
 *         ip_unnumbered: false,
 *         ipv4_address: "1.2.3.4/24",
 *         tunnel_source: "3.3.3.3",
 *         tunnel_source_interface: "ge0/1",
 *         tunnel_route_via: "ge0/2",
 *         tunnel_destination: "3.4.5.6",
 *         application: "sig",
 *         sig_provider: "secure-internet-gateway-umbrella",
 *         tunnel_dc_preference: "primary-dc",
 *         tcp_mss: 1400,
 *         mtu: 1500,
 *         dead_peer_detection_interval: 30,
 *         dead_peer_detection_retries: 5,
 *         ike_version: 1,
 *         ike_pre_shared_key: "A1234567",
 *         ike_rekey_interval: 600,
 *         ike_ciphersuite: "aes256-cbc-sha2",
 *         ike_group: "14",
 *         ike_pre_shared_key_dynamic: false,
 *         ike_pre_shared_key_local_id: "1.2.3.4",
 *         ike_pre_shared_key_remote_id: "2.3.4.5",
 *         ipsec_rekey_interval: 7200,
 *         ipsec_replay_window: 1024,
 *         ipsec_ciphersuite: "aes256-cbc-sha1",
 *         ipsec_perfect_forward_secrecy: "group-14",
 *         tracker: "test",
 *         track_enable: false,
 *         tunnel_public_ip: "5.5.5.5",
 *     }],
 *     services: [{
 *         service_type: "sig",
 *         interface_pairs: [{
 *             activeInterface: "e1",
 *             activeInterfaceWeight: 10,
 *             backupInterface: "e2",
 *             backupInterfaceWeight: 20,
 *         }],
 *         zscaler_authentication_required: true,
 *         zscaler_xff_forward: true,
 *         zscaler_firewall_enabled: true,
 *         zscaler_ips_control_enabled: true,
 *         zscaler_caution_enabled: true,
 *         zscaler_primary_data_center: "Auto",
 *         zscaler_secondary_data_center: "Auto",
 *         zscaler_surrogate_ip: true,
 *         zscaler_surrogate_idle_time: 100,
 *         zscaler_surrogate_display_time_unit: "MINUTE",
 *         zscaler_surrogate_ip_enforce_for_known_browsers: true,
 *         zscaler_surrogate_refresh_time: 12345,
 *         zscaler_surrogate_refresh_time_unit: "MINUTE",
 *         zscaler_aup_enabled: true,
 *         zscaler_aup_block_internet_until_accepted: true,
 *         zscaler_aup_force_ssl_inspection: true,
 *         zscaler_aup_timeout: 60,
 *         zscaler_location_name: "LOC1",
 *         umbrella_primary_data_center: "Auto",
 *         umbrella_secondary_data_center: "Auto",
 *     }],
 *     trackerSourceIp: "2.3.4.5",
 *     trackers: [{
 *         name: "TRACKER1",
 *         endpoint_api_url: "https://1.1.1.1",
 *         threshold: 500,
 *         interval: 60,
 *         multiplier: 4,
 *         tracker_type: "SIG",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import sdwan:index/ciscoSecureInternetGatewayFeatureTemplate:CiscoSecureInternetGatewayFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class CiscoSecureInternetGatewayFeatureTemplate extends pulumi.CustomResource {
    /**
     * Get an existing CiscoSecureInternetGatewayFeatureTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CiscoSecureInternetGatewayFeatureTemplateState, opts?: pulumi.CustomResourceOptions): CiscoSecureInternetGatewayFeatureTemplate {
        return new CiscoSecureInternetGatewayFeatureTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/ciscoSecureInternetGatewayFeatureTemplate:CiscoSecureInternetGatewayFeatureTemplate';

    /**
     * Returns true if the given object is an instance of CiscoSecureInternetGatewayFeatureTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CiscoSecureInternetGatewayFeatureTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CiscoSecureInternetGatewayFeatureTemplate.__pulumiType;
    }

    /**
     * The description of the feature template
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    declare public readonly deviceTypes: pulumi.Output<string[]>;
    /**
     * Interface name: IPsec when present
     */
    declare public readonly interfaces: pulumi.Output<outputs.CiscoSecureInternetGatewayFeatureTemplateInterface[] | undefined>;
    /**
     * The name of the feature template
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Configure services
     */
    declare public readonly services: pulumi.Output<outputs.CiscoSecureInternetGatewayFeatureTemplateService[] | undefined>;
    /**
     * The template type
     */
    declare public /*out*/ readonly templateType: pulumi.Output<string>;
    /**
     * Source IP address for Tracker
     */
    declare public readonly trackerSourceIp: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly trackerSourceIpVariable: pulumi.Output<string | undefined>;
    /**
     * Tracker configuration
     */
    declare public readonly trackers: pulumi.Output<outputs.CiscoSecureInternetGatewayFeatureTemplateTracker[] | undefined>;
    /**
     * The version of the feature template
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;
    /**
     * List of VPN instances
     *   - Range: `0`-`65527`
     *   - Default value: `0`
     */
    declare public readonly vpnId: pulumi.Output<number | undefined>;

    /**
     * Create a CiscoSecureInternetGatewayFeatureTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CiscoSecureInternetGatewayFeatureTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CiscoSecureInternetGatewayFeatureTemplateArgs | CiscoSecureInternetGatewayFeatureTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CiscoSecureInternetGatewayFeatureTemplateState | undefined;
            resourceInputs["description"] = state?.description;
            resourceInputs["deviceTypes"] = state?.deviceTypes;
            resourceInputs["interfaces"] = state?.interfaces;
            resourceInputs["name"] = state?.name;
            resourceInputs["services"] = state?.services;
            resourceInputs["templateType"] = state?.templateType;
            resourceInputs["trackerSourceIp"] = state?.trackerSourceIp;
            resourceInputs["trackerSourceIpVariable"] = state?.trackerSourceIpVariable;
            resourceInputs["trackers"] = state?.trackers;
            resourceInputs["version"] = state?.version;
            resourceInputs["vpnId"] = state?.vpnId;
        } else {
            const args = argsOrState as CiscoSecureInternetGatewayFeatureTemplateArgs | undefined;
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if (args?.deviceTypes === undefined && !opts.urn) {
                throw new Error("Missing required property 'deviceTypes'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["deviceTypes"] = args?.deviceTypes;
            resourceInputs["interfaces"] = args?.interfaces;
            resourceInputs["name"] = args?.name;
            resourceInputs["services"] = args?.services;
            resourceInputs["trackerSourceIp"] = args?.trackerSourceIp;
            resourceInputs["trackerSourceIpVariable"] = args?.trackerSourceIpVariable;
            resourceInputs["trackers"] = args?.trackers;
            resourceInputs["vpnId"] = args?.vpnId;
            resourceInputs["templateType"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CiscoSecureInternetGatewayFeatureTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CiscoSecureInternetGatewayFeatureTemplate resources.
 */
export interface CiscoSecureInternetGatewayFeatureTemplateState {
    /**
     * The description of the feature template
     */
    description?: pulumi.Input<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Interface name: IPsec when present
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.CiscoSecureInternetGatewayFeatureTemplateInterface>[]>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Configure services
     */
    services?: pulumi.Input<pulumi.Input<inputs.CiscoSecureInternetGatewayFeatureTemplateService>[]>;
    /**
     * The template type
     */
    templateType?: pulumi.Input<string>;
    /**
     * Source IP address for Tracker
     */
    trackerSourceIp?: pulumi.Input<string>;
    /**
     * Variable name
     */
    trackerSourceIpVariable?: pulumi.Input<string>;
    /**
     * Tracker configuration
     */
    trackers?: pulumi.Input<pulumi.Input<inputs.CiscoSecureInternetGatewayFeatureTemplateTracker>[]>;
    /**
     * The version of the feature template
     */
    version?: pulumi.Input<number>;
    /**
     * List of VPN instances
     *   - Range: `0`-`65527`
     *   - Default value: `0`
     */
    vpnId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CiscoSecureInternetGatewayFeatureTemplate resource.
 */
export interface CiscoSecureInternetGatewayFeatureTemplateArgs {
    /**
     * The description of the feature template
     */
    description: pulumi.Input<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Interface name: IPsec when present
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.CiscoSecureInternetGatewayFeatureTemplateInterface>[]>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Configure services
     */
    services?: pulumi.Input<pulumi.Input<inputs.CiscoSecureInternetGatewayFeatureTemplateService>[]>;
    /**
     * Source IP address for Tracker
     */
    trackerSourceIp?: pulumi.Input<string>;
    /**
     * Variable name
     */
    trackerSourceIpVariable?: pulumi.Input<string>;
    /**
     * Tracker configuration
     */
    trackers?: pulumi.Input<pulumi.Input<inputs.CiscoSecureInternetGatewayFeatureTemplateTracker>[]>;
    /**
     * List of VPN instances
     *   - Range: `0`-`65527`
     *   - Default value: `0`
     */
    vpnId?: pulumi.Input<number>;
}
