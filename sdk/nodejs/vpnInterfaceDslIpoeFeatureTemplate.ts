// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a VPN Interface DSL IPoE feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import sdwan:index/vpnInterfaceDslIpoeFeatureTemplate:VpnInterfaceDslIpoeFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class VpnInterfaceDslIpoeFeatureTemplate extends pulumi.CustomResource {
    /**
     * Get an existing VpnInterfaceDslIpoeFeatureTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpnInterfaceDslIpoeFeatureTemplateState, opts?: pulumi.CustomResourceOptions): VpnInterfaceDslIpoeFeatureTemplate {
        return new VpnInterfaceDslIpoeFeatureTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/vpnInterfaceDslIpoeFeatureTemplate:VpnInterfaceDslIpoeFeatureTemplate';

    /**
     * Returns true if the given object is an instance of VpnInterfaceDslIpoeFeatureTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpnInterfaceDslIpoeFeatureTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpnInterfaceDslIpoeFeatureTemplate.__pulumiType;
    }

    /**
     * Apply ACL
     */
    public readonly accessLists!: pulumi.Output<outputs.VpnInterfaceDslIpoeFeatureTemplateAccessList[] | undefined>;
    /**
     * Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     */
    public readonly bandwidthDownstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly bandwidthDownstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     */
    public readonly bandwidthUpstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly bandwidthUpstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * CHAP Hostname
     */
    public readonly chapHostname!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly chapHostnameVariable!: pulumi.Output<string | undefined>;
    /**
     * Specify ppp chap authentication Password
     */
    public readonly chapPppAuthPassword!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly chapPppAuthPasswordVariable!: pulumi.Output<string | undefined>;
    /**
     * The description of the feature template
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    public readonly deviceTypes!: pulumi.Output<string[]>;
    /**
     * Dialer IP Negotiated - Default value: `false`
     */
    public readonly dialerAddressNegotiated!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly dialerAddressNegotiatedVariable!: pulumi.Output<string | undefined>;
    /**
     * Dialer pool number - Range: `1`-`255`
     */
    public readonly dialerPoolNumber!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly dialerPoolNumberVariable!: pulumi.Output<string | undefined>;
    /**
     * Encapsulation VLAN id - Range: `1`-`4094`
     */
    public readonly encap!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly encapVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface description
     */
    public readonly ethernetDescription!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ethernetDescriptionVariable!: pulumi.Output<string | undefined>;
    /**
     * Set administrative distance for DHCP default route - Range: `1`-`65536` - Default value: `1`
     */
    public readonly ethernetDhcpDistance!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly ethernetDhcpDistanceVariable!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ethernetDhcpHelperVariable!: pulumi.Output<string | undefined>;
    /**
     * List of DHCP IPv4 helper addresses
     */
    public readonly ethernetDhcpHelpers!: pulumi.Output<string[] | undefined>;
    /**
     * Enable DHCP - Default value: `false`
     */
    public readonly ethernetEnableDhcp!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly ethernetEnableDhcpVariable!: pulumi.Output<string | undefined>;
    /**
     * Ethernet Interface/Sub Interface Name including sub interface number
     */
    public readonly ethernetInterfaceName!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ethernetInterfaceNameVariable!: pulumi.Output<string | undefined>;
    /**
     * Assign IPv4 address
     */
    public readonly ethernetIpv4Address!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ethernetIpv4AddressVariable!: pulumi.Output<string | undefined>;
    /**
     * internal controller-type - Choices: `ipoe` - Default value: `ipoe`
     */
    public readonly internalControllerType!: pulumi.Output<string | undefined>;
    /**
     * IP Directed-Broadcast - Default value: `false`
     */
    public readonly ipDirectedBroadcast!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly ipDirectedBroadcastVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface MTU <576..2000>, in bytes - Range: `576`-`2000` - Default value: `1500`
     */
    public readonly ipMtu!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly ipMtuVariable!: pulumi.Output<string | undefined>;
    /**
     * The name of the feature template
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Network Address Translation on this interface - Default value: `false`
     */
    public readonly nat!: pulumi.Output<boolean | undefined>;
    /**
     * Block inbound ICMP error messages - Default value: `true`
     */
    public readonly natBlockIcmpError!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly natBlockIcmpErrorVariable!: pulumi.Output<string | undefined>;
    /**
     * Set port-forwarding rules for NAT on this interface
     */
    public readonly natPortForwards!: pulumi.Output<outputs.VpnInterfaceDslIpoeFeatureTemplateNatPortForward[] | undefined>;
    /**
     * Set NAT refresh mode - Choices: `outbound`, `bi-directional` - Default value: `outbound`
     */
    public readonly natRefreshMode!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly natRefreshModeVariable!: pulumi.Output<string | undefined>;
    /**
     * Respond to ping requests to NAT interface ip address from the public side - Default value: `false`
     */
    public readonly natResponseToPing!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly natResponseToPingVariable!: pulumi.Output<string | undefined>;
    /**
     * Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
     */
    public readonly natTcpTimeout!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly natTcpTimeoutVariable!: pulumi.Output<string | undefined>;
    /**
     * Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
     */
    public readonly natUdpTimeout!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly natUdpTimeoutVariable!: pulumi.Output<string | undefined>;
    /**
     * PAP outbound Password
     */
    public readonly papPassword!: pulumi.Output<boolean | undefined>;
    /**
     * Specify ppp pap authentication Password
     */
    public readonly papPppAuthPassword!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly papPppAuthPasswordVariable!: pulumi.Output<string | undefined>;
    /**
     * PAP outbound Sent Username
     */
    public readonly papUsername!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly papUsernameVariable!: pulumi.Output<string | undefined>;
    /**
     * Per-tunnel Qos - Default value: `false`
     */
    public readonly perTunnelQos!: pulumi.Output<boolean | undefined>;
    /**
     * Per-tunnel QoS Aggregator - Default value: `false`
     */
    public readonly perTunnelQosAggregator!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly perTunnelQosAggregatorVariable!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly perTunnelQosVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable policer
     */
    public readonly policers!: pulumi.Output<outputs.VpnInterfaceDslIpoeFeatureTemplatePolicer[] | undefined>;
    /**
     * PPP Link Authentication Protocol - Choices: `chap`, `pap`
     */
    public readonly pppAuthenticationProtocol!: pulumi.Output<string | undefined>;
    /**
     * PPP Authentication Protocol PAP - Default value: `false`
     */
    public readonly pppAuthenticationProtocolPap!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly pppAuthenticationProtocolVariable!: pulumi.Output<string | undefined>;
    /**
     * Maximum MRU to be negotiated during PPP LCP negotiation - Range: `64`-`1792`
     */
    public readonly pppMaximumPayload!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly pppMaximumPayloadVariable!: pulumi.Output<string | undefined>;
    /**
     * Adaptive QoS default downstream bandwidth - Range: `8`-`100000000`
     */
    public readonly qosAdaptiveBandwidthDownstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptiveBandwidthDownstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Adaptive QoS default upstream bandwidth - Range: `8`-`100000000`
     */
    public readonly qosAdaptiveBandwidthUpstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptiveBandwidthUpstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Downstream max bandwidth limit - Range: `8`-`100000000`
     */
    public readonly qosAdaptiveMaxDownstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptiveMaxDownstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Upstream max bandwidth limit - Range: `8`-`100000000`
     */
    public readonly qosAdaptiveMaxUpstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptiveMaxUpstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Downstream min bandwidth limit - Range: `8`-`100000000`
     */
    public readonly qosAdaptiveMinDownstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptiveMinDownstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Upstream min bandwidth limit - Range: `8`-`100000000`
     */
    public readonly qosAdaptiveMinUpstream!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptiveMinUpstreamVariable!: pulumi.Output<string | undefined>;
    /**
     * Periodic timer for adaptive QoS in minutes - Range: `1`-`720` - Default value: `15`
     */
    public readonly qosAdaptivePeriod!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly qosAdaptivePeriodVariable!: pulumi.Output<string | undefined>;
    /**
     * Name of QoS map
     */
    public readonly qosMap!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly qosMapVariable!: pulumi.Output<string | undefined>;
    /**
     * Name of VPN QoS map
     */
    public readonly qosMapVpn!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly qosMapVpnVariable!: pulumi.Output<string | undefined>;
    /**
     * 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
     */
    public readonly shapingRate!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly shapingRateVariable!: pulumi.Output<string | undefined>;
    /**
     * Administrative state - Default value: `true`
     */
    public readonly shutdown!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly shutdownVariable!: pulumi.Output<string | undefined>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
     */
    public readonly tcpMss!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tcpMssVariable!: pulumi.Output<string | undefined>;
    /**
     * The template type
     */
    public /*out*/ readonly templateType!: pulumi.Output<string>;
    /**
     * Extends a local TLOC to a remote node only for vpn 0
     */
    public readonly tlocExtension!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tlocExtensionVariable!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly trackerVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable tracker for this interface
     */
    public readonly trackers!: pulumi.Output<string[] | undefined>;
    /**
     * Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
     */
    public readonly tunnelInterfaceAllowAll!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowAllVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/deny BGP - Default value: `false`
     */
    public readonly tunnelInterfaceAllowBgp!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowBgpVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny DHCP - Default value: `true`
     */
    public readonly tunnelInterfaceAllowDhcp!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowDhcpVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny DNS - Default value: `true`
     */
    public readonly tunnelInterfaceAllowDns!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowDnsVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny Https - Default value: `false`
     */
    public readonly tunnelInterfaceAllowHttps!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowHttpsVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny ICMP - Default value: `true`
     */
    public readonly tunnelInterfaceAllowIcmp!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowIcmpVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny NETCONF - Default value: `false`
     */
    public readonly tunnelInterfaceAllowNetconf!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowNetconfVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny NTP - Default value: `false`
     */
    public readonly tunnelInterfaceAllowNtp!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowNtpVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny OSPF - Default value: `false`
     */
    public readonly tunnelInterfaceAllowOspf!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowOspfVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny SNMP - Default value: `false`
     */
    public readonly tunnelInterfaceAllowSnmp!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowSnmpVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny SSH - Default value: `false`
     */
    public readonly tunnelInterfaceAllowSsh!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowSshVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow/Deny STUN - Default value: `false`
     */
    public readonly tunnelInterfaceAllowStun!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceAllowStunVariable!: pulumi.Output<string | undefined>;
    /**
     * Bind loopback tunnel interface to a physical interface
     */
    public readonly tunnelInterfaceBindLoopbackTunnel!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceBindLoopbackTunnelVariable!: pulumi.Output<string | undefined>;
    /**
     * Set TLOC as border TLOC - Default value: `false`
     */
    public readonly tunnelInterfaceBorder!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceBorderVariable!: pulumi.Output<string | undefined>;
    /**
     * Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
     * `carrier7`, `carrier8` - Default value: `default`
     */
    public readonly tunnelInterfaceCarrier!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceCarrierVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     */
    public readonly tunnelInterfaceClearDontFragment!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceClearDontFragmentVariable!: pulumi.Output<string | undefined>;
    /**
     * Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
     * `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
     * `private4`, `private5`, `private6` - Default value: `default`
     */
    public readonly tunnelInterfaceColor!: pulumi.Output<string | undefined>;
    /**
     * Restrict this TLOC behavior - Default value: `false`
     */
    public readonly tunnelInterfaceColorRestrict!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceColorVariable!: pulumi.Output<string | undefined>;
    /**
     * Allow Control Connection - Default value: `true`
     */
    public readonly tunnelInterfaceControlConnections!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceControlConnectionsVariable!: pulumi.Output<string | undefined>;
    /**
     * Encapsulation for TLOC
     */
    public readonly tunnelInterfaceEncapsulations!: pulumi.Output<outputs.VpnInterfaceDslIpoeFeatureTemplateTunnelInterfaceEncapsulation[] | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceExcludeControllerGroupListVariable!: pulumi.Output<string | undefined>;
    /**
     * Exclude the following controller groups defined in this list
     */
    public readonly tunnelInterfaceExcludeControllerGroupLists!: pulumi.Output<number[] | undefined>;
    /**
     * List of groups
     */
    public readonly tunnelInterfaceGroups!: pulumi.Output<number[] | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceGroupsVariable!: pulumi.Output<string | undefined>;
    /**
     * Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
     */
    public readonly tunnelInterfaceHelloInterval!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceHelloIntervalVariable!: pulumi.Output<string | undefined>;
    /**
     * Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
     */
    public readonly tunnelInterfaceHelloTolerance!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceHelloToleranceVariable!: pulumi.Output<string | undefined>;
    /**
     * Set TLOC as last resort - Default value: `false`
     */
    public readonly tunnelInterfaceLastResortCircuit!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceLastResortCircuitVariable!: pulumi.Output<string | undefined>;
    /**
     * Set the interface as a low-bandwidth circuit - Default value: `false`
     */
    public readonly tunnelInterfaceLowBandwidthLink!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceLowBandwidthLinkVariable!: pulumi.Output<string | undefined>;
    /**
     * Set the maximum number of control connections for this TLOC - Range: `0`-`8`
     */
    public readonly tunnelInterfaceMaxControlConnections!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceMaxControlConnectionsVariable!: pulumi.Output<string | undefined>;
    /**
     * Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
     */
    public readonly tunnelInterfaceNatRefreshInterval!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceNatRefreshIntervalVariable!: pulumi.Output<string | undefined>;
    /**
     * Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
     */
    public readonly tunnelInterfaceNetworkBroadcast!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceNetworkBroadcastVariable!: pulumi.Output<string | undefined>;
    /**
     * Disallow port hopping on the tunnel interface - Default value: `true`
     */
    public readonly tunnelInterfacePortHop!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfacePortHopVariable!: pulumi.Output<string | undefined>;
    /**
     * Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    public readonly tunnelInterfaceTunnelTcpMss!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceTunnelTcpMssVariable!: pulumi.Output<string | undefined>;
    /**
     * Put this wan interface in STUN mode only - Default value: `false`
     */
    public readonly tunnelInterfaceVbondAsStunServer!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceVbondAsStunServerVariable!: pulumi.Output<string | undefined>;
    /**
     * Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
     */
    public readonly tunnelInterfaceVmanageConnectionPreference!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelInterfaceVmanageConnectionPreferenceVariable!: pulumi.Output<string | undefined>;
    /**
     * Set tunnel QoS mode - Choices: `spoke`
     */
    public readonly tunnelQosMode!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly tunnelQosModeVariable!: pulumi.Output<string | undefined>;
    /**
     * Dialer IP Unnumbered Loopback interface name
     */
    public readonly unnumberedLoopbackInterface!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly unnumberedLoopbackInterfaceVariable!: pulumi.Output<string | undefined>;
    /**
     * vdsl
     */
    public readonly vdslConfigurations!: pulumi.Output<outputs.VpnInterfaceDslIpoeFeatureTemplateVdslConfiguration[] | undefined>;
    /**
     * The version of the feature template
     */
    public /*out*/ readonly version!: pulumi.Output<number>;
    /**
     * Name of rewrite rule
     */
    public readonly writeRule!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly writeRuleVariable!: pulumi.Output<string | undefined>;

    /**
     * Create a VpnInterfaceDslIpoeFeatureTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpnInterfaceDslIpoeFeatureTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpnInterfaceDslIpoeFeatureTemplateArgs | VpnInterfaceDslIpoeFeatureTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpnInterfaceDslIpoeFeatureTemplateState | undefined;
            resourceInputs["accessLists"] = state ? state.accessLists : undefined;
            resourceInputs["bandwidthDownstream"] = state ? state.bandwidthDownstream : undefined;
            resourceInputs["bandwidthDownstreamVariable"] = state ? state.bandwidthDownstreamVariable : undefined;
            resourceInputs["bandwidthUpstream"] = state ? state.bandwidthUpstream : undefined;
            resourceInputs["bandwidthUpstreamVariable"] = state ? state.bandwidthUpstreamVariable : undefined;
            resourceInputs["chapHostname"] = state ? state.chapHostname : undefined;
            resourceInputs["chapHostnameVariable"] = state ? state.chapHostnameVariable : undefined;
            resourceInputs["chapPppAuthPassword"] = state ? state.chapPppAuthPassword : undefined;
            resourceInputs["chapPppAuthPasswordVariable"] = state ? state.chapPppAuthPasswordVariable : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceTypes"] = state ? state.deviceTypes : undefined;
            resourceInputs["dialerAddressNegotiated"] = state ? state.dialerAddressNegotiated : undefined;
            resourceInputs["dialerAddressNegotiatedVariable"] = state ? state.dialerAddressNegotiatedVariable : undefined;
            resourceInputs["dialerPoolNumber"] = state ? state.dialerPoolNumber : undefined;
            resourceInputs["dialerPoolNumberVariable"] = state ? state.dialerPoolNumberVariable : undefined;
            resourceInputs["encap"] = state ? state.encap : undefined;
            resourceInputs["encapVariable"] = state ? state.encapVariable : undefined;
            resourceInputs["ethernetDescription"] = state ? state.ethernetDescription : undefined;
            resourceInputs["ethernetDescriptionVariable"] = state ? state.ethernetDescriptionVariable : undefined;
            resourceInputs["ethernetDhcpDistance"] = state ? state.ethernetDhcpDistance : undefined;
            resourceInputs["ethernetDhcpDistanceVariable"] = state ? state.ethernetDhcpDistanceVariable : undefined;
            resourceInputs["ethernetDhcpHelperVariable"] = state ? state.ethernetDhcpHelperVariable : undefined;
            resourceInputs["ethernetDhcpHelpers"] = state ? state.ethernetDhcpHelpers : undefined;
            resourceInputs["ethernetEnableDhcp"] = state ? state.ethernetEnableDhcp : undefined;
            resourceInputs["ethernetEnableDhcpVariable"] = state ? state.ethernetEnableDhcpVariable : undefined;
            resourceInputs["ethernetInterfaceName"] = state ? state.ethernetInterfaceName : undefined;
            resourceInputs["ethernetInterfaceNameVariable"] = state ? state.ethernetInterfaceNameVariable : undefined;
            resourceInputs["ethernetIpv4Address"] = state ? state.ethernetIpv4Address : undefined;
            resourceInputs["ethernetIpv4AddressVariable"] = state ? state.ethernetIpv4AddressVariable : undefined;
            resourceInputs["internalControllerType"] = state ? state.internalControllerType : undefined;
            resourceInputs["ipDirectedBroadcast"] = state ? state.ipDirectedBroadcast : undefined;
            resourceInputs["ipDirectedBroadcastVariable"] = state ? state.ipDirectedBroadcastVariable : undefined;
            resourceInputs["ipMtu"] = state ? state.ipMtu : undefined;
            resourceInputs["ipMtuVariable"] = state ? state.ipMtuVariable : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nat"] = state ? state.nat : undefined;
            resourceInputs["natBlockIcmpError"] = state ? state.natBlockIcmpError : undefined;
            resourceInputs["natBlockIcmpErrorVariable"] = state ? state.natBlockIcmpErrorVariable : undefined;
            resourceInputs["natPortForwards"] = state ? state.natPortForwards : undefined;
            resourceInputs["natRefreshMode"] = state ? state.natRefreshMode : undefined;
            resourceInputs["natRefreshModeVariable"] = state ? state.natRefreshModeVariable : undefined;
            resourceInputs["natResponseToPing"] = state ? state.natResponseToPing : undefined;
            resourceInputs["natResponseToPingVariable"] = state ? state.natResponseToPingVariable : undefined;
            resourceInputs["natTcpTimeout"] = state ? state.natTcpTimeout : undefined;
            resourceInputs["natTcpTimeoutVariable"] = state ? state.natTcpTimeoutVariable : undefined;
            resourceInputs["natUdpTimeout"] = state ? state.natUdpTimeout : undefined;
            resourceInputs["natUdpTimeoutVariable"] = state ? state.natUdpTimeoutVariable : undefined;
            resourceInputs["papPassword"] = state ? state.papPassword : undefined;
            resourceInputs["papPppAuthPassword"] = state ? state.papPppAuthPassword : undefined;
            resourceInputs["papPppAuthPasswordVariable"] = state ? state.papPppAuthPasswordVariable : undefined;
            resourceInputs["papUsername"] = state ? state.papUsername : undefined;
            resourceInputs["papUsernameVariable"] = state ? state.papUsernameVariable : undefined;
            resourceInputs["perTunnelQos"] = state ? state.perTunnelQos : undefined;
            resourceInputs["perTunnelQosAggregator"] = state ? state.perTunnelQosAggregator : undefined;
            resourceInputs["perTunnelQosAggregatorVariable"] = state ? state.perTunnelQosAggregatorVariable : undefined;
            resourceInputs["perTunnelQosVariable"] = state ? state.perTunnelQosVariable : undefined;
            resourceInputs["policers"] = state ? state.policers : undefined;
            resourceInputs["pppAuthenticationProtocol"] = state ? state.pppAuthenticationProtocol : undefined;
            resourceInputs["pppAuthenticationProtocolPap"] = state ? state.pppAuthenticationProtocolPap : undefined;
            resourceInputs["pppAuthenticationProtocolVariable"] = state ? state.pppAuthenticationProtocolVariable : undefined;
            resourceInputs["pppMaximumPayload"] = state ? state.pppMaximumPayload : undefined;
            resourceInputs["pppMaximumPayloadVariable"] = state ? state.pppMaximumPayloadVariable : undefined;
            resourceInputs["qosAdaptiveBandwidthDownstream"] = state ? state.qosAdaptiveBandwidthDownstream : undefined;
            resourceInputs["qosAdaptiveBandwidthDownstreamVariable"] = state ? state.qosAdaptiveBandwidthDownstreamVariable : undefined;
            resourceInputs["qosAdaptiveBandwidthUpstream"] = state ? state.qosAdaptiveBandwidthUpstream : undefined;
            resourceInputs["qosAdaptiveBandwidthUpstreamVariable"] = state ? state.qosAdaptiveBandwidthUpstreamVariable : undefined;
            resourceInputs["qosAdaptiveMaxDownstream"] = state ? state.qosAdaptiveMaxDownstream : undefined;
            resourceInputs["qosAdaptiveMaxDownstreamVariable"] = state ? state.qosAdaptiveMaxDownstreamVariable : undefined;
            resourceInputs["qosAdaptiveMaxUpstream"] = state ? state.qosAdaptiveMaxUpstream : undefined;
            resourceInputs["qosAdaptiveMaxUpstreamVariable"] = state ? state.qosAdaptiveMaxUpstreamVariable : undefined;
            resourceInputs["qosAdaptiveMinDownstream"] = state ? state.qosAdaptiveMinDownstream : undefined;
            resourceInputs["qosAdaptiveMinDownstreamVariable"] = state ? state.qosAdaptiveMinDownstreamVariable : undefined;
            resourceInputs["qosAdaptiveMinUpstream"] = state ? state.qosAdaptiveMinUpstream : undefined;
            resourceInputs["qosAdaptiveMinUpstreamVariable"] = state ? state.qosAdaptiveMinUpstreamVariable : undefined;
            resourceInputs["qosAdaptivePeriod"] = state ? state.qosAdaptivePeriod : undefined;
            resourceInputs["qosAdaptivePeriodVariable"] = state ? state.qosAdaptivePeriodVariable : undefined;
            resourceInputs["qosMap"] = state ? state.qosMap : undefined;
            resourceInputs["qosMapVariable"] = state ? state.qosMapVariable : undefined;
            resourceInputs["qosMapVpn"] = state ? state.qosMapVpn : undefined;
            resourceInputs["qosMapVpnVariable"] = state ? state.qosMapVpnVariable : undefined;
            resourceInputs["shapingRate"] = state ? state.shapingRate : undefined;
            resourceInputs["shapingRateVariable"] = state ? state.shapingRateVariable : undefined;
            resourceInputs["shutdown"] = state ? state.shutdown : undefined;
            resourceInputs["shutdownVariable"] = state ? state.shutdownVariable : undefined;
            resourceInputs["tcpMss"] = state ? state.tcpMss : undefined;
            resourceInputs["tcpMssVariable"] = state ? state.tcpMssVariable : undefined;
            resourceInputs["templateType"] = state ? state.templateType : undefined;
            resourceInputs["tlocExtension"] = state ? state.tlocExtension : undefined;
            resourceInputs["tlocExtensionVariable"] = state ? state.tlocExtensionVariable : undefined;
            resourceInputs["trackerVariable"] = state ? state.trackerVariable : undefined;
            resourceInputs["trackers"] = state ? state.trackers : undefined;
            resourceInputs["tunnelInterfaceAllowAll"] = state ? state.tunnelInterfaceAllowAll : undefined;
            resourceInputs["tunnelInterfaceAllowAllVariable"] = state ? state.tunnelInterfaceAllowAllVariable : undefined;
            resourceInputs["tunnelInterfaceAllowBgp"] = state ? state.tunnelInterfaceAllowBgp : undefined;
            resourceInputs["tunnelInterfaceAllowBgpVariable"] = state ? state.tunnelInterfaceAllowBgpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowDhcp"] = state ? state.tunnelInterfaceAllowDhcp : undefined;
            resourceInputs["tunnelInterfaceAllowDhcpVariable"] = state ? state.tunnelInterfaceAllowDhcpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowDns"] = state ? state.tunnelInterfaceAllowDns : undefined;
            resourceInputs["tunnelInterfaceAllowDnsVariable"] = state ? state.tunnelInterfaceAllowDnsVariable : undefined;
            resourceInputs["tunnelInterfaceAllowHttps"] = state ? state.tunnelInterfaceAllowHttps : undefined;
            resourceInputs["tunnelInterfaceAllowHttpsVariable"] = state ? state.tunnelInterfaceAllowHttpsVariable : undefined;
            resourceInputs["tunnelInterfaceAllowIcmp"] = state ? state.tunnelInterfaceAllowIcmp : undefined;
            resourceInputs["tunnelInterfaceAllowIcmpVariable"] = state ? state.tunnelInterfaceAllowIcmpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowNetconf"] = state ? state.tunnelInterfaceAllowNetconf : undefined;
            resourceInputs["tunnelInterfaceAllowNetconfVariable"] = state ? state.tunnelInterfaceAllowNetconfVariable : undefined;
            resourceInputs["tunnelInterfaceAllowNtp"] = state ? state.tunnelInterfaceAllowNtp : undefined;
            resourceInputs["tunnelInterfaceAllowNtpVariable"] = state ? state.tunnelInterfaceAllowNtpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowOspf"] = state ? state.tunnelInterfaceAllowOspf : undefined;
            resourceInputs["tunnelInterfaceAllowOspfVariable"] = state ? state.tunnelInterfaceAllowOspfVariable : undefined;
            resourceInputs["tunnelInterfaceAllowSnmp"] = state ? state.tunnelInterfaceAllowSnmp : undefined;
            resourceInputs["tunnelInterfaceAllowSnmpVariable"] = state ? state.tunnelInterfaceAllowSnmpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowSsh"] = state ? state.tunnelInterfaceAllowSsh : undefined;
            resourceInputs["tunnelInterfaceAllowSshVariable"] = state ? state.tunnelInterfaceAllowSshVariable : undefined;
            resourceInputs["tunnelInterfaceAllowStun"] = state ? state.tunnelInterfaceAllowStun : undefined;
            resourceInputs["tunnelInterfaceAllowStunVariable"] = state ? state.tunnelInterfaceAllowStunVariable : undefined;
            resourceInputs["tunnelInterfaceBindLoopbackTunnel"] = state ? state.tunnelInterfaceBindLoopbackTunnel : undefined;
            resourceInputs["tunnelInterfaceBindLoopbackTunnelVariable"] = state ? state.tunnelInterfaceBindLoopbackTunnelVariable : undefined;
            resourceInputs["tunnelInterfaceBorder"] = state ? state.tunnelInterfaceBorder : undefined;
            resourceInputs["tunnelInterfaceBorderVariable"] = state ? state.tunnelInterfaceBorderVariable : undefined;
            resourceInputs["tunnelInterfaceCarrier"] = state ? state.tunnelInterfaceCarrier : undefined;
            resourceInputs["tunnelInterfaceCarrierVariable"] = state ? state.tunnelInterfaceCarrierVariable : undefined;
            resourceInputs["tunnelInterfaceClearDontFragment"] = state ? state.tunnelInterfaceClearDontFragment : undefined;
            resourceInputs["tunnelInterfaceClearDontFragmentVariable"] = state ? state.tunnelInterfaceClearDontFragmentVariable : undefined;
            resourceInputs["tunnelInterfaceColor"] = state ? state.tunnelInterfaceColor : undefined;
            resourceInputs["tunnelInterfaceColorRestrict"] = state ? state.tunnelInterfaceColorRestrict : undefined;
            resourceInputs["tunnelInterfaceColorVariable"] = state ? state.tunnelInterfaceColorVariable : undefined;
            resourceInputs["tunnelInterfaceControlConnections"] = state ? state.tunnelInterfaceControlConnections : undefined;
            resourceInputs["tunnelInterfaceControlConnectionsVariable"] = state ? state.tunnelInterfaceControlConnectionsVariable : undefined;
            resourceInputs["tunnelInterfaceEncapsulations"] = state ? state.tunnelInterfaceEncapsulations : undefined;
            resourceInputs["tunnelInterfaceExcludeControllerGroupListVariable"] = state ? state.tunnelInterfaceExcludeControllerGroupListVariable : undefined;
            resourceInputs["tunnelInterfaceExcludeControllerGroupLists"] = state ? state.tunnelInterfaceExcludeControllerGroupLists : undefined;
            resourceInputs["tunnelInterfaceGroups"] = state ? state.tunnelInterfaceGroups : undefined;
            resourceInputs["tunnelInterfaceGroupsVariable"] = state ? state.tunnelInterfaceGroupsVariable : undefined;
            resourceInputs["tunnelInterfaceHelloInterval"] = state ? state.tunnelInterfaceHelloInterval : undefined;
            resourceInputs["tunnelInterfaceHelloIntervalVariable"] = state ? state.tunnelInterfaceHelloIntervalVariable : undefined;
            resourceInputs["tunnelInterfaceHelloTolerance"] = state ? state.tunnelInterfaceHelloTolerance : undefined;
            resourceInputs["tunnelInterfaceHelloToleranceVariable"] = state ? state.tunnelInterfaceHelloToleranceVariable : undefined;
            resourceInputs["tunnelInterfaceLastResortCircuit"] = state ? state.tunnelInterfaceLastResortCircuit : undefined;
            resourceInputs["tunnelInterfaceLastResortCircuitVariable"] = state ? state.tunnelInterfaceLastResortCircuitVariable : undefined;
            resourceInputs["tunnelInterfaceLowBandwidthLink"] = state ? state.tunnelInterfaceLowBandwidthLink : undefined;
            resourceInputs["tunnelInterfaceLowBandwidthLinkVariable"] = state ? state.tunnelInterfaceLowBandwidthLinkVariable : undefined;
            resourceInputs["tunnelInterfaceMaxControlConnections"] = state ? state.tunnelInterfaceMaxControlConnections : undefined;
            resourceInputs["tunnelInterfaceMaxControlConnectionsVariable"] = state ? state.tunnelInterfaceMaxControlConnectionsVariable : undefined;
            resourceInputs["tunnelInterfaceNatRefreshInterval"] = state ? state.tunnelInterfaceNatRefreshInterval : undefined;
            resourceInputs["tunnelInterfaceNatRefreshIntervalVariable"] = state ? state.tunnelInterfaceNatRefreshIntervalVariable : undefined;
            resourceInputs["tunnelInterfaceNetworkBroadcast"] = state ? state.tunnelInterfaceNetworkBroadcast : undefined;
            resourceInputs["tunnelInterfaceNetworkBroadcastVariable"] = state ? state.tunnelInterfaceNetworkBroadcastVariable : undefined;
            resourceInputs["tunnelInterfacePortHop"] = state ? state.tunnelInterfacePortHop : undefined;
            resourceInputs["tunnelInterfacePortHopVariable"] = state ? state.tunnelInterfacePortHopVariable : undefined;
            resourceInputs["tunnelInterfaceTunnelTcpMss"] = state ? state.tunnelInterfaceTunnelTcpMss : undefined;
            resourceInputs["tunnelInterfaceTunnelTcpMssVariable"] = state ? state.tunnelInterfaceTunnelTcpMssVariable : undefined;
            resourceInputs["tunnelInterfaceVbondAsStunServer"] = state ? state.tunnelInterfaceVbondAsStunServer : undefined;
            resourceInputs["tunnelInterfaceVbondAsStunServerVariable"] = state ? state.tunnelInterfaceVbondAsStunServerVariable : undefined;
            resourceInputs["tunnelInterfaceVmanageConnectionPreference"] = state ? state.tunnelInterfaceVmanageConnectionPreference : undefined;
            resourceInputs["tunnelInterfaceVmanageConnectionPreferenceVariable"] = state ? state.tunnelInterfaceVmanageConnectionPreferenceVariable : undefined;
            resourceInputs["tunnelQosMode"] = state ? state.tunnelQosMode : undefined;
            resourceInputs["tunnelQosModeVariable"] = state ? state.tunnelQosModeVariable : undefined;
            resourceInputs["unnumberedLoopbackInterface"] = state ? state.unnumberedLoopbackInterface : undefined;
            resourceInputs["unnumberedLoopbackInterfaceVariable"] = state ? state.unnumberedLoopbackInterfaceVariable : undefined;
            resourceInputs["vdslConfigurations"] = state ? state.vdslConfigurations : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["writeRule"] = state ? state.writeRule : undefined;
            resourceInputs["writeRuleVariable"] = state ? state.writeRuleVariable : undefined;
        } else {
            const args = argsOrState as VpnInterfaceDslIpoeFeatureTemplateArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.deviceTypes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceTypes'");
            }
            resourceInputs["accessLists"] = args ? args.accessLists : undefined;
            resourceInputs["bandwidthDownstream"] = args ? args.bandwidthDownstream : undefined;
            resourceInputs["bandwidthDownstreamVariable"] = args ? args.bandwidthDownstreamVariable : undefined;
            resourceInputs["bandwidthUpstream"] = args ? args.bandwidthUpstream : undefined;
            resourceInputs["bandwidthUpstreamVariable"] = args ? args.bandwidthUpstreamVariable : undefined;
            resourceInputs["chapHostname"] = args ? args.chapHostname : undefined;
            resourceInputs["chapHostnameVariable"] = args ? args.chapHostnameVariable : undefined;
            resourceInputs["chapPppAuthPassword"] = args ? args.chapPppAuthPassword : undefined;
            resourceInputs["chapPppAuthPasswordVariable"] = args ? args.chapPppAuthPasswordVariable : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceTypes"] = args ? args.deviceTypes : undefined;
            resourceInputs["dialerAddressNegotiated"] = args ? args.dialerAddressNegotiated : undefined;
            resourceInputs["dialerAddressNegotiatedVariable"] = args ? args.dialerAddressNegotiatedVariable : undefined;
            resourceInputs["dialerPoolNumber"] = args ? args.dialerPoolNumber : undefined;
            resourceInputs["dialerPoolNumberVariable"] = args ? args.dialerPoolNumberVariable : undefined;
            resourceInputs["encap"] = args ? args.encap : undefined;
            resourceInputs["encapVariable"] = args ? args.encapVariable : undefined;
            resourceInputs["ethernetDescription"] = args ? args.ethernetDescription : undefined;
            resourceInputs["ethernetDescriptionVariable"] = args ? args.ethernetDescriptionVariable : undefined;
            resourceInputs["ethernetDhcpDistance"] = args ? args.ethernetDhcpDistance : undefined;
            resourceInputs["ethernetDhcpDistanceVariable"] = args ? args.ethernetDhcpDistanceVariable : undefined;
            resourceInputs["ethernetDhcpHelperVariable"] = args ? args.ethernetDhcpHelperVariable : undefined;
            resourceInputs["ethernetDhcpHelpers"] = args ? args.ethernetDhcpHelpers : undefined;
            resourceInputs["ethernetEnableDhcp"] = args ? args.ethernetEnableDhcp : undefined;
            resourceInputs["ethernetEnableDhcpVariable"] = args ? args.ethernetEnableDhcpVariable : undefined;
            resourceInputs["ethernetInterfaceName"] = args ? args.ethernetInterfaceName : undefined;
            resourceInputs["ethernetInterfaceNameVariable"] = args ? args.ethernetInterfaceNameVariable : undefined;
            resourceInputs["ethernetIpv4Address"] = args ? args.ethernetIpv4Address : undefined;
            resourceInputs["ethernetIpv4AddressVariable"] = args ? args.ethernetIpv4AddressVariable : undefined;
            resourceInputs["internalControllerType"] = args ? args.internalControllerType : undefined;
            resourceInputs["ipDirectedBroadcast"] = args ? args.ipDirectedBroadcast : undefined;
            resourceInputs["ipDirectedBroadcastVariable"] = args ? args.ipDirectedBroadcastVariable : undefined;
            resourceInputs["ipMtu"] = args ? args.ipMtu : undefined;
            resourceInputs["ipMtuVariable"] = args ? args.ipMtuVariable : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nat"] = args ? args.nat : undefined;
            resourceInputs["natBlockIcmpError"] = args ? args.natBlockIcmpError : undefined;
            resourceInputs["natBlockIcmpErrorVariable"] = args ? args.natBlockIcmpErrorVariable : undefined;
            resourceInputs["natPortForwards"] = args ? args.natPortForwards : undefined;
            resourceInputs["natRefreshMode"] = args ? args.natRefreshMode : undefined;
            resourceInputs["natRefreshModeVariable"] = args ? args.natRefreshModeVariable : undefined;
            resourceInputs["natResponseToPing"] = args ? args.natResponseToPing : undefined;
            resourceInputs["natResponseToPingVariable"] = args ? args.natResponseToPingVariable : undefined;
            resourceInputs["natTcpTimeout"] = args ? args.natTcpTimeout : undefined;
            resourceInputs["natTcpTimeoutVariable"] = args ? args.natTcpTimeoutVariable : undefined;
            resourceInputs["natUdpTimeout"] = args ? args.natUdpTimeout : undefined;
            resourceInputs["natUdpTimeoutVariable"] = args ? args.natUdpTimeoutVariable : undefined;
            resourceInputs["papPassword"] = args ? args.papPassword : undefined;
            resourceInputs["papPppAuthPassword"] = args ? args.papPppAuthPassword : undefined;
            resourceInputs["papPppAuthPasswordVariable"] = args ? args.papPppAuthPasswordVariable : undefined;
            resourceInputs["papUsername"] = args ? args.papUsername : undefined;
            resourceInputs["papUsernameVariable"] = args ? args.papUsernameVariable : undefined;
            resourceInputs["perTunnelQos"] = args ? args.perTunnelQos : undefined;
            resourceInputs["perTunnelQosAggregator"] = args ? args.perTunnelQosAggregator : undefined;
            resourceInputs["perTunnelQosAggregatorVariable"] = args ? args.perTunnelQosAggregatorVariable : undefined;
            resourceInputs["perTunnelQosVariable"] = args ? args.perTunnelQosVariable : undefined;
            resourceInputs["policers"] = args ? args.policers : undefined;
            resourceInputs["pppAuthenticationProtocol"] = args ? args.pppAuthenticationProtocol : undefined;
            resourceInputs["pppAuthenticationProtocolPap"] = args ? args.pppAuthenticationProtocolPap : undefined;
            resourceInputs["pppAuthenticationProtocolVariable"] = args ? args.pppAuthenticationProtocolVariable : undefined;
            resourceInputs["pppMaximumPayload"] = args ? args.pppMaximumPayload : undefined;
            resourceInputs["pppMaximumPayloadVariable"] = args ? args.pppMaximumPayloadVariable : undefined;
            resourceInputs["qosAdaptiveBandwidthDownstream"] = args ? args.qosAdaptiveBandwidthDownstream : undefined;
            resourceInputs["qosAdaptiveBandwidthDownstreamVariable"] = args ? args.qosAdaptiveBandwidthDownstreamVariable : undefined;
            resourceInputs["qosAdaptiveBandwidthUpstream"] = args ? args.qosAdaptiveBandwidthUpstream : undefined;
            resourceInputs["qosAdaptiveBandwidthUpstreamVariable"] = args ? args.qosAdaptiveBandwidthUpstreamVariable : undefined;
            resourceInputs["qosAdaptiveMaxDownstream"] = args ? args.qosAdaptiveMaxDownstream : undefined;
            resourceInputs["qosAdaptiveMaxDownstreamVariable"] = args ? args.qosAdaptiveMaxDownstreamVariable : undefined;
            resourceInputs["qosAdaptiveMaxUpstream"] = args ? args.qosAdaptiveMaxUpstream : undefined;
            resourceInputs["qosAdaptiveMaxUpstreamVariable"] = args ? args.qosAdaptiveMaxUpstreamVariable : undefined;
            resourceInputs["qosAdaptiveMinDownstream"] = args ? args.qosAdaptiveMinDownstream : undefined;
            resourceInputs["qosAdaptiveMinDownstreamVariable"] = args ? args.qosAdaptiveMinDownstreamVariable : undefined;
            resourceInputs["qosAdaptiveMinUpstream"] = args ? args.qosAdaptiveMinUpstream : undefined;
            resourceInputs["qosAdaptiveMinUpstreamVariable"] = args ? args.qosAdaptiveMinUpstreamVariable : undefined;
            resourceInputs["qosAdaptivePeriod"] = args ? args.qosAdaptivePeriod : undefined;
            resourceInputs["qosAdaptivePeriodVariable"] = args ? args.qosAdaptivePeriodVariable : undefined;
            resourceInputs["qosMap"] = args ? args.qosMap : undefined;
            resourceInputs["qosMapVariable"] = args ? args.qosMapVariable : undefined;
            resourceInputs["qosMapVpn"] = args ? args.qosMapVpn : undefined;
            resourceInputs["qosMapVpnVariable"] = args ? args.qosMapVpnVariable : undefined;
            resourceInputs["shapingRate"] = args ? args.shapingRate : undefined;
            resourceInputs["shapingRateVariable"] = args ? args.shapingRateVariable : undefined;
            resourceInputs["shutdown"] = args ? args.shutdown : undefined;
            resourceInputs["shutdownVariable"] = args ? args.shutdownVariable : undefined;
            resourceInputs["tcpMss"] = args ? args.tcpMss : undefined;
            resourceInputs["tcpMssVariable"] = args ? args.tcpMssVariable : undefined;
            resourceInputs["tlocExtension"] = args ? args.tlocExtension : undefined;
            resourceInputs["tlocExtensionVariable"] = args ? args.tlocExtensionVariable : undefined;
            resourceInputs["trackerVariable"] = args ? args.trackerVariable : undefined;
            resourceInputs["trackers"] = args ? args.trackers : undefined;
            resourceInputs["tunnelInterfaceAllowAll"] = args ? args.tunnelInterfaceAllowAll : undefined;
            resourceInputs["tunnelInterfaceAllowAllVariable"] = args ? args.tunnelInterfaceAllowAllVariable : undefined;
            resourceInputs["tunnelInterfaceAllowBgp"] = args ? args.tunnelInterfaceAllowBgp : undefined;
            resourceInputs["tunnelInterfaceAllowBgpVariable"] = args ? args.tunnelInterfaceAllowBgpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowDhcp"] = args ? args.tunnelInterfaceAllowDhcp : undefined;
            resourceInputs["tunnelInterfaceAllowDhcpVariable"] = args ? args.tunnelInterfaceAllowDhcpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowDns"] = args ? args.tunnelInterfaceAllowDns : undefined;
            resourceInputs["tunnelInterfaceAllowDnsVariable"] = args ? args.tunnelInterfaceAllowDnsVariable : undefined;
            resourceInputs["tunnelInterfaceAllowHttps"] = args ? args.tunnelInterfaceAllowHttps : undefined;
            resourceInputs["tunnelInterfaceAllowHttpsVariable"] = args ? args.tunnelInterfaceAllowHttpsVariable : undefined;
            resourceInputs["tunnelInterfaceAllowIcmp"] = args ? args.tunnelInterfaceAllowIcmp : undefined;
            resourceInputs["tunnelInterfaceAllowIcmpVariable"] = args ? args.tunnelInterfaceAllowIcmpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowNetconf"] = args ? args.tunnelInterfaceAllowNetconf : undefined;
            resourceInputs["tunnelInterfaceAllowNetconfVariable"] = args ? args.tunnelInterfaceAllowNetconfVariable : undefined;
            resourceInputs["tunnelInterfaceAllowNtp"] = args ? args.tunnelInterfaceAllowNtp : undefined;
            resourceInputs["tunnelInterfaceAllowNtpVariable"] = args ? args.tunnelInterfaceAllowNtpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowOspf"] = args ? args.tunnelInterfaceAllowOspf : undefined;
            resourceInputs["tunnelInterfaceAllowOspfVariable"] = args ? args.tunnelInterfaceAllowOspfVariable : undefined;
            resourceInputs["tunnelInterfaceAllowSnmp"] = args ? args.tunnelInterfaceAllowSnmp : undefined;
            resourceInputs["tunnelInterfaceAllowSnmpVariable"] = args ? args.tunnelInterfaceAllowSnmpVariable : undefined;
            resourceInputs["tunnelInterfaceAllowSsh"] = args ? args.tunnelInterfaceAllowSsh : undefined;
            resourceInputs["tunnelInterfaceAllowSshVariable"] = args ? args.tunnelInterfaceAllowSshVariable : undefined;
            resourceInputs["tunnelInterfaceAllowStun"] = args ? args.tunnelInterfaceAllowStun : undefined;
            resourceInputs["tunnelInterfaceAllowStunVariable"] = args ? args.tunnelInterfaceAllowStunVariable : undefined;
            resourceInputs["tunnelInterfaceBindLoopbackTunnel"] = args ? args.tunnelInterfaceBindLoopbackTunnel : undefined;
            resourceInputs["tunnelInterfaceBindLoopbackTunnelVariable"] = args ? args.tunnelInterfaceBindLoopbackTunnelVariable : undefined;
            resourceInputs["tunnelInterfaceBorder"] = args ? args.tunnelInterfaceBorder : undefined;
            resourceInputs["tunnelInterfaceBorderVariable"] = args ? args.tunnelInterfaceBorderVariable : undefined;
            resourceInputs["tunnelInterfaceCarrier"] = args ? args.tunnelInterfaceCarrier : undefined;
            resourceInputs["tunnelInterfaceCarrierVariable"] = args ? args.tunnelInterfaceCarrierVariable : undefined;
            resourceInputs["tunnelInterfaceClearDontFragment"] = args ? args.tunnelInterfaceClearDontFragment : undefined;
            resourceInputs["tunnelInterfaceClearDontFragmentVariable"] = args ? args.tunnelInterfaceClearDontFragmentVariable : undefined;
            resourceInputs["tunnelInterfaceColor"] = args ? args.tunnelInterfaceColor : undefined;
            resourceInputs["tunnelInterfaceColorRestrict"] = args ? args.tunnelInterfaceColorRestrict : undefined;
            resourceInputs["tunnelInterfaceColorVariable"] = args ? args.tunnelInterfaceColorVariable : undefined;
            resourceInputs["tunnelInterfaceControlConnections"] = args ? args.tunnelInterfaceControlConnections : undefined;
            resourceInputs["tunnelInterfaceControlConnectionsVariable"] = args ? args.tunnelInterfaceControlConnectionsVariable : undefined;
            resourceInputs["tunnelInterfaceEncapsulations"] = args ? args.tunnelInterfaceEncapsulations : undefined;
            resourceInputs["tunnelInterfaceExcludeControllerGroupListVariable"] = args ? args.tunnelInterfaceExcludeControllerGroupListVariable : undefined;
            resourceInputs["tunnelInterfaceExcludeControllerGroupLists"] = args ? args.tunnelInterfaceExcludeControllerGroupLists : undefined;
            resourceInputs["tunnelInterfaceGroups"] = args ? args.tunnelInterfaceGroups : undefined;
            resourceInputs["tunnelInterfaceGroupsVariable"] = args ? args.tunnelInterfaceGroupsVariable : undefined;
            resourceInputs["tunnelInterfaceHelloInterval"] = args ? args.tunnelInterfaceHelloInterval : undefined;
            resourceInputs["tunnelInterfaceHelloIntervalVariable"] = args ? args.tunnelInterfaceHelloIntervalVariable : undefined;
            resourceInputs["tunnelInterfaceHelloTolerance"] = args ? args.tunnelInterfaceHelloTolerance : undefined;
            resourceInputs["tunnelInterfaceHelloToleranceVariable"] = args ? args.tunnelInterfaceHelloToleranceVariable : undefined;
            resourceInputs["tunnelInterfaceLastResortCircuit"] = args ? args.tunnelInterfaceLastResortCircuit : undefined;
            resourceInputs["tunnelInterfaceLastResortCircuitVariable"] = args ? args.tunnelInterfaceLastResortCircuitVariable : undefined;
            resourceInputs["tunnelInterfaceLowBandwidthLink"] = args ? args.tunnelInterfaceLowBandwidthLink : undefined;
            resourceInputs["tunnelInterfaceLowBandwidthLinkVariable"] = args ? args.tunnelInterfaceLowBandwidthLinkVariable : undefined;
            resourceInputs["tunnelInterfaceMaxControlConnections"] = args ? args.tunnelInterfaceMaxControlConnections : undefined;
            resourceInputs["tunnelInterfaceMaxControlConnectionsVariable"] = args ? args.tunnelInterfaceMaxControlConnectionsVariable : undefined;
            resourceInputs["tunnelInterfaceNatRefreshInterval"] = args ? args.tunnelInterfaceNatRefreshInterval : undefined;
            resourceInputs["tunnelInterfaceNatRefreshIntervalVariable"] = args ? args.tunnelInterfaceNatRefreshIntervalVariable : undefined;
            resourceInputs["tunnelInterfaceNetworkBroadcast"] = args ? args.tunnelInterfaceNetworkBroadcast : undefined;
            resourceInputs["tunnelInterfaceNetworkBroadcastVariable"] = args ? args.tunnelInterfaceNetworkBroadcastVariable : undefined;
            resourceInputs["tunnelInterfacePortHop"] = args ? args.tunnelInterfacePortHop : undefined;
            resourceInputs["tunnelInterfacePortHopVariable"] = args ? args.tunnelInterfacePortHopVariable : undefined;
            resourceInputs["tunnelInterfaceTunnelTcpMss"] = args ? args.tunnelInterfaceTunnelTcpMss : undefined;
            resourceInputs["tunnelInterfaceTunnelTcpMssVariable"] = args ? args.tunnelInterfaceTunnelTcpMssVariable : undefined;
            resourceInputs["tunnelInterfaceVbondAsStunServer"] = args ? args.tunnelInterfaceVbondAsStunServer : undefined;
            resourceInputs["tunnelInterfaceVbondAsStunServerVariable"] = args ? args.tunnelInterfaceVbondAsStunServerVariable : undefined;
            resourceInputs["tunnelInterfaceVmanageConnectionPreference"] = args ? args.tunnelInterfaceVmanageConnectionPreference : undefined;
            resourceInputs["tunnelInterfaceVmanageConnectionPreferenceVariable"] = args ? args.tunnelInterfaceVmanageConnectionPreferenceVariable : undefined;
            resourceInputs["tunnelQosMode"] = args ? args.tunnelQosMode : undefined;
            resourceInputs["tunnelQosModeVariable"] = args ? args.tunnelQosModeVariable : undefined;
            resourceInputs["unnumberedLoopbackInterface"] = args ? args.unnumberedLoopbackInterface : undefined;
            resourceInputs["unnumberedLoopbackInterfaceVariable"] = args ? args.unnumberedLoopbackInterfaceVariable : undefined;
            resourceInputs["vdslConfigurations"] = args ? args.vdslConfigurations : undefined;
            resourceInputs["writeRule"] = args ? args.writeRule : undefined;
            resourceInputs["writeRuleVariable"] = args ? args.writeRuleVariable : undefined;
            resourceInputs["templateType"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpnInterfaceDslIpoeFeatureTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpnInterfaceDslIpoeFeatureTemplate resources.
 */
export interface VpnInterfaceDslIpoeFeatureTemplateState {
    /**
     * Apply ACL
     */
    accessLists?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceDslIpoeFeatureTemplateAccessList>[]>;
    /**
     * Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     */
    bandwidthDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    bandwidthDownstreamVariable?: pulumi.Input<string>;
    /**
     * Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     */
    bandwidthUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    bandwidthUpstreamVariable?: pulumi.Input<string>;
    /**
     * CHAP Hostname
     */
    chapHostname?: pulumi.Input<string>;
    /**
     * Variable name
     */
    chapHostnameVariable?: pulumi.Input<string>;
    /**
     * Specify ppp chap authentication Password
     */
    chapPppAuthPassword?: pulumi.Input<string>;
    /**
     * Variable name
     */
    chapPppAuthPasswordVariable?: pulumi.Input<string>;
    /**
     * The description of the feature template
     */
    description?: pulumi.Input<string>;
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Dialer IP Negotiated - Default value: `false`
     */
    dialerAddressNegotiated?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    dialerAddressNegotiatedVariable?: pulumi.Input<string>;
    /**
     * Dialer pool number - Range: `1`-`255`
     */
    dialerPoolNumber?: pulumi.Input<number>;
    /**
     * Variable name
     */
    dialerPoolNumberVariable?: pulumi.Input<string>;
    /**
     * Encapsulation VLAN id - Range: `1`-`4094`
     */
    encap?: pulumi.Input<number>;
    /**
     * Variable name
     */
    encapVariable?: pulumi.Input<string>;
    /**
     * Interface description
     */
    ethernetDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ethernetDescriptionVariable?: pulumi.Input<string>;
    /**
     * Set administrative distance for DHCP default route - Range: `1`-`65536` - Default value: `1`
     */
    ethernetDhcpDistance?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ethernetDhcpDistanceVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ethernetDhcpHelperVariable?: pulumi.Input<string>;
    /**
     * List of DHCP IPv4 helper addresses
     */
    ethernetDhcpHelpers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable DHCP - Default value: `false`
     */
    ethernetEnableDhcp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ethernetEnableDhcpVariable?: pulumi.Input<string>;
    /**
     * Ethernet Interface/Sub Interface Name including sub interface number
     */
    ethernetInterfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ethernetInterfaceNameVariable?: pulumi.Input<string>;
    /**
     * Assign IPv4 address
     */
    ethernetIpv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ethernetIpv4AddressVariable?: pulumi.Input<string>;
    /**
     * internal controller-type - Choices: `ipoe` - Default value: `ipoe`
     */
    internalControllerType?: pulumi.Input<string>;
    /**
     * IP Directed-Broadcast - Default value: `false`
     */
    ipDirectedBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipDirectedBroadcastVariable?: pulumi.Input<string>;
    /**
     * Interface MTU <576..2000>, in bytes - Range: `576`-`2000` - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Network Address Translation on this interface - Default value: `false`
     */
    nat?: pulumi.Input<boolean>;
    /**
     * Block inbound ICMP error messages - Default value: `true`
     */
    natBlockIcmpError?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    natBlockIcmpErrorVariable?: pulumi.Input<string>;
    /**
     * Set port-forwarding rules for NAT on this interface
     */
    natPortForwards?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceDslIpoeFeatureTemplateNatPortForward>[]>;
    /**
     * Set NAT refresh mode - Choices: `outbound`, `bi-directional` - Default value: `outbound`
     */
    natRefreshMode?: pulumi.Input<string>;
    /**
     * Variable name
     */
    natRefreshModeVariable?: pulumi.Input<string>;
    /**
     * Respond to ping requests to NAT interface ip address from the public side - Default value: `false`
     */
    natResponseToPing?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    natResponseToPingVariable?: pulumi.Input<string>;
    /**
     * Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
     */
    natTcpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    natTcpTimeoutVariable?: pulumi.Input<string>;
    /**
     * Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
     */
    natUdpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    natUdpTimeoutVariable?: pulumi.Input<string>;
    /**
     * PAP outbound Password
     */
    papPassword?: pulumi.Input<boolean>;
    /**
     * Specify ppp pap authentication Password
     */
    papPppAuthPassword?: pulumi.Input<string>;
    /**
     * Variable name
     */
    papPppAuthPasswordVariable?: pulumi.Input<string>;
    /**
     * PAP outbound Sent Username
     */
    papUsername?: pulumi.Input<string>;
    /**
     * Variable name
     */
    papUsernameVariable?: pulumi.Input<string>;
    /**
     * Per-tunnel Qos - Default value: `false`
     */
    perTunnelQos?: pulumi.Input<boolean>;
    /**
     * Per-tunnel QoS Aggregator - Default value: `false`
     */
    perTunnelQosAggregator?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    perTunnelQosAggregatorVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    perTunnelQosVariable?: pulumi.Input<string>;
    /**
     * Enable policer
     */
    policers?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceDslIpoeFeatureTemplatePolicer>[]>;
    /**
     * PPP Link Authentication Protocol - Choices: `chap`, `pap`
     */
    pppAuthenticationProtocol?: pulumi.Input<string>;
    /**
     * PPP Authentication Protocol PAP - Default value: `false`
     */
    pppAuthenticationProtocolPap?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    pppAuthenticationProtocolVariable?: pulumi.Input<string>;
    /**
     * Maximum MRU to be negotiated during PPP LCP negotiation - Range: `64`-`1792`
     */
    pppMaximumPayload?: pulumi.Input<number>;
    /**
     * Variable name
     */
    pppMaximumPayloadVariable?: pulumi.Input<string>;
    /**
     * Adaptive QoS default downstream bandwidth - Range: `8`-`100000000`
     */
    qosAdaptiveBandwidthDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveBandwidthDownstreamVariable?: pulumi.Input<string>;
    /**
     * Adaptive QoS default upstream bandwidth - Range: `8`-`100000000`
     */
    qosAdaptiveBandwidthUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveBandwidthUpstreamVariable?: pulumi.Input<string>;
    /**
     * Downstream max bandwidth limit - Range: `8`-`100000000`
     */
    qosAdaptiveMaxDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMaxDownstreamVariable?: pulumi.Input<string>;
    /**
     * Upstream max bandwidth limit - Range: `8`-`100000000`
     */
    qosAdaptiveMaxUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMaxUpstreamVariable?: pulumi.Input<string>;
    /**
     * Downstream min bandwidth limit - Range: `8`-`100000000`
     */
    qosAdaptiveMinDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMinDownstreamVariable?: pulumi.Input<string>;
    /**
     * Upstream min bandwidth limit - Range: `8`-`100000000`
     */
    qosAdaptiveMinUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMinUpstreamVariable?: pulumi.Input<string>;
    /**
     * Periodic timer for adaptive QoS in minutes - Range: `1`-`720` - Default value: `15`
     */
    qosAdaptivePeriod?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptivePeriodVariable?: pulumi.Input<string>;
    /**
     * Name of QoS map
     */
    qosMap?: pulumi.Input<string>;
    /**
     * Variable name
     */
    qosMapVariable?: pulumi.Input<string>;
    /**
     * Name of VPN QoS map
     */
    qosMapVpn?: pulumi.Input<string>;
    /**
     * Variable name
     */
    qosMapVpnVariable?: pulumi.Input<string>;
    /**
     * 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
     */
    shapingRate?: pulumi.Input<number>;
    /**
     * Variable name
     */
    shapingRateVariable?: pulumi.Input<string>;
    /**
     * Administrative state - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
     */
    tcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssVariable?: pulumi.Input<string>;
    /**
     * The template type
     */
    templateType?: pulumi.Input<string>;
    /**
     * Extends a local TLOC to a remote node only for vpn 0
     */
    tlocExtension?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tlocExtensionVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    trackerVariable?: pulumi.Input<string>;
    /**
     * Enable tracker for this interface
     */
    trackers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
     */
    tunnelInterfaceAllowAll?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowAllVariable?: pulumi.Input<string>;
    /**
     * Allow/deny BGP - Default value: `false`
     */
    tunnelInterfaceAllowBgp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowBgpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny DHCP - Default value: `true`
     */
    tunnelInterfaceAllowDhcp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowDhcpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny DNS - Default value: `true`
     */
    tunnelInterfaceAllowDns?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowDnsVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny Https - Default value: `false`
     */
    tunnelInterfaceAllowHttps?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowHttpsVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny ICMP - Default value: `true`
     */
    tunnelInterfaceAllowIcmp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowIcmpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny NETCONF - Default value: `false`
     */
    tunnelInterfaceAllowNetconf?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowNetconfVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny NTP - Default value: `false`
     */
    tunnelInterfaceAllowNtp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowNtpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny OSPF - Default value: `false`
     */
    tunnelInterfaceAllowOspf?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowOspfVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny SNMP - Default value: `false`
     */
    tunnelInterfaceAllowSnmp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowSnmpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny SSH - Default value: `false`
     */
    tunnelInterfaceAllowSsh?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowSshVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny STUN - Default value: `false`
     */
    tunnelInterfaceAllowStun?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowStunVariable?: pulumi.Input<string>;
    /**
     * Bind loopback tunnel interface to a physical interface
     */
    tunnelInterfaceBindLoopbackTunnel?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceBindLoopbackTunnelVariable?: pulumi.Input<string>;
    /**
     * Set TLOC as border TLOC - Default value: `false`
     */
    tunnelInterfaceBorder?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceBorderVariable?: pulumi.Input<string>;
    /**
     * Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
     * `carrier7`, `carrier8` - Default value: `default`
     */
    tunnelInterfaceCarrier?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceCarrierVariable?: pulumi.Input<string>;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     */
    tunnelInterfaceClearDontFragment?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceClearDontFragmentVariable?: pulumi.Input<string>;
    /**
     * Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
     * `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
     * `private4`, `private5`, `private6` - Default value: `default`
     */
    tunnelInterfaceColor?: pulumi.Input<string>;
    /**
     * Restrict this TLOC behavior - Default value: `false`
     */
    tunnelInterfaceColorRestrict?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceColorVariable?: pulumi.Input<string>;
    /**
     * Allow Control Connection - Default value: `true`
     */
    tunnelInterfaceControlConnections?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceControlConnectionsVariable?: pulumi.Input<string>;
    /**
     * Encapsulation for TLOC
     */
    tunnelInterfaceEncapsulations?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceDslIpoeFeatureTemplateTunnelInterfaceEncapsulation>[]>;
    /**
     * Variable name
     */
    tunnelInterfaceExcludeControllerGroupListVariable?: pulumi.Input<string>;
    /**
     * Exclude the following controller groups defined in this list
     */
    tunnelInterfaceExcludeControllerGroupLists?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * List of groups
     */
    tunnelInterfaceGroups?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Variable name
     */
    tunnelInterfaceGroupsVariable?: pulumi.Input<string>;
    /**
     * Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
     */
    tunnelInterfaceHelloInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceHelloIntervalVariable?: pulumi.Input<string>;
    /**
     * Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
     */
    tunnelInterfaceHelloTolerance?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceHelloToleranceVariable?: pulumi.Input<string>;
    /**
     * Set TLOC as last resort - Default value: `false`
     */
    tunnelInterfaceLastResortCircuit?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceLastResortCircuitVariable?: pulumi.Input<string>;
    /**
     * Set the interface as a low-bandwidth circuit - Default value: `false`
     */
    tunnelInterfaceLowBandwidthLink?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceLowBandwidthLinkVariable?: pulumi.Input<string>;
    /**
     * Set the maximum number of control connections for this TLOC - Range: `0`-`8`
     */
    tunnelInterfaceMaxControlConnections?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceMaxControlConnectionsVariable?: pulumi.Input<string>;
    /**
     * Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
     */
    tunnelInterfaceNatRefreshInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceNatRefreshIntervalVariable?: pulumi.Input<string>;
    /**
     * Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
     */
    tunnelInterfaceNetworkBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceNetworkBroadcastVariable?: pulumi.Input<string>;
    /**
     * Disallow port hopping on the tunnel interface - Default value: `true`
     */
    tunnelInterfacePortHop?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfacePortHopVariable?: pulumi.Input<string>;
    /**
     * Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    tunnelInterfaceTunnelTcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceTunnelTcpMssVariable?: pulumi.Input<string>;
    /**
     * Put this wan interface in STUN mode only - Default value: `false`
     */
    tunnelInterfaceVbondAsStunServer?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceVbondAsStunServerVariable?: pulumi.Input<string>;
    /**
     * Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
     */
    tunnelInterfaceVmanageConnectionPreference?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceVmanageConnectionPreferenceVariable?: pulumi.Input<string>;
    /**
     * Set tunnel QoS mode - Choices: `spoke`
     */
    tunnelQosMode?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelQosModeVariable?: pulumi.Input<string>;
    /**
     * Dialer IP Unnumbered Loopback interface name
     */
    unnumberedLoopbackInterface?: pulumi.Input<string>;
    /**
     * Variable name
     */
    unnumberedLoopbackInterfaceVariable?: pulumi.Input<string>;
    /**
     * vdsl
     */
    vdslConfigurations?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceDslIpoeFeatureTemplateVdslConfiguration>[]>;
    /**
     * The version of the feature template
     */
    version?: pulumi.Input<number>;
    /**
     * Name of rewrite rule
     */
    writeRule?: pulumi.Input<string>;
    /**
     * Variable name
     */
    writeRuleVariable?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpnInterfaceDslIpoeFeatureTemplate resource.
 */
export interface VpnInterfaceDslIpoeFeatureTemplateArgs {
    /**
     * Apply ACL
     */
    accessLists?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceDslIpoeFeatureTemplateAccessList>[]>;
    /**
     * Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     */
    bandwidthDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    bandwidthDownstreamVariable?: pulumi.Input<string>;
    /**
     * Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
     */
    bandwidthUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    bandwidthUpstreamVariable?: pulumi.Input<string>;
    /**
     * CHAP Hostname
     */
    chapHostname?: pulumi.Input<string>;
    /**
     * Variable name
     */
    chapHostnameVariable?: pulumi.Input<string>;
    /**
     * Specify ppp chap authentication Password
     */
    chapPppAuthPassword?: pulumi.Input<string>;
    /**
     * Variable name
     */
    chapPppAuthPasswordVariable?: pulumi.Input<string>;
    /**
     * The description of the feature template
     */
    description: pulumi.Input<string>;
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Dialer IP Negotiated - Default value: `false`
     */
    dialerAddressNegotiated?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    dialerAddressNegotiatedVariable?: pulumi.Input<string>;
    /**
     * Dialer pool number - Range: `1`-`255`
     */
    dialerPoolNumber?: pulumi.Input<number>;
    /**
     * Variable name
     */
    dialerPoolNumberVariable?: pulumi.Input<string>;
    /**
     * Encapsulation VLAN id - Range: `1`-`4094`
     */
    encap?: pulumi.Input<number>;
    /**
     * Variable name
     */
    encapVariable?: pulumi.Input<string>;
    /**
     * Interface description
     */
    ethernetDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ethernetDescriptionVariable?: pulumi.Input<string>;
    /**
     * Set administrative distance for DHCP default route - Range: `1`-`65536` - Default value: `1`
     */
    ethernetDhcpDistance?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ethernetDhcpDistanceVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ethernetDhcpHelperVariable?: pulumi.Input<string>;
    /**
     * List of DHCP IPv4 helper addresses
     */
    ethernetDhcpHelpers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable DHCP - Default value: `false`
     */
    ethernetEnableDhcp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ethernetEnableDhcpVariable?: pulumi.Input<string>;
    /**
     * Ethernet Interface/Sub Interface Name including sub interface number
     */
    ethernetInterfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ethernetInterfaceNameVariable?: pulumi.Input<string>;
    /**
     * Assign IPv4 address
     */
    ethernetIpv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ethernetIpv4AddressVariable?: pulumi.Input<string>;
    /**
     * internal controller-type - Choices: `ipoe` - Default value: `ipoe`
     */
    internalControllerType?: pulumi.Input<string>;
    /**
     * IP Directed-Broadcast - Default value: `false`
     */
    ipDirectedBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipDirectedBroadcastVariable?: pulumi.Input<string>;
    /**
     * Interface MTU <576..2000>, in bytes - Range: `576`-`2000` - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Network Address Translation on this interface - Default value: `false`
     */
    nat?: pulumi.Input<boolean>;
    /**
     * Block inbound ICMP error messages - Default value: `true`
     */
    natBlockIcmpError?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    natBlockIcmpErrorVariable?: pulumi.Input<string>;
    /**
     * Set port-forwarding rules for NAT on this interface
     */
    natPortForwards?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceDslIpoeFeatureTemplateNatPortForward>[]>;
    /**
     * Set NAT refresh mode - Choices: `outbound`, `bi-directional` - Default value: `outbound`
     */
    natRefreshMode?: pulumi.Input<string>;
    /**
     * Variable name
     */
    natRefreshModeVariable?: pulumi.Input<string>;
    /**
     * Respond to ping requests to NAT interface ip address from the public side - Default value: `false`
     */
    natResponseToPing?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    natResponseToPingVariable?: pulumi.Input<string>;
    /**
     * Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
     */
    natTcpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    natTcpTimeoutVariable?: pulumi.Input<string>;
    /**
     * Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
     */
    natUdpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    natUdpTimeoutVariable?: pulumi.Input<string>;
    /**
     * PAP outbound Password
     */
    papPassword?: pulumi.Input<boolean>;
    /**
     * Specify ppp pap authentication Password
     */
    papPppAuthPassword?: pulumi.Input<string>;
    /**
     * Variable name
     */
    papPppAuthPasswordVariable?: pulumi.Input<string>;
    /**
     * PAP outbound Sent Username
     */
    papUsername?: pulumi.Input<string>;
    /**
     * Variable name
     */
    papUsernameVariable?: pulumi.Input<string>;
    /**
     * Per-tunnel Qos - Default value: `false`
     */
    perTunnelQos?: pulumi.Input<boolean>;
    /**
     * Per-tunnel QoS Aggregator - Default value: `false`
     */
    perTunnelQosAggregator?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    perTunnelQosAggregatorVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    perTunnelQosVariable?: pulumi.Input<string>;
    /**
     * Enable policer
     */
    policers?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceDslIpoeFeatureTemplatePolicer>[]>;
    /**
     * PPP Link Authentication Protocol - Choices: `chap`, `pap`
     */
    pppAuthenticationProtocol?: pulumi.Input<string>;
    /**
     * PPP Authentication Protocol PAP - Default value: `false`
     */
    pppAuthenticationProtocolPap?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    pppAuthenticationProtocolVariable?: pulumi.Input<string>;
    /**
     * Maximum MRU to be negotiated during PPP LCP negotiation - Range: `64`-`1792`
     */
    pppMaximumPayload?: pulumi.Input<number>;
    /**
     * Variable name
     */
    pppMaximumPayloadVariable?: pulumi.Input<string>;
    /**
     * Adaptive QoS default downstream bandwidth - Range: `8`-`100000000`
     */
    qosAdaptiveBandwidthDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveBandwidthDownstreamVariable?: pulumi.Input<string>;
    /**
     * Adaptive QoS default upstream bandwidth - Range: `8`-`100000000`
     */
    qosAdaptiveBandwidthUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveBandwidthUpstreamVariable?: pulumi.Input<string>;
    /**
     * Downstream max bandwidth limit - Range: `8`-`100000000`
     */
    qosAdaptiveMaxDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMaxDownstreamVariable?: pulumi.Input<string>;
    /**
     * Upstream max bandwidth limit - Range: `8`-`100000000`
     */
    qosAdaptiveMaxUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMaxUpstreamVariable?: pulumi.Input<string>;
    /**
     * Downstream min bandwidth limit - Range: `8`-`100000000`
     */
    qosAdaptiveMinDownstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMinDownstreamVariable?: pulumi.Input<string>;
    /**
     * Upstream min bandwidth limit - Range: `8`-`100000000`
     */
    qosAdaptiveMinUpstream?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptiveMinUpstreamVariable?: pulumi.Input<string>;
    /**
     * Periodic timer for adaptive QoS in minutes - Range: `1`-`720` - Default value: `15`
     */
    qosAdaptivePeriod?: pulumi.Input<number>;
    /**
     * Variable name
     */
    qosAdaptivePeriodVariable?: pulumi.Input<string>;
    /**
     * Name of QoS map
     */
    qosMap?: pulumi.Input<string>;
    /**
     * Variable name
     */
    qosMapVariable?: pulumi.Input<string>;
    /**
     * Name of VPN QoS map
     */
    qosMapVpn?: pulumi.Input<string>;
    /**
     * Variable name
     */
    qosMapVpnVariable?: pulumi.Input<string>;
    /**
     * 1ge interfaces: [0..1000000]kbps; 10ge interfaces: [0..10000000]kbps - Range: `8`-`100000000`
     */
    shapingRate?: pulumi.Input<number>;
    /**
     * Variable name
     */
    shapingRateVariable?: pulumi.Input<string>;
    /**
     * Administrative state - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
     */
    tcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssVariable?: pulumi.Input<string>;
    /**
     * Extends a local TLOC to a remote node only for vpn 0
     */
    tlocExtension?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tlocExtensionVariable?: pulumi.Input<string>;
    /**
     * Variable name
     */
    trackerVariable?: pulumi.Input<string>;
    /**
     * Enable tracker for this interface
     */
    trackers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
     */
    tunnelInterfaceAllowAll?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowAllVariable?: pulumi.Input<string>;
    /**
     * Allow/deny BGP - Default value: `false`
     */
    tunnelInterfaceAllowBgp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowBgpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny DHCP - Default value: `true`
     */
    tunnelInterfaceAllowDhcp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowDhcpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny DNS - Default value: `true`
     */
    tunnelInterfaceAllowDns?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowDnsVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny Https - Default value: `false`
     */
    tunnelInterfaceAllowHttps?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowHttpsVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny ICMP - Default value: `true`
     */
    tunnelInterfaceAllowIcmp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowIcmpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny NETCONF - Default value: `false`
     */
    tunnelInterfaceAllowNetconf?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowNetconfVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny NTP - Default value: `false`
     */
    tunnelInterfaceAllowNtp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowNtpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny OSPF - Default value: `false`
     */
    tunnelInterfaceAllowOspf?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowOspfVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny SNMP - Default value: `false`
     */
    tunnelInterfaceAllowSnmp?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowSnmpVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny SSH - Default value: `false`
     */
    tunnelInterfaceAllowSsh?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowSshVariable?: pulumi.Input<string>;
    /**
     * Allow/Deny STUN - Default value: `false`
     */
    tunnelInterfaceAllowStun?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceAllowStunVariable?: pulumi.Input<string>;
    /**
     * Bind loopback tunnel interface to a physical interface
     */
    tunnelInterfaceBindLoopbackTunnel?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceBindLoopbackTunnelVariable?: pulumi.Input<string>;
    /**
     * Set TLOC as border TLOC - Default value: `false`
     */
    tunnelInterfaceBorder?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceBorderVariable?: pulumi.Input<string>;
    /**
     * Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
     * `carrier7`, `carrier8` - Default value: `default`
     */
    tunnelInterfaceCarrier?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelInterfaceCarrierVariable?: pulumi.Input<string>;
    /**
     * Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
     */
    tunnelInterfaceClearDontFragment?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceClearDontFragmentVariable?: pulumi.Input<string>;
    /**
     * Set color for TLOC - Choices: `default`, `mpls`, `metro-ethernet`, `biz-internet`, `public-internet`, `lte`, `3g`,
     * `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
     * `private4`, `private5`, `private6` - Default value: `default`
     */
    tunnelInterfaceColor?: pulumi.Input<string>;
    /**
     * Restrict this TLOC behavior - Default value: `false`
     */
    tunnelInterfaceColorRestrict?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceColorVariable?: pulumi.Input<string>;
    /**
     * Allow Control Connection - Default value: `true`
     */
    tunnelInterfaceControlConnections?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceControlConnectionsVariable?: pulumi.Input<string>;
    /**
     * Encapsulation for TLOC
     */
    tunnelInterfaceEncapsulations?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceDslIpoeFeatureTemplateTunnelInterfaceEncapsulation>[]>;
    /**
     * Variable name
     */
    tunnelInterfaceExcludeControllerGroupListVariable?: pulumi.Input<string>;
    /**
     * Exclude the following controller groups defined in this list
     */
    tunnelInterfaceExcludeControllerGroupLists?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * List of groups
     */
    tunnelInterfaceGroups?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Variable name
     */
    tunnelInterfaceGroupsVariable?: pulumi.Input<string>;
    /**
     * Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
     */
    tunnelInterfaceHelloInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceHelloIntervalVariable?: pulumi.Input<string>;
    /**
     * Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
     */
    tunnelInterfaceHelloTolerance?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceHelloToleranceVariable?: pulumi.Input<string>;
    /**
     * Set TLOC as last resort - Default value: `false`
     */
    tunnelInterfaceLastResortCircuit?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceLastResortCircuitVariable?: pulumi.Input<string>;
    /**
     * Set the interface as a low-bandwidth circuit - Default value: `false`
     */
    tunnelInterfaceLowBandwidthLink?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceLowBandwidthLinkVariable?: pulumi.Input<string>;
    /**
     * Set the maximum number of control connections for this TLOC - Range: `0`-`8`
     */
    tunnelInterfaceMaxControlConnections?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceMaxControlConnectionsVariable?: pulumi.Input<string>;
    /**
     * Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
     */
    tunnelInterfaceNatRefreshInterval?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceNatRefreshIntervalVariable?: pulumi.Input<string>;
    /**
     * Accept and respond to network-prefix-directed broadcasts) - Default value: `false`
     */
    tunnelInterfaceNetworkBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceNetworkBroadcastVariable?: pulumi.Input<string>;
    /**
     * Disallow port hopping on the tunnel interface - Default value: `true`
     */
    tunnelInterfacePortHop?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfacePortHopVariable?: pulumi.Input<string>;
    /**
     * Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
     */
    tunnelInterfaceTunnelTcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceTunnelTcpMssVariable?: pulumi.Input<string>;
    /**
     * Put this wan interface in STUN mode only - Default value: `false`
     */
    tunnelInterfaceVbondAsStunServer?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    tunnelInterfaceVbondAsStunServerVariable?: pulumi.Input<string>;
    /**
     * Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
     */
    tunnelInterfaceVmanageConnectionPreference?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tunnelInterfaceVmanageConnectionPreferenceVariable?: pulumi.Input<string>;
    /**
     * Set tunnel QoS mode - Choices: `spoke`
     */
    tunnelQosMode?: pulumi.Input<string>;
    /**
     * Variable name
     */
    tunnelQosModeVariable?: pulumi.Input<string>;
    /**
     * Dialer IP Unnumbered Loopback interface name
     */
    unnumberedLoopbackInterface?: pulumi.Input<string>;
    /**
     * Variable name
     */
    unnumberedLoopbackInterfaceVariable?: pulumi.Input<string>;
    /**
     * vdsl
     */
    vdslConfigurations?: pulumi.Input<pulumi.Input<inputs.VpnInterfaceDslIpoeFeatureTemplateVdslConfiguration>[]>;
    /**
     * Name of rewrite rule
     */
    writeRule?: pulumi.Input<string>;
    /**
     * Variable name
     */
    writeRuleVariable?: pulumi.Input<string>;
}
