// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the System Logging Feature.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getSystemLoggingFeature({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 * });
 * ```
 */
export function getSystemLoggingFeature(args: GetSystemLoggingFeatureArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemLoggingFeatureResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getSystemLoggingFeature:getSystemLoggingFeature", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getSystemLoggingFeature.
 */
export interface GetSystemLoggingFeatureArgs {
    /**
     * Feature Profile ID
     */
    featureProfileId: string;
    /**
     * The id of the Feature
     */
    id: string;
}

/**
 * A collection of values returned by getSystemLoggingFeature.
 */
export interface GetSystemLoggingFeatureResult {
    /**
     * The description of the Feature
     */
    readonly description: string;
    /**
     * Enable logging to local disk
     */
    readonly diskEnable: boolean;
    /**
     * Variable name
     */
    readonly diskEnableVariable: string;
    /**
     * Set number of syslog files to create before discarding oldest files
     */
    readonly diskFileRotate: number;
    /**
     * Variable name
     */
    readonly diskFileRotateVariable: string;
    /**
     * Set maximum size of file before it is rotated
     */
    readonly diskFileSize: number;
    /**
     * Variable name
     */
    readonly diskFileSizeVariable: string;
    /**
     * Feature Profile ID
     */
    readonly featureProfileId: string;
    /**
     * The id of the Feature
     */
    readonly id: string;
    /**
     * Enable logging to remote server
     */
    readonly ipv4Servers: outputs.GetSystemLoggingFeatureIpv4Server[];
    /**
     * Enable logging to remote ipv6 server
     */
    readonly ipv6Servers: outputs.GetSystemLoggingFeatureIpv6Server[];
    /**
     * The name of the Feature
     */
    readonly name: string;
    /**
     * Configure a TLS profile
     */
    readonly tlsProfiles: outputs.GetSystemLoggingFeatureTlsProfile[];
    /**
     * The version of the Feature
     */
    readonly version: number;
}
/**
 * This data source can read the System Logging Feature.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getSystemLoggingFeature({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 * });
 * ```
 */
export function getSystemLoggingFeatureOutput(args: GetSystemLoggingFeatureOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemLoggingFeatureResult> {
    return pulumi.output(args).apply((a: any) => getSystemLoggingFeature(a, opts))
}

/**
 * A collection of arguments for invoking getSystemLoggingFeature.
 */
export interface GetSystemLoggingFeatureOutputArgs {
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * The id of the Feature
     */
    id: pulumi.Input<string>;
}
