// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the Device .
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getDevice({
 *     serialNumber: "3FFEFB37892E415FAF34A95D2328EC4C",
 *     name: "Controller01",
 * });
 * ```
 */
export function getDevice(args?: GetDeviceArgs, opts?: pulumi.InvokeOptions): Promise<GetDeviceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getDevice:getDevice", {
        "name": args.name,
        "serialNumber": args.serialNumber,
    }, opts);
}

/**
 * A collection of arguments for invoking getDevice.
 */
export interface GetDeviceArgs {
    /**
     * The hostname of a device
     */
    name?: string;
    /**
     * Serial number for device. Could be board or virtual identifier
     */
    serialNumber?: string;
}

/**
 * A collection of values returned by getDevice.
 */
export interface GetDeviceResult {
    /**
     * List of returned devices
     */
    readonly devices: outputs.GetDeviceDevice[];
    /**
     * The id of the object
     */
    readonly id: string;
    /**
     * The hostname of a device
     */
    readonly name?: string;
    /**
     * Serial number for device. Could be board or virtual identifier
     */
    readonly serialNumber?: string;
}
/**
 * This data source can read the Device .
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getDevice({
 *     serialNumber: "3FFEFB37892E415FAF34A95D2328EC4C",
 *     name: "Controller01",
 * });
 * ```
 */
export function getDeviceOutput(args?: GetDeviceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeviceResult> {
    return pulumi.output(args).apply((a: any) => getDevice(a, opts))
}

/**
 * A collection of arguments for invoking getDevice.
 */
export interface GetDeviceOutputArgs {
    /**
     * The hostname of a device
     */
    name?: pulumi.Input<string>;
    /**
     * Serial number for device. Could be board or virtual identifier
     */
    serialNumber?: pulumi.Input<string>;
}
