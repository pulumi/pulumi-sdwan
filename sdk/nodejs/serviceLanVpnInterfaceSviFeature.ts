// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Service LAN VPN Interface SVI Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * Expected import identifier with the format: "service_lan_vpn_interface_svi_feature_id,feature_profile_id,service_lan_vpn_feature_id"
 *
 * ```sh
 * $ pulumi import sdwan:index/serviceLanVpnInterfaceSviFeature:ServiceLanVpnInterfaceSviFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037"
 * ```
 */
export class ServiceLanVpnInterfaceSviFeature extends pulumi.CustomResource {
    /**
     * Get an existing ServiceLanVpnInterfaceSviFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceLanVpnInterfaceSviFeatureState, opts?: pulumi.CustomResourceOptions): ServiceLanVpnInterfaceSviFeature {
        return new ServiceLanVpnInterfaceSviFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/serviceLanVpnInterfaceSviFeature:ServiceLanVpnInterfaceSviFeature';

    /**
     * Returns true if the given object is an instance of ServiceLanVpnInterfaceSviFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceLanVpnInterfaceSviFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceLanVpnInterfaceSviFeature.__pulumiType;
    }

    public readonly aclIpv4EgressFeatureId!: pulumi.Output<string | undefined>;
    public readonly aclIpv4IngressFeatureId!: pulumi.Output<string | undefined>;
    public readonly aclIpv6EgressFeatureId!: pulumi.Output<string | undefined>;
    public readonly aclIpv6IngressFeatureId!: pulumi.Output<string | undefined>;
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2678400` - Default value: `1200`
     */
    public readonly arpTimeout!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly arpTimeoutVariable!: pulumi.Output<string | undefined>;
    /**
     * Configure static ARP entries
     */
    public readonly arps!: pulumi.Output<outputs.ServiceLanVpnInterfaceSviFeatureArp[] | undefined>;
    /**
     * The description of the Feature
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Enable DHCPv6 - Default value: `false`
     */
    public readonly enableDhcpv6!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly enableDhcpv6Variable!: pulumi.Output<string | undefined>;
    /**
     * Feature Profile ID
     */
    public readonly featureProfileId!: pulumi.Output<string>;
    /**
     * ICMP/ICMPv6 Redirect Disable - Default value: `true`
     */
    public readonly icmpRedirectDisable!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly icmpRedirectDisableVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface description
     */
    public readonly interfaceDescription!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly interfaceDescriptionVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface MTU <1500..9216> in bytes - Range: `1500`-`9216` - Default value: `1500`
     */
    public readonly interfaceMtu!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly interfaceMtuVariable!: pulumi.Output<string | undefined>;
    /**
     * Interface name: VLAN 1 - VLAN 4094 when present
     */
    public readonly interfaceName!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly interfaceNameVariable!: pulumi.Output<string | undefined>;
    /**
     * IP Directed-Broadcast - Default value: `false`
     */
    public readonly ipDirectedBroadcast!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly ipDirectedBroadcastVariable!: pulumi.Output<string | undefined>;
    /**
     * IP MTU <576..Interface MTU>, in bytes - Range: `576`-`9216` - Default value: `1500`
     */
    public readonly ipMtu!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly ipMtuVariable!: pulumi.Output<string | undefined>;
    /**
     * IP Address
     */
    public readonly ipv4Address!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipv4AddressVariable!: pulumi.Output<string | undefined>;
    /**
     * List of DHCP helper addresses
     */
    public readonly ipv4DhcpHelpers!: pulumi.Output<string[] | undefined>;
    /**
     * Variable name
     */
    public readonly ipv4DhcpHelpersVariable!: pulumi.Output<string | undefined>;
    /**
     * Assign secondary IP addresses
     */
    public readonly ipv4SecondaryAddresses!: pulumi.Output<outputs.ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddress[] | undefined>;
    /**
     * Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    public readonly ipv4SubnetMask!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipv4SubnetMaskVariable!: pulumi.Output<string | undefined>;
    /**
     * Enable ipv4 VRRP
     */
    public readonly ipv4Vrrps!: pulumi.Output<outputs.ServiceLanVpnInterfaceSviFeatureIpv4Vrrp[] | undefined>;
    /**
     * Assign IPv6 address
     */
    public readonly ipv6Address!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly ipv6AddressVariable!: pulumi.Output<string | undefined>;
    /**
     * DHCPv6 Helper
     */
    public readonly ipv6DhcpHelpers!: pulumi.Output<outputs.ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelper[] | undefined>;
    /**
     * Assign secondary IPv6 addresses
     */
    public readonly ipv6SecondaryAddresses!: pulumi.Output<outputs.ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddress[] | undefined>;
    /**
     * Enable ipv6 VRRP
     */
    public readonly ipv6Vrrps!: pulumi.Output<outputs.ServiceLanVpnInterfaceSviFeatureIpv6Vrrp[] | undefined>;
    /**
     * The name of the Feature
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Service LAN VPN Feature ID
     */
    public readonly serviceLanVpnFeatureId!: pulumi.Output<string>;
    /**
     * Administrative state - Default value: `true`
     */
    public readonly shutdown!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly shutdownVariable!: pulumi.Output<string | undefined>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
     */
    public readonly tcpMss!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly tcpMssVariable!: pulumi.Output<string | undefined>;
    /**
     * The version of the Feature
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a ServiceLanVpnInterfaceSviFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceLanVpnInterfaceSviFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceLanVpnInterfaceSviFeatureArgs | ServiceLanVpnInterfaceSviFeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceLanVpnInterfaceSviFeatureState | undefined;
            resourceInputs["aclIpv4EgressFeatureId"] = state ? state.aclIpv4EgressFeatureId : undefined;
            resourceInputs["aclIpv4IngressFeatureId"] = state ? state.aclIpv4IngressFeatureId : undefined;
            resourceInputs["aclIpv6EgressFeatureId"] = state ? state.aclIpv6EgressFeatureId : undefined;
            resourceInputs["aclIpv6IngressFeatureId"] = state ? state.aclIpv6IngressFeatureId : undefined;
            resourceInputs["arpTimeout"] = state ? state.arpTimeout : undefined;
            resourceInputs["arpTimeoutVariable"] = state ? state.arpTimeoutVariable : undefined;
            resourceInputs["arps"] = state ? state.arps : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enableDhcpv6"] = state ? state.enableDhcpv6 : undefined;
            resourceInputs["enableDhcpv6Variable"] = state ? state.enableDhcpv6Variable : undefined;
            resourceInputs["featureProfileId"] = state ? state.featureProfileId : undefined;
            resourceInputs["icmpRedirectDisable"] = state ? state.icmpRedirectDisable : undefined;
            resourceInputs["icmpRedirectDisableVariable"] = state ? state.icmpRedirectDisableVariable : undefined;
            resourceInputs["interfaceDescription"] = state ? state.interfaceDescription : undefined;
            resourceInputs["interfaceDescriptionVariable"] = state ? state.interfaceDescriptionVariable : undefined;
            resourceInputs["interfaceMtu"] = state ? state.interfaceMtu : undefined;
            resourceInputs["interfaceMtuVariable"] = state ? state.interfaceMtuVariable : undefined;
            resourceInputs["interfaceName"] = state ? state.interfaceName : undefined;
            resourceInputs["interfaceNameVariable"] = state ? state.interfaceNameVariable : undefined;
            resourceInputs["ipDirectedBroadcast"] = state ? state.ipDirectedBroadcast : undefined;
            resourceInputs["ipDirectedBroadcastVariable"] = state ? state.ipDirectedBroadcastVariable : undefined;
            resourceInputs["ipMtu"] = state ? state.ipMtu : undefined;
            resourceInputs["ipMtuVariable"] = state ? state.ipMtuVariable : undefined;
            resourceInputs["ipv4Address"] = state ? state.ipv4Address : undefined;
            resourceInputs["ipv4AddressVariable"] = state ? state.ipv4AddressVariable : undefined;
            resourceInputs["ipv4DhcpHelpers"] = state ? state.ipv4DhcpHelpers : undefined;
            resourceInputs["ipv4DhcpHelpersVariable"] = state ? state.ipv4DhcpHelpersVariable : undefined;
            resourceInputs["ipv4SecondaryAddresses"] = state ? state.ipv4SecondaryAddresses : undefined;
            resourceInputs["ipv4SubnetMask"] = state ? state.ipv4SubnetMask : undefined;
            resourceInputs["ipv4SubnetMaskVariable"] = state ? state.ipv4SubnetMaskVariable : undefined;
            resourceInputs["ipv4Vrrps"] = state ? state.ipv4Vrrps : undefined;
            resourceInputs["ipv6Address"] = state ? state.ipv6Address : undefined;
            resourceInputs["ipv6AddressVariable"] = state ? state.ipv6AddressVariable : undefined;
            resourceInputs["ipv6DhcpHelpers"] = state ? state.ipv6DhcpHelpers : undefined;
            resourceInputs["ipv6SecondaryAddresses"] = state ? state.ipv6SecondaryAddresses : undefined;
            resourceInputs["ipv6Vrrps"] = state ? state.ipv6Vrrps : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serviceLanVpnFeatureId"] = state ? state.serviceLanVpnFeatureId : undefined;
            resourceInputs["shutdown"] = state ? state.shutdown : undefined;
            resourceInputs["shutdownVariable"] = state ? state.shutdownVariable : undefined;
            resourceInputs["tcpMss"] = state ? state.tcpMss : undefined;
            resourceInputs["tcpMssVariable"] = state ? state.tcpMssVariable : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ServiceLanVpnInterfaceSviFeatureArgs | undefined;
            if ((!args || args.featureProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'featureProfileId'");
            }
            if ((!args || args.serviceLanVpnFeatureId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceLanVpnFeatureId'");
            }
            resourceInputs["aclIpv4EgressFeatureId"] = args ? args.aclIpv4EgressFeatureId : undefined;
            resourceInputs["aclIpv4IngressFeatureId"] = args ? args.aclIpv4IngressFeatureId : undefined;
            resourceInputs["aclIpv6EgressFeatureId"] = args ? args.aclIpv6EgressFeatureId : undefined;
            resourceInputs["aclIpv6IngressFeatureId"] = args ? args.aclIpv6IngressFeatureId : undefined;
            resourceInputs["arpTimeout"] = args ? args.arpTimeout : undefined;
            resourceInputs["arpTimeoutVariable"] = args ? args.arpTimeoutVariable : undefined;
            resourceInputs["arps"] = args ? args.arps : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableDhcpv6"] = args ? args.enableDhcpv6 : undefined;
            resourceInputs["enableDhcpv6Variable"] = args ? args.enableDhcpv6Variable : undefined;
            resourceInputs["featureProfileId"] = args ? args.featureProfileId : undefined;
            resourceInputs["icmpRedirectDisable"] = args ? args.icmpRedirectDisable : undefined;
            resourceInputs["icmpRedirectDisableVariable"] = args ? args.icmpRedirectDisableVariable : undefined;
            resourceInputs["interfaceDescription"] = args ? args.interfaceDescription : undefined;
            resourceInputs["interfaceDescriptionVariable"] = args ? args.interfaceDescriptionVariable : undefined;
            resourceInputs["interfaceMtu"] = args ? args.interfaceMtu : undefined;
            resourceInputs["interfaceMtuVariable"] = args ? args.interfaceMtuVariable : undefined;
            resourceInputs["interfaceName"] = args ? args.interfaceName : undefined;
            resourceInputs["interfaceNameVariable"] = args ? args.interfaceNameVariable : undefined;
            resourceInputs["ipDirectedBroadcast"] = args ? args.ipDirectedBroadcast : undefined;
            resourceInputs["ipDirectedBroadcastVariable"] = args ? args.ipDirectedBroadcastVariable : undefined;
            resourceInputs["ipMtu"] = args ? args.ipMtu : undefined;
            resourceInputs["ipMtuVariable"] = args ? args.ipMtuVariable : undefined;
            resourceInputs["ipv4Address"] = args ? args.ipv4Address : undefined;
            resourceInputs["ipv4AddressVariable"] = args ? args.ipv4AddressVariable : undefined;
            resourceInputs["ipv4DhcpHelpers"] = args ? args.ipv4DhcpHelpers : undefined;
            resourceInputs["ipv4DhcpHelpersVariable"] = args ? args.ipv4DhcpHelpersVariable : undefined;
            resourceInputs["ipv4SecondaryAddresses"] = args ? args.ipv4SecondaryAddresses : undefined;
            resourceInputs["ipv4SubnetMask"] = args ? args.ipv4SubnetMask : undefined;
            resourceInputs["ipv4SubnetMaskVariable"] = args ? args.ipv4SubnetMaskVariable : undefined;
            resourceInputs["ipv4Vrrps"] = args ? args.ipv4Vrrps : undefined;
            resourceInputs["ipv6Address"] = args ? args.ipv6Address : undefined;
            resourceInputs["ipv6AddressVariable"] = args ? args.ipv6AddressVariable : undefined;
            resourceInputs["ipv6DhcpHelpers"] = args ? args.ipv6DhcpHelpers : undefined;
            resourceInputs["ipv6SecondaryAddresses"] = args ? args.ipv6SecondaryAddresses : undefined;
            resourceInputs["ipv6Vrrps"] = args ? args.ipv6Vrrps : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serviceLanVpnFeatureId"] = args ? args.serviceLanVpnFeatureId : undefined;
            resourceInputs["shutdown"] = args ? args.shutdown : undefined;
            resourceInputs["shutdownVariable"] = args ? args.shutdownVariable : undefined;
            resourceInputs["tcpMss"] = args ? args.tcpMss : undefined;
            resourceInputs["tcpMssVariable"] = args ? args.tcpMssVariable : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceLanVpnInterfaceSviFeature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceLanVpnInterfaceSviFeature resources.
 */
export interface ServiceLanVpnInterfaceSviFeatureState {
    aclIpv4EgressFeatureId?: pulumi.Input<string>;
    aclIpv4IngressFeatureId?: pulumi.Input<string>;
    aclIpv6EgressFeatureId?: pulumi.Input<string>;
    aclIpv6IngressFeatureId?: pulumi.Input<string>;
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2678400` - Default value: `1200`
     */
    arpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    arpTimeoutVariable?: pulumi.Input<string>;
    /**
     * Configure static ARP entries
     */
    arps?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureArp>[]>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Enable DHCPv6 - Default value: `false`
     */
    enableDhcpv6?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    enableDhcpv6Variable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * ICMP/ICMPv6 Redirect Disable - Default value: `true`
     */
    icmpRedirectDisable?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    icmpRedirectDisableVariable?: pulumi.Input<string>;
    /**
     * Interface description
     */
    interfaceDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceDescriptionVariable?: pulumi.Input<string>;
    /**
     * Interface MTU <1500..9216> in bytes - Range: `1500`-`9216` - Default value: `1500`
     */
    interfaceMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    interfaceMtuVariable?: pulumi.Input<string>;
    /**
     * Interface name: VLAN 1 - VLAN 4094 when present
     */
    interfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceNameVariable?: pulumi.Input<string>;
    /**
     * IP Directed-Broadcast - Default value: `false`
     */
    ipDirectedBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipDirectedBroadcastVariable?: pulumi.Input<string>;
    /**
     * IP MTU <576..Interface MTU>, in bytes - Range: `576`-`9216` - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * IP Address
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4AddressVariable?: pulumi.Input<string>;
    /**
     * List of DHCP helper addresses
     */
    ipv4DhcpHelpers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Variable name
     */
    ipv4DhcpHelpersVariable?: pulumi.Input<string>;
    /**
     * Assign secondary IP addresses
     */
    ipv4SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddress>[]>;
    /**
     * Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    ipv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * Enable ipv4 VRRP
     */
    ipv4Vrrps?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv4Vrrp>[]>;
    /**
     * Assign IPv6 address
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv6AddressVariable?: pulumi.Input<string>;
    /**
     * DHCPv6 Helper
     */
    ipv6DhcpHelpers?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelper>[]>;
    /**
     * Assign secondary IPv6 addresses
     */
    ipv6SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddress>[]>;
    /**
     * Enable ipv6 VRRP
     */
    ipv6Vrrps?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv6Vrrp>[]>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * Service LAN VPN Feature ID
     */
    serviceLanVpnFeatureId?: pulumi.Input<string>;
    /**
     * Administrative state - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
     */
    tcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssVariable?: pulumi.Input<string>;
    /**
     * The version of the Feature
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ServiceLanVpnInterfaceSviFeature resource.
 */
export interface ServiceLanVpnInterfaceSviFeatureArgs {
    aclIpv4EgressFeatureId?: pulumi.Input<string>;
    aclIpv4IngressFeatureId?: pulumi.Input<string>;
    aclIpv6EgressFeatureId?: pulumi.Input<string>;
    aclIpv6IngressFeatureId?: pulumi.Input<string>;
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds - Range: `0`-`2678400` - Default value: `1200`
     */
    arpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    arpTimeoutVariable?: pulumi.Input<string>;
    /**
     * Configure static ARP entries
     */
    arps?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureArp>[]>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Enable DHCPv6 - Default value: `false`
     */
    enableDhcpv6?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    enableDhcpv6Variable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * ICMP/ICMPv6 Redirect Disable - Default value: `true`
     */
    icmpRedirectDisable?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    icmpRedirectDisableVariable?: pulumi.Input<string>;
    /**
     * Interface description
     */
    interfaceDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceDescriptionVariable?: pulumi.Input<string>;
    /**
     * Interface MTU <1500..9216> in bytes - Range: `1500`-`9216` - Default value: `1500`
     */
    interfaceMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    interfaceMtuVariable?: pulumi.Input<string>;
    /**
     * Interface name: VLAN 1 - VLAN 4094 when present
     */
    interfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceNameVariable?: pulumi.Input<string>;
    /**
     * IP Directed-Broadcast - Default value: `false`
     */
    ipDirectedBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipDirectedBroadcastVariable?: pulumi.Input<string>;
    /**
     * IP MTU <576..Interface MTU>, in bytes - Range: `576`-`9216` - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * IP Address
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4AddressVariable?: pulumi.Input<string>;
    /**
     * List of DHCP helper addresses
     */
    ipv4DhcpHelpers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Variable name
     */
    ipv4DhcpHelpersVariable?: pulumi.Input<string>;
    /**
     * Assign secondary IP addresses
     */
    ipv4SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddress>[]>;
    /**
     * Subnet Mask - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`,
     * `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`,
     * `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`,
     * `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`,
     * `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    ipv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * Enable ipv4 VRRP
     */
    ipv4Vrrps?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv4Vrrp>[]>;
    /**
     * Assign IPv6 address
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv6AddressVariable?: pulumi.Input<string>;
    /**
     * DHCPv6 Helper
     */
    ipv6DhcpHelpers?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelper>[]>;
    /**
     * Assign secondary IPv6 addresses
     */
    ipv6SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddress>[]>;
    /**
     * Enable ipv6 VRRP
     */
    ipv6Vrrps?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv6Vrrp>[]>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * Service LAN VPN Feature ID
     */
    serviceLanVpnFeatureId: pulumi.Input<string>;
    /**
     * Administrative state - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * TCP MSS on SYN packets, in bytes - Range: `552`-`1960`
     */
    tcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssVariable?: pulumi.Input<string>;
}
