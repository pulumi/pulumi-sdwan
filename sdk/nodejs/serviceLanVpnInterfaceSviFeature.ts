// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Service LAN VPN Interface SVI Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Example Usage
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * Expected import identifier with the format: "service_lan_vpn_interface_svi_feature_id,feature_profile_id,service_lan_vpn_feature_id"
 *
 * ```sh
 * $ pulumi import sdwan:index/serviceLanVpnInterfaceSviFeature:ServiceLanVpnInterfaceSviFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037"
 * ```
 */
export class ServiceLanVpnInterfaceSviFeature extends pulumi.CustomResource {
    /**
     * Get an existing ServiceLanVpnInterfaceSviFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceLanVpnInterfaceSviFeatureState, opts?: pulumi.CustomResourceOptions): ServiceLanVpnInterfaceSviFeature {
        return new ServiceLanVpnInterfaceSviFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/serviceLanVpnInterfaceSviFeature:ServiceLanVpnInterfaceSviFeature';

    /**
     * Returns true if the given object is an instance of ServiceLanVpnInterfaceSviFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceLanVpnInterfaceSviFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceLanVpnInterfaceSviFeature.__pulumiType;
    }

    declare public readonly aclIpv4EgressFeatureId: pulumi.Output<string | undefined>;
    declare public readonly aclIpv4IngressFeatureId: pulumi.Output<string | undefined>;
    declare public readonly aclIpv6EgressFeatureId: pulumi.Output<string | undefined>;
    declare public readonly aclIpv6IngressFeatureId: pulumi.Output<string | undefined>;
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds
     *   - Range: `0`-`2678400`
     *   - Default value: `1200`
     */
    declare public readonly arpTimeout: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly arpTimeoutVariable: pulumi.Output<string | undefined>;
    /**
     * Configure static ARP entries
     */
    declare public readonly arps: pulumi.Output<outputs.ServiceLanVpnInterfaceSviFeatureArp[] | undefined>;
    /**
     * The description of the Feature
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Enable DHCPv6
     *   - Default value: `false`
     */
    declare public readonly enableDhcpv6: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly enableDhcpv6Variable: pulumi.Output<string | undefined>;
    /**
     * Feature Profile ID
     */
    declare public readonly featureProfileId: pulumi.Output<string>;
    /**
     * ICMP/ICMPv6 Redirect Disable
     *   - Default value: `true`
     */
    declare public readonly icmpRedirectDisable: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly icmpRedirectDisableVariable: pulumi.Output<string | undefined>;
    /**
     * Interface description
     */
    declare public readonly interfaceDescription: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly interfaceDescriptionVariable: pulumi.Output<string | undefined>;
    /**
     * Interface MTU <1500..9216> in bytes
     *   - Range: `1500`-`9216`
     *   - Default value: `1500`
     */
    declare public readonly interfaceMtu: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly interfaceMtuVariable: pulumi.Output<string | undefined>;
    /**
     * Interface name: VLAN 1 - VLAN 4094 when present
     */
    declare public readonly interfaceName: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly interfaceNameVariable: pulumi.Output<string | undefined>;
    /**
     * IP Directed-Broadcast
     *   - Default value: `false`
     */
    declare public readonly ipDirectedBroadcast: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipDirectedBroadcastVariable: pulumi.Output<string | undefined>;
    /**
     * IP MTU <576..Interface MTU>, in bytes
     *   - Range: `576`-`9216`
     *   - Default value: `1500`
     */
    declare public readonly ipMtu: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipMtuVariable: pulumi.Output<string | undefined>;
    /**
     * IP Address
     */
    declare public readonly ipv4Address: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipv4AddressVariable: pulumi.Output<string | undefined>;
    /**
     * List of DHCP helper addresses
     */
    declare public readonly ipv4DhcpHelpers: pulumi.Output<string[] | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipv4DhcpHelpersVariable: pulumi.Output<string | undefined>;
    /**
     * Assign secondary IP addresses
     */
    declare public readonly ipv4SecondaryAddresses: pulumi.Output<outputs.ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddress[] | undefined>;
    /**
     * Subnet Mask
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    declare public readonly ipv4SubnetMask: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipv4SubnetMaskVariable: pulumi.Output<string | undefined>;
    /**
     * Enable ipv4 VRRP
     */
    declare public readonly ipv4Vrrps: pulumi.Output<outputs.ServiceLanVpnInterfaceSviFeatureIpv4Vrrp[] | undefined>;
    /**
     * Assign IPv6 address
     */
    declare public readonly ipv6Address: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly ipv6AddressVariable: pulumi.Output<string | undefined>;
    /**
     * DHCPv6 Helper
     */
    declare public readonly ipv6DhcpHelpers: pulumi.Output<outputs.ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelper[] | undefined>;
    /**
     * Assign secondary IPv6 addresses
     */
    declare public readonly ipv6SecondaryAddresses: pulumi.Output<outputs.ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddress[] | undefined>;
    /**
     * Enable ipv6 VRRP
     */
    declare public readonly ipv6Vrrps: pulumi.Output<outputs.ServiceLanVpnInterfaceSviFeatureIpv6Vrrp[] | undefined>;
    /**
     * The name of the Feature
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Service LAN VPN Feature ID
     */
    declare public readonly serviceLanVpnFeatureId: pulumi.Output<string>;
    /**
     * Administrative state
     *   - Default value: `true`
     */
    declare public readonly shutdown: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    declare public readonly shutdownVariable: pulumi.Output<string | undefined>;
    /**
     * TCP MSS on SYN packets, in bytes
     *   - Range: `552`-`1960`
     */
    declare public readonly tcpMss: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly tcpMssVariable: pulumi.Output<string | undefined>;
    /**
     * The version of the Feature
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;

    /**
     * Create a ServiceLanVpnInterfaceSviFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceLanVpnInterfaceSviFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceLanVpnInterfaceSviFeatureArgs | ServiceLanVpnInterfaceSviFeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceLanVpnInterfaceSviFeatureState | undefined;
            resourceInputs["aclIpv4EgressFeatureId"] = state?.aclIpv4EgressFeatureId;
            resourceInputs["aclIpv4IngressFeatureId"] = state?.aclIpv4IngressFeatureId;
            resourceInputs["aclIpv6EgressFeatureId"] = state?.aclIpv6EgressFeatureId;
            resourceInputs["aclIpv6IngressFeatureId"] = state?.aclIpv6IngressFeatureId;
            resourceInputs["arpTimeout"] = state?.arpTimeout;
            resourceInputs["arpTimeoutVariable"] = state?.arpTimeoutVariable;
            resourceInputs["arps"] = state?.arps;
            resourceInputs["description"] = state?.description;
            resourceInputs["enableDhcpv6"] = state?.enableDhcpv6;
            resourceInputs["enableDhcpv6Variable"] = state?.enableDhcpv6Variable;
            resourceInputs["featureProfileId"] = state?.featureProfileId;
            resourceInputs["icmpRedirectDisable"] = state?.icmpRedirectDisable;
            resourceInputs["icmpRedirectDisableVariable"] = state?.icmpRedirectDisableVariable;
            resourceInputs["interfaceDescription"] = state?.interfaceDescription;
            resourceInputs["interfaceDescriptionVariable"] = state?.interfaceDescriptionVariable;
            resourceInputs["interfaceMtu"] = state?.interfaceMtu;
            resourceInputs["interfaceMtuVariable"] = state?.interfaceMtuVariable;
            resourceInputs["interfaceName"] = state?.interfaceName;
            resourceInputs["interfaceNameVariable"] = state?.interfaceNameVariable;
            resourceInputs["ipDirectedBroadcast"] = state?.ipDirectedBroadcast;
            resourceInputs["ipDirectedBroadcastVariable"] = state?.ipDirectedBroadcastVariable;
            resourceInputs["ipMtu"] = state?.ipMtu;
            resourceInputs["ipMtuVariable"] = state?.ipMtuVariable;
            resourceInputs["ipv4Address"] = state?.ipv4Address;
            resourceInputs["ipv4AddressVariable"] = state?.ipv4AddressVariable;
            resourceInputs["ipv4DhcpHelpers"] = state?.ipv4DhcpHelpers;
            resourceInputs["ipv4DhcpHelpersVariable"] = state?.ipv4DhcpHelpersVariable;
            resourceInputs["ipv4SecondaryAddresses"] = state?.ipv4SecondaryAddresses;
            resourceInputs["ipv4SubnetMask"] = state?.ipv4SubnetMask;
            resourceInputs["ipv4SubnetMaskVariable"] = state?.ipv4SubnetMaskVariable;
            resourceInputs["ipv4Vrrps"] = state?.ipv4Vrrps;
            resourceInputs["ipv6Address"] = state?.ipv6Address;
            resourceInputs["ipv6AddressVariable"] = state?.ipv6AddressVariable;
            resourceInputs["ipv6DhcpHelpers"] = state?.ipv6DhcpHelpers;
            resourceInputs["ipv6SecondaryAddresses"] = state?.ipv6SecondaryAddresses;
            resourceInputs["ipv6Vrrps"] = state?.ipv6Vrrps;
            resourceInputs["name"] = state?.name;
            resourceInputs["serviceLanVpnFeatureId"] = state?.serviceLanVpnFeatureId;
            resourceInputs["shutdown"] = state?.shutdown;
            resourceInputs["shutdownVariable"] = state?.shutdownVariable;
            resourceInputs["tcpMss"] = state?.tcpMss;
            resourceInputs["tcpMssVariable"] = state?.tcpMssVariable;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as ServiceLanVpnInterfaceSviFeatureArgs | undefined;
            if (args?.featureProfileId === undefined && !opts.urn) {
                throw new Error("Missing required property 'featureProfileId'");
            }
            if (args?.serviceLanVpnFeatureId === undefined && !opts.urn) {
                throw new Error("Missing required property 'serviceLanVpnFeatureId'");
            }
            resourceInputs["aclIpv4EgressFeatureId"] = args?.aclIpv4EgressFeatureId;
            resourceInputs["aclIpv4IngressFeatureId"] = args?.aclIpv4IngressFeatureId;
            resourceInputs["aclIpv6EgressFeatureId"] = args?.aclIpv6EgressFeatureId;
            resourceInputs["aclIpv6IngressFeatureId"] = args?.aclIpv6IngressFeatureId;
            resourceInputs["arpTimeout"] = args?.arpTimeout;
            resourceInputs["arpTimeoutVariable"] = args?.arpTimeoutVariable;
            resourceInputs["arps"] = args?.arps;
            resourceInputs["description"] = args?.description;
            resourceInputs["enableDhcpv6"] = args?.enableDhcpv6;
            resourceInputs["enableDhcpv6Variable"] = args?.enableDhcpv6Variable;
            resourceInputs["featureProfileId"] = args?.featureProfileId;
            resourceInputs["icmpRedirectDisable"] = args?.icmpRedirectDisable;
            resourceInputs["icmpRedirectDisableVariable"] = args?.icmpRedirectDisableVariable;
            resourceInputs["interfaceDescription"] = args?.interfaceDescription;
            resourceInputs["interfaceDescriptionVariable"] = args?.interfaceDescriptionVariable;
            resourceInputs["interfaceMtu"] = args?.interfaceMtu;
            resourceInputs["interfaceMtuVariable"] = args?.interfaceMtuVariable;
            resourceInputs["interfaceName"] = args?.interfaceName;
            resourceInputs["interfaceNameVariable"] = args?.interfaceNameVariable;
            resourceInputs["ipDirectedBroadcast"] = args?.ipDirectedBroadcast;
            resourceInputs["ipDirectedBroadcastVariable"] = args?.ipDirectedBroadcastVariable;
            resourceInputs["ipMtu"] = args?.ipMtu;
            resourceInputs["ipMtuVariable"] = args?.ipMtuVariable;
            resourceInputs["ipv4Address"] = args?.ipv4Address;
            resourceInputs["ipv4AddressVariable"] = args?.ipv4AddressVariable;
            resourceInputs["ipv4DhcpHelpers"] = args?.ipv4DhcpHelpers;
            resourceInputs["ipv4DhcpHelpersVariable"] = args?.ipv4DhcpHelpersVariable;
            resourceInputs["ipv4SecondaryAddresses"] = args?.ipv4SecondaryAddresses;
            resourceInputs["ipv4SubnetMask"] = args?.ipv4SubnetMask;
            resourceInputs["ipv4SubnetMaskVariable"] = args?.ipv4SubnetMaskVariable;
            resourceInputs["ipv4Vrrps"] = args?.ipv4Vrrps;
            resourceInputs["ipv6Address"] = args?.ipv6Address;
            resourceInputs["ipv6AddressVariable"] = args?.ipv6AddressVariable;
            resourceInputs["ipv6DhcpHelpers"] = args?.ipv6DhcpHelpers;
            resourceInputs["ipv6SecondaryAddresses"] = args?.ipv6SecondaryAddresses;
            resourceInputs["ipv6Vrrps"] = args?.ipv6Vrrps;
            resourceInputs["name"] = args?.name;
            resourceInputs["serviceLanVpnFeatureId"] = args?.serviceLanVpnFeatureId;
            resourceInputs["shutdown"] = args?.shutdown;
            resourceInputs["shutdownVariable"] = args?.shutdownVariable;
            resourceInputs["tcpMss"] = args?.tcpMss;
            resourceInputs["tcpMssVariable"] = args?.tcpMssVariable;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceLanVpnInterfaceSviFeature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceLanVpnInterfaceSviFeature resources.
 */
export interface ServiceLanVpnInterfaceSviFeatureState {
    aclIpv4EgressFeatureId?: pulumi.Input<string>;
    aclIpv4IngressFeatureId?: pulumi.Input<string>;
    aclIpv6EgressFeatureId?: pulumi.Input<string>;
    aclIpv6IngressFeatureId?: pulumi.Input<string>;
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds
     *   - Range: `0`-`2678400`
     *   - Default value: `1200`
     */
    arpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    arpTimeoutVariable?: pulumi.Input<string>;
    /**
     * Configure static ARP entries
     */
    arps?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureArp>[]>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Enable DHCPv6
     *   - Default value: `false`
     */
    enableDhcpv6?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    enableDhcpv6Variable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * ICMP/ICMPv6 Redirect Disable
     *   - Default value: `true`
     */
    icmpRedirectDisable?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    icmpRedirectDisableVariable?: pulumi.Input<string>;
    /**
     * Interface description
     */
    interfaceDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceDescriptionVariable?: pulumi.Input<string>;
    /**
     * Interface MTU <1500..9216> in bytes
     *   - Range: `1500`-`9216`
     *   - Default value: `1500`
     */
    interfaceMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    interfaceMtuVariable?: pulumi.Input<string>;
    /**
     * Interface name: VLAN 1 - VLAN 4094 when present
     */
    interfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceNameVariable?: pulumi.Input<string>;
    /**
     * IP Directed-Broadcast
     *   - Default value: `false`
     */
    ipDirectedBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipDirectedBroadcastVariable?: pulumi.Input<string>;
    /**
     * IP MTU <576..Interface MTU>, in bytes
     *   - Range: `576`-`9216`
     *   - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * IP Address
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4AddressVariable?: pulumi.Input<string>;
    /**
     * List of DHCP helper addresses
     */
    ipv4DhcpHelpers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Variable name
     */
    ipv4DhcpHelpersVariable?: pulumi.Input<string>;
    /**
     * Assign secondary IP addresses
     */
    ipv4SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddress>[]>;
    /**
     * Subnet Mask
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    ipv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * Enable ipv4 VRRP
     */
    ipv4Vrrps?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv4Vrrp>[]>;
    /**
     * Assign IPv6 address
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv6AddressVariable?: pulumi.Input<string>;
    /**
     * DHCPv6 Helper
     */
    ipv6DhcpHelpers?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelper>[]>;
    /**
     * Assign secondary IPv6 addresses
     */
    ipv6SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddress>[]>;
    /**
     * Enable ipv6 VRRP
     */
    ipv6Vrrps?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv6Vrrp>[]>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * Service LAN VPN Feature ID
     */
    serviceLanVpnFeatureId?: pulumi.Input<string>;
    /**
     * Administrative state
     *   - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * TCP MSS on SYN packets, in bytes
     *   - Range: `552`-`1960`
     */
    tcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssVariable?: pulumi.Input<string>;
    /**
     * The version of the Feature
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ServiceLanVpnInterfaceSviFeature resource.
 */
export interface ServiceLanVpnInterfaceSviFeatureArgs {
    aclIpv4EgressFeatureId?: pulumi.Input<string>;
    aclIpv4IngressFeatureId?: pulumi.Input<string>;
    aclIpv6EgressFeatureId?: pulumi.Input<string>;
    aclIpv6IngressFeatureId?: pulumi.Input<string>;
    /**
     * Timeout value for dynamically learned ARP entries, <0..2678400> seconds
     *   - Range: `0`-`2678400`
     *   - Default value: `1200`
     */
    arpTimeout?: pulumi.Input<number>;
    /**
     * Variable name
     */
    arpTimeoutVariable?: pulumi.Input<string>;
    /**
     * Configure static ARP entries
     */
    arps?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureArp>[]>;
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Enable DHCPv6
     *   - Default value: `false`
     */
    enableDhcpv6?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    enableDhcpv6Variable?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * ICMP/ICMPv6 Redirect Disable
     *   - Default value: `true`
     */
    icmpRedirectDisable?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    icmpRedirectDisableVariable?: pulumi.Input<string>;
    /**
     * Interface description
     */
    interfaceDescription?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceDescriptionVariable?: pulumi.Input<string>;
    /**
     * Interface MTU <1500..9216> in bytes
     *   - Range: `1500`-`9216`
     *   - Default value: `1500`
     */
    interfaceMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    interfaceMtuVariable?: pulumi.Input<string>;
    /**
     * Interface name: VLAN 1 - VLAN 4094 when present
     */
    interfaceName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceNameVariable?: pulumi.Input<string>;
    /**
     * IP Directed-Broadcast
     *   - Default value: `false`
     */
    ipDirectedBroadcast?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    ipDirectedBroadcastVariable?: pulumi.Input<string>;
    /**
     * IP MTU <576..Interface MTU>, in bytes
     *   - Range: `576`-`9216`
     *   - Default value: `1500`
     */
    ipMtu?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ipMtuVariable?: pulumi.Input<string>;
    /**
     * IP Address
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4AddressVariable?: pulumi.Input<string>;
    /**
     * List of DHCP helper addresses
     */
    ipv4DhcpHelpers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Variable name
     */
    ipv4DhcpHelpersVariable?: pulumi.Input<string>;
    /**
     * Assign secondary IP addresses
     */
    ipv4SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv4SecondaryAddress>[]>;
    /**
     * Subnet Mask
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     */
    ipv4SubnetMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv4SubnetMaskVariable?: pulumi.Input<string>;
    /**
     * Enable ipv4 VRRP
     */
    ipv4Vrrps?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv4Vrrp>[]>;
    /**
     * Assign IPv6 address
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Variable name
     */
    ipv6AddressVariable?: pulumi.Input<string>;
    /**
     * DHCPv6 Helper
     */
    ipv6DhcpHelpers?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv6DhcpHelper>[]>;
    /**
     * Assign secondary IPv6 addresses
     */
    ipv6SecondaryAddresses?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv6SecondaryAddress>[]>;
    /**
     * Enable ipv6 VRRP
     */
    ipv6Vrrps?: pulumi.Input<pulumi.Input<inputs.ServiceLanVpnInterfaceSviFeatureIpv6Vrrp>[]>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * Service LAN VPN Feature ID
     */
    serviceLanVpnFeatureId: pulumi.Input<string>;
    /**
     * Administrative state
     *   - Default value: `true`
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    shutdownVariable?: pulumi.Input<string>;
    /**
     * TCP MSS on SYN packets, in bytes
     *   - Range: `552`-`1960`
     */
    tcpMss?: pulumi.Input<number>;
    /**
     * Variable name
     */
    tcpMssVariable?: pulumi.Input<string>;
}
