// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the Cisco OSPF feature template.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getCiscoOspfFeatureTemplate({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getCiscoOspfFeatureTemplate(args?: GetCiscoOspfFeatureTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetCiscoOspfFeatureTemplateResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getCiscoOspfFeatureTemplate:getCiscoOspfFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getCiscoOspfFeatureTemplate.
 */
export interface GetCiscoOspfFeatureTemplateArgs {
    /**
     * The id of the feature template
     */
    id?: string;
    /**
     * The name of the feature template
     */
    name?: string;
}

/**
 * A collection of values returned by getCiscoOspfFeatureTemplate.
 */
export interface GetCiscoOspfFeatureTemplateResult {
    /**
     * Configure OSPF area
     */
    readonly areas: outputs.GetCiscoOspfFeatureTemplateArea[];
    /**
     * Set reference bandwidth method to assign OSPF cost
     */
    readonly autoCostReferenceBandwidth: number;
    /**
     * Variable name
     */
    readonly autoCostReferenceBandwidthVariable: string;
    /**
     * Calculate summary route cost based on RFC 1583
     */
    readonly compatibleRfc1583: boolean;
    /**
     * Variable name
     */
    readonly compatibleRfc1583Variable: string;
    /**
     * Distribute default external route into OSPF
     */
    readonly defaultInformationOriginate: boolean;
    /**
     * Always advertise default route
     */
    readonly defaultInformationOriginateAlways: boolean;
    /**
     * Variable name
     */
    readonly defaultInformationOriginateAlwaysVariable: string;
    /**
     * Set metric used to generate default route \n\n
     */
    readonly defaultInformationOriginateMetric: number;
    /**
     * Set default route type
     */
    readonly defaultInformationOriginateMetricType: string;
    /**
     * Variable name
     */
    readonly defaultInformationOriginateMetricTypeVariable: string;
    /**
     * Variable name
     */
    readonly defaultInformationOriginateMetricVariable: string;
    /**
     * The description of the feature template
     */
    readonly description: string;
    /**
     * List of supported device types
     */
    readonly deviceTypes: string[];
    /**
     * Set distance for external routes
     */
    readonly distanceExternal: number;
    /**
     * Variable name
     */
    readonly distanceExternalVariable: string;
    /**
     * Set distance for inter-area routes
     */
    readonly distanceInterArea: number;
    /**
     * Variable name
     */
    readonly distanceInterAreaVariable: string;
    /**
     * Set distance for intra-area routes
     */
    readonly distanceIntraArea: number;
    /**
     * Variable name
     */
    readonly distanceIntraAreaVariable: string;
    /**
     * The id of the feature template
     */
    readonly id: string;
    /**
     * Advertise own router LSA with infinite distance
     */
    readonly maxMetricRouterLsas: outputs.GetCiscoOspfFeatureTemplateMaxMetricRouterLsa[];
    /**
     * The name of the feature template
     */
    readonly name: string;
    /**
     * Redistribute routes
     */
    readonly redistributes: outputs.GetCiscoOspfFeatureTemplateRedistribute[];
    /**
     * Set route policy to apply
     */
    readonly routePolicies: outputs.GetCiscoOspfFeatureTemplateRoutePolicy[];
    /**
     * Set OSPF router ID to override system IP address
     */
    readonly routerId: string;
    /**
     * Variable name
     */
    readonly routerIdVariable: string;
    /**
     * The template type
     */
    readonly templateType: string;
    /**
     * Set delay from first change received until performing SPF calculation
     */
    readonly timersSpfDelay: number;
    /**
     * Variable name
     */
    readonly timersSpfDelayVariable: string;
    /**
     * Set initial hold time between consecutive SPF calculations
     */
    readonly timersSpfInitialHold: number;
    /**
     * Variable name
     */
    readonly timersSpfInitialHoldVariable: string;
    /**
     * Set maximum hold time between consecutive SPF calculations
     */
    readonly timersSpfMaxHold: number;
    /**
     * Variable name
     */
    readonly timersSpfMaxHoldVariable: string;
    /**
     * The version of the feature template
     */
    readonly version: number;
}
/**
 * This data source can read the Cisco OSPF feature template.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getCiscoOspfFeatureTemplate({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 * });
 * ```
 */
export function getCiscoOspfFeatureTemplateOutput(args?: GetCiscoOspfFeatureTemplateOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCiscoOspfFeatureTemplateResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sdwan:index/getCiscoOspfFeatureTemplate:getCiscoOspfFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getCiscoOspfFeatureTemplate.
 */
export interface GetCiscoOspfFeatureTemplateOutputArgs {
    /**
     * The id of the feature template
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
}
