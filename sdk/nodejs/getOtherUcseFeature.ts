// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the Other UCSE Feature.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getOtherUcseFeature({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 * });
 * ```
 */
export function getOtherUcseFeature(args: GetOtherUcseFeatureArgs, opts?: pulumi.InvokeOptions): Promise<GetOtherUcseFeatureResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getOtherUcseFeature:getOtherUcseFeature", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getOtherUcseFeature.
 */
export interface GetOtherUcseFeatureArgs {
    /**
     * Feature Profile ID
     */
    featureProfileId: string;
    /**
     * The id of the Feature
     */
    id: string;
}

/**
 * A collection of values returned by getOtherUcseFeature.
 */
export interface GetOtherUcseFeatureResult {
    /**
     * Dedicated
     */
    readonly accessPortDedicated: boolean;
    readonly accessPortSharedFailoverType: string;
    readonly accessPortSharedType: string;
    /**
     * Assign priority
     */
    readonly assignPriority: number;
    /**
     * Variable name
     */
    readonly assignPriorityVariable: string;
    /**
     * Bay
     */
    readonly bay: number;
    /**
     * Assign default gateway
     */
    readonly defaultGateway: string;
    /**
     * Variable name
     */
    readonly defaultGatewayVariable: string;
    /**
     * The description of the Feature
     */
    readonly description: string;
    /**
     * Feature Profile ID
     */
    readonly featureProfileId: string;
    /**
     * The id of the Feature
     */
    readonly id: string;
    /**
     * Interface name: GigabitEthernet0/<>/<> when present
     */
    readonly interfaces: outputs.GetOtherUcseFeatureInterface[];
    /**
     * Assign IPv4 address
     */
    readonly ipv4Address: string;
    /**
     * Variable name
     */
    readonly ipv4AddressVariable: string;
    /**
     * The name of the Feature
     */
    readonly name: string;
    /**
     * Slot
     */
    readonly slot: number;
    /**
     * The version of the Feature
     */
    readonly version: number;
    /**
     * Assign Vlan Id
     */
    readonly vlanId: number;
    /**
     * Variable name
     */
    readonly vlanIdVariable: string;
}
/**
 * This data source can read the Other UCSE Feature.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getOtherUcseFeature({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 * });
 * ```
 */
export function getOtherUcseFeatureOutput(args: GetOtherUcseFeatureOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOtherUcseFeatureResult> {
    return pulumi.output(args).apply((a: any) => getOtherUcseFeature(a, opts))
}

/**
 * A collection of arguments for invoking getOtherUcseFeature.
 */
export interface GetOtherUcseFeatureOutputArgs {
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * The id of the Feature
     */
    id: pulumi.Input<string>;
}
