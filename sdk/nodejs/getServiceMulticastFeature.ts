// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the Service Multicast Feature.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getServiceMulticastFeature({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 * });
 * ```
 */
export function getServiceMulticastFeature(args: GetServiceMulticastFeatureArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceMulticastFeatureResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getServiceMulticastFeature:getServiceMulticastFeature", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceMulticastFeature.
 */
export interface GetServiceMulticastFeatureArgs {
    /**
     * Feature Profile ID
     */
    featureProfileId: string;
    /**
     * The id of the Feature
     */
    id: string;
}

/**
 * A collection of values returned by getServiceMulticastFeature.
 */
export interface GetServiceMulticastFeatureResult {
    /**
     * Enable or disable RP Announce
     */
    readonly autoRpAnnounces: outputs.GetServiceMulticastFeatureAutoRpAnnounce[];
    /**
     * Enable or disable RP Discovery
     */
    readonly autoRpDiscoveries: outputs.GetServiceMulticastFeatureAutoRpDiscovery[];
    /**
     * The description of the Feature
     */
    readonly description: string;
    /**
     * Enable or disable auto-RP
     */
    readonly enableAutoRp: boolean;
    /**
     * Variable name
     */
    readonly enableAutoRpVariable: string;
    /**
     * Feature Profile ID
     */
    readonly featureProfileId: string;
    /**
     * The id of the Feature
     */
    readonly id: string;
    /**
     * Set IGMP interface parameters
     */
    readonly igmpInterfaces: outputs.GetServiceMulticastFeatureIgmpInterface[];
    /**
     * Replicator is local to this device
     */
    readonly localReplicator: boolean;
    /**
     * Set number of joins per group the router supports
     */
    readonly localReplicatorThreshold: number;
    /**
     * Variable name
     */
    readonly localReplicatorThresholdVariable: string;
    /**
     * Variable name
     */
    readonly localReplicatorVariable: string;
    /**
     * Set MSDP refresh timer
     */
    readonly msdpConnectionRetryInterval: number;
    /**
     * Variable name
     */
    readonly msdpConnectionRetryIntervalVariable: string;
    /**
     * multicast MSDP peer
     */
    readonly msdpGroups: outputs.GetServiceMulticastFeatureMsdpGroup[];
    /**
     * Set MSDP originator ID
     */
    readonly msdpOriginatorId: string;
    /**
     * Variable name
     */
    readonly msdpOriginatorIdVariable: string;
    /**
     * The name of the Feature
     */
    readonly name: string;
    /**
     * bsr candidate Attributes
     */
    readonly pimBsrCandidates: outputs.GetServiceMulticastFeaturePimBsrCandidate[];
    /**
     * Set RP Discovery Scope
     */
    readonly pimBsrRpCandidates: outputs.GetServiceMulticastFeaturePimBsrRpCandidate[];
    /**
     * Set PIM interface parameters
     */
    readonly pimInterfaces: outputs.GetServiceMulticastFeaturePimInterface[];
    /**
     * Set Access List for PIM SSM
     */
    readonly pimSourceSpecificMulticastAccessList: string;
    /**
     * Variable name
     */
    readonly pimSourceSpecificMulticastAccessListVariable: string;
    /**
     * turn SSM on/off
     */
    readonly pimSourceSpecificMulticastEnable: boolean;
    /**
     * Set when PIM router joins the SPT (kbps)
     */
    readonly pimSptThreshold: string;
    /**
     * Variable name
     */
    readonly pimSptThresholdVariable: string;
    /**
     * Shortest Path Tree (SPT) Only Mode
     */
    readonly sptOnly: boolean;
    /**
     * Variable name
     */
    readonly sptOnlyVariable: string;
    /**
     * Set Static RP Address(es)
     */
    readonly staticRpAddresses: outputs.GetServiceMulticastFeatureStaticRpAddress[];
    /**
     * The version of the Feature
     */
    readonly version: number;
}
/**
 * This data source can read the Service Multicast Feature.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = sdwan.getServiceMulticastFeature({
 *     id: "f6b2c44c-693c-4763-b010-895aa3d236bd",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 * });
 * ```
 */
export function getServiceMulticastFeatureOutput(args: GetServiceMulticastFeatureOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetServiceMulticastFeatureResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sdwan:index/getServiceMulticastFeature:getServiceMulticastFeature", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceMulticastFeature.
 */
export interface GetServiceMulticastFeatureOutputArgs {
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * The id of the Feature
     */
    id: pulumi.Input<string>;
}
