// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource can manage a Cisco SIG Credentials feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = new sdwan.CiscoSigCredentialsFeatureTemplate("example", {
 *     name: "Example",
 *     description: "My Example",
 *     deviceTypes: ["vedge-C8000V"],
 *     zscalerOrganization: "org1",
 *     zscalerPartnerBaseUri: "abc",
 *     zscalerUsername: "user1",
 *     zscalerPassword: "password123",
 *     zscalerCloudName: 1,
 *     zscalerPartnerUsername: "partner1",
 *     zscalerPartnerPassword: "password123",
 *     zscalerPartnerApiKey: "key123",
 *     umbrellaApiKey: "key123",
 *     umbrellaApiSecret: "secret123",
 *     umbrellaOrganizationId: "org1",
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import sdwan:index/ciscoSigCredentialsFeatureTemplate:CiscoSigCredentialsFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class CiscoSigCredentialsFeatureTemplate extends pulumi.CustomResource {
    /**
     * Get an existing CiscoSigCredentialsFeatureTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CiscoSigCredentialsFeatureTemplateState, opts?: pulumi.CustomResourceOptions): CiscoSigCredentialsFeatureTemplate {
        return new CiscoSigCredentialsFeatureTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/ciscoSigCredentialsFeatureTemplate:CiscoSigCredentialsFeatureTemplate';

    /**
     * Returns true if the given object is an instance of CiscoSigCredentialsFeatureTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CiscoSigCredentialsFeatureTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CiscoSigCredentialsFeatureTemplate.__pulumiType;
    }

    /**
     * The description of the feature template
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    declare public readonly deviceTypes: pulumi.Output<string[]>;
    /**
     * The name of the feature template
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The template type
     */
    declare public /*out*/ readonly templateType: pulumi.Output<string>;
    /**
     * API Key
     */
    declare public readonly umbrellaApiKey: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly umbrellaApiKeyVariable: pulumi.Output<string | undefined>;
    /**
     * API Secret
     */
    declare public readonly umbrellaApiSecret: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly umbrellaApiSecretVariable: pulumi.Output<string | undefined>;
    /**
     * Ord ID
     */
    declare public readonly umbrellaOrganizationId: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly umbrellaOrganizationIdVariable: pulumi.Output<string | undefined>;
    /**
     * The version of the feature template
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;
    /**
     * Third Party Cloud Name
     *   - Range: `0`-`255`
     */
    declare public readonly zscalerCloudName: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly zscalerCloudNameVariable: pulumi.Output<string | undefined>;
    /**
     * Organization Name
     */
    declare public readonly zscalerOrganization: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly zscalerOrganizationVariable: pulumi.Output<string | undefined>;
    /**
     * Partner API Key
     */
    declare public readonly zscalerPartnerApiKey: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly zscalerPartnerApiKeyVariable: pulumi.Output<string | undefined>;
    /**
     * Partner Base URI to be used in REST calls
     */
    declare public readonly zscalerPartnerBaseUri: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly zscalerPartnerBaseUriVariable: pulumi.Output<string | undefined>;
    /**
     * Partner Password
     */
    declare public readonly zscalerPartnerPassword: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly zscalerPartnerPasswordVariable: pulumi.Output<string | undefined>;
    /**
     * Partner User Name
     */
    declare public readonly zscalerPartnerUsername: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly zscalerPartnerUsernameVariable: pulumi.Output<string | undefined>;
    /**
     * Password of Zscaler partner account
     */
    declare public readonly zscalerPassword: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly zscalerPasswordVariable: pulumi.Output<string | undefined>;
    /**
     * Username of Zscaler partner account
     */
    declare public readonly zscalerUsername: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly zscalerUsernameVariable: pulumi.Output<string | undefined>;

    /**
     * Create a CiscoSigCredentialsFeatureTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CiscoSigCredentialsFeatureTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CiscoSigCredentialsFeatureTemplateArgs | CiscoSigCredentialsFeatureTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CiscoSigCredentialsFeatureTemplateState | undefined;
            resourceInputs["description"] = state?.description;
            resourceInputs["deviceTypes"] = state?.deviceTypes;
            resourceInputs["name"] = state?.name;
            resourceInputs["templateType"] = state?.templateType;
            resourceInputs["umbrellaApiKey"] = state?.umbrellaApiKey;
            resourceInputs["umbrellaApiKeyVariable"] = state?.umbrellaApiKeyVariable;
            resourceInputs["umbrellaApiSecret"] = state?.umbrellaApiSecret;
            resourceInputs["umbrellaApiSecretVariable"] = state?.umbrellaApiSecretVariable;
            resourceInputs["umbrellaOrganizationId"] = state?.umbrellaOrganizationId;
            resourceInputs["umbrellaOrganizationIdVariable"] = state?.umbrellaOrganizationIdVariable;
            resourceInputs["version"] = state?.version;
            resourceInputs["zscalerCloudName"] = state?.zscalerCloudName;
            resourceInputs["zscalerCloudNameVariable"] = state?.zscalerCloudNameVariable;
            resourceInputs["zscalerOrganization"] = state?.zscalerOrganization;
            resourceInputs["zscalerOrganizationVariable"] = state?.zscalerOrganizationVariable;
            resourceInputs["zscalerPartnerApiKey"] = state?.zscalerPartnerApiKey;
            resourceInputs["zscalerPartnerApiKeyVariable"] = state?.zscalerPartnerApiKeyVariable;
            resourceInputs["zscalerPartnerBaseUri"] = state?.zscalerPartnerBaseUri;
            resourceInputs["zscalerPartnerBaseUriVariable"] = state?.zscalerPartnerBaseUriVariable;
            resourceInputs["zscalerPartnerPassword"] = state?.zscalerPartnerPassword;
            resourceInputs["zscalerPartnerPasswordVariable"] = state?.zscalerPartnerPasswordVariable;
            resourceInputs["zscalerPartnerUsername"] = state?.zscalerPartnerUsername;
            resourceInputs["zscalerPartnerUsernameVariable"] = state?.zscalerPartnerUsernameVariable;
            resourceInputs["zscalerPassword"] = state?.zscalerPassword;
            resourceInputs["zscalerPasswordVariable"] = state?.zscalerPasswordVariable;
            resourceInputs["zscalerUsername"] = state?.zscalerUsername;
            resourceInputs["zscalerUsernameVariable"] = state?.zscalerUsernameVariable;
        } else {
            const args = argsOrState as CiscoSigCredentialsFeatureTemplateArgs | undefined;
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if (args?.deviceTypes === undefined && !opts.urn) {
                throw new Error("Missing required property 'deviceTypes'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["deviceTypes"] = args?.deviceTypes;
            resourceInputs["name"] = args?.name;
            resourceInputs["umbrellaApiKey"] = args?.umbrellaApiKey;
            resourceInputs["umbrellaApiKeyVariable"] = args?.umbrellaApiKeyVariable;
            resourceInputs["umbrellaApiSecret"] = args?.umbrellaApiSecret;
            resourceInputs["umbrellaApiSecretVariable"] = args?.umbrellaApiSecretVariable;
            resourceInputs["umbrellaOrganizationId"] = args?.umbrellaOrganizationId;
            resourceInputs["umbrellaOrganizationIdVariable"] = args?.umbrellaOrganizationIdVariable;
            resourceInputs["zscalerCloudName"] = args?.zscalerCloudName;
            resourceInputs["zscalerCloudNameVariable"] = args?.zscalerCloudNameVariable;
            resourceInputs["zscalerOrganization"] = args?.zscalerOrganization;
            resourceInputs["zscalerOrganizationVariable"] = args?.zscalerOrganizationVariable;
            resourceInputs["zscalerPartnerApiKey"] = args?.zscalerPartnerApiKey;
            resourceInputs["zscalerPartnerApiKeyVariable"] = args?.zscalerPartnerApiKeyVariable;
            resourceInputs["zscalerPartnerBaseUri"] = args?.zscalerPartnerBaseUri;
            resourceInputs["zscalerPartnerBaseUriVariable"] = args?.zscalerPartnerBaseUriVariable;
            resourceInputs["zscalerPartnerPassword"] = args?.zscalerPartnerPassword;
            resourceInputs["zscalerPartnerPasswordVariable"] = args?.zscalerPartnerPasswordVariable;
            resourceInputs["zscalerPartnerUsername"] = args?.zscalerPartnerUsername;
            resourceInputs["zscalerPartnerUsernameVariable"] = args?.zscalerPartnerUsernameVariable;
            resourceInputs["zscalerPassword"] = args?.zscalerPassword;
            resourceInputs["zscalerPasswordVariable"] = args?.zscalerPasswordVariable;
            resourceInputs["zscalerUsername"] = args?.zscalerUsername;
            resourceInputs["zscalerUsernameVariable"] = args?.zscalerUsernameVariable;
            resourceInputs["templateType"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CiscoSigCredentialsFeatureTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CiscoSigCredentialsFeatureTemplate resources.
 */
export interface CiscoSigCredentialsFeatureTemplateState {
    /**
     * The description of the feature template
     */
    description?: pulumi.Input<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * The template type
     */
    templateType?: pulumi.Input<string>;
    /**
     * API Key
     */
    umbrellaApiKey?: pulumi.Input<string>;
    /**
     * Variable name
     */
    umbrellaApiKeyVariable?: pulumi.Input<string>;
    /**
     * API Secret
     */
    umbrellaApiSecret?: pulumi.Input<string>;
    /**
     * Variable name
     */
    umbrellaApiSecretVariable?: pulumi.Input<string>;
    /**
     * Ord ID
     */
    umbrellaOrganizationId?: pulumi.Input<string>;
    /**
     * Variable name
     */
    umbrellaOrganizationIdVariable?: pulumi.Input<string>;
    /**
     * The version of the feature template
     */
    version?: pulumi.Input<number>;
    /**
     * Third Party Cloud Name
     *   - Range: `0`-`255`
     */
    zscalerCloudName?: pulumi.Input<number>;
    /**
     * Variable name
     */
    zscalerCloudNameVariable?: pulumi.Input<string>;
    /**
     * Organization Name
     */
    zscalerOrganization?: pulumi.Input<string>;
    /**
     * Variable name
     */
    zscalerOrganizationVariable?: pulumi.Input<string>;
    /**
     * Partner API Key
     */
    zscalerPartnerApiKey?: pulumi.Input<string>;
    /**
     * Variable name
     */
    zscalerPartnerApiKeyVariable?: pulumi.Input<string>;
    /**
     * Partner Base URI to be used in REST calls
     */
    zscalerPartnerBaseUri?: pulumi.Input<string>;
    /**
     * Variable name
     */
    zscalerPartnerBaseUriVariable?: pulumi.Input<string>;
    /**
     * Partner Password
     */
    zscalerPartnerPassword?: pulumi.Input<string>;
    /**
     * Variable name
     */
    zscalerPartnerPasswordVariable?: pulumi.Input<string>;
    /**
     * Partner User Name
     */
    zscalerPartnerUsername?: pulumi.Input<string>;
    /**
     * Variable name
     */
    zscalerPartnerUsernameVariable?: pulumi.Input<string>;
    /**
     * Password of Zscaler partner account
     */
    zscalerPassword?: pulumi.Input<string>;
    /**
     * Variable name
     */
    zscalerPasswordVariable?: pulumi.Input<string>;
    /**
     * Username of Zscaler partner account
     */
    zscalerUsername?: pulumi.Input<string>;
    /**
     * Variable name
     */
    zscalerUsernameVariable?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CiscoSigCredentialsFeatureTemplate resource.
 */
export interface CiscoSigCredentialsFeatureTemplateArgs {
    /**
     * The description of the feature template
     */
    description: pulumi.Input<string>;
    /**
     * List of supported device types
     *   - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`, `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`, `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * API Key
     */
    umbrellaApiKey?: pulumi.Input<string>;
    /**
     * Variable name
     */
    umbrellaApiKeyVariable?: pulumi.Input<string>;
    /**
     * API Secret
     */
    umbrellaApiSecret?: pulumi.Input<string>;
    /**
     * Variable name
     */
    umbrellaApiSecretVariable?: pulumi.Input<string>;
    /**
     * Ord ID
     */
    umbrellaOrganizationId?: pulumi.Input<string>;
    /**
     * Variable name
     */
    umbrellaOrganizationIdVariable?: pulumi.Input<string>;
    /**
     * Third Party Cloud Name
     *   - Range: `0`-`255`
     */
    zscalerCloudName?: pulumi.Input<number>;
    /**
     * Variable name
     */
    zscalerCloudNameVariable?: pulumi.Input<string>;
    /**
     * Organization Name
     */
    zscalerOrganization?: pulumi.Input<string>;
    /**
     * Variable name
     */
    zscalerOrganizationVariable?: pulumi.Input<string>;
    /**
     * Partner API Key
     */
    zscalerPartnerApiKey?: pulumi.Input<string>;
    /**
     * Variable name
     */
    zscalerPartnerApiKeyVariable?: pulumi.Input<string>;
    /**
     * Partner Base URI to be used in REST calls
     */
    zscalerPartnerBaseUri?: pulumi.Input<string>;
    /**
     * Variable name
     */
    zscalerPartnerBaseUriVariable?: pulumi.Input<string>;
    /**
     * Partner Password
     */
    zscalerPartnerPassword?: pulumi.Input<string>;
    /**
     * Variable name
     */
    zscalerPartnerPasswordVariable?: pulumi.Input<string>;
    /**
     * Partner User Name
     */
    zscalerPartnerUsername?: pulumi.Input<string>;
    /**
     * Variable name
     */
    zscalerPartnerUsernameVariable?: pulumi.Input<string>;
    /**
     * Password of Zscaler partner account
     */
    zscalerPassword?: pulumi.Input<string>;
    /**
     * Variable name
     */
    zscalerPasswordVariable?: pulumi.Input<string>;
    /**
     * Username of Zscaler partner account
     */
    zscalerUsername?: pulumi.Input<string>;
    /**
     * Variable name
     */
    zscalerUsernameVariable?: pulumi.Input<string>;
}
