// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource can manage a Cisco VPN feature template.
 *   - Minimum SD-WAN Manager version: `15.0.0`
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import sdwan:index/ciscoVpnFeatureTemplate:CiscoVpnFeatureTemplate example "f6b2c44c-693c-4763-b010-895aa3d236bd"
 * ```
 */
export class CiscoVpnFeatureTemplate extends pulumi.CustomResource {
    /**
     * Get an existing CiscoVpnFeatureTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CiscoVpnFeatureTemplateState, opts?: pulumi.CustomResourceOptions): CiscoVpnFeatureTemplate {
        return new CiscoVpnFeatureTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/ciscoVpnFeatureTemplate:CiscoVpnFeatureTemplate';

    /**
     * Returns true if the given object is an instance of CiscoVpnFeatureTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CiscoVpnFeatureTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CiscoVpnFeatureTemplate.__pulumiType;
    }

    /**
     * The description of the feature template
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    public readonly deviceTypes!: pulumi.Output<string[]>;
    /**
     * Static DNS mapping
     */
    public readonly dnsHosts!: pulumi.Output<outputs.CiscoVpnFeatureTemplateDnsHost[] | undefined>;
    /**
     * DNS
     */
    public readonly dnsIpv4Servers!: pulumi.Output<outputs.CiscoVpnFeatureTemplateDnsIpv4Server[] | undefined>;
    /**
     * DNS
     */
    public readonly dnsIpv6Servers!: pulumi.Output<outputs.CiscoVpnFeatureTemplateDnsIpv6Server[] | undefined>;
    /**
     * Optional packet fields for ECMP keying - Default value: `false`
     */
    public readonly enhanceEcmpKeying!: pulumi.Output<boolean | undefined>;
    /**
     * Variable name
     */
    public readonly enhanceEcmpKeyingVariable!: pulumi.Output<string | undefined>;
    /**
     * Configure routes pointing to a GRE tunnel
     */
    public readonly ipv4StaticGreRoutes!: pulumi.Output<outputs.CiscoVpnFeatureTemplateIpv4StaticGreRoute[] | undefined>;
    /**
     * Configure routes pointing to a IPSEC tunnel
     */
    public readonly ipv4StaticIpsecRoutes!: pulumi.Output<outputs.CiscoVpnFeatureTemplateIpv4StaticIpsecRoute[] | undefined>;
    /**
     * Configure IPv4 Static Routes
     */
    public readonly ipv4StaticRoutes!: pulumi.Output<outputs.CiscoVpnFeatureTemplateIpv4StaticRoute[] | undefined>;
    /**
     * Configure IPv4 Static Service Routes
     */
    public readonly ipv4StaticServiceRoutes!: pulumi.Output<outputs.CiscoVpnFeatureTemplateIpv4StaticServiceRoute[] | undefined>;
    /**
     * Configure IPv6 Static Routes
     */
    public readonly ipv6StaticRoutes!: pulumi.Output<outputs.CiscoVpnFeatureTemplateIpv6StaticRoute[] | undefined>;
    /**
     * The name of the feature template
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Set NAT64 v4 pool range
     */
    public readonly nat64Pools!: pulumi.Output<outputs.CiscoVpnFeatureTemplateNat64Pool[] | undefined>;
    /**
     * Configure NAT Pool entries
     */
    public readonly natPools!: pulumi.Output<outputs.CiscoVpnFeatureTemplateNatPool[] | undefined>;
    /**
     * omp-admin-distance-ipv4 - Range: `1`-`255`
     */
    public readonly ompAdminDistanceIpv4!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly ompAdminDistanceIpv4Variable!: pulumi.Output<string | undefined>;
    /**
     * omp-admin-distance-ipv6 - Range: `1`-`255`
     */
    public readonly ompAdminDistanceIpv6!: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    public readonly ompAdminDistanceIpv6Variable!: pulumi.Output<string | undefined>;
    /**
     * Advertise routes to OMP
     */
    public readonly ompAdvertiseIpv4Routes!: pulumi.Output<outputs.CiscoVpnFeatureTemplateOmpAdvertiseIpv4Route[] | undefined>;
    /**
     * Advertise routes to OMP
     */
    public readonly ompAdvertiseIpv6Routes!: pulumi.Output<outputs.CiscoVpnFeatureTemplateOmpAdvertiseIpv6Route[] | undefined>;
    /**
     * Org Name selected
     */
    public readonly organizationName!: pulumi.Output<string | undefined>;
    /**
     * Configure Port Forward entries
     */
    public readonly portForwardRules!: pulumi.Output<outputs.CiscoVpnFeatureTemplatePortForwardRule[] | undefined>;
    /**
     * Enable route leaking to Global VPN from this Service VPN
     */
    public readonly routeGlobalExports!: pulumi.Output<outputs.CiscoVpnFeatureTemplateRouteGlobalExport[] | undefined>;
    /**
     * Enable route leaking from Global VPN to this Service VPN
     */
    public readonly routeGlobalImports!: pulumi.Output<outputs.CiscoVpnFeatureTemplateRouteGlobalImport[] | undefined>;
    /**
     * Enable route leak from Service VPN to current VPN
     */
    public readonly routeVpnImports!: pulumi.Output<outputs.CiscoVpnFeatureTemplateRouteVpnImport[] | undefined>;
    /**
     * Configure services
     */
    public readonly services!: pulumi.Output<outputs.CiscoVpnFeatureTemplateService[] | undefined>;
    /**
     * Configure static NAT entries
     */
    public readonly staticNatRules!: pulumi.Output<outputs.CiscoVpnFeatureTemplateStaticNatRule[] | undefined>;
    /**
     * Configure static NAT Subnet entries
     */
    public readonly staticNatSubnetRules!: pulumi.Output<outputs.CiscoVpnFeatureTemplateStaticNatSubnetRule[] | undefined>;
    /**
     * The template type
     */
    public /*out*/ readonly templateType!: pulumi.Output<string>;
    /**
     * Tenant VPN - Range: `0`-`65527` - Default value: `0`
     */
    public readonly tenantVpnId!: pulumi.Output<number | undefined>;
    /**
     * The version of the feature template
     */
    public /*out*/ readonly version!: pulumi.Output<number>;
    /**
     * List of VPN instances - Range: `0`-`65527` - Default value: `0`
     */
    public readonly vpnId!: pulumi.Output<number | undefined>;
    /**
     * Name
     */
    public readonly vpnName!: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    public readonly vpnNameVariable!: pulumi.Output<string | undefined>;

    /**
     * Create a CiscoVpnFeatureTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CiscoVpnFeatureTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CiscoVpnFeatureTemplateArgs | CiscoVpnFeatureTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CiscoVpnFeatureTemplateState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceTypes"] = state ? state.deviceTypes : undefined;
            resourceInputs["dnsHosts"] = state ? state.dnsHosts : undefined;
            resourceInputs["dnsIpv4Servers"] = state ? state.dnsIpv4Servers : undefined;
            resourceInputs["dnsIpv6Servers"] = state ? state.dnsIpv6Servers : undefined;
            resourceInputs["enhanceEcmpKeying"] = state ? state.enhanceEcmpKeying : undefined;
            resourceInputs["enhanceEcmpKeyingVariable"] = state ? state.enhanceEcmpKeyingVariable : undefined;
            resourceInputs["ipv4StaticGreRoutes"] = state ? state.ipv4StaticGreRoutes : undefined;
            resourceInputs["ipv4StaticIpsecRoutes"] = state ? state.ipv4StaticIpsecRoutes : undefined;
            resourceInputs["ipv4StaticRoutes"] = state ? state.ipv4StaticRoutes : undefined;
            resourceInputs["ipv4StaticServiceRoutes"] = state ? state.ipv4StaticServiceRoutes : undefined;
            resourceInputs["ipv6StaticRoutes"] = state ? state.ipv6StaticRoutes : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nat64Pools"] = state ? state.nat64Pools : undefined;
            resourceInputs["natPools"] = state ? state.natPools : undefined;
            resourceInputs["ompAdminDistanceIpv4"] = state ? state.ompAdminDistanceIpv4 : undefined;
            resourceInputs["ompAdminDistanceIpv4Variable"] = state ? state.ompAdminDistanceIpv4Variable : undefined;
            resourceInputs["ompAdminDistanceIpv6"] = state ? state.ompAdminDistanceIpv6 : undefined;
            resourceInputs["ompAdminDistanceIpv6Variable"] = state ? state.ompAdminDistanceIpv6Variable : undefined;
            resourceInputs["ompAdvertiseIpv4Routes"] = state ? state.ompAdvertiseIpv4Routes : undefined;
            resourceInputs["ompAdvertiseIpv6Routes"] = state ? state.ompAdvertiseIpv6Routes : undefined;
            resourceInputs["organizationName"] = state ? state.organizationName : undefined;
            resourceInputs["portForwardRules"] = state ? state.portForwardRules : undefined;
            resourceInputs["routeGlobalExports"] = state ? state.routeGlobalExports : undefined;
            resourceInputs["routeGlobalImports"] = state ? state.routeGlobalImports : undefined;
            resourceInputs["routeVpnImports"] = state ? state.routeVpnImports : undefined;
            resourceInputs["services"] = state ? state.services : undefined;
            resourceInputs["staticNatRules"] = state ? state.staticNatRules : undefined;
            resourceInputs["staticNatSubnetRules"] = state ? state.staticNatSubnetRules : undefined;
            resourceInputs["templateType"] = state ? state.templateType : undefined;
            resourceInputs["tenantVpnId"] = state ? state.tenantVpnId : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["vpnId"] = state ? state.vpnId : undefined;
            resourceInputs["vpnName"] = state ? state.vpnName : undefined;
            resourceInputs["vpnNameVariable"] = state ? state.vpnNameVariable : undefined;
        } else {
            const args = argsOrState as CiscoVpnFeatureTemplateArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.deviceTypes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceTypes'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceTypes"] = args ? args.deviceTypes : undefined;
            resourceInputs["dnsHosts"] = args ? args.dnsHosts : undefined;
            resourceInputs["dnsIpv4Servers"] = args ? args.dnsIpv4Servers : undefined;
            resourceInputs["dnsIpv6Servers"] = args ? args.dnsIpv6Servers : undefined;
            resourceInputs["enhanceEcmpKeying"] = args ? args.enhanceEcmpKeying : undefined;
            resourceInputs["enhanceEcmpKeyingVariable"] = args ? args.enhanceEcmpKeyingVariable : undefined;
            resourceInputs["ipv4StaticGreRoutes"] = args ? args.ipv4StaticGreRoutes : undefined;
            resourceInputs["ipv4StaticIpsecRoutes"] = args ? args.ipv4StaticIpsecRoutes : undefined;
            resourceInputs["ipv4StaticRoutes"] = args ? args.ipv4StaticRoutes : undefined;
            resourceInputs["ipv4StaticServiceRoutes"] = args ? args.ipv4StaticServiceRoutes : undefined;
            resourceInputs["ipv6StaticRoutes"] = args ? args.ipv6StaticRoutes : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nat64Pools"] = args ? args.nat64Pools : undefined;
            resourceInputs["natPools"] = args ? args.natPools : undefined;
            resourceInputs["ompAdminDistanceIpv4"] = args ? args.ompAdminDistanceIpv4 : undefined;
            resourceInputs["ompAdminDistanceIpv4Variable"] = args ? args.ompAdminDistanceIpv4Variable : undefined;
            resourceInputs["ompAdminDistanceIpv6"] = args ? args.ompAdminDistanceIpv6 : undefined;
            resourceInputs["ompAdminDistanceIpv6Variable"] = args ? args.ompAdminDistanceIpv6Variable : undefined;
            resourceInputs["ompAdvertiseIpv4Routes"] = args ? args.ompAdvertiseIpv4Routes : undefined;
            resourceInputs["ompAdvertiseIpv6Routes"] = args ? args.ompAdvertiseIpv6Routes : undefined;
            resourceInputs["organizationName"] = args ? args.organizationName : undefined;
            resourceInputs["portForwardRules"] = args ? args.portForwardRules : undefined;
            resourceInputs["routeGlobalExports"] = args ? args.routeGlobalExports : undefined;
            resourceInputs["routeGlobalImports"] = args ? args.routeGlobalImports : undefined;
            resourceInputs["routeVpnImports"] = args ? args.routeVpnImports : undefined;
            resourceInputs["services"] = args ? args.services : undefined;
            resourceInputs["staticNatRules"] = args ? args.staticNatRules : undefined;
            resourceInputs["staticNatSubnetRules"] = args ? args.staticNatSubnetRules : undefined;
            resourceInputs["tenantVpnId"] = args ? args.tenantVpnId : undefined;
            resourceInputs["vpnId"] = args ? args.vpnId : undefined;
            resourceInputs["vpnName"] = args ? args.vpnName : undefined;
            resourceInputs["vpnNameVariable"] = args ? args.vpnNameVariable : undefined;
            resourceInputs["templateType"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CiscoVpnFeatureTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CiscoVpnFeatureTemplate resources.
 */
export interface CiscoVpnFeatureTemplateState {
    /**
     * The description of the feature template
     */
    description?: pulumi.Input<string>;
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Static DNS mapping
     */
    dnsHosts?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateDnsHost>[]>;
    /**
     * DNS
     */
    dnsIpv4Servers?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateDnsIpv4Server>[]>;
    /**
     * DNS
     */
    dnsIpv6Servers?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateDnsIpv6Server>[]>;
    /**
     * Optional packet fields for ECMP keying - Default value: `false`
     */
    enhanceEcmpKeying?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    enhanceEcmpKeyingVariable?: pulumi.Input<string>;
    /**
     * Configure routes pointing to a GRE tunnel
     */
    ipv4StaticGreRoutes?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateIpv4StaticGreRoute>[]>;
    /**
     * Configure routes pointing to a IPSEC tunnel
     */
    ipv4StaticIpsecRoutes?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateIpv4StaticIpsecRoute>[]>;
    /**
     * Configure IPv4 Static Routes
     */
    ipv4StaticRoutes?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateIpv4StaticRoute>[]>;
    /**
     * Configure IPv4 Static Service Routes
     */
    ipv4StaticServiceRoutes?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateIpv4StaticServiceRoute>[]>;
    /**
     * Configure IPv6 Static Routes
     */
    ipv6StaticRoutes?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateIpv6StaticRoute>[]>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Set NAT64 v4 pool range
     */
    nat64Pools?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateNat64Pool>[]>;
    /**
     * Configure NAT Pool entries
     */
    natPools?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateNatPool>[]>;
    /**
     * omp-admin-distance-ipv4 - Range: `1`-`255`
     */
    ompAdminDistanceIpv4?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ompAdminDistanceIpv4Variable?: pulumi.Input<string>;
    /**
     * omp-admin-distance-ipv6 - Range: `1`-`255`
     */
    ompAdminDistanceIpv6?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ompAdminDistanceIpv6Variable?: pulumi.Input<string>;
    /**
     * Advertise routes to OMP
     */
    ompAdvertiseIpv4Routes?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateOmpAdvertiseIpv4Route>[]>;
    /**
     * Advertise routes to OMP
     */
    ompAdvertiseIpv6Routes?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateOmpAdvertiseIpv6Route>[]>;
    /**
     * Org Name selected
     */
    organizationName?: pulumi.Input<string>;
    /**
     * Configure Port Forward entries
     */
    portForwardRules?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplatePortForwardRule>[]>;
    /**
     * Enable route leaking to Global VPN from this Service VPN
     */
    routeGlobalExports?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateRouteGlobalExport>[]>;
    /**
     * Enable route leaking from Global VPN to this Service VPN
     */
    routeGlobalImports?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateRouteGlobalImport>[]>;
    /**
     * Enable route leak from Service VPN to current VPN
     */
    routeVpnImports?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateRouteVpnImport>[]>;
    /**
     * Configure services
     */
    services?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateService>[]>;
    /**
     * Configure static NAT entries
     */
    staticNatRules?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateStaticNatRule>[]>;
    /**
     * Configure static NAT Subnet entries
     */
    staticNatSubnetRules?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateStaticNatSubnetRule>[]>;
    /**
     * The template type
     */
    templateType?: pulumi.Input<string>;
    /**
     * Tenant VPN - Range: `0`-`65527` - Default value: `0`
     */
    tenantVpnId?: pulumi.Input<number>;
    /**
     * The version of the feature template
     */
    version?: pulumi.Input<number>;
    /**
     * List of VPN instances - Range: `0`-`65527` - Default value: `0`
     */
    vpnId?: pulumi.Input<number>;
    /**
     * Name
     */
    vpnName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    vpnNameVariable?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CiscoVpnFeatureTemplate resource.
 */
export interface CiscoVpnFeatureTemplateArgs {
    /**
     * The description of the feature template
     */
    description: pulumi.Input<string>;
    /**
     * List of supported device types - Choices: `vedge-C8000V`, `vedge-C8300-1N1S-4T2X`, `vedge-C8300-1N1S-6T`,
     * `vedge-C8300-2N2S-6T`, `vedge-C8300-2N2S-4T2X`, `vedge-C8500-12X4QC`, `vedge-C8500-12X`, `vedge-C8500-20X6C`,
     * `vedge-C8500L-8S4X`, `vedge-C8200-1N-4T`, `vedge-C8200L-1N-4T`
     */
    deviceTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Static DNS mapping
     */
    dnsHosts?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateDnsHost>[]>;
    /**
     * DNS
     */
    dnsIpv4Servers?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateDnsIpv4Server>[]>;
    /**
     * DNS
     */
    dnsIpv6Servers?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateDnsIpv6Server>[]>;
    /**
     * Optional packet fields for ECMP keying - Default value: `false`
     */
    enhanceEcmpKeying?: pulumi.Input<boolean>;
    /**
     * Variable name
     */
    enhanceEcmpKeyingVariable?: pulumi.Input<string>;
    /**
     * Configure routes pointing to a GRE tunnel
     */
    ipv4StaticGreRoutes?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateIpv4StaticGreRoute>[]>;
    /**
     * Configure routes pointing to a IPSEC tunnel
     */
    ipv4StaticIpsecRoutes?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateIpv4StaticIpsecRoute>[]>;
    /**
     * Configure IPv4 Static Routes
     */
    ipv4StaticRoutes?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateIpv4StaticRoute>[]>;
    /**
     * Configure IPv4 Static Service Routes
     */
    ipv4StaticServiceRoutes?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateIpv4StaticServiceRoute>[]>;
    /**
     * Configure IPv6 Static Routes
     */
    ipv6StaticRoutes?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateIpv6StaticRoute>[]>;
    /**
     * The name of the feature template
     */
    name?: pulumi.Input<string>;
    /**
     * Set NAT64 v4 pool range
     */
    nat64Pools?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateNat64Pool>[]>;
    /**
     * Configure NAT Pool entries
     */
    natPools?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateNatPool>[]>;
    /**
     * omp-admin-distance-ipv4 - Range: `1`-`255`
     */
    ompAdminDistanceIpv4?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ompAdminDistanceIpv4Variable?: pulumi.Input<string>;
    /**
     * omp-admin-distance-ipv6 - Range: `1`-`255`
     */
    ompAdminDistanceIpv6?: pulumi.Input<number>;
    /**
     * Variable name
     */
    ompAdminDistanceIpv6Variable?: pulumi.Input<string>;
    /**
     * Advertise routes to OMP
     */
    ompAdvertiseIpv4Routes?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateOmpAdvertiseIpv4Route>[]>;
    /**
     * Advertise routes to OMP
     */
    ompAdvertiseIpv6Routes?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateOmpAdvertiseIpv6Route>[]>;
    /**
     * Org Name selected
     */
    organizationName?: pulumi.Input<string>;
    /**
     * Configure Port Forward entries
     */
    portForwardRules?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplatePortForwardRule>[]>;
    /**
     * Enable route leaking to Global VPN from this Service VPN
     */
    routeGlobalExports?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateRouteGlobalExport>[]>;
    /**
     * Enable route leaking from Global VPN to this Service VPN
     */
    routeGlobalImports?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateRouteGlobalImport>[]>;
    /**
     * Enable route leak from Service VPN to current VPN
     */
    routeVpnImports?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateRouteVpnImport>[]>;
    /**
     * Configure services
     */
    services?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateService>[]>;
    /**
     * Configure static NAT entries
     */
    staticNatRules?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateStaticNatRule>[]>;
    /**
     * Configure static NAT Subnet entries
     */
    staticNatSubnetRules?: pulumi.Input<pulumi.Input<inputs.CiscoVpnFeatureTemplateStaticNatSubnetRule>[]>;
    /**
     * Tenant VPN - Range: `0`-`65527` - Default value: `0`
     */
    tenantVpnId?: pulumi.Input<number>;
    /**
     * List of VPN instances - Range: `0`-`65527` - Default value: `0`
     */
    vpnId?: pulumi.Input<number>;
    /**
     * Name
     */
    vpnName?: pulumi.Input<string>;
    /**
     * Variable name
     */
    vpnNameVariable?: pulumi.Input<string>;
}
