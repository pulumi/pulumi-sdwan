// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource can manage a Service Object Tracker Feature.
 *   - Minimum SD-WAN Manager version: `20.12.0`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sdwan from "@pulumi/sdwan";
 *
 * const example = new sdwan.ServiceObjectTrackerFeature("example", {
 *     name: "Example",
 *     description: "My Example",
 *     featureProfileId: "f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
 *     objectTrackerId: 10,
 *     objectTrackerType: "Interface",
 *     "interface": "GigabitEthernet1",
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * Expected import identifier with the format: "service_object_tracker_feature_id,feature_profile_id"
 *
 * ```sh
 * $ pulumi import sdwan:index/serviceObjectTrackerFeature:ServiceObjectTrackerFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
 * ```
 */
export class ServiceObjectTrackerFeature extends pulumi.CustomResource {
    /**
     * Get an existing ServiceObjectTrackerFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceObjectTrackerFeatureState, opts?: pulumi.CustomResourceOptions): ServiceObjectTrackerFeature {
        return new ServiceObjectTrackerFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/serviceObjectTrackerFeature:ServiceObjectTrackerFeature';

    /**
     * Returns true if the given object is an instance of ServiceObjectTrackerFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceObjectTrackerFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceObjectTrackerFeature.__pulumiType;
    }

    /**
     * The description of the Feature
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Feature Profile ID
     */
    declare public readonly featureProfileId: pulumi.Output<string>;
    /**
     * interface name
     */
    declare public readonly interface: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly interfaceVariable: pulumi.Output<string | undefined>;
    /**
     * The name of the Feature
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Object tracker ID
     *   - Range: `1`-`1000`
     */
    declare public readonly objectTrackerId: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly objectTrackerIdVariable: pulumi.Output<string | undefined>;
    /**
     * objectTrackerType:Interface SIG Route
     *   - Choices: `Interface`, `SIG`, `Route`
     */
    declare public readonly objectTrackerType: pulumi.Output<string>;
    /**
     * IP address
     */
    declare public readonly routeIp: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly routeIpVariable: pulumi.Output<string | undefined>;
    /**
     * IP mask
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     *   - Default value: `0.0.0.0`
     */
    declare public readonly routeMask: pulumi.Output<string | undefined>;
    /**
     * Variable name
     */
    declare public readonly routeMaskVariable: pulumi.Output<string | undefined>;
    /**
     * The version of the Feature
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;
    /**
     * VPN
     *   - Range: `0`-`65530`
     */
    declare public readonly vpn: pulumi.Output<number | undefined>;
    /**
     * Variable name
     */
    declare public readonly vpnVariable: pulumi.Output<string | undefined>;

    /**
     * Create a ServiceObjectTrackerFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceObjectTrackerFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceObjectTrackerFeatureArgs | ServiceObjectTrackerFeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceObjectTrackerFeatureState | undefined;
            resourceInputs["description"] = state?.description;
            resourceInputs["featureProfileId"] = state?.featureProfileId;
            resourceInputs["interface"] = state?.interface;
            resourceInputs["interfaceVariable"] = state?.interfaceVariable;
            resourceInputs["name"] = state?.name;
            resourceInputs["objectTrackerId"] = state?.objectTrackerId;
            resourceInputs["objectTrackerIdVariable"] = state?.objectTrackerIdVariable;
            resourceInputs["objectTrackerType"] = state?.objectTrackerType;
            resourceInputs["routeIp"] = state?.routeIp;
            resourceInputs["routeIpVariable"] = state?.routeIpVariable;
            resourceInputs["routeMask"] = state?.routeMask;
            resourceInputs["routeMaskVariable"] = state?.routeMaskVariable;
            resourceInputs["version"] = state?.version;
            resourceInputs["vpn"] = state?.vpn;
            resourceInputs["vpnVariable"] = state?.vpnVariable;
        } else {
            const args = argsOrState as ServiceObjectTrackerFeatureArgs | undefined;
            if (args?.featureProfileId === undefined && !opts.urn) {
                throw new Error("Missing required property 'featureProfileId'");
            }
            if (args?.objectTrackerType === undefined && !opts.urn) {
                throw new Error("Missing required property 'objectTrackerType'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["featureProfileId"] = args?.featureProfileId;
            resourceInputs["interface"] = args?.interface;
            resourceInputs["interfaceVariable"] = args?.interfaceVariable;
            resourceInputs["name"] = args?.name;
            resourceInputs["objectTrackerId"] = args?.objectTrackerId;
            resourceInputs["objectTrackerIdVariable"] = args?.objectTrackerIdVariable;
            resourceInputs["objectTrackerType"] = args?.objectTrackerType;
            resourceInputs["routeIp"] = args?.routeIp;
            resourceInputs["routeIpVariable"] = args?.routeIpVariable;
            resourceInputs["routeMask"] = args?.routeMask;
            resourceInputs["routeMaskVariable"] = args?.routeMaskVariable;
            resourceInputs["vpn"] = args?.vpn;
            resourceInputs["vpnVariable"] = args?.vpnVariable;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceObjectTrackerFeature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceObjectTrackerFeature resources.
 */
export interface ServiceObjectTrackerFeatureState {
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * interface name
     */
    interface?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * Object tracker ID
     *   - Range: `1`-`1000`
     */
    objectTrackerId?: pulumi.Input<number>;
    /**
     * Variable name
     */
    objectTrackerIdVariable?: pulumi.Input<string>;
    /**
     * objectTrackerType:Interface SIG Route
     *   - Choices: `Interface`, `SIG`, `Route`
     */
    objectTrackerType?: pulumi.Input<string>;
    /**
     * IP address
     */
    routeIp?: pulumi.Input<string>;
    /**
     * Variable name
     */
    routeIpVariable?: pulumi.Input<string>;
    /**
     * IP mask
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     *   - Default value: `0.0.0.0`
     */
    routeMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    routeMaskVariable?: pulumi.Input<string>;
    /**
     * The version of the Feature
     */
    version?: pulumi.Input<number>;
    /**
     * VPN
     *   - Range: `0`-`65530`
     */
    vpn?: pulumi.Input<number>;
    /**
     * Variable name
     */
    vpnVariable?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServiceObjectTrackerFeature resource.
 */
export interface ServiceObjectTrackerFeatureArgs {
    /**
     * The description of the Feature
     */
    description?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * interface name
     */
    interface?: pulumi.Input<string>;
    /**
     * Variable name
     */
    interfaceVariable?: pulumi.Input<string>;
    /**
     * The name of the Feature
     */
    name?: pulumi.Input<string>;
    /**
     * Object tracker ID
     *   - Range: `1`-`1000`
     */
    objectTrackerId?: pulumi.Input<number>;
    /**
     * Variable name
     */
    objectTrackerIdVariable?: pulumi.Input<string>;
    /**
     * objectTrackerType:Interface SIG Route
     *   - Choices: `Interface`, `SIG`, `Route`
     */
    objectTrackerType: pulumi.Input<string>;
    /**
     * IP address
     */
    routeIp?: pulumi.Input<string>;
    /**
     * Variable name
     */
    routeIpVariable?: pulumi.Input<string>;
    /**
     * IP mask
     *   - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
     *   - Default value: `0.0.0.0`
     */
    routeMask?: pulumi.Input<string>;
    /**
     * Variable name
     */
    routeMaskVariable?: pulumi.Input<string>;
    /**
     * VPN
     *   - Range: `0`-`65530`
     */
    vpn?: pulumi.Input<number>;
    /**
     * Variable name
     */
    vpnVariable?: pulumi.Input<string>;
}
